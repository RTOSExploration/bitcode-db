; ModuleID = 'build/96b_wistrio/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230437 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230427 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230417 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230407 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230397 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230387 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233524 to i8*), void (i8*)* inttoptr (i32 134231695 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233548 to i8*), void (i8*)* inttoptr (i32 134231695 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233356 to i8*), void (i8*)* inttoptr (i32 134230377 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !179
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !208
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !305
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !352
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !373
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !378
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !384
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !521
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !557
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933596 } }], align 4, !dbg !567
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !572
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !592
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !700
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !853
@.str.36 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !822
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !805
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !778
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !794
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !824
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !838
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !840
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !842
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !844
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !846
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !848
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !858
@.str.38 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !883
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !960
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !949
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1001
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1102
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1142
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1095
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1150
@esc_state = internal global i32 0, align 4, !dbg !1169
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1177
@end = internal unnamed_addr global i8 0, align 1, !dbg !1179
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1173
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1175
@.str.53 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.52 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.50 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !874
@.str.56 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1181
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1427
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1405
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1391
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1339
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !872
@.str.1.59 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1429
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1409
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1407
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !870
@.str.2.60 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1442
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1413
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1411
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1365
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !868
@.str.3.61 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1444
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1417
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1415
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1374
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !866
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1446
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1421
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1419
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1380
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !864
@.str.5.62 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1448
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1425
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1423
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1389
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !878
@.str.66 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1450
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1688
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1636
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1690
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1621
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1623
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !876
@.str.1.69 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1699
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1638
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1731
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.69, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1632
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1634
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1640
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1648
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1671
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1674
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1677
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !933
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1718
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1720
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1722
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1724
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1726
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1733
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1842
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1844
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1840
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1811
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1846
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1337
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.59, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.60, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1363
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.61, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1372
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1378
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.62, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1387
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1933
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1957
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1960
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1963
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1967
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1973
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2182
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2191
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2198
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2203
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.118 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.121, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.122, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.124, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !2229
@.str.119 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.120 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.121 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.122 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.123 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.124 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2343
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2356
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2464
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2467
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2469
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2196
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2193
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2471
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2507
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2505
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2060
@.str.195 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2510
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3152 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3204, !srcloc !3205
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3206, !srcloc !3207
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3210, !srcloc !3213
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3230, !srcloc !3231
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3232, !srcloc !3233
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3254, !srcloc !3255
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3256, !srcloc !3257
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3260, !srcloc !3261
  ret void, !dbg !3262
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3265 {
  tail call void @console_getline_init() #26, !dbg !3270
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3271
  br label %1, !dbg !3272

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3273
  call void @llvm.dbg.value(metadata i8* %2, metadata !3268, metadata !DIExpression()), !dbg !3274
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3275
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3276
  %4 = add i32 %3, -1, !dbg !3277
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3278
  %6 = load i8, i8* %5, align 1, !dbg !3278
  %7 = zext i8 %6 to i32, !dbg !3278
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3279
  br label %1, !dbg !3272, !llvm.loop !3280
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3284, metadata !DIExpression()), !dbg !3285
  ret i32 0, !dbg !3286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3287 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3291, metadata !DIExpression()), !dbg !3292
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3293
  ret void, !dbg !3294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3295 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3298
  ret i8* %1, !dbg !3299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3300 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3312, metadata !DIExpression()), !dbg !3321
  call void @llvm.dbg.value(metadata i8* %0, metadata !3311, metadata !DIExpression()), !dbg !3321
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3322
  ret void, !dbg !3324
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3329, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.value(metadata i8* %1, metadata !3330, metadata !DIExpression()), !dbg !3331
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3332
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3332
  ret i32 %4, !dbg !3333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3334 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3346, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3343, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i8* %1, metadata !3344, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.value(metadata i8* %2, metadata !3345, metadata !DIExpression()), !dbg !3347
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3348
  ret void, !dbg !3349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3354, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i32 %1, metadata !3355, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i32 0, metadata !3356, metadata !DIExpression()), !dbg !3357
  %3 = icmp eq i32 %1, 0, !dbg !3358
  br i1 %3, label %13, label %4, !dbg !3361

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3356, metadata !DIExpression()), !dbg !3357
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3362
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3364
  %8 = load i8, i8* %7, align 1, !dbg !3364
  %9 = zext i8 %8 to i32, !dbg !3364
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3362
  %11 = add nuw i32 %5, 1, !dbg !3365
  call void @llvm.dbg.value(metadata i32 %11, metadata !3356, metadata !DIExpression()), !dbg !3357
  %12 = icmp eq i32 %11, %1, !dbg !3358
  br i1 %12, label %13, label %4, !dbg !3361, !llvm.loop !3366

13:                                               ; preds = %4, %2
  ret void, !dbg !3368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3369 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3373, metadata !DIExpression()), !dbg !3375
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3376
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3376
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3374, metadata !DIExpression()), !dbg !3377
  call void @llvm.va_start(i8* nonnull %3), !dbg !3378
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3379
  %5 = load i32, i32* %4, align 4, !dbg !3379
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3379
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3379
  call void @llvm.va_end(i8* nonnull %3), !dbg !3380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3381
  ret void, !dbg !3381
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3382 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3386, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i32 %1, metadata !3387, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i8* %2, metadata !3388, metadata !DIExpression()), !dbg !3391
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3392
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3392
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3389, metadata !DIExpression()), !dbg !3393
  call void @llvm.va_start(i8* nonnull %5), !dbg !3394
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3395
  %7 = load i32, i32* %6, align 4, !dbg !3395
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3395
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3395
  call void @llvm.dbg.value(metadata i32 %9, metadata !3390, metadata !DIExpression()), !dbg !3391
  call void @llvm.va_end(i8* nonnull %5), !dbg !3396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3397
  ret i32 %9, !dbg !3398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3399 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3406, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %0, metadata !3403, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %1, metadata !3404, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i8* %2, metadata !3405, metadata !DIExpression()), !dbg !3413
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3414
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3414
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3407, metadata !DIExpression()), !dbg !3415
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3416
  store i8* %0, i8** %7, align 4, !dbg !3416
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3416
  store i32 %1, i32* %8, align 4, !dbg !3416
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3416
  store i32 0, i32* %9, align 4, !dbg !3416
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3417
  %10 = load i32, i32* %9, align 4, !dbg !3418
  %11 = load i32, i32* %8, align 4, !dbg !3420
  %12 = icmp slt i32 %10, %11, !dbg !3421
  br i1 %12, label %13, label %15, !dbg !3422

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3423
  store i8 0, i8* %14, align 1, !dbg !3425
  br label %15, !dbg !3426

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3427
  ret i32 %10, !dbg !3428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3434, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3435, metadata !DIExpression()), !dbg !3436
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3437
  %4 = load i8*, i8** %3, align 4, !dbg !3437
  %5 = icmp eq i8* %4, null, !dbg !3439
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3440
  br i1 %5, label %12, label %8, !dbg !3441

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3442
  %10 = load i32, i32* %9, align 4, !dbg !3442
  %11 = icmp slt i32 %7, %10, !dbg !3443
  br i1 %11, label %15, label %12, !dbg !3444

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3445
  %14 = add nsw i32 %7, 1, !dbg !3447
  store i32 %14, i32* %13, align 4, !dbg !3447
  br label %25, !dbg !3448

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3449
  %17 = icmp eq i32 %7, %16, !dbg !3451
  br i1 %17, label %18, label %21, !dbg !3452

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3453
  store i32 %19, i32* %6, align 4, !dbg !3453
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3455
  store i8 0, i8* %20, align 1, !dbg !3456
  br label %25, !dbg !3457

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3458
  %23 = add nsw i32 %7, 1, !dbg !3460
  store i32 %23, i32* %6, align 4, !dbg !3460
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3461
  store i8 %22, i8* %24, align 1, !dbg !3462
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3463
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3464 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3474, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i8* %1, metadata !3475, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i8* %2, metadata !3476, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i8* %3, metadata !3477, metadata !DIExpression()), !dbg !3478
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3479
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3480
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3481
  unreachable, !dbg !3482
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3483 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3587
  ret %struct.k_thread* %1, !dbg !3588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3589 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3594, metadata !DIExpression()), !dbg !3595
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3596, !srcloc !3598
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3599
  ret void, !dbg !3600
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3601 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3602, !srcloc !3604
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3605
  ret %struct.k_thread* %1, !dbg !3606
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3607 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3618, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i8* %1, metadata !3619, metadata !DIExpression()), !dbg !3622
  %3 = icmp eq i8* %1, null, !dbg !3623
  br i1 %3, label %8, label %4, !dbg !3625

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3626
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3626
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3620, metadata !DIExpression()), !dbg !3622
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3627, !range !3628
  call void @llvm.dbg.value(metadata i32 %7, metadata !3621, metadata !DIExpression()), !dbg !3622
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3629
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3630
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3632 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3636, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i8* %1, metadata !3637, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i8* %1, metadata !3638, metadata !DIExpression()), !dbg !3640
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3641
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3639, metadata !DIExpression()), !dbg !3640
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3642
  %5 = ptrtoint i8* %4 to i32, !dbg !3643
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3643
  %7 = sub i32 %5, %6, !dbg !3643
  %8 = lshr i32 %7, 3, !dbg !3644
  ret i32 %8, !dbg !3645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3646 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3650, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %1, metadata !3651, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i1 %2, metadata !3652, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3655
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3656
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3653, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3654, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3655
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3657
  %6 = bitcast i8* %5 to i16*, !dbg !3657
  %7 = load i16, i16* %6, align 2, !dbg !3657
  %8 = and i16 %7, -2, !dbg !3661
  %9 = zext i1 %2 to i16, !dbg !3661
  %10 = or i16 %8, %9, !dbg !3661
  store i16 %10, i16* %6, align 2, !dbg !3657
  ret void, !dbg !3662
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3663 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3667, metadata !DIExpression()), !dbg !3669
  call void @llvm.dbg.value(metadata i32 %1, metadata !3668, metadata !DIExpression()), !dbg !3669
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3670
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3672
  br i1 %4, label %7, label %5, !dbg !3673

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3674
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3676
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3677
  br label %7, !dbg !3678

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3679, !range !3681
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3682
  br i1 %9, label %13, label %10, !dbg !3683

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3684
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3686, !range !3681
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3687
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %12, metadata !3668, metadata !DIExpression()), !dbg !3669
  br label %13, !dbg !3689

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3668, metadata !DIExpression()), !dbg !3669
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3690
  ret void, !dbg !3691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3692 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3696, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata i32 %1, metadata !3697, metadata !DIExpression()), !dbg !3698
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3699
  %4 = add i32 %3, %1, !dbg !3700
  ret i32 %4, !dbg !3701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3702 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3706, metadata !DIExpression()), !dbg !3708
  call void @llvm.dbg.value(metadata i32 %1, metadata !3707, metadata !DIExpression()), !dbg !3708
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3709
  %4 = and i32 %3, 1, !dbg !3710
  %5 = icmp ne i32 %4, 0, !dbg !3709
  ret i1 %5, !dbg !3711
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3712 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3714, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i32 %1, metadata !3715, metadata !DIExpression()), !dbg !3719
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3720, !range !3721
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3722
  call void @llvm.dbg.value(metadata i32 %4, metadata !3716, metadata !DIExpression()), !dbg !3723
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3724
  ret void, !dbg !3725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3726 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3730, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 %1, metadata !3731, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 %2, metadata !3732, metadata !DIExpression()), !dbg !3735
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3736
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3737
  %6 = add i32 %5, %4, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %6, metadata !3733, metadata !DIExpression()), !dbg !3735
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3739
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3740
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3741
  ret void, !dbg !3742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3743 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3745, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i32 %1, metadata !3746, metadata !DIExpression()), !dbg !3747
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3748
  %4 = sub i32 %1, %3, !dbg !3749
  ret i32 %4, !dbg !3750
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3751 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3753, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %1, metadata !3754, metadata !DIExpression()), !dbg !3758
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3759, !range !3721
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %4, metadata !3755, metadata !DIExpression()), !dbg !3761
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3762
  ret void, !dbg !3763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3764 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3768, metadata !DIExpression()), !dbg !3770
  call void @llvm.dbg.value(metadata i32 %1, metadata !3769, metadata !DIExpression()), !dbg !3770
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3771
  %4 = lshr i32 %3, 1, !dbg !3772
  ret i32 %4, !dbg !3773
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3774 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3778, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %1, metadata !3779, metadata !DIExpression()), !dbg !3781
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3782
  %4 = add i32 %1, 1, !dbg !3783
  %5 = sub i32 %4, %3, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %5, metadata !3780, metadata !DIExpression()), !dbg !3781
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3785, !range !3786
  %7 = sub nsw i32 31, %6, !dbg !3787
  ret i32 %7, !dbg !3788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3793, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %1, metadata !3794, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %2, metadata !3795, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3802
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3803
  %5 = load i32, i32* %4, align 4, !dbg !3803
  %6 = icmp eq i32 %5, 0, !dbg !3804
  br i1 %6, label %7, label %12, !dbg !3805

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3806
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3808
  %10 = load i32, i32* %9, align 4, !dbg !3809
  %11 = or i32 %10, %8, !dbg !3809
  store i32 %11, i32* %9, align 4, !dbg !3809
  store i32 %1, i32* %4, align 4, !dbg !3810
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3811
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3812
  br label %14, !dbg !3813

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3798, metadata !DIExpression()), !dbg !3814
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !3815, !range !3816
  call void @llvm.dbg.value(metadata i32 %13, metadata !3801, metadata !DIExpression()), !dbg !3814
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !3817
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !3818
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !3819
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !3820
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3822 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3824, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %1, metadata !3825, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %2, metadata !3826, metadata !DIExpression()), !dbg !3827
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !3828
  ret void, !dbg !3829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3830 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3832, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i32 %1, metadata !3833, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.value(metadata i32 %2, metadata !3834, metadata !DIExpression()), !dbg !3835
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !3836
  ret void, !dbg !3837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3838 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3840, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i32 %1, metadata !3841, metadata !DIExpression()), !dbg !3842
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !3843
  ret i32 %3, !dbg !3844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3845 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3849, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %1, metadata !3850, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %2, metadata !3851, metadata !DIExpression()), !dbg !3854
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3855
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3852, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3853, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3854
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3853, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3854
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3856
  call void @llvm.dbg.value(metadata i8* %5, metadata !3853, metadata !DIExpression()), !dbg !3854
  %6 = bitcast i8* %5 to i16*, !dbg !3857
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3860
  %8 = load i16, i16* %7, align 2, !dbg !3860
  %9 = zext i16 %8 to i32, !dbg !3860
  ret i32 %9, !dbg !3861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3862 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3866, metadata !DIExpression()), !dbg !3867
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3868
  ret %struct.chunk_unit_t* %2, !dbg !3869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3870 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3874, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %1, metadata !3875, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %2, metadata !3876, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %3, metadata !3877, metadata !DIExpression()), !dbg !3880
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3881
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3878, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3879, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3880
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3882
  call void @llvm.dbg.value(metadata i8* %6, metadata !3879, metadata !DIExpression()), !dbg !3880
  %7 = trunc i32 %3 to i16, !dbg !3883
  %8 = bitcast i8* %6 to i16*, !dbg !3886
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3887
  store i16 %7, i16* %9, align 2, !dbg !3888
  ret void, !dbg !3889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3894, metadata !DIExpression()), !dbg !3895
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !3896
  ret i32 %2, !dbg !3897
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3898 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3902, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %1, metadata !3903, metadata !DIExpression()), !dbg !3904
  %3 = add i32 %1, 4, !dbg !3905
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !3906
  ret i32 %4, !dbg !3907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3912, metadata !DIExpression()), !dbg !3913
  %2 = add i32 %0, 7, !dbg !3914
  %3 = lshr i32 %2, 3, !dbg !3915
  ret i32 %3, !dbg !3916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3917 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3921, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata i32 %1, metadata !3922, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata i32 %2, metadata !3923, metadata !DIExpression()), !dbg !3924
  %4 = shl i32 %2, 1, !dbg !3925
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !3926
  ret void, !dbg !3927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3928 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3930, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i32 %1, metadata !3931, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i32 %2, metadata !3932, metadata !DIExpression()), !dbg !3933
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !3934
  ret void, !dbg !3935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3936 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3938, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata i32 %1, metadata !3939, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata i32 %2, metadata !3940, metadata !DIExpression()), !dbg !3946
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3947
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3941, metadata !DIExpression()), !dbg !3946
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3948
  %6 = icmp eq i32 %5, %1, !dbg !3949
  br i1 %6, label %7, label %14, !dbg !3950

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3951
  %9 = xor i32 %8, -1, !dbg !3953
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3954
  %11 = load i32, i32* %10, align 4, !dbg !3955
  %12 = and i32 %11, %9, !dbg !3955
  store i32 %12, i32* %10, align 4, !dbg !3955
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3956
  store i32 0, i32* %13, align 4, !dbg !3957
  br label %17, !dbg !3958

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3959
  call void @llvm.dbg.value(metadata i32 %15, metadata !3942, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.value(metadata i32 %5, metadata !3945, metadata !DIExpression()), !dbg !3960
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3961
  store i32 %5, i32* %16, align 4, !dbg !3962
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !3963
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !3964
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3966 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3968, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.value(metadata i32 %1, metadata !3969, metadata !DIExpression()), !dbg !3970
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !3971
  ret i32 %3, !dbg !3972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3973 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3977, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i8* %1, metadata !3978, metadata !DIExpression()), !dbg !3984
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3985
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3985
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3979, metadata !DIExpression()), !dbg !3984
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %5, metadata !3980, metadata !DIExpression()), !dbg !3984
  %6 = ptrtoint i8* %1 to i32, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %6, metadata !3981, metadata !DIExpression()), !dbg !3984
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !3988
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3988
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %9, metadata !3982, metadata !DIExpression()), !dbg !3984
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !3990
  %11 = shl i32 %10, 3, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %11, metadata !3983, metadata !DIExpression()), !dbg !3984
  %12 = sub i32 %9, %6, !dbg !3992
  %13 = add i32 %12, %11, !dbg !3993
  ret i32 %13, !dbg !3994
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3995 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3999, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %1, metadata !4000, metadata !DIExpression()), !dbg !4005
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4006
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4006
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4001, metadata !DIExpression()), !dbg !4005
  %5 = icmp eq i32 %1, 0, !dbg !4007
  br i1 %5, label %19, label %6, !dbg !4009

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4010
  br i1 %7, label %19, label %8, !dbg !4011

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4012, !range !3628
  call void @llvm.dbg.value(metadata i32 %9, metadata !4003, metadata !DIExpression()), !dbg !4005
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %10, metadata !4004, metadata !DIExpression()), !dbg !4005
  %11 = icmp eq i32 %10, 0, !dbg !4014
  br i1 %11, label %19, label %12, !dbg !4016

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4017
  %14 = icmp ugt i32 %13, %9, !dbg !4019
  br i1 %14, label %15, label %17, !dbg !4020

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4021
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4023
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4024
  br label %17, !dbg !4025

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4026
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %18, metadata !4002, metadata !DIExpression()), !dbg !4005
  br label %19, !dbg !4028

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4005
  ret i8* %20, !dbg !4029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4030 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4034, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.value(metadata i32 %1, metadata !4035, metadata !DIExpression()), !dbg !4036
  %3 = lshr i32 %1, 3, !dbg !4037
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4038
  %5 = load i32, i32* %4, align 4, !dbg !4038
  %6 = icmp uge i32 %3, %5, !dbg !4039
  ret i1 %6, !dbg !4040
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4041 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4045, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.value(metadata i32 %1, metadata !4046, metadata !DIExpression()), !dbg !4060
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %3, metadata !4047, metadata !DIExpression()), !dbg !4060
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4048, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4060
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4062
  %5 = load i32, i32* %4, align 4, !dbg !4062
  %6 = icmp eq i32 %5, 0, !dbg !4063
  br i1 %6, label %19, label %7, !dbg !4064

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4065
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4066
  call void @llvm.dbg.value(metadata i32 %9, metadata !4052, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %8, metadata !4053, metadata !DIExpression()), !dbg !4067
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4068
  %11 = icmp ult i32 %10, %1, !dbg !4070
  br i1 %11, label %13, label %12, !dbg !4071

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4072
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4074
  store i32 %14, i32* %4, align 4, !dbg !4075
  %15 = add nsw i32 %9, -1, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %15, metadata !4052, metadata !DIExpression()), !dbg !4066
  %16 = icmp eq i32 %15, 0, !dbg !4076
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4077
  br i1 %18, label %19, label %7, !dbg !4077, !llvm.loop !4078

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4081
  %21 = load i32, i32* %20, align 4, !dbg !4081
  %22 = add nsw i32 %3, 1, !dbg !4082
  %23 = shl nsw i32 -1, %22, !dbg !4082
  %24 = and i32 %21, %23, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %24, metadata !4055, metadata !DIExpression()), !dbg !4060
  %25 = icmp eq i32 %24, 0, !dbg !4084
  br i1 %25, label %30, label %26, !dbg !4085

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4086, !range !3786
  call void @llvm.dbg.value(metadata i32 %27, metadata !4056, metadata !DIExpression()), !dbg !4087
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4088
  %29 = load i32, i32* %28, align 4, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %29, metadata !4059, metadata !DIExpression()), !dbg !4087
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4089
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4060
  ret i32 %31, !dbg !4090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4091 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4093, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %1, metadata !4094, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %2, metadata !4095, metadata !DIExpression()), !dbg !4099
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %4, metadata !4096, metadata !DIExpression()), !dbg !4099
  %5 = sub i32 %2, %1, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %5, metadata !4097, metadata !DIExpression()), !dbg !4099
  %6 = sub i32 %4, %5, !dbg !4102
  call void @llvm.dbg.value(metadata i32 %6, metadata !4098, metadata !DIExpression()), !dbg !4099
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4103
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4104
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4105
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4106
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4107
  ret void, !dbg !4108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4109 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4113, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %1, metadata !4114, metadata !DIExpression()), !dbg !4117
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4118
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4115, metadata !DIExpression()), !dbg !4117
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4119
  call void @llvm.dbg.value(metadata i8* %4, metadata !4116, metadata !DIExpression()), !dbg !4117
  ret i8* %4, !dbg !4120
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4121 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4125, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %1, metadata !4126, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %2, metadata !4127, metadata !DIExpression()), !dbg !4137
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4138
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4128, metadata !DIExpression()), !dbg !4137
  %6 = sub i32 0, %1, !dbg !4139
  %7 = and i32 %6, %1, !dbg !4140
  call void @llvm.dbg.value(metadata i32 %7, metadata !4130, metadata !DIExpression()), !dbg !4137
  %8 = icmp eq i32 %7, %1, !dbg !4141
  br i1 %8, label %13, label %9, !dbg !4143

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %10, metadata !4126, metadata !DIExpression()), !dbg !4137
  %11 = icmp ult i32 %7, 4, !dbg !4146
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4146
  br label %17, !dbg !4146

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4147
  br i1 %14, label %15, label %17, !dbg !4150

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4151
  br label %57, !dbg !4153

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4137
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4154
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4126, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %19, metadata !4129, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %18, metadata !4130, metadata !DIExpression()), !dbg !4137
  %21 = icmp eq i32 %2, 0, !dbg !4155
  br i1 %21, label %57, label %22, !dbg !4157

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4158
  br i1 %23, label %57, label %24, !dbg !4159

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4160
  %26 = add i32 %25, %20, !dbg !4161
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4162, !range !3628
  call void @llvm.dbg.value(metadata i32 %27, metadata !4131, metadata !DIExpression()), !dbg !4137
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %28, metadata !4132, metadata !DIExpression()), !dbg !4137
  %29 = icmp eq i32 %28, 0, !dbg !4164
  br i1 %29, label %57, label %30, !dbg !4166

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4167
  call void @llvm.dbg.value(metadata i8* %31, metadata !4133, metadata !DIExpression()), !dbg !4137
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4168
  %33 = ptrtoint i8* %32 to i32, !dbg !4168
  %34 = add i32 %20, -1, !dbg !4168
  %35 = add i32 %34, %33, !dbg !4168
  %36 = sub i32 0, %20, !dbg !4168
  %37 = and i32 %35, %36, !dbg !4168
  %38 = inttoptr i32 %37 to i8*, !dbg !4169
  %39 = sub i32 0, %18, !dbg !4170
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4170
  call void @llvm.dbg.value(metadata i8* %40, metadata !4133, metadata !DIExpression()), !dbg !4137
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4171
  %42 = ptrtoint i8* %41 to i32, !dbg !4171
  %43 = add i32 %42, 7, !dbg !4171
  %44 = and i32 %43, -8, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %44, metadata !4134, metadata !DIExpression()), !dbg !4137
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %45, metadata !4135, metadata !DIExpression()), !dbg !4137
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4173
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4174
  %48 = sub i32 %44, %47, !dbg !4174
  %49 = ashr exact i32 %48, 3, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %49, metadata !4136, metadata !DIExpression()), !dbg !4137
  %50 = icmp ugt i32 %45, %28, !dbg !4175
  br i1 %50, label %51, label %52, !dbg !4177

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4178
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4180
  br label %52, !dbg !4181

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4182
  %54 = icmp ugt i32 %53, %49, !dbg !4184
  br i1 %54, label %55, label %56, !dbg !4185

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4186
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4188
  br label %56, !dbg !4189

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4190
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4137
  ret i8* %58, !dbg !4191
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4192 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4196, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i8* %1, metadata !4197, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %2, metadata !4198, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %3, metadata !4199, metadata !DIExpression()), !dbg !4215
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4216
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4216
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4200, metadata !DIExpression()), !dbg !4215
  %7 = icmp eq i8* %1, null, !dbg !4217
  br i1 %7, label %8, label %10, !dbg !4219

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4220
  br label %59, !dbg !4222

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4223
  br i1 %11, label %12, label %13, !dbg !4225

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4226
  br label %59, !dbg !4228

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4229
  br i1 %14, label %59, label %15, !dbg !4231

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4232, !range !3628
  call void @llvm.dbg.value(metadata i32 %16, metadata !4201, metadata !DIExpression()), !dbg !4215
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %17, metadata !4202, metadata !DIExpression()), !dbg !4215
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4234
  %19 = ptrtoint i8* %1 to i32, !dbg !4235
  %20 = ptrtoint i8* %18 to i32, !dbg !4235
  %21 = sub i32 %19, %20, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %21, metadata !4203, metadata !DIExpression()), !dbg !4215
  %22 = add i32 %21, %3, !dbg !4236
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %23, metadata !4204, metadata !DIExpression()), !dbg !4215
  %24 = icmp eq i32 %2, 0, !dbg !4238
  br i1 %24, label %29, label %25, !dbg !4239

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4240
  %27 = and i32 %26, %19, !dbg !4241
  %28 = icmp eq i32 %27, 0, !dbg !4241
  br i1 %28, label %29, label %49, !dbg !4242

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4243
  %31 = icmp eq i32 %23, %30, !dbg !4244
  br i1 %31, label %59, label %32, !dbg !4245

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4246
  br i1 %33, label %34, label %36, !dbg !4247

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4248
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4250
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4251
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4252
  br label %59, !dbg !4253

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4254
  br i1 %37, label %49, label %38, !dbg !4255

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4256
  %40 = add i32 %39, %30, !dbg !4257
  %41 = icmp ult i32 %40, %23, !dbg !4258
  br i1 %41, label %49, label %42, !dbg !4259

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %43, metadata !4205, metadata !DIExpression()), !dbg !4261
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4262
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4263
  %45 = icmp ult i32 %43, %44, !dbg !4265
  br i1 %45, label %46, label %48, !dbg !4266

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4267
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4269
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4270
  br label %48, !dbg !4271

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4272
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4273
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4274
  call void @llvm.dbg.value(metadata i8* %50, metadata !4211, metadata !DIExpression()), !dbg !4215
  %51 = icmp eq i8* %50, null, !dbg !4275
  br i1 %51, label %59, label %52, !dbg !4276

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4277, !range !3721
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4278
  %55 = sub i32 %54, %21, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %55, metadata !4212, metadata !DIExpression()), !dbg !4280
  %56 = icmp ult i32 %55, %3, !dbg !4281
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4281
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4282
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4283
  br label %59, !dbg !4284

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4215
  ret i8* %60, !dbg !4285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4286 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4290, metadata !DIExpression()), !dbg !4292
  call void @llvm.dbg.value(metadata i32 %1, metadata !4291, metadata !DIExpression()), !dbg !4292
  %3 = shl i32 %1, 3, !dbg !4293
  %4 = add i32 %3, -4, !dbg !4294
  ret i32 %4, !dbg !4295
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4296 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4300, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i8* %1, metadata !4301, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 %2, metadata !4302, metadata !DIExpression()), !dbg !4311
  %4 = add i32 %2, -4, !dbg !4312
  call void @llvm.dbg.value(metadata i32 %4, metadata !4302, metadata !DIExpression()), !dbg !4311
  %5 = ptrtoint i8* %1 to i32, !dbg !4313
  %6 = add i32 %5, 7, !dbg !4313
  %7 = and i32 %6, -8, !dbg !4313
  call void @llvm.dbg.value(metadata i32 %7, metadata !4303, metadata !DIExpression()), !dbg !4311
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4314
  %9 = ptrtoint i8* %8 to i32, !dbg !4314
  %10 = and i32 %9, -8, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %10, metadata !4304, metadata !DIExpression()), !dbg !4311
  %11 = sub i32 %10, %7, !dbg !4315
  %12 = lshr exact i32 %11, 3, !dbg !4316
  call void @llvm.dbg.value(metadata i32 %12, metadata !4305, metadata !DIExpression()), !dbg !4311
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4317
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4306, metadata !DIExpression()), !dbg !4311
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4318
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4319
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4320
  store i32 %12, i32* %15, align 8, !dbg !4321
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4322
  store i32 0, i32* %16, align 4, !dbg !4323
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %17, metadata !4307, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4311
  %18 = shl i32 %17, 2, !dbg !4325
  %19 = add i32 %18, 20, !dbg !4326
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %20, metadata !4308, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.value(metadata i32 0, metadata !4309, metadata !DIExpression()), !dbg !4328
  %21 = icmp slt i32 %17, 0, !dbg !4329
  br i1 %21, label %22, label %24, !dbg !4331

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4332
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4333
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4334
  %23 = sub i32 %12, %20, !dbg !4335
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4336
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4337
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4338
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4339
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4340
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4341
  ret void, !dbg !4342

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4309, metadata !DIExpression()), !dbg !4328
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4343
  store i32 0, i32* %26, align 4, !dbg !4345
  %27 = add nuw i32 %25, 1, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %27, metadata !4309, metadata !DIExpression()), !dbg !4328
  %28 = icmp eq i32 %25, %17, !dbg !4329
  br i1 %28, label %22, label %24, !dbg !4331, !llvm.loop !4347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4349 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4362, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4359, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %1, metadata !4360, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %2, metadata !4361, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %4, metadata !4363, metadata !DIExpression()), !dbg !4490
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4491
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4491
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4364, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata i32 0, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i1 undef, metadata !4370, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4490
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4493

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4493

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4494
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4362, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %30, metadata !4361, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %29, metadata !4368, metadata !DIExpression()), !dbg !4490
  %31 = load i8, i8* %30, align 1, !dbg !4495
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4493

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4495
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4496
  call void @llvm.dbg.value(metadata i8* %34, metadata !4361, metadata !DIExpression()), !dbg !4490
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %35, metadata !4372, metadata !DIExpression()), !dbg !4497
  %36 = icmp slt i32 %35, 0, !dbg !4498
  %37 = add i32 %29, 1, !dbg !4496
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %36, label %365, label %28, !llvm.loop !4500

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4502
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4377, metadata !DIExpression()), !dbg !4503
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4503
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4422, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4425, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8* %30, metadata !4428, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i32 -1, metadata !4429, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i32 -1, metadata !4430, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8* null, metadata !4431, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8* %14, metadata !4432, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8 0, metadata !4433, metadata !DIExpression()), !dbg !4504
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4505
  call void @llvm.dbg.value(metadata i8* %39, metadata !4361, metadata !DIExpression()), !dbg !4490
  %40 = load i24, i24* %15, align 8, !dbg !4506
  %41 = and i24 %40, 256, !dbg !4506
  %42 = icmp eq i24 %41, 0, !dbg !4506
  br i1 %42, label %51, label %43, !dbg !4508

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4509
  call void @llvm.dbg.value(metadata i8* %44, metadata !4362, metadata !DIExpression()), !dbg !4490
  %45 = bitcast i8* %27 to i32*, !dbg !4509
  %46 = load i32, i32* %45, align 4, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %46, metadata !4429, metadata !DIExpression()), !dbg !4504
  %47 = icmp slt i32 %46, 0, !dbg !4511
  br i1 %47, label %48, label %56, !dbg !4513

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4514
  store i24 %49, i24* %15, align 8, !dbg !4514
  %50 = sub nsw i32 0, %46, !dbg !4516
  call void @llvm.dbg.value(metadata i32 %50, metadata !4429, metadata !DIExpression()), !dbg !4504
  br label %56, !dbg !4517

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4518
  %53 = icmp eq i24 %52, 0, !dbg !4518
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4520
  br label %56, !dbg !4520

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4521
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4504
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4362, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %58, metadata !4429, metadata !DIExpression()), !dbg !4504
  %60 = and i24 %57, 1024, !dbg !4521
  %61 = icmp eq i24 %60, 0, !dbg !4521
  br i1 %61, label %69, label %62, !dbg !4522

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4523
  call void @llvm.dbg.value(metadata i8* %63, metadata !4362, metadata !DIExpression()), !dbg !4490
  %64 = bitcast i8* %59 to i32*, !dbg !4523
  %65 = load i32, i32* %64, align 4, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %65, metadata !4434, metadata !DIExpression()), !dbg !4524
  %66 = icmp slt i32 %65, 0, !dbg !4525
  br i1 %66, label %67, label %74, !dbg !4527

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4528
  store i24 %68, i24* %15, align 8, !dbg !4528
  br label %74, !dbg !4530

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4531
  %71 = icmp eq i24 %70, 0, !dbg !4531
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4533
  br label %74, !dbg !4533

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4534
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4504
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4504
  call void @llvm.dbg.value(metadata i8* %77, metadata !4362, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %76, metadata !4430, metadata !DIExpression()), !dbg !4504
  store i32 0, i32* %16, align 4, !dbg !4535
  store i32 0, i32* %17, align 8, !dbg !4536
  %78 = lshr i24 %75, 16, !dbg !4534
  call void @llvm.dbg.value(metadata i24 %78, metadata !4437, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4504
  %79 = lshr i24 %75, 11, !dbg !4537
  %80 = and i24 %79, 15, !dbg !4537
  %81 = zext i24 %80 to i32, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %81, metadata !4438, metadata !DIExpression()), !dbg !4504
  %82 = trunc i24 %78 to i3, !dbg !4538
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4538

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4539

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4542
  call void @llvm.dbg.value(metadata i8* %85, metadata !4362, metadata !DIExpression()), !dbg !4490
  %86 = bitcast i8* %77 to i32*, !dbg !4542
  %87 = load i32, i32* %86, align 4, !dbg !4542
  %88 = sext i32 %87 to i64, !dbg !4542
  store i64 %88, i64* %20, align 8, !dbg !4544
  br label %115, !dbg !4545

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4546
  call void @llvm.dbg.value(metadata i8* %90, metadata !4362, metadata !DIExpression()), !dbg !4490
  %91 = bitcast i8* %77 to i32*, !dbg !4546
  %92 = load i32, i32* %91, align 4, !dbg !4546
  %93 = sext i32 %92 to i64, !dbg !4546
  store i64 %93, i64* %20, align 8, !dbg !4549
  br label %115, !dbg !4550

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4551
  %96 = add i32 %95, 7, !dbg !4551
  %97 = and i32 %96, -8, !dbg !4551
  %98 = inttoptr i32 %97 to i8*, !dbg !4551
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4551
  call void @llvm.dbg.value(metadata i8* %99, metadata !4362, metadata !DIExpression()), !dbg !4490
  %100 = inttoptr i32 %97 to i64*, !dbg !4551
  %101 = load i64, i64* %100, align 8, !dbg !4551
  store i64 %101, i64* %20, align 8, !dbg !4552
  br label %115, !dbg !4553

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4554
  %104 = add i32 %103, 7, !dbg !4554
  %105 = and i32 %104, -8, !dbg !4554
  %106 = inttoptr i32 %105 to i8*, !dbg !4554
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %107, metadata !4362, metadata !DIExpression()), !dbg !4490
  %108 = inttoptr i32 %105 to i64*, !dbg !4554
  %109 = load i64, i64* %108, align 8, !dbg !4554
  store i64 %109, i64* %20, align 8, !dbg !4555
  br label %115, !dbg !4556

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4557
  call void @llvm.dbg.value(metadata i8* %111, metadata !4362, metadata !DIExpression()), !dbg !4490
  %112 = bitcast i8* %77 to i32*, !dbg !4557
  %113 = load i32, i32* %112, align 4, !dbg !4557
  %114 = sext i32 %113 to i64, !dbg !4558
  store i64 %114, i64* %20, align 8, !dbg !4559
  br label %115, !dbg !4560

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4561
  call void @llvm.dbg.value(metadata i8* %117, metadata !4362, metadata !DIExpression()), !dbg !4490
  %118 = trunc i24 %79 to i4, !dbg !4562
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4562

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4563
  %121 = ashr exact i64 %120, 56, !dbg !4563
  store i64 %121, i64* %20, align 8, !dbg !4566
  br label %177, !dbg !4567

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4568
  %124 = ashr exact i64 %123, 48, !dbg !4568
  store i64 %124, i64* %20, align 8, !dbg !4571
  br label %177, !dbg !4572

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4573

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %127, metadata !4362, metadata !DIExpression()), !dbg !4490
  %128 = bitcast i8* %77 to i32*, !dbg !4576
  %129 = load i32, i32* %128, align 4, !dbg !4576
  %130 = zext i32 %129 to i64, !dbg !4576
  store i64 %130, i64* %20, align 8, !dbg !4578
  br label %157, !dbg !4579

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4580
  call void @llvm.dbg.value(metadata i8* %132, metadata !4362, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %132, metadata !4362, metadata !DIExpression()), !dbg !4490
  %133 = bitcast i8* %77 to i32*, !dbg !4580
  %134 = load i32, i32* %133, align 4, !dbg !4580
  %135 = zext i32 %134 to i64, !dbg !4580
  store i64 %135, i64* %20, align 8, !dbg !4580
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4582
  %138 = add i32 %137, 7, !dbg !4582
  %139 = and i32 %138, -8, !dbg !4582
  %140 = inttoptr i32 %139 to i8*, !dbg !4582
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %141, metadata !4362, metadata !DIExpression()), !dbg !4490
  %142 = inttoptr i32 %139 to i64*, !dbg !4582
  %143 = load i64, i64* %142, align 8, !dbg !4582
  store i64 %143, i64* %20, align 8, !dbg !4583
  br label %157, !dbg !4584

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4585
  %146 = add i32 %145, 7, !dbg !4585
  %147 = and i32 %146, -8, !dbg !4585
  %148 = inttoptr i32 %147 to i8*, !dbg !4585
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4585
  call void @llvm.dbg.value(metadata i8* %149, metadata !4362, metadata !DIExpression()), !dbg !4490
  %150 = inttoptr i32 %147 to i64*, !dbg !4585
  %151 = load i64, i64* %150, align 8, !dbg !4585
  store i64 %151, i64* %20, align 8, !dbg !4586
  br label %157, !dbg !4587

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %153, metadata !4362, metadata !DIExpression()), !dbg !4490
  %154 = bitcast i8* %77 to i32*, !dbg !4588
  %155 = load i32, i32* %154, align 4, !dbg !4588
  %156 = zext i32 %155 to i64, !dbg !4589
  store i64 %156, i64* %20, align 8, !dbg !4590
  br label %157, !dbg !4591

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4592
  call void @llvm.dbg.value(metadata i8* %159, metadata !4362, metadata !DIExpression()), !dbg !4490
  %160 = trunc i24 %79 to i4, !dbg !4593
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4593

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4594
  store i64 %162, i64* %20, align 8, !dbg !4597
  br label %177, !dbg !4598

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4599
  store i64 %164, i64* %20, align 8, !dbg !4602
  br label %177, !dbg !4603

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4604
  %167 = add i32 %166, 7, !dbg !4604
  %168 = and i32 %167, -8, !dbg !4604
  %169 = inttoptr i32 %168 to i8*, !dbg !4604
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4604
  call void @llvm.dbg.value(metadata i8* %170, metadata !4362, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %170, metadata !4362, metadata !DIExpression()), !dbg !4490
  %171 = inttoptr i32 %168 to double*, !dbg !4604
  %172 = load double, double* %171, align 8, !dbg !4604
  store double %172, double* %19, align 8, !dbg !4604
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4608
  call void @llvm.dbg.value(metadata i8* %174, metadata !4362, metadata !DIExpression()), !dbg !4490
  %175 = bitcast i8* %77 to i8**, !dbg !4608
  %176 = load i8*, i8** %175, align 4, !dbg !4608
  store i8* %176, i8** %18, align 8, !dbg !4611
  br label %177, !dbg !4612

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4504
  call void @llvm.dbg.value(metadata i8* %178, metadata !4362, metadata !DIExpression()), !dbg !4490
  %179 = and i24 %75, 3, !dbg !4613
  %180 = icmp eq i24 %179, 0, !dbg !4613
  br i1 %180, label %185, label %181, !dbg !4613

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %182, metadata !4439, metadata !DIExpression()), !dbg !4615
  %183 = icmp slt i32 %182, 0, !dbg !4616
  %184 = add i32 %182, %29, !dbg !4614
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4618
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4619

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %188, metadata !4443, metadata !DIExpression()), !dbg !4621
  %189 = icmp slt i32 %188, 0, !dbg !4622
  %190 = add i32 %29, 1, !dbg !4620
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4624
  call void @llvm.dbg.value(metadata i8* %192, metadata !4431, metadata !DIExpression()), !dbg !4504
  %193 = icmp sgt i32 %76, -1, !dbg !4625
  br i1 %193, label %194, label %196, !dbg !4627

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %195, metadata !4446, metadata !DIExpression()), !dbg !4630
  br label %241, !dbg !4631

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %197, metadata !4446, metadata !DIExpression()), !dbg !4630
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4431, metadata !DIExpression()), !dbg !4504
  %199 = load i64, i64* %20, align 8, !dbg !4634
  %200 = trunc i64 %199 to i8, !dbg !4635
  store i8 %200, i8* %10, align 1, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %23, metadata !4432, metadata !DIExpression()), !dbg !4504
  br label %245, !dbg !4637

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4638
  %203 = icmp eq i24 %202, 0, !dbg !4638
  %204 = trunc i24 %75 to i8, !dbg !4640
  %205 = shl i8 %204, 1, !dbg !4640
  %206 = and i8 %205, 32, !dbg !4640
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4640
  call void @llvm.dbg.value(metadata i8 %207, metadata !4433, metadata !DIExpression()), !dbg !4504
  %208 = load i64, i64* %20, align 8, !dbg !4641
  call void @llvm.dbg.value(metadata i64 %208, metadata !4369, metadata !DIExpression()), !dbg !4490
  %209 = icmp slt i64 %208, 0, !dbg !4642
  br i1 %209, label %210, label %212, !dbg !4644

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4433, metadata !DIExpression()), !dbg !4504
  %211 = sub nsw i64 0, %208, !dbg !4645
  store i64 %211, i64* %20, align 8, !dbg !4647
  br label %212, !dbg !4648

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4504
  call void @llvm.dbg.value(metadata i8 %213, metadata !4433, metadata !DIExpression()), !dbg !4504
  %214 = load i64, i64* %20, align 8, !dbg !4649
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %215, metadata !4431, metadata !DIExpression()), !dbg !4504
  br label %216, !dbg !4651

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4652
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4653
  call void @llvm.dbg.value(metadata i8* %218, metadata !4431, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8 %217, metadata !4433, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.label(metadata !4489), !dbg !4654
  %219 = icmp sgt i32 %76, -1, !dbg !4655
  br i1 %219, label %222, label %220, !dbg !4656

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4657
  br label %245, !dbg !4656

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4659
  %224 = sub i32 %22, %223, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %224, metadata !4448, metadata !DIExpression()), !dbg !4660
  %225 = load i24, i24* %15, align 8, !dbg !4661
  %226 = and i24 %225, -65, !dbg !4661
  store i24 %226, i24* %15, align 8, !dbg !4661
  %227 = icmp ugt i32 %76, %224, !dbg !4662
  br i1 %227, label %228, label %245, !dbg !4664

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4665
  store i32 %229, i32* %16, align 4, !dbg !4667
  br label %245, !dbg !4668

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4669
  %232 = icmp eq i8* %231, null, !dbg !4671
  br i1 %232, label %245, label %233, !dbg !4672

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4673
  %235 = zext i32 %234 to i64, !dbg !4673
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %236, metadata !4431, metadata !DIExpression()), !dbg !4504
  %237 = load i24, i24* %15, align 8, !dbg !4676
  %238 = or i24 %237, 1048576, !dbg !4676
  store i24 %238, i24* %15, align 8, !dbg !4676
  store i8 120, i8* %21, align 1, !dbg !4677
  br label %216, !dbg !4678

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4679
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4682
  br label %363, !dbg !4683

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4684
  call void @llvm.dbg.value(metadata i32 %242, metadata !4446, metadata !DIExpression()), !dbg !4630
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4685
  call void @llvm.dbg.value(metadata i32 -1, metadata !4430, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i32 %29, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %192, metadata !4431, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8* %243, metadata !4432, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8 0, metadata !4433, metadata !DIExpression()), !dbg !4504
  %244 = icmp eq i8* %192, null, !dbg !4686
  br i1 %244, label %363, label %245, !dbg !4688, !llvm.loop !4500

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4657
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4504
  call void @llvm.dbg.value(metadata i32 0, metadata !4452, metadata !DIExpression()), !dbg !4504
  %250 = zext i8 %249 to i32, !dbg !4689
  %251 = icmp eq i8 %249, 0, !dbg !4691
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  call void @llvm.dbg.value(metadata i32 undef, metadata !4451, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  call void @llvm.dbg.value(metadata i32 undef, metadata !4451, metadata !DIExpression()), !dbg !4504
  %252 = icmp sgt i32 %58, 0, !dbg !4692
  br i1 %252, label %253, label %302, !dbg !4693

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4657
  %255 = icmp eq i24 %254, 0, !dbg !4657
  %256 = ptrtoint i8* %248 to i32, !dbg !4694
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  %257 = ptrtoint i8* %247 to i32, !dbg !4694
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  %258 = xor i1 %251, true, !dbg !4695
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  %259 = sext i1 %258 to i32, !dbg !4695
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  %260 = lshr i24 %246, 19, !dbg !4696
  %261 = and i24 %260, 1, !dbg !4696
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4696
  %263 = zext i24 %262 to i32, !dbg !4696
  %264 = add i32 %257, %259, !dbg !4696
  %265 = add i32 %256, %263, !dbg !4696
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  %266 = and i24 %246, 4194304, !dbg !4697
  %267 = icmp eq i24 %266, 0, !dbg !4697
  %268 = load i32, i32* %16, align 4, !dbg !4699
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4504
  call void @llvm.dbg.value(metadata i32 undef, metadata !4451, metadata !DIExpression()), !dbg !4504
  %269 = load i32, i32* %17, align 8, !dbg !4700
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4700
  call void @llvm.dbg.value(metadata i32 undef, metadata !4451, metadata !DIExpression()), !dbg !4504
  %271 = add i32 %264, %58, !dbg !4700
  %272 = add i32 %265, %268, !dbg !4700
  %273 = add i32 %272, %270, !dbg !4701
  %274 = sub i32 %271, %273, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %274, metadata !4429, metadata !DIExpression()), !dbg !4504
  %275 = and i24 %246, 4, !dbg !4702
  %276 = icmp eq i24 %275, 0, !dbg !4702
  br i1 %276, label %277, label %302, !dbg !4703

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4453, metadata !DIExpression()), !dbg !4704
  %278 = and i24 %246, 64, !dbg !4705
  %279 = icmp eq i24 %278, 0, !dbg !4705
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4706
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4706
  %282 = select i1 %279, i32 32, i32 48, !dbg !4706
  br i1 %280, label %287, label %283, !dbg !4706

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %284, metadata !4458, metadata !DIExpression()), !dbg !4708
  %285 = icmp slt i32 %284, 0, !dbg !4709
  %286 = add i32 %29, 1, !dbg !4707
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4504
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %290, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8 undef, metadata !4453, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata i8 %288, metadata !4433, metadata !DIExpression()), !dbg !4504
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4711
  %292 = add i32 %291, -1, !dbg !4711
  br label %293, !dbg !4711

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4712
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %295, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %294, metadata !4429, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i32 %294, metadata !4429, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4504
  %296 = icmp sgt i32 %294, 0, !dbg !4713
  br i1 %296, label %297, label %302, !dbg !4711

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %298, metadata !4429, metadata !DIExpression()), !dbg !4504
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %299, metadata !4464, metadata !DIExpression()), !dbg !4716
  %300 = icmp slt i32 %299, 0, !dbg !4717
  %301 = add i32 %295, 1, !dbg !4715
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %300, label %361, label %293, !llvm.loop !4719

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4504
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4504
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %305, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %304, metadata !4429, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i8 %303, metadata !4433, metadata !DIExpression()), !dbg !4504
  %306 = icmp eq i8 %303, 0, !dbg !4721
  br i1 %306, label %312, label %307, !dbg !4722

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4723
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4724
  call void @llvm.dbg.value(metadata i32 %309, metadata !4467, metadata !DIExpression()), !dbg !4725
  %310 = icmp slt i32 %309, 0, !dbg !4726
  %311 = add i32 %305, 1, !dbg !4724
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %313, metadata !4368, metadata !DIExpression()), !dbg !4490
  %314 = lshr i24 %246, 20, !dbg !4728
  %315 = lshr i24 %246, 19, !dbg !4729
  %316 = or i24 %314, %315, !dbg !4730
  %317 = and i24 %316, 1, !dbg !4730
  %318 = icmp eq i24 %317, 0, !dbg !4730
  br i1 %318, label %323, label %319, !dbg !4731

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %320, metadata !4471, metadata !DIExpression()), !dbg !4733
  %321 = icmp slt i32 %320, 0, !dbg !4734
  %322 = add i32 %313, 1, !dbg !4732
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %324, metadata !4368, metadata !DIExpression()), !dbg !4490
  %325 = and i24 %246, 1048576, !dbg !4736
  %326 = icmp eq i24 %325, 0, !dbg !4736
  br i1 %326, label %333, label %327, !dbg !4737

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4738
  %329 = zext i8 %328 to i32, !dbg !4738
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %330, metadata !4477, metadata !DIExpression()), !dbg !4739
  %331 = icmp slt i32 %330, 0, !dbg !4740
  %332 = add i32 %324, 1, !dbg !4738
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %334, metadata !4368, metadata !DIExpression()), !dbg !4490
  %335 = load i32, i32* %16, align 4, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %335, metadata !4452, metadata !DIExpression()), !dbg !4504
  br label %336, !dbg !4743

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4744
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %338, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %337, metadata !4452, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4504
  %339 = icmp sgt i32 %337, 0, !dbg !4745
  br i1 %339, label %340, label %345, !dbg !4743

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4746
  call void @llvm.dbg.value(metadata i32 %341, metadata !4452, metadata !DIExpression()), !dbg !4504
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %342, metadata !4481, metadata !DIExpression()), !dbg !4748
  %343 = icmp slt i32 %342, 0, !dbg !4749
  %344 = add i32 %338, 1, !dbg !4747
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %343, label %361, label %336, !llvm.loop !4751

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %346, metadata !4484, metadata !DIExpression()), !dbg !4754
  %347 = icmp slt i32 %346, 0, !dbg !4755
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %349, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %304, metadata !4429, metadata !DIExpression()), !dbg !4504
  %350 = icmp sgt i32 %304, 0, !dbg !4757
  br i1 %350, label %351, label %363, !dbg !4758

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4758
  %353 = add i32 %352, %338, !dbg !4758
  br label %354, !dbg !4758

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %355, metadata !4429, metadata !DIExpression()), !dbg !4504
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %356, metadata !4486, metadata !DIExpression()), !dbg !4760
  %357 = icmp slt i32 %356, 0, !dbg !4761
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4763
  call void @llvm.dbg.value(metadata i32 undef, metadata !4368, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4490
  call void @llvm.dbg.value(metadata i32 %359, metadata !4429, metadata !DIExpression()), !dbg !4504
  %360 = icmp sgt i32 %355, 1, !dbg !4757
  br i1 %360, label %354, label %363, !dbg !4758, !llvm.loop !4764

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4501
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4494
  call void @llvm.dbg.value(metadata i32 %364, metadata !4368, metadata !DIExpression()), !dbg !4490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4501
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4490
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4766
  ret i32 %366, !dbg !4766
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4767 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4771, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata i8* %1, metadata !4772, metadata !DIExpression()), !dbg !4773
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4774
  store i24 0, i24* %3, align 4, !dbg !4774
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4774
  store i8 0, i8* %4, align 1, !dbg !4774
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4774
  store i32 0, i32* %5, align 4, !dbg !4774
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4774
  store i32 0, i32* %6, align 4, !dbg !4774
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %7, metadata !4772, metadata !DIExpression()), !dbg !4773
  %8 = load i8, i8* %7, align 1, !dbg !4776
  %9 = icmp eq i8 %8, 37, !dbg !4778
  br i1 %9, label %10, label %12, !dbg !4779

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %11, metadata !4772, metadata !DIExpression()), !dbg !4773
  store i8 37, i8* %4, align 1, !dbg !4782
  br label %18, !dbg !4783

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4784
  call void @llvm.dbg.value(metadata i8* %13, metadata !4772, metadata !DIExpression()), !dbg !4773
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4785
  call void @llvm.dbg.value(metadata i8* %14, metadata !4772, metadata !DIExpression()), !dbg !4773
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %15, metadata !4772, metadata !DIExpression()), !dbg !4773
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %16, metadata !4772, metadata !DIExpression()), !dbg !4773
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %17, metadata !4772, metadata !DIExpression()), !dbg !4773
  br label %18, !dbg !4789

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4773
  ret i8* %19, !dbg !4790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4791 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4795, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata i8* %1, metadata !4796, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata i8* %2, metadata !4797, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata i8* %3, metadata !4798, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata i32 0, metadata !4799, metadata !DIExpression()), !dbg !4802
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4803

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4804
  call void @llvm.dbg.value(metadata i32 %9, metadata !4799, metadata !DIExpression()), !dbg !4802
  call void @llvm.dbg.value(metadata i8* %8, metadata !4797, metadata !DIExpression()), !dbg !4802
  %10 = icmp ult i8* %8, %3, !dbg !4805
  br i1 %10, label %11, label %13, !dbg !4806

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4807
  br label %17, !dbg !4806

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4808

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4809
  %16 = icmp eq i8 %15, 0, !dbg !4808
  br i1 %16, label %24, label %17, !dbg !4803

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4807
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4810
  call void @llvm.dbg.value(metadata i8* %19, metadata !4797, metadata !DIExpression()), !dbg !4802
  %20 = zext i8 %18 to i32, !dbg !4811
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %21, metadata !4800, metadata !DIExpression()), !dbg !4813
  %22 = icmp slt i32 %21, 0, !dbg !4814
  %23 = add i32 %9, 1, !dbg !4816
  call void @llvm.dbg.value(metadata i32 undef, metadata !4799, metadata !DIExpression()), !dbg !4802
  br i1 %22, label %24, label %7, !llvm.loop !4817

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4802
  ret i32 %25, !dbg !4819
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4820 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4824, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4825, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata i8* %2, metadata !4826, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata i8* %3, metadata !4827, metadata !DIExpression()), !dbg !4834
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4835
  %6 = load i8, i8* %5, align 1, !dbg !4835
  %7 = zext i8 %6 to i32, !dbg !4836
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !4837
  %9 = icmp eq i32 %8, 0, !dbg !4837
  call void @llvm.dbg.value(metadata i1 %9, metadata !4828, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4834
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %10, metadata !4829, metadata !DIExpression()), !dbg !4834
  %11 = ptrtoint i8* %3 to i32, !dbg !4839
  %12 = ptrtoint i8* %2 to i32, !dbg !4839
  %13 = sub i32 %11, %12, !dbg !4839
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %14, metadata !4831, metadata !DIExpression()), !dbg !4834
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4841

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4834
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4824, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata i8* %18, metadata !4831, metadata !DIExpression()), !dbg !4834
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4842
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %25, metadata !4832, metadata !DIExpression()), !dbg !4844
  %26 = icmp ult i32 %25, 10, !dbg !4845
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4846
  %28 = add i32 %27, %25, !dbg !4844
  %29 = trunc i32 %28 to i8, !dbg !4846
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %30, metadata !4831, metadata !DIExpression()), !dbg !4834
  store i8 %29, i8* %30, align 1, !dbg !4848
  call void @llvm.dbg.value(metadata i64 %22, metadata !4824, metadata !DIExpression()), !dbg !4834
  %31 = icmp uge i64 %19, %15, !dbg !4849
  %32 = icmp ugt i8* %30, %2, !dbg !4850
  %33 = and i1 %31, %32, !dbg !4850
  br i1 %33, label %17, label %34, !dbg !4851, !llvm.loop !4852

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4854
  %36 = load i24, i24* %35, align 4, !dbg !4854
  %37 = and i24 %36, 32, !dbg !4854
  %38 = icmp eq i24 %37, 0, !dbg !4854
  br i1 %38, label %44, label %39, !dbg !4856

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4857

40:                                               ; preds = %39
  br label %41, !dbg !4859

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4863
  store i24 %43, i24* %35, align 4, !dbg !4863
  br label %44, !dbg !4864

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4864
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4865 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4871, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8* %1, metadata !4872, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i32 %2, metadata !4873, metadata !DIExpression()), !dbg !4874
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4875
  %5 = load i24, i24* %4, align 4, !dbg !4875
  %6 = lshr i24 %5, 11, !dbg !4875
  %7 = and i24 %6, 15, !dbg !4875
  %8 = zext i24 %7 to i32, !dbg !4875
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4876

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4877
  store i32 %2, i32* %10, align 4, !dbg !4879
  br label %28, !dbg !4880

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4881
  store i8 %12, i8* %1, align 1, !dbg !4882
  br label %28, !dbg !4883

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4884
  %15 = bitcast i8* %1 to i16*, !dbg !4885
  store i16 %14, i16* %15, align 2, !dbg !4886
  br label %28, !dbg !4887

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4888
  store i32 %2, i32* %17, align 4, !dbg !4889
  br label %28, !dbg !4890

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4891
  %20 = bitcast i8* %1 to i64*, !dbg !4892
  store i64 %19, i64* %20, align 8, !dbg !4893
  br label %28, !dbg !4894

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4895
  %23 = bitcast i8* %1 to i64*, !dbg !4896
  store i64 %22, i64* %23, align 8, !dbg !4897
  br label %28, !dbg !4898

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4899
  store i32 %2, i32* %25, align 4, !dbg !4900
  br label %28, !dbg !4901

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4902
  store i32 %2, i32* %27, align 4, !dbg !4903
  br label %28, !dbg !4904

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4905
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4909, metadata !DIExpression()), !dbg !4910
  %2 = add i32 %0, -65, !dbg !4911
  %3 = icmp ult i32 %2, 26, !dbg !4912
  %4 = zext i1 %3 to i32, !dbg !4912
  ret i32 %4, !dbg !4913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4914 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4918, metadata !DIExpression()), !dbg !4919
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4920

2:                                                ; preds = %1
  br label %4, !dbg !4921

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4923

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4924
  ret i32 %5, !dbg !4925
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4926 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4928, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.value(metadata i8* %1, metadata !4929, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.value(metadata i8 1, metadata !4930, metadata !DIExpression()), !dbg !4931
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4932

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4930, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.value(metadata i8* %5, metadata !4929, metadata !DIExpression()), !dbg !4931
  %6 = load i8, i8* %5, align 1, !dbg !4933
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4935

7:                                                ; preds = %4
  br label %11, !dbg !4936

8:                                                ; preds = %4
  br label %11, !dbg !4938

9:                                                ; preds = %4
  br label %11, !dbg !4939

10:                                               ; preds = %4
  br label %11, !dbg !4940

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4941
  %14 = or i24 %13, %12, !dbg !4941
  store i24 %14, i24* %3, align 4, !dbg !4941
  call void @llvm.dbg.value(metadata i8 poison, metadata !4930, metadata !DIExpression()), !dbg !4931
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4929, metadata !DIExpression()), !dbg !4931
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4930, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.value(metadata i8* %15, metadata !4929, metadata !DIExpression()), !dbg !4931
  %17 = load i24, i24* %3, align 4, !dbg !4942
  %18 = and i24 %17, 68, !dbg !4944
  %19 = icmp eq i24 %18, 68, !dbg !4944
  br i1 %19, label %20, label %22, !dbg !4944

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4945
  store i24 %21, i24* %3, align 4, !dbg !4945
  br label %22, !dbg !4947

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4948
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4949 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4951, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.value(metadata i8* %1, metadata !4952, metadata !DIExpression()), !dbg !4955
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4956
  %5 = load i24, i24* %4, align 4, !dbg !4957
  %6 = or i24 %5, 128, !dbg !4957
  store i24 %6, i24* %4, align 4, !dbg !4957
  call void @llvm.dbg.value(metadata i8* %1, metadata !4952, metadata !DIExpression()), !dbg !4955
  %7 = load i8, i8* %1, align 1, !dbg !4958
  %8 = icmp eq i8 %7, 42, !dbg !4960
  br i1 %8, label %9, label %12, !dbg !4961

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4962
  store i24 %10, i24* %4, align 4, !dbg !4962
  call void @llvm.dbg.value(metadata i8* %1, metadata !4952, metadata !DIExpression()), !dbg !4955
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4964
  call void @llvm.dbg.value(metadata i8* %11, metadata !4952, metadata !DIExpression()), !dbg !4955
  store i8* %11, i8** %3, align 4, !dbg !4964
  br label %29, !dbg !4965

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4953, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.value(metadata i8** %3, metadata !4952, metadata !DIExpression(DW_OP_deref)), !dbg !4955
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !4966
  call void @llvm.dbg.value(metadata i32 %13, metadata !4954, metadata !DIExpression()), !dbg !4955
  %14 = load i8*, i8** %3, align 4, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %14, metadata !4952, metadata !DIExpression()), !dbg !4955
  %15 = icmp eq i8* %14, %1, !dbg !4969
  br i1 %15, label %29, label %16, !dbg !4970

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4971
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4973
  store i32 %13, i32* %18, align 4, !dbg !4974
  %19 = lshr i32 %13, 31, !dbg !4975
  %20 = lshr i24 %17, 1, !dbg !4976
  %21 = and i24 %20, 1, !dbg !4976
  %22 = zext i24 %21 to i32, !dbg !4976
  %23 = or i32 %19, %22, !dbg !4976
  %24 = trunc i32 %23 to i24, !dbg !4976
  %25 = shl nuw nsw i24 %24, 1, !dbg !4976
  %26 = and i24 %17, -131, !dbg !4976
  %27 = or i24 %26, 128, !dbg !4976
  %28 = or i24 %25, %27, !dbg !4976
  store i24 %28, i24* %4, align 4, !dbg !4976
  br label %29, !dbg !4977

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4955
  ret i8* %30, !dbg !4978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4979 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4981, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i8* %1, metadata !4982, metadata !DIExpression()), !dbg !4984
  %4 = load i8, i8* %1, align 1, !dbg !4985
  %5 = icmp eq i8 %4, 46, !dbg !4986
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4987
  %7 = load i24, i24* %6, align 4, !dbg !4988
  %8 = select i1 %5, i24 512, i24 0, !dbg !4988
  %9 = and i24 %7, -513, !dbg !4988
  %10 = or i24 %9, %8, !dbg !4988
  store i24 %10, i24* %6, align 4, !dbg !4988
  br i1 %5, label %11, label %32, !dbg !4989

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4982, metadata !DIExpression()), !dbg !4984
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4990
  call void @llvm.dbg.value(metadata i8* %12, metadata !4982, metadata !DIExpression()), !dbg !4984
  store i8* %12, i8** %3, align 4, !dbg !4990
  %13 = load i8, i8* %12, align 1, !dbg !4991
  %14 = icmp eq i8 %13, 42, !dbg !4993
  br i1 %14, label %15, label %18, !dbg !4994

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4995
  store i24 %16, i24* %6, align 4, !dbg !4995
  call void @llvm.dbg.value(metadata i8* %12, metadata !4982, metadata !DIExpression()), !dbg !4984
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4997
  call void @llvm.dbg.value(metadata i8* %17, metadata !4982, metadata !DIExpression()), !dbg !4984
  store i8* %17, i8** %3, align 4, !dbg !4997
  br label %32, !dbg !4998

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4982, metadata !DIExpression(DW_OP_deref)), !dbg !4984
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %19, metadata !4983, metadata !DIExpression()), !dbg !4984
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5000
  store i32 %19, i32* %20, align 4, !dbg !5001
  %21 = lshr i32 %19, 31, !dbg !5002
  %22 = load i24, i24* %6, align 4, !dbg !5003
  %23 = lshr i24 %22, 1, !dbg !5003
  %24 = and i24 %23, 1, !dbg !5003
  %25 = zext i24 %24 to i32, !dbg !5003
  %26 = or i32 %21, %25, !dbg !5003
  %27 = trunc i32 %26 to i24, !dbg !5003
  %28 = shl nuw nsw i24 %27, 1, !dbg !5003
  %29 = and i24 %22, -3, !dbg !5003
  %30 = or i24 %28, %29, !dbg !5003
  store i24 %30, i24* %6, align 4, !dbg !5003
  %31 = load i8*, i8** %3, align 4, !dbg !5004
  call void @llvm.dbg.value(metadata i8* %31, metadata !4982, metadata !DIExpression()), !dbg !4984
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4984
  ret i8* %33, !dbg !5005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5006 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5008, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.value(metadata i8* %1, metadata !5009, metadata !DIExpression()), !dbg !5010
  %3 = load i8, i8* %1, align 1, !dbg !5011
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5012

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5013
  call void @llvm.dbg.value(metadata i8* %5, metadata !5009, metadata !DIExpression()), !dbg !5010
  %6 = load i8, i8* %5, align 1, !dbg !5016
  %7 = icmp eq i8 %6, 104, !dbg !5017
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5018
  %9 = load i24, i24* %8, align 4, !dbg !5018
  %10 = and i24 %9, -30721, !dbg !5018
  br i1 %7, label %11, label %14, !dbg !5019

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5020
  store i24 %12, i24* %8, align 4, !dbg !5020
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5022
  call void @llvm.dbg.value(metadata i8* %13, metadata !5009, metadata !DIExpression()), !dbg !5010
  br label %56, !dbg !5023

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5024
  store i24 %15, i24* %8, align 4, !dbg !5024
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %17, metadata !5009, metadata !DIExpression()), !dbg !5010
  %18 = load i8, i8* %17, align 1, !dbg !5028
  %19 = icmp eq i8 %18, 108, !dbg !5029
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5030
  %21 = load i24, i24* %20, align 4, !dbg !5030
  %22 = and i24 %21, -30721, !dbg !5030
  br i1 %19, label %23, label %26, !dbg !5031

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5032
  store i24 %24, i24* %20, align 4, !dbg !5032
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %25, metadata !5009, metadata !DIExpression()), !dbg !5010
  br label %56, !dbg !5035

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5036
  store i24 %27, i24* %20, align 4, !dbg !5036
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5038
  %30 = load i24, i24* %29, align 4, !dbg !5039
  %31 = and i24 %30, -30721, !dbg !5039
  %32 = or i24 %31, 10240, !dbg !5039
  store i24 %32, i24* %29, align 4, !dbg !5039
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %33, metadata !5009, metadata !DIExpression()), !dbg !5010
  br label %56, !dbg !5041

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5042
  %36 = load i24, i24* %35, align 4, !dbg !5043
  %37 = and i24 %36, -30721, !dbg !5043
  %38 = or i24 %37, 12288, !dbg !5043
  store i24 %38, i24* %35, align 4, !dbg !5043
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5044
  call void @llvm.dbg.value(metadata i8* %39, metadata !5009, metadata !DIExpression()), !dbg !5010
  br label %56, !dbg !5045

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5046
  %42 = load i24, i24* %41, align 4, !dbg !5047
  %43 = and i24 %42, -30721, !dbg !5047
  %44 = or i24 %43, 14336, !dbg !5047
  store i24 %44, i24* %41, align 4, !dbg !5047
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5048
  call void @llvm.dbg.value(metadata i8* %45, metadata !5009, metadata !DIExpression()), !dbg !5010
  br label %56, !dbg !5049

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5050
  %48 = load i24, i24* %47, align 4, !dbg !5051
  %49 = and i24 %48, -30723, !dbg !5051
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5052
  call void @llvm.dbg.value(metadata i8* %50, metadata !5009, metadata !DIExpression()), !dbg !5010
  %51 = or i24 %49, 16386, !dbg !5053
  store i24 %51, i24* %47, align 4, !dbg !5053
  br label %56, !dbg !5054

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5055
  %54 = load i24, i24* %53, align 4, !dbg !5056
  %55 = and i24 %54, -30721, !dbg !5056
  store i24 %55, i24* %53, align 4, !dbg !5056
  br label %56, !dbg !5057

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5009, metadata !DIExpression()), !dbg !5010
  ret i8* %57, !dbg !5058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5059 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5061, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %1, metadata !5062, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 0, metadata !5063, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8* %1, metadata !5062, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5066
  %3 = load i8, i8* %1, align 1, !dbg !5067
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5068
  store i8 %3, i8* %4, align 1, !dbg !5069
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5070

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5071

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5072
  %9 = load i24, i24* %8, align 4, !dbg !5072
  %10 = and i24 %9, -458753, !dbg !5072
  %11 = or i24 %10, %7, !dbg !5072
  call void @llvm.dbg.label(metadata !5064), !dbg !5073
  %12 = and i24 %9, 30720, !dbg !5074
  %13 = icmp eq i24 %12, 16384, !dbg !5074
  %14 = zext i1 %13 to i24, !dbg !5076
  %15 = or i24 %11, %14, !dbg !5076
  %16 = icmp eq i8 %3, 99, !dbg !5077
  br i1 %16, label %17, label %43, !dbg !5079

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5080
  %19 = icmp ne i24 %18, 0, !dbg !5080
  call void @llvm.dbg.value(metadata i1 %19, metadata !5063, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5066
  br label %43, !dbg !5082

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5083
  %22 = load i24, i24* %21, align 4, !dbg !5084
  %23 = and i24 %22, -458753, !dbg !5084
  %24 = or i24 %23, 262144, !dbg !5084
  call void @llvm.dbg.value(metadata i8 1, metadata !5063, metadata !DIExpression()), !dbg !5066
  br label %43, !dbg !5085

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5088
  %27 = load i24, i24* %26, align 4, !dbg !5089
  %28 = and i24 %27, -458753, !dbg !5089
  %29 = or i24 %28, 196608, !dbg !5089
  %30 = and i24 %27, 30720, !dbg !5090
  %31 = icmp eq i24 %30, 16384, !dbg !5090
  br label %43, !dbg !5092

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5093
  %34 = load i24, i24* %33, align 4, !dbg !5094
  %35 = and i24 %34, -458753, !dbg !5094
  %36 = or i24 %35, 196608, !dbg !5094
  %37 = and i24 %34, 30720, !dbg !5095
  %38 = icmp ne i24 %37, 0, !dbg !5095
  br label %43, !dbg !5097

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5098
  %41 = load i24, i24* %40, align 4, !dbg !5099
  %42 = or i24 %41, 1, !dbg !5099
  br label %43, !dbg !5100

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5101
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5102
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %48, metadata !5062, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i8 poison, metadata !5063, metadata !DIExpression()), !dbg !5066
  %49 = lshr i24 %44, 1, !dbg !5101
  %50 = and i24 %49, 1, !dbg !5101
  %51 = zext i24 %50 to i32, !dbg !5101
  %52 = or i32 %51, %47, !dbg !5101
  %53 = trunc i32 %52 to i24, !dbg !5101
  %54 = shl nuw nsw i24 %53, 1, !dbg !5101
  %55 = and i24 %44, -3, !dbg !5101
  %56 = or i24 %54, %55, !dbg !5101
  store i24 %56, i24* %46, align 4, !dbg !5101
  ret i8* %48, !dbg !5104
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5105 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5110, metadata !DIExpression()), !dbg !5113
  %2 = load i8*, i8** %0, align 4, !dbg !5114
  call void @llvm.dbg.value(metadata i8* %2, metadata !5111, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i32 0, metadata !5112, metadata !DIExpression()), !dbg !5113
  %3 = load i8, i8* %2, align 1, !dbg !5115
  %4 = zext i8 %3 to i32, !dbg !5116
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5117
  %6 = icmp eq i32 %5, 0, !dbg !5118
  br i1 %6, label %19, label %7, !dbg !5118

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i8* %10, metadata !5111, metadata !DIExpression()), !dbg !5113
  %11 = mul i32 %9, 10, !dbg !5119
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5121
  call void @llvm.dbg.value(metadata i8* %12, metadata !5111, metadata !DIExpression()), !dbg !5113
  %13 = add i32 %11, -48, !dbg !5122
  %14 = add i32 %13, %8, !dbg !5123
  call void @llvm.dbg.value(metadata i32 %14, metadata !5112, metadata !DIExpression()), !dbg !5113
  %15 = load i8, i8* %12, align 1, !dbg !5115
  %16 = zext i8 %15 to i32, !dbg !5116
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5117
  %18 = icmp eq i32 %17, 0, !dbg !5118
  br i1 %18, label %19, label %7, !dbg !5118, !llvm.loop !5124

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5113
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5113
  store i8* %20, i8** %0, align 4, !dbg !5126
  ret i32 %21, !dbg !5127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5130, metadata !DIExpression()), !dbg !5131
  %2 = add i32 %0, -48, !dbg !5132
  %3 = icmp ult i32 %2, 10, !dbg !5133
  %4 = zext i1 %3 to i32, !dbg !5133
  ret i32 %4, !dbg !5134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5135 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5137, !srcloc !5138
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5139, !srcloc !5140
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5141, !srcloc !5142
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5143, !srcloc !5144
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5145, !srcloc !5146
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5147, !srcloc !5148
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5149, !srcloc !5150
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5151, !srcloc !5152
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5153, !srcloc !5154
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5155, !srcloc !5156
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5157, !srcloc !5158
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5159, !srcloc !5160
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5161, !srcloc !5162
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5163, !srcloc !5164
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5165, !srcloc !5166
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5167, !srcloc !5168
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5169, !srcloc !5170
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5171, !srcloc !5172
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5173, !srcloc !5174
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5175, !srcloc !5176
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5177, !srcloc !5178
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5179, !srcloc !5180
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5181, !srcloc !5182
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5183, !srcloc !5184
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5185, !srcloc !5186
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5187, !srcloc !5188
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5189, !srcloc !5190
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #25, !dbg !5191, !srcloc !5192
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5193, !srcloc !5194
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5195, !srcloc !5196
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5197, !srcloc !5198
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !5199, !srcloc !5200
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5201, !srcloc !5202
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #25, !dbg !5203, !srcloc !5204
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #25, !dbg !5205, !srcloc !5206
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #25, !dbg !5207, !srcloc !5208
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5209, !srcloc !5210
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #25, !dbg !5211, !srcloc !5212
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #25, !dbg !5213, !srcloc !5214
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #25, !dbg !5215, !srcloc !5216
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #25, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #25, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #25, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #25, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5685, !srcloc !5686
  ret void, !dbg !5687
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5690, metadata !DIExpression()), !dbg !5692
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5693, !srcloc !5702
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %3, metadata !5699, metadata !DIExpression()) #25, !dbg !5703
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()) #25, !dbg !5703
  call void @llvm.dbg.value(metadata i32 %3, metadata !5691, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 %3, metadata !5704, metadata !DIExpression()) #25, !dbg !5709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5711, !srcloc !5712
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5713
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !5714
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #27, !dbg !5715
  ret i32 0, !dbg !5716
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !5717 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5722, metadata !DIExpression()), !dbg !5724
  %2 = bitcast i32* %1 to i8*, !dbg !5725
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5725
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5723, metadata !DIExpression()), !dbg !5726
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5727
  %4 = or i32 %3, 268435456, !dbg !5727
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5727
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5728
  %6 = and i32 %5, 268435456, !dbg !5728
  store volatile i32 %6, i32* %1, align 4, !dbg !5729
  %7 = load volatile i32, i32* %1, align 4, !dbg !5730
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5731
  ret void, !dbg !5731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !5732 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5735, metadata !DIExpression()), !dbg !5736
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5737
  %2 = and i32 %1, -6145, !dbg !5737
  %3 = or i32 %2, 2048, !dbg !5737
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5737
  ret void, !dbg !5738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5741, metadata !DIExpression()), !dbg !5742
  ret i32 0, !dbg !5743
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !354 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5744
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5746
  br i1 %2, label %5, label %3, !dbg !5747

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5748
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5748
  br label %5, !dbg !5751

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5752
  call void @llvm.dbg.value(metadata i8* %6, metadata !359, metadata !DIExpression()), !dbg !5753
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5754
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5755
  ret i8* %7, !dbg !5756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5757 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5766, metadata !DIExpression()), !dbg !5768
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5769, !srcloc !5771
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5772
  ret i8* %1, !dbg !5773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5774 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.value(metadata i32 0, metadata !5776, metadata !DIExpression()), !dbg !5777
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5778
  call void @llvm.dbg.value(metadata i32 0, metadata !5776, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5777
  call void @llvm.dbg.value(metadata i32 0, metadata !5776, metadata !DIExpression()), !dbg !5777
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5778
  call void @llvm.dbg.value(metadata i32 0, metadata !5776, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5777
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5783
  ret void, !dbg !5784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5834, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5835, metadata !DIExpression()), !dbg !5836
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5837
  ret void, !dbg !5838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5839 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5856, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5857, metadata !DIExpression()), !dbg !5859
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5860
  %4 = load i32, i32* %3, align 4, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %4, metadata !5858, metadata !DIExpression()), !dbg !5859
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !5861
  ret void, !dbg !5862
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5863 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5867, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.value(metadata i8* %0, metadata !5868, metadata !DIExpression()), !dbg !5870
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5871
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5871
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5869, metadata !DIExpression()), !dbg !5872
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5872
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5873
  %5 = bitcast i8* %4 to i32*, !dbg !5873
  %6 = load i32, i32* %5, align 4, !dbg !5873
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5874
  store i32 %6, i32* %7, align 4, !dbg !5875
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !5876
  unreachable, !dbg !5877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5881, metadata !DIExpression()), !dbg !5882
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !5883
  ret void, !dbg !5884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5889, metadata !DIExpression()), !dbg !5890
  %2 = icmp sgt i32 %0, -1, !dbg !5891
  br i1 %2, label %3, label %8, !dbg !5893

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5894, !srcloc !5896
  %4 = and i32 %0, 31, !dbg !5897
  %5 = shl nuw i32 1, %4, !dbg !5898
  %6 = lshr i32 %0, 5, !dbg !5899
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5900
  store volatile i32 %5, i32* %7, align 4, !dbg !5901
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5902, !srcloc !5903
  br label %8, !dbg !5904

8:                                                ; preds = %3, %1
  ret void, !dbg !5905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5908, metadata !DIExpression()), !dbg !5909
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !5910
  ret void, !dbg !5911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5914, metadata !DIExpression()), !dbg !5915
  %2 = icmp sgt i32 %0, -1, !dbg !5916
  br i1 %2, label %3, label %8, !dbg !5918

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5919
  %5 = shl nuw i32 1, %4, !dbg !5921
  %6 = lshr i32 %0, 5, !dbg !5922
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5923
  store volatile i32 %5, i32* %7, align 4, !dbg !5924
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5925, !srcloc !5929
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5930, !srcloc !5933
  br label %8, !dbg !5934

8:                                                ; preds = %3, %1
  ret void, !dbg !5935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !5936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5940, metadata !DIExpression()), !dbg !5941
  %2 = lshr i32 %0, 5, !dbg !5942
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5943
  %4 = load volatile i32, i32* %3, align 4, !dbg !5943
  %5 = and i32 %0, 31, !dbg !5944
  %6 = shl nuw i32 1, %5, !dbg !5944
  %7 = and i32 %4, %6, !dbg !5945
  ret i32 %7, !dbg !5946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !5947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5951, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i32 %1, metadata !5952, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.value(metadata i32 %2, metadata !5953, metadata !DIExpression()), !dbg !5954
  %4 = add i32 %1, 1, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %4, metadata !5952, metadata !DIExpression()), !dbg !5954
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !5958
  ret void, !dbg !5959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !5960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i32 %1, metadata !5965, metadata !DIExpression()), !dbg !5966
  %3 = trunc i32 %1 to i8, !dbg !5967
  %4 = shl i8 %3, 4, !dbg !5967
  %5 = and i32 %0, 15, !dbg !5969
  %6 = add nsw i32 %5, -4, !dbg !5969
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5969
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5969
  %9 = icmp slt i32 %0, 0, !dbg !5969
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5969
  store volatile i8 %4, i8* %10, align 1, !dbg !5967
  ret void, !dbg !5970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5973, metadata !DIExpression()), !dbg !5974
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !5975
  ret void, !dbg !5976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5977 {
  tail call void @z_SysNmiOnReset() #26, !dbg !5979
  tail call void @z_arm_int_exit() #26, !dbg !5980
  ret void, !dbg !5981
}

; Function Attrs: optsize
declare !dbg !5982 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5983 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5985 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !5987
  tail call void @z_bss_zero() #26, !dbg !5988
  tail call void @z_data_copy() #26, !dbg !5989
  tail call void @z_arm_interrupt_init() #26, !dbg !5990
  tail call void @z_cstart() #29, !dbg !5991
  unreachable, !dbg !5991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5992 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5993
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5994, !srcloc !5997
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5998, !srcloc !6001
  ret void, !dbg !6002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6006, metadata !DIExpression()), !dbg !6007
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6008
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6009
  store i32 %0, i32* %3, align 4, !dbg !6010
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6011
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6012
  store i32 %4, i32* %5, align 4, !dbg !6013
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6014
  %7 = or i32 %6, 268435456, !dbg !6014
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6014
  call void @llvm.dbg.value(metadata i32 0, metadata !6015, metadata !DIExpression()) #25, !dbg !6018
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6020, !srcloc !6021
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6022
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6023
  %10 = load i32, i32* %9, align 4, !dbg !6023
  ret i32 %10, !dbg !6024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6135, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6136, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i8* %2, metadata !6137, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6138, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i8* %4, metadata !6139, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i8* %5, metadata !6140, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata i8* %6, metadata !6141, metadata !DIExpression()), !dbg !6143
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6144
  call void @llvm.dbg.value(metadata i8* %8, metadata !6142, metadata !DIExpression()), !dbg !6143
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6145
  %10 = bitcast i8* %9 to i32*, !dbg !6145
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6146
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6147
  %12 = bitcast i8* %8 to i32*, !dbg !6148
  store i32 %11, i32* %12, align 4, !dbg !6149
  %13 = ptrtoint i8* %4 to i32, !dbg !6150
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6151
  %15 = bitcast i8* %14 to i32*, !dbg !6151
  store i32 %13, i32* %15, align 4, !dbg !6152
  %16 = ptrtoint i8* %5 to i32, !dbg !6153
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6154
  %18 = bitcast i8* %17 to i32*, !dbg !6154
  store i32 %16, i32* %18, align 4, !dbg !6155
  %19 = ptrtoint i8* %6 to i32, !dbg !6156
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6157
  %21 = bitcast i8* %20 to i32*, !dbg !6157
  store i32 %19, i32* %21, align 4, !dbg !6158
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6159
  %23 = bitcast i8* %22 to i32*, !dbg !6159
  store i32 16777216, i32* %23, align 4, !dbg !6160
  %24 = ptrtoint i8* %8 to i32, !dbg !6161
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6162
  store i32 %24, i32* %25, align 8, !dbg !6163
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6164
  store i32 0, i32* %26, align 4, !dbg !6165
  ret void, !dbg !6166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6172, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 %1, metadata !6173, metadata !DIExpression()), !dbg !6178
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6179
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6174, metadata !DIExpression()), !dbg !6178
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6180
  br i1 %4, label %19, label %5, !dbg !6182

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6177, metadata !DIExpression()), !dbg !6178
  %6 = icmp eq i32 %0, -22, !dbg !6183
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6183
  %8 = load i32, i32* %7, align 4, !dbg !6183
  br i1 %6, label %16, label %9, !dbg !6185

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6183
  %11 = icmp ule i32 %10, %0, !dbg !6183
  %12 = icmp ugt i32 %8, %0, !dbg !6183
  %13 = and i1 %12, %11, !dbg !6183
  %14 = icmp ugt i32 %8, %1, !dbg !6183
  %15 = and i1 %14, %13, !dbg !6183
  br i1 %15, label %18, label %19, !dbg !6183

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6183
  br i1 %17, label %18, label %19, !dbg !6185

18:                                               ; preds = %9, %16
  br label %19, !dbg !6186

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6178
  ret i32 %20, !dbg !6188
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6193, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i8* %1, metadata !6194, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6195, metadata !DIExpression()), !dbg !6196
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6197
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6198
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6199, !srcloc !6200
  unreachable, !dbg !6201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6202 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6220, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata i32 %1, metadata !6221, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata i32 %2, metadata !6222, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6223, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata i32 0, metadata !6224, metadata !DIExpression()), !dbg !6230
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6231
  %9 = and i32 %8, 511, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %9, metadata !6225, metadata !DIExpression()), !dbg !6230
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6233
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6233
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6234
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6234
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6229, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6236, metadata !DIExpression()) #25, !dbg !6239
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6241, !srcloc !6242
  call void @llvm.dbg.value(metadata i8* %6, metadata !6227, metadata !DIExpression(DW_OP_deref)), !dbg !6230
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6243
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6228, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata i8* %5, metadata !6226, metadata !DIExpression(DW_OP_deref)), !dbg !6230
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %12, metadata !6224, metadata !DIExpression()), !dbg !6230
  %13 = load i8, i8* %5, align 1, !dbg !6245, !range !6247
  call void @llvm.dbg.value(metadata i8 %13, metadata !6226, metadata !DIExpression()), !dbg !6230
  %14 = icmp eq i8 %13, 0, !dbg !6245
  br i1 %14, label %15, label %32, !dbg !6248

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6249
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6250
  %18 = load i8, i8* %6, align 1, !dbg !6251, !range !6247
  call void @llvm.dbg.value(metadata i8 %18, metadata !6227, metadata !DIExpression()), !dbg !6230
  %19 = icmp eq i8 %18, 0, !dbg !6251
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6253
  %21 = load i32, i32* %20, align 4, !dbg !6253
  br i1 %19, label %27, label %22, !dbg !6254

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6255
  %24 = icmp eq i32 %23, 0, !dbg !6258
  br i1 %24, label %25, label %31, !dbg !6259

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6260
  br label %29, !dbg !6262

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6263
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6253
  br label %31, !dbg !6265

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6265
  br label %32, !dbg !6266

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6266
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6266
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6266
  ret void, !dbg !6266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6272, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %1, metadata !6273, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i32 %2, metadata !6274, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8* %3, metadata !6275, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata i8 0, metadata !6276, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6277, metadata !DIExpression()), !dbg !6278
  store i8 0, i8* %3, align 1, !dbg !6279
  %5 = icmp ult i32 %2, -16777216, !dbg !6280
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6282
  br i1 %8, label %16, label %9, !dbg !6282

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6283
  %11 = icmp eq i32 %10, 0, !dbg !6283
  br i1 %11, label %12, label %13, !dbg !6285

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6277, metadata !DIExpression()), !dbg !6278
  store i8 1, i8* %3, align 1, !dbg !6288
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6278
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6277, metadata !DIExpression()), !dbg !6278
  br label %16, !dbg !6291

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6278
  ret %struct.__esf* %17, !dbg !6292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6293 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6297, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 %1, metadata !6298, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %2, metadata !6299, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 0, metadata !6300, metadata !DIExpression()), !dbg !6301
  store i8 0, i8* %2, align 1, !dbg !6302
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6303

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6304
  call void @llvm.dbg.value(metadata i32 %5, metadata !6300, metadata !DIExpression()), !dbg !6301
  br label %11, !dbg !6306

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6307
  call void @llvm.dbg.value(metadata i32 %7, metadata !6300, metadata !DIExpression()), !dbg !6301
  br label %11, !dbg !6308

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6309
  call void @llvm.dbg.value(metadata i32 0, metadata !6300, metadata !DIExpression()), !dbg !6301
  br label %11, !dbg !6310

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6311
  call void @llvm.dbg.value(metadata i32 0, metadata !6300, metadata !DIExpression()), !dbg !6301
  br label %11, !dbg !6312

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6313
  br label %11, !dbg !6314

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6316 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6320, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 0, metadata !6322, metadata !DIExpression()), !dbg !6323
  store i8 0, i8* %1, align 1, !dbg !6324
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6325
  %4 = and i32 %3, 2, !dbg !6327
  %5 = icmp eq i32 %4, 0, !dbg !6328
  br i1 %5, label %6, label %33, !dbg !6329

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6330
  %8 = icmp sgt i32 %7, -1, !dbg !6332
  br i1 %8, label %9, label %33, !dbg !6333

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6334
  %11 = and i32 %10, 1073741824, !dbg !6336
  %12 = icmp eq i32 %11, 0, !dbg !6337
  br i1 %12, label %33, label %13, !dbg !6338

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6339
  br i1 %14, label %15, label %18, !dbg !6342

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6343
  %17 = load i32, i32* %16, align 4, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %17, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %33, !dbg !6345

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6346
  %20 = and i32 %19, 255, !dbg !6348
  %21 = icmp eq i32 %20, 0, !dbg !6349
  br i1 %21, label %24, label %22, !dbg !6350

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %23, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %33, !dbg !6353

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6354
  %26 = and i32 %25, 65280, !dbg !6356
  %27 = icmp eq i32 %26, 0, !dbg !6357
  br i1 %27, label %29, label %28, !dbg !6358

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6359
  call void @llvm.dbg.value(metadata i32 0, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %33, !dbg !6361

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6362
  %31 = icmp ult i32 %30, 65536, !dbg !6364
  br i1 %31, label %33, label %32, !dbg !6365

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6366
  call void @llvm.dbg.value(metadata i32 0, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %33, !dbg !6368

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6323
  call void @llvm.dbg.value(metadata i32 %34, metadata !6322, metadata !DIExpression()), !dbg !6323
  ret i32 %34, !dbg !6369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6370 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6372, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 %1, metadata !6373, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i8* %2, metadata !6374, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 0, metadata !6375, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 -22, metadata !6376, metadata !DIExpression()), !dbg !6385
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6386
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6388
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6390
  %7 = and i32 %6, 2, !dbg !6391
  %8 = icmp eq i32 %7, 0, !dbg !6392
  br i1 %8, label %19, label %9, !dbg !6393

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %10, metadata !6377, metadata !DIExpression()), !dbg !6395
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6396
  %12 = and i32 %11, 128, !dbg !6398
  %13 = icmp eq i32 %12, 0, !dbg !6399
  br i1 %13, label %19, label %14, !dbg !6400

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6376, metadata !DIExpression()), !dbg !6385
  %15 = icmp eq i32 %1, 0, !dbg !6401
  br i1 %15, label %19, label %16, !dbg !6404

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6405
  %18 = and i32 %17, -129, !dbg !6405
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6405
  br label %19, !dbg !6407

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6385
  call void @llvm.dbg.value(metadata i32 %20, metadata !6376, metadata !DIExpression()), !dbg !6385
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6408
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6410
  %23 = and i32 %22, 16, !dbg !6411
  %24 = icmp eq i32 %23, 0, !dbg !6411
  br i1 %24, label %25, label %29, !dbg !6412

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6413
  %27 = and i32 %26, 2, !dbg !6414
  %28 = icmp eq i32 %27, 0, !dbg !6414
  br i1 %28, label %38, label %29, !dbg !6415

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6416
  %31 = and i32 %30, 2048, !dbg !6417
  %32 = icmp eq i32 %31, 0, !dbg !6417
  br i1 %32, label %38, label %33, !dbg !6418

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !6419
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #26, !dbg !6420
  call void @llvm.dbg.value(metadata i32 %35, metadata !6380, metadata !DIExpression()), !dbg !6421
  %36 = icmp eq i32 %35, 0, !dbg !6422
  br i1 %36, label %38, label %37, !dbg !6424

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !6425, metadata !DIExpression()) #25, !dbg !6428
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #25, !dbg !6431, !srcloc !6432
  call void @llvm.dbg.value(metadata i32 2, metadata !6375, metadata !DIExpression()), !dbg !6385
  br label %38, !dbg !6433

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !6385
  call void @llvm.dbg.value(metadata i32 %39, metadata !6375, metadata !DIExpression()), !dbg !6385
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6434
  %41 = or i32 %40, 255, !dbg !6434
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6434
  store i8 0, i8* %2, align 1, !dbg !6435
  ret i32 %39, !dbg !6436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !6437 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6441, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 %0, metadata !6442, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i8* %1, metadata !6443, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 0, metadata !6444, metadata !DIExpression()), !dbg !6448
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6449
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6451
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6453
  %6 = and i32 %5, 512, !dbg !6454
  %7 = icmp eq i32 %6, 0, !dbg !6454
  br i1 %7, label %18, label %8, !dbg !6455

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6456
  call void @llvm.dbg.value(metadata i32 %9, metadata !6445, metadata !DIExpression()), !dbg !6457
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6458
  %11 = and i32 %10, 32768, !dbg !6460
  %12 = icmp ne i32 %11, 0, !dbg !6461
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6462
  br i1 %14, label %15, label %18, !dbg !6462

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6463
  %17 = and i32 %16, -32769, !dbg !6463
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6463
  br label %18, !dbg !6467

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6468
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6470
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6472
  %22 = or i32 %21, 65280, !dbg !6472
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6472
  store i8 0, i8* %1, align 1, !dbg !6473
  ret void, !dbg !6474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #16 !dbg !6475 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6481, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 0, metadata !6482, metadata !DIExpression()), !dbg !6483
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6484
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6486
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6488
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6490
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6492
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6494
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6496
  %8 = or i32 %7, -65536, !dbg !6496
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6496
  ret void, !dbg !6497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6498 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6502, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i8* %0, metadata !6503, metadata !DIExpression()), !dbg !6504
  store i8 0, i8* %0, align 1, !dbg !6505
  ret void, !dbg !6506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6507 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6511, metadata !DIExpression()), !dbg !6514
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6515
  %3 = load i32, i32* %2, align 4, !dbg !6515
  %4 = inttoptr i32 %3 to i16*, !dbg !6516
  call void @llvm.dbg.value(metadata i16* %4, metadata !6512, metadata !DIExpression()), !dbg !6514
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6517
  %6 = or i32 %5, 256, !dbg !6517
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6517
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6518, !srcloc !6521
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6522, !srcloc !6525
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6526
  %8 = load i16, i16* %7, align 2, !dbg !6527
  call void @llvm.dbg.value(metadata i16 %8, metadata !6513, metadata !DIExpression()), !dbg !6514
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6528
  %10 = and i32 %9, -257, !dbg !6528
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6528
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6529, !srcloc !6521
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6531, !srcloc !6525
  %11 = icmp eq i16 %8, -8446, !dbg !6533
  ret i1 %11, !dbg !6535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !6536 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6537
  %2 = or i32 %1, 16, !dbg !6537
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6537
  ret void, !dbg !6538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !6539 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6542, metadata !DIExpression()), !dbg !6543
  br label %1, !dbg !6544

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6542, metadata !DIExpression()), !dbg !6543
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6546
  %3 = add nuw nsw i32 %2, 1, !dbg !6549
  call void @llvm.dbg.value(metadata i32 %3, metadata !6542, metadata !DIExpression()), !dbg !6543
  %4 = icmp eq i32 %3, 45, !dbg !6550
  br i1 %4, label %5, label %1, !dbg !6544, !llvm.loop !6551

5:                                                ; preds = %1
  ret void, !dbg !6553
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #16 !dbg !6554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6556, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.value(metadata i32 1, metadata !6557, metadata !DIExpression()), !dbg !6558
  %2 = and i32 %0, 15, !dbg !6559
  %3 = add nsw i32 %2, -4, !dbg !6559
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6559
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6559
  %6 = icmp slt i32 %0, 0, !dbg !6559
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6559
  store volatile i8 16, i8* %7, align 1, !dbg !6560
  ret void, !dbg !6562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6669, metadata !DIExpression()), !dbg !6670
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6671
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6673
  br i1 %3, label %4, label %12, !dbg !6674

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6675, !srcloc !6689
  call void @llvm.dbg.value(metadata i32 %5, metadata !6680, metadata !DIExpression()) #25, !dbg !6690
  %6 = icmp eq i32 %5, 0, !dbg !6691
  br i1 %6, label %12, label %7, !dbg !6692

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6693
  %9 = or i32 %8, 268435456, !dbg !6693
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6693
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6695
  %11 = and i32 %10, -32769, !dbg !6695
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6695
  br label %12, !dbg !6696

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6697
  ret void, !dbg !6698
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6699 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6700
  ret void, !dbg !6701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !386 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !6702
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !6702
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6703
  %3 = load i32, i32* %2, align 4, !dbg !6703
  %4 = add i32 %3, -64, !dbg !6705
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !6702
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6706
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6707
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6708
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !6702
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6709
  ret void, !dbg !6710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6711 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6712
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6713, !srcloc !6716
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6717, !srcloc !6720
  ret void, !dbg !6721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6722 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6723, !srcloc !6726
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6727
  ret void, !dbg !6728
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !6729 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6744, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i8 %1, metadata !6745, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32 %2, metadata !6746, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.value(metadata i32 %3, metadata !6747, metadata !DIExpression()), !dbg !6748
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6749
  ret void, !dbg !6751
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6752 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6757, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.value(metadata i8 %1, metadata !6758, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.value(metadata i32 undef, metadata !6759, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.value(metadata i32 undef, metadata !6760, metadata !DIExpression()), !dbg !6762
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6763
  call void @llvm.dbg.value(metadata i8 %3, metadata !6761, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6762
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %4, metadata !6761, metadata !DIExpression()), !dbg !6762
  %5 = trunc i32 %4 to i8, !dbg !6765
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6766
  ret void, !dbg !6767
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !6768 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6772, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8 %1, metadata !6773, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8 %2, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i1 %3, metadata !6775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6778
  %5 = zext i8 %2 to i32, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %5, metadata !6777, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6776, metadata !DIExpression()), !dbg !6778
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6777, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6776, metadata !DIExpression()), !dbg !6778
  %7 = icmp eq i8 %1, 0, !dbg !6780
  br i1 %7, label %29, label %8, !dbg !6783

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6777, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %10, metadata !6776, metadata !DIExpression()), !dbg !6778
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6784
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6787
  %13 = load i32, i32* %12, align 4, !dbg !6787
  %14 = icmp eq i32 %13, 0, !dbg !6788
  br i1 %14, label %25, label %15, !dbg !6789

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6790

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6792
  %18 = icmp eq i32 %17, 0, !dbg !6792
  br i1 %18, label %29, label %19, !dbg !6793

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6794
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6795
  call void @llvm.dbg.value(metadata i32 %21, metadata !6777, metadata !DIExpression()), !dbg !6778
  %22 = icmp eq i32 %21, -22, !dbg !6796
  br i1 %22, label %29, label %23, !dbg !6798

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6799
  call void @llvm.dbg.value(metadata i32 %24, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %25, !dbg !6800

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6778
  call void @llvm.dbg.value(metadata i32 %26, metadata !6777, metadata !DIExpression()), !dbg !6778
  %27 = add nuw nsw i32 %10, 1, !dbg !6801
  call void @llvm.dbg.value(metadata i32 %27, metadata !6776, metadata !DIExpression()), !dbg !6778
  %28 = icmp eq i32 %27, %6, !dbg !6780
  br i1 %28, label %29, label %8, !dbg !6783, !llvm.loop !6802

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6778
  ret i32 %30, !dbg !6804
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6805 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6809, metadata !DIExpression()), !dbg !6811
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6812
  %3 = load i32, i32* %2, align 4, !dbg !6812
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6813, !range !3786
  %5 = icmp ult i32 %4, 2, !dbg !6813
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6814
  br i1 %7, label %8, label %15, !dbg !6814

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6815
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6816
  %11 = load i32, i32* %10, align 4, !dbg !6816
  %12 = and i32 %11, %9, !dbg !6817
  %13 = icmp eq i32 %12, 0, !dbg !6818
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6810, metadata !DIExpression()), !dbg !6811
  ret i32 %16, !dbg !6819
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6820 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6824, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6825, metadata !DIExpression()), !dbg !6827
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6828
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6828
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6826, metadata !DIExpression()), !dbg !6829
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6830
  %6 = load i32, i32* %5, align 4, !dbg !6830
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6831
  store i32 %6, i32* %7, align 4, !dbg !6832
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6833
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6834
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6835
  %11 = load i32, i32* %10, align 4, !dbg !6835
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !6836
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !6837
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6838
  ret i32 %12, !dbg !6839
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6840 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6847, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6848, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i32 undef, metadata !6849, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.value(metadata i32 %2, metadata !6850, metadata !DIExpression()), !dbg !6851
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6852
  %5 = load i32, i32* %4, align 4, !dbg !6852
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !6853
  %7 = or i32 %6, %5, !dbg !6854
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6855
  store i32 %7, i32* %8, align 4, !dbg !6856
  ret void, !dbg !6857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !6858 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6862, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6863, metadata !DIExpression()), !dbg !6864
  %3 = zext i8 %0 to i32, !dbg !6865
  %4 = icmp ugt i8 %0, 7, !dbg !6867
  br i1 %4, label %6, label %5, !dbg !6868

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !6869
  br label %6, !dbg !6870

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6864
  ret i32 %7, !dbg !6871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !6872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6876, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6877, metadata !DIExpression()), !dbg !6878
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !6879
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6880
  %4 = load i32, i32* %3, align 4, !dbg !6880
  %5 = and i32 %4, -32, !dbg !6881
  %6 = or i32 %5, %0, !dbg !6882
  %7 = or i32 %6, 16, !dbg !6882
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6883
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6884
  %9 = load i32, i32* %8, align 4, !dbg !6884
  %10 = or i32 %9, 1, !dbg !6885
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6886
  ret void, !dbg !6887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !6888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6891, metadata !DIExpression()), !dbg !6892
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6893
  ret void, !dbg !6894
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6899, metadata !DIExpression()), !dbg !6900
  %2 = icmp ult i32 %0, 33, !dbg !6901
  br i1 %2, label %11, label %3, !dbg !6903

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6904
  br i1 %4, label %11, label %5, !dbg !6906

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6907
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6908, !range !3786
  %8 = mul nsw i32 %7, -2, !dbg !6909
  %9 = add nsw i32 %8, 62, !dbg !6909
  %10 = and i32 %9, 62, !dbg !6910
  br label %11, !dbg !6911

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6900
  ret i32 %12, !dbg !6912
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !6913 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6917, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.value(metadata i8 %1, metadata !6918, metadata !DIExpression()), !dbg !6919
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6920
  ret void, !dbg !6922
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6923 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6927, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.value(metadata i8 %1, metadata !6928, metadata !DIExpression()), !dbg !6934
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6935
  call void @llvm.dbg.value(metadata i8 %3, metadata !6929, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6934
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !6936
  call void @llvm.dbg.value(metadata i32 %4, metadata !6929, metadata !DIExpression()), !dbg !6934
  %5 = icmp ne i32 %4, -22, !dbg !6937
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6938
  call void @llvm.dbg.value(metadata i32 %4, metadata !6930, metadata !DIExpression()), !dbg !6939
  br i1 %7, label %8, label %12, !dbg !6938

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6930, metadata !DIExpression()), !dbg !6939
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !6940
  %10 = add i32 %9, 1, !dbg !6943
  call void @llvm.dbg.value(metadata i32 %10, metadata !6930, metadata !DIExpression()), !dbg !6939
  %11 = icmp eq i32 %10, 8, !dbg !6944
  br i1 %11, label %12, label %8, !dbg !6945, !llvm.loop !6946

12:                                               ; preds = %8, %2
  ret void, !dbg !6948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !6949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6952, metadata !DIExpression()), !dbg !6953
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6954
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6955
  ret void, !dbg !6956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6957 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6962
  %2 = icmp ugt i32 %1, 8, !dbg !6964
  br i1 %2, label %14, label %3, !dbg !6965

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !6966
  call void @llvm.dbg.value(metadata i32 0, metadata !6961, metadata !DIExpression()), !dbg !6967
  %4 = icmp eq i32 %1, 0, !dbg !6968
  br i1 %4, label %12, label %5, !dbg !6971

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6971

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6961, metadata !DIExpression()), !dbg !6967
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6972
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !6974
  %10 = add nuw i32 %8, 1, !dbg !6975
  call void @llvm.dbg.value(metadata i32 %10, metadata !6961, metadata !DIExpression()), !dbg !6967
  %11 = icmp eq i32 %10, %1, !dbg !6968
  br i1 %11, label %12, label %7, !dbg !6971, !llvm.loop !6976

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6978
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6979
  tail call void @arm_core_mpu_enable() #27, !dbg !6980
  br label %14, !dbg !6981

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6967
  ret i32 %15, !dbg !6982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !6983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6990, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i8* %1, metadata !6991, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i8* %0, metadata !6992, metadata !DIExpression()), !dbg !6993
  %3 = load i8, i8* %1, align 1, !dbg !6994
  %4 = icmp eq i8 %3, 0, !dbg !6995
  br i1 %4, label %13, label %5, !dbg !6996

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6990, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.value(metadata i8* %8, metadata !6991, metadata !DIExpression()), !dbg !6993
  store i8 %6, i8* %7, align 1, !dbg !6997
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6999
  call void @llvm.dbg.value(metadata i8* %9, metadata !6990, metadata !DIExpression()), !dbg !6993
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7000
  call void @llvm.dbg.value(metadata i8* %10, metadata !6991, metadata !DIExpression()), !dbg !6993
  %11 = load i8, i8* %10, align 1, !dbg !6994
  %12 = icmp eq i8 %11, 0, !dbg !6995
  br i1 %12, label %13, label %5, !dbg !6996, !llvm.loop !7001

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7003
  ret i8* %0, !dbg !7004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7009, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8* %1, metadata !7010, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %2, metadata !7011, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8* %0, metadata !7012, metadata !DIExpression()), !dbg !7013
  %4 = icmp eq i32 %2, 0, !dbg !7014
  br i1 %4, label %22, label %5, !dbg !7015

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7009, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %7, metadata !7011, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8* %8, metadata !7010, metadata !DIExpression()), !dbg !7013
  %9 = load i8, i8* %8, align 1, !dbg !7016
  %10 = icmp eq i8 %9, 0, !dbg !7017
  br i1 %10, label %16, label %11, !dbg !7018

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7019
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7021
  call void @llvm.dbg.value(metadata i8* %12, metadata !7010, metadata !DIExpression()), !dbg !7013
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7022
  call void @llvm.dbg.value(metadata i8* %13, metadata !7009, metadata !DIExpression()), !dbg !7013
  %14 = add i32 %7, -1, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %14, metadata !7011, metadata !DIExpression()), !dbg !7013
  %15 = icmp eq i32 %14, 0, !dbg !7014
  br i1 %15, label %22, label %5, !dbg !7015, !llvm.loop !7024

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7009, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %18, metadata !7011, metadata !DIExpression()), !dbg !7013
  store i8 0, i8* %17, align 1, !dbg !7026
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7028
  call void @llvm.dbg.value(metadata i8* %19, metadata !7009, metadata !DIExpression()), !dbg !7013
  %20 = add i32 %18, -1, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %20, metadata !7011, metadata !DIExpression()), !dbg !7013
  %21 = icmp eq i32 %20, 0, !dbg !7030
  br i1 %21, label %22, label %16, !dbg !7031, !llvm.loop !7032

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7039, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %1, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %1, metadata !7041, metadata !DIExpression()), !dbg !7042
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7043

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7039, metadata !DIExpression()), !dbg !7042
  %6 = load i8, i8* %5, align 1, !dbg !7044
  %7 = icmp eq i8 %6, %3, !dbg !7045
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7046
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7047
  call void @llvm.dbg.value(metadata i8* %10, metadata !7039, metadata !DIExpression()), !dbg !7042
  br i1 %9, label %11, label %4, !dbg !7046, !llvm.loop !7049

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7051
  ret i8* %12, !dbg !7052
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7055, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %1, metadata !7056, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i8* null, metadata !7057, metadata !DIExpression()), !dbg !7058
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7059

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7058
  call void @llvm.dbg.value(metadata i8* %6, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i8* %5, metadata !7055, metadata !DIExpression()), !dbg !7058
  %7 = load i8, i8* %5, align 1, !dbg !7060
  %8 = icmp eq i8 %7, %3, !dbg !7063
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7064
  call void @llvm.dbg.value(metadata i8* %9, metadata !7057, metadata !DIExpression()), !dbg !7058
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7065
  call void @llvm.dbg.value(metadata i8* %10, metadata !7055, metadata !DIExpression()), !dbg !7058
  %11 = icmp eq i8 %7, 0, !dbg !7066
  br i1 %11, label %12, label %4, !dbg !7066, !llvm.loop !7067

12:                                               ; preds = %4
  ret i8* %9, !dbg !7069
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7074, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 0, metadata !7075, metadata !DIExpression()), !dbg !7076
  %2 = load i8, i8* %0, align 1, !dbg !7077
  %3 = icmp eq i8 %2, 0, !dbg !7078
  br i1 %3, label %11, label %4, !dbg !7079

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %6, metadata !7074, metadata !DIExpression()), !dbg !7076
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7080
  call void @llvm.dbg.value(metadata i8* %7, metadata !7074, metadata !DIExpression()), !dbg !7076
  %8 = add i32 %5, 1, !dbg !7082
  call void @llvm.dbg.value(metadata i32 %8, metadata !7075, metadata !DIExpression()), !dbg !7076
  %9 = load i8, i8* %7, align 1, !dbg !7077
  %10 = icmp eq i8 %9, 0, !dbg !7078
  br i1 %10, label %11, label %4, !dbg !7079, !llvm.loop !7083

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7076
  ret i32 %12, !dbg !7085
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7086 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7090, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.value(metadata i32 %1, metadata !7091, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.value(metadata i32 0, metadata !7092, metadata !DIExpression()), !dbg !7093
  %3 = load i8, i8* %0, align 1, !dbg !7094
  %4 = icmp ne i8 %3, 0, !dbg !7095
  %5 = icmp ne i32 %1, 0, !dbg !7096
  %6 = and i1 %4, %5, !dbg !7096
  br i1 %6, label %7, label %16, !dbg !7097

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.value(metadata i8* %9, metadata !7090, metadata !DIExpression()), !dbg !7093
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7098
  call void @llvm.dbg.value(metadata i8* %10, metadata !7090, metadata !DIExpression()), !dbg !7093
  %11 = add nuw i32 %8, 1, !dbg !7100
  call void @llvm.dbg.value(metadata i32 %11, metadata !7092, metadata !DIExpression()), !dbg !7093
  %12 = load i8, i8* %10, align 1, !dbg !7094
  %13 = icmp ne i8 %12, 0, !dbg !7095
  %14 = icmp ult i32 %11, %1, !dbg !7096
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7096
  br i1 %15, label %7, label %16, !dbg !7097, !llvm.loop !7101

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7093
  ret i32 %17, !dbg !7103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7108, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i8* %1, metadata !7109, metadata !DIExpression()), !dbg !7110
  %3 = load i8, i8* %0, align 1, !dbg !7111
  %4 = load i8, i8* %1, align 1, !dbg !7112
  %5 = icmp ne i8 %3, %4, !dbg !7113
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7114
  br i1 %7, label %18, label %8, !dbg !7114

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7109, metadata !DIExpression()), !dbg !7110
  call void @llvm.dbg.value(metadata i8* %10, metadata !7108, metadata !DIExpression()), !dbg !7110
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7115
  call void @llvm.dbg.value(metadata i8* %11, metadata !7108, metadata !DIExpression()), !dbg !7110
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7117
  call void @llvm.dbg.value(metadata i8* %12, metadata !7109, metadata !DIExpression()), !dbg !7110
  %13 = load i8, i8* %11, align 1, !dbg !7111
  %14 = load i8, i8* %12, align 1, !dbg !7112
  %15 = icmp ne i8 %13, %14, !dbg !7113
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7114
  br i1 %17, label %18, label %8, !dbg !7114, !llvm.loop !7118

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7111
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7112
  %21 = zext i8 %19 to i32, !dbg !7121
  %22 = zext i8 %20 to i32, !dbg !7122
  %23 = sub nsw i32 %21, %22, !dbg !7123
  ret i32 %23, !dbg !7124
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7125 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7129, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %1, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i32 %2, metadata !7131, metadata !DIExpression()), !dbg !7132
  %4 = icmp eq i32 %2, 0, !dbg !7133
  br i1 %4, label %23, label %5, !dbg !7133

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7131, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %7, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %8, metadata !7129, metadata !DIExpression()), !dbg !7132
  %9 = load i8, i8* %8, align 1, !dbg !7134
  %10 = load i8, i8* %7, align 1, !dbg !7135
  %11 = icmp ne i8 %9, %10, !dbg !7136
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7137
  br i1 %13, label %19, label %14, !dbg !7137

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7138
  call void @llvm.dbg.value(metadata i8* %15, metadata !7129, metadata !DIExpression()), !dbg !7132
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7140
  call void @llvm.dbg.value(metadata i8* %16, metadata !7130, metadata !DIExpression()), !dbg !7132
  %17 = add i32 %6, -1, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %17, metadata !7131, metadata !DIExpression()), !dbg !7132
  %18 = icmp eq i32 %17, 0, !dbg !7133
  br i1 %18, label %23, label %5, !dbg !7133, !llvm.loop !7142

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7145
  %21 = zext i8 %10 to i32, !dbg !7146
  %22 = sub nsw i32 %20, %21, !dbg !7147
  br label %23, !dbg !7148

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7148
  ret i32 %24, !dbg !7149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7155, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.value(metadata i8* %1, metadata !7156, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.value(metadata i8** %2, metadata !7157, metadata !DIExpression()), !dbg !7160
  %4 = icmp eq i8* %0, null, !dbg !7161
  br i1 %4, label %5, label %7, !dbg !7161

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7162
  br label %7, !dbg !7161

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7161
  call void @llvm.dbg.value(metadata i8* %8, metadata !7158, metadata !DIExpression()), !dbg !7160
  %9 = load i8, i8* %8, align 1, !dbg !7163
  %10 = icmp eq i8 %9, 0, !dbg !7163
  br i1 %10, label %33, label %11, !dbg !7164

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7158, metadata !DIExpression()), !dbg !7160
  %14 = zext i8 %12 to i32, !dbg !7163
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7165
  %16 = icmp eq i8* %15, null, !dbg !7164
  br i1 %16, label %21, label %17, !dbg !7166

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7167
  call void @llvm.dbg.value(metadata i8* %18, metadata !7158, metadata !DIExpression()), !dbg !7160
  %19 = load i8, i8* %18, align 1, !dbg !7163
  %20 = icmp eq i8 %19, 0, !dbg !7163
  br i1 %20, label %33, label %11, !dbg !7164, !llvm.loop !7169

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7159, metadata !DIExpression()), !dbg !7160
  %24 = zext i8 %22 to i32, !dbg !7171
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7172
  %26 = icmp eq i8* %25, null, !dbg !7173
  br i1 %26, label %27, label %31, !dbg !7174

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7175
  call void @llvm.dbg.value(metadata i8* %28, metadata !7159, metadata !DIExpression()), !dbg !7160
  %29 = load i8, i8* %28, align 1, !dbg !7171
  %30 = icmp eq i8 %29, 0, !dbg !7171
  br i1 %30, label %33, label %21, !dbg !7177, !llvm.loop !7178

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7180
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7183
  br label %33, !dbg !7184

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7160
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7160
  store i8* %34, i8** %2, align 4, !dbg !7160
  ret i8* %35, !dbg !7185
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7188, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i8* %1, metadata !7189, metadata !DIExpression()), !dbg !7190
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7191
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7192
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7193
  ret i8* %0, !dbg !7194
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7195 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7197, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8* %1, metadata !7198, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %2, metadata !7199, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8* %0, metadata !7200, metadata !DIExpression()), !dbg !7202
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %4, metadata !7201, metadata !DIExpression()), !dbg !7202
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7204
  call void @llvm.dbg.value(metadata i8* %5, metadata !7197, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8* %1, metadata !7198, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %2, metadata !7199, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %2, metadata !7199, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7202
  %6 = icmp eq i32 %2, 0, !dbg !7205
  br i1 %6, label %18, label %7, !dbg !7206

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7207
  call void @llvm.dbg.value(metadata i8* %9, metadata !7197, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8* %10, metadata !7198, metadata !DIExpression()), !dbg !7202
  %12 = load i8, i8* %10, align 1, !dbg !7208
  %13 = icmp eq i8 %12, 0, !dbg !7209
  br i1 %13, label %18, label %14, !dbg !7210

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7211
  call void @llvm.dbg.value(metadata i8* %15, metadata !7198, metadata !DIExpression()), !dbg !7202
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7213
  call void @llvm.dbg.value(metadata i8* %16, metadata !7197, metadata !DIExpression()), !dbg !7202
  store i8 %12, i8* %9, align 1, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %11, metadata !7199, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %11, metadata !7199, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7202
  %17 = icmp eq i32 %11, 0, !dbg !7205
  br i1 %17, label %18, label %7, !dbg !7206, !llvm.loop !7215

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7202
  store i8 0, i8* %19, align 1, !dbg !7217
  ret i8* %0, !dbg !7218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7223, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i8* %1, metadata !7224, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %2, metadata !7225, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i8* %0, metadata !7226, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i8* %1, metadata !7227, metadata !DIExpression()), !dbg !7228
  %4 = icmp eq i32 %2, 0, !dbg !7229
  br i1 %4, label %31, label %5, !dbg !7231

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7227, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i8* %0, metadata !7226, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %2, metadata !7225, metadata !DIExpression()), !dbg !7228
  %6 = add i32 %2, -1, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %6, metadata !7225, metadata !DIExpression()), !dbg !7228
  %7 = icmp eq i32 %6, 0, !dbg !7233
  br i1 %7, label %23, label %8, !dbg !7234

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7235
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7235
  br label %11, !dbg !7235

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7227, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i8* %14, metadata !7226, metadata !DIExpression()), !dbg !7228
  %15 = load i8, i8* %14, align 1, !dbg !7236
  %16 = load i8, i8* %13, align 1, !dbg !7237
  %17 = icmp eq i8 %15, %16, !dbg !7238
  br i1 %17, label %18, label %23, !dbg !7235

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7239
  call void @llvm.dbg.value(metadata i8* %19, metadata !7226, metadata !DIExpression()), !dbg !7228
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7241
  call void @llvm.dbg.value(metadata i8* %20, metadata !7227, metadata !DIExpression()), !dbg !7228
  call void @llvm.dbg.value(metadata i32 %12, metadata !7225, metadata !DIExpression()), !dbg !7228
  %21 = add i32 %12, -1, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %21, metadata !7225, metadata !DIExpression()), !dbg !7228
  %22 = icmp eq i32 %21, 0, !dbg !7233
  br i1 %22, label %23, label %11, !dbg !7234, !llvm.loop !7242

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7228
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7228
  %26 = load i8, i8* %24, align 1, !dbg !7244
  %27 = zext i8 %26 to i32, !dbg !7244
  %28 = load i8, i8* %25, align 1, !dbg !7245
  %29 = zext i8 %28 to i32, !dbg !7245
  %30 = sub nsw i32 %27, %29, !dbg !7246
  br label %31, !dbg !7247

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7228
  ret i32 %32, !dbg !7248
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7249 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7253, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %1, metadata !7254, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 %2, metadata !7255, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %0, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %1, metadata !7257, metadata !DIExpression()), !dbg !7258
  %4 = ptrtoint i8* %0 to i32, !dbg !7259
  %5 = ptrtoint i8* %1 to i32, !dbg !7259
  %6 = sub i32 %4, %5, !dbg !7259
  %7 = icmp ult i32 %6, %2, !dbg !7261
  br i1 %7, label %10, label %8, !dbg !7262

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %0, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 %2, metadata !7255, metadata !DIExpression()), !dbg !7258
  %9 = icmp eq i32 %2, 0, !dbg !7263
  br i1 %9, label %26, label %17, !dbg !7265

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7255, metadata !DIExpression()), !dbg !7258
  %12 = add i32 %11, -1, !dbg !7266
  call void @llvm.dbg.value(metadata i32 %12, metadata !7255, metadata !DIExpression()), !dbg !7258
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7269
  %14 = load i8, i8* %13, align 1, !dbg !7269
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7270
  store i8 %14, i8* %15, align 1, !dbg !7271
  %16 = icmp eq i32 %12, 0, !dbg !7272
  br i1 %16, label %26, label %10, !dbg !7273, !llvm.loop !7274

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7257, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %19, metadata !7256, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i32 %20, metadata !7255, metadata !DIExpression()), !dbg !7258
  %21 = load i8, i8* %18, align 1, !dbg !7276
  store i8 %21, i8* %19, align 1, !dbg !7278
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7279
  call void @llvm.dbg.value(metadata i8* %22, metadata !7256, metadata !DIExpression()), !dbg !7258
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7280
  call void @llvm.dbg.value(metadata i8* %23, metadata !7257, metadata !DIExpression()), !dbg !7258
  %24 = add i32 %20, -1, !dbg !7281
  call void @llvm.dbg.value(metadata i32 %24, metadata !7255, metadata !DIExpression()), !dbg !7258
  %25 = icmp eq i32 %24, 0, !dbg !7263
  br i1 %25, label %26, label %17, !dbg !7265, !llvm.loop !7282

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7284
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7285 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7291, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %1, metadata !7292, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %2, metadata !7293, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %0, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %1, metadata !7295, metadata !DIExpression()), !dbg !7296
  %4 = icmp eq i32 %2, 0, !dbg !7297
  br i1 %4, label %14, label %5, !dbg !7298

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7295, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i8* %7, metadata !7294, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.value(metadata i32 %8, metadata !7293, metadata !DIExpression()), !dbg !7296
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7299
  call void @llvm.dbg.value(metadata i8* %9, metadata !7295, metadata !DIExpression()), !dbg !7296
  %10 = load i8, i8* %6, align 1, !dbg !7301
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7302
  call void @llvm.dbg.value(metadata i8* %11, metadata !7294, metadata !DIExpression()), !dbg !7296
  store i8 %10, i8* %7, align 1, !dbg !7303
  %12 = add i32 %8, -1, !dbg !7304
  call void @llvm.dbg.value(metadata i32 %12, metadata !7293, metadata !DIExpression()), !dbg !7296
  %13 = icmp eq i32 %12, 0, !dbg !7297
  br i1 %13, label %14, label %5, !dbg !7298, !llvm.loop !7305

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7307
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7308 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7312, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 %1, metadata !7313, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 %2, metadata !7314, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i8* %0, metadata !7315, metadata !DIExpression()), !dbg !7317
  %4 = trunc i32 %1 to i8, !dbg !7318
  call void @llvm.dbg.value(metadata i8 %4, metadata !7316, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 %2, metadata !7314, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i8* %0, metadata !7315, metadata !DIExpression()), !dbg !7317
  %5 = icmp eq i32 %2, 0, !dbg !7319
  br i1 %5, label %12, label %6, !dbg !7320

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7314, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i8* %8, metadata !7315, metadata !DIExpression()), !dbg !7317
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7321
  call void @llvm.dbg.value(metadata i8* %9, metadata !7315, metadata !DIExpression()), !dbg !7317
  store i8 %4, i8* %8, align 1, !dbg !7323
  %10 = add i32 %7, -1, !dbg !7324
  call void @llvm.dbg.value(metadata i32 %10, metadata !7314, metadata !DIExpression()), !dbg !7317
  %11 = icmp eq i32 %10, 0, !dbg !7319
  br i1 %11, label %12, label %6, !dbg !7320, !llvm.loop !7325

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7332, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %1, metadata !7333, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %2, metadata !7334, metadata !DIExpression()), !dbg !7338
  %4 = icmp eq i32 %2, 0, !dbg !7339
  br i1 %4, label %17, label %5, !dbg !7340

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7341

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7342
  call void @llvm.dbg.value(metadata i8* %9, metadata !7335, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 %8, metadata !7334, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i8* %9, metadata !7335, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7342
  %10 = load i8, i8* %9, align 1, !dbg !7343
  %11 = icmp eq i8 %10, %6, !dbg !7346
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7347
  call void @llvm.dbg.value(metadata i8* %12, metadata !7335, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 %13, metadata !7334, metadata !DIExpression()), !dbg !7338
  br i1 %15, label %16, label %7, !dbg !7347, !llvm.loop !7348

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7350

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7338
  ret i8* %19, !dbg !7351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7352 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7354, metadata !DIExpression()), !dbg !7355
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7356
  ret void, !dbg !7357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7360, metadata !DIExpression()), !dbg !7361
  ret i32 -1, !dbg !7362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7367, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32* %1, metadata !7368, metadata !DIExpression()), !dbg !7369
  %3 = ptrtoint i32* %1 to i32, !dbg !7370
  %4 = and i32 %3, -2, !dbg !7370
  %5 = icmp eq i32 %4, 2, !dbg !7370
  br i1 %5, label %6, label %9, !dbg !7370

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7371
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7371
  br label %9, !dbg !7372

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7372
  ret i32 %10, !dbg !7373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7376, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.value(metadata i32* %1, metadata !7377, metadata !DIExpression()), !dbg !7378
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7379
  ret i32 %3, !dbg !7380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7384, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.value(metadata i32* %1, metadata !7385, metadata !DIExpression()), !dbg !7386
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7387, !srcloc !7389
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7390
  ret i32 %3, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7392 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32* %1, metadata !7398, metadata !DIExpression()), !dbg !7401
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7402
  call void @llvm.dbg.value(metadata i32 %3, metadata !7399, metadata !DIExpression()), !dbg !7401
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7403
  call void @llvm.dbg.value(metadata i32 %4, metadata !7400, metadata !DIExpression()), !dbg !7401
  %5 = icmp ne i32 %3, %4, !dbg !7404
  %6 = sext i1 %5 to i32, !dbg !7405
  ret i32 %6, !dbg !7406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7411, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i32 %1, metadata !7412, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i32 %2, metadata !7413, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i32* %3, metadata !7414, metadata !DIExpression()), !dbg !7415
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7416
  ret i32 %5, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7420, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %1, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32 %2, metadata !7422, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.value(metadata i32* %3, metadata !7423, metadata !DIExpression()), !dbg !7424
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7425, !srcloc !7427
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7428
  ret i32 %5, !dbg !7429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7432, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %1, metadata !7433, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %2, metadata !7434, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32* %3, metadata !7435, metadata !DIExpression()), !dbg !7440
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7441
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7443
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7443
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7443
  br i1 %11, label %33, label %12, !dbg !7443

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7440
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7440
  call void @llvm.dbg.value(metadata i8* %14, metadata !7438, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %13, metadata !7436, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %1, metadata !7437, metadata !DIExpression()), !dbg !7440
  br label %15, !dbg !7444

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7446
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7440
  call void @llvm.dbg.value(metadata i8* %17, metadata !7438, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.value(metadata i32 %16, metadata !7437, metadata !DIExpression()), !dbg !7440
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7447
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7450
  call void @llvm.dbg.value(metadata i8* %19, metadata !7438, metadata !DIExpression()), !dbg !7440
  %20 = load i8, i8* %17, align 1, !dbg !7451
  %21 = zext i8 %20 to i32, !dbg !7452
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7447
  %23 = icmp eq i32 %22, -1, !dbg !7453
  br i1 %23, label %30, label %24, !dbg !7454

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %25, metadata !7437, metadata !DIExpression()), !dbg !7440
  %26 = icmp eq i32 %25, 0, !dbg !7456
  br i1 %26, label %27, label %15, !dbg !7457, !llvm.loop !7458

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %28, metadata !7436, metadata !DIExpression()), !dbg !7440
  %29 = icmp eq i32 %28, 0, !dbg !7461
  br i1 %29, label %30, label %12, !dbg !7462, !llvm.loop !7463

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7440
  call void @llvm.dbg.value(metadata i32 %31, metadata !7436, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.label(metadata !7439), !dbg !7466
  %32 = sub i32 %2, %31, !dbg !7467
  br label %33, !dbg !7468

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7440
  ret i32 %34, !dbg !7469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7474, metadata !DIExpression()), !dbg !7475
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7476
  %3 = icmp eq i32 %2, -1, !dbg !7478
  br i1 %3, label %8, label %4, !dbg !7479

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7480
  %6 = icmp eq i32 %5, -1, !dbg !7481
  %7 = sext i1 %6 to i32, !dbg !7480
  br label %8, !dbg !7482

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7475
  ret i32 %9, !dbg !7483
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7484 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7486, metadata !DIExpression()), !dbg !7497
  %8 = bitcast i64* %2 to i8*, !dbg !7498
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #25, !dbg !7498
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !7487, metadata !DIExpression()), !dbg !7499
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !7499
  store i64 %9, i64* %2, align 8, !dbg !7499
  %10 = bitcast i64* %4 to i8*, !dbg !7500
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #25, !dbg !7500
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !7495, metadata !DIExpression()), !dbg !7501
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !7501
  store i64 %11, i64* %4, align 8, !dbg !7501
  %12 = bitcast i64* %6 to i8*, !dbg !7502
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #25, !dbg !7502
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !7496, metadata !DIExpression()), !dbg !7503
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !7503
  store i64 %13, i64* %6, align 8, !dbg !7503
  %14 = trunc i64 %9 to i32, !dbg !7504
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !7504
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #27, !dbg !7506
  %17 = trunc i64 %13 to i32, !dbg !7507
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !7507
  br i1 %16, label %19, label %26, !dbg !7507

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !7507
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !7507
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #27, !dbg !7508
  br i1 %22, label %23, label %26, !dbg !7509

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #27, !dbg !7510
  br i1 %24, label %25, label %26, !dbg !7511

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #27, !dbg !7512
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #27, !dbg !7513
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #27, !dbg !7514
  br label %26, !dbg !7515

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !7497
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #25, !dbg !7516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #25, !dbg !7516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #25, !dbg !7516
  ret i32 %27, !dbg !7516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !7517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7522, metadata !DIExpression()), !dbg !7523
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7524, !srcloc !7526
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #27, !dbg !7527
  ret i1 %2, !dbg !7528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7529 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %1, metadata !7535, metadata !DIExpression()), !dbg !7536
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !7537
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !7537
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !7538
  %6 = load i8, i8* %5, align 4, !dbg !7538
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !7539
  %8 = load i16, i16* %7, align 2, !dbg !7539
  %9 = zext i16 %8 to i32, !dbg !7540
  %10 = or i32 %9, %1, !dbg !7541
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #27, !dbg !7542
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7547, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata i8 %1, metadata !7548, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata i32 %2, metadata !7549, metadata !DIExpression()), !dbg !7550
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7551, !srcloc !7553
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #27, !dbg !7554
  ret void, !dbg !7555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7558, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8 %1, metadata !7559, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %2, metadata !7560, metadata !DIExpression()), !dbg !7565
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !7566
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !7566
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !7566
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !7561, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i8* undef, metadata !7562, metadata !DIExpression()), !dbg !7565
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7567
  %8 = bitcast i8** %7 to %struct.z_heap_bucket**, !dbg !7567
  %9 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %8, align 4, !dbg !7567
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !7564, metadata !DIExpression()), !dbg !7565
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !7568
  %13 = icmp ne i32 %12, 1048577, !dbg !7568
  %14 = or i1 %13, %11, !dbg !7568
  %15 = xor i32 %2, 786432, !dbg !7568
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !7568
  call void @llvm.dbg.value(metadata i32 %16, metadata !7560, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %16, metadata !7560, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !7565
  %17 = and i32 %16, 1, !dbg !7570
  %18 = icmp eq i32 %17, 0, !dbg !7572
  %19 = zext i8 %1 to i32, !dbg !7573
  %20 = shl nuw i32 1, %19, !dbg !7573
  br i1 %18, label %25, label %21, !dbg !7574

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !7575
  %23 = load i32, i32* %22, align 4, !dbg !7577
  %24 = or i32 %23, %20, !dbg !7577
  store i32 %24, i32* %22, align 4, !dbg !7577
  br label %30, !dbg !7578

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !7579
  %27 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !7581
  %28 = load i32, i32* %27, align 4, !dbg !7582
  %29 = and i32 %28, %26, !dbg !7582
  store i32 %29, i32* %27, align 4, !dbg !7582
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !7583
  call void @llvm.dbg.value(metadata i32 %31, metadata !7560, metadata !DIExpression()), !dbg !7565
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !7584
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !7584
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #26, !dbg !7585
  ret void, !dbg !7586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !7587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7589, metadata !DIExpression()), !dbg !7590
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !7591
  ret i1 %2, !dbg !7592
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7593 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7595, metadata !DIExpression()), !dbg !7596
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7603, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata i32 %1, metadata !7604, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7605, metadata !DIExpression()), !dbg !7609
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7610
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7610
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7610
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7606, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.value(metadata i32 %0, metadata !7608, metadata !DIExpression()), !dbg !7609
  %7 = icmp slt i32 %0, %1, !dbg !7611
  br i1 %7, label %8, label %22, !dbg !7614

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7608, metadata !DIExpression()), !dbg !7609
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7615
  %11 = icmp eq i32 %10, 0, !dbg !7615
  br i1 %11, label %19, label %12, !dbg !7618

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7619
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7621
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7621
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7623
  br i1 %15, label %19, label %16, !dbg !7624

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7625
  %18 = load i8*, i8** %17, align 4, !dbg !7625
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7626
  br label %19, !dbg !7627

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %20, metadata !7608, metadata !DIExpression()), !dbg !7609
  %21 = icmp eq i32 %20, %1, !dbg !7611
  br i1 %21, label %22, label %8, !dbg !7614, !llvm.loop !7629

22:                                               ; preds = %19, %3
  ret void, !dbg !7631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !7632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7634, metadata !DIExpression()), !dbg !7635
  %2 = shl nuw i32 1, %0, !dbg !7636
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7639
  ret i32 %3, !dbg !7640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !7641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7645, metadata !DIExpression()), !dbg !7646
  %2 = shl nuw i32 1, %0, !dbg !7647
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7650
  ret void, !dbg !7651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7655, metadata !DIExpression()), !dbg !7656
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7657
  ret void, !dbg !7658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !7659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7661, metadata !DIExpression()), !dbg !7662
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7663
  %3 = and i32 %2, %0, !dbg !7663
  %4 = icmp eq i32 %3, %0, !dbg !7664
  %5 = zext i1 %4 to i32, !dbg !7664
  ret i32 %5, !dbg !7665
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7668, metadata !DIExpression()), !dbg !7669
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7670
  ret void, !dbg !7671
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7674, metadata !DIExpression()), !dbg !7675
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7676
  ret void, !dbg !7677
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7678 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7680, metadata !DIExpression()), !dbg !7681
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7682
  ret void, !dbg !7683
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7686, metadata !DIExpression()), !dbg !7687
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7688
  ret void, !dbg !7689
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7692, metadata !DIExpression()), !dbg !7693
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7694
  ret void, !dbg !7695
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7698, metadata !DIExpression()), !dbg !7699
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7700
  ret void, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7704, metadata !DIExpression()), !dbg !7705
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7706
  ret i32 0, !dbg !7707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !826 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !830, metadata !DIExpression()), !dbg !7708
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7709
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7711
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7713
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7715
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7717
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7719
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7721
  ret void, !dbg !7723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7726, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32 0, metadata !7727, metadata !DIExpression()), !dbg !7728
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7729
  %3 = load i32, i32* %2, align 4, !dbg !7729
  call void @llvm.dbg.value(metadata i32 %3, metadata !7727, metadata !DIExpression()), !dbg !7728
  %4 = shl nuw i32 1, %0, !dbg !7730
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7731
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7732
  ret void, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7736, metadata !DIExpression()), !dbg !7737
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7738
  %3 = or i32 %2, %0, !dbg !7738
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7738
  ret void, !dbg !7739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !7740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7742, metadata !DIExpression()), !dbg !7743
  %2 = icmp slt i32 %0, 32, !dbg !7744
  br i1 %2, label %3, label %5, !dbg !7746

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7747
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7749
  br label %5, !dbg !7750

5:                                                ; preds = %1, %3
  ret void, !dbg !7751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7754, metadata !DIExpression()), !dbg !7755
  %2 = xor i32 %0, -1, !dbg !7756
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7756
  %4 = and i32 %3, %2, !dbg !7756
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7756
  ret void, !dbg !7757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !7758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7762, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %1, metadata !7763, metadata !DIExpression()), !dbg !7764
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7765

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7766
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7768
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7769
  br label %11, !dbg !7770

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7771
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7772
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7773
  br label %11, !dbg !7774

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7775
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7776
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7777
  br label %11, !dbg !7778

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7779
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7780
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7781
  br label %11, !dbg !7782

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7786, metadata !DIExpression()), !dbg !7787
  %2 = xor i32 %0, -1, !dbg !7788
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7788
  %4 = and i32 %3, %2, !dbg !7788
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7788
  ret void, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7792, metadata !DIExpression()), !dbg !7793
  %2 = xor i32 %0, -1, !dbg !7794
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7794
  %4 = and i32 %3, %2, !dbg !7794
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7794
  ret void, !dbg !7795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7798, metadata !DIExpression()), !dbg !7799
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7800
  %3 = or i32 %2, %0, !dbg !7800
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7800
  ret void, !dbg !7801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7805
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7806
  %3 = or i32 %2, %0, !dbg !7806
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7806
  ret void, !dbg !7807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7812, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7813, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8* %2, metadata !7814, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !7815, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7817, metadata !DIExpression()), !dbg !7818
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7819
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7819
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7821
  br i1 %6, label %7, label %9, !dbg !7822

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7823
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7824
  store i8* %2, i8** %8, align 4, !dbg !7825
  br label %9, !dbg !7826

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7818
  ret i32 %10, !dbg !7827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7830, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !7831, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7832, metadata !DIExpression()), !dbg !7833
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7834
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7835
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7836
  store i8* null, i8** %3, align 4, !dbg !7837
  ret void, !dbg !7838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !7839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7841, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i8* %1, metadata !7842, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i8* %1, metadata !7843, metadata !DIExpression()), !dbg !7846
  %3 = bitcast i8* %1 to i32*, !dbg !7847
  %4 = load i32, i32* %3, align 4, !dbg !7847
  %5 = add i32 %4, -37, !dbg !7847
  %6 = icmp ult i32 %5, -9, !dbg !7847
  br i1 %6, label %15, label %7, !dbg !7849

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7850
  %9 = inttoptr i32 %8 to i32*, !dbg !7851
  call void @llvm.dbg.value(metadata i32* %9, metadata !7844, metadata !DIExpression()), !dbg !7846
  %10 = load volatile i32, i32* %9, align 4, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %10, metadata !7845, metadata !DIExpression()), !dbg !7846
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7853
  %12 = bitcast i8* %11 to i32*, !dbg !7853
  %13 = load i32, i32* %12, align 4, !dbg !7853
  %14 = or i32 %13, %10, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %14, metadata !7845, metadata !DIExpression()), !dbg !7846
  store volatile i32 %14, i32* %9, align 4, !dbg !7855
  br label %15, !dbg !7856

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7846
  ret i32 %16, !dbg !7857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7860, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %1, metadata !7861, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.value(metadata i8* %1, metadata !7862, metadata !DIExpression()), !dbg !7865
  %3 = bitcast i8* %1 to i32*, !dbg !7866
  %4 = load i32, i32* %3, align 4, !dbg !7866
  %5 = add i32 %4, -37, !dbg !7866
  %6 = icmp ult i32 %5, -9, !dbg !7866
  br i1 %6, label %16, label %7, !dbg !7868

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7869
  %9 = inttoptr i32 %8 to i32*, !dbg !7870
  call void @llvm.dbg.value(metadata i32* %9, metadata !7863, metadata !DIExpression()), !dbg !7865
  %10 = load volatile i32, i32* %9, align 4, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %10, metadata !7864, metadata !DIExpression()), !dbg !7865
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7872
  %12 = bitcast i8* %11 to i32*, !dbg !7872
  %13 = load i32, i32* %12, align 4, !dbg !7872
  %14 = xor i32 %13, -1, !dbg !7873
  %15 = and i32 %10, %14, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %15, metadata !7864, metadata !DIExpression()), !dbg !7865
  store volatile i32 %15, i32* %9, align 4, !dbg !7875
  br label %16, !dbg !7876

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7865
  ret i32 %17, !dbg !7877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #8 !dbg !7878 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7880, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32* %2, metadata !7882, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7883, metadata !DIExpression()), !dbg !7887
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7888
  call void @llvm.dbg.value(metadata i32 %4, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %4, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %4, metadata !7886, metadata !DIExpression()), !dbg !7887
  %5 = bitcast i8* %1 to i32*, !dbg !7889
  %6 = load i32, i32* %5, align 4, !dbg !7889
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !7890

7:                                                ; preds = %3
  br label %10, !dbg !7891

8:                                                ; preds = %3
  br label %10, !dbg !7893

9:                                                ; preds = %3
  br label %10, !dbg !7894

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !7895
  br label %12, !dbg !7896

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !7887
  ret i32 %13, !dbg !7896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !7897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7899, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* %1, metadata !7900, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* %2, metadata !7901, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* %1, metadata !7902, metadata !DIExpression()), !dbg !7907
  %4 = bitcast i8* %1 to i32*, !dbg !7908
  %5 = load i32, i32* %4, align 4, !dbg !7908
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !7909
  call void @llvm.dbg.value(metadata i32 %6, metadata !7906, metadata !DIExpression()), !dbg !7907
  %7 = icmp slt i32 %6, 0, !dbg !7910
  br i1 %7, label %22, label %8, !dbg !7912

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7902, metadata !DIExpression()), !dbg !7907
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7913
  %10 = bitcast i8* %9 to i32*, !dbg !7913
  %11 = load i32, i32* %10, align 4, !dbg !7913
  %12 = lshr i32 %11, 16, !dbg !7913
  %13 = and i32 %12, 7, !dbg !7913
  %14 = lshr i32 %11, 8, !dbg !7914
  %15 = and i32 %14, 31, !dbg !7914
  %16 = shl i32 %13, %15, !dbg !7915
  call void @llvm.dbg.value(metadata i32 %16, metadata !7905, metadata !DIExpression()), !dbg !7907
  %17 = and i32 %11, 255, !dbg !7916
  %18 = or i32 %17, 1073887232, !dbg !7917
  %19 = inttoptr i32 %18 to i32*, !dbg !7918
  call void @llvm.dbg.value(metadata i32* %19, metadata !7903, metadata !DIExpression()), !dbg !7907
  %20 = load volatile i32, i32* %19, align 4, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %20, metadata !7904, metadata !DIExpression()), !dbg !7907
  %21 = or i32 %16, %20, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %21, metadata !7904, metadata !DIExpression()), !dbg !7907
  store volatile i32 %21, i32* %19, align 4, !dbg !7921
  br label %22, !dbg !7922

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7907
  ret i32 %23, !dbg !7923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !7924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7928, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.value(metadata i32 0, metadata !7929, metadata !DIExpression()), !dbg !7930
  %2 = add i32 %0, -1, !dbg !7931
  %3 = icmp ult i32 %2, 4, !dbg !7931
  br i1 %3, label %4, label %7, !dbg !7931

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7931
  %6 = load i32, i32* %5, align 4, !dbg !7931
  call void @llvm.dbg.value(metadata i32 %6, metadata !7929, metadata !DIExpression()), !dbg !7930
  br label %7, !dbg !7932

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7930
  ret i32 %8, !dbg !7933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7934 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7936, metadata !DIExpression()), !dbg !7939
  tail call void @config_enable_default_clocks() #26, !dbg !7940
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !7941
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !7941
  %4 = lshr i32 %3, 4, !dbg !7941
  %5 = and i32 %4, 15, !dbg !7941
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7941
  %7 = load i8, i8* %6, align 1, !dbg !7941
  %8 = zext i8 %7 to i32, !dbg !7941
  %9 = lshr i32 %2, %8, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %9, metadata !7937, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !7938, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7939
  %10 = icmp ult i32 %9, 32000000, !dbg !7942
  br i1 %10, label %11, label %13, !dbg !7944

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !7945
  br label %13, !dbg !7947

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !7948
  tail call fastcc void @set_up_plls() #27, !dbg !7949
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !7950
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #27, !dbg !7953
  br label %14, !dbg !7954

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !7955
  %16 = icmp eq i32 %15, 12, !dbg !7956
  br i1 %16, label %17, label %14, !dbg !7954, !llvm.loop !7957

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !7959
  br i1 %18, label %19, label %21, !dbg !7961

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !7962
  br label %21, !dbg !7964

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !7965
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !7966
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !7967
  ret i32 0, !dbg !7968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !7969 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7971
  %2 = and i32 %1, 240, !dbg !7971
  ret i32 %2, !dbg !7972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !7973 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !7974
  %2 = icmp eq i32 %1, 1, !dbg !7978
  br i1 %2, label %7, label %3, !dbg !7979

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !7980
  br label %4, !dbg !7982

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !7983
  %6 = icmp eq i32 %5, 1, !dbg !7984
  br i1 %6, label %7, label %4, !dbg !7982, !llvm.loop !7985

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !7987
  br label %8, !dbg !7990

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !7991
  %10 = icmp eq i32 %9, 1, !dbg !7992
  br i1 %10, label %11, label %8, !dbg !7990, !llvm.loop !7993

11:                                               ; preds = %8
  ret void, !dbg !7995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7996 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !7997
  %2 = icmp eq i32 %1, 12, !dbg !7999
  br i1 %2, label %3, label %4, !dbg !8000

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8001
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !8003
  br label %4, !dbg !8004

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !8005
  tail call void @config_pll_sysclock() #26, !dbg !8006
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !8007
  br label %5, !dbg !8008

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !8009
  %7 = icmp eq i32 %6, 1, !dbg !8010
  br i1 %7, label %8, label %5, !dbg !8008, !llvm.loop !8011

8:                                                ; preds = %5
  ret void, !dbg !8013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !8014 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8016, metadata !DIExpression()), !dbg !8017
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8018
  %2 = and i32 %1, -241, !dbg !8018
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8018
  ret void, !dbg !8019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !8020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8022, metadata !DIExpression()), !dbg !8023
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8024
  %3 = and i32 %2, -4, !dbg !8024
  %4 = or i32 %3, %0, !dbg !8024
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8024
  ret void, !dbg !8025
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !8026 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8027
  %2 = and i32 %1, 12, !dbg !8027
  ret i32 %2, !dbg !8028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !8029 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8031, metadata !DIExpression()), !dbg !8032
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8033
  %2 = and i32 %1, -1793, !dbg !8033
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8033
  ret void, !dbg !8034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8037, metadata !DIExpression()), !dbg !8038
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8039
  %2 = and i32 %1, -14337, !dbg !8039
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8039
  ret void, !dbg !8040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !8041 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8042
  %2 = icmp eq i32 %1, 1, !dbg !8044
  br i1 %2, label %7, label %3, !dbg !8045

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8046
  br label %4, !dbg !8048

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8049
  %6 = icmp eq i32 %5, 1, !dbg !8050
  br i1 %6, label %7, label %4, !dbg !8048, !llvm.loop !8051

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #27, !dbg !8053
  br label %8, !dbg !8054

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8055
  %10 = icmp eq i32 %9, 4, !dbg !8056
  br i1 %10, label %11, label %8, !dbg !8054, !llvm.loop !8057

11:                                               ; preds = %8
  ret void, !dbg !8059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !8060 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8061
  %2 = and i32 %1, -16777217, !dbg !8061
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8061
  ret void, !dbg !8062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !8063 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8064
  %2 = or i32 %1, 16777216, !dbg !8064
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8064
  ret void, !dbg !8065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !8066 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8067
  %2 = lshr i32 %1, 25, !dbg !8068
  %3 = and i32 %2, 1, !dbg !8068
  ret i32 %3, !dbg !8069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !8070 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8071
  %2 = lshr i32 %1, 1, !dbg !8072
  %3 = and i32 %2, 1, !dbg !8072
  ret i32 %3, !dbg !8073
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !8074 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8075
  %2 = or i32 %1, 1, !dbg !8075
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8075
  ret void, !dbg !8076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !8077 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8078
  %2 = or i32 %1, 1, !dbg !8078
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8078
  ret void, !dbg !8079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !8080 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8081
  %2 = lshr i32 %1, 1, !dbg !8082
  %3 = and i32 %2, 1, !dbg !8082
  ret i32 %3, !dbg !8083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8084 {
  ret i32 16000000, !dbg !8086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !8089 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8090
  ret void, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !8092 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8096, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata i32 262144, metadata !8097, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8098, metadata !DIExpression()), !dbg !8099
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8100
  %2 = and i32 %1, -16580609, !dbg !8100
  %3 = or i32 %2, 4456448, !dbg !8100
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8100
  ret void, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #11 !dbg !8102 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8103
  %2 = zext i8 %1 to i32, !dbg !8103
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8103
  ret i32 %3, !dbg !8104
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !8105 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #27, !dbg !8106
  ret void, !dbg !8107
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !8108 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8110, metadata !DIExpression()), !dbg !8112
  %2 = bitcast i32* %1 to i8*, !dbg !8113
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8113
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8111, metadata !DIExpression()), !dbg !8114
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8115
  %4 = or i32 %3, 1, !dbg !8115
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8115
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8116
  %6 = and i32 %5, 1, !dbg !8116
  store volatile i32 %6, i32* %1, align 4, !dbg !8117
  %7 = load volatile i32, i32* %1, align 4, !dbg !8118
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8119
  ret void, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8122, metadata !DIExpression()), !dbg !8123
  %2 = tail call fastcc zeroext i1 @device_is_ready.45() #27, !dbg !8124
  br i1 %2, label %3, label %4, !dbg !8126

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8127
  br label %4, !dbg !8128

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8123
  ret i32 %5, !dbg !8129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.45() unnamed_addr #1 !dbg !8130 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8134, metadata !DIExpression()), !dbg !8135
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8136, !srcloc !8138
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.46() #27, !dbg !8139
  ret i1 %1, !dbg !8140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8141 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8142
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8143
  ret void, !dbg !8144
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8147, metadata !DIExpression()), !dbg !8148
  %2 = icmp eq i32 %0, 10, !dbg !8149
  br i1 %2, label %3, label %4, !dbg !8151

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8152
  br label %4, !dbg !8154

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8155
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8156
  ret i32 %0, !dbg !8157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8158 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i8 %0, metadata !8162, metadata !DIExpression()), !dbg !8163
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8164, !srcloc !8166
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8167
  ret void, !dbg !8168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8169 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8 %0, metadata !8172, metadata !DIExpression()), !dbg !8174
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8175
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8173, metadata !DIExpression()), !dbg !8174
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8176
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8176
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #26, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.46() unnamed_addr #1 !dbg !8179 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8181, metadata !DIExpression()), !dbg !8182
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8183
  ret i1 %1, !dbg !8184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8185 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8189, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8190, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8191, metadata !DIExpression()), !dbg !8192
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8193
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8194
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8195
  tail call fastcc void @console_input_init() #27, !dbg !8196
  ret void, !dbg !8197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8198 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8201
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8202
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8203
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8204
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8205
  %3 = icmp eq i32 %2, 0, !dbg !8206
  br i1 %3, label %8, label %4, !dbg !8206

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8200, metadata !DIExpression(DW_OP_deref)), !dbg !8207
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8208
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8205
  %7 = icmp eq i32 %6, 0, !dbg !8206
  br i1 %7, label %8, label %4, !dbg !8206, !llvm.loop !8210

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8212
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8213
  ret void, !dbg !8213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8214 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8216, metadata !DIExpression()), !dbg !8217
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8218, !srcloc !8220
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8223 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8225, metadata !DIExpression()), !dbg !8226
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8227, !srcloc !8229
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8230
  ret void, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8236, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8237, metadata !DIExpression()), !dbg !8238
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8239
  ret void, !dbg !8240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8241 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8243, metadata !DIExpression()), !dbg !8245
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8246
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8244, metadata !DIExpression()), !dbg !8245
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8247
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8247
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8249
  br i1 %4, label %7, label %5, !dbg !8250

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8251
  br label %7, !dbg !8252

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8245
  ret i32 %8, !dbg !8253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8254 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8256, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i8* %0, metadata !8257, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 1, metadata !8258, metadata !DIExpression()), !dbg !8260
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8261
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8259, metadata !DIExpression()), !dbg !8260
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8262
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8262
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8264
  br i1 %5, label %8, label %6, !dbg !8265

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8* noundef %0, i32 noundef 1) #26, !dbg !8266
  br label %8, !dbg !8267

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8260
  ret i32 %9, !dbg !8268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8269 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8271, metadata !DIExpression()), !dbg !8272
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8273, !srcloc !8275
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8276
  ret void, !dbg !8277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8278 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8280, metadata !DIExpression()), !dbg !8282
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8283
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8281, metadata !DIExpression()), !dbg !8282
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8284
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8284
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8286
  br i1 %4, label %6, label %5, !dbg !8287

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8288
  br label %6, !dbg !8290

6:                                                ; preds = %5, %0
  ret void, !dbg !8291
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1152 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1154, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i8* %1, metadata !1155, metadata !DIExpression()), !dbg !8292
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8293
  %5 = icmp eq i32 %4, 0, !dbg !8293
  br i1 %5, label %89, label %6, !dbg !8294

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8295
  %8 = icmp eq i32 %7, 0, !dbg !8294
  br i1 %8, label %89, label %9, !dbg !8296

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8297
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8298
  %11 = icmp eq i32 %10, 0, !dbg !8298
  br i1 %11, label %86, label %12, !dbg !8300, !llvm.loop !8301

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1156, metadata !DIExpression(DW_OP_deref)), !dbg !8303
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %13, metadata !1158, metadata !DIExpression()), !dbg !8303
  %14 = icmp slt i32 %13, 0, !dbg !8305
  br i1 %14, label %85, label %15, !dbg !8307

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8308
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8308
  br i1 %17, label %18, label %23, !dbg !8309

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8310
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8310
  %21 = call fastcc i8* @k_queue_get.49(%struct.k_queue* noundef %20) #27, !dbg !8310
  call void @llvm.dbg.value(metadata i8* %21, metadata !1159, metadata !DIExpression()), !dbg !8311
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8312
  %22 = icmp eq i8* %21, null, !dbg !8313
  br i1 %22, label %85, label %23, !dbg !8315

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8316
  br i1 %24, label %25, label %29, !dbg !8318

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8319
  call void @llvm.dbg.value(metadata i8 %26, metadata !1156, metadata !DIExpression()), !dbg !8303
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8321
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8321
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8322
  br label %86, !dbg !8323, !llvm.loop !8301

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8324
  %31 = load i8, i8* %3, align 1, !dbg !8303
  call void @llvm.dbg.value(metadata i8 %31, metadata !1156, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata i8 %31, metadata !1156, metadata !DIExpression()), !dbg !8303
  br i1 %30, label %32, label %35, !dbg !8326

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8327
  br i1 %33, label %34, label %86, !dbg !8330, !llvm.loop !8301

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8331
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8333
  br label %86, !dbg !8334, !llvm.loop !8301

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8335
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8337
  %38 = icmp eq i32 %37, 0, !dbg !8337
  br i1 %38, label %39, label %74, !dbg !8338

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1156, metadata !DIExpression()), !dbg !8303
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8339, !llvm.loop !8301

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8341
  %42 = icmp eq i8 %41, 0, !dbg !8344
  br i1 %42, label %86, label %43, !dbg !8345, !llvm.loop !8301

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8346
  %45 = add i8 %41, -1, !dbg !8348
  store i8 %45, i8* @cur, align 1, !dbg !8348
  %46 = zext i8 %45 to i32, !dbg !8346
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8346
  %48 = load i8, i8* @end, align 1, !dbg !8349
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8350
  br label %86, !dbg !8351, !llvm.loop !8301

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8352
  br label %86, !dbg !8353, !llvm.loop !8301

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8354
  %52 = load i8, i8* @cur, align 1, !dbg !8355
  %53 = zext i8 %52 to i32, !dbg !8355
  %54 = load i8, i8* @end, align 1, !dbg !8356
  %55 = zext i8 %54 to i32, !dbg !8356
  %56 = add nuw nsw i32 %55, %53, !dbg !8357
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8354
  store i8 0, i8* %57, align 1, !dbg !8358
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8359
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8360
  store i8 0, i8* @cur, align 1, !dbg !8361
  store i8 0, i8* @end, align 1, !dbg !8362
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8363
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8363
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8363
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8363
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8365
  br label %86, !dbg !8366, !llvm.loop !8301

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8367
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8367
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8369
  br i1 %66, label %86, label %67, !dbg !8369, !llvm.loop !8301

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8370
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8370
  %70 = load i8, i8* @cur, align 1, !dbg !8372
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8373
  %72 = load i8, i8* @cur, align 1, !dbg !8374
  %73 = add i8 %72, %71, !dbg !8374
  store i8 %73, i8* @cur, align 1, !dbg !8374
  br label %86, !dbg !8375, !llvm.loop !8301

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8376
  %76 = zext i8 %75 to i32, !dbg !8376
  %77 = load i8, i8* @end, align 1, !dbg !8378
  %78 = zext i8 %77 to i32, !dbg !8378
  %79 = add nuw nsw i32 %78, %76, !dbg !8379
  %80 = icmp ult i32 %79, 127, !dbg !8380
  br i1 %80, label %81, label %86, !dbg !8381

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8382
  %83 = add i8 %75, 1, !dbg !8384
  store i8 %83, i8* @cur, align 1, !dbg !8384
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8382
  call void @llvm.dbg.value(metadata i8 %31, metadata !1156, metadata !DIExpression()), !dbg !8303
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8385
  br label %86, !dbg !8386

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8302
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8302
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8293
  %88 = icmp eq i32 %87, 0, !dbg !8293
  br i1 %88, label %89, label %6, !dbg !8294

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8390, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8391, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.value(metadata i8* null, metadata !8392, metadata !DIExpression()), !dbg !8394
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8395
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8393, metadata !DIExpression()), !dbg !8394
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8396
  br i1 %2, label %8, label %3, !dbg !8398

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8399
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8399
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8400
  br i1 %6, label %8, label %7, !dbg !8401

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_42, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8402
  br label %8, !dbg !8404

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8408, metadata !DIExpression()), !dbg !8409
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8410, !srcloc !8412
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8413
  ret i32 %1, !dbg !8414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8417, metadata !DIExpression()), !dbg !8418
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8419, !srcloc !8421
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8422
  ret i32 %1, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8428, metadata !DIExpression()), !dbg !8432
  call void @llvm.dbg.value(metadata i8* %0, metadata !8429, metadata !DIExpression()), !dbg !8432
  call void @llvm.dbg.value(metadata i32 1, metadata !8430, metadata !DIExpression()), !dbg !8432
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8433
  call void @llvm.dbg.value(metadata i32 %2, metadata !8431, metadata !DIExpression()), !dbg !8432
  %3 = icmp slt i32 %2, 0, !dbg !8434
  br i1 %3, label %4, label %5, !dbg !8436

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8437
  br label %5, !dbg !8439

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8432
  ret i32 %6, !dbg !8440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.49(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8441 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8451, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8450, metadata !DIExpression()), !dbg !8452
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8453, !srcloc !8455
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8456
  ret i8* %2, !dbg !8457
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #17 !dbg !8458 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8464, metadata !DIExpression()), !dbg !8468
  call void @llvm.dbg.value(metadata i32 %0, metadata !8465, metadata !DIExpression()), !dbg !8468
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8469
  call void @llvm.dbg.value(metadata i32 %2, metadata !8466, metadata !DIExpression()), !dbg !8468
  %3 = and i32 %0, 31, !dbg !8470
  %4 = shl nuw i32 1, %3, !dbg !8471
  %5 = and i32 %2, %4, !dbg !8471
  %6 = icmp ne i32 %5, 0, !dbg !8471
  ret i1 %6, !dbg !8472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8473 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8477, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata i8* %1, metadata !8478, metadata !DIExpression()), !dbg !8480
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8481
  br i1 %3, label %4, label %11, !dbg !8483

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8484
  %6 = tail call fastcc i32 @isdigit.51(i32 noundef %5) #27, !dbg !8487
  %7 = icmp eq i32 %6, 0, !dbg !8487
  br i1 %7, label %8, label %9, !dbg !8488

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8489
  br label %34, !dbg !8491

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8492
  %10 = add nsw i32 %5, -48, !dbg !8493
  store i32 %10, i32* @ansi_val, align 4, !dbg !8494
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8495
  br label %81, !dbg !8496

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8497
  br i1 %12, label %13, label %34, !dbg !8499

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8500
  %15 = tail call fastcc i32 @isdigit.51(i32 noundef %14) #27, !dbg !8503
  %16 = icmp eq i32 %15, 0, !dbg !8503
  br i1 %16, label %29, label %17, !dbg !8504

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8505
  br i1 %18, label %19, label %24, !dbg !8508

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8509
  %21 = mul i32 %20, 10, !dbg !8509
  %22 = add nsw i32 %14, -48, !dbg !8511
  %23 = add i32 %22, %21, !dbg !8512
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8512
  br label %81, !dbg !8513

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8514
  %26 = mul i32 %25, 10, !dbg !8514
  %27 = add nsw i32 %14, -48, !dbg !8516
  %28 = add i32 %27, %26, !dbg !8517
  store i32 %28, i32* @ansi_val, align 4, !dbg !8517
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8518
  br i1 %30, label %31, label %33, !dbg !8520

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8521
  br i1 %32, label %33, label %81, !dbg !8522

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8523
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8524
  br label %34, !dbg !8525

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8479), !dbg !8526
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8527

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8528
  %37 = load i8, i8* @cur, align 1, !dbg !8531
  %38 = zext i8 %37 to i32, !dbg !8531
  %39 = icmp ugt i32 %36, %38, !dbg !8532
  br i1 %39, label %80, label %40, !dbg !8533

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8534
  %42 = trunc i32 %36 to i8, !dbg !8534
  %43 = add i8 %41, %42, !dbg !8534
  store i8 %43, i8* @end, align 1, !dbg !8534
  %44 = sub i8 %37, %42, !dbg !8535
  store i8 %44, i8* @cur, align 1, !dbg !8535
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8536
  br label %80, !dbg !8537

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8538
  %47 = load i8, i8* @end, align 1, !dbg !8540
  %48 = zext i8 %47 to i32, !dbg !8540
  %49 = icmp ugt i32 %46, %48, !dbg !8541
  br i1 %49, label %80, label %50, !dbg !8542

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8543
  %52 = sub i8 %47, %51, !dbg !8543
  store i8 %52, i8* @end, align 1, !dbg !8543
  %53 = load i8, i8* @cur, align 1, !dbg !8544
  %54 = add i8 %53, %51, !dbg !8544
  store i8 %54, i8* @cur, align 1, !dbg !8544
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8545
  br label %80, !dbg !8546

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8547
  %57 = icmp eq i8 %56, 0, !dbg !8547
  br i1 %57, label %80, label %58, !dbg !8549

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8550
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8551
  %60 = load i8, i8* @cur, align 1, !dbg !8552
  %61 = load i8, i8* @end, align 1, !dbg !8553
  %62 = add i8 %61, %60, !dbg !8553
  store i8 %62, i8* @end, align 1, !dbg !8553
  store i8 0, i8* @cur, align 1, !dbg !8554
  br label %80, !dbg !8555

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8556
  %65 = icmp eq i8 %64, 0, !dbg !8556
  br i1 %65, label %80, label %66, !dbg !8558

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8559
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8560
  %68 = load i8, i8* @end, align 1, !dbg !8561
  %69 = load i8, i8* @cur, align 1, !dbg !8562
  %70 = add i8 %69, %68, !dbg !8562
  store i8 %70, i8* @cur, align 1, !dbg !8562
  store i8 0, i8* @end, align 1, !dbg !8563
  br label %80, !dbg !8564

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8565
  %73 = icmp eq i8 %72, 0, !dbg !8565
  br i1 %73, label %80, label %74, !dbg !8567

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8568
  %75 = load i8, i8* @cur, align 1, !dbg !8569
  %76 = zext i8 %75 to i32, !dbg !8570
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8570
  %78 = load i8, i8* @end, align 1, !dbg !8571
  %79 = add i8 %78, -1, !dbg !8571
  store i8 %79, i8* @end, align 1, !dbg !8571
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8572
  br label %80, !dbg !8573

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8574
  br label %81, !dbg !8575

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8575
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #17 !dbg !8576 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8581, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.value(metadata i32 %0, metadata !8582, metadata !DIExpression()), !dbg !8585
  %2 = and i32 %0, 31, !dbg !8586
  %3 = shl nuw i32 1, %2, !dbg !8586
  call void @llvm.dbg.value(metadata i32 %3, metadata !8583, metadata !DIExpression()), !dbg !8585
  %4 = xor i32 %3, -1, !dbg !8587
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8588
  call void @llvm.dbg.value(metadata i32 %5, metadata !8584, metadata !DIExpression()), !dbg !8585
  %6 = and i32 %5, %3, !dbg !8589
  %7 = icmp ne i32 %6, 0, !dbg !8590
  ret i1 %7, !dbg !8591
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #17 !dbg !8592 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8596, metadata !DIExpression()), !dbg !8599
  call void @llvm.dbg.value(metadata i32 %0, metadata !8597, metadata !DIExpression()), !dbg !8599
  %2 = and i32 %0, 31, !dbg !8600
  %3 = shl nuw i32 1, %2, !dbg !8600
  call void @llvm.dbg.value(metadata i32 %3, metadata !8598, metadata !DIExpression()), !dbg !8599
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8601
  ret void, !dbg !8602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8605, metadata !DIExpression()), !dbg !8606
  %2 = add i32 %0, -32, !dbg !8607
  %3 = icmp ult i32 %2, 95, !dbg !8607
  %4 = zext i1 %3 to i32, !dbg !8607
  ret i32 %4, !dbg !8608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8609 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8613, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8 %1, metadata !8614, metadata !DIExpression()), !dbg !8615
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8616
  %3 = icmp eq i8 %1, 0, !dbg !8617
  br i1 %3, label %4, label %5, !dbg !8619

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8620
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8622
  br label %14, !dbg !8623

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8624
  call void @llvm.dbg.value(metadata i8 %1, metadata !8614, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %0, metadata !8613, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8 %1, metadata !8614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8615
  br label %6, !dbg !8625

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8614, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i8* %8, metadata !8613, metadata !DIExpression()), !dbg !8615
  %9 = add i8 %7, -1, !dbg !8626
  call void @llvm.dbg.value(metadata i8 %9, metadata !8614, metadata !DIExpression()), !dbg !8615
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8627
  %11 = load i8, i8* %10, align 1, !dbg !8629
  store i8 %11, i8* %8, align 1, !dbg !8630
  call void @llvm.dbg.value(metadata i8* %10, metadata !8613, metadata !DIExpression()), !dbg !8615
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8631
  call void @llvm.dbg.value(metadata i8 %9, metadata !8614, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8615
  %12 = icmp eq i8 %9, 0, !dbg !8632
  br i1 %12, label %13, label %6, !dbg !8625, !llvm.loop !8633

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8635
  tail call fastcc void @cursor_restore() #27, !dbg !8636
  br label %14, !dbg !8637

14:                                               ; preds = %13, %4
  ret void, !dbg !8637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8642, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %1, metadata !8643, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %2, metadata !8644, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8647
  %4 = icmp eq i8 %2, 0, !dbg !8648
  br i1 %4, label %5, label %6, !dbg !8650

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8651
  br label %17, !dbg !8653

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8654
  call void @llvm.dbg.value(metadata i8 %7, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %0, metadata !8642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8646
  store i8 %1, i8* %0, align 1, !dbg !8655
  tail call fastcc void @cursor_save() #27, !dbg !8656
  call void @llvm.dbg.value(metadata i8 %7, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %2, metadata !8644, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %0, metadata !8642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %2, metadata !8644, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8646
  br label %8, !dbg !8657

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8646
  call void @llvm.dbg.value(metadata i8 %10, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %11, metadata !8644, metadata !DIExpression()), !dbg !8646
  %13 = add i8 %11, -1, !dbg !8658
  call void @llvm.dbg.value(metadata i8 %13, metadata !8644, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8659
  %14 = load i8, i8* %12, align 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8 %14, metadata !8643, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %12, metadata !8642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8646
  store i8 %10, i8* %12, align 1, !dbg !8662
  call void @llvm.dbg.value(metadata i8 %14, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %12, metadata !8642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %13, metadata !8644, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8646
  %15 = icmp eq i8 %13, 0, !dbg !8663
  br i1 %15, label %16, label %8, !dbg !8657, !llvm.loop !8664

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8666
  br label %17, !dbg !8667

17:                                               ; preds = %16, %5
  ret void, !dbg !8667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8668 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.50, i32 0, i32 0)) #26, !dbg !8669
  ret void, !dbg !8670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8671 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8672
  ret void, !dbg !8673
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #17 !dbg !8674 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8679, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata i32 %0, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8682
  ret i32 %2, !dbg !8683
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #17 !dbg !8684 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8686, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.value(metadata i32 %0, metadata !8687, metadata !DIExpression()), !dbg !8688
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8689
  ret i32 %2, !dbg !8690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.51(i32 noundef %0) unnamed_addr #11 !dbg !8691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8693, metadata !DIExpression()), !dbg !8694
  %2 = add i32 %0, -48, !dbg !8695
  %3 = icmp ult i32 %2, 10, !dbg !8696
  %4 = zext i1 %3 to i32, !dbg !8696
  ret i32 %4, !dbg !8697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #17 !dbg !8698 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8700, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 4, metadata !8701, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 16, metadata !8702, metadata !DIExpression()), !dbg !8704
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8705
  call void @llvm.dbg.value(metadata i32 %1, metadata !8703, metadata !DIExpression()), !dbg !8704
  %2 = and i32 %1, 16, !dbg !8706
  %3 = icmp ne i32 %2, 0, !dbg !8707
  ret i1 %3, !dbg !8708
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #17 !dbg !8709 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8711, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata i32 %0, metadata !8712, metadata !DIExpression()), !dbg !8714
  %2 = and i32 %0, 31, !dbg !8715
  %3 = shl nuw i32 1, %2, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %3, metadata !8713, metadata !DIExpression()), !dbg !8714
  %4 = xor i32 %3, -1, !dbg !8716
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8717
  ret void, !dbg !8718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8721, metadata !DIExpression()), !dbg !8722
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i32 noundef %0) #26, !dbg !8723
  ret void, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8727, metadata !DIExpression()), !dbg !8728
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8729
  ret void, !dbg !8730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #17 !dbg !8731 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8735, metadata !DIExpression()), !dbg !8736
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8737
  ret i32 %1, !dbg !8738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8739 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8741, metadata !DIExpression()), !dbg !8743
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8744
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8742, metadata !DIExpression()), !dbg !8743
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8745
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8745
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8747
  br i1 %4, label %7, label %5, !dbg !8748

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8749
  br label %7, !dbg !8750

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8743
  ret i32 %8, !dbg !8751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8752 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8754, metadata !DIExpression()), !dbg !8756
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8757
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8755, metadata !DIExpression()), !dbg !8756
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8758
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8758
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8760
  br i1 %4, label %7, label %5, !dbg !8761

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8762
  br label %7, !dbg !8763

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8756
  ret i32 %8, !dbg !8764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8765 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8767, metadata !DIExpression()), !dbg !8769
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8770
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8768, metadata !DIExpression()), !dbg !8769
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8771
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8771
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8773
  br i1 %4, label %6, label %5, !dbg !8774

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8775
  br label %6, !dbg !8777

6:                                                ; preds = %5, %0
  ret void, !dbg !8778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8779 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8781, metadata !DIExpression()), !dbg !8783
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8784
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8782, metadata !DIExpression()), !dbg !8783
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8785
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8785
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8787
  br i1 %4, label %6, label %5, !dbg !8788

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8789
  br label %6, !dbg !8791

6:                                                ; preds = %5, %0
  ret void, !dbg !8792
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8793 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8795, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i8 %1, metadata !8796, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 %2, metadata !8797, metadata !DIExpression()), !dbg !8800
  %5 = bitcast i32* %4 to i8*, !dbg !8801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8801
  call void @llvm.dbg.value(metadata i32* %4, metadata !8799, metadata !DIExpression(DW_OP_deref)), !dbg !8800
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %6, metadata !8798, metadata !DIExpression()), !dbg !8800
  %7 = icmp eq i32 %6, 0, !dbg !8803
  br i1 %7, label %8, label %31, !dbg !8805

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8798, metadata !DIExpression()), !dbg !8800
  %9 = and i32 %2, 131072, !dbg !8806
  %10 = icmp eq i32 %9, 0, !dbg !8808
  br i1 %10, label %28, label %11, !dbg !8809

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8810
  %13 = icmp eq i32 %12, 0, !dbg !8813
  br i1 %13, label %18, label %14, !dbg !8814

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8815
  %16 = shl nuw i32 1, %15, !dbg !8815
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8817
  br label %25, !dbg !8818

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8819
  %20 = icmp eq i32 %19, 0, !dbg !8821
  %21 = zext i8 %1 to i32, !dbg !8800
  br i1 %20, label %25, label %22, !dbg !8822

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8823
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8825
  br label %25, !dbg !8826

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8827
  %27 = load i32, i32* %4, align 4, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %30, metadata !8799, metadata !DIExpression()), !dbg !8800
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !8829
  br label %31, !dbg !8830

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8827
  %30 = load i32, i32* %4, align 4, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %30, metadata !8799, metadata !DIExpression()), !dbg !8800
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8798, metadata !DIExpression()), !dbg !8800
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8831
  ret i32 %6, !dbg !8831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !8832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8836, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32* %1, metadata !8837, metadata !DIExpression()), !dbg !8841
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8842
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8842
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8842
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8838, metadata !DIExpression()), !dbg !8841
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8843
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8843
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8843
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8840, metadata !DIExpression()), !dbg !8841
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !8844
  store i32 %9, i32* %1, align 4, !dbg !8845
  ret i32 0, !dbg !8846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !8847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8849, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %1, metadata !8850, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32 %2, metadata !8851, metadata !DIExpression()), !dbg !8855
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8856
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8856
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8856
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8852, metadata !DIExpression()), !dbg !8855
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8857
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8857
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8857
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8853, metadata !DIExpression()), !dbg !8855
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %10, metadata !8854, metadata !DIExpression()), !dbg !8855
  %11 = xor i32 %1, -1, !dbg !8859
  %12 = and i32 %10, %11, !dbg !8860
  %13 = and i32 %2, %1, !dbg !8861
  %14 = or i32 %12, %13, !dbg !8862
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !8863
  ret i32 0, !dbg !8864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8867, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 %1, metadata !8868, metadata !DIExpression()), !dbg !8871
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8872
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8872
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8872
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8869, metadata !DIExpression()), !dbg !8871
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8873
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8873
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8873
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8870, metadata !DIExpression()), !dbg !8871
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8874
  store volatile i32 %1, i32* %9, align 4, !dbg !8874
  ret i32 0, !dbg !8875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8878, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %1, metadata !8879, metadata !DIExpression()), !dbg !8882
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8883
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8883
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8883
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8880, metadata !DIExpression()), !dbg !8882
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8884
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8884
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8884
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8881, metadata !DIExpression()), !dbg !8882
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !8885
  ret i32 0, !dbg !8886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8887 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8889, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 %1, metadata !8890, metadata !DIExpression()), !dbg !8893
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8894
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8894
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8894
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8891, metadata !DIExpression()), !dbg !8893
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8895
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8895
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8895
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8892, metadata !DIExpression()), !dbg !8893
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8896
  %10 = load volatile i32, i32* %9, align 4, !dbg !8896
  %11 = xor i32 %10, %1, !dbg !8896
  store volatile i32 %11, i32* %9, align 4, !dbg !8896
  ret i32 0, !dbg !8897
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8900, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i8 %1, metadata !8901, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %2, metadata !8902, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 %3, metadata !8903, metadata !DIExpression()), !dbg !8910
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8911
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8911
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8911
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8904, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i8* undef, metadata !8905, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8907, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8908, metadata !DIExpression()), !dbg !8910
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8912

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8913
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !8917
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8918
  %12 = load i32, i32* %11, align 4, !dbg !8918
  %13 = icmp eq i32 %10, %12, !dbg !8919
  br i1 %13, label %14, label %29, !dbg !8920

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8921
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8923
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8924
  br label %29, !dbg !8925

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8926
  %17 = load i8*, i8** %16, align 4, !dbg !8926
  call void @llvm.dbg.value(metadata i8* %17, metadata !8905, metadata !DIExpression()), !dbg !8910
  %18 = zext i8 %1 to i32, !dbg !8927
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8929
  %20 = icmp eq i32 %19, 0, !dbg !8930
  br i1 %20, label %21, label %29, !dbg !8931

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8932
  %23 = load i32, i32* %22, align 4, !dbg !8932
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !8933
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8934

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8907, metadata !DIExpression()), !dbg !8910
  br label %27, !dbg !8935

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8907, metadata !DIExpression()), !dbg !8910
  br label %27, !dbg !8937

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8907, metadata !DIExpression()), !dbg !8910
  br label %27, !dbg !8938

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8910
  call void @llvm.dbg.value(metadata i32 %28, metadata !8907, metadata !DIExpression()), !dbg !8910
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8939
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8940
  br label %29, !dbg !8940

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8910
  call void @llvm.dbg.value(metadata i32 %30, metadata !8908, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.label(metadata !8909), !dbg !8941
  ret i32 %30, !dbg !8942
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8945, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8946, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata i1 %2, metadata !8947, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8949
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8950
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8950
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8950
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8948, metadata !DIExpression()), !dbg !8949
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8951
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !8952
  ret i32 %8, !dbg !8953
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8954 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8960, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8961, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i1 %2, metadata !8962, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8963
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !8964
  br i1 %4, label %10, label %5, !dbg !8966

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8967
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !8970
  %8 = or i1 %7, %2, !dbg !8971
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8971
  br i1 %2, label %11, label %13, !dbg !8971

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8972

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8973
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !8976
  br label %13, !dbg !8977

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8963
  ret i32 %14, !dbg !8978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8983, metadata !DIExpression()), !dbg !8984
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !8985
  %3 = icmp eq %struct._snode* %2, null, !dbg !8985
  ret i1 %3, !dbg !8985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8986 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8990, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8991, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8992, metadata !DIExpression()), !dbg !8994
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !8995
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8992, metadata !DIExpression()), !dbg !8994
  %4 = icmp eq %struct._snode* %3, null, !dbg !8997
  br i1 %4, label %15, label %5, !dbg !8995

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8992, metadata !DIExpression()), !dbg !8994
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8999
  br i1 %6, label %9, label %11, !dbg !9002

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8992, metadata !DIExpression()), !dbg !8994
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8999
  br i1 %8, label %9, label %11, !dbg !9002, !llvm.loop !9003

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !9004
  br label %15, !dbg !9004

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8992, metadata !DIExpression()), !dbg !8994
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !8997
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8993, metadata !DIExpression()), !dbg !8994
  %14 = icmp eq %struct._snode* %13, null, !dbg !8997
  br i1 %14, label %15, label %7, !dbg !8995, !llvm.loop !9003

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9011, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9012, metadata !DIExpression()), !dbg !9013
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9014
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !9014
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !9014
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9015
  %5 = icmp eq %struct._snode* %4, null, !dbg !9015
  br i1 %5, label %6, label %8, !dbg !9014

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9017
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9017
  br label %8, !dbg !9017

8:                                                ; preds = %6, %2
  ret void, !dbg !9014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9023, metadata !DIExpression()), !dbg !9024
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9025
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9025
  ret %struct._snode* %3, !dbg !9026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9027 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9031, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9032, metadata !DIExpression()), !dbg !9033
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9034
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9035
  ret void, !dbg !9036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9037 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9039, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9040, metadata !DIExpression()), !dbg !9041
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9042
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9043
  ret void, !dbg !9044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9045 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9047, metadata !DIExpression()), !dbg !9048
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9049
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9049
  ret %struct._snode* %3, !dbg !9050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9053, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9054, metadata !DIExpression()), !dbg !9055
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9056
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9057
  ret void, !dbg !9058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9059 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9063, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9064, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9065, metadata !DIExpression()), !dbg !9066
  %4 = icmp eq %struct._snode* %1, null, !dbg !9067
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9069
  br i1 %4, label %6, label %11, !dbg !9070

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9071
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9073
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9073
  br i1 %8, label %9, label %15, !dbg !9071

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9075
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9075
  br label %15, !dbg !9075

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9077
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9079
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9079
  br i1 %13, label %14, label %15, !dbg !9077

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9081
  br label %15, !dbg !9081

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9070
  ret void, !dbg !9070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9083 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9087, metadata !DIExpression()), !dbg !9088
  %2 = icmp eq %struct._snode* %0, null, !dbg !9089
  br i1 %2, label %5, label %3, !dbg !9089

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9089
  br label %5, !dbg !9089

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9089
  ret %struct._snode* %6, !dbg !9089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9090 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9092, metadata !DIExpression()), !dbg !9093
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9094
  ret %struct._snode* %2, !dbg !9094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9095 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9097, metadata !DIExpression()), !dbg !9098
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9099
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9099
  ret %struct._snode* %3, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9103, metadata !DIExpression()), !dbg !9106
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9107, !range !9108
  call void @llvm.dbg.value(metadata i32 %2, metadata !9104, metadata !DIExpression()), !dbg !9106
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %3, metadata !9105, metadata !DIExpression()), !dbg !9106
  ret i32 %3, !dbg !9110
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9113, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i8* %1, metadata !9114, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i8* %1, metadata !9115, metadata !DIExpression()), !dbg !9116
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9117
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9117
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9118
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9118
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9118
  %8 = shl nuw i32 1, %0, !dbg !9119
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9120
  ret void, !dbg !9121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9122 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9126, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9127, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9128, metadata !DIExpression()), !dbg !9132
  %4 = bitcast i64* %3 to i8*, !dbg !9133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9133
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !9130, metadata !DIExpression()), !dbg !9132
  store i64 4294967328, i64* %3, align 8, !dbg !9134
  call void @llvm.dbg.value(metadata i64* %3, metadata !9130, metadata !DIExpression(DW_OP_deref)), !dbg !9132
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9135
  call void @llvm.dbg.value(metadata i32 %5, metadata !9131, metadata !DIExpression()), !dbg !9132
  %6 = icmp eq i32 %5, 0, !dbg !9136
  br i1 %6, label %7, label %8, !dbg !9138

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9139
  br label %8, !dbg !9140

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9141
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9144, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i8* %0, metadata !9145, metadata !DIExpression()), !dbg !9147
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9148
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9146, metadata !DIExpression()), !dbg !9147
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9149
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9149
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !9150
  ret i32 %5, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9154, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9155, metadata !DIExpression()), !dbg !9157
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9158
  call void @llvm.dbg.value(metadata i32 %3, metadata !9156, metadata !DIExpression()), !dbg !9157
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9159
  ret void, !dbg !9160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9165, metadata !DIExpression()), !dbg !9166
  %2 = sdiv i32 %0, 4, !dbg !9167
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9168
  %6 = add nsw i32 %5, 16, !dbg !9169
  %7 = shl i32 15, %6, !dbg !9170
  %8 = or i32 %7, %2, !dbg !9171
  ret i32 %8, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9178, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i32 %1, metadata !9179, metadata !DIExpression()), !dbg !9180
  %3 = and i32 %1, 3, !dbg !9181
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !9181
  %5 = load volatile i32, i32* %4, align 4, !dbg !9181
  %6 = lshr i32 %1, 16, !dbg !9181
  %7 = xor i32 %6, -1, !dbg !9181
  %8 = and i32 %5, %7, !dbg !9181
  call void @llvm.dbg.value(metadata i32 %6, metadata !9182, metadata !DIExpression()) #25, !dbg !9186
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9188, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %9, metadata !9185, metadata !DIExpression()) #25, !dbg !9186
  call void @llvm.dbg.value(metadata i32 %9, metadata !9190, metadata !DIExpression()) #25, !dbg !9195
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9197, !range !3786
  %11 = shl i32 %0, %10, !dbg !9181
  %12 = or i32 %11, %8, !dbg !9181
  store volatile i32 %12, i32* %4, align 4, !dbg !9181
  ret void, !dbg !9198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9203, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9204, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i32 %2, metadata !9205, metadata !DIExpression()), !dbg !9208
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9209
  %5 = icmp eq %struct._snode* %4, null, !dbg !9209
  br i1 %5, label %21, label %6, !dbg !9209

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9211
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9206, metadata !DIExpression()), !dbg !9208
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9212
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9212
  %11 = load i32, i32* %10, align 4, !dbg !9212
  %12 = and i32 %11, %2, !dbg !9216
  %13 = icmp eq i32 %12, 0, !dbg !9216
  br i1 %13, label %19, label %14, !dbg !9217

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9206, metadata !DIExpression()), !dbg !9208
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9218
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9218
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9218
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9220
  br label %19, !dbg !9221

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9206, metadata !DIExpression()), !dbg !9208
  %20 = icmp eq %struct._snode* %8, null, !dbg !9222
  br i1 %20, label %21, label %6, !dbg !9222

21:                                               ; preds = %19, %3
  ret void, !dbg !9223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9226, metadata !DIExpression()), !dbg !9227
  %2 = and i32 %0, 3, !dbg !9228
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !9228
  %4 = load volatile i32, i32* %3, align 4, !dbg !9228
  %5 = lshr i32 %0, 16, !dbg !9228
  %6 = and i32 %4, %5, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %5, metadata !9182, metadata !DIExpression()) #25, !dbg !9229
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9231, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %7, metadata !9185, metadata !DIExpression()) #25, !dbg !9229
  call void @llvm.dbg.value(metadata i32 %7, metadata !9190, metadata !DIExpression()) #25, !dbg !9232
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9234, !range !3786
  %9 = lshr i32 %6, %8, !dbg !9235
  ret i32 %9, !dbg !9236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9242, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.value(metadata i32 %1, metadata !9243, metadata !DIExpression()), !dbg !9244
  %3 = shl i32 %1, 16, !dbg !9245
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9245
  store volatile i32 %3, i32* %4, align 4, !dbg !9245
  ret void, !dbg !9246
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !9247 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9251, metadata !DIExpression()), !dbg !9252
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9253
  %3 = load volatile i32, i32* %2, align 4, !dbg !9253
  ret i32 %3, !dbg !9254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9255 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9257, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.value(metadata i32 %1, metadata !9258, metadata !DIExpression()), !dbg !9259
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9260
  store volatile i32 %1, i32* %3, align 4, !dbg !9260
  ret void, !dbg !9261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !9262 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9264, metadata !DIExpression()), !dbg !9265
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9266
  %3 = load volatile i32, i32* %2, align 4, !dbg !9266
  ret i32 %3, !dbg !9267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32* %1, metadata !9273, metadata !DIExpression()), !dbg !9274
  %3 = and i32 %0, 131072, !dbg !9275
  %4 = icmp eq i32 %3, 0, !dbg !9277
  br i1 %4, label %22, label %5, !dbg !9278

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9279
  %6 = and i32 %0, 2, !dbg !9281
  %7 = icmp eq i32 %6, 0, !dbg !9283
  br i1 %7, label %11, label %8, !dbg !9284

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9285
  %10 = icmp eq i32 %9, 0, !dbg !9285
  br i1 %10, label %33, label %11, !dbg !9288

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9289
  store i32 %12, i32* %1, align 4, !dbg !9289
  %13 = and i32 %0, 16, !dbg !9290
  %14 = icmp eq i32 %13, 0, !dbg !9292
  br i1 %14, label %17, label %15, !dbg !9293

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9294
  br label %31, !dbg !9296

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9297
  %19 = icmp eq i32 %18, 0, !dbg !9299
  br i1 %19, label %33, label %20, !dbg !9300

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9301
  br label %31, !dbg !9303

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9304
  %24 = icmp eq i32 %23, 0, !dbg !9306
  br i1 %24, label %31, label %25, !dbg !9307

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9308
  %27 = icmp eq i32 %26, 0, !dbg !9311
  br i1 %27, label %28, label %31, !dbg !9312

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9313
  br label %33, !dbg !9314

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9274
  ret i32 %34, !dbg !9314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9319, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %1, metadata !9320, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9321, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %3, metadata !9322, metadata !DIExpression()), !dbg !9330
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9331
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9331
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9331
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9323, metadata !DIExpression()), !dbg !9330
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9332
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9332
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9332
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9324, metadata !DIExpression()), !dbg !9330
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9333
  call void @llvm.dbg.value(metadata i32 %11, metadata !9325, metadata !DIExpression()), !dbg !9330
  %12 = and i32 %2, 48, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %12, metadata !9326, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9327, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9328, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9329, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9330
  %13 = lshr i32 %2, 6, !dbg !9335
  %14 = and i32 %13, 1, !dbg !9335
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9336
  %15 = lshr i32 %2, 7, !dbg !9337
  %16 = and i32 %15, 3, !dbg !9337
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9338
  %17 = lshr i32 %2, 9, !dbg !9339
  %18 = and i32 %17, 3, !dbg !9339
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9340
  %19 = icmp eq i32 %12, 32, !dbg !9341
  br i1 %19, label %20, label %24, !dbg !9343

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9344
  br i1 %21, label %22, label %23, !dbg !9347

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9348
  br label %24, !dbg !9350

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9351
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9353
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9354
  ret void, !dbg !9355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9358, metadata !DIExpression()), !dbg !9360
  %2 = shl nuw i32 1, %0, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %2, metadata !9359, metadata !DIExpression()), !dbg !9360
  ret i32 %2, !dbg !9362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !9363 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9367, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 %1, metadata !9368, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 %2, metadata !9369, metadata !DIExpression()), !dbg !9370
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9371
  %5 = load volatile i32, i32* %4, align 4, !dbg !9371
  %6 = xor i32 %1, -1, !dbg !9371
  %7 = and i32 %5, %6, !dbg !9371
  %8 = mul i32 %2, %1, !dbg !9371
  %9 = or i32 %7, %8, !dbg !9371
  store volatile i32 %9, i32* %4, align 4, !dbg !9371
  ret void, !dbg !9372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9375, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %1, metadata !9376, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32 %2, metadata !9377, metadata !DIExpression()), !dbg !9378
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9379
  %5 = load volatile i32, i32* %4, align 4, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9380
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9382, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9383
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9385, !range !3786
  %8 = shl nuw nsw i32 %7, 1, !dbg !9379
  %9 = shl i32 3, %8, !dbg !9379
  %10 = xor i32 %9, -1, !dbg !9379
  %11 = and i32 %5, %10, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9388
  %12 = shl i32 %2, %8, !dbg !9379
  %13 = or i32 %11, %12, !dbg !9379
  store volatile i32 %13, i32* %4, align 4, !dbg !9379
  ret void, !dbg !9390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9391 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9393, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 %2, metadata !9395, metadata !DIExpression()), !dbg !9396
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9397
  %5 = load volatile i32, i32* %4, align 4, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9398
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9400, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9401
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9403, !range !3786
  %8 = shl nuw nsw i32 %7, 1, !dbg !9397
  %9 = shl i32 3, %8, !dbg !9397
  %10 = xor i32 %9, -1, !dbg !9397
  %11 = and i32 %5, %10, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9406
  %12 = shl i32 %2, %8, !dbg !9397
  %13 = or i32 %11, %12, !dbg !9397
  store volatile i32 %13, i32* %4, align 4, !dbg !9397
  ret void, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %2, metadata !9413, metadata !DIExpression()), !dbg !9414
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9415
  %5 = load volatile i32, i32* %4, align 4, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9416
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9418, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9419
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9421, !range !3786
  %8 = shl nuw nsw i32 %7, 2, !dbg !9415
  %9 = shl i32 15, %8, !dbg !9415
  %10 = xor i32 %9, -1, !dbg !9415
  %11 = and i32 %5, %10, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9424
  %12 = shl i32 %2, %8, !dbg !9415
  %13 = or i32 %11, %12, !dbg !9415
  store volatile i32 %13, i32* %4, align 4, !dbg !9415
  ret void, !dbg !9426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9427 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9429, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %1, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %2, metadata !9431, metadata !DIExpression()), !dbg !9432
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9433
  %5 = load volatile i32, i32* %4, align 4, !dbg !9433
  %6 = lshr i32 %1, 8, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %6, metadata !9182, metadata !DIExpression()) #25, !dbg !9434
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9436, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %7, metadata !9185, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %7, metadata !9190, metadata !DIExpression()) #25, !dbg !9437
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9439, !range !3786
  %9 = shl nuw nsw i32 %8, 2, !dbg !9433
  %10 = shl i32 15, %9, !dbg !9433
  %11 = xor i32 %10, -1, !dbg !9433
  %12 = and i32 %5, %11, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %6, metadata !9182, metadata !DIExpression()) #25, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %7, metadata !9185, metadata !DIExpression()) #25, !dbg !9440
  call void @llvm.dbg.value(metadata i32 %7, metadata !9190, metadata !DIExpression()) #25, !dbg !9442
  %13 = shl i32 %2, %9, !dbg !9433
  %14 = or i32 %12, %13, !dbg !9433
  store volatile i32 %14, i32* %4, align 4, !dbg !9433
  ret void, !dbg !9444
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9445 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9447, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata i32 %1, metadata !9448, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.value(metadata i32 %2, metadata !9449, metadata !DIExpression()), !dbg !9450
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9451
  %5 = load volatile i32, i32* %4, align 4, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9452
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9454, !srcloc !9189
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9455
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9457, !range !3786
  %8 = shl nuw nsw i32 %7, 1, !dbg !9451
  %9 = shl i32 3, %8, !dbg !9451
  %10 = xor i32 %9, -1, !dbg !9451
  %11 = and i32 %5, %10, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %1, metadata !9182, metadata !DIExpression()) #25, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %6, metadata !9185, metadata !DIExpression()) #25, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %6, metadata !9190, metadata !DIExpression()) #25, !dbg !9460
  %12 = shl i32 %2, %8, !dbg !9451
  %13 = or i32 %11, %12, !dbg !9451
  store volatile i32 %13, i32* %4, align 4, !dbg !9451
  ret void, !dbg !9462
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9465, metadata !DIExpression()), !dbg !9468
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9469
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9469
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9469
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9466, metadata !DIExpression()), !dbg !9468
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9470
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9471
  %6 = tail call fastcc zeroext i1 @device_is_ready.64() #27, !dbg !9472
  br i1 %6, label %7, label %11, !dbg !9474

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %8, metadata !9467, metadata !DIExpression()), !dbg !9468
  %9 = icmp slt i32 %8, 0, !dbg !9476
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9478
  br label %11, !dbg !9478

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9468
  ret i32 %12, !dbg !9479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.64() unnamed_addr #1 !dbg !9480 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9484, metadata !DIExpression()), !dbg !9485
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9486, !srcloc !9488
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.65() #27, !dbg !9489
  ret i1 %1, !dbg !9490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9495, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i8 1, metadata !9496, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9497, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9499, metadata !DIExpression()), !dbg !9500
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9501
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9501
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9501
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9497, metadata !DIExpression()), !dbg !9500
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9502
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9505
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %7, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.value(metadata i32 %7, metadata !9498, metadata !DIExpression()), !dbg !9500
  ret i32 %7, !dbg !9507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.65() unnamed_addr #1 !dbg !9508 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9510, metadata !DIExpression()), !dbg !9511
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !9512
  ret i1 %1, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9518, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 %1, metadata !9519, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 %2, metadata !9520, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 %3, metadata !9521, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 0, metadata !9522, metadata !DIExpression()), !dbg !9526
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9527
  %5 = icmp eq i32 %3, 17, !dbg !9528
  br i1 %5, label %6, label %14, !dbg !9529

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %7, metadata !9523, metadata !DIExpression()), !dbg !9531
  %8 = icmp eq i32 %7, 0, !dbg !9532
  %9 = shl nuw i32 1, %1, !dbg !9534
  br i1 %8, label %12, label %10, !dbg !9535

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9536
  br label %14, !dbg !9538

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9539
  br label %14, !dbg !9542

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9543
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9546, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i8* %1, metadata !9547, metadata !DIExpression()), !dbg !9550
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9551
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9551
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9548, metadata !DIExpression()), !dbg !9550
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9552
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9552
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9554
  %9 = icmp eq i32 %8, 0, !dbg !9554
  br i1 %9, label %12, label %10, !dbg !9555

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9556
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9558
  br label %12, !dbg !9559

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9560
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9562
  %15 = icmp eq i32 %14, 0, !dbg !9562
  br i1 %15, label %19, label %16, !dbg !9563

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9564
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9565
  store i8 %18, i8* %1, align 1, !dbg !9566
  br label %19, !dbg !9567

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9550
  ret i32 %20, !dbg !9568
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9571, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i8 %1, metadata !9572, metadata !DIExpression()), !dbg !9575
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9576
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9576
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9576
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9573, metadata !DIExpression()), !dbg !9575
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9577

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9578
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9581
  %10 = icmp eq i32 %9, 0, !dbg !9581
  br i1 %10, label %18, label %11, !dbg !9582

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9583, !srcloc !9590
  call void @llvm.dbg.value(metadata i32 undef, metadata !9586, metadata !DIExpression()) #25, !dbg !9591
  call void @llvm.dbg.value(metadata i32 undef, metadata !9587, metadata !DIExpression()) #25, !dbg !9591
  call void @llvm.dbg.value(metadata i32 undef, metadata !9574, metadata !DIExpression()), !dbg !9575
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9592
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9594
  %15 = icmp eq i32 %14, 0, !dbg !9594
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9583
  br i1 %15, label %17, label %19, !dbg !9595

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9586, metadata !DIExpression()) #25, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %16, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 undef, metadata !9596, metadata !DIExpression()) #25, !dbg !9599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9601, !srcloc !9602
  br label %18, !dbg !9603

18:                                               ; preds = %17, %7
  br label %7, !dbg !9578, !llvm.loop !9604

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9583
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9606
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %20, metadata !9596, metadata !DIExpression()) #25, !dbg !9608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9610, !srcloc !9602
  ret void, !dbg !9611
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !9612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9614, metadata !DIExpression()), !dbg !9617
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9618
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9618
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9618
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9615, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i32 0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9619
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9619
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9621
  %8 = icmp ne i32 %7, 0, !dbg !9621
  %9 = zext i1 %8 to i32, !dbg !9622
  call void @llvm.dbg.value(metadata i32 %9, metadata !9616, metadata !DIExpression()), !dbg !9617
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9623
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9625
  %12 = icmp eq i32 %11, 0, !dbg !9625
  %13 = or i32 %9, 2, !dbg !9626
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %14, metadata !9616, metadata !DIExpression()), !dbg !9617
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9627
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9629
  %17 = icmp eq i32 %16, 0, !dbg !9629
  %18 = or i32 %14, 4, !dbg !9630
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %19, metadata !9616, metadata !DIExpression()), !dbg !9617
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9631
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9633
  %22 = icmp eq i32 %21, 0, !dbg !9633
  %23 = or i32 %19, 8, !dbg !9634
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9634
  call void @llvm.dbg.value(metadata i32 %24, metadata !9616, metadata !DIExpression()), !dbg !9617
  %25 = and i32 %24, 8, !dbg !9635
  %26 = icmp eq i32 %25, 0, !dbg !9635
  br i1 %26, label %29, label %27, !dbg !9637

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9638
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9640
  br label %29, !dbg !9641

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9642
  %31 = icmp eq i32 %30, 0, !dbg !9642
  br i1 %31, label %34, label %32, !dbg !9644

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9645
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9647
  br label %34, !dbg !9648

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9649
  %36 = icmp eq i32 %35, 0, !dbg !9649
  br i1 %36, label %39, label %37, !dbg !9651

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9652
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9654
  br label %39, !dbg !9655

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9656
  %41 = icmp eq i32 %40, 0, !dbg !9656
  br i1 %41, label %44, label %42, !dbg !9658

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9659
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9661
  br label %44, !dbg !9662

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9663
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9664
  ret i32 %24, !dbg !9665
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9668, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9669, metadata !DIExpression()), !dbg !9677
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9678
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9678
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9670, metadata !DIExpression()), !dbg !9677
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9679
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9679
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9679
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9671, metadata !DIExpression()), !dbg !9677
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9680
  %10 = load i8, i8* %9, align 4, !dbg !9680
  %11 = zext i8 %10 to i32, !dbg !9681
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9682
  call void @llvm.dbg.value(metadata i32 %12, metadata !9673, metadata !DIExpression()), !dbg !9677
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9683
  %14 = load i8, i8* %13, align 1, !dbg !9683
  %15 = zext i8 %14 to i32, !dbg !9684
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %16, metadata !9674, metadata !DIExpression()), !dbg !9677
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9686
  %18 = load i8, i8* %17, align 2, !dbg !9686
  %19 = zext i8 %18 to i32, !dbg !9687
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9688
  call void @llvm.dbg.value(metadata i32 %20, metadata !9675, metadata !DIExpression()), !dbg !9677
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9689
  %22 = load i8, i8* %21, align 1, !dbg !9689
  %23 = zext i8 %22 to i32, !dbg !9690
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9691
  call void @llvm.dbg.value(metadata i32 %24, metadata !9676, metadata !DIExpression()), !dbg !9677
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9692

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9694
  br i1 %26, label %69, label %27, !dbg !9696

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9697

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9698
  br i1 %29, label %65, label %30, !dbg !9698

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9700
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9677
  br i1 %31, label %38, label %34, !dbg !9702

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9703
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9703

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9706
  br i1 %37, label %38, label %69, !dbg !9707

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9708
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9709
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9710
  %41 = icmp eq i32 %12, %40, !dbg !9712
  br i1 %41, label %43, label %42, !dbg !9713

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9714
  br label %43, !dbg !9716

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9717
  %45 = icmp eq i32 %16, %44, !dbg !9719
  br i1 %45, label %47, label %46, !dbg !9720

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9721
  br label %47, !dbg !9723

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9724
  %49 = icmp eq i32 %20, %48, !dbg !9726
  br i1 %49, label %51, label %50, !dbg !9727

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9728
  br label %51, !dbg !9730

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9731
  %53 = icmp eq i32 %24, %52, !dbg !9733
  br i1 %53, label %55, label %54, !dbg !9734

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9735
  br label %55, !dbg !9737

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9738
  %57 = load i32, i32* %56, align 4, !dbg !9738
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9740
  %59 = load i32, i32* %58, align 4, !dbg !9740
  %60 = icmp eq i32 %57, %59, !dbg !9741
  br i1 %60, label %63, label %61, !dbg !9742

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9743
  %62 = load i32, i32* %56, align 4, !dbg !9745
  store i32 %62, i32* %58, align 4, !dbg !9746
  br label %63, !dbg !9747

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9748
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9749
  br label %69, !dbg !9750

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9698
  %67 = and i8 %66, 1, !dbg !9698
  %68 = icmp eq i8 %67, 0, !dbg !9698
  br i1 %68, label %30, label %69, !dbg !9698

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9677
  ret i32 %70, !dbg !9751
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9754, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9755, metadata !DIExpression()), !dbg !9757
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9758
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9758
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9758
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9756, metadata !DIExpression()), !dbg !9757
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9759
  %7 = load i32, i32* %6, align 4, !dbg !9759
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9760
  store i32 %7, i32* %8, align 4, !dbg !9761
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9762, !range !9763
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9764
  %11 = trunc i32 %10 to i8, !dbg !9764
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9765
  store i8 %11, i8* %12, align 4, !dbg !9766
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9767, !range !9768
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9769
  %15 = trunc i32 %14 to i8, !dbg !9769
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9770
  store i8 %15, i8* %16, align 1, !dbg !9771
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9772
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9773, !range !9763
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9774
  %20 = trunc i32 %19 to i8, !dbg !9774
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9775
  store i8 %20, i8* %21, align 2, !dbg !9776
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9777, !range !9778
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9779
  %24 = trunc i32 %23 to i8, !dbg !9779
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9780
  store i8 %24, i8* %25, align 1, !dbg !9781
  ret i32 0, !dbg !9782
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9785, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i8* %1, metadata !9786, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %2, metadata !9787, metadata !DIExpression()), !dbg !9791
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9792
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9792
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9792
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9788, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i8 0, metadata !9789, metadata !DIExpression()), !dbg !9791
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9793
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9793
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9795
  %10 = icmp eq i32 %9, 0, !dbg !9795
  br i1 %10, label %30, label %11, !dbg !9796

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9797, !srcloc !9590
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9797
  call void @llvm.dbg.value(metadata i32 %13, metadata !9586, metadata !DIExpression()) #25, !dbg !9799
  call void @llvm.dbg.value(metadata i32 undef, metadata !9587, metadata !DIExpression()) #25, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %13, metadata !9790, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i8 0, metadata !9789, metadata !DIExpression()), !dbg !9791
  %14 = icmp sgt i32 %2, 0, !dbg !9800
  br i1 %14, label %15, label %28, !dbg !9801

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9789, metadata !DIExpression()), !dbg !9791
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9802
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9803
  %20 = icmp eq i32 %19, 0, !dbg !9801
  br i1 %20, label %28, label %21, !dbg !9804

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9805
  %23 = add i8 %17, 1, !dbg !9807
  call void @llvm.dbg.value(metadata i8 %23, metadata !9789, metadata !DIExpression()), !dbg !9791
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9808
  %25 = load i8, i8* %24, align 1, !dbg !9808
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9809
  %26 = zext i8 %23 to i32, !dbg !9810
  %27 = icmp slt i32 %26, %2, !dbg !9800
  br i1 %27, label %15, label %28, !dbg !9801, !llvm.loop !9811

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9810
  call void @llvm.dbg.value(metadata i32 %13, metadata !9596, metadata !DIExpression()) #25, !dbg !9813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9815, !srcloc !9602
  br label %30, !dbg !9816

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9791
  ret i32 %31, !dbg !9817
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #15 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9820, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i8* %1, metadata !9821, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i32 %2, metadata !9822, metadata !DIExpression()), !dbg !9825
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9826
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9826
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9826
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9823, metadata !DIExpression()), !dbg !9825
  call void @llvm.dbg.value(metadata i8 0, metadata !9824, metadata !DIExpression()), !dbg !9825
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9827
  call void @llvm.dbg.value(metadata i8 0, metadata !9824, metadata !DIExpression()), !dbg !9825
  %8 = icmp sgt i32 %2, 0, !dbg !9828
  br i1 %8, label %9, label %28, !dbg !9829

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9824, metadata !DIExpression()), !dbg !9825
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9827
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9830
  %14 = icmp eq i32 %13, 0, !dbg !9829
  br i1 %14, label %28, label %15, !dbg !9831

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9832
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !9834
  %18 = add i8 %11, 1, !dbg !9835
  call void @llvm.dbg.value(metadata i8 %18, metadata !9824, metadata !DIExpression()), !dbg !9825
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9836
  store i8 %17, i8* %19, align 1, !dbg !9837
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9838
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !9840
  %22 = icmp eq i32 %21, 0, !dbg !9840
  br i1 %22, label %25, label %23, !dbg !9841

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9842
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !9844
  br label %25, !dbg !9845

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9824, metadata !DIExpression()), !dbg !9825
  %26 = zext i8 %18 to i32, !dbg !9846
  %27 = icmp slt i32 %26, %2, !dbg !9828
  br i1 %27, label %9, label %28, !dbg !9829, !llvm.loop !9847

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9846
  ret i32 %29, !dbg !9849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9853, metadata !DIExpression()), !dbg !9854
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9856
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9856
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9857
  ret void, !dbg !9858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9861, metadata !DIExpression()), !dbg !9863
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9864
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9864
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9862, metadata !DIExpression()), !dbg !9863
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9865
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9865
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9866
  ret void, !dbg !9867
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9868 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9870, metadata !DIExpression()), !dbg !9872
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9873
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9873
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9873
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9871, metadata !DIExpression()), !dbg !9872
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9874
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9874
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9875
  %8 = icmp eq i32 %7, 0, !dbg !9875
  br i1 %8, label %14, label %9, !dbg !9876

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9877
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !9878
  %12 = icmp ne i32 %11, 0, !dbg !9876
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9885
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9885
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9883, metadata !DIExpression()), !dbg !9884
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9886
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9886
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9887
  ret void, !dbg !9888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9894
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9894
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9892, metadata !DIExpression()), !dbg !9893
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9895
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9895
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9896
  ret void, !dbg !9897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #17 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9903
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9901, metadata !DIExpression()), !dbg !9902
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9904
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9905
  ret i32 %7, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9909, metadata !DIExpression()), !dbg !9911
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9912
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9912
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9910, metadata !DIExpression()), !dbg !9911
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9913
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9913
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9914
  ret i32 %7, !dbg !9915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9918, metadata !DIExpression()), !dbg !9920
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9921
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9921
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9921
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9919, metadata !DIExpression()), !dbg !9920
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9922
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9922
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9923
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9924
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9924
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !9924

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9926
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9928
  br label %11, !dbg !9929

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9928
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9930
  ret void, !dbg !9931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !9932 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9934, metadata !DIExpression()), !dbg !9936
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9937
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9937
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9937
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9935, metadata !DIExpression()), !dbg !9936
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9938
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9938
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9939
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9940
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9940
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !9940

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9942
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9944
  br label %11, !dbg !9945

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9944
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9946
  ret void, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !9948 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9950, metadata !DIExpression()), !dbg !9952
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9953
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9953
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9953
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9951, metadata !DIExpression()), !dbg !9952
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9954
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9955
  %8 = icmp eq i32 %7, 0, !dbg !9955
  br i1 %8, label %13, label %9, !dbg !9956

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9957
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9958
  %12 = icmp eq i32 %11, 0, !dbg !9958
  br i1 %12, label %13, label %22, !dbg !9959

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9960
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !9961
  %16 = icmp eq i32 %15, 0, !dbg !9961
  br i1 %16, label %22, label %17, !dbg !9962

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9963
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !9964
  %20 = icmp ne i32 %19, 0, !dbg !9962
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9966 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9968, metadata !DIExpression()), !dbg !9969
  ret i32 1, !dbg !9970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9973, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9974, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i8* %2, metadata !9975, metadata !DIExpression()), !dbg !9977
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9978
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9978
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9978
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9976, metadata !DIExpression()), !dbg !9977
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9979
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9980
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9981
  store i8* %2, i8** %8, align 4, !dbg !9982
  ret void, !dbg !9983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9984 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9989, metadata !DIExpression()), !dbg !9990
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9991
  %3 = load volatile i32, i32* %2, align 4, !dbg !9991
  %4 = lshr i32 %3, 5, !dbg !9992
  %5 = and i32 %4, 1, !dbg !9992
  ret i32 %5, !dbg !9993
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9996, metadata !DIExpression()), !dbg !9997
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9998
  %3 = load volatile i32, i32* %2, align 4, !dbg !9998
  %4 = lshr i32 %3, 5, !dbg !9999
  %5 = and i32 %4, 1, !dbg !9999
  ret i32 %5, !dbg !10000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10003, metadata !DIExpression()), !dbg !10004
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10005
  %3 = load volatile i32, i32* %2, align 4, !dbg !10005
  %4 = lshr i32 %3, 6, !dbg !10006
  %5 = and i32 %4, 1, !dbg !10006
  ret i32 %5, !dbg !10007
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10008 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10010, metadata !DIExpression()), !dbg !10011
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10012
  %3 = load volatile i32, i32* %2, align 4, !dbg !10012
  %4 = lshr i32 %3, 6, !dbg !10013
  %5 = and i32 %4, 1, !dbg !10013
  ret i32 %5, !dbg !10014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10021
  %3 = load volatile i32, i32* %2, align 4, !dbg !10021
  %4 = and i32 %3, -2, !dbg !10021
  store volatile i32 %4, i32* %2, align 4, !dbg !10021
  ret void, !dbg !10022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10023 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10025, metadata !DIExpression()), !dbg !10026
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10027
  %3 = load volatile i32, i32* %2, align 4, !dbg !10027
  %4 = and i32 %3, -65, !dbg !10027
  store volatile i32 %4, i32* %2, align 4, !dbg !10027
  ret void, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10031, metadata !DIExpression()), !dbg !10032
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10033
  %3 = load volatile i32, i32* %2, align 4, !dbg !10033
  %4 = and i32 %3, -257, !dbg !10033
  store volatile i32 %4, i32* %2, align 4, !dbg !10033
  ret void, !dbg !10034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10035 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10037, metadata !DIExpression()), !dbg !10038
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10039
  %3 = load volatile i32, i32* %2, align 4, !dbg !10039
  %4 = or i32 %3, 1, !dbg !10039
  store volatile i32 %4, i32* %2, align 4, !dbg !10039
  ret void, !dbg !10040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10045
  %3 = load volatile i32, i32* %2, align 4, !dbg !10045
  %4 = or i32 %3, 64, !dbg !10045
  store volatile i32 %4, i32* %2, align 4, !dbg !10045
  ret void, !dbg !10046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10047 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10049, metadata !DIExpression()), !dbg !10050
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10051
  %3 = load volatile i32, i32* %2, align 4, !dbg !10051
  %4 = or i32 %3, 256, !dbg !10051
  store volatile i32 %4, i32* %2, align 4, !dbg !10051
  ret void, !dbg !10052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10053 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10055, metadata !DIExpression()), !dbg !10056
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10057
  %3 = load volatile i32, i32* %2, align 4, !dbg !10057
  %4 = and i32 %3, -33, !dbg !10057
  store volatile i32 %4, i32* %2, align 4, !dbg !10057
  ret void, !dbg !10058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10059 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10061, metadata !DIExpression()), !dbg !10062
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10063
  %3 = load volatile i32, i32* %2, align 4, !dbg !10063
  %4 = or i32 %3, 32, !dbg !10063
  store volatile i32 %4, i32* %2, align 4, !dbg !10063
  ret void, !dbg !10064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10065 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10067, metadata !DIExpression()), !dbg !10068
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10069
  %3 = load volatile i32, i32* %2, align 4, !dbg !10069
  %4 = lshr i32 %3, 7, !dbg !10070
  %5 = and i32 %4, 1, !dbg !10070
  ret i32 %5, !dbg !10071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10072 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10074, metadata !DIExpression()), !dbg !10075
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10076
  %3 = load volatile i32, i32* %2, align 4, !dbg !10076
  %4 = and i32 %3, -65, !dbg !10076
  store volatile i32 %4, i32* %2, align 4, !dbg !10076
  ret void, !dbg !10077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10078 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10082
  %3 = load volatile i32, i32* %2, align 4, !dbg !10082
  %4 = or i32 %3, 64, !dbg !10082
  store volatile i32 %4, i32* %2, align 4, !dbg !10082
  ret void, !dbg !10083
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10084 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10088, metadata !DIExpression()), !dbg !10089
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10090
  %3 = load volatile i32, i32* %2, align 4, !dbg !10090
  %4 = trunc i32 %3 to i8, !dbg !10091
  ret i8 %4, !dbg !10092
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10093 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10095, metadata !DIExpression()), !dbg !10096
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10097
  %3 = load volatile i32, i32* %2, align 4, !dbg !10097
  %4 = lshr i32 %3, 3, !dbg !10098
  %5 = and i32 %4, 1, !dbg !10098
  ret i32 %5, !dbg !10099
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10100 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10102, metadata !DIExpression()), !dbg !10104
  %3 = bitcast i32* %2 to i8*, !dbg !10105
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10105
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10103, metadata !DIExpression()), !dbg !10106
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10107
  %5 = load volatile i32, i32* %4, align 4, !dbg !10107
  store volatile i32 %5, i32* %2, align 4, !dbg !10108
  %6 = load volatile i32, i32* %2, align 4, !dbg !10109
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10110
  %8 = load volatile i32, i32* %7, align 4, !dbg !10110
  store volatile i32 %8, i32* %2, align 4, !dbg !10111
  %9 = load volatile i32, i32* %2, align 4, !dbg !10112
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10113
  ret void, !dbg !10113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !10114 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata i8 %1, metadata !10119, metadata !DIExpression()), !dbg !10120
  %3 = zext i8 %1 to i32, !dbg !10121
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10122
  store volatile i32 %3, i32* %4, align 4, !dbg !10123
  ret void, !dbg !10124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !10125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10129, metadata !DIExpression()), !dbg !10131
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10132
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10132
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10132
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10130, metadata !DIExpression()), !dbg !10131
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10133
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10133
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10134
  ret i32 %7, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10140, metadata !DIExpression()), !dbg !10141
  %2 = icmp eq i32 %0, 1024, !dbg !10142
  %3 = select i1 %2, i32 2, i32 0, !dbg !10142
  %4 = icmp eq i32 %0, 1536, !dbg !10142
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10142
  ret i32 %5, !dbg !10143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !10144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10146, metadata !DIExpression()), !dbg !10148
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10149
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10149
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10149
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10147, metadata !DIExpression()), !dbg !10148
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10150
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10150
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10151
  ret i32 %7, !dbg !10152
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10157, metadata !DIExpression()), !dbg !10158
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10159
  %3 = icmp ult i32 %2, 4, !dbg !10159
  br i1 %3, label %4, label %7, !dbg !10159

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10159
  %6 = load i32, i32* %5, align 4, !dbg !10159
  br label %7, !dbg !10159

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10160
  ret i32 %8, !dbg !10162
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !10163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10165, metadata !DIExpression()), !dbg !10167
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10168
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10168
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10168
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10166, metadata !DIExpression()), !dbg !10167
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10169
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10169
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10170
  ret i32 %7, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10176, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.value(metadata i32 %1, metadata !10177, metadata !DIExpression()), !dbg !10178
  %3 = icmp eq i32 %0, 4096, !dbg !10179
  %4 = icmp eq i32 %1, 0, !dbg !10179
  %5 = select i1 %4, i32 4, i32 3, !dbg !10179
  %6 = select i1 %4, i32 3, i32 2, !dbg !10179
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10179
  ret i32 %7, !dbg !10180
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10183, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10186
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10186
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10186
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10184, metadata !DIExpression()), !dbg !10185
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10187
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10187
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10188
  ret i32 %7, !dbg !10189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10194, metadata !DIExpression()), !dbg !10195
  %2 = icmp eq i32 %0, 768, !dbg !10196
  %3 = zext i1 %2 to i32, !dbg !10195
  ret i32 %3, !dbg !10198
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10199 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10201, metadata !DIExpression()), !dbg !10202
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10203
  %3 = load volatile i32, i32* %2, align 4, !dbg !10203
  %4 = and i32 %3, 768, !dbg !10203
  ret i32 %4, !dbg !10204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10207, metadata !DIExpression()), !dbg !10208
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10209
  %3 = load volatile i32, i32* %2, align 4, !dbg !10209
  %4 = and i32 %3, 4096, !dbg !10209
  ret i32 %4, !dbg !10210
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10211 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10213, metadata !DIExpression()), !dbg !10214
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10215
  %3 = load volatile i32, i32* %2, align 4, !dbg !10215
  %4 = and i32 %3, 12288, !dbg !10215
  ret i32 %4, !dbg !10216
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10219, metadata !DIExpression()), !dbg !10220
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10221
  %3 = load volatile i32, i32* %2, align 4, !dbg !10221
  %4 = and i32 %3, 1536, !dbg !10221
  ret i32 %4, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10227, metadata !DIExpression()), !dbg !10228
  %2 = icmp eq i32 %0, 2, !dbg !10229
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10229
  %4 = icmp eq i32 %0, 1, !dbg !10229
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10229
  ret i32 %5, !dbg !10230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10235, metadata !DIExpression()), !dbg !10236
  %2 = icmp ult i32 %0, 3, !dbg !10237
  br i1 %2, label %3, label %6, !dbg !10237

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10237
  %5 = load i32, i32* %4, align 4, !dbg !10237
  br label %6, !dbg !10237

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10238
  ret i32 %7, !dbg !10240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10245, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10246, metadata !DIExpression()), !dbg !10247
  %3 = icmp eq i32 %0, 4, !dbg !10248
  %4 = icmp eq i32 %1, 0, !dbg !10248
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10248
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10248
  ret i32 %6, !dbg !10249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10254, metadata !DIExpression()), !dbg !10255
  %2 = icmp eq i32 %0, 1, !dbg !10256
  %3 = select i1 %2, i32 768, i32 0, !dbg !10255
  ret i32 %3, !dbg !10258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10259 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10261, metadata !DIExpression()), !dbg !10262
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10263
  %3 = load volatile i32, i32* %2, align 4, !dbg !10263
  %4 = and i32 %3, -8193, !dbg !10263
  store volatile i32 %4, i32* %2, align 4, !dbg !10263
  ret void, !dbg !10264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10269, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i32 %1, metadata !10270, metadata !DIExpression()), !dbg !10272
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10273
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10273
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10271, metadata !DIExpression()), !dbg !10272
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10274
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10274
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10279, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10280, metadata !DIExpression()), !dbg !10282
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10283
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10283
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10281, metadata !DIExpression()), !dbg !10282
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10284
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10284
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10285
  ret void, !dbg !10286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10289, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 %1, metadata !10290, metadata !DIExpression()), !dbg !10292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10293
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10293
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10291, metadata !DIExpression()), !dbg !10292
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10294
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10294
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10295
  ret void, !dbg !10296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !10297 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10299, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i32 %1, metadata !10300, metadata !DIExpression()), !dbg !10302
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10303
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10303
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10303
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10301, metadata !DIExpression()), !dbg !10302
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10304
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10304
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10305
  ret void, !dbg !10306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10307 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10309, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32 %1, metadata !10310, metadata !DIExpression()), !dbg !10314
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10315
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10315
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10315
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10311, metadata !DIExpression()), !dbg !10314
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10316
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10316
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10312, metadata !DIExpression()), !dbg !10314
  %10 = bitcast i32* %3 to i8*, !dbg !10317
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10317
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10318
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10318
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10322
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10322
  %15 = load i8*, i8** %14, align 4, !dbg !10322
  call void @llvm.dbg.value(metadata i32* %3, metadata !10313, metadata !DIExpression(DW_OP_deref)), !dbg !10314
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10323
  %17 = icmp slt i32 %16, 0, !dbg !10324
  br i1 %17, label %23, label %18, !dbg !10325

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10326
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10326
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10327
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10328
  %22 = load i32, i32* %3, align 4, !dbg !10329
  call void @llvm.dbg.value(metadata i32 %22, metadata !10313, metadata !DIExpression()), !dbg !10314
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10330
  br label %23, !dbg !10331

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10331
  ret void, !dbg !10331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10334, metadata !DIExpression()), !dbg !10335
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10336
  %3 = load volatile i32, i32* %2, align 4, !dbg !10336
  %4 = or i32 %3, 8192, !dbg !10336
  store volatile i32 %4, i32* %2, align 4, !dbg !10336
  ret void, !dbg !10337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10340, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i8* %1, metadata !10341, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32* %2, metadata !10342, metadata !DIExpression()), !dbg !10344
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10345
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10345
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10343, metadata !DIExpression()), !dbg !10344
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10346
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10346
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10348
  br i1 %9, label %12, label %10, !dbg !10349

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10350
  br label %12, !dbg !10351

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10344
  ret i32 %13, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10357, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10360
  %3 = load volatile i32, i32* %2, align 4, !dbg !10360
  %4 = and i32 %3, -32769, !dbg !10360
  store volatile i32 %4, i32* %2, align 4, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10366, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i32 %1, metadata !10367, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i32 0, metadata !10368, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i32 %2, metadata !10369, metadata !DIExpression()), !dbg !10370
  %4 = mul i32 %1, 25, !dbg !10371
  %5 = shl i32 %2, 2, !dbg !10371
  %6 = udiv i32 %4, %5, !dbg !10371
  %7 = udiv i32 %6, 100, !dbg !10371
  %8 = shl nuw nsw i32 %7, 4, !dbg !10371
  %9 = mul i32 %7, -100, !dbg !10371
  %10 = add i32 %9, %6, !dbg !10371
  %11 = shl i32 %10, 4, !dbg !10371
  %12 = add i32 %11, 50, !dbg !10371
  %13 = udiv i32 %12, 100, !dbg !10371
  %14 = and i32 %13, 240, !dbg !10371
  %15 = add nuw nsw i32 %14, %8, !dbg !10371
  %16 = and i32 %13, 15, !dbg !10371
  %17 = and i32 %15, 65520, !dbg !10374
  %18 = or i32 %17, %16, !dbg !10374
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10375
  store volatile i32 %18, i32* %19, align 4, !dbg !10376
  ret void, !dbg !10377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10380, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.value(metadata i32 %1, metadata !10381, metadata !DIExpression()), !dbg !10382
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10383
  %4 = load volatile i32, i32* %3, align 4, !dbg !10383
  %5 = and i32 %4, -769, !dbg !10383
  %6 = or i32 %5, %1, !dbg !10383
  store volatile i32 %6, i32* %3, align 4, !dbg !10383
  ret void, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10387, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 %1, metadata !10388, metadata !DIExpression()), !dbg !10389
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10390
  %4 = load volatile i32, i32* %3, align 4, !dbg !10390
  %5 = and i32 %4, -4097, !dbg !10390
  %6 = or i32 %5, %1, !dbg !10390
  store volatile i32 %6, i32* %3, align 4, !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10392 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10394, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %1, metadata !10395, metadata !DIExpression()), !dbg !10396
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10397
  %4 = load volatile i32, i32* %3, align 4, !dbg !10397
  %5 = and i32 %4, -12289, !dbg !10397
  %6 = or i32 %5, %1, !dbg !10397
  store volatile i32 %6, i32* %3, align 4, !dbg !10397
  ret void, !dbg !10398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10399 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10401, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10402, metadata !DIExpression()), !dbg !10403
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10404
  %4 = load volatile i32, i32* %3, align 4, !dbg !10404
  %5 = and i32 %4, -1537, !dbg !10404
  %6 = or i32 %5, %1, !dbg !10404
  store volatile i32 %6, i32* %3, align 4, !dbg !10404
  ret void, !dbg !10405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10408, metadata !DIExpression()), !dbg !10409
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10410
  %3 = load volatile i32, i32* %2, align 4, !dbg !10410
  %4 = and i32 %3, 1, !dbg !10410
  ret i32 %4, !dbg !10411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10414, metadata !DIExpression()), !dbg !10415
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10416
  %3 = load volatile i32, i32* %2, align 4, !dbg !10416
  %4 = lshr i32 %3, 1, !dbg !10417
  %5 = and i32 %4, 1, !dbg !10417
  ret i32 %5, !dbg !10418
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10421, metadata !DIExpression()), !dbg !10422
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10423
  %3 = load volatile i32, i32* %2, align 4, !dbg !10423
  %4 = lshr i32 %3, 8, !dbg !10424
  %5 = and i32 %4, 1, !dbg !10424
  ret i32 %5, !dbg !10425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10426 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10428, metadata !DIExpression()), !dbg !10429
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10430
  store volatile i32 -257, i32* %2, align 4, !dbg !10430
  ret void, !dbg !10431
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10432 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10434, metadata !DIExpression()), !dbg !10436
  %3 = bitcast i32* %2 to i8*, !dbg !10437
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10437
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10435, metadata !DIExpression()), !dbg !10438
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10439
  %5 = load volatile i32, i32* %4, align 4, !dbg !10439
  store volatile i32 %5, i32* %2, align 4, !dbg !10440
  %6 = load volatile i32, i32* %2, align 4, !dbg !10441
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10442
  %8 = load volatile i32, i32* %7, align 4, !dbg !10442
  store volatile i32 %8, i32* %2, align 4, !dbg !10443
  %9 = load volatile i32, i32* %2, align 4, !dbg !10444
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10445
  ret void, !dbg !10445
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10446 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10448, metadata !DIExpression()), !dbg !10450
  %3 = bitcast i32* %2 to i8*, !dbg !10451
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10451
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10449, metadata !DIExpression()), !dbg !10452
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10453
  %5 = load volatile i32, i32* %4, align 4, !dbg !10453
  store volatile i32 %5, i32* %2, align 4, !dbg !10454
  %6 = load volatile i32, i32* %2, align 4, !dbg !10455
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10456
  %8 = load volatile i32, i32* %7, align 4, !dbg !10456
  store volatile i32 %8, i32* %2, align 4, !dbg !10457
  %9 = load volatile i32, i32* %2, align 4, !dbg !10458
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10459
  ret void, !dbg !10459
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10460 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10462, metadata !DIExpression()), !dbg !10464
  %3 = bitcast i32* %2 to i8*, !dbg !10465
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10465
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10463, metadata !DIExpression()), !dbg !10466
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10467
  %5 = load volatile i32, i32* %4, align 4, !dbg !10467
  store volatile i32 %5, i32* %2, align 4, !dbg !10468
  %6 = load volatile i32, i32* %2, align 4, !dbg !10469
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10470
  %8 = load volatile i32, i32* %7, align 4, !dbg !10470
  store volatile i32 %8, i32* %2, align 4, !dbg !10471
  %9 = load volatile i32, i32* %2, align 4, !dbg !10472
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10473
  ret void, !dbg !10473
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1679 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1681, metadata !DIExpression()), !dbg !10474
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #26, !dbg !10475
  tail call void @arch_irq_enable(i32 noundef 38) #26, !dbg !10477
  ret void, !dbg !10477
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1730, metadata !DIExpression()), !dbg !10478
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #26, !dbg !10479
  tail call void @arch_irq_enable(i32 noundef 37) #26, !dbg !10481
  ret void, !dbg !10481
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10484, metadata !DIExpression()), !dbg !10486
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10487
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10487
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10487
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10485, metadata !DIExpression()), !dbg !10486
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10488
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10488
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10490
  br i1 %7, label %11, label %8, !dbg !10491

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10492
  %10 = load i8*, i8** %9, align 4, !dbg !10492
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10494
  br label %11, !dbg !10495

11:                                               ; preds = %8, %1
  ret void, !dbg !10496
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10499, metadata !DIExpression()), !dbg !10505
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10506
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10506
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10506
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10500, metadata !DIExpression()), !dbg !10505
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10507
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10507
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10507
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10501, metadata !DIExpression()), !dbg !10505
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10508
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10509
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10509
  %10 = tail call fastcc zeroext i1 @device_is_ready.71(%struct.device* noundef %9) #27, !dbg !10511
  br i1 %10, label %11, label %51, !dbg !10512

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10513
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10514
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10514
  %15 = load i8*, i8** %14, align 4, !dbg !10514
  %16 = tail call fastcc i32 @clock_control_on.72(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10515
  call void @llvm.dbg.value(metadata i32 %16, metadata !10504, metadata !DIExpression()), !dbg !10505
  %17 = icmp eq i32 %16, 0, !dbg !10516
  br i1 %17, label %18, label %51, !dbg !10518

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10519
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10519
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %21, metadata !10504, metadata !DIExpression()), !dbg !10505
  %22 = icmp slt i32 %21, 0, !dbg !10521
  br i1 %22, label %51, label %23, !dbg !10523

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10524
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10524
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10525
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10526
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10527
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10528
  %28 = load i32, i32* %27, align 4, !dbg !10528
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10530

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10502, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.value(metadata i32 4096, metadata !10503, metadata !DIExpression()), !dbg !10505
  br label %31, !dbg !10531

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10502, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.value(metadata i32 0, metadata !10503, metadata !DIExpression()), !dbg !10505
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10534
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10534
  call void @llvm.dbg.value(metadata i32 %33, metadata !10503, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.value(metadata i32 %32, metadata !10502, metadata !DIExpression()), !dbg !10505
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10535
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10536
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10537
  %36 = load i8, i8* %35, align 4, !dbg !10537, !range !6247
  %37 = icmp eq i8 %36, 0, !dbg !10537
  br i1 %37, label %39, label %38, !dbg !10539

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10540
  br label %39, !dbg !10542

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10543
  %41 = load i32, i32* %40, align 4, !dbg !10543
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10544
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10545
  %43 = load i8, i8* %42, align 4, !dbg !10545, !range !6247
  %44 = icmp eq i8 %43, 0, !dbg !10545
  br i1 %44, label %47, label %45, !dbg !10547

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10548
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10550
  br label %47, !dbg !10551

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10552
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10553
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10554
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10554
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10555
  br label %51, !dbg !10556

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10505
  ret i32 %52, !dbg !10557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10560, metadata !DIExpression()), !dbg !10564
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10565
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10565
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10565
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10561, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10562, metadata !DIExpression()), !dbg !10564
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10566
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10567
  ret void, !dbg !10568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71(%struct.device* noundef %0) unnamed_addr #1 !dbg !10569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10573, metadata !DIExpression()), !dbg !10574
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10575, !srcloc !10577
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.73(%struct.device* noundef %0) #27, !dbg !10578
  ret i1 %2, !dbg !10579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.72(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10582, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.value(metadata i8* %1, metadata !10583, metadata !DIExpression()), !dbg !10585
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10586
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10586
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10586
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10584, metadata !DIExpression()), !dbg !10585
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10587
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10587
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10588
  ret i32 %8, !dbg !10589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10590 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10594, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i8 0, metadata !10595, metadata !DIExpression()), !dbg !10598
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10599
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10597, metadata !DIExpression(DW_OP_deref)), !dbg !10598
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %4, metadata !10596, metadata !DIExpression()), !dbg !10598
  %5 = icmp slt i32 %4, 0, !dbg !10601
  br i1 %5, label %9, label %6, !dbg !10603

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10604
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10597, metadata !DIExpression()), !dbg !10598
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10605
  br label %9, !dbg !10606

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10598
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10607
  ret i32 %10, !dbg !10607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10608 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i32 12, metadata !10611, metadata !DIExpression()), !dbg !10612
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10613
  %3 = load volatile i32, i32* %2, align 4, !dbg !10613
  %4 = or i32 %3, 12, !dbg !10613
  store volatile i32 %4, i32* %2, align 4, !dbg !10613
  ret void, !dbg !10614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10615 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10617, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i32 %1, metadata !10618, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i32 %2, metadata !10619, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i32 0, metadata !10620, metadata !DIExpression()), !dbg !10621
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10622
  %5 = load volatile i32, i32* %4, align 4, !dbg !10622
  %6 = and i32 %5, -5633, !dbg !10622
  %7 = or i32 %2, %1, !dbg !10622
  %8 = or i32 %7, %6, !dbg !10622
  store volatile i32 %8, i32* %4, align 4, !dbg !10622
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10623
  %10 = load volatile i32, i32* %9, align 4, !dbg !10623
  %11 = and i32 %10, -12289, !dbg !10623
  store volatile i32 %11, i32* %9, align 4, !dbg !10623
  ret void, !dbg !10624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10625 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10627, metadata !DIExpression()), !dbg !10628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10629
  %3 = load volatile i32, i32* %2, align 4, !dbg !10629
  %4 = or i32 %3, 8, !dbg !10629
  store volatile i32 %4, i32* %2, align 4, !dbg !10629
  ret void, !dbg !10630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10631 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10635, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10636, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.value(metadata i32 0, metadata !10637, metadata !DIExpression()), !dbg !10638
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10639
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10639
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10640
  %5 = load i8, i8* %4, align 4, !dbg !10640
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10641
  ret i32 %6, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.73(%struct.device* noundef %0) unnamed_addr #1 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10645, metadata !DIExpression()), !dbg !10646
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10647
  ret i1 %2, !dbg !10648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !10649 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10651, metadata !DIExpression()), !dbg !10652
  tail call fastcc void @__NVIC_SetPriority.75() #27, !dbg !10653
  store i32 3199, i32* @last_load, align 4, !dbg !10654
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10655
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10656
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10657
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10658
  %3 = or i32 %2, 7, !dbg !10658
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10658
  ret i32 0, !dbg !10659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.75() unnamed_addr #16 !dbg !10660 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10662, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 1, metadata !10663, metadata !DIExpression()), !dbg !10664
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10665
  ret void, !dbg !10668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10671, metadata !DIExpression()), !dbg !10673
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10674
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10675
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10676
  %5 = add i32 %4, %3, !dbg !10676
  store i32 %5, i32* @cycle_count, align 4, !dbg !10676
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10677
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10678
  %7 = sub i32 %5, %6, !dbg !10681
  %8 = udiv i32 %7, 3200, !dbg !10682
  call void @llvm.dbg.value(metadata i32 %8, metadata !10672, metadata !DIExpression()), !dbg !10673
  %9 = mul nuw i32 %8, 3200, !dbg !10683
  %10 = add i32 %9, %6, !dbg !10684
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10684
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10685
  tail call void @z_arm_int_exit() #26, !dbg !10686
  ret void, !dbg !10687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !10688 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10693
  call void @llvm.dbg.value(metadata i32 %1, metadata !10690, metadata !DIExpression()), !dbg !10694
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10695
  call void @llvm.dbg.value(metadata i32 %2, metadata !10691, metadata !DIExpression()), !dbg !10694
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %3, metadata !10692, metadata !DIExpression()), !dbg !10694
  %4 = and i32 %2, 65536, !dbg !10697
  %5 = icmp ne i32 %4, 0, !dbg !10697
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10699
  %8 = load i32, i32* @last_load, align 4, !dbg !10694
  br i1 %7, label %9, label %13, !dbg !10699

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10700
  %11 = add i32 %10, %8, !dbg !10700
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10700
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10702
  br label %13, !dbg !10703

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10704
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10705
  %16 = add i32 %14, %15, !dbg !10706
  ret i32 %16, !dbg !10707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10712, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.value(metadata i1 %1, metadata !10713, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10725
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10726
  br i1 %4, label %5, label %8, !dbg !10726

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10728
  %7 = and i32 %6, -2, !dbg !10728
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10728
  store i32 -16777216, i32* @last_load, align 4, !dbg !10730
  br label %54, !dbg !10731

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %9, metadata !10717, metadata !DIExpression()), !dbg !10725
  br i1 %3, label %18, label %10, !dbg !10733

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10733
  call void @llvm.dbg.value(metadata i32 undef, metadata !10712, metadata !DIExpression()), !dbg !10725
  %12 = icmp slt i32 %11, 1, !dbg !10734
  br i1 %12, label %18, label %13, !dbg !10734

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !10734
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !10734
  %16 = mul nuw nsw i32 %15, 3200, !dbg !10734
  %17 = add nuw nsw i32 %16, 3199, !dbg !10734
  br label %18, !dbg !10734

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10712, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10735, metadata !DIExpression()) #25, !dbg !10742
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10744, !srcloc !10750
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %21, metadata !10747, metadata !DIExpression()) #25, !dbg !10751
  call void @llvm.dbg.value(metadata i32 undef, metadata !10748, metadata !DIExpression()) #25, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %21, metadata !10741, metadata !DIExpression()) #25, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %21, metadata !10718, metadata !DIExpression()), !dbg !10725
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !10752
  call void @llvm.dbg.value(metadata i32 %22, metadata !10723, metadata !DIExpression()), !dbg !10725
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %23, metadata !10715, metadata !DIExpression()), !dbg !10725
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10754
  %25 = add i32 %24, %22, !dbg !10754
  store i32 %25, i32* @cycle_count, align 4, !dbg !10754
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10755
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10756
  %27 = sub i32 %25, %26, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %27, metadata !10724, metadata !DIExpression()), !dbg !10725
  %28 = icmp slt i32 %27, 0, !dbg !10758
  br i1 %28, label %38, label %29, !dbg !10760

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10714, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.value(metadata i32 undef, metadata !10714, metadata !DIExpression()), !dbg !10725
  %30 = add nuw i32 %19, %27, !dbg !10761
  %31 = urem i32 %30, 3200, !dbg !10763
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10714, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10725
  %32 = sub nuw nsw i32 %19, %31, !dbg !10764
  call void @llvm.dbg.value(metadata i32 %32, metadata !10714, metadata !DIExpression()), !dbg !10725
  %33 = icmp ugt i32 %32, 1024, !dbg !10765
  br i1 %33, label %34, label %36, !dbg !10765

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10714, metadata !DIExpression()), !dbg !10725
  %35 = icmp ugt i32 %32, 16771200, !dbg !10766
  br i1 %35, label %38, label %36, !dbg !10768

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10769
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %40, metadata !10716, metadata !DIExpression()), !dbg !10725
  %41 = add nsw i32 %39, -1, !dbg !10771
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10772
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10773
  %42 = icmp ult i32 %23, %40, !dbg !10774
  br i1 %42, label %43, label %48, !dbg !10776

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10777
  %45 = add i32 %23, %9, !dbg !10779
  %46 = sub i32 %45, %40, !dbg !10780
  %47 = add i32 %46, %44, !dbg !10777
  br label %52, !dbg !10781

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10782
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10784
  %51 = add i32 %49, %50, !dbg !10784
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10785
  store i32 %53, i32* @cycle_count, align 4, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %21, metadata !10786, metadata !DIExpression()) #25, !dbg !10792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10791, metadata !DIExpression()) #25, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %21, metadata !10794, metadata !DIExpression()) #25, !dbg !10797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10799, !srcloc !10800
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10802 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10735, metadata !DIExpression()) #25, !dbg !10806
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10808, !srcloc !10750
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10808
  call void @llvm.dbg.value(metadata i32 %2, metadata !10747, metadata !DIExpression()) #25, !dbg !10810
  call void @llvm.dbg.value(metadata i32 undef, metadata !10748, metadata !DIExpression()) #25, !dbg !10810
  call void @llvm.dbg.value(metadata i32 %2, metadata !10741, metadata !DIExpression()) #25, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %2, metadata !10804, metadata !DIExpression()), !dbg !10811
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10812
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10813
  %5 = add i32 %4, %3, !dbg !10814
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10815
  %7 = sub i32 %5, %6, !dbg !10816
  call void @llvm.dbg.value(metadata i32 %7, metadata !10805, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.value(metadata i32 %2, metadata !10786, metadata !DIExpression()) #25, !dbg !10817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10791, metadata !DIExpression()) #25, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %2, metadata !10794, metadata !DIExpression()) #25, !dbg !10819
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10821, !srcloc !10800
  %8 = udiv i32 %7, 3200, !dbg !10822
  ret i32 %8, !dbg !10823
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10824 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10735, metadata !DIExpression()) #25, !dbg !10828
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10830, !srcloc !10750
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %2, metadata !10747, metadata !DIExpression()) #25, !dbg !10832
  call void @llvm.dbg.value(metadata i32 undef, metadata !10748, metadata !DIExpression()) #25, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %2, metadata !10741, metadata !DIExpression()) #25, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %2, metadata !10826, metadata !DIExpression()), !dbg !10833
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10834
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10835
  %5 = add i32 %4, %3, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %5, metadata !10827, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.value(metadata i32 %2, metadata !10786, metadata !DIExpression()) #25, !dbg !10837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10791, metadata !DIExpression()) #25, !dbg !10837
  call void @llvm.dbg.value(metadata i32 %2, metadata !10794, metadata !DIExpression()) #25, !dbg !10839
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10841, !srcloc !10800
  ret i32 %5, !dbg !10842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !10843 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10844
  %2 = icmp eq i32 %1, -16777216, !dbg !10846
  br i1 %2, label %3, label %6, !dbg !10847

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10848
  %5 = or i32 %4, 1, !dbg !10848
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10848
  br label %6, !dbg !10850

6:                                                ; preds = %3, %0
  ret void, !dbg !10851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10852 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10853
  %2 = and i32 %1, -2, !dbg !10853
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10855 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10881, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i8 %1, metadata !10882, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10883, metadata !DIExpression()), !dbg !10884
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10885
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10885
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10884
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10886
  %8 = load i8, i8* %6, align 4, !dbg !10887
  %9 = zext i8 %8 to i32, !dbg !10888
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10888
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10889
  br i1 %11, label %18, label %24, !dbg !10890

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10884
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10886
  %14 = load i8, i8* %6, align 4, !dbg !10887
  %15 = zext i8 %14 to i32, !dbg !10888
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10888
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10889
  br i1 %17, label %18, label %24, !dbg !10890, !llvm.loop !10891

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10893
  %21 = load i8, i8* %20, align 1, !dbg !10893
  %22 = icmp eq i8 %21, %1, !dbg !10896
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10897
  br i1 %22, label %24, label %12, !dbg !10898

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10884
  ret i32 %25, !dbg !10899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10900 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10911, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata i8 %1, metadata !10912, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata i32 %2, metadata !10913, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata i32 0, metadata !10916, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata i32 0, metadata !10917, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.value(metadata i8 0, metadata !10918, metadata !DIExpression()), !dbg !10928
  %4 = icmp eq i8 %1, 0, !dbg !10929
  br i1 %4, label %35, label %5, !dbg !10930

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10929
  br label %9, !dbg !10930

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10918, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %29, metadata !10916, metadata !DIExpression()), !dbg !10927
  %8 = icmp eq i32 %34, %6, !dbg !10929
  br i1 %8, label %35, label %9, !dbg !10930, !llvm.loop !10931

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10918, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %11, metadata !10916, metadata !DIExpression()), !dbg !10927
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10933
  %13 = load i32, i32* %12, align 4, !dbg !10933
  call void @llvm.dbg.value(metadata i32 %13, metadata !10915, metadata !DIExpression()), !dbg !10927
  %14 = and i32 %13, 31, !dbg !10934
  %15 = icmp ult i32 %14, 16, !dbg !10935
  br i1 %15, label %16, label %20, !dbg !10936

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10937
  %18 = load i32, i32* %17, align 4, !dbg !10937
  %19 = or i32 %18, 32, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %19, metadata !10916, metadata !DIExpression()), !dbg !10927
  br label %28, !dbg !10940

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10941

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10942
  %23 = load i32, i32* %22, align 4, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %23, metadata !10920, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10943
  %24 = lshr i32 %23, 7, !dbg !10944
  %25 = and i32 %24, 16, !dbg !10944
  %26 = or i32 %25, %23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %26, metadata !10916, metadata !DIExpression()), !dbg !10927
  br label %28, !dbg !10945

27:                                               ; preds = %20
  br label %28, !dbg !10946

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10927
  call void @llvm.dbg.value(metadata i32 %29, metadata !10916, metadata !DIExpression()), !dbg !10927
  %30 = lshr i32 %13, 5, !dbg !10946
  %31 = and i32 %30, 255, !dbg !10946
  call void @llvm.dbg.value(metadata i32 %31, metadata !10914, metadata !DIExpression()), !dbg !10927
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %32, metadata !10917, metadata !DIExpression()), !dbg !10927
  %33 = icmp slt i32 %32, 0, !dbg !10948
  %34 = add nuw nsw i32 %10, 1, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %34, metadata !10918, metadata !DIExpression()), !dbg !10928
  br i1 %33, label %35, label %7, !dbg !10951

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10957, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32 %1, metadata !10958, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32 %2, metadata !10959, metadata !DIExpression()), !dbg !10961
  %4 = icmp ugt i32 %0, 175, !dbg !10962
  br i1 %4, label %17, label %5, !dbg !10964

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10965
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10966
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10966
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10960, metadata !DIExpression()), !dbg !10961
  %9 = lshr i32 1888, %6, !dbg !10967
  %10 = and i32 %9, 1, !dbg !10967
  %11 = icmp eq i32 %10, 0, !dbg !10967
  br i1 %11, label %12, label %17, !dbg !10969

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.80(%struct.device* noundef %8) #27, !dbg !10970
  br i1 %13, label %14, label %17, !dbg !10971

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !10972
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #26, !dbg !10973
  br label %17, !dbg !10974

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !10961
  ret i32 %18, !dbg !10975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.80(%struct.device* noundef %0) unnamed_addr #1 !dbg !10976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10980, metadata !DIExpression()), !dbg !10981
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10982, !srcloc !10984
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) #27, !dbg !10985
  ret i1 %2, !dbg !10986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !10987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10991
  ret i1 %2, !dbg !10992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10993 {
  ret void, !dbg !10994
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !10995 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10997, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.value(metadata i32 0, metadata !10998, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.value(metadata i32 0, metadata !10999, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.value(metadata i32 0, metadata !11000, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.value(metadata i32 0, metadata !11001, metadata !DIExpression()), !dbg !11002
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %1, metadata !10997, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11002
  %2 = lshr i32 %1, 2, !dbg !11004
  %3 = and i32 %2, 3, !dbg !11004
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11004

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11005
  %6 = lshr i32 %5, 13, !dbg !11007
  %7 = and i32 %6, 7, !dbg !11007
  call void @llvm.dbg.value(metadata i32 %7, metadata !11001, metadata !DIExpression()), !dbg !11002
  %8 = shl nuw nsw i32 65536, %7, !dbg !11008
  br label %31, !dbg !11009

9:                                                ; preds = %0
  br label %31, !dbg !11010

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11011
  call void @llvm.dbg.value(metadata i32 %11, metadata !10998, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11002
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11012
  call void @llvm.dbg.value(metadata i32 %12, metadata !10999, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11002
  %13 = lshr i32 %11, 18, !dbg !11013
  %14 = and i32 %13, 15, !dbg !11013
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11014
  %16 = load i8, i8* %15, align 1, !dbg !11014
  %17 = zext i8 %16 to i32, !dbg !11014
  call void @llvm.dbg.value(metadata i32 %17, metadata !10998, metadata !DIExpression()), !dbg !11002
  %18 = lshr i32 %12, 22, !dbg !11015
  %19 = and i32 %18, 3, !dbg !11015
  %20 = add nuw nsw i32 %19, 1, !dbg !11016
  call void @llvm.dbg.value(metadata i32 %20, metadata !10999, metadata !DIExpression()), !dbg !11002
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11017
  %22 = and i32 %21, 65536, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %22, metadata !11000, metadata !DIExpression()), !dbg !11002
  %23 = icmp eq i32 %22, 0, !dbg !11019
  br i1 %23, label %24, label %27, !dbg !11021

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11022
  %26 = udiv i32 %25, %20, !dbg !11024
  br label %31, !dbg !11025

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11026
  %29 = udiv i32 %28, %20, !dbg !11028
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11029
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11030
  %34 = lshr i32 %33, 4, !dbg !11031
  %35 = and i32 %34, 15, !dbg !11031
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11032
  %37 = load i8, i8* %36, align 1, !dbg !11032
  %38 = zext i8 %37 to i32, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %38, metadata !10997, metadata !DIExpression()), !dbg !11002
  %39 = lshr i32 %32, %38, !dbg !11033
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11033
  ret void, !dbg !11034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11043
  %2 = and i32 %1, 16711935, !dbg !11043
  %3 = or i32 %2, 45056, !dbg !11043
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11043
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11044
  %5 = or i32 %4, 256, !dbg !11044
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11044
  %6 = tail call i32 @HAL_GetTick() #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !11041, metadata !DIExpression()), !dbg !11046
  br label %7, !dbg !11047

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11048
  %9 = and i32 %8, 512, !dbg !11048
  %10 = icmp eq i32 %9, 0, !dbg !11049
  br i1 %10, label %11, label %15, !dbg !11047

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #26, !dbg !11050
  %13 = sub i32 %12, %6, !dbg !11053
  %14 = icmp ugt i32 %13, 2, !dbg !11054
  br i1 %14, label %47, label %7, !dbg !11055, !llvm.loop !11056

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11058
  %17 = and i32 %16, -4, !dbg !11058
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11058
  br label %18, !dbg !11059

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11060
  %20 = and i32 %19, 12, !dbg !11060
  %21 = icmp eq i32 %20, 0, !dbg !11061
  br i1 %21, label %26, label %22, !dbg !11059

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #26, !dbg !11062
  %24 = sub i32 %23, %6, !dbg !11065
  %25 = icmp ugt i32 %24, 5000, !dbg !11066
  br i1 %25, label %47, label %18, !dbg !11067, !llvm.loop !11068

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11070
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11071
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #26, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %28, metadata !11042, metadata !DIExpression()), !dbg !11046
  %29 = icmp eq i32 %28, 0, !dbg !11073
  br i1 %29, label %30, label %47, !dbg !11075

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11076
  %32 = and i32 %31, -285278210, !dbg !11076
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11076
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11077
  %34 = and i32 %33, -262145, !dbg !11077
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11077
  %35 = tail call i32 @HAL_GetTick() #26, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %35, metadata !11041, metadata !DIExpression()), !dbg !11046
  br label %36, !dbg !11079

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11080
  %38 = and i32 %37, 33554432, !dbg !11080
  %39 = icmp eq i32 %38, 0, !dbg !11081
  br i1 %39, label %44, label %40, !dbg !11079

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #26, !dbg !11082
  %42 = sub i32 %41, %35, !dbg !11085
  %43 = icmp ugt i32 %42, 2, !dbg !11086
  br i1 %43, label %47, label %36, !dbg !11087, !llvm.loop !11088

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11090
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11091
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11092
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11093
  %46 = or i32 %45, 16777216, !dbg !11093
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11093
  br label %47, !dbg !11094

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11046
  ret i32 %48, !dbg !11095
}

; Function Attrs: optsize
declare !dbg !11096 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !11098 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11101 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11127, metadata !DIExpression()), !dbg !11140
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11141
  br i1 %3, label %385, label %4, !dbg !11143

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11144
  %6 = and i32 %5, 12, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %6, metadata !11130, metadata !DIExpression()), !dbg !11140
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11145
  %8 = and i32 %7, 65536, !dbg !11145
  call void @llvm.dbg.value(metadata i32 %8, metadata !11131, metadata !DIExpression()), !dbg !11140
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11146
  %10 = load i32, i32* %9, align 4, !dbg !11146
  %11 = and i32 %10, 1, !dbg !11148
  %12 = icmp eq i32 %11, 0, !dbg !11149
  br i1 %12, label %69, label %13, !dbg !11150

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !11151
  br i1 %14, label %19, label %15, !dbg !11154

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !11155
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !11156
  br i1 %18, label %19, label %27, !dbg !11156

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11157
  %21 = and i32 %20, 131072, !dbg !11157
  %22 = icmp eq i32 %21, 0, !dbg !11160
  br i1 %22, label %69, label %23, !dbg !11161

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11162
  %25 = load i32, i32* %24, align 4, !dbg !11162
  %26 = icmp eq i32 %25, 0, !dbg !11163
  br i1 %26, label %385, label %69, !dbg !11164

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11165
  %29 = load i32, i32* %28, align 4, !dbg !11165
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !11169

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11170
  %32 = or i32 %31, 65536, !dbg !11170
  br label %48, !dbg !11170

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %35 = and i32 %34, -65537, !dbg !11172
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11172
  %37 = and i32 %36, -262145, !dbg !11172
  br label %48, !dbg !11172

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11175
  %40 = or i32 %39, 262144, !dbg !11175
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11175
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11175
  %42 = or i32 %41, 65536, !dbg !11175
  br label %48, !dbg !11175

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11178
  %45 = and i32 %44, -65537, !dbg !11178
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11178
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11178
  %47 = and i32 %46, -262145, !dbg !11178
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11180
  %50 = load i32, i32* %28, align 4, !dbg !11181
  %51 = icmp eq i32 %50, 0, !dbg !11183
  %52 = tail call i32 @HAL_GetTick() #26, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %52, metadata !11128, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 %52, metadata !11128, metadata !DIExpression()), !dbg !11140
  br i1 %51, label %61, label %53, !dbg !11185

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11186
  %55 = and i32 %54, 131072, !dbg !11186
  %56 = icmp eq i32 %55, 0, !dbg !11188
  br i1 %56, label %57, label %69, !dbg !11189

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #26, !dbg !11190
  %59 = sub i32 %58, %52, !dbg !11193
  %60 = icmp ugt i32 %59, 100, !dbg !11194
  br i1 %60, label %385, label %53, !dbg !11195, !llvm.loop !11196

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11198
  %63 = and i32 %62, 131072, !dbg !11198
  %64 = icmp eq i32 %63, 0, !dbg !11200
  br i1 %64, label %69, label %65, !dbg !11201

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !11202
  %67 = sub i32 %66, %52, !dbg !11205
  %68 = icmp ugt i32 %67, 100, !dbg !11206
  br i1 %68, label %385, label %61, !dbg !11207, !llvm.loop !11208

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !11210
  %71 = and i32 %70, 2, !dbg !11212
  %72 = icmp eq i32 %71, 0, !dbg !11213
  br i1 %72, label %118, label %73, !dbg !11214

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !11215
  br i1 %74, label %79, label %75, !dbg !11218

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !11219
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !11220
  br i1 %78, label %79, label %87, !dbg !11220

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11221
  %81 = and i32 %80, 2, !dbg !11221
  %82 = icmp eq i32 %81, 0, !dbg !11224
  br i1 %82, label %111, label %83, !dbg !11225

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11226
  %85 = load i32, i32* %84, align 4, !dbg !11226
  %86 = icmp eq i32 %85, 1, !dbg !11227
  br i1 %86, label %111, label %385, !dbg !11228

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11229
  %89 = load i32, i32* %88, align 4, !dbg !11229
  %90 = icmp eq i32 %89, 0, !dbg !11232
  br i1 %90, label %101, label %91, !dbg !11233

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11234
  %92 = tail call i32 @HAL_GetTick() #26, !dbg !11236
  call void @llvm.dbg.value(metadata i32 %92, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %93, !dbg !11237

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11238
  %95 = and i32 %94, 2, !dbg !11238
  %96 = icmp eq i32 %95, 0, !dbg !11239
  br i1 %96, label %97, label %111, !dbg !11237

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #26, !dbg !11240
  %99 = sub i32 %98, %92, !dbg !11243
  %100 = icmp ugt i32 %99, 2, !dbg !11244
  br i1 %100, label %385, label %93, !dbg !11245, !llvm.loop !11246

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11248
  %102 = tail call i32 @HAL_GetTick() #26, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %102, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %103, !dbg !11251

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11252
  %105 = and i32 %104, 2, !dbg !11252
  %106 = icmp eq i32 %105, 0, !dbg !11253
  br i1 %106, label %118, label %107, !dbg !11251

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #26, !dbg !11254
  %109 = sub i32 %108, %102, !dbg !11257
  %110 = icmp ugt i32 %109, 2, !dbg !11258
  br i1 %110, label %385, label %103, !dbg !11259, !llvm.loop !11260

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11262
  %113 = and i32 %112, -7937, !dbg !11262
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11262
  %115 = load i32, i32* %114, align 4, !dbg !11262
  %116 = shl i32 %115, 8, !dbg !11262
  %117 = or i32 %116, %113, !dbg !11262
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11262
  br label %118, !dbg !11263

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !11263
  %120 = and i32 %119, 16, !dbg !11265
  %121 = icmp eq i32 %120, 0, !dbg !11266
  br i1 %121, label %215, label %122, !dbg !11267

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !11268
  br i1 %123, label %124, label %179, !dbg !11271

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11272
  %126 = and i32 %125, 512, !dbg !11272
  %127 = icmp eq i32 %126, 0, !dbg !11275
  br i1 %127, label %132, label %128, !dbg !11276

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11277
  %130 = load i32, i32* %129, align 4, !dbg !11277
  %131 = icmp eq i32 %130, 0, !dbg !11278
  br i1 %131, label %385, label %132, !dbg !11279

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11280
  %134 = load i32, i32* %133, align 4, !dbg !11280
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11283
  %136 = and i32 %135, 57344, !dbg !11283
  %137 = icmp ugt i32 %134, %136, !dbg !11284
  br i1 %137, label %138, label %152, !dbg !11285

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #27, !dbg !11286
  %140 = icmp eq i32 %139, 0, !dbg !11289
  br i1 %140, label %141, label %385, !dbg !11290

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11291
  %143 = and i32 %142, -57345, !dbg !11291
  %144 = load i32, i32* %133, align 4, !dbg !11291
  %145 = or i32 %143, %144, !dbg !11291
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11291
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11292
  %147 = and i32 %146, 16777215, !dbg !11292
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11292
  %149 = load i32, i32* %148, align 4, !dbg !11292
  %150 = shl i32 %149, 24, !dbg !11292
  %151 = or i32 %150, %147, !dbg !11292
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11292
  br label %165, !dbg !11293

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11294
  %154 = and i32 %153, -57345, !dbg !11294
  %155 = or i32 %154, %134, !dbg !11294
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11294
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11296
  %157 = and i32 %156, 16777215, !dbg !11296
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11296
  %159 = load i32, i32* %158, align 4, !dbg !11296
  %160 = shl i32 %159, 24, !dbg !11296
  %161 = or i32 %160, %157, !dbg !11296
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11296
  %162 = load i32, i32* %133, align 4, !dbg !11297
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #27, !dbg !11299
  %164 = icmp eq i32 %163, 0, !dbg !11300
  br i1 %164, label %165, label %385, !dbg !11301

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !11302
  %167 = lshr i32 %166, 13, !dbg !11303
  %168 = shl i32 65536, %167, !dbg !11304
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11305
  %170 = lshr i32 %169, 4, !dbg !11306
  %171 = and i32 %170, 15, !dbg !11306
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !11307
  %173 = load i8, i8* %172, align 1, !dbg !11307
  %174 = zext i8 %173 to i32, !dbg !11307
  %175 = lshr i32 %168, %174, !dbg !11308
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !11309
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !11310
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #26, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %177, metadata !11129, metadata !DIExpression()), !dbg !11140
  %178 = icmp eq i32 %177, 0, !dbg !11312
  br i1 %178, label %215, label %385, !dbg !11314

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11315
  %181 = load i32, i32* %180, align 4, !dbg !11315
  %182 = icmp eq i32 %181, 0, !dbg !11318
  br i1 %182, label %205, label %183, !dbg !11319

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !11320
  %184 = tail call i32 @HAL_GetTick() #26, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %184, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %185, !dbg !11323

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11324
  %187 = and i32 %186, 512, !dbg !11324
  %188 = icmp eq i32 %187, 0, !dbg !11325
  br i1 %188, label %189, label %193, !dbg !11323

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #26, !dbg !11326
  %191 = sub i32 %190, %184, !dbg !11329
  %192 = icmp ugt i32 %191, 2, !dbg !11330
  br i1 %192, label %385, label %185, !dbg !11331, !llvm.loop !11332

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11334
  %195 = and i32 %194, -57345, !dbg !11334
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11334
  %197 = load i32, i32* %196, align 4, !dbg !11334
  %198 = or i32 %195, %197, !dbg !11334
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11334
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11335
  %200 = and i32 %199, 16777215, !dbg !11335
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11335
  %202 = load i32, i32* %201, align 4, !dbg !11335
  %203 = shl i32 %202, 24, !dbg !11335
  %204 = or i32 %203, %200, !dbg !11335
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11335
  br label %215, !dbg !11336

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !11337
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %206, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %207, !dbg !11340

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11341
  %209 = and i32 %208, 512, !dbg !11341
  %210 = icmp eq i32 %209, 0, !dbg !11342
  br i1 %210, label %215, label %211, !dbg !11340

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #26, !dbg !11343
  %213 = sub i32 %212, %206, !dbg !11346
  %214 = icmp ugt i32 %213, 2, !dbg !11347
  br i1 %214, label %385, label %207, !dbg !11348, !llvm.loop !11349

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !11351
  %217 = and i32 %216, 8, !dbg !11353
  %218 = icmp eq i32 %217, 0, !dbg !11354
  br i1 %218, label %243, label %219, !dbg !11355

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11356
  %221 = load i32, i32* %220, align 4, !dbg !11356
  %222 = icmp eq i32 %221, 0, !dbg !11359
  br i1 %222, label %233, label %223, !dbg !11360

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !11361
  %224 = tail call i32 @HAL_GetTick() #26, !dbg !11363
  call void @llvm.dbg.value(metadata i32 %224, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %225, !dbg !11364

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11365
  %227 = and i32 %226, 2, !dbg !11365
  %228 = icmp eq i32 %227, 0, !dbg !11366
  br i1 %228, label %229, label %243, !dbg !11364

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !11367
  %231 = sub i32 %230, %224, !dbg !11370
  %232 = icmp ugt i32 %231, 2, !dbg !11371
  br i1 %232, label %385, label %225, !dbg !11372, !llvm.loop !11373

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !11375
  %234 = tail call i32 @HAL_GetTick() #26, !dbg !11377
  call void @llvm.dbg.value(metadata i32 %234, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %235, !dbg !11378

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11379
  %237 = and i32 %236, 2, !dbg !11379
  %238 = icmp eq i32 %237, 0, !dbg !11380
  br i1 %238, label %243, label %239, !dbg !11378

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #26, !dbg !11381
  %241 = sub i32 %240, %234, !dbg !11384
  %242 = icmp ugt i32 %241, 2, !dbg !11385
  br i1 %242, label %385, label %235, !dbg !11386, !llvm.loop !11387

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !11389
  %245 = and i32 %244, 4, !dbg !11390
  %246 = icmp eq i32 %245, 0, !dbg !11391
  br i1 %246, label %320, label %247, !dbg !11392

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !11132, metadata !DIExpression()), !dbg !11393
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11394
  %249 = and i32 %248, 268435456, !dbg !11394
  %250 = icmp eq i32 %249, 0, !dbg !11394
  br i1 %250, label %251, label %258, !dbg !11395

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !11396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !11396
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11136, metadata !DIExpression()), !dbg !11396
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11396
  %254 = or i32 %253, 268435456, !dbg !11396
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11396
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11396
  %256 = and i32 %255, 268435456, !dbg !11396
  store volatile i32 %256, i32* %2, align 4, !dbg !11396
  %257 = load volatile i32, i32* %2, align 4, !dbg !11396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !11397
  call void @llvm.dbg.value(metadata i32 1, metadata !11132, metadata !DIExpression()), !dbg !11393
  br label %258, !dbg !11398

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !11132, metadata !DIExpression()), !dbg !11393
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11399
  %260 = and i32 %259, 256, !dbg !11399
  %261 = icmp eq i32 %260, 0, !dbg !11399
  br i1 %261, label %262, label %274, !dbg !11401

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11402
  %264 = or i32 %263, 256, !dbg !11402
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11402
  %265 = tail call i32 @HAL_GetTick() #26, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %265, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %266, !dbg !11405

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11406
  %268 = and i32 %267, 256, !dbg !11406
  %269 = icmp eq i32 %268, 0, !dbg !11406
  br i1 %269, label %270, label %274, !dbg !11405

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #26, !dbg !11407
  %272 = sub i32 %271, %265, !dbg !11410
  %273 = icmp ugt i32 %272, 100, !dbg !11411
  br i1 %273, label %385, label %266, !dbg !11412, !llvm.loop !11413

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11415
  %276 = load i32, i32* %275, align 4, !dbg !11415
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !11418

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11419
  %279 = or i32 %278, 256, !dbg !11419
  br label %295, !dbg !11419

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11421
  %282 = and i32 %281, -257, !dbg !11421
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11421
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11421
  %284 = and i32 %283, -1025, !dbg !11421
  br label %295, !dbg !11421

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11424
  %287 = or i32 %286, 1024, !dbg !11424
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11424
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11424
  %289 = or i32 %288, 256, !dbg !11424
  br label %295, !dbg !11424

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11427
  %292 = and i32 %291, -257, !dbg !11427
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11427
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11427
  %294 = and i32 %293, -1025, !dbg !11427
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11429
  %297 = load i32, i32* %275, align 4, !dbg !11430
  %298 = icmp eq i32 %297, 0, !dbg !11432
  %299 = tail call i32 @HAL_GetTick() #26, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %299, metadata !11128, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 %299, metadata !11128, metadata !DIExpression()), !dbg !11140
  br i1 %298, label %308, label %300, !dbg !11434

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11435
  %302 = and i32 %301, 512, !dbg !11435
  %303 = icmp eq i32 %302, 0, !dbg !11437
  br i1 %303, label %304, label %316, !dbg !11438

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #26, !dbg !11439
  %306 = sub i32 %305, %299, !dbg !11442
  %307 = icmp ugt i32 %306, 5000, !dbg !11443
  br i1 %307, label %385, label %300, !dbg !11444, !llvm.loop !11445

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11447
  %310 = and i32 %309, 512, !dbg !11447
  %311 = icmp eq i32 %310, 0, !dbg !11449
  br i1 %311, label %316, label %312, !dbg !11450

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #26, !dbg !11451
  %314 = sub i32 %313, %299, !dbg !11454
  %315 = icmp ugt i32 %314, 5000, !dbg !11455
  br i1 %315, label %385, label %308, !dbg !11456, !llvm.loop !11457

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !11459

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11460
  %319 = and i32 %318, -268435457, !dbg !11460
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11460
  br label %320, !dbg !11463

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11464
  %322 = load i32, i32* %321, align 4, !dbg !11464
  %323 = icmp eq i32 %322, 0, !dbg !11466
  br i1 %323, label %384, label %324, !dbg !11467

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !11468
  br i1 %325, label %366, label %326, !dbg !11471

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !11472
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11475
  %328 = tail call i32 @HAL_GetTick() #26, !dbg !11475
  call void @llvm.dbg.value(metadata i32 %328, metadata !11128, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 %328, metadata !11128, metadata !DIExpression()), !dbg !11140
  br i1 %327, label %329, label %358, !dbg !11476

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11477
  %331 = and i32 %330, 33554432, !dbg !11477
  %332 = icmp eq i32 %331, 0, !dbg !11479
  br i1 %332, label %337, label %333, !dbg !11480

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #26, !dbg !11481
  %335 = sub i32 %334, %328, !dbg !11484
  %336 = icmp ugt i32 %335, 2, !dbg !11485
  br i1 %336, label %385, label %329, !dbg !11486, !llvm.loop !11487

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11489
  %339 = and i32 %338, -16580609, !dbg !11489
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11489
  %341 = load i32, i32* %340, align 4, !dbg !11489
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11489
  %343 = load i32, i32* %342, align 4, !dbg !11489
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11489
  %345 = load i32, i32* %344, align 4, !dbg !11489
  %346 = or i32 %339, %341, !dbg !11489
  %347 = or i32 %346, %343, !dbg !11489
  %348 = or i32 %347, %345, !dbg !11489
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11489
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11490
  %349 = tail call i32 @HAL_GetTick() #26, !dbg !11491
  call void @llvm.dbg.value(metadata i32 %349, metadata !11128, metadata !DIExpression()), !dbg !11140
  br label %350, !dbg !11492

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11493
  %352 = and i32 %351, 33554432, !dbg !11493
  %353 = icmp eq i32 %352, 0, !dbg !11494
  br i1 %353, label %354, label %384, !dbg !11492

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #26, !dbg !11495
  %356 = sub i32 %355, %349, !dbg !11498
  %357 = icmp ugt i32 %356, 2, !dbg !11499
  br i1 %357, label %385, label %350, !dbg !11500, !llvm.loop !11501

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11503
  %360 = and i32 %359, 33554432, !dbg !11503
  %361 = icmp eq i32 %360, 0, !dbg !11505
  br i1 %361, label %384, label %362, !dbg !11506

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #26, !dbg !11507
  %364 = sub i32 %363, %328, !dbg !11510
  %365 = icmp ugt i32 %364, 2, !dbg !11511
  br i1 %365, label %385, label %358, !dbg !11512, !llvm.loop !11513

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !11515
  br i1 %367, label %385, label %368, !dbg !11518

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11519
  call void @llvm.dbg.value(metadata i32 %369, metadata !11131, metadata !DIExpression()), !dbg !11140
  %370 = and i32 %369, 65536, !dbg !11521
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11523
  %372 = load i32, i32* %371, align 4, !dbg !11523
  %373 = icmp eq i32 %370, %372, !dbg !11524
  br i1 %373, label %374, label %385, !dbg !11525

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !11526
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11527
  %377 = load i32, i32* %376, align 4, !dbg !11527
  %378 = icmp eq i32 %375, %377, !dbg !11528
  br i1 %378, label %379, label %385, !dbg !11529

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !11530
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11531
  %382 = load i32, i32* %381, align 4, !dbg !11531
  %383 = icmp eq i32 %380, %382, !dbg !11532
  br i1 %383, label %384, label %385, !dbg !11533

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !11534

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !11140
  ret i32 %386, !dbg !11535
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !11536 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11538, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.value(metadata i32 0, metadata !11540, metadata !DIExpression()), !dbg !11547
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11548
  %4 = and i32 %3, 240, !dbg !11548
  %5 = icmp eq i32 %4, 0, !dbg !11549
  br i1 %5, label %6, label %31, !dbg !11550

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11551
  %8 = and i32 %7, 268435456, !dbg !11551
  %9 = icmp eq i32 %8, 0, !dbg !11551
  br i1 %9, label %12, label %10, !dbg !11552

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %11, metadata !11539, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11547
  br label %22, !dbg !11555

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !11556
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !11556
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11541, metadata !DIExpression()), !dbg !11556
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11556
  %15 = or i32 %14, 268435456, !dbg !11556
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11556
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11556
  %17 = and i32 %16, 268435456, !dbg !11556
  store volatile i32 %17, i32* %2, align 4, !dbg !11556
  %18 = load volatile i32, i32* %2, align 4, !dbg !11556
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !11557
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %19, metadata !11539, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11547
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11559
  %21 = and i32 %20, -268435457, !dbg !11559
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11559
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !11560
  call void @llvm.dbg.value(metadata i32 %24, metadata !11539, metadata !DIExpression()), !dbg !11547
  %25 = icmp eq i32 %24, 6144, !dbg !11561
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !11563
  call void @llvm.dbg.value(metadata i32 undef, metadata !11540, metadata !DIExpression()), !dbg !11547
  br i1 %27, label %28, label %31, !dbg !11564

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11566
  %30 = or i32 %29, 4, !dbg !11566
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11566
  br label %31, !dbg !11566

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11564
  %34 = and i32 %33, -2, !dbg !11564
  %35 = or i32 %34, %32, !dbg !11564
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11564
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11569
  %37 = and i32 %36, 1, !dbg !11569
  %38 = xor i32 %37, %32, !dbg !11547
  ret i32 %38, !dbg !11571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11572 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11585, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.value(metadata i32 %1, metadata !11586, metadata !DIExpression()), !dbg !11589
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11590
  br i1 %3, label %136, label %4, !dbg !11592

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11593
  %6 = and i32 %5, 1, !dbg !11593
  %7 = icmp ult i32 %6, %1, !dbg !11595
  br i1 %7, label %8, label %20, !dbg !11596

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !11597
  br i1 %9, label %10, label %13, !dbg !11601

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11602
  %12 = or i32 %11, 4, !dbg !11602
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11602
  br label %13, !dbg !11602

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11601
  %15 = and i32 %14, -2, !dbg !11601
  %16 = or i32 %15, %1, !dbg !11601
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11601
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11604
  %18 = and i32 %17, 1, !dbg !11604
  %19 = icmp eq i32 %18, %1, !dbg !11606
  br i1 %19, label %20, label %136, !dbg !11607

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11608
  %22 = load i32, i32* %21, align 4, !dbg !11608
  %23 = and i32 %22, 2, !dbg !11610
  %24 = icmp eq i32 %23, 0, !dbg !11611
  br i1 %24, label %32, label %25, !dbg !11612

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11613
  %27 = and i32 %26, -241, !dbg !11613
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11613
  %29 = load i32, i32* %28, align 4, !dbg !11613
  %30 = or i32 %27, %29, !dbg !11613
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11613
  %31 = load i32, i32* %21, align 4, !dbg !11615
  br label %32, !dbg !11617

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !11615
  %34 = and i32 %33, 1, !dbg !11618
  %35 = icmp eq i32 %34, 0, !dbg !11619
  br i1 %35, label %93, label %36, !dbg !11620

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11621
  %38 = load i32, i32* %37, align 4, !dbg !11621
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !11624

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11625
  %41 = and i32 %40, 131072, !dbg !11625
  %42 = icmp eq i32 %41, 0, !dbg !11628
  br i1 %42, label %136, label %55, !dbg !11629

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11630
  %45 = and i32 %44, 33554432, !dbg !11630
  %46 = icmp eq i32 %45, 0, !dbg !11634
  br i1 %46, label %136, label %55, !dbg !11635

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11636
  %49 = and i32 %48, 2, !dbg !11636
  %50 = icmp eq i32 %49, 0, !dbg !11640
  br i1 %50, label %136, label %55, !dbg !11641

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11642
  %53 = and i32 %52, 512, !dbg !11642
  %54 = icmp eq i32 %53, 0, !dbg !11645
  br i1 %54, label %136, label %55, !dbg !11646

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11647
  %57 = and i32 %56, -4, !dbg !11647
  %58 = or i32 %57, %38, !dbg !11647
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11647
  %59 = tail call i32 @HAL_GetTick() #26, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %59, metadata !11587, metadata !DIExpression()), !dbg !11589
  %60 = load i32, i32* %37, align 4, !dbg !11649
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !11651

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11652
  %63 = and i32 %62, 12, !dbg !11652
  %64 = icmp eq i32 %63, 8, !dbg !11654
  br i1 %64, label %93, label %65, !dbg !11655

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !11656
  %67 = sub i32 %66, %59, !dbg !11659
  %68 = icmp ugt i32 %67, 5000, !dbg !11660
  br i1 %68, label %136, label %61, !dbg !11661, !llvm.loop !11662

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11664
  %71 = and i32 %70, 12, !dbg !11664
  %72 = icmp eq i32 %71, 12, !dbg !11667
  br i1 %72, label %93, label %73, !dbg !11668

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #26, !dbg !11669
  %75 = sub i32 %74, %59, !dbg !11672
  %76 = icmp ugt i32 %75, 5000, !dbg !11673
  br i1 %76, label %136, label %69, !dbg !11674, !llvm.loop !11675

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11677
  %79 = and i32 %78, 12, !dbg !11677
  %80 = icmp eq i32 %79, 4, !dbg !11680
  br i1 %80, label %93, label %81, !dbg !11681

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !11682
  %83 = sub i32 %82, %59, !dbg !11685
  %84 = icmp ugt i32 %83, 5000, !dbg !11686
  br i1 %84, label %136, label %77, !dbg !11687, !llvm.loop !11688

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11690
  %87 = and i32 %86, 12, !dbg !11690
  %88 = icmp eq i32 %87, 0, !dbg !11692
  br i1 %88, label %93, label %89, !dbg !11693

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #26, !dbg !11694
  %91 = sub i32 %90, %59, !dbg !11697
  %92 = icmp ugt i32 %91, 5000, !dbg !11698
  br i1 %92, label %136, label %85, !dbg !11699, !llvm.loop !11700

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11702
  %95 = and i32 %94, 1, !dbg !11702
  %96 = icmp ugt i32 %95, %1, !dbg !11704
  br i1 %96, label %97, label %103, !dbg !11705

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11706
  %99 = and i32 %98, -2, !dbg !11706
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11706
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11709
  %101 = and i32 %100, 1, !dbg !11709
  %102 = icmp eq i32 %101, 0, !dbg !11711
  br i1 %102, label %103, label %136, !dbg !11712

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !11713
  %105 = and i32 %104, 4, !dbg !11715
  %106 = icmp eq i32 %105, 0, !dbg !11716
  br i1 %106, label %114, label %107, !dbg !11717

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11718
  %109 = and i32 %108, -1793, !dbg !11718
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11718
  %111 = load i32, i32* %110, align 4, !dbg !11718
  %112 = or i32 %109, %111, !dbg !11718
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11718
  %113 = load i32, i32* %21, align 4, !dbg !11720
  br label %114, !dbg !11722

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !11720
  %116 = and i32 %115, 8, !dbg !11723
  %117 = icmp eq i32 %116, 0, !dbg !11724
  br i1 %117, label %125, label %118, !dbg !11725

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11726
  %120 = and i32 %119, -14337, !dbg !11726
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11726
  %122 = load i32, i32* %121, align 4, !dbg !11726
  %123 = shl i32 %122, 3, !dbg !11726
  %124 = or i32 %123, %120, !dbg !11726
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11726
  br label %125, !dbg !11728

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !11729
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11730
  %128 = lshr i32 %127, 4, !dbg !11731
  %129 = and i32 %128, 15, !dbg !11731
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !11732
  %131 = load i8, i8* %130, align 1, !dbg !11732
  %132 = zext i8 %131 to i32, !dbg !11732
  %133 = lshr i32 %126, %132, !dbg !11733
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !11734
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !11735
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #26, !dbg !11736
  call void @llvm.dbg.value(metadata i32 %135, metadata !11588, metadata !DIExpression()), !dbg !11589
  br label %136, !dbg !11737

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !11589
  ret i32 %137, !dbg !11738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !11739 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %1, metadata !11741, metadata !DIExpression()), !dbg !11748
  %2 = lshr i32 %1, 2, !dbg !11749
  %3 = and i32 %2, 3, !dbg !11749
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !11749

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11746, metadata !DIExpression()), !dbg !11748
  br label %26, !dbg !11750

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !11753
  %7 = and i32 %6, 15, !dbg !11753
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !11755
  %9 = load i8, i8* %8, align 1, !dbg !11755
  call void @llvm.dbg.value(metadata i8 %9, metadata !11742, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11748
  %10 = lshr i32 %1, 22, !dbg !11756
  %11 = and i32 %10, 3, !dbg !11756
  %12 = add nuw nsw i32 %11, 1, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %12, metadata !11743, metadata !DIExpression()), !dbg !11748
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11758
  %14 = and i32 %13, 65536, !dbg !11758
  %15 = icmp eq i32 %14, 0, !dbg !11760
  %16 = zext i8 %9 to i32, !dbg !11761
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !11761
  %18 = mul nuw i32 %17, %16, !dbg !11761
  %19 = udiv i32 %18, %12, !dbg !11762
  call void @llvm.dbg.value(metadata i32 %19, metadata !11744, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 %19, metadata !11746, metadata !DIExpression()), !dbg !11748
  br label %26, !dbg !11763

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11764
  %23 = lshr i32 %22, 13, !dbg !11766
  %24 = and i32 %23, 7, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %24, metadata !11745, metadata !DIExpression()), !dbg !11748
  %25 = shl nuw nsw i32 65536, %24, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %25, metadata !11746, metadata !DIExpression()), !dbg !11748
  br label %26, !dbg !11768

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !11769
  call void @llvm.dbg.value(metadata i32 %27, metadata !11746, metadata !DIExpression()), !dbg !11748
  ret i32 %27, !dbg !11770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11771 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11773, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %1, metadata !11774, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 %2, metadata !11775, metadata !DIExpression()), !dbg !11788
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11789
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11789
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11776, metadata !DIExpression()), !dbg !11790
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11791
  store i32 2, i32* %7, align 4, !dbg !11792
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11793
  store i32 2, i32* %8, align 4, !dbg !11794
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11795
  store i32 0, i32* %9, align 4, !dbg !11796
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11797
  store i32 256, i32* %10, align 4, !dbg !11798
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11799
  store i32 0, i32* %11, align 4, !dbg !11800
  %12 = bitcast i32* %5 to i8*, !dbg !11801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !11801
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11786, metadata !DIExpression()), !dbg !11801
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11801
  %14 = or i32 %13, 1, !dbg !11801
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11801
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11801
  %16 = and i32 %15, 1, !dbg !11801
  store volatile i32 %16, i32* %5, align 4, !dbg !11801
  %17 = load volatile i32, i32* %5, align 4, !dbg !11801
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !11802
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11803
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11804
  %19 = and i32 %18, -1996488705, !dbg !11804
  %20 = or i32 %2, %1, !dbg !11804
  %21 = or i32 %20, %19, !dbg !11804
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11804
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11805
  ret void, !dbg !11805
}

; Function Attrs: optsize
declare !dbg !11806 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !11810 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11811
  ret void, !dbg !11812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !11813 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11814
  ret void, !dbg !11815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11816 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11817
  ret i32 %1, !dbg !11818
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !11819 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11820
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11821
  %3 = lshr i32 %2, 8, !dbg !11822
  %4 = and i32 %3, 7, !dbg !11822
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11823
  %6 = load i8, i8* %5, align 1, !dbg !11823
  %7 = zext i8 %6 to i32, !dbg !11823
  %8 = lshr i32 %1, %7, !dbg !11824
  ret i32 %8, !dbg !11825
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !11826 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11827
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11828
  %3 = lshr i32 %2, 11, !dbg !11829
  %4 = and i32 %3, 7, !dbg !11829
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11830
  %6 = load i8, i8* %5, align 1, !dbg !11830
  %7 = zext i8 %6 to i32, !dbg !11830
  %8 = lshr i32 %1, %7, !dbg !11831
  ret i32 %8, !dbg !11832
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !11833 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11837, metadata !DIExpression()), !dbg !11838
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11839
  store i32 31, i32* %2, align 4, !dbg !11840
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11841
  %4 = and i32 %3, 262144, !dbg !11843
  %5 = icmp eq i32 %4, 0, !dbg !11844
  br i1 %5, label %8, label %6, !dbg !11845

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11846
  store i32 5, i32* %7, align 4, !dbg !11848
  br label %15, !dbg !11849

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11850
  %10 = and i32 %9, 65536, !dbg !11852
  %11 = icmp eq i32 %10, 0, !dbg !11853
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11854
  br i1 %11, label %14, label %13, !dbg !11855

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !11856
  br label %15, !dbg !11858

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11859
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11861
  %17 = and i32 %16, 1, !dbg !11863
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11864
  store i32 %17, i32* %18, align 4, !dbg !11866
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11867
  %20 = lshr i32 %19, 8, !dbg !11868
  %21 = and i32 %20, 31, !dbg !11868
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11869
  store i32 %21, i32* %22, align 4, !dbg !11870
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11871
  %24 = lshr i32 %23, 8, !dbg !11873
  %25 = and i32 %24, 1, !dbg !11873
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11874
  store i32 %25, i32* %26, align 4, !dbg !11876
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11877
  %28 = lshr i32 %27, 24, !dbg !11878
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11879
  store i32 %28, i32* %29, align 4, !dbg !11880
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11881
  %31 = and i32 %30, 57344, !dbg !11882
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11883
  store i32 %31, i32* %32, align 4, !dbg !11884
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11885
  %34 = and i32 %33, 1024, !dbg !11887
  %35 = icmp eq i32 %34, 0, !dbg !11888
  br i1 %35, label %38, label %36, !dbg !11889

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11890
  store i32 5, i32* %37, align 4, !dbg !11892
  br label %45, !dbg !11893

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11894
  %40 = and i32 %39, 256, !dbg !11896
  %41 = icmp eq i32 %40, 0, !dbg !11897
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11898
  br i1 %41, label %44, label %43, !dbg !11899

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !11900
  br label %45, !dbg !11902

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !11903
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11905
  %47 = and i32 %46, 1, !dbg !11907
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11908
  store i32 %47, i32* %48, align 4, !dbg !11910
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11911
  %50 = and i32 %49, 16777216, !dbg !11913
  %51 = icmp eq i32 %50, 0, !dbg !11914
  %52 = select i1 %51, i32 1, i32 2, !dbg !11915
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11916
  store i32 %52, i32* %53, align 4, !dbg !11918
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11919
  %55 = and i32 %54, 65536, !dbg !11920
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11921
  store i32 %55, i32* %56, align 4, !dbg !11922
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11923
  %58 = and i32 %57, 3932160, !dbg !11924
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11925
  store i32 %58, i32* %59, align 4, !dbg !11926
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11927
  %61 = and i32 %60, 12582912, !dbg !11928
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11929
  store i32 %61, i32* %62, align 4, !dbg !11930
  ret void, !dbg !11931
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !11932 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11936, metadata !DIExpression()), !dbg !11938
  call void @llvm.dbg.value(metadata i32* %1, metadata !11937, metadata !DIExpression()), !dbg !11938
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11939
  store i32 15, i32* %3, align 4, !dbg !11940
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11941
  %5 = and i32 %4, 3, !dbg !11942
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11943
  store i32 %5, i32* %6, align 4, !dbg !11944
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11945
  %8 = and i32 %7, 240, !dbg !11946
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11947
  store i32 %8, i32* %9, align 4, !dbg !11948
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11949
  %11 = and i32 %10, 1792, !dbg !11950
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11951
  store i32 %11, i32* %12, align 4, !dbg !11952
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11953
  %14 = lshr i32 %13, 3, !dbg !11954
  %15 = and i32 %14, 1792, !dbg !11954
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11955
  store i32 %15, i32* %16, align 4, !dbg !11956
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11957
  %18 = and i32 %17, 1, !dbg !11957
  store i32 %18, i32* %1, align 4, !dbg !11958
  ret void, !dbg !11959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11960 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11961
  %2 = and i32 %1, 128, !dbg !11961
  %3 = icmp eq i32 %2, 0, !dbg !11961
  br i1 %3, label %5, label %4, !dbg !11963

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !11964
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11966
  br label %5, !dbg !11967

5:                                                ; preds = %4, %0
  ret void, !dbg !11968
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11969 {
  ret void, !dbg !11970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !11971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11974, metadata !DIExpression()), !dbg !11975
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !11976
  ret void, !dbg !11977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !11978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11981, metadata !DIExpression()), !dbg !11983
  call void @llvm.dbg.value(metadata i32 1000, metadata !11982, metadata !DIExpression()), !dbg !11983
  %2 = udiv i32 %0, 1000, !dbg !11984
  %3 = add nsw i32 %2, -1, !dbg !11985
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11986
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11987
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11988
  ret void, !dbg !11989
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !11990 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11992, metadata !DIExpression()), !dbg !11995
  %3 = bitcast i32* %2 to i8*, !dbg !11996
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11996
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11993, metadata !DIExpression()), !dbg !11997
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11998
  store volatile i32 %4, i32* %2, align 4, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %0, metadata !11994, metadata !DIExpression()), !dbg !11995
  %5 = load volatile i32, i32* %2, align 4, !dbg !11999
  %6 = icmp eq i32 %0, -1, !dbg !12000
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11994, metadata !DIExpression()), !dbg !11995
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %8, metadata !11994, metadata !DIExpression()), !dbg !11995
  br label %9, !dbg !12002

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11994, metadata !DIExpression()), !dbg !11995
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12003
  call void @llvm.dbg.value(metadata i32 undef, metadata !11994, metadata !DIExpression()), !dbg !11995
  %12 = shl i32 %11, 15, !dbg !11995
  %13 = ashr i32 %12, 31, !dbg !11995
  %14 = add i32 %13, %10, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %14, metadata !11994, metadata !DIExpression()), !dbg !11995
  %15 = icmp eq i32 %14, 0, !dbg !12006
  br i1 %15, label %16, label %9, !dbg !12002

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12007
  ret void, !dbg !12007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12010, metadata !DIExpression()), !dbg !12011
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12012
  ret void, !dbg !12013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !12014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12019, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata i32 0, metadata !12020, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata i32 0, metadata !12021, metadata !DIExpression()), !dbg !12022
  %2 = add i32 %0, -32000001, !dbg !12023
  %3 = icmp ult i32 %2, -32000000, !dbg !12023
  br i1 %3, label %22, label %4, !dbg !12023

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12025
  %6 = icmp eq i32 %5, 2048, !dbg !12028
  br i1 %6, label %7, label %9, !dbg !12029

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12030
  call void @llvm.dbg.value(metadata i32 undef, metadata !12021, metadata !DIExpression()), !dbg !12022
  br i1 %8, label %16, label %17, !dbg !12033

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !12034
  %11 = icmp eq i32 %10, 4096, !dbg !12036
  br i1 %11, label %12, label %14, !dbg !12037

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12038
  call void @llvm.dbg.value(metadata i32 undef, metadata !12021, metadata !DIExpression()), !dbg !12022
  br i1 %13, label %16, label %17, !dbg !12033

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12041
  call void @llvm.dbg.value(metadata i32 undef, metadata !12021, metadata !DIExpression()), !dbg !12022
  br i1 %15, label %16, label %17, !dbg !12033

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #27, !dbg !12044
  br label %17, !dbg !12047

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #27, !dbg !12048
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !12049
  %20 = icmp ne i32 %19, %18, !dbg !12051
  %21 = zext i1 %20 to i32, !dbg !12052
  br label %22, !dbg !12052

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12022
  call void @llvm.dbg.value(metadata i32 %23, metadata !12020, metadata !DIExpression()), !dbg !12022
  ret i32 %23, !dbg !12053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !12054 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12055
  %2 = and i32 %1, 6144, !dbg !12055
  ret i32 %2, !dbg !12056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !12057 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12058
  %2 = or i32 %1, 4, !dbg !12058
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12058
  ret void, !dbg !12059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !12060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12062, metadata !DIExpression()), !dbg !12063
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12064
  %3 = and i32 %2, -2, !dbg !12064
  %4 = or i32 %3, %0, !dbg !12064
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12064
  ret void, !dbg !12065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !12066 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12067
  %2 = and i32 %1, 1, !dbg !12067
  ret i32 %2, !dbg !12068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !12069 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12086, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12087, metadata !DIExpression()), !dbg !12090
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12091
  %4 = icmp eq i32 %3, 0, !dbg !12093
  br i1 %4, label %5, label %19, !dbg !12094

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #27, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %6, metadata !12089, metadata !DIExpression()), !dbg !12090
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.92() #27, !dbg !12097
  %8 = icmp eq i32 %7, 1, !dbg !12099
  br i1 %8, label %13, label %9, !dbg !12100

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.93() #27, !dbg !12101
  br label %10, !dbg !12103

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.92() #27, !dbg !12104
  %12 = icmp eq i32 %11, 1, !dbg !12105
  br i1 %12, label %13, label %10, !dbg !12103, !llvm.loop !12106

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !12108
  %15 = load i32, i32* %14, align 4, !dbg !12108
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !12109
  %17 = load i32, i32* %16, align 4, !dbg !12109
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.94(i32 noundef 0, i32 noundef %15, i32 noundef %17) #27, !dbg !12110
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12111
  call void @llvm.dbg.value(metadata i32 %18, metadata !12088, metadata !DIExpression()), !dbg !12090
  br label %19, !dbg !12112

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !12113
  call void @llvm.dbg.value(metadata i32 %20, metadata !12088, metadata !DIExpression()), !dbg !12090
  ret i32 %20, !dbg !12114
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !12115 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12119, metadata !DIExpression()), !dbg !12120
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.96() #27, !dbg !12121
  %2 = icmp ne i32 %1, 0, !dbg !12123
  %3 = zext i1 %2 to i32, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %3, metadata !12119, metadata !DIExpression()), !dbg !12120
  ret i32 %3, !dbg !12125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12130, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !12131, metadata !DIExpression()), !dbg !12133
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !12134
  %4 = load i32, i32* %3, align 4, !dbg !12134
  %5 = lshr i32 %4, 18, !dbg !12135
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !12136
  %7 = load i8, i8* %6, align 1, !dbg !12136
  %8 = zext i8 %7 to i32, !dbg !12137
  %9 = mul i32 %8, %0, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %9, metadata !12132, metadata !DIExpression()), !dbg !12133
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !12139
  %11 = load i32, i32* %10, align 4, !dbg !12139
  %12 = lshr i32 %11, 22, !dbg !12140
  %13 = add nuw nsw i32 %12, 1, !dbg !12141
  %14 = udiv i32 %9, %13, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %14, metadata !12132, metadata !DIExpression()), !dbg !12133
  ret i32 %14, !dbg !12143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.92() unnamed_addr #17 !dbg !12144 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12145
  %2 = lshr i32 %1, 1, !dbg !12146
  %3 = and i32 %2, 1, !dbg !12146
  ret i32 %3, !dbg !12147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.93() unnamed_addr #16 !dbg !12148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12149
  %2 = or i32 %1, 1, !dbg !12149
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12149
  ret void, !dbg !12150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.94(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12153, metadata !DIExpression()), !dbg !12156
  call void @llvm.dbg.value(metadata i32 %1, metadata !12154, metadata !DIExpression()), !dbg !12156
  call void @llvm.dbg.value(metadata i32 %2, metadata !12155, metadata !DIExpression()), !dbg !12156
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12157
  %5 = and i32 %4, -16580609, !dbg !12157
  %6 = or i32 %1, %0, !dbg !12157
  %7 = or i32 %6, %2, !dbg !12157
  %8 = or i32 %7, %5, !dbg !12157
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12157
  ret void, !dbg !12158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !12159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12163, metadata !DIExpression()), !dbg !12167
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12164, metadata !DIExpression()), !dbg !12167
  call void @llvm.dbg.value(metadata i32 0, metadata !12165, metadata !DIExpression()), !dbg !12167
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12168
  %4 = load i32, i32* %3, align 4, !dbg !12168
  %5 = lshr i32 %4, 4, !dbg !12168
  %6 = and i32 %5, 15, !dbg !12168
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12168
  %8 = load i8, i8* %7, align 1, !dbg !12168
  %9 = zext i8 %8 to i32, !dbg !12168
  %10 = lshr i32 %0, %9, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %10, metadata !12166, metadata !DIExpression()), !dbg !12167
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12169
  %12 = icmp ult i32 %11, %10, !dbg !12171
  br i1 %12, label %13, label %16, !dbg !12172

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %14, metadata !12165, metadata !DIExpression()), !dbg !12167
  %15 = icmp eq i32 %14, 0, !dbg !12175
  br i1 %15, label %16, label %30, !dbg !12177

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.95() #27, !dbg !12178
  br label %17, !dbg !12180

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.96() #27, !dbg !12181
  %19 = icmp eq i32 %18, 1, !dbg !12182
  br i1 %19, label %20, label %17, !dbg !12180, !llvm.loop !12183

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12185
  tail call fastcc void @LL_RCC_SetAHBPrescaler.97(i32 noundef %21) #27, !dbg !12186
  tail call fastcc void @LL_RCC_SetSysClkSource.98() #27, !dbg !12187
  br label %22, !dbg !12188

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.99() #27, !dbg !12189
  %24 = icmp eq i32 %23, 12, !dbg !12190
  br i1 %24, label %25, label %22, !dbg !12188, !llvm.loop !12191

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12193
  %27 = load i32, i32* %26, align 4, !dbg !12193
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.100(i32 noundef %27) #27, !dbg !12194
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12195
  %29 = load i32, i32* %28, align 4, !dbg !12195
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.101(i32 noundef %29) #27, !dbg !12196
  br label %30, !dbg !12197

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12198
  %33 = icmp ugt i32 %32, %10, !dbg !12200
  br i1 %33, label %34, label %36, !dbg !12201

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %35, metadata !12165, metadata !DIExpression()), !dbg !12167
  br label %36, !dbg !12204

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12167
  call void @llvm.dbg.value(metadata i32 %37, metadata !12165, metadata !DIExpression()), !dbg !12167
  %38 = icmp eq i32 %37, 0, !dbg !12205
  br i1 %38, label %39, label %40, !dbg !12207

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12208
  br label %40, !dbg !12210

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.95() unnamed_addr #16 !dbg !12212 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12213
  %2 = or i32 %1, 16777216, !dbg !12213
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12213
  ret void, !dbg !12214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.96() unnamed_addr #17 !dbg !12215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12216
  %2 = lshr i32 %1, 25, !dbg !12217
  %3 = and i32 %2, 1, !dbg !12217
  ret i32 %3, !dbg !12218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.97(i32 noundef %0) unnamed_addr #16 !dbg !12219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12221, metadata !DIExpression()), !dbg !12222
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12223
  %3 = and i32 %2, -241, !dbg !12223
  %4 = or i32 %3, %0, !dbg !12223
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12223
  ret void, !dbg !12224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.98() unnamed_addr #16 !dbg !12225 {
  call void @llvm.dbg.value(metadata i32 3, metadata !12227, metadata !DIExpression()), !dbg !12228
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12229
  %2 = or i32 %1, 3, !dbg !12229
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12229
  ret void, !dbg !12230
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.99() unnamed_addr #17 !dbg !12231 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12232
  %2 = and i32 %1, 12, !dbg !12232
  ret i32 %2, !dbg !12233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.100(i32 noundef %0) unnamed_addr #16 !dbg !12234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12236, metadata !DIExpression()), !dbg !12237
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12238
  %3 = and i32 %2, -1793, !dbg !12238
  %4 = or i32 %3, %0, !dbg !12238
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12238
  ret void, !dbg !12239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.101(i32 noundef %0) unnamed_addr #16 !dbg !12240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12242, metadata !DIExpression()), !dbg !12243
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12244
  %3 = and i32 %2, -14337, !dbg !12244
  %4 = or i32 %3, %0, !dbg !12244
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12244
  ret void, !dbg !12245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !12246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12250, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.value(metadata i32 %1, metadata !12251, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !12252, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12253, metadata !DIExpression()), !dbg !12256
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12257
  %6 = icmp eq i32 %5, 0, !dbg !12259
  br i1 %6, label %7, label %25, !dbg !12260

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #27, !dbg !12261
  call void @llvm.dbg.value(metadata i32 %8, metadata !12255, metadata !DIExpression()), !dbg !12256
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !12263
  %10 = icmp eq i32 %9, 1, !dbg !12265
  br i1 %10, label %19, label %11, !dbg !12266

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12267
  br i1 %12, label %13, label %14, !dbg !12270

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12271
  br label %15, !dbg !12273

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !12274
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !12276
  br label %16, !dbg !12277

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !12278
  %18 = icmp eq i32 %17, 1, !dbg !12279
  br i1 %18, label %19, label %16, !dbg !12277, !llvm.loop !12280

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !12282
  %21 = load i32, i32* %20, align 4, !dbg !12282
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !12283
  %23 = load i32, i32* %22, align 4, !dbg !12283
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.94(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #27, !dbg !12284
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %24, metadata !12254, metadata !DIExpression()), !dbg !12256
  br label %25, !dbg !12286

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !12287
  call void @llvm.dbg.value(metadata i32 %26, metadata !12254, metadata !DIExpression()), !dbg !12256
  ret i32 %26, !dbg !12288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !12289 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12290
  %2 = lshr i32 %1, 17, !dbg !12291
  %3 = and i32 %2, 1, !dbg !12291
  ret i32 %3, !dbg !12292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !12293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12294
  %2 = or i32 %1, 262144, !dbg !12294
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12294
  ret void, !dbg !12295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !12296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12297
  %2 = and i32 %1, -262145, !dbg !12297
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12297
  ret void, !dbg !12298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !12299 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12300
  %2 = or i32 %1, 65536, !dbg !12300
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12300
  ret void, !dbg !12301
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12302 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12305, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.value(metadata i32 undef, metadata !12305, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12321
  ret void, !dbg !12322
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12327, metadata !DIExpression()), !dbg !12329
  %2 = icmp eq i8* %0, null, !dbg !12330
  br i1 %2, label %29, label %3, !dbg !12332

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12333
  %5 = icmp eq i8 %4, 0, !dbg !12334
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12335
  br i1 %6, label %29, label %8, !dbg !12335

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12328, metadata !DIExpression()), !dbg !12329
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12336

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12328, metadata !DIExpression()), !dbg !12329
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12338
  br i1 %10, label %11, label %15, !dbg !12343

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12344
  %13 = load i8*, i8** %12, align 4, !dbg !12344
  %14 = icmp eq i8* %13, %0, !dbg !12345
  br i1 %14, label %29, label %15, !dbg !12346

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12347
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12328, metadata !DIExpression()), !dbg !12329
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12348
  br i1 %17, label %7, label %8, !dbg !12349, !llvm.loop !12350

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12328, metadata !DIExpression()), !dbg !12329
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !12352
  br i1 %20, label %21, label %26, !dbg !12356

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12357
  %23 = load i8*, i8** %22, align 4, !dbg !12357
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12358
  %25 = icmp eq i32 %24, 0, !dbg !12359
  br i1 %25, label %29, label %26, !dbg !12360

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12361
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12328, metadata !DIExpression()), !dbg !12329
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12362
  br i1 %28, label %29, label %18, !dbg !12336, !llvm.loop !12363

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12329
  ret %struct.device* %30, !dbg !12365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12370, metadata !DIExpression()), !dbg !12371
  %2 = icmp eq %struct.device* %0, null, !dbg !12372
  br i1 %2, label %14, label %3, !dbg !12374

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12375
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12375
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12376
  %7 = load i8, i8* %6, align 1, !dbg !12376
  %8 = and i8 %7, 1, !dbg !12376
  %9 = icmp eq i8 %8, 0, !dbg !12376
  br i1 %9, label %14, label %10, !dbg !12377

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12378
  %12 = load i8, i8* %11, align 1, !dbg !12378
  %13 = icmp eq i8 %12, 0, !dbg !12379
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12371
  ret i1 %15, !dbg !12380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12386, metadata !DIExpression()), !dbg !12387
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12388
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12390 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12398, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12399, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i8* %2, metadata !12400, metadata !DIExpression()), !dbg !12403
  %5 = bitcast i32* %4 to i8*, !dbg !12404
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12404
  call void @llvm.dbg.value(metadata i32 0, metadata !12401, metadata !DIExpression()), !dbg !12403
  store i32 0, i32* %4, align 4, !dbg !12405
  call void @llvm.dbg.value(metadata i32* %4, metadata !12401, metadata !DIExpression(DW_OP_deref)), !dbg !12403
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12406
  call void @llvm.dbg.value(metadata i16* %6, metadata !12402, metadata !DIExpression()), !dbg !12403
  %7 = load i32, i32* %4, align 4, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %7, metadata !12401, metadata !DIExpression()), !dbg !12403
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12408
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12409
  ret i32 %8, !dbg !12410
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12415, metadata !DIExpression()), !dbg !12421
  call void @llvm.dbg.value(metadata i32* %1, metadata !12416, metadata !DIExpression()), !dbg !12421
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12422
  %4 = load i16*, i16** %3, align 4, !dbg !12422
  call void @llvm.dbg.value(metadata i16* %4, metadata !12417, metadata !DIExpression()), !dbg !12421
  %5 = icmp eq i16* %4, null, !dbg !12423
  br i1 %5, label %14, label %6, !dbg !12424

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12425
  call void @llvm.dbg.value(metadata i32 %7, metadata !12418, metadata !DIExpression()), !dbg !12425
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12426
  %9 = load i16, i16* %8, align 2, !dbg !12426
  %10 = add i16 %9, -32767, !dbg !12427
  %11 = icmp ult i16 %10, 2, !dbg !12427
  %12 = add i32 %7, 1, !dbg !12428
  call void @llvm.dbg.value(metadata i32 %12, metadata !12418, metadata !DIExpression()), !dbg !12425
  br i1 %11, label %13, label %6, !dbg !12427, !llvm.loop !12430

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12433
  br label %14, !dbg !12434

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12435
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12436 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12440, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.value(metadata i32 %1, metadata !12441, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12442, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.value(metadata i8* %3, metadata !12443, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.value(metadata i32 0, metadata !12444, metadata !DIExpression()), !dbg !12452
  %5 = icmp eq i32 %1, 0, !dbg !12453
  br i1 %5, label %16, label %8, !dbg !12454

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12444, metadata !DIExpression()), !dbg !12452
  %7 = icmp eq i32 %15, %1, !dbg !12453
  br i1 %7, label %16, label %8, !dbg !12454, !llvm.loop !12455

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12444, metadata !DIExpression()), !dbg !12452
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12457
  %11 = load i16, i16* %10, align 2, !dbg !12457
  call void @llvm.dbg.value(metadata i16 %11, metadata !12446, metadata !DIExpression()), !dbg !12458
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !12459
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12449, metadata !DIExpression()), !dbg !12458
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %13, metadata !12450, metadata !DIExpression()), !dbg !12458
  %14 = icmp slt i32 %13, 0, !dbg !12461
  %15 = add nuw i32 %9, 1, !dbg !12463
  call void @llvm.dbg.value(metadata i32 %15, metadata !12444, metadata !DIExpression()), !dbg !12452
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12465 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12469, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12470, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12471, metadata !DIExpression()), !dbg !12472
  %2 = sext i16 %0 to i32, !dbg !12473
  %3 = icmp slt i16 %0, 1, !dbg !12475
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12476
  %6 = add nsw i32 %2, -1, !dbg !12476
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12476
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12476
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12470, metadata !DIExpression()), !dbg !12472
  ret %struct.device* %8, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12478 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12480, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12481, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i8* %2, metadata !12482, metadata !DIExpression()), !dbg !12485
  %5 = bitcast i32* %4 to i8*, !dbg !12486
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12486
  call void @llvm.dbg.value(metadata i32 0, metadata !12483, metadata !DIExpression()), !dbg !12485
  store i32 0, i32* %4, align 4, !dbg !12487
  call void @llvm.dbg.value(metadata i32* %4, metadata !12483, metadata !DIExpression(DW_OP_deref)), !dbg !12485
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12488
  call void @llvm.dbg.value(metadata i16* %6, metadata !12484, metadata !DIExpression()), !dbg !12485
  %7 = load i32, i32* %4, align 4, !dbg !12489
  call void @llvm.dbg.value(metadata i32 %7, metadata !12483, metadata !DIExpression()), !dbg !12485
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12490
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12491
  ret i32 %8, !dbg !12492
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12495, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32* %1, metadata !12496, metadata !DIExpression()), !dbg !12500
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12501
  %4 = load i16*, i16** %3, align 4, !dbg !12501
  call void @llvm.dbg.value(metadata i16* %4, metadata !12497, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 0, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 0, metadata !12499, metadata !DIExpression()), !dbg !12500
  %5 = icmp eq i16* %4, null, !dbg !12502
  br i1 %5, label %22, label %6, !dbg !12504

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12498, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i16* %8, metadata !12497, metadata !DIExpression()), !dbg !12500
  %9 = load i16, i16* %8, align 2, !dbg !12505
  %10 = icmp eq i16 %9, -32768, !dbg !12509
  call void @llvm.dbg.value(metadata i32 undef, metadata !12498, metadata !DIExpression()), !dbg !12500
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12510
  call void @llvm.dbg.value(metadata i16* %11, metadata !12497, metadata !DIExpression()), !dbg !12500
  %12 = zext i1 %10 to i32, !dbg !12511
  %13 = add i32 %7, %12, !dbg !12511
  call void @llvm.dbg.value(metadata i32 %13, metadata !12498, metadata !DIExpression()), !dbg !12500
  %14 = icmp eq i32 %13, 2, !dbg !12512
  br i1 %14, label %15, label %6, !dbg !12513

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12500
  call void @llvm.dbg.value(metadata i32 %16, metadata !12499, metadata !DIExpression()), !dbg !12500
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12514
  %18 = load i16, i16* %17, align 2, !dbg !12514
  %19 = icmp eq i16 %18, 32767, !dbg !12515
  %20 = add i32 %16, 1, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %20, metadata !12499, metadata !DIExpression()), !dbg !12500
  br i1 %19, label %21, label %15, !dbg !12518, !llvm.loop !12519

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12521
  br label %22, !dbg !12522

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12523
  call void @llvm.dbg.value(metadata i16* %23, metadata !12497, metadata !DIExpression()), !dbg !12500
  ret i16* %23, !dbg !12524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12525 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12528
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12529
  ret i32* %2, !dbg !12530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12531 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12679, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12680, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12681, metadata !DIExpression()), !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12688, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.value(metadata i32 %1, metadata !12689, metadata !DIExpression()), !dbg !12690
  ret void, !dbg !12691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12692 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12696, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata i32 %1, metadata !12697, metadata !DIExpression()), !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12704, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.value(metadata i8* %1, metadata !12705, metadata !DIExpression()), !dbg !12706
  ret i32 -134, !dbg !12707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12712, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i8* %1, metadata !12713, metadata !DIExpression()), !dbg !12714
  ret i32 -134, !dbg !12715
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12719, metadata !DIExpression()), !dbg !12720
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12721, !srcloc !12727
  call void @llvm.dbg.value(metadata i32 undef, metadata !12724, metadata !DIExpression()) #25, !dbg !12728
  call void @llvm.dbg.value(metadata i32 undef, metadata !12725, metadata !DIExpression()) #25, !dbg !12728
  br label %3, !dbg !12729

3:                                                ; preds = %3, %1
  br label %3, !dbg !12730, !llvm.loop !12733
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12740, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12741, metadata !DIExpression()), !dbg !12742
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12743
  unreachable, !dbg !12743
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12746, metadata !DIExpression()), !dbg !12747
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12748
  unreachable, !dbg !12748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12751, metadata !DIExpression()), !dbg !12755
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12752, metadata !DIExpression()), !dbg !12755
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12756, !srcloc !12727
  call void @llvm.dbg.value(metadata i32 undef, metadata !12724, metadata !DIExpression()) #25, !dbg !12758
  call void @llvm.dbg.value(metadata i32 undef, metadata !12725, metadata !DIExpression()) #25, !dbg !12758
  call void @llvm.dbg.value(metadata i32 undef, metadata !12753, metadata !DIExpression()), !dbg !12755
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12754, metadata !DIExpression()), !dbg !12755
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12759
  br i1 %4, label %6, label %5, !dbg !12761

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !12762
  br label %7, !dbg !12763

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !12762
  br label %7, !dbg !12766

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12756
  call void @llvm.dbg.value(metadata i32 %8, metadata !12724, metadata !DIExpression()) #25, !dbg !12758
  call void @llvm.dbg.value(metadata i32 %8, metadata !12753, metadata !DIExpression()), !dbg !12755
  %9 = tail call fastcc %struct.k_thread* @k_current_get.108() #28, !dbg !12768
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12754, metadata !DIExpression()), !dbg !12755
  call void @llvm.dbg.value(metadata i32 undef, metadata !12769, metadata !DIExpression()) #25, !dbg !12772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12774, !srcloc !12775
  tail call fastcc void @k_thread_abort.109(%struct.k_thread* noundef %9) #27, !dbg !12776
  ret void, !dbg !12779
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.108() unnamed_addr #9 !dbg !12780 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.110() #28, !dbg !12784
  ret %struct.k_thread* %1, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.109(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12786 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12790, metadata !DIExpression()), !dbg !12791
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12792, !srcloc !12794
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.110() unnamed_addr #9 !dbg !12797 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12798, !srcloc !12800
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12801
  ret %struct.k_thread* %1, !dbg !12802
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12803 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12807, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata i32 %1, metadata !12808, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata i32 %2, metadata !12809, metadata !DIExpression()), !dbg !12810
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12811
  ret void, !dbg !12812
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12813 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12817, metadata !DIExpression()), !dbg !12820
  call void @llvm.dbg.value(metadata i8* %1, metadata !12818, metadata !DIExpression()), !dbg !12820
  call void @llvm.dbg.value(metadata i32 %2, metadata !12819, metadata !DIExpression()), !dbg !12820
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12821
  ret void, !dbg !12822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12823 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !12824
  ret void, !dbg !12825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12828, metadata !DIExpression()), !dbg !12829
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !12830
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12831
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12832
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12833
  %4 = trunc i32 %0 to i8, !dbg !12834
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12835
  store i8 %4, i8* %5, align 4, !dbg !12836
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12837
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !12838
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12839
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12840
  store i8* %8, i8** %9, align 4, !dbg !12841
  ret void, !dbg !12842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12845, metadata !DIExpression()), !dbg !12851
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12852
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12846, metadata !DIExpression()), !dbg !12851
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12853
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12847, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i8* null, metadata !12850, metadata !DIExpression()), !dbg !12851
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12854
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12855
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !12856
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !12857
  ret void, !dbg !12858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12859 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12863, metadata !DIExpression()), !dbg !12864
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12865
  ret i8* %2, !dbg !12866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12872, metadata !DIExpression()), !dbg !12873
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12874
  %3 = load i8, i8* %2, align 1, !dbg !12875
  %4 = and i8 %3, -5, !dbg !12875
  store i8 %4, i8* %2, align 1, !dbg !12875
  ret void, !dbg !12876
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12877 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !12880
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12881
  %3 = ptrtoint i8* %2 to i32, !dbg !12890
  %4 = add i32 %3, 2048, !dbg !12891
  call void @llvm.dbg.value(metadata i32 %4, metadata !12885, metadata !DIExpression()) #25, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %4, metadata !12893, metadata !DIExpression()) #25, !dbg !12896
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12898, !srcloc !12899
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12900
  %6 = or i32 %5, 512, !dbg !12900
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12900
  tail call fastcc void @__NVIC_SetPriority.117(i32 noundef -2, i32 noundef 255) #26, !dbg !12901
  tail call fastcc void @__NVIC_SetPriority.117(i32 noundef -5, i32 noundef 0) #26, !dbg !12904
  tail call fastcc void @__NVIC_SetPriority.117(i32 noundef -12, i32 noundef 0) #26, !dbg !12905
  tail call fastcc void @__NVIC_SetPriority.117(i32 noundef -11, i32 noundef 0) #26, !dbg !12906
  tail call fastcc void @__NVIC_SetPriority.117(i32 noundef -10, i32 noundef 0) #26, !dbg !12907
  tail call fastcc void @__NVIC_SetPriority.117(i32 noundef -4, i32 noundef 0) #26, !dbg !12908
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12909
  %8 = or i32 %7, 458752, !dbg !12909
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12909
  tail call void @z_arm_fault_init() #26, !dbg !12910
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12911
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12912
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12915
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12916
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12917
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12918
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12918
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12879, metadata !DIExpression()), !dbg !12919
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !12920
  call void @z_device_state_init() #26, !dbg !12921
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !12922
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !12923
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !12924
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12925
  unreachable, !dbg !12925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2209, metadata !DIExpression()), !dbg !12926
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12927
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12927
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2210, metadata !DIExpression()), !dbg !12926
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2210, metadata !DIExpression()), !dbg !12926
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12928
  br i1 %7, label %8, label %35, !dbg !12929

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2210, metadata !DIExpression()), !dbg !12926
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12930
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12930
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2220, metadata !DIExpression()), !dbg !12931
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12932
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12932
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12933
  call void @llvm.dbg.value(metadata i32 %14, metadata !2224, metadata !DIExpression()), !dbg !12931
  %15 = icmp eq %struct.device* %11, null, !dbg !12934
  br i1 %15, label %32, label %16, !dbg !12936

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12937
  br i1 %17, label %26, label %18, !dbg !12940

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12941
  call void @llvm.dbg.value(metadata i32 %19, metadata !2224, metadata !DIExpression()), !dbg !12931
  %20 = icmp ult i32 %19, 255, !dbg !12943
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12943
  call void @llvm.dbg.value(metadata i32 %21, metadata !2224, metadata !DIExpression()), !dbg !12931
  %22 = trunc i32 %21 to i8, !dbg !12944
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12945
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12945
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12946
  store i8 %22, i8* %25, align 1, !dbg !12947
  br label %26, !dbg !12948

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12949
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12949
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12950
  %30 = load i8, i8* %29, align 1, !dbg !12951
  %31 = or i8 %30, 1, !dbg !12951
  store i8 %31, i8* %29, align 1, !dbg !12951
  br label %32, !dbg !12952

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12953
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2210, metadata !DIExpression()), !dbg !12926
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12928
  br i1 %34, label %8, label %35, !dbg !12929, !llvm.loop !12954

35:                                               ; preds = %32, %1
  ret void, !dbg !12956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.117(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12959, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata i32 %1, metadata !12960, metadata !DIExpression()), !dbg !12961
  %3 = trunc i32 %1 to i8, !dbg !12962
  %4 = shl i8 %3, 4, !dbg !12962
  %5 = and i32 %0, 15, !dbg !12965
  %6 = add nsw i32 %5, -4, !dbg !12966
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12967
  store volatile i8 %4, i8* %7, align 1, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: optsize
declare !dbg !12970 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12974, metadata !DIExpression()), !dbg !12975
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12976
  store i8 1, i8* %2, align 1, !dbg !12977
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12978
  store i8 1, i8* %3, align 4, !dbg !12979
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12980
  store i32 0, i32* %4, align 4, !dbg !12981
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12982
  store i32 0, i32* %5, align 4, !dbg !12983
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12984
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12985
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12986
  ret void, !dbg !12987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12988 {
  tail call void @z_sched_init() #26, !dbg !12991
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12992
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i32 0, i32 0)) #26, !dbg !12993
  call void @llvm.dbg.value(metadata i8* %1, metadata !12990, metadata !DIExpression()), !dbg !12994
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12995
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12996
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !12997
  ret i8* %1, !dbg !12998
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13003, metadata !DIExpression()), !dbg !13004
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !13005
  unreachable, !dbg !13006
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13009, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata i8* %1, metadata !13010, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.value(metadata i8* %2, metadata !13011, metadata !DIExpression()), !dbg !13012
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13013
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !13014
  tail call void @boot_banner() #26, !dbg !13015
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !13016
  tail call void @z_init_static_threads() #26, !dbg !13017
  tail call void @main() #26, !dbg !13018
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13019
  %5 = and i8 %4, -2, !dbg !13019
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13021 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13031, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata i8* %1, metadata !13032, metadata !DIExpression()), !dbg !13033
  ret void, !dbg !13034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13035 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13037, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i8* %1, metadata !13038, metadata !DIExpression()), !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13041 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13042, !srcloc !13049
  call void @llvm.dbg.value(metadata i32 %1, metadata !13045, metadata !DIExpression()) #25, !dbg !13050
  %2 = icmp ne i32 %1, 0, !dbg !13051
  ret i1 %2, !dbg !13052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13053 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13055
  %3 = load i8, i8* %2, align 4, !dbg !13056
  %4 = or i8 %3, 1, !dbg !13056
  store i8 %4, i8* %2, align 4, !dbg !13056
  ret void, !dbg !13057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13058 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13059
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13060
  %3 = load i8, i8* %2, align 4, !dbg !13061
  %4 = and i8 %3, -2, !dbg !13061
  store i8 %4, i8* %2, align 4, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13063 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13065
  %3 = load i8, i8* %2, align 4, !dbg !13065
  %4 = and i8 %3, 1, !dbg !13066
  %5 = icmp ne i8 %4, 0, !dbg !13067
  ret i1 %5, !dbg !13068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13073, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i8* %1, metadata !13074, metadata !DIExpression()), !dbg !13075
  ret i32 -88, !dbg !13076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13081, metadata !DIExpression()), !dbg !13082
  ret i8* null, !dbg !13083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13088, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i8* %1, metadata !13089, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.value(metadata i32 %2, metadata !13090, metadata !DIExpression()), !dbg !13091
  ret i32 -88, !dbg !13092
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2347, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i8* %1, metadata !2348, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 %2, metadata !2349, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 0, metadata !2350, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i8 undef, metadata !2352, metadata !DIExpression()), !dbg !13093
  %4 = icmp eq i8* %1, null, !dbg !13094
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13096
  br i1 %6, label %46, label %7, !dbg !13096

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13097
  %9 = load i8, i8* %8, align 1, !dbg !13097
  call void @llvm.dbg.value(metadata i8 %9, metadata !2352, metadata !DIExpression()), !dbg !13093
  %10 = add i32 %2, -1, !dbg !13098
  call void @llvm.dbg.value(metadata i32 %10, metadata !2349, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i8 0, metadata !2353, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i8 %9, metadata !2352, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 0, metadata !2350, metadata !DIExpression()), !dbg !13093
  %11 = icmp eq i8 %9, 0, !dbg !13100
  br i1 %11, label %12, label %15, !dbg !13102

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13103
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13104
  store i8 0, i8* %14, align 1, !dbg !13105
  br label %46, !dbg !13106

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2353, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i8 %17, metadata !2352, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 %18, metadata !2350, metadata !DIExpression()), !dbg !13093
  %19 = zext i8 %17 to i32, !dbg !13107
  %20 = zext i8 %16 to i32, !dbg !13108
  %21 = shl nuw i32 1, %20, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %21, metadata !2351, metadata !DIExpression()), !dbg !13093
  %22 = and i32 %21, %19, !dbg !13110
  %23 = icmp eq i32 %22, 0, !dbg !13112
  br i1 %23, label %42, label %24, !dbg !13113

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13114
  %26 = sub i32 %10, %18, !dbg !13115
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13116
  %28 = load i8*, i8** %27, align 4, !dbg !13116
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13117
  %30 = load i32, i32* %29, align 4, !dbg !13117
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13118
  %32 = add i32 %31, %18, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %32, metadata !2350, metadata !DIExpression()), !dbg !13093
  %33 = trunc i32 %21 to i8, !dbg !13120
  %34 = xor i8 %33, -1, !dbg !13120
  %35 = and i8 %17, %34, !dbg !13120
  call void @llvm.dbg.value(metadata i8 %35, metadata !2352, metadata !DIExpression()), !dbg !13093
  %36 = icmp eq i8 %35, 0, !dbg !13121
  br i1 %36, label %12, label %37, !dbg !13123

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13124
  %39 = sub i32 %10, %32, !dbg !13126
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #27, !dbg !13127
  %41 = add i32 %40, %32, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %41, metadata !2350, metadata !DIExpression()), !dbg !13093
  br label %42, !dbg !13129

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13093
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13093
  call void @llvm.dbg.value(metadata i8 %44, metadata !2352, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 %43, metadata !2350, metadata !DIExpression()), !dbg !13093
  %45 = add i8 %16, 1, !dbg !13130
  call void @llvm.dbg.value(metadata i8 %45, metadata !2353, metadata !DIExpression()), !dbg !13099
  br label %15, !dbg !13102

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !13093
  ret i8* %47, !dbg !13131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13136, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.value(metadata i32 %1, metadata !13137, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.value(metadata i8* %2, metadata !13138, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.value(metadata i32 %3, metadata !13139, metadata !DIExpression()), !dbg !13141
  %5 = icmp ult i32 %1, %3, !dbg !13142
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13142
  call void @llvm.dbg.value(metadata i32 %6, metadata !13140, metadata !DIExpression()), !dbg !13141
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13143
  ret i32 %6, !dbg !13144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13145 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13149, metadata !DIExpression()), !dbg !13150
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13151
  ret void, !dbg !13152
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13162, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13163, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i32 %2, metadata !13164, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13165, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i8* %4, metadata !13166, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i8* %5, metadata !13167, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i8* %6, metadata !13168, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i32 %7, metadata !13169, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i32 %8, metadata !13170, metadata !DIExpression()), !dbg !13173
  call void @llvm.dbg.value(metadata i8* undef, metadata !13171, metadata !DIExpression()), !dbg !13173
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13174
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13175
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13176
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13177
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13178
  call void @llvm.dbg.value(metadata i8* %13, metadata !13172, metadata !DIExpression()), !dbg !13173
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13179
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13180
  store i8* null, i8** %14, align 4, !dbg !13181
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13182
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13182
  br i1 %16, label %20, label %17, !dbg !13184

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13185
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13185
  br label %20, !dbg !13186

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13173
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13187
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13189
  ret i8* %13, !dbg !13190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13191 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13196, metadata !DIExpression()), !dbg !13197
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13198
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13199
  ret void, !dbg !13200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13201 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13206, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata i32 %1, metadata !13207, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata i32 %2, metadata !13208, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata i32 %3, metadata !13209, metadata !DIExpression()), !dbg !13210
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13211
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13212
  %6 = trunc i32 %3 to i8, !dbg !13213
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13214
  store i8 %6, i8* %7, align 4, !dbg !13215
  %8 = trunc i32 %2 to i8, !dbg !13216
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13217
  store i8 %8, i8* %9, align 1, !dbg !13218
  %10 = trunc i32 %1 to i8, !dbg !13219
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13220
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13220
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13220
  store i8 %10, i8* %13, align 2, !dbg !13221
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13222
  store i8 0, i8* %14, align 1, !dbg !13223
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13224
  ret void, !dbg !13225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13230, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13231, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 %2, metadata !13232, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 0, metadata !13237, metadata !DIExpression()), !dbg !13238
  %4 = add i32 %2, 7, !dbg !13239
  %5 = and i32 %4, -8, !dbg !13239
  %6 = add i32 %5, 64, !dbg !13239
  call void @llvm.dbg.value(metadata i32 %6, metadata !13233, metadata !DIExpression()), !dbg !13238
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.127(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13241
  call void @llvm.dbg.value(metadata i8* %7, metadata !13236, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 %5, metadata !13234, metadata !DIExpression()), !dbg !13238
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13242
  call void @llvm.dbg.value(metadata i8* %8, metadata !13235, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.value(metadata i32 0, metadata !13237, metadata !DIExpression()), !dbg !13238
  %9 = ptrtoint i8* %7 to i32, !dbg !13243
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13244
  store i32 %9, i32* %10, align 4, !dbg !13245
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13246
  store i32 %5, i32* %11, align 4, !dbg !13247
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13248
  store i32 0, i32* %12, align 4, !dbg !13249
  call void @llvm.dbg.value(metadata i8* %8, metadata !13235, metadata !DIExpression()), !dbg !13238
  ret i8* %8, !dbg !13250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.127(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13251 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13255, metadata !DIExpression()), !dbg !13256
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13257
  ret i8* %2, !dbg !13258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13259 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13264, metadata !DIExpression()), !dbg !13265
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13266
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13267
  ret void, !dbg !13268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13269 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13271, metadata !DIExpression()), !dbg !13272
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13273
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13274
  ret void, !dbg !13275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13276 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13280, metadata !DIExpression()), !dbg !13281
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13282
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13283
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13284
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13285
  ret void, !dbg !13286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13287 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13292, metadata !DIExpression()), !dbg !13293
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13294
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13295
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13296
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13297
  ret void, !dbg !13298
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13299 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13316, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13307, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13308, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i32 %2, metadata !13309, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13310, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i8* %4, metadata !13311, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i8* %5, metadata !13312, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i8* %6, metadata !13313, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i32 %7, metadata !13314, metadata !DIExpression()), !dbg !13317
  call void @llvm.dbg.value(metadata i32 %8, metadata !13315, metadata !DIExpression()), !dbg !13317
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13318
  %13 = icmp eq i64 %11, -1, !dbg !13319
  br i1 %13, label %15, label %14, !dbg !13321

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13322
  br label %15, !dbg !13324

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13326 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13331, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13330, metadata !DIExpression()), !dbg !13332
  %4 = icmp eq i64 %3, 0, !dbg !13333
  br i1 %4, label %5, label %6, !dbg !13335

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13336
  br label %7, !dbg !13338

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !13339
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13346, metadata !DIExpression()), !dbg !13347
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13348, !srcloc !13350
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13351
  ret void, !dbg !13352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13353 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13356, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13355, metadata !DIExpression()), !dbg !13357
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13358
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13361 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13363, metadata !DIExpression()), !dbg !13383
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13384

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13385
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13381, metadata !DIExpression()), !dbg !13386
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13387

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13363, metadata !DIExpression()), !dbg !13383
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13388
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13388
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13391
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13391
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13392
  %9 = load i32, i32* %8, align 4, !dbg !13392
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13393
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13393
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13394
  %13 = load i8*, i8** %12, align 4, !dbg !13394
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13395
  %15 = load i8*, i8** %14, align 4, !dbg !13395
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13396
  %17 = load i8*, i8** %16, align 4, !dbg !13396
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13397
  %19 = load i32, i32* %18, align 4, !dbg !13397
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13398
  %21 = load i32, i32* %20, align 4, !dbg !13398
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !13399
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13400
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13401
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13402
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13402
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13403
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13363, metadata !DIExpression()), !dbg !13383
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13404
  br i1 %27, label %2, label %1, !dbg !13384, !llvm.loop !13406

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !13385
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13381, metadata !DIExpression()), !dbg !13386
  br label %29, !dbg !13387

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !13408
  ret void, !dbg !13409

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13381, metadata !DIExpression()), !dbg !13386
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13410
  %33 = load i32, i32* %32, align 4, !dbg !13410
  %34 = icmp eq i32 %33, -1, !dbg !13414
  br i1 %34, label %43, label %35, !dbg !13415

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13416
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13416
  %38 = icmp sgt i32 %33, 0, !dbg !13418
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13418
  %40 = zext i32 %39 to i64, !dbg !13418
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !13418
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13419
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !13419
  br label %43, !dbg !13420

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13421
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13381, metadata !DIExpression()), !dbg !13386
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13422
  br i1 %45, label %30, label %29, !dbg !13387, !llvm.loop !13424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13426 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13431, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i64 %0, metadata !13433, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 1000, metadata !13438, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 10000, metadata !13439, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8 1, metadata !13440, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8 0, metadata !13441, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8 1, metadata !13442, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8 0, metadata !13443, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8 1, metadata !13444, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i8 0, metadata !13445, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i64 0, metadata !13446, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i64 0, metadata !13446, metadata !DIExpression()), !dbg !13450
  %2 = mul i64 %0, 10, !dbg !13452
  ret i64 %2, !dbg !13458
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13459 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13461, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8* %1, metadata !13462, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8* %2, metadata !13463, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i8* %3, metadata !13464, metadata !DIExpression()), !dbg !13465
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13466
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13467
  %7 = load i8, i8* %6, align 4, !dbg !13468
  %8 = or i8 %7, 4, !dbg !13468
  store i8 %8, i8* %6, align 4, !dbg !13468
  tail call void @z_thread_essential_clear() #27, !dbg !13469
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13470
  unreachable, !dbg !13470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13475, metadata !DIExpression()), !dbg !13476
  ret i32 -134, !dbg !13477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13482, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata i32 %1, metadata !13483, metadata !DIExpression()), !dbg !13484
  ret i32 -134, !dbg !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13493, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13494, metadata !DIExpression()), !dbg !13495
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13496
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13498
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13495
  ret i32 %6, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13504, metadata !DIExpression()), !dbg !13505
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13506
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13505
  ret i32 %3, !dbg !13508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13509 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13511
  ret void, !dbg !13512
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13515, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.value(metadata i8* %1, metadata !13516, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.value(metadata i8* %2, metadata !13517, metadata !DIExpression()), !dbg !13518
  br label %4, !dbg !13519

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13520, !srcloc !13527
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()) #25, !dbg !13528
  call void @llvm.dbg.value(metadata i32 undef, metadata !13524, metadata !DIExpression()) #25, !dbg !13528
  tail call fastcc void @k_cpu_idle() #27, !dbg !13529
  br label %4, !dbg !13519, !llvm.loop !13530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13532 {
  tail call void @arch_cpu_idle() #26, !dbg !13533
  ret void, !dbg !13534
}

; Function Attrs: optsize
declare !dbg !13535 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13536 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13540, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i1 %1, metadata !13541, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13546
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !13547
  br i1 %3, label %13, label %4, !dbg !13548

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !13549
  %6 = icmp eq i8 %5, 0, !dbg !13550
  br i1 %6, label %13, label %7, !dbg !13551

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13543, metadata !DIExpression()), !dbg !13552
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !13553
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !13553
  %10 = load i8*, i8** %9, align 4, !dbg !13553
  call void @llvm.dbg.value(metadata i8* %10, metadata !13542, metadata !DIExpression()), !dbg !13546
  br i1 %1, label %11, label %15, !dbg !13554

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13555
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !13556
  br label %15, !dbg !13559

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13560
  call void @llvm.dbg.value(metadata i8* %14, metadata !13542, metadata !DIExpression()), !dbg !13546
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13562
  call void @llvm.dbg.value(metadata i8* %16, metadata !13542, metadata !DIExpression()), !dbg !13546
  ret i8* %16, !dbg !13563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13564 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13568, metadata !DIExpression()), !dbg !13569
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13570
  %3 = load i32, i32* %2, align 4, !dbg !13570
  %4 = trunc i32 %3 to i8, !dbg !13571
  %5 = and i8 %4, 3, !dbg !13571
  ret i8 %5, !dbg !13572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !13573 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13594, metadata !DIExpression()), !dbg !13595
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13596
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !13597
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13598
  tail call fastcc void @z_waitq_init.132(%union.anon* noundef nonnull %3) #27, !dbg !13599
  ret void, !dbg !13600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13601 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13606, metadata !DIExpression()), !dbg !13607
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13608
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !13609
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13610
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !13611
  ret void, !dbg !13612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.132(%union.anon* noundef %0) unnamed_addr #4 !dbg !13613 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13618, metadata !DIExpression()), !dbg !13619
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13620
  tail call fastcc void @sys_dlist_init.133(%struct._dnode* noundef %2) #27, !dbg !13621
  ret void, !dbg !13622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.133(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13623 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13628, metadata !DIExpression()), !dbg !13629
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13630
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13631
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13632
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13633
  ret void, !dbg !13634
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13635 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13637, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13724, metadata !DIExpression()) #25, !dbg !13731
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13733, !srcloc !13739
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()) #25, !dbg !13740
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #25, !dbg !13740
  call void @llvm.dbg.value(metadata i32 undef, metadata !13730, metadata !DIExpression()) #25, !dbg !13731
  call void @llvm.dbg.value(metadata i32 undef, metadata !13638, metadata !DIExpression()), !dbg !13723
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13741
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !13742
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13643, metadata !DIExpression()), !dbg !13723
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13743
  br i1 %5, label %7, label %6, !dbg !13745

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !13746
  br label %7, !dbg !13748

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13733
  call void @llvm.dbg.value(metadata i32 %8, metadata !13736, metadata !DIExpression()) #25, !dbg !13740
  call void @llvm.dbg.value(metadata i32 %8, metadata !13730, metadata !DIExpression()) #25, !dbg !13731
  call void @llvm.dbg.value(metadata i32 %8, metadata !13638, metadata !DIExpression()), !dbg !13723
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13749
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13750
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !13750
  ret void, !dbg !13751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13756, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata i8* %1, metadata !13757, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13759, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i32 0, metadata !13765, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i8* %1, metadata !13766, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13769, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata i32 0, metadata !13774, metadata !DIExpression()), !dbg !13775
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13777
  store i32 0, i32* %3, align 4, !dbg !13778
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13779
  store i8* %1, i8** %4, align 4, !dbg !13780
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13781
  ret void, !dbg !13782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13783 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13787, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8* %1, metadata !13788, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.value(metadata i8* %2, metadata !13789, metadata !DIExpression()), !dbg !13790
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13793 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13797, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i8* %1, metadata !13798, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i8* %2, metadata !13799, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i1 %3, metadata !13800, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13807
  call void @llvm.dbg.value(metadata i1 %4, metadata !13801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13807
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13724, metadata !DIExpression()) #25, !dbg !13809
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13811, !srcloc !13739
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13811
  call void @llvm.dbg.value(metadata i32 %8, metadata !13736, metadata !DIExpression()) #25, !dbg !13813
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #25, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %8, metadata !13730, metadata !DIExpression()) #25, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %8, metadata !13803, metadata !DIExpression()), !dbg !13807
  br i1 %4, label %9, label %13, !dbg !13814

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13815
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !13818
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !13818
  call void @llvm.dbg.value(metadata i8* %12, metadata !13798, metadata !DIExpression()), !dbg !13807
  br label %13, !dbg !13819

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !13798, metadata !DIExpression()), !dbg !13807
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13820
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !13821
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13802, metadata !DIExpression()), !dbg !13807
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !13822
  br i1 %17, label %20, label %18, !dbg !13824

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !13825
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13827
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !13827
  br label %36, !dbg !13828

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !13829

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !13830
  call void @llvm.dbg.value(metadata i8* %22, metadata !13804, metadata !DIExpression()), !dbg !13831
  %23 = icmp eq i8* %22, null, !dbg !13832
  br i1 %23, label %24, label %25, !dbg !13834

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !13835, metadata !DIExpression()) #25, !dbg !13841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13840, metadata !DIExpression()) #25, !dbg !13841
  call void @llvm.dbg.value(metadata i32 %8, metadata !13844, metadata !DIExpression()) #25, !dbg !13847
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13849, !srcloc !13850
  call void @llvm.dbg.value(metadata i8* %22, metadata !13799, metadata !DIExpression()), !dbg !13807
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !13804, metadata !DIExpression()), !dbg !13831
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !13851
  %27 = bitcast i8* %26 to i8**, !dbg !13851
  store i8* %2, i8** %27, align 4, !dbg !13852
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !13853
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !13854
  call void @llvm.dbg.value(metadata i8* %22, metadata !13799, metadata !DIExpression()), !dbg !13807
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !13855
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !13857
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !13858
  call void @llvm.dbg.value(metadata i8* undef, metadata !13799, metadata !DIExpression()), !dbg !13807
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13859
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !13860
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !13861
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13862
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !13862
  br label %36, !dbg !13863

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !13807
  ret i32 %37, !dbg !13864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13865 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13869, metadata !DIExpression()), !dbg !13870
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13871
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13871
  ret %struct.z_heap_bucket* %3, !dbg !13872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13873 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13876, metadata !DIExpression()), !dbg !13877
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !13878
  ret i8* %1, !dbg !13879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !13880 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13884, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.value(metadata i8 %1, metadata !13885, metadata !DIExpression()), !dbg !13886
  %3 = zext i8 %1 to i32, !dbg !13887
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13888
  store i32 %3, i32* %4, align 4, !dbg !13889
  ret void, !dbg !13890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !13891 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13895, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13896, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !13897, metadata !DIExpression()), !dbg !13898
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !13899
  br i1 %4, label %5, label %6, !dbg !13901

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13902
  br label %11, !dbg !13902

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !13904
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !13904
  br i1 %8, label %9, label %10, !dbg !13899

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13906
  br label %11, !dbg !13906

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !13908
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !13908
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13910 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13915, metadata !DIExpression()), !dbg !13916
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13917
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !13917
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13917
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13918
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !13918
  br i1 %5, label %6, label %8, !dbg !13917

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13920
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !13920
  br label %8, !dbg !13920

8:                                                ; preds = %6, %2
  ret void, !dbg !13917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13922 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13926, metadata !DIExpression()), !dbg !13927
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13928
  %3 = load i32, i32* %2, align 4, !dbg !13928
  %4 = and i32 %3, -4, !dbg !13929
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !13930
  ret %struct.z_heap_bucket* %5, !dbg !13931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13932 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13934, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13935, metadata !DIExpression()), !dbg !13936
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !13937
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13938
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !13938
  br i1 %4, label %5, label %6, !dbg !13937

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13940
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13940
  br label %7, !dbg !13940

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !13942
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13942
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13948, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13949, metadata !DIExpression()), !dbg !13951
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !13952
  call void @llvm.dbg.value(metadata i8 %3, metadata !13950, metadata !DIExpression()), !dbg !13951
  %4 = zext i8 %3 to i32, !dbg !13953
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !13954
  %6 = or i32 %4, %5, !dbg !13955
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13956
  store i32 %6, i32* %7, align 4, !dbg !13957
  ret void, !dbg !13958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13959 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13961, metadata !DIExpression()), !dbg !13963
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13962, metadata !DIExpression()), !dbg !13963
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13964
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13967 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13969, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13970, metadata !DIExpression()), !dbg !13971
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13972
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13973
  ret void, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13977, metadata !DIExpression()), !dbg !13978
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13979
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13979
  ret %struct.z_heap_bucket* %3, !dbg !13980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13981 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13985, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata i8* %1, metadata !13986, metadata !DIExpression()), !dbg !13987
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !13988
  ret void, !dbg !13989
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13992, metadata !DIExpression()), !dbg !13994
  call void @llvm.dbg.value(metadata i8* %1, metadata !13993, metadata !DIExpression()), !dbg !13994
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13995
  ret void, !dbg !13996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13997 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14001, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i8* %1, metadata !14002, metadata !DIExpression()), !dbg !14004
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %3, metadata !14003, metadata !DIExpression()), !dbg !14004
  ret i32 %3, !dbg !14006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14007 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14009, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i8* %1, metadata !14010, metadata !DIExpression()), !dbg !14012
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !14013
  call void @llvm.dbg.value(metadata i32 %3, metadata !14011, metadata !DIExpression()), !dbg !14012
  ret i32 %3, !dbg !14014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14015 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14019, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i8* %1, metadata !14020, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i8* %2, metadata !14021, metadata !DIExpression()), !dbg !14024
  %4 = icmp eq i8* %1, null, !dbg !14025
  %5 = icmp eq i8* %2, null, !dbg !14025
  %6 = or i1 %4, %5, !dbg !14025
  br i1 %6, label %29, label %7, !dbg !14025

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14027
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13724, metadata !DIExpression()) #25, !dbg !14028
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14030, !srcloc !13739
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !14030
  call void @llvm.dbg.value(metadata i32 %10, metadata !13736, metadata !DIExpression()) #25, !dbg !14032
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #25, !dbg !14032
  call void @llvm.dbg.value(metadata i32 %10, metadata !13730, metadata !DIExpression()) #25, !dbg !14028
  call void @llvm.dbg.value(metadata i32 %10, metadata !14022, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14023, metadata !DIExpression()), !dbg !14024
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14033
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14036
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14023, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !14023, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i8* %1, metadata !14020, metadata !DIExpression()), !dbg !14024
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !14037
  br i1 %13, label %24, label %14, !dbg !14038

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14023, metadata !DIExpression()), !dbg !14024
  call void @llvm.dbg.value(metadata i8* %16, metadata !14020, metadata !DIExpression()), !dbg !14024
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !14039
  %17 = bitcast i8* %16 to i8**, !dbg !14041
  %18 = load i8*, i8** %17, align 4, !dbg !14042
  call void @llvm.dbg.value(metadata i8* %18, metadata !14020, metadata !DIExpression()), !dbg !14024
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14043
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14023, metadata !DIExpression()), !dbg !14024
  %20 = icmp ne i8* %18, null, !dbg !14044
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !14037
  %22 = select i1 %20, i1 %21, i1 false, !dbg !14037
  br i1 %22, label %14, label %23, !dbg !14038, !llvm.loop !14045

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !14047

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14048
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !14051
  br label %27, !dbg !14052

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14053
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !14053
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !14024
  ret i32 %30, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14059, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i8* %1, metadata !14060, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata i8* %2, metadata !14061, metadata !DIExpression()), !dbg !14062
  %4 = icmp ne i8* %1, null, !dbg !14063
  %5 = icmp ne i8* %2, null, !dbg !14063
  %6 = and i1 %4, %5, !dbg !14063
  br i1 %6, label %7, label %15, !dbg !14063

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14065
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14065
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14068
  br i1 %9, label %11, label %12, !dbg !14069

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14070
  br label %13, !dbg !14070

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14072
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14069
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14069
  br label %15, !dbg !14069

15:                                               ; preds = %13, %3
  ret void, !dbg !14074
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14075 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14091, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14092, metadata !DIExpression()), !dbg !14094
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.136(%struct._slist* noundef %1) #27, !dbg !14095
  br i1 %3, label %13, label %4, !dbg !14097

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14098
  %6 = load i8*, i8** %5, align 4, !dbg !14098
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14099
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14099
  %9 = load i8*, i8** %8, align 4, !dbg !14099
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14100
  call void @llvm.dbg.value(metadata i32 %10, metadata !14093, metadata !DIExpression()), !dbg !14094
  %11 = icmp eq i32 %10, 0, !dbg !14101
  br i1 %11, label %12, label %13, !dbg !14103

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14104
  br label %13, !dbg !14105

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14094
  ret i32 %14, !dbg !14106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.136(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14107 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14111, metadata !DIExpression()), !dbg !14112
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.137(%struct._slist* noundef %0) #27, !dbg !14113
  %3 = icmp eq %struct._snode* %2, null, !dbg !14113
  ret i1 %3, !dbg !14113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14114 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14118, metadata !DIExpression()), !dbg !14119
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14120
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14121
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14122
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14123
  ret void, !dbg !14124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.137(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14125 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14129, metadata !DIExpression()), !dbg !14130
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14131
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14131
  ret %struct._snode* %3, !dbg !14132
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14133 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14142, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14141, metadata !DIExpression()), !dbg !14149
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13724, metadata !DIExpression()) #25, !dbg !14151
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14153, !srcloc !13739
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14153
  call void @llvm.dbg.value(metadata i32 %5, metadata !13736, metadata !DIExpression()) #25, !dbg !14155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13737, metadata !DIExpression()) #25, !dbg !14155
  call void @llvm.dbg.value(metadata i32 %5, metadata !13730, metadata !DIExpression()) #25, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %5, metadata !14143, metadata !DIExpression()), !dbg !14149
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14156
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14156
  br i1 %7, label %11, label %8, !dbg !14157, !prof !14158

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14145, metadata !DIExpression()), !dbg !14160
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14161
  call void @llvm.dbg.value(metadata i8* %10, metadata !14144, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata i32 %5, metadata !13835, metadata !DIExpression()) #25, !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13840, metadata !DIExpression()) #25, !dbg !14162
  call void @llvm.dbg.value(metadata i32 %5, metadata !13844, metadata !DIExpression()) #25, !dbg !14164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14166, !srcloc !13850
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14142, metadata !DIExpression()), !dbg !14149
  %13 = icmp eq i64 %12, 0, !dbg !14167
  br i1 %13, label %14, label %15, !dbg !14169

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !13835, metadata !DIExpression()) #25, !dbg !14170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13840, metadata !DIExpression()) #25, !dbg !14170
  call void @llvm.dbg.value(metadata i32 %5, metadata !13844, metadata !DIExpression()) #25, !dbg !14173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14175, !srcloc !13850
  br label %24, !dbg !14176

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14177
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14178
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14178
  call void @llvm.dbg.value(metadata i32 %18, metadata !14148, metadata !DIExpression()), !dbg !14149
  %19 = icmp eq i32 %18, 0, !dbg !14179
  br i1 %19, label %20, label %24, !dbg !14180

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14181
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14182
  %23 = load i8*, i8** %22, align 4, !dbg !14182
  br label %24, !dbg !14180

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14149
  ret i8* %25, !dbg !14183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14184 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14188, metadata !DIExpression()), !dbg !14189
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14190
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14190
  ret i1 %3, !dbg !14190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14191 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14193, metadata !DIExpression()), !dbg !14195
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14196
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14194, metadata !DIExpression()), !dbg !14195
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14196
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14196
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14197
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14197
  br i1 %5, label %6, label %8, !dbg !14196

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14199
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14199
  br label %8, !dbg !14199

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14201 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14205, metadata !DIExpression()), !dbg !14208
  call void @llvm.dbg.value(metadata i8* %1, metadata !14206, metadata !DIExpression()), !dbg !14208
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14209
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14210
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14211
  call void @llvm.dbg.value(metadata i1 %5, metadata !14207, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14208
  ret i1 %5, !dbg !14212
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14213 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14217, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14218, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14219, metadata !DIExpression()), !dbg !14221
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14222
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14220, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14219, metadata !DIExpression()), !dbg !14221
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14224
  br i1 %4, label %15, label %5, !dbg !14222

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14220, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14219, metadata !DIExpression()), !dbg !14221
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14226
  br i1 %6, label %9, label %11, !dbg !14229

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14220, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14219, metadata !DIExpression()), !dbg !14221
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14226
  br i1 %8, label %9, label %11, !dbg !14229, !llvm.loop !14230

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14231
  br label %15, !dbg !14231

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14220, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14219, metadata !DIExpression()), !dbg !14221
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14224
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14220, metadata !DIExpression()), !dbg !14221
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14224
  br i1 %14, label %15, label %7, !dbg !14222, !llvm.loop !14230

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14234 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14236, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14237, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14238, metadata !DIExpression()), !dbg !14239
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14240
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14242
  br i1 %4, label %6, label %11, !dbg !14243

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14244
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14246
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14246
  br i1 %8, label %9, label %15, !dbg !14244

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14248
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14248
  br label %15, !dbg !14248

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14250
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14252
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14252
  br i1 %13, label %14, label %15, !dbg !14250

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14254
  br label %15, !dbg !14254

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14243
  ret void, !dbg !14243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14256 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14258, metadata !DIExpression()), !dbg !14259
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14260
  br i1 %2, label %5, label %3, !dbg !14260

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14260
  br label %5, !dbg !14260

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14260
  ret %struct.z_heap_bucket* %6, !dbg !14260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14261 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14263, metadata !DIExpression()), !dbg !14264
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14265
  ret %struct.z_heap_bucket* %2, !dbg !14265
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14266 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14268, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata i8* %1, metadata !14269, metadata !DIExpression()), !dbg !14271
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14272
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14272
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14270, metadata !DIExpression()), !dbg !14271
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14274
  br i1 %5, label %14, label %6, !dbg !14272

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14272

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14270, metadata !DIExpression()), !dbg !14271
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14276
  br i1 %10, label %15, label %11, !dbg !14279

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14274
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14270, metadata !DIExpression()), !dbg !14271
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14274
  br i1 %13, label %14, label %8, !dbg !14272, !llvm.loop !14280

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14282
  br label %15, !dbg !14283

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14284
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14285 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14289, metadata !DIExpression()), !dbg !14291
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14292
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14293
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14294
  call void @llvm.dbg.value(metadata i8* %4, metadata !14290, metadata !DIExpression()), !dbg !14291
  ret i8* %4, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14298, metadata !DIExpression()), !dbg !14300
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14301
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14302
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14303
  call void @llvm.dbg.value(metadata i8* %4, metadata !14299, metadata !DIExpression()), !dbg !14300
  ret i8* %4, !dbg !14304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14309, metadata !DIExpression()), !dbg !14313
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14310, metadata !DIExpression()), !dbg !14313
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14314
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14314
  %5 = load i8, i8* %4, align 2, !dbg !14314
  call void @llvm.dbg.value(metadata i8 %5, metadata !14311, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14313
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14315
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14315
  %8 = load i8, i8* %7, align 2, !dbg !14315
  call void @llvm.dbg.value(metadata i8 %8, metadata !14312, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14313
  %9 = icmp eq i8 %8, %5, !dbg !14316
  %10 = sext i8 %5 to i32, !dbg !14318
  %11 = sext i8 %8 to i32, !dbg !14318
  %12 = sub nsw i32 %11, %10, !dbg !14318
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14318
  ret i32 %13, !dbg !14319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14324, metadata !DIExpression()), !dbg !14325
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14326
  %3 = icmp eq i32 %2, 0, !dbg !14328
  br i1 %3, label %8, label %4, !dbg !14329

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14330
  %6 = add i32 %5, %2, !dbg !14332
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14333
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14334
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14335
  br label %8, !dbg !14336

8:                                                ; preds = %4, %1
  ret void, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14342, metadata !DIExpression()), !dbg !14344
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %1, metadata !14343, metadata !DIExpression()), !dbg !14344
  ret i32 %1, !dbg !14346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14351, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 %1, metadata !14352, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 0, metadata !14353, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !14369
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14371, !srcloc !14377
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %4, metadata !14374, metadata !DIExpression()) #25, !dbg !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !14378
  call void @llvm.dbg.value(metadata i32 %4, metadata !14368, metadata !DIExpression()) #25, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %4, metadata !14359, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14353, metadata !DIExpression()), !dbg !14361
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14379
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !14382
  %6 = icmp sgt i32 %0, 0, !dbg !14383
  %7 = icmp sgt i32 %5, 2, !dbg !14385
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14385
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14385
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14386
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14387
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %4, metadata !14389, metadata !DIExpression()) #25, !dbg !14395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14395
  call void @llvm.dbg.value(metadata i32 %4, metadata !14397, metadata !DIExpression()) #25, !dbg !14400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14402, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !14353, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14353, metadata !DIExpression()), !dbg !14361
  ret void, !dbg !14404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14407, metadata !DIExpression()), !dbg !14408
  call void @llvm.dbg.value(metadata i32 %0, metadata !14409, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14424
  call void @llvm.dbg.value(metadata i32 1000, metadata !14412, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i32 10000, metadata !14413, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i8 1, metadata !14414, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i1 true, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14424
  call void @llvm.dbg.value(metadata i1 true, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14424
  call void @llvm.dbg.value(metadata i8 0, metadata !14417, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i1 true, metadata !14418, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14424
  call void @llvm.dbg.value(metadata i1 false, metadata !14419, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14424
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !14424
  %2 = mul i32 %0, 10, !dbg !14426
  ret i32 %2, !dbg !14432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14435, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !14438
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14440, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14440
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !14442
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !14442
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !14438
  call void @llvm.dbg.value(metadata i32 %3, metadata !14436, metadata !DIExpression()), !dbg !14437
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14443
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14445
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14446
  br i1 %6, label %7, label %8, !dbg !14447

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !14450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14450
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !14452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14454, !srcloc !14403
  br label %24, !dbg !14455

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14456
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !14457
  %10 = icmp eq i32 %9, 0, !dbg !14457
  br i1 %10, label %21, label %11, !dbg !14459

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !14460
  br i1 %12, label %13, label %21, !dbg !14461

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14462
  %15 = icmp sgt i32 %14, %0, !dbg !14465
  br i1 %15, label %19, label %16, !dbg !14466

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14467
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !14467
  call void @llvm.dbg.value(metadata i32 %18, metadata !14436, metadata !DIExpression()), !dbg !14437
  br label %22, !dbg !14469

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14470
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14470
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14472
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14437
  call void @llvm.dbg.value(metadata i32 %23, metadata !14436, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i32 %23, metadata !14389, metadata !DIExpression()) #25, !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %23, metadata !14397, metadata !DIExpression()) #25, !dbg !14476
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14478, !srcloc !14403
  br label %24, !dbg !14479

24:                                               ; preds = %22, %7
  ret void, !dbg !14479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14480 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14486
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !14487
  %3 = icmp eq i32 %2, 0, !dbg !14487
  br i1 %3, label %16, label %4, !dbg !14488

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14489
  br i1 %5, label %16, label %6, !dbg !14490

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14491
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14491
  %9 = load i8, i8* %8, align 2, !dbg !14491
  %10 = sext i8 %9 to i32, !dbg !14492
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14493
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !14494
  br i1 %12, label %16, label %13, !dbg !14495

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !14496
  %15 = xor i1 %14, true, !dbg !14497
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14486
  call void @llvm.dbg.value(metadata i1 %17, metadata !14485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14486
  ret i1 %17, !dbg !14498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14499 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14503, metadata !DIExpression()), !dbg !14505
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14506
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14504, metadata !DIExpression()), !dbg !14505
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !14507
  br i1 %3, label %5, label %4, !dbg !14509

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !14510
  br label %5, !dbg !14512

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14503, metadata !DIExpression()), !dbg !14505
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14513
  ret i32 %6, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14517, metadata !DIExpression()), !dbg !14519
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14520
  %3 = load i8, i8* %2, align 1, !dbg !14520
  call void @llvm.dbg.value(metadata i8 %3, metadata !14518, metadata !DIExpression()), !dbg !14519
  %4 = and i8 %3, 31, !dbg !14521
  %5 = icmp ne i8 %4, 0, !dbg !14522
  ret i1 %5, !dbg !14523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()), !dbg !14527
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14528
  br i1 %2, label %3, label %7, !dbg !14530

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !14534
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14537
  %5 = load i8, i8* %4, align 1, !dbg !14538
  %6 = and i8 %5, 127, !dbg !14538
  store i8 %6, i8* %4, align 1, !dbg !14538
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()) #25, !dbg !14542
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14546
  br label %7, !dbg !14547

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()) #25, !dbg !14551
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14553
  %9 = load i8, i8* %8, align 1, !dbg !14554
  %10 = or i8 %9, -128, !dbg !14554
  store i8 %10, i8* %8, align 1, !dbg !14554
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14555, metadata !DIExpression()) #25, !dbg !14558
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14562, metadata !DIExpression()) #25, !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()) #25, !dbg !14570
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14572
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14569, metadata !DIExpression()) #25, !dbg !14570
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14574
  br i1 %12, label %23, label %13, !dbg !14572

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14569, metadata !DIExpression()) #25, !dbg !14570
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14576
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14569, metadata !DIExpression()) #25, !dbg !14570
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14577
  %17 = icmp sgt i32 %16, 0, !dbg !14580
  br i1 %17, label %18, label %20, !dbg !14581

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14582
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14584
  br label %25, !dbg !14585

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14574
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14569, metadata !DIExpression()) #25, !dbg !14570
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14574
  br i1 %22, label %23, label %13, !dbg !14572, !llvm.loop !14586

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14588
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14589
  br label %25, !dbg !14590

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14591
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14592
  %28 = zext i1 %27 to i32, !dbg !14592
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !14593
  ret void, !dbg !14594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14597, metadata !DIExpression()), !dbg !14598
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !14599
  ret i1 %2, !dbg !14600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14603, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14604, metadata !DIExpression()), !dbg !14605
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14606
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !14607
  ret void, !dbg !14608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14609 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14613, metadata !DIExpression()), !dbg !14614
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !14615
  br i1 %2, label %6, label %3, !dbg !14615

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14616
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14616
  br label %6, !dbg !14615

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14615
  ret %struct._dnode* %7, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14622, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14623, metadata !DIExpression()), !dbg !14626
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14627
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14627
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14624, metadata !DIExpression()), !dbg !14626
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14628
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14629
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14630
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14631
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14632
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14633
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14634
  ret void, !dbg !14635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14636 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14640, metadata !DIExpression()), !dbg !14642
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14641, metadata !DIExpression()), !dbg !14642
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14643
  br i1 %3, label %6, label %4, !dbg !14644

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !14645
  br label %6, !dbg !14644

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14644
  ret %struct._dnode* %7, !dbg !14646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14647 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14651, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14652, metadata !DIExpression()), !dbg !14654
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14655
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14655
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14653, metadata !DIExpression()), !dbg !14654
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14656
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14657
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14658
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14659
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14660
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14661
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14662
  ret void, !dbg !14663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14666, metadata !DIExpression()), !dbg !14668
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14669
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14676, metadata !DIExpression()) #25, !dbg !14678
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14679
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14680
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14667, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14681, metadata !DIExpression()) #25, !dbg !14687
  call void @llvm.dbg.value(metadata i32 %0, metadata !14686, metadata !DIExpression()) #25, !dbg !14687
  %6 = icmp eq i32 %0, 0, !dbg !14690
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14692
  br i1 %6, label %8, label %15, !dbg !14693

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14694
  br i1 %9, label %15, label %10, !dbg !14696

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14697
  br i1 %11, label %15, label %12, !dbg !14699

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14700
  %14 = icmp eq i32 %13, 0, !dbg !14700
  br i1 %14, label %18, label %15, !dbg !14702

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14703
  br i1 %16, label %18, label %17, !dbg !14706

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14707
  br label %18, !dbg !14709

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14692
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14692
  ret void, !dbg !14710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14711 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14715, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14716, metadata !DIExpression()), !dbg !14718
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !14719
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14717, metadata !DIExpression()), !dbg !14718
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14716, metadata !DIExpression()), !dbg !14718
  ret %struct.k_thread* %3, !dbg !14720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14723, metadata !DIExpression()), !dbg !14724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14725
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14726
  %4 = xor i1 %3, true, !dbg !14727
  ret i1 %4, !dbg !14728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14731, metadata !DIExpression()), !dbg !14732
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14733
  %3 = load i16, i16* %2, align 2, !dbg !14733
  %4 = icmp ult i16 %3, 128, !dbg !14734
  %5 = zext i1 %4 to i32, !dbg !14734
  ret i32 %5, !dbg !14735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14736 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14742, metadata !DIExpression()), !dbg !14743
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14744
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !14745
  %4 = xor i1 %3, true, !dbg !14746
  ret i1 %4, !dbg !14747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14748 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14754, metadata !DIExpression()), !dbg !14755
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14756
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14756
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14757
  ret i1 %4, !dbg !14758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14761, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14762, metadata !DIExpression()), !dbg !14763
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14764
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14764
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14765
  br i1 %5, label %9, label %6, !dbg !14766

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14767
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14767
  br label %9, !dbg !14766

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14766
  ret %struct._dnode* %10, !dbg !14768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14769 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14773, metadata !DIExpression()), !dbg !14774
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14775
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14775
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14776
  ret i1 %4, !dbg !14777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14778 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14782, metadata !DIExpression()), !dbg !14785
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14786
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14786
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14783, metadata !DIExpression()), !dbg !14785
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14787
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14787
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14784, metadata !DIExpression()), !dbg !14785
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14788
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14789
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14790
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14791
  tail call fastcc void @sys_dnode_init.140(%struct._dnode* noundef %0) #27, !dbg !14792
  ret void, !dbg !14793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.140(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14796, metadata !DIExpression()), !dbg !14797
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14798
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14799
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14800
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14801
  ret void, !dbg !14802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14807, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata i32 128, metadata !14808, metadata !DIExpression()), !dbg !14809
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14810
  %3 = load i8, i8* %2, align 1, !dbg !14810
  %4 = icmp slt i8 %3, 0, !dbg !14811
  ret i1 %4, !dbg !14812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14817, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.value(metadata i32 %1, metadata !14818, metadata !DIExpression()), !dbg !14819
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !14820
  ret i1 %3, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14824, metadata !DIExpression()), !dbg !14825
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14826
  ret i1 %2, !dbg !14827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14830, metadata !DIExpression()), !dbg !14832
  call void @llvm.dbg.value(metadata i32 %1, metadata !14831, metadata !DIExpression()), !dbg !14832
  %3 = icmp slt i32 %0, %1, !dbg !14833
  ret i1 %3, !dbg !14834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14837, metadata !DIExpression()), !dbg !14841
  call void @llvm.dbg.value(metadata i32 0, metadata !14838, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !14843
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14845, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !14847
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %3, metadata !14840, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14838, metadata !DIExpression()), !dbg !14842
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !14853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !14855
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14857, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !14838, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14838, metadata !DIExpression()), !dbg !14842
  ret void, !dbg !14858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14859 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14861, metadata !DIExpression()), !dbg !14862
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14863
  br i1 %2, label %24, label %3, !dbg !14865

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !14866
  br i1 %4, label %5, label %24, !dbg !14867

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()) #25, !dbg !14868
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14871
  %7 = load i8, i8* %6, align 1, !dbg !14872
  %8 = or i8 %7, -128, !dbg !14872
  store i8 %8, i8* %6, align 1, !dbg !14872
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14555, metadata !DIExpression()) #25, !dbg !14873
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14562, metadata !DIExpression()) #25, !dbg !14875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()) #25, !dbg !14875
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14877
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14569, metadata !DIExpression()) #25, !dbg !14875
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14878
  br i1 %10, label %21, label %11, !dbg !14877

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14569, metadata !DIExpression()) #25, !dbg !14875
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14879
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14569, metadata !DIExpression()) #25, !dbg !14875
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !14880
  %15 = icmp sgt i32 %14, 0, !dbg !14881
  br i1 %15, label %16, label %18, !dbg !14882

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14883
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !14884
  br label %23, !dbg !14885

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !14878
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14569, metadata !DIExpression()) #25, !dbg !14875
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14878
  br i1 %20, label %21, label %11, !dbg !14877, !llvm.loop !14886

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14888
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !14889
  br label %23, !dbg !14890

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !14891
  br label %24, !dbg !14892

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14896, metadata !DIExpression()), !dbg !14897
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14898
  br i1 %2, label %6, label %3, !dbg !14899

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !14900
  %5 = xor i1 %4, true, !dbg !14899
  br label %6, !dbg !14899

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()), !dbg !14908
  call void @llvm.dbg.value(metadata i32 0, metadata !14905, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !14910
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14912, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14912
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !14914
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !14914
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !14910
  call void @llvm.dbg.value(metadata i32 %3, metadata !14907, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14905, metadata !DIExpression()), !dbg !14909
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !14915
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !14918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14918
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !14920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14922, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !14905, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14905, metadata !DIExpression()), !dbg !14909
  ret void, !dbg !14923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14926, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !14929
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14931, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14931
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !14933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !14933
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !14929
  call void @llvm.dbg.value(metadata i32 %3, metadata !14927, metadata !DIExpression()), !dbg !14928
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !14934
  br i1 %4, label %5, label %6, !dbg !14936

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !14937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14937
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !14940
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14942, !srcloc !14403
  br label %8, !dbg !14943

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.145(%struct.k_thread* noundef %0) #27, !dbg !14944
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14945
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14946
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !14946
  br label %8, !dbg !14947

8:                                                ; preds = %6, %5
  ret void, !dbg !14947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14950, metadata !DIExpression()), !dbg !14951
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14952
  %3 = load i8, i8* %2, align 1, !dbg !14952
  %4 = and i8 %3, 4, !dbg !14953
  %5 = icmp eq i8 %4, 0, !dbg !14954
  ret i1 %5, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.145(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14958, metadata !DIExpression()), !dbg !14959
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14960
  %3 = load i8, i8* %2, align 1, !dbg !14961
  %4 = and i8 %3, -5, !dbg !14961
  store i8 %4, i8* %2, align 1, !dbg !14961
  ret void, !dbg !14962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14963 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14966, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14965, metadata !DIExpression()), !dbg !14967
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !14968
  br i1 %4, label %5, label %9, !dbg !14970

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !14971
  br i1 %6, label %7, label %9, !dbg !14972

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14973, metadata !DIExpression()) #25, !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #25, !dbg !14979
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14982
  br label %10, !dbg !14983

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !14984
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !14987
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14989, !srcloc !14403
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14995, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata i32 %0, metadata !14997, metadata !DIExpression()), !dbg !15002
  %2 = icmp eq i32 %0, 0, !dbg !15004
  br i1 %2, label %3, label %6, !dbg !15005

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15006, !srcloc !15013
  call void @llvm.dbg.value(metadata i32 %4, metadata !15009, metadata !DIExpression()) #25, !dbg !15014
  %5 = icmp eq i32 %4, 0, !dbg !15015
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14996
  ret i1 %7, !dbg !15016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15017 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15020
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15019, metadata !DIExpression()), !dbg !15021
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15022
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15023
  ret i1 %3, !dbg !15024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15027, metadata !DIExpression()), !dbg !15029
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !15030
  call void @llvm.dbg.value(metadata i32 %2, metadata !15028, metadata !DIExpression()), !dbg !15029
  ret i32 %2, !dbg !15031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15034, metadata !DIExpression()), !dbg !15038
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15039
  call void @llvm.dbg.value(metadata i32 0, metadata !15035, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15041
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15043, !srcloc !14377
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15043
  call void @llvm.dbg.value(metadata i32 %4, metadata !14374, metadata !DIExpression()) #25, !dbg !15045
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15045
  call void @llvm.dbg.value(metadata i32 %4, metadata !14368, metadata !DIExpression()) #25, !dbg !15041
  call void @llvm.dbg.value(metadata i32 %4, metadata !15037, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15040
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15046
  br i1 %5, label %6, label %10, !dbg !15050

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !15051
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15054
  %8 = load i8, i8* %7, align 1, !dbg !15055
  %9 = and i8 %8, 127, !dbg !15055
  store i8 %9, i8* %7, align 1, !dbg !15055
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()) #25, !dbg !15056
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15058
  br label %10, !dbg !15059

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !15060
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15061
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15062
  %13 = zext i1 %12 to i32, !dbg !15062
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %4, metadata !14389, metadata !DIExpression()) #25, !dbg !15064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15064
  call void @llvm.dbg.value(metadata i32 %4, metadata !14397, metadata !DIExpression()) #25, !dbg !15066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15068, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15035, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15040
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15069
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15071
  br i1 %15, label %16, label %17, !dbg !15072

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15073
  br label %17, !dbg !15075

17:                                               ; preds = %16, %10
  ret void, !dbg !15076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15081
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15082
  ret i32 %3, !dbg !15083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15086, metadata !DIExpression()), !dbg !15087
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15088
  %3 = load i8, i8* %2, align 1, !dbg !15089
  %4 = or i8 %3, 16, !dbg !15089
  store i8 %4, i8* %2, align 1, !dbg !15089
  ret void, !dbg !15090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15091 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15092, !srcloc !14377
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15092
  call void @llvm.dbg.value(metadata i32 %2, metadata !14374, metadata !DIExpression()) #25, !dbg !15094
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15094
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15099, metadata !DIExpression()), !dbg !15100
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15101
  br i1 %2, label %3, label %5, !dbg !15103

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15104
  br label %6, !dbg !15106

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14397, metadata !DIExpression()) #25, !dbg !15107
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15110, !srcloc !14403
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15112 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15114, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15119, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !15117
  call void @llvm.dbg.value(metadata i32 %3, metadata !15115, metadata !DIExpression()), !dbg !15116
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15122
  br i1 %4, label %6, label %5, !dbg !15124

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !15125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !15128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15130, !srcloc !14403
  br label %8, !dbg !15131

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15132
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15133
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15134
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15134
  br label %8, !dbg !15135

8:                                                ; preds = %6, %5
  ret void, !dbg !15135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15136 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15138, metadata !DIExpression()), !dbg !15139
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15140
  %3 = load i8, i8* %2, align 1, !dbg !15140
  %4 = and i8 %3, 16, !dbg !15141
  %5 = icmp ne i8 %4, 0, !dbg !15142
  ret i1 %5, !dbg !15143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15146, metadata !DIExpression()), !dbg !15147
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15148
  %3 = load i8, i8* %2, align 1, !dbg !15149
  %4 = and i8 %3, -17, !dbg !15149
  store i8 %4, i8* %2, align 1, !dbg !15149
  ret void, !dbg !15150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15151 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15161, metadata !DIExpression()), !dbg !15165
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15159, metadata !DIExpression()), !dbg !15165
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15160, metadata !DIExpression()), !dbg !15165
  call void @llvm.dbg.value(metadata i32 0, metadata !15162, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15167
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15169, !srcloc !14377
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15169
  call void @llvm.dbg.value(metadata i32 %5, metadata !14374, metadata !DIExpression()) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 %5, metadata !14368, metadata !DIExpression()) #25, !dbg !15167
  call void @llvm.dbg.value(metadata i32 %5, metadata !15164, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15162, metadata !DIExpression()), !dbg !15166
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %5, metadata !14389, metadata !DIExpression()) #25, !dbg !15175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15175
  call void @llvm.dbg.value(metadata i32 %5, metadata !14397, metadata !DIExpression()) #25, !dbg !15177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15179, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15162, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15162, metadata !DIExpression()), !dbg !15166
  ret void, !dbg !15180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15181 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15185, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15183, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15184, metadata !DIExpression()), !dbg !15186
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15187
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15188
  ret void, !dbg !15189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15190 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15194, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15195, metadata !DIExpression()), !dbg !15196
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15197
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15198
  %3 = icmp eq %union.anon* %1, null, !dbg !15199
  br i1 %3, label %21, label %4, !dbg !15201

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15202
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15204
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15205
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14562, metadata !DIExpression()) #25, !dbg !15206
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()) #25, !dbg !15206
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15208
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14569, metadata !DIExpression()) #25, !dbg !15206
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15209
  br i1 %8, label %19, label %9, !dbg !15208

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14569, metadata !DIExpression()) #25, !dbg !15206
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15210
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14569, metadata !DIExpression()) #25, !dbg !15206
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15211
  %13 = icmp sgt i32 %12, 0, !dbg !15212
  br i1 %13, label %14, label %16, !dbg !15213

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15214
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15215
  br label %21, !dbg !15216

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15209
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14569, metadata !DIExpression()) #25, !dbg !15206
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15209
  br i1 %18, label %19, label %9, !dbg !15208, !llvm.loop !15217

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15219
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15220
  br label %21, !dbg !15221

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15223 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15228, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15227, metadata !DIExpression()), !dbg !15229
  %4 = icmp eq i64 %3, -1, !dbg !15230
  br i1 %4, label %6, label %5, !dbg !15232

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15233
  br label %6, !dbg !15235

6:                                                ; preds = %5, %2
  ret void, !dbg !15236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15237 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15240, metadata !DIExpression()), !dbg !15241
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15239, metadata !DIExpression()), !dbg !15241
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15242
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15243
  ret void, !dbg !15244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15245 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15247, metadata !DIExpression()), !dbg !15255
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15256
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15256
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15248, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i32 0, metadata !15249, metadata !DIExpression()), !dbg !15257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15258
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15260, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15262
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15262
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !15251, metadata !DIExpression()), !dbg !15257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()), !dbg !15257
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15263
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15264
  %7 = load i8, i8* %6, align 1, !dbg !15264
  %8 = and i8 %7, 40, !dbg !15265
  %9 = icmp eq i8 %8, 0, !dbg !15265
  call void @llvm.dbg.value(metadata i1 %9, metadata !15252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15266
  br i1 %9, label %10, label %17, !dbg !15267

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15268
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15268
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15268
  %14 = icmp eq %union.anon* %13, null, !dbg !15272
  br i1 %14, label %16, label %15, !dbg !15273

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15274
  br label %16, !dbg !15276

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.145(%struct.k_thread* noundef nonnull %3) #27, !dbg !15277
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15278
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15279
  br label %17, !dbg !15280

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15260
  call void @llvm.dbg.value(metadata i32 %18, metadata !14374, metadata !DIExpression()) #25, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %18, metadata !14368, metadata !DIExpression()) #25, !dbg !15258
  call void @llvm.dbg.value(metadata i32 %18, metadata !15251, metadata !DIExpression()), !dbg !15257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #25, !dbg !15281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !15283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15285, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15249, metadata !DIExpression()), !dbg !15257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()), !dbg !15257
  ret void, !dbg !15286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15289, metadata !DIExpression()), !dbg !15290
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15291
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15292
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15293
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15294
  ret void, !dbg !15295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15298, metadata !DIExpression()), !dbg !15299
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15300
  %3 = load i8, i8* %2, align 1, !dbg !15301
  %4 = and i8 %3, -3, !dbg !15301
  store i8 %4, i8* %2, align 1, !dbg !15301
  ret void, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15305, metadata !DIExpression()), !dbg !15306
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15307
  br i1 %2, label %3, label %7, !dbg !15309

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !15310
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15313
  %5 = load i8, i8* %4, align 1, !dbg !15314
  %6 = and i8 %5, 127, !dbg !15314
  store i8 %6, i8* %4, align 1, !dbg !15314
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()) #25, !dbg !15315
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15317
  br label %7, !dbg !15318

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15319
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15320
  %10 = zext i1 %9 to i32, !dbg !15320
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15321
  ret void, !dbg !15322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15325, metadata !DIExpression()), !dbg !15326
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15327
  %3 = load i8, i8* %2, align 1, !dbg !15328
  %4 = or i8 %3, 2, !dbg !15328
  store i8 %4, i8* %2, align 1, !dbg !15328
  ret void, !dbg !15329
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()), !dbg !15336
  call void @llvm.dbg.value(metadata i32 0, metadata !15333, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15338
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15340, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15342
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !15338
  call void @llvm.dbg.value(metadata i32 %3, metadata !15335, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()), !dbg !15337
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !15348
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15350, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15333, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()), !dbg !15337
  ret void, !dbg !15351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15352 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15358, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i32 %0, metadata !15356, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15357, metadata !DIExpression()), !dbg !15363
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15364
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15365
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15366
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15367
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15368
  call void @llvm.dbg.value(metadata i32 %6, metadata !15359, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.value(metadata i32 0, metadata !15360, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15370
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15372, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15362, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15360, metadata !DIExpression()), !dbg !15369
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15375
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15379
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15380
  br i1 %10, label %11, label %12, !dbg !15381

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15382
  br label %12, !dbg !15384

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15372
  call void @llvm.dbg.value(metadata i32 %13, metadata !14374, metadata !DIExpression()) #25, !dbg !15374
  call void @llvm.dbg.value(metadata i32 %13, metadata !14368, metadata !DIExpression()) #25, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %13, metadata !15362, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #25, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15385
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !15387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15389, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15360, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15360, metadata !DIExpression()), !dbg !15369
  ret i32 %6, !dbg !15390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15391 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15396, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata i64 undef, metadata !15398, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15395, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15397, metadata !DIExpression()), !dbg !15399
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15400
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15402
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15404, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15406
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15406
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15402
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15407
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !15408
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14973, metadata !DIExpression()) #25, !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #25, !dbg !15409
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15411
  ret i32 %9, !dbg !15412
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15413 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15417, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15418, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i32 0, metadata !15419, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15424
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15426, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !15421, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15418, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i32 undef, metadata !15419, metadata !DIExpression()), !dbg !15423
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15429
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15418, metadata !DIExpression()), !dbg !15422
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15432
  br i1 %5, label %7, label %6, !dbg !15434

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15435
  br label %7, !dbg !15437

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15426
  call void @llvm.dbg.value(metadata i32 %8, metadata !14374, metadata !DIExpression()) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %8, metadata !14368, metadata !DIExpression()) #25, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %8, metadata !15421, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #25, !dbg !15438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !15440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15442, !srcloc !14403
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15418, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i32 undef, metadata !15419, metadata !DIExpression()), !dbg !15423
  ret %struct.k_thread* %4, !dbg !15443
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15444 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15446, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15447, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i32 0, metadata !15448, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15453
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15455, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15450, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15447, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()), !dbg !15452
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15458
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15447, metadata !DIExpression()), !dbg !15451
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15461
  br i1 %5, label %8, label %6, !dbg !15463

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15464
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15466
  br label %8, !dbg !15467

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15455
  call void @llvm.dbg.value(metadata i32 %9, metadata !14374, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %9, metadata !14368, metadata !DIExpression()) #25, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %9, metadata !15450, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #25, !dbg !15468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !15470
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15472, !srcloc !14403
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15447, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()), !dbg !15452
  ret %struct.k_thread* %4, !dbg !15473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15474 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15476, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15332, metadata !DIExpression()) #25, !dbg !15478
  call void @llvm.dbg.value(metadata i32 0, metadata !15333, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15481
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15483, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %3, metadata !15335, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()) #25, !dbg !15480
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15486
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !15489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15491, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15333, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()) #25, !dbg !15480
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15492
  ret void, !dbg !15493
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15494 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15496, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 %1, metadata !15497, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i8 0, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 0, metadata !15499, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15504
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15506, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !15501, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i8 poison, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15499, metadata !DIExpression()), !dbg !15503
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15509
  call void @llvm.dbg.value(metadata i1 %6, metadata !15498, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15502
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15512

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !15513
  %11 = load i8, i8* %4, align 1, !dbg !15519
  %12 = and i8 %11, 127, !dbg !15519
  store i8 %12, i8* %4, align 1, !dbg !15519
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()) #25, !dbg !15520
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15522
  store i8 %9, i8* %8, align 2, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()) #25, !dbg !15524
  %13 = load i8, i8* %4, align 1, !dbg !15526
  %14 = or i8 %13, -128, !dbg !15526
  store i8 %14, i8* %4, align 1, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14555, metadata !DIExpression()) #25, !dbg !15527
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14562, metadata !DIExpression()) #25, !dbg !15529
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()) #25, !dbg !15529
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15531
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14569, metadata !DIExpression()) #25, !dbg !15529
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15532
  br i1 %16, label %26, label %17, !dbg !15531

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14569, metadata !DIExpression()) #25, !dbg !15529
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14569, metadata !DIExpression()) #25, !dbg !15529
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15534
  %21 = icmp sgt i32 %20, 0, !dbg !15535
  br i1 %21, label %22, label %23, !dbg !15536

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15537
  br label %27, !dbg !15538

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15532
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14569, metadata !DIExpression()) #25, !dbg !15529
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15532
  br i1 %25, label %26, label %17, !dbg !15531, !llvm.loop !15539

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15541
  br label %27, !dbg !15542

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15543
  br label %29, !dbg !15544

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15545
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %30, metadata !14374, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %30, metadata !14368, metadata !DIExpression()) #25, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %30, metadata !15501, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #25, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !15549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15551, !srcloc !14403
  call void @llvm.dbg.value(metadata i8 poison, metadata !15498, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15499, metadata !DIExpression()), !dbg !15503
  ret i1 %6, !dbg !15552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15557, metadata !DIExpression()), !dbg !15560
  call void @llvm.dbg.value(metadata i32 %1, metadata !15558, metadata !DIExpression()), !dbg !15560
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15561
  call void @llvm.dbg.value(metadata i1 %3, metadata !15559, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15560
  br i1 %3, label %4, label %12, !dbg !15562

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15564
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15565
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15565
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15565
  %9 = load i8, i8* %8, align 1, !dbg !15565
  %10 = icmp eq i8 %9, 0, !dbg !15566
  br i1 %10, label %11, label %12, !dbg !15567

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15568
  br label %12, !dbg !15570

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15572 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15574, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15578
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15580, !srcloc !14377
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15580
  call void @llvm.dbg.value(metadata i32 %2, metadata !14374, metadata !DIExpression()) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 %2, metadata !14368, metadata !DIExpression()) #25, !dbg !15578
  call void @llvm.dbg.value(metadata i32 %2, metadata !15576, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()), !dbg !15577
  tail call fastcc void @z_sched_lock() #27, !dbg !15583
  call void @llvm.dbg.value(metadata i32 %2, metadata !14389, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %2, metadata !14397, metadata !DIExpression()) #25, !dbg !15588
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15590, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15574, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()), !dbg !15577
  ret void, !dbg !15591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15592 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15593
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15594
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15594
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15594
  %5 = load i8, i8* %4, align 1, !dbg !15595
  %6 = add i8 %5, -1, !dbg !15595
  store i8 %6, i8* %4, align 1, !dbg !15595
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15596, !srcloc !15598
  ret void, !dbg !15599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15600 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15602, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15606
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15608, !srcloc !14377
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15608
  call void @llvm.dbg.value(metadata i32 %2, metadata !14374, metadata !DIExpression()) #25, !dbg !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15610
  call void @llvm.dbg.value(metadata i32 %2, metadata !14368, metadata !DIExpression()) #25, !dbg !15606
  call void @llvm.dbg.value(metadata i32 %2, metadata !15604, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()), !dbg !15605
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15611
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15614
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15614
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15614
  %7 = load i8, i8* %6, align 1, !dbg !15615
  %8 = add i8 %7, 1, !dbg !15615
  store i8 %8, i8* %6, align 1, !dbg !15615
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15616
  call void @llvm.dbg.value(metadata i32 %2, metadata !14389, metadata !DIExpression()) #25, !dbg !15617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !15617
  call void @llvm.dbg.value(metadata i32 %2, metadata !14397, metadata !DIExpression()) #25, !dbg !15619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15621, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 1, metadata !15602, metadata !DIExpression()), !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !15602, metadata !DIExpression()), !dbg !15605
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15622
  ret void, !dbg !15623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15624 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15625
  ret %struct.k_thread* %1, !dbg !15626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15627 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15631, metadata !DIExpression()), !dbg !15636
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15632, metadata !DIExpression()), !dbg !15636
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15637
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15633, metadata !DIExpression()), !dbg !15636
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15634, metadata !DIExpression()), !dbg !15636
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %5, metadata !15635, metadata !DIExpression()), !dbg !15636
  %6 = icmp sgt i32 %5, 0, !dbg !15640
  br i1 %6, label %17, label %7, !dbg !15642

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15643
  br i1 %8, label %17, label %9, !dbg !15645

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15646
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15646
  %12 = load i32, i32* %11, align 8, !dbg !15646
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15648
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15648
  %15 = load i32, i32* %14, align 8, !dbg !15648
  %16 = icmp ult i32 %12, %15, !dbg !15649
  br label %17, !dbg !15650

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15651
  ret i1 %18, !dbg !15652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15653 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15670, metadata !DIExpression()), !dbg !15685
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15671, metadata !DIExpression()), !dbg !15685
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15686
  %5 = load i32, i32* %4, align 4, !dbg !15687
  %6 = add nsw i32 %5, 1, !dbg !15687
  store i32 %6, i32* %4, align 4, !dbg !15687
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15688
  store i32 %5, i32* %7, align 8, !dbg !15689
  %8 = load i32, i32* %4, align 4, !dbg !15690
  %9 = icmp eq i32 %8, 0, !dbg !15691
  br i1 %9, label %10, label %32, !dbg !15692

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15693
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15693
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15673, metadata !DIExpression()), !dbg !15693
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15693
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15693
  %14 = load i32, i32* %13, align 4, !dbg !15693
  %15 = shl i32 %14, 2, !dbg !15693
  %16 = alloca i8, i32 %15, align 8, !dbg !15693
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15693
  store i8* %16, i8** %17, align 4, !dbg !15693
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15693
  %19 = alloca i8, i32 %14, align 8, !dbg !15693
  store i8* %19, i8** %18, align 4, !dbg !15693
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15693
  store i32 -1, i32* %20, align 4, !dbg !15693
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15694
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15682, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15672, metadata !DIExpression()), !dbg !15685
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15696
  br i1 %22, label %23, label %24, !dbg !15693

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15696
  br label %32, !dbg !15697

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15672, metadata !DIExpression()), !dbg !15685
  %26 = load i32, i32* %4, align 4, !dbg !15698
  %27 = add nsw i32 %26, 1, !dbg !15698
  store i32 %27, i32* %4, align 4, !dbg !15698
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15700
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15700
  store i32 %26, i32* %29, align 8, !dbg !15701
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15694
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15682, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15672, metadata !DIExpression()), !dbg !15685
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15696
  br i1 %31, label %23, label %24, !dbg !15693, !llvm.loop !15702

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15704
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15705
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15706
  ret void, !dbg !15707
}

; Function Attrs: optsize
declare !dbg !15708 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15713 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15716 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15718, metadata !DIExpression()), !dbg !15720
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15719, metadata !DIExpression()), !dbg !15720
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15721
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15722
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15723
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15724
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15724
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15726
  br i1 %7, label %8, label %10, !dbg !15727

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15728
  store i32 0, i32* %9, align 4, !dbg !15730
  br label %10, !dbg !15731

10:                                               ; preds = %8, %2
  ret void, !dbg !15732
}

; Function Attrs: optsize
declare !dbg !15733 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15734 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15738, metadata !DIExpression()), !dbg !15741
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15739, metadata !DIExpression()), !dbg !15741
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15742
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !15743
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15740, metadata !DIExpression()), !dbg !15741
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15739, metadata !DIExpression()), !dbg !15741
  ret %struct.k_thread* %4, !dbg !15744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15745 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15749, metadata !DIExpression()), !dbg !15750
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15751
  ret %struct.rbnode* %2, !dbg !15752
}

; Function Attrs: optsize
declare !dbg !15753 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15756 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15766, metadata !DIExpression()), !dbg !15770
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15771
  %3 = load i32, i32* %2, align 4, !dbg !15771
  %4 = icmp eq i32 %3, 0, !dbg !15773
  br i1 %4, label %10, label %5, !dbg !15774

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15767, metadata !DIExpression()), !dbg !15770
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15775, !range !3786
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15776
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15768, metadata !DIExpression()), !dbg !15770
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !15777
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15769, metadata !DIExpression()), !dbg !15770
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15767, metadata !DIExpression()), !dbg !15770
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15770
  ret %struct.k_thread* %11, !dbg !15778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15779 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15783, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata i32 0, metadata !15784, metadata !DIExpression()), !dbg !15786
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15785, metadata !DIExpression()), !dbg !15786
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15788
  br i1 %3, label %8, label %4, !dbg !15789

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15790
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15792
  call void @llvm.dbg.value(metadata i32 1, metadata !15784, metadata !DIExpression()), !dbg !15786
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15785, metadata !DIExpression()), !dbg !15786
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15788
  br i1 %7, label %8, label %4, !dbg !15789, !llvm.loop !15793

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15786
  ret i32 %9, !dbg !15795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15796 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15798, metadata !DIExpression()), !dbg !15799
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15800
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15801
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15802
  ret %struct.k_thread* %4, !dbg !15803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15804 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15813, metadata !DIExpression()), !dbg !15814
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15815
  tail call fastcc void @sys_dlist_init.159(%struct._dnode* noundef nonnull %2) #27, !dbg !15816
  ret void, !dbg !15817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.159(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15818 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15822, metadata !DIExpression()), !dbg !15823
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15824
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15825
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15826
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15827
  ret void, !dbg !15828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15829 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !15830
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !15831
  ret void, !dbg !15832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15838, metadata !DIExpression()), !dbg !15839
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15840
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15840
  %4 = load i8, i8* %3, align 2, !dbg !15840
  %5 = sext i8 %4 to i32, !dbg !15841
  ret i32 %5, !dbg !15842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15847, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata i32 %1, metadata !15848, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15849, metadata !DIExpression()), !dbg !15850
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15851
  ret void, !dbg !15852
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15853 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !15854
  br i1 %1, label %8, label %2, !dbg !15855

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15856
  br i1 %3, label %8, label %4, !dbg !15857

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15858
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !15859
  %7 = xor i1 %6, true, !dbg !15857
  br label %8, !dbg !15857

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15861 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15862, !range !6247
  %2 = icmp eq i8 %1, 0, !dbg !15862
  ret i1 %2, !dbg !15863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15864 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15867
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15869, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !15867
  call void @llvm.dbg.value(metadata i32 undef, metadata !15866, metadata !DIExpression()), !dbg !15872
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15873
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14531, metadata !DIExpression()) #25, !dbg !15876
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15878
  %4 = load i8, i8* %3, align 1, !dbg !15879
  %5 = and i8 %4, 127, !dbg !15879
  store i8 %5, i8* %3, align 1, !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14539, metadata !DIExpression()) #25, !dbg !15880
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !15882
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15883
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14548, metadata !DIExpression()) #25, !dbg !15884
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15886
  %8 = load i8, i8* %7, align 1, !dbg !15887
  %9 = or i8 %8, -128, !dbg !15887
  store i8 %9, i8* %7, align 1, !dbg !15887
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14555, metadata !DIExpression()) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14562, metadata !DIExpression()) #25, !dbg !15890
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14568, metadata !DIExpression()) #25, !dbg !15890
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15892
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14569, metadata !DIExpression()) #25, !dbg !15890
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15893
  br i1 %11, label %22, label %12, !dbg !15892

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14569, metadata !DIExpression()) #25, !dbg !15890
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15894
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14569, metadata !DIExpression()) #25, !dbg !15890
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !15895
  %16 = icmp sgt i32 %15, 0, !dbg !15896
  br i1 %16, label %17, label %19, !dbg !15897

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15898
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15899
  br label %24, !dbg !15900

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !15893
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14569, metadata !DIExpression()) #25, !dbg !15890
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15893
  br i1 %21, label %22, label %12, !dbg !15892, !llvm.loop !15901

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15903
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !15904
  br label %24, !dbg !15905

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15869
  call void @llvm.dbg.value(metadata i32 %25, metadata !14374, metadata !DIExpression()) #25, !dbg !15871
  call void @llvm.dbg.value(metadata i32 %25, metadata !14368, metadata !DIExpression()) #25, !dbg !15867
  call void @llvm.dbg.value(metadata i32 %25, metadata !15866, metadata !DIExpression()), !dbg !15872
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14973, metadata !DIExpression()) #25, !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #25, !dbg !15907
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !15909
  ret void, !dbg !15910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15911 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15915, metadata !DIExpression()), !dbg !15918
  %3 = icmp eq i64 %2, -1, !dbg !15919
  br i1 %3, label %4, label %6, !dbg !15921

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15922
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !15924
  br label %11, !dbg !15925

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15916, metadata !DIExpression()), !dbg !15918
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !15926
  %8 = sext i32 %7 to i64, !dbg !15926
  call void @llvm.dbg.value(metadata i64 %8, metadata !15916, metadata !DIExpression()), !dbg !15918
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !15927
  %10 = trunc i64 %9 to i32, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %10, metadata !15917, metadata !DIExpression()), !dbg !15918
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15918
  ret i32 %12, !dbg !15928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()), !dbg !15934
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15935, !srcloc !15937
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !15938
  ret void, !dbg !15939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15940 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15944, metadata !DIExpression()), !dbg !15948
  %2 = icmp eq i64 %0, 0, !dbg !15949
  br i1 %2, label %3, label %4, !dbg !15951

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !15952
  br label %29, !dbg !15954

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15946, metadata !DIExpression()), !dbg !15948
  %5 = icmp sgt i64 %0, -3, !dbg !15955
  br i1 %5, label %6, label %10, !dbg !15957

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15958
  %8 = trunc i64 %0 to i32, !dbg !15960
  %9 = add i32 %7, %8, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %9, metadata !15945, metadata !DIExpression()), !dbg !15948
  br label %13, !dbg !15961

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15962
  %12 = sub i32 -2, %11, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %12, metadata !15945, metadata !DIExpression()), !dbg !15948
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15964
  call void @llvm.dbg.value(metadata i32 %14, metadata !15945, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !15965
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15967, !srcloc !14377
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %16, metadata !14374, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %16, metadata !14368, metadata !DIExpression()) #25, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %16, metadata !15947, metadata !DIExpression()), !dbg !15948
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15970
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15971
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !15972
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15973
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15974
  tail call fastcc void @z_add_thread_timeout.148(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !15974
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15975
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !15976
  call void @llvm.dbg.value(metadata i32 %16, metadata !14973, metadata !DIExpression()) #25, !dbg !15977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #25, !dbg !15977
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !15979
  %22 = zext i32 %14 to i64, !dbg !15980
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15981
  %24 = zext i32 %23 to i64, !dbg !15981
  %25 = sub nsw i64 %22, %24, !dbg !15982
  call void @llvm.dbg.value(metadata i64 %25, metadata !15944, metadata !DIExpression()), !dbg !15948
  %26 = icmp sgt i64 %25, 0, !dbg !15983
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15983
  %28 = trunc i64 %27 to i32, !dbg !15983
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15948
  ret i32 %30, !dbg !15984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15985 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15987, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i64 %0, metadata !14409, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i32 10000, metadata !14412, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i32 1000, metadata !14413, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i8 1, metadata !14414, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i1 false, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i1 false, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i8 0, metadata !14417, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i1 false, metadata !14418, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i1 true, metadata !14419, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i64 %0, metadata !14409, metadata !DIExpression()), !dbg !15989
  %2 = udiv i64 %0, 10, !dbg !15991
  ret i64 %2, !dbg !15995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15996 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15997, !srcloc !15999
  tail call void @z_impl_k_yield() #27, !dbg !16000
  ret void, !dbg !16001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16006, metadata !DIExpression()), !dbg !16008
  %2 = sext i32 %0 to i64, !dbg !16009
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !16010
  call void @llvm.dbg.value(metadata i64 %3, metadata !16007, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16008
  %4 = shl i64 %3, 32, !dbg !16011
  %5 = ashr exact i64 %4, 32, !dbg !16011
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !16012
  call void @llvm.dbg.value(metadata i32 %6, metadata !16007, metadata !DIExpression()), !dbg !16008
  %7 = sext i32 %6 to i64, !dbg !16013
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !16014
  %9 = trunc i64 %8 to i32, !dbg !16014
  ret i32 %9, !dbg !16015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16016 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16018, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i64 %0, metadata !14409, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14412, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i32 10000, metadata !14413, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i8 1, metadata !14414, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i1 false, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i1 true, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i8 0, metadata !14417, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i1 false, metadata !14418, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i1 true, metadata !14419, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !16020
  %2 = add i64 %0, 99, !dbg !16022
  call void @llvm.dbg.value(metadata i64 %2, metadata !14409, metadata !DIExpression()), !dbg !16020
  %3 = udiv i64 %2, 100, !dbg !16023
  ret i64 %3, !dbg !16024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16025 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16027, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i64 %0, metadata !14409, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 10000, metadata !14412, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14413, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i8 1, metadata !14414, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i1 false, metadata !14415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i1 false, metadata !14416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i8 0, metadata !14417, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i1 true, metadata !14418, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i1 false, metadata !14419, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i64 0, metadata !14420, metadata !DIExpression()), !dbg !16029
  %2 = mul i64 %0, 100, !dbg !16031
  ret i64 %2, !dbg !16033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16036, metadata !DIExpression()), !dbg !16037
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !16038
  br i1 %2, label %14, label %3, !dbg !16040

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16041
  %5 = icmp slt i32 %4, 0, !dbg !16043
  br i1 %5, label %6, label %10, !dbg !16044

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16045
  %8 = load i8, i8* %7, align 1, !dbg !16045
  %9 = icmp eq i8 %8, 16, !dbg !16048
  br i1 %9, label %10, label %14, !dbg !16049

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16050
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16051
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16052, !srcloc !15013
  call void @llvm.dbg.value(metadata i32 %11, metadata !15009, metadata !DIExpression()) #25, !dbg !16056
  %12 = icmp eq i32 %11, 0, !dbg !16057
  br i1 %12, label %13, label %14, !dbg !16058

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16059
  br label %14, !dbg !16061

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16065, metadata !DIExpression()), !dbg !16066
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16067
  %3 = load i8, i8* %2, align 1, !dbg !16067
  %4 = and i8 %3, 2, !dbg !16068
  %5 = icmp ne i8 %4, 0, !dbg !16069
  ret i1 %5, !dbg !16070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16071 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16076
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16075, metadata !DIExpression()), !dbg !16077
  ret %struct.k_thread* %1, !dbg !16078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16079 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16080, !srcloc !15013
  call void @llvm.dbg.value(metadata i32 %1, metadata !15009, metadata !DIExpression()) #25, !dbg !16083
  %2 = icmp eq i32 %1, 0, !dbg !16084
  br i1 %2, label %3, label %8, !dbg !16085

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16086
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16087
  %6 = icmp ne i32 %5, 0, !dbg !16085
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16088
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16089 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16091, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !16094
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16096, !srcloc !14377
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16096
  call void @llvm.dbg.value(metadata i32 %3, metadata !14374, metadata !DIExpression()) #25, !dbg !16098
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !16098
  call void @llvm.dbg.value(metadata i32 %3, metadata !14368, metadata !DIExpression()) #25, !dbg !16094
  call void @llvm.dbg.value(metadata i32 %3, metadata !16092, metadata !DIExpression()), !dbg !16093
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16099
  %5 = load i8, i8* %4, align 4, !dbg !16099
  %6 = and i8 %5, 1, !dbg !16101
  %7 = icmp eq i8 %6, 0, !dbg !16102
  br i1 %7, label %9, label %8, !dbg !16103

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !16107
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16109, !srcloc !14403
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16110, !srcloc !16112
  br label %24, !dbg !16113

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16114
  %11 = load i8, i8* %10, align 1, !dbg !16114
  %12 = and i8 %11, 8, !dbg !16116
  %13 = icmp eq i8 %12, 0, !dbg !16117
  br i1 %13, label %15, label %14, !dbg !16118

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !16119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !16119
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !16122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16124, !srcloc !14403
  br label %24, !dbg !16125

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16126
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16127
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16129
  br i1 %17, label %18, label %23, !dbg !16130

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16131, !srcloc !15013
  call void @llvm.dbg.value(metadata i32 %19, metadata !15009, metadata !DIExpression()) #25, !dbg !16134
  %20 = icmp eq i32 %19, 0, !dbg !16135
  br i1 %20, label %21, label %23, !dbg !16136

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14973, metadata !DIExpression()) #25, !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #25, !dbg !16137
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16140
  br label %23, !dbg !16141

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14389, metadata !DIExpression()) #25, !dbg !16142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %3, metadata !14397, metadata !DIExpression()) #25, !dbg !16144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16146, !srcloc !14403
  br label %24, !dbg !16147

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16150, metadata !DIExpression()), !dbg !16151
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16152
  %3 = load i8, i8* %2, align 1, !dbg !16152
  %4 = and i8 %3, 8, !dbg !16154
  %5 = icmp eq i8 %4, 0, !dbg !16155
  br i1 %5, label %6, label %20, !dbg !16156

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16157
  %8 = or i8 %7, 8, !dbg !16157
  store i8 %8, i8* %2, align 1, !dbg !16157
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16159
  br i1 %9, label %10, label %12, !dbg !16161

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()) #25, !dbg !16162
  %11 = and i8 %8, 95, !dbg !16165
  store i8 %11, i8* %2, align 1, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()) #25, !dbg !16166
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16168
  br label %12, !dbg !16169

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16170
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16170
  %15 = icmp eq %union.anon* %14, null, !dbg !16172
  br i1 %15, label %17, label %16, !dbg !16173

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16174
  br label %17, !dbg !16176

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16177
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16178
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16179
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16180
  br label %20, !dbg !16181

20:                                               ; preds = %17, %1
  ret void, !dbg !16182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16183 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16187, metadata !DIExpression()), !dbg !16189
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16190
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16188, metadata !DIExpression()), !dbg !16189
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16191
  br i1 %3, label %10, label %4, !dbg !16192

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16193
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16195
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16196, metadata !DIExpression()), !dbg !16202
  call void @llvm.dbg.value(metadata i32 0, metadata !16201, metadata !DIExpression()), !dbg !16202
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16204
  store i32 0, i32* %7, align 4, !dbg !16205
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16206
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16190
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16188, metadata !DIExpression()), !dbg !16189
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16191
  br i1 %9, label %10, label %4, !dbg !16192, !llvm.loop !16207

10:                                               ; preds = %4, %1
  ret void, !dbg !16209
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16210 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16215, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16214, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !16219
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16221, !srcloc !14377
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16221
  call void @llvm.dbg.value(metadata i32 %4, metadata !14374, metadata !DIExpression()) #25, !dbg !16223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !16223
  call void @llvm.dbg.value(metadata i32 %4, metadata !14368, metadata !DIExpression()) #25, !dbg !16219
  call void @llvm.dbg.value(metadata i32 %4, metadata !16216, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata i32 0, metadata !16217, metadata !DIExpression()), !dbg !16218
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16224
  %6 = load i8, i8* %5, align 1, !dbg !16224
  %7 = and i8 %6, 8, !dbg !16226
  %8 = icmp eq i8 %7, 0, !dbg !16227
  br i1 %8, label %9, label %24, !dbg !16228

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16215, metadata !DIExpression()), !dbg !16218
  %11 = icmp eq i64 %10, 0, !dbg !16229
  br i1 %11, label %24, label %12, !dbg !16231

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16232
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16234
  br i1 %14, label %24, label %15, !dbg !16235

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16236
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16236
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16237
  %19 = icmp eq %union.anon* %17, %18, !dbg !16238
  br i1 %19, label %24, label %20, !dbg !16239

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16240
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16242
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16243
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %4, metadata !14973, metadata !DIExpression()) #25, !dbg !16245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14978, metadata !DIExpression()) #25, !dbg !16245
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16247
  call void @llvm.dbg.value(metadata i32 %23, metadata !16217, metadata !DIExpression()), !dbg !16218
  br label %26, !dbg !16248

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16249
  call void @llvm.dbg.value(metadata i32 %25, metadata !16217, metadata !DIExpression()), !dbg !16218
  call void @llvm.dbg.value(metadata i32 %4, metadata !14389, metadata !DIExpression()) #25, !dbg !16250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !16250
  call void @llvm.dbg.value(metadata i32 %4, metadata !14397, metadata !DIExpression()) #25, !dbg !16252
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16254, !srcloc !14403
  br label %26, !dbg !16255

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16218
  ret i32 %27, !dbg !16256
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16257 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16261, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i32 %1, metadata !16262, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i8* %2, metadata !16263, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i8 0, metadata !16265, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i32 0, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #25, !dbg !16271
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16273, !srcloc !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #25, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14375, metadata !DIExpression()) #25, !dbg !16275
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #25, !dbg !16271
  call void @llvm.dbg.value(metadata i32 undef, metadata !16268, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i8 poison, metadata !16265, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()), !dbg !16270
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16276
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16264, metadata !DIExpression()), !dbg !16269
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16279
  br i1 %7, label %12, label %8, !dbg !16281

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16282, metadata !DIExpression()), !dbg !16289
  call void @llvm.dbg.value(metadata i32 %1, metadata !16287, metadata !DIExpression()), !dbg !16289
  call void @llvm.dbg.value(metadata i8* %2, metadata !16288, metadata !DIExpression()), !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16196, metadata !DIExpression()), !dbg !16292
  call void @llvm.dbg.value(metadata i32 %1, metadata !16201, metadata !DIExpression()), !dbg !16292
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16294
  store i32 %1, i32* %9, align 4, !dbg !16295
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16296
  store i8* %2, i8** %10, align 4, !dbg !16297
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16298
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16299
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16300
  call void @llvm.dbg.value(metadata i8 1, metadata !16265, metadata !DIExpression()), !dbg !16269
  br label %12, !dbg !16301

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16273
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16273
  call void @llvm.dbg.value(metadata i32 %14, metadata !14374, metadata !DIExpression()) #25, !dbg !16275
  call void @llvm.dbg.value(metadata i32 %14, metadata !14368, metadata !DIExpression()) #25, !dbg !16271
  call void @llvm.dbg.value(metadata i32 %14, metadata !16268, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i8 poison, metadata !16265, metadata !DIExpression()), !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14389, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14394, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata i32 undef, metadata !14397, metadata !DIExpression()) #25, !dbg !16304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16306, !srcloc !14403
  call void @llvm.dbg.value(metadata i32 undef, metadata !16266, metadata !DIExpression()), !dbg !16270
  ret i1 %13, !dbg !16307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16308 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16313, metadata !DIExpression()), !dbg !16318
  call void @llvm.dbg.value(metadata i64 undef, metadata !16315, metadata !DIExpression()), !dbg !16318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16312, metadata !DIExpression()), !dbg !16318
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16314, metadata !DIExpression()), !dbg !16318
  call void @llvm.dbg.value(metadata i8** %4, metadata !16316, metadata !DIExpression()), !dbg !16318
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16319
  call void @llvm.dbg.value(metadata i32 %6, metadata !16317, metadata !DIExpression()), !dbg !16318
  %7 = icmp eq i8** %4, null, !dbg !16320
  br i1 %7, label %12, label %8, !dbg !16322

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16323
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16325
  %11 = load i8*, i8** %10, align 4, !dbg !16325
  store i8* %11, i8** %4, align 4, !dbg !16326
  br label %12, !dbg !16327

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16329 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16331
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16332
  ret void, !dbg !16333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16334 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16344, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16342, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16343, metadata !DIExpression()), !dbg !16361
  %5 = icmp eq i64 %4, -1, !dbg !16362
  br i1 %5, label %55, label %6, !dbg !16364

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16365
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16366
  call void @llvm.dbg.value(metadata i32 0, metadata !16345, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16375
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16377, !srcloc !16383
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16377
  call void @llvm.dbg.value(metadata i32 %9, metadata !16380, metadata !DIExpression()) #25, !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16384
  call void @llvm.dbg.value(metadata i32 %9, metadata !16374, metadata !DIExpression()) #25, !dbg !16375
  call void @llvm.dbg.value(metadata i32 %9, metadata !16351, metadata !DIExpression()), !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16345, metadata !DIExpression()), !dbg !16367
  %10 = icmp slt i64 %4, -1, !dbg !16385
  br i1 %10, label %11, label %17, !dbg !16386

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16387
  %13 = add i64 %4, %12, !dbg !16388
  %14 = sub i64 -2, %13, !dbg !16388
  call void @llvm.dbg.value(metadata i64 %14, metadata !16355, metadata !DIExpression()), !dbg !16389
  %15 = icmp sgt i64 %14, 1, !dbg !16390
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16390
  br label %22, !dbg !16391

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16392
  %19 = tail call fastcc i32 @elapsed.170() #27, !dbg !16394
  %20 = sext i32 %19 to i64, !dbg !16394
  %21 = add nsw i64 %18, %20, !dbg !16395
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16396
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16397
  store i64 %23, i64* %24, align 8, !dbg !16398
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !16399
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16352, metadata !DIExpression()), !dbg !16401
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16402
  br i1 %26, label %42, label %27, !dbg !16402

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16403
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16352, metadata !DIExpression()), !dbg !16401
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16407
  %31 = load i64, i64* %30, align 8, !dbg !16407
  %32 = icmp slt i64 %28, %31, !dbg !16408
  br i1 %32, label %33, label %38, !dbg !16409

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16407
  %35 = sub nsw i64 %31, %28, !dbg !16410
  store i64 %35, i64* %34, align 8, !dbg !16410
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16412
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16413
  tail call fastcc void @sys_dlist_insert.171(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !16414
  br label %44, !dbg !16415

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16416
  store i64 %39, i64* %24, align 8, !dbg !16416
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !16417
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16352, metadata !DIExpression()), !dbg !16401
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16402
  br i1 %41, label %42, label %27, !dbg !16402, !llvm.loop !16418

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16420
  tail call fastcc void @sys_dlist_append.172(%struct._dnode* noundef %43) #27, !dbg !16423
  br label %44, !dbg !16424

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !16425
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16426
  br i1 %46, label %47, label %54, !dbg !16427

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !16428
  call void @llvm.dbg.value(metadata i32 %48, metadata !16358, metadata !DIExpression()), !dbg !16429
  %49 = icmp ne i32 %48, 0, !dbg !16430
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16432
  br i1 %52, label %54, label %53, !dbg !16432

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16433
  br label %54, !dbg !16435

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16436, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %9, metadata !16444, metadata !DIExpression()) #25, !dbg !16447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16449, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16345, metadata !DIExpression()), !dbg !16367
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.170() unnamed_addr #1 !dbg !16452 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16455
  %2 = icmp eq i32 %1, 0, !dbg !16456
  br i1 %2, label %3, label %5, !dbg !16455

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16457
  br label %5, !dbg !16455

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16455
  ret i32 %6, !dbg !16458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16459 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.175() #27, !dbg !16465
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16463, metadata !DIExpression()), !dbg !16466
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16467
  ret %struct._timeout* %2, !dbg !16468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.171(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16469 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16473, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16474, metadata !DIExpression()), !dbg !16477
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16478
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16478
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16475, metadata !DIExpression()), !dbg !16477
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16479
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16480
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16481
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16482
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16483
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16484
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16485
  ret void, !dbg !16486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16487 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16491, metadata !DIExpression()), !dbg !16493
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16494
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.173(%struct._dnode* noundef %2) #27, !dbg !16495
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16492, metadata !DIExpression()), !dbg !16493
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16496
  ret %struct._timeout* %4, !dbg !16497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.172(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16498 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16503, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16504, metadata !DIExpression()), !dbg !16506
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16507
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16505, metadata !DIExpression()), !dbg !16506
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16508
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16509
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16510
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16511
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16512
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16513
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16514
  ret void, !dbg !16515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16516 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !16521
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16518, metadata !DIExpression()), !dbg !16522
  %2 = tail call fastcc i32 @elapsed.170() #27, !dbg !16523
  call void @llvm.dbg.value(metadata i32 %2, metadata !16519, metadata !DIExpression()), !dbg !16522
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16524
  br i1 %3, label %14, label %4, !dbg !16526

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16527
  %6 = load i64, i64* %5, align 8, !dbg !16527
  %7 = sext i32 %2 to i64, !dbg !16528
  %8 = sub nsw i64 %6, %7, !dbg !16529
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16530
  br i1 %9, label %14, label %10, !dbg !16531

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16532
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16532
  %13 = trunc i64 %12 to i32, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %13, metadata !16520, metadata !DIExpression()), !dbg !16522
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16534
  call void @llvm.dbg.value(metadata i32 %15, metadata !16520, metadata !DIExpression()), !dbg !16522
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16535
  %17 = icmp ne i32 %16, 0, !dbg !16537
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16538
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %20, metadata !16520, metadata !DIExpression()), !dbg !16522
  ret i32 %20, !dbg !16539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.173(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16540 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16544, metadata !DIExpression()), !dbg !16546
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16545, metadata !DIExpression()), !dbg !16546
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16547
  br i1 %2, label %5, label %3, !dbg !16548

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.174(%struct._dnode* noundef nonnull %0) #27, !dbg !16549
  br label %5, !dbg !16548

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16548
  ret %struct._dnode* %6, !dbg !16550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.174(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16551 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16553, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16554, metadata !DIExpression()), !dbg !16555
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16556
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16557
  br i1 %3, label %7, label %4, !dbg !16558

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16559
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16559
  br label %7, !dbg !16558

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16558
  ret %struct._dnode* %8, !dbg !16560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.175() unnamed_addr #5 !dbg !16561 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16565, metadata !DIExpression()), !dbg !16566
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.176() #27, !dbg !16567
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16567
  ret %struct._dnode* %3, !dbg !16568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.176() unnamed_addr #5 !dbg !16569 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16573, metadata !DIExpression()), !dbg !16574
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16575
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16576
  ret i1 %2, !dbg !16577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16578 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16582, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata i32 -22, metadata !16583, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata i32 0, metadata !16584, metadata !DIExpression()), !dbg !16588
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16589
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16591, !srcloc !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16593
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16593
  call void @llvm.dbg.value(metadata i32 undef, metadata !16374, metadata !DIExpression()) #25, !dbg !16589
  call void @llvm.dbg.value(metadata i32 undef, metadata !16586, metadata !DIExpression()), !dbg !16588
  call void @llvm.dbg.value(metadata i32 -22, metadata !16583, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()), !dbg !16588
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16583, metadata !DIExpression()), !dbg !16587
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* noundef %3) #27, !dbg !16594
  br i1 %4, label %5, label %6, !dbg !16598

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !16599
  call void @llvm.dbg.value(metadata i32 0, metadata !16583, metadata !DIExpression()), !dbg !16587
  br label %6, !dbg !16601

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16587
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16591
  call void @llvm.dbg.value(metadata i32 %8, metadata !16380, metadata !DIExpression()) #25, !dbg !16593
  call void @llvm.dbg.value(metadata i32 %8, metadata !16374, metadata !DIExpression()) #25, !dbg !16589
  call void @llvm.dbg.value(metadata i32 %8, metadata !16586, metadata !DIExpression()), !dbg !16588
  call void @llvm.dbg.value(metadata i32 %7, metadata !16583, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16602
  call void @llvm.dbg.value(metadata i32 undef, metadata !16444, metadata !DIExpression()) #25, !dbg !16604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16606, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()), !dbg !16588
  ret i32 %7, !dbg !16607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16608 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16614, metadata !DIExpression()), !dbg !16615
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16616
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16616
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16617
  ret i1 %4, !dbg !16618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16619 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16621, metadata !DIExpression()), !dbg !16622
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !16623
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16625
  br i1 %3, label %10, label %4, !dbg !16626

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16627
  %6 = load i64, i64* %5, align 8, !dbg !16627
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16629
  %8 = load i64, i64* %7, align 8, !dbg !16630
  %9 = add nsw i64 %8, %6, !dbg !16630
  store i64 %9, i64* %7, align 8, !dbg !16630
  br label %10, !dbg !16631

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16632
  tail call fastcc void @sys_dlist_remove.180(%struct._dnode* noundef %11) #27, !dbg !16633
  ret void, !dbg !16634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.180(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16635 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16639, metadata !DIExpression()), !dbg !16642
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16643
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16643
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16640, metadata !DIExpression()), !dbg !16642
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16644
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16644
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16641, metadata !DIExpression()), !dbg !16642
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16645
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16646
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16647
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16648
  tail call fastcc void @sys_dnode_init.181(%struct._dnode* noundef %0) #27, !dbg !16649
  ret void, !dbg !16650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.181(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16651 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16653, metadata !DIExpression()), !dbg !16654
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16655
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16656
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16657
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16658
  ret void, !dbg !16659
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16660 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16666, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i64 0, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16673
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16675, !srcloc !16383
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %3, metadata !16380, metadata !DIExpression()) #25, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %3, metadata !16374, metadata !DIExpression()) #25, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %3, metadata !16670, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i64 0, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()), !dbg !16672
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16678
  call void @llvm.dbg.value(metadata i64 %4, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %3, metadata !16444, metadata !DIExpression()) #25, !dbg !16683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16685, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()), !dbg !16672
  ret i64 %4, !dbg !16686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16687 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16689, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i64 0, metadata !16690, metadata !DIExpression()), !dbg !16693
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.182(%struct._timeout* noundef %0) #27, !dbg !16694
  br i1 %2, label %21, label %3, !dbg !16696

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !16697
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16691, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i64 0, metadata !16690, metadata !DIExpression()), !dbg !16693
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16699
  br i1 %5, label %16, label %6, !dbg !16701

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16691, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i64 %8, metadata !16690, metadata !DIExpression()), !dbg !16693
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16702
  %10 = load i64, i64* %9, align 8, !dbg !16702
  %11 = add nsw i64 %10, %8, !dbg !16704
  call void @llvm.dbg.value(metadata i64 %11, metadata !16690, metadata !DIExpression()), !dbg !16693
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16705
  br i1 %12, label %16, label %13, !dbg !16707

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !16708
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16691, metadata !DIExpression()), !dbg !16698
  call void @llvm.dbg.value(metadata i64 %11, metadata !16690, metadata !DIExpression()), !dbg !16693
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16699
  br i1 %15, label %16, label %6, !dbg !16701, !llvm.loop !16709

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16693
  call void @llvm.dbg.value(metadata i64 %17, metadata !16690, metadata !DIExpression()), !dbg !16693
  %18 = tail call fastcc i32 @elapsed.170() #27, !dbg !16711
  %19 = sext i32 %18 to i64, !dbg !16711
  %20 = sub nsw i64 %17, %19, !dbg !16712
  br label %21, !dbg !16713

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16693
  ret i64 %22, !dbg !16714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.182(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16715 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16719, metadata !DIExpression()), !dbg !16720
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16721
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.179(%struct._dnode* noundef %2) #27, !dbg !16722
  %4 = xor i1 %3, true, !dbg !16723
  ret i1 %4, !dbg !16724
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16725 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16727, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata i64 0, metadata !16728, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata i32 0, metadata !16729, metadata !DIExpression()), !dbg !16733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16734
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16736, !srcloc !16383
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16736
  call void @llvm.dbg.value(metadata i32 %3, metadata !16380, metadata !DIExpression()) #25, !dbg !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16738
  call void @llvm.dbg.value(metadata i32 %3, metadata !16374, metadata !DIExpression()) #25, !dbg !16734
  call void @llvm.dbg.value(metadata i32 %3, metadata !16731, metadata !DIExpression()), !dbg !16733
  call void @llvm.dbg.value(metadata i64 0, metadata !16728, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()), !dbg !16733
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16739
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16742
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16732
  call void @llvm.dbg.value(metadata i32 %3, metadata !16436, metadata !DIExpression()) #25, !dbg !16743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16743
  call void @llvm.dbg.value(metadata i32 %3, metadata !16444, metadata !DIExpression()) #25, !dbg !16745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16747, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16729, metadata !DIExpression()), !dbg !16733
  %6 = add i64 %5, %4, !dbg !16748
  ret i64 %6, !dbg !16749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16750 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16752, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata i32 0, metadata !16753, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16758
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16760, !srcloc !16383
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16760
  call void @llvm.dbg.value(metadata i32 %2, metadata !16380, metadata !DIExpression()) #25, !dbg !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16762
  call void @llvm.dbg.value(metadata i32 %2, metadata !16374, metadata !DIExpression()) #25, !dbg !16758
  call void @llvm.dbg.value(metadata i32 %2, metadata !16755, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.value(metadata i32 -1, metadata !16752, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()), !dbg !16757
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %3, metadata !16752, metadata !DIExpression()), !dbg !16756
  call void @llvm.dbg.value(metadata i32 %2, metadata !16436, metadata !DIExpression()) #25, !dbg !16766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16766
  call void @llvm.dbg.value(metadata i32 %2, metadata !16444, metadata !DIExpression()) #25, !dbg !16768
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16770, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16753, metadata !DIExpression()), !dbg !16757
  ret i32 %3, !dbg !16771
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16774, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i1 %1, metadata !16775, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16784
  call void @llvm.dbg.value(metadata i32 0, metadata !16776, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16786
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16788, !srcloc !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16790
  call void @llvm.dbg.value(metadata i32 undef, metadata !16374, metadata !DIExpression()) #25, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16778, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()), !dbg !16785
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !16791
  call void @llvm.dbg.value(metadata i32 %4, metadata !16779, metadata !DIExpression()), !dbg !16792
  call void @llvm.dbg.value(metadata i1 undef, metadata !16782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16792
  %5 = icmp slt i32 %4, 2, !dbg !16793
  call void @llvm.dbg.value(metadata i1 %5, metadata !16783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16792
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16794
  call void @llvm.dbg.value(metadata i1 %6, metadata !16782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16792
  br i1 %7, label %11, label %8, !dbg !16794

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16796
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16796
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16798
  br label %11, !dbg !16799

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %12, metadata !16380, metadata !DIExpression()) #25, !dbg !16790
  call void @llvm.dbg.value(metadata i32 %12, metadata !16374, metadata !DIExpression()) #25, !dbg !16786
  call void @llvm.dbg.value(metadata i32 %12, metadata !16778, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16800
  call void @llvm.dbg.value(metadata i32 undef, metadata !16444, metadata !DIExpression()) #25, !dbg !16802
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16804, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 1, metadata !16776, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()), !dbg !16785
  ret void, !dbg !16805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16810, metadata !DIExpression()), !dbg !16815
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16817
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16819, !srcloc !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16821
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16821
  call void @llvm.dbg.value(metadata i32 undef, metadata !16374, metadata !DIExpression()) #25, !dbg !16817
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16815
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16815
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16815
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !16822
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16823
  br i1 %4, label %28, label %5, !dbg !16824

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16825
  %10 = load i64, i64* %9, align 8, !dbg !16825
  %11 = sext i32 %8 to i64, !dbg !16826
  %12 = icmp sgt i64 %10, %11, !dbg !16827
  br i1 %12, label %26, label %13, !dbg !16828

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16815
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16812, metadata !DIExpression()), !dbg !16829
  %15 = trunc i64 %10 to i32, !dbg !16830
  call void @llvm.dbg.value(metadata i32 %15, metadata !16814, metadata !DIExpression()), !dbg !16829
  %16 = sext i32 %15 to i64, !dbg !16831
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16832
  %18 = add i64 %17, %16, !dbg !16832
  store i64 %18, i64* @curr_tick, align 8, !dbg !16832
  store i64 0, i64* %9, align 8, !dbg !16833
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !16834
  call void @llvm.dbg.value(metadata i32 %14, metadata !16436, metadata !DIExpression()) #25, !dbg !16835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16835
  call void @llvm.dbg.value(metadata i32 %14, metadata !16444, metadata !DIExpression()) #25, !dbg !16837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16839, !srcloc !16450
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16840
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16840
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16842
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16844, !srcloc !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()) #25, !dbg !16846
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16846
  call void @llvm.dbg.value(metadata i32 undef, metadata !16374, metadata !DIExpression()) #25, !dbg !16842
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16815
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16847
  %23 = sub nsw i32 %22, %15, !dbg !16847
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16815
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16815
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !16822
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16823
  br i1 %25, label %28, label %5, !dbg !16824, !llvm.loop !16848

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16850
  store i64 %27, i64* %9, align 8, !dbg !16850
  br label %32, !dbg !16853

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16815
  %31 = sext i32 %30 to i64, !dbg !16854
  br label %32, !dbg !16854

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16854
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16815
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16855
  %37 = add i64 %36, %33, !dbg !16855
  store i64 %37, i64* @curr_tick, align 8, !dbg !16855
  store i32 0, i32* @announce_remaining, align 4, !dbg !16856
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !16857
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !16858
  call void @llvm.dbg.value(metadata i32 %35, metadata !16436, metadata !DIExpression()) #25, !dbg !16859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16859
  call void @llvm.dbg.value(metadata i32 %35, metadata !16444, metadata !DIExpression()) #25, !dbg !16861
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16863, !srcloc !16450
  ret void, !dbg !16864
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16865 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16869, metadata !DIExpression()), !dbg !16873
  call void @llvm.dbg.value(metadata i32 0, metadata !16870, metadata !DIExpression()), !dbg !16874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16368, metadata !DIExpression()) #25, !dbg !16875
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16877, !srcloc !16383
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16877
  call void @llvm.dbg.value(metadata i32 %2, metadata !16380, metadata !DIExpression()) #25, !dbg !16879
  call void @llvm.dbg.value(metadata i32 undef, metadata !16381, metadata !DIExpression()) #25, !dbg !16879
  call void @llvm.dbg.value(metadata i32 %2, metadata !16374, metadata !DIExpression()) #25, !dbg !16875
  call void @llvm.dbg.value(metadata i32 %2, metadata !16872, metadata !DIExpression()), !dbg !16874
  call void @llvm.dbg.value(metadata i64 0, metadata !16869, metadata !DIExpression()), !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()), !dbg !16874
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16880
  %4 = tail call fastcc i32 @elapsed.170() #27, !dbg !16883
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16869, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16873
  call void @llvm.dbg.value(metadata i32 %2, metadata !16436, metadata !DIExpression()) #25, !dbg !16884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16441, metadata !DIExpression()) #25, !dbg !16884
  call void @llvm.dbg.value(metadata i32 %2, metadata !16444, metadata !DIExpression()) #25, !dbg !16886
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16888, !srcloc !16450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()), !dbg !16874
  %5 = sext i32 %4 to i64, !dbg !16883
  %6 = add i64 %3, %5, !dbg !16889
  ret i64 %6, !dbg !16890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16891 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16892
  %2 = trunc i64 %1 to i32, !dbg !16893
  ret i32 %2, !dbg !16894
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16895 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16896
  ret i64 %1, !dbg !16897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16900, metadata !DIExpression()), !dbg !16907
  %2 = icmp eq i32 %0, 0, !dbg !16908
  br i1 %2, label %10, label %3, !dbg !16910

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %4, metadata !16901, metadata !DIExpression()), !dbg !16907
  %5 = shl i32 %0, 5, !dbg !16912
  call void @llvm.dbg.value(metadata i32 %5, metadata !16902, metadata !DIExpression()), !dbg !16907
  br label %6, !dbg !16913

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16914
  call void @llvm.dbg.value(metadata i32 %7, metadata !16903, metadata !DIExpression()), !dbg !16915
  %8 = sub i32 %7, %4, !dbg !16916
  %9 = icmp ult i32 %8, %5, !dbg !16918
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16920 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !16921
  ret i32 %1, !dbg !16922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16923 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16925
  ret i32 %1, !dbg !16926
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16927 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16931, metadata !DIExpression()), !dbg !16933
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16934

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !16935
  br label %14, !dbg !16939

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16932, metadata !DIExpression()), !dbg !16933
  %6 = icmp slt i64 %2, -1, !dbg !16940
  br i1 %6, label %7, label %9, !dbg !16943

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16944
  br label %14, !dbg !16945

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !16947
  %11 = icmp ugt i64 %2, 1, !dbg !16948
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16948
  %13 = add nsw i64 %10, %12, !dbg !16949
  br label %14, !dbg !16950

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16951
  ret i64 %15, !dbg !16952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !16953 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16956, metadata !DIExpression()), !dbg !16989
  %2 = icmp eq i8* %0, null, !dbg !16990
  br i1 %2, label %7, label %3, !dbg !16992

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !16957, metadata !DIExpression()), !dbg !16989
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !16993
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !16993
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !16957, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata i8* %4, metadata !16956, metadata !DIExpression()), !dbg !16989
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !16995
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !16996
  br label %7, !dbg !16997

7:                                                ; preds = %3, %1
  ret void, !dbg !16998
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17003, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata i32 %1, metadata !17004, metadata !DIExpression()), !dbg !17007
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !17008
  br i1 %3, label %11, label %4, !dbg !17010

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17011
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17013
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17013
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17006, metadata !DIExpression()), !dbg !17007
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17014
  br i1 %8, label %11, label %9, !dbg !17016

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !17017
  call void @llvm.dbg.value(metadata i8* %10, metadata !17005, metadata !DIExpression()), !dbg !17007
  br label %11, !dbg !17019

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !17020
  call void @llvm.dbg.value(metadata i8* %12, metadata !17005, metadata !DIExpression()), !dbg !17007
  ret i8* %12, !dbg !17021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17022 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17026, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i32 %1, metadata !17027, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i32 %2, metadata !17028, metadata !DIExpression()), !dbg !17032
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17028, metadata !DIExpression(DW_OP_deref)), !dbg !17032
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !17033
  br i1 %5, label %14, label %6, !dbg !17035

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %7, metadata !17031, metadata !DIExpression()), !dbg !17032
  %8 = load i32, i32* %4, align 4, !dbg !17037
  call void @llvm.dbg.value(metadata i32 %8, metadata !17028, metadata !DIExpression()), !dbg !17032
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !17038
  call void @llvm.dbg.value(metadata i8* %9, metadata !17029, metadata !DIExpression()), !dbg !17032
  %10 = icmp eq i8* %9, null, !dbg !17039
  br i1 %10, label %14, label %11, !dbg !17041

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17042
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17030, metadata !DIExpression()), !dbg !17032
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17043
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17044
  call void @llvm.dbg.value(metadata i8* %13, metadata !17030, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i8* %13, metadata !17029, metadata !DIExpression()), !dbg !17032
  br label %14, !dbg !17045

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !17032
  ret i8* %15, !dbg !17046
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17052, metadata !DIExpression()), !dbg !17055
  call void @llvm.dbg.value(metadata i32 4, metadata !17053, metadata !DIExpression()), !dbg !17055
  call void @llvm.dbg.value(metadata i32* %1, metadata !17054, metadata !DIExpression()), !dbg !17055
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17056
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17056
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17056
  store i32 %5, i32* %1, align 4, !dbg !17056
  ret i1 %4, !dbg !17057
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17058 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.195, i32 0, i32 0)) #26, !dbg !17060
  ret void, !dbg !17061
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17064, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17065, metadata !DIExpression()), !dbg !17085
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17086

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17087

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17065, metadata !DIExpression()), !dbg !17085
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17088
  %6 = load i8*, i8** %5, align 4, !dbg !17088
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17092
  %8 = load i32, i32* %7, align 4, !dbg !17092
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17093
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17094
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17065, metadata !DIExpression()), !dbg !17085
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17095
  br i1 %10, label %3, label %2, !dbg !17086, !llvm.loop !17097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17099 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17103, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.value(metadata i8* %1, metadata !17104, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.value(metadata i32 %2, metadata !17105, metadata !DIExpression()), !dbg !17106
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17107
  tail call fastcc void @z_waitq_init.197(%union.anon* noundef nonnull %4) #27, !dbg !17108
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17109
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17110
  ret void, !dbg !17111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.197(%union.anon* noundef %0) unnamed_addr #4 !dbg !17112 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17117, metadata !DIExpression()), !dbg !17118
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17119
  tail call fastcc void @sys_dlist_init.198(%struct._dnode* noundef %2) #27, !dbg !17120
  ret void, !dbg !17121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.198(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17122 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17127, metadata !DIExpression()), !dbg !17128
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17129
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17130
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17131
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17132
  ret void, !dbg !17133
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17134 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17145, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17142, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 %1, metadata !17143, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 %2, metadata !17144, metadata !DIExpression()), !dbg !17155
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17156
  call void @llvm.dbg.value(metadata i64 %6, metadata !17147, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i8* null, metadata !17148, metadata !DIExpression()), !dbg !17155
  %7 = icmp eq i64 %5, -1, !dbg !17157
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17157
  call void @llvm.dbg.value(metadata i64 %8, metadata !17147, metadata !DIExpression()), !dbg !17155
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17159, metadata !DIExpression()) #25, !dbg !17166
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17168, !srcloc !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()) #25, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()) #25, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17166
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i8 0, metadata !17154, metadata !DIExpression()), !dbg !17155
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17148, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i8 0, metadata !17154, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17155
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17176
  call void @llvm.dbg.value(metadata i8* %12, metadata !17148, metadata !DIExpression()), !dbg !17155
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17178
  call void @llvm.dbg.value(metadata i64 %13, metadata !17146, metadata !DIExpression()), !dbg !17155
  %14 = icmp eq i8* %12, null, !dbg !17179
  br i1 %14, label %15, label %31, !dbg !17181

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17155
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17181

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17154, metadata !DIExpression()), !dbg !17155
  %20 = sub nsw i64 %8, %18, !dbg !17182
  %21 = icmp slt i64 %20, 1, !dbg !17183
  br i1 %21, label %31, label %22, !dbg !17184

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17155
  call void @llvm.dbg.value(metadata i8 undef, metadata !17154, metadata !DIExpression()), !dbg !17155
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17185
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17185
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17159, metadata !DIExpression()) #25, !dbg !17186
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17188, !srcloc !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17171, metadata !DIExpression()) #25, !dbg !17190
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()) #25, !dbg !17190
  call void @llvm.dbg.value(metadata i32 undef, metadata !17165, metadata !DIExpression()) #25, !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i8* null, metadata !17148, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17155
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17176
  call void @llvm.dbg.value(metadata i8* %28, metadata !17148, metadata !DIExpression()), !dbg !17155
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17178
  call void @llvm.dbg.value(metadata i64 %29, metadata !17146, metadata !DIExpression()), !dbg !17155
  %30 = icmp eq i8* %28, null, !dbg !17179
  br i1 %30, label %17, label %31, !dbg !17181, !llvm.loop !17191

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17176
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17155
  call void @llvm.dbg.value(metadata i8* %33, metadata !17148, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.value(metadata i32 %34, metadata !17194, metadata !DIExpression()) #25, !dbg !17200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17199, metadata !DIExpression()) #25, !dbg !17200
  call void @llvm.dbg.value(metadata i32 %34, metadata !17202, metadata !DIExpression()) #25, !dbg !17205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17207, !srcloc !17208
  ret i8* %33, !dbg !17209
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17210 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17216, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17214, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata i32 %1, metadata !17215, metadata !DIExpression()), !dbg !17218
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17219
  call void @llvm.dbg.value(metadata i8* %4, metadata !17217, metadata !DIExpression()), !dbg !17218
  ret i8* %4, !dbg !17220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17221 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17225, metadata !DIExpression()), !dbg !17228
  call void @llvm.dbg.value(metadata i8* %1, metadata !17226, metadata !DIExpression()), !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17159, metadata !DIExpression()) #25, !dbg !17229
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17231, !srcloc !17174
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17231
  call void @llvm.dbg.value(metadata i32 %4, metadata !17171, metadata !DIExpression()) #25, !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !17172, metadata !DIExpression()) #25, !dbg !17233
  call void @llvm.dbg.value(metadata i32 %4, metadata !17165, metadata !DIExpression()) #25, !dbg !17229
  call void @llvm.dbg.value(metadata i32 %4, metadata !17227, metadata !DIExpression()), !dbg !17228
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17234
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17235
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17236
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17238
  %8 = icmp eq i32 %7, 0, !dbg !17239
  br i1 %8, label %12, label %9, !dbg !17240

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17241
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17242
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17242
  br label %13, !dbg !17244

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17194, metadata !DIExpression()) #25, !dbg !17245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17199, metadata !DIExpression()) #25, !dbg !17245
  call void @llvm.dbg.value(metadata i32 %4, metadata !17202, metadata !DIExpression()) #25, !dbg !17248
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17250, !srcloc !17208
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17251
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!855, !2, !2543, !2545, !27, !2547, !2549, !2582, !2619, !111, !181, !210, !2621, !2632, !2678, !2680, !2708, !2736, !2779, !2850, !2895, !380, !523, !2923, !559, !569, !594, !702, !885, !2928, !1003, !1183, !1452, !1735, !2949, !1848, !1935, !2951, !3022, !3071, !1969, !3074, !1975, !2336, !3092, !3094, !2358, !3135, !2473, !3138, !3140, !2512}
!llvm.ident = !{!3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142, !3142}
!llvm.module.flags = !{!3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !111, file: !142, line: 60, type: !143, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !141, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!113 = !{!114, !135}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !117, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !117, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !117, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !117, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !117, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !117, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !117, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !137, file: !116, line: 362, baseType: !120, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !137, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!141 = !{!109}
!142 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !178}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !144, file: !145, line: 60, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DISubroutineType(types: !150)
!150 = !{!103, !151}
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !155)
!154 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !{!156, !160, !161, !162, !171, !172}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !153, file: !154, line: 380, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !153, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !153, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !153, file: !154, line: 386, baseType: !163, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !165)
!165 = !{!166, !169}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !164, file: !154, line: 359, baseType: !167, size: 8)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !164, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!170 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !153, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !153, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !154, line: 43, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !177)
!177 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !144, file: !145, line: 65, baseType: !151, size: 32, offset: 32)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !181, file: !184, line: 71, type: !185, isLocal: true, isDefinition: true, align: 32)
!181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !183, splitDebugInlining: false, nameTableKind: None)
!182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!183 = !{!179}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !187)
!187 = !{!188, !207}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !145, line: 60, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!190 = !DISubroutineType(types: !191)
!191 = !{!103, !192}
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !195)
!195 = !{!196, !197, !198, !199, !205, !206}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !194, file: !154, line: 380, baseType: !157, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !194, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !194, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !194, file: !154, line: 386, baseType: !200, size: 32, offset: 96)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !201, file: !154, line: 359, baseType: !167, size: 8)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !201, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !194, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !194, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !145, line: 65, baseType: !192, size: 32, offset: 32)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "free_queue", scope: !210, file: !307, line: 17, type: !308, isLocal: true, isDefinition: true, align: 32)
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !212, globals: !304, splitDebugInlining: false, nameTableKind: None)
!211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!212 = !{!102, !213, !217, !103, !219}
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !214, line: 46, baseType: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !216)
!216 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 214, baseType: !32)
!218 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !222, line: 336, size: 608, elements: !223)
!222 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{!224, !244, !248, !252, !265, !270, !276, !282, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !221, file: !222, line: 365, baseType: !225, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!226 = !DISubroutineType(types: !227)
!227 = !{!103, !228, !243}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !231)
!231 = !{!232, !233, !234, !235, !241, !242}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !230, file: !154, line: 380, baseType: !157, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !230, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !230, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !230, file: !154, line: 386, baseType: !236, size: 32, offset: 96)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !238)
!238 = !{!239, !240}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !237, file: !154, line: 359, baseType: !167, size: 8)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !237, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !230, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !221, file: !222, line: 366, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DISubroutineType(types: !247)
!247 = !{null, !228, !168}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !221, file: !222, line: 374, baseType: !249, size: 32, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!250 = !DISubroutineType(types: !251)
!251 = !{!103, !228}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !221, file: !222, line: 377, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !228, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !222, line: 122, size: 64, elements: !259)
!259 = !{!260, !261, !262, !263, !264}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !258, file: !222, line: 123, baseType: !121, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !258, file: !222, line: 124, baseType: !167, size: 8, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !258, file: !222, line: 125, baseType: !167, size: 8, offset: 40)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !258, file: !222, line: 126, baseType: !167, size: 8, offset: 48)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !258, file: !222, line: 127, baseType: !167, size: 8, offset: 56)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !221, file: !222, line: 379, baseType: !266, size: 32, offset: 128)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 32)
!267 = !DISubroutineType(types: !268)
!268 = !{!103, !228, !269}
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !221, file: !222, line: 384, baseType: !271, size: 32, offset: 160)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DISubroutineType(types: !273)
!273 = !{!103, !228, !274, !103}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !221, file: !222, line: 393, baseType: !277, size: 32, offset: 192)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DISubroutineType(types: !279)
!279 = !{!103, !228, !280, !281}
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !221, file: !222, line: 402, baseType: !283, size: 32, offset: 224)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{null, !228}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !221, file: !222, line: 405, baseType: !283, size: 32, offset: 256)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !221, file: !222, line: 408, baseType: !249, size: 32, offset: 288)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !221, file: !222, line: 411, baseType: !283, size: 32, offset: 320)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !221, file: !222, line: 414, baseType: !283, size: 32, offset: 352)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !221, file: !222, line: 417, baseType: !249, size: 32, offset: 384)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !221, file: !222, line: 420, baseType: !249, size: 32, offset: 416)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !221, file: !222, line: 423, baseType: !283, size: 32, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !221, file: !222, line: 426, baseType: !283, size: 32, offset: 480)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !221, file: !222, line: 429, baseType: !249, size: 32, offset: 512)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !221, file: !222, line: 432, baseType: !249, size: 32, offset: 544)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !221, file: !222, line: 435, baseType: !297, size: 32, offset: 576)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !228, !300, !102}
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !222, line: 142, baseType: !301)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!302 = !DISubroutineType(types: !303)
!303 = !{null, !228, !102}
!304 = !{!208, !305, !352, !373}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "used_queue", scope: !210, file: !307, line: 18, type: !308, isLocal: true, isDefinition: true, align: 32)
!307 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !309, line: 2208, size: 128, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !308, file: !309, line: 2209, baseType: !312, size: 128)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !309, line: 1709, size: 128, elements: !313)
!313 = !{!314, !327, !331}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !312, file: !309, line: 1710, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !316, line: 46, baseType: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !316, line: 41, size: 64, elements: !318)
!318 = !{!319, !326}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !317, file: !316, line: 42, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !316, line: 39, baseType: !322)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !316, line: 35, size: 32, elements: !323)
!323 = !{!324}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !322, file: !316, line: 36, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !316, line: 32, baseType: !121)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !317, file: !316, line: 43, baseType: !320, size: 32, offset: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !312, file: !309, line: 1711, baseType: !328, offset: 64)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!329 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!330 = !{}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !312, file: !309, line: 1712, baseType: !332, size: 64, offset: 64)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !334)
!333 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !335)
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !334, file: !333, line: 232, baseType: !337, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !339)
!338 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !340)
!340 = !{!341, !347}
!341 = !DIDerivedType(tag: DW_TAG_member, scope: !339, file: !338, line: 38, baseType: !342, size: 32)
!342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !339, file: !338, line: 38, size: 32, elements: !343)
!343 = !{!344, !346}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !342, file: !338, line: 39, baseType: !345, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !342, file: !338, line: 40, baseType: !345, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, scope: !339, file: !338, line: 42, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !339, file: !338, line: 42, size: 32, elements: !349)
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !348, file: !338, line: 43, baseType: !345, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !348, file: !338, line: 44, baseType: !345, size: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "cmd", scope: !354, file: !307, line: 22, type: !361, isLocal: true, isDefinition: true)
!354 = distinct !DISubprogram(name: "console_getline", scope: !307, file: !307, line: 20, type: !355, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !358)
!355 = !DISubroutineType(types: !356)
!356 = !{!357}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!358 = !{!359}
!359 = !DILocalVariable(name: "ret", scope: !360, file: !307, line: 29, type: !102)
!360 = distinct !DILexicalBlock(scope: !354, file: !307, line: 29, column: 8)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !363, line: 21, size: 1088, elements: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !{!365, !368, !369}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !362, file: !363, line: 23, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !367)
!367 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !362, file: !363, line: 25, baseType: !167, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !362, file: !363, line: 27, baseType: !370, size: 1024, offset: 40)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1024, elements: !371)
!371 = !{!372}
!372 = !DISubrange(count: 128)
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "line_bufs", scope: !210, file: !307, line: 15, type: !375, isLocal: true, isDefinition: true)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !362, size: 2176, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 2)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "static_regions", scope: !380, file: !387, line: 62, type: !519, isLocal: true, isDefinition: true)
!380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !382, globals: !383, splitDebugInlining: false, nameTableKind: None)
!381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!382 = !{!217, !103, !121, !102}
!383 = !{!384, !378}
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !386, file: !387, line: 198, type: !505, isLocal: true, isDefinition: true)
!386 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !387, file: !387, line: 175, type: !388, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !380, retainedNodes: !500)
!387 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = !DISubroutineType(types: !389)
!389 = !{null, !390}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394, !457, !470, !471, !472, !473, !479, !495}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !391, file: !392, line: 247, baseType: !395, size: 384)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !396)
!396 = !{!397, !422, !429, !430, !431, !444, !445, !446}
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !395, file: !392, line: 60, baseType: !398, size: 64)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !395, file: !392, line: 60, size: 64, elements: !399)
!399 = !{!400, !415}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !398, file: !392, line: 61, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !403)
!403 = !{!404, !410}
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !402, file: !338, line: 38, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !402, file: !338, line: 38, size: 32, elements: !406)
!406 = !{!407, !409}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !405, file: !338, line: 39, baseType: !408, size: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !405, file: !338, line: 40, baseType: !408, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !402, file: !338, line: 42, baseType: !411, size: 32, offset: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !402, file: !338, line: 42, size: 32, elements: !412)
!412 = !{!413, !414}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !411, file: !338, line: 43, baseType: !408, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !411, file: !338, line: 44, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !398, file: !392, line: 62, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !418)
!417 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = !{!419}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !416, file: !417, line: 50, baseType: !420, size: 64)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 64, elements: !376)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !395, file: !392, line: 68, baseType: !423, size: 32, offset: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !425)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !426)
!426 = !{!427}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !425, file: !333, line: 232, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !402)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !395, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !395, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!431 = !DIDerivedType(tag: DW_TAG_member, scope: !395, file: !392, line: 90, baseType: !432, size: 16, offset: 112)
!432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !395, file: !392, line: 90, size: 16, elements: !433)
!433 = !{!434, !441}
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !392, line: 91, baseType: !435, size: 16)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !432, file: !392, line: 91, size: 16, elements: !436)
!436 = !{!437, !440}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !435, file: !392, line: 96, baseType: !438, size: 8)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !439)
!439 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !435, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !432, file: !392, line: 100, baseType: !442, size: 16)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !443)
!443 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !395, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !395, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !395, file: !392, line: 131, baseType: !447, size: 192, offset: 192)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !448)
!448 = !{!449, !450, !456}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !447, file: !333, line: 245, baseType: !401, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !447, file: !333, line: 246, baseType: !451, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 32)
!453 = !DISubroutineType(types: !454)
!454 = !{null, !455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !447, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !391, file: !392, line: 250, baseType: !458, size: 288, offset: 384)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !460)
!459 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !458, file: !459, line: 26, baseType: !121, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !458, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !458, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !458, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !458, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !458, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !458, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !458, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !458, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !391, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !391, file: !392, line: 256, baseType: !424, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !391, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !391, file: !392, line: 300, baseType: !474, size: 96, offset: 800)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !475)
!475 = !{!476, !477, !478}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !474, file: !392, line: 153, baseType: !22, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !474, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !474, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !391, file: !392, line: 325, baseType: !480, size: 32, offset: 896)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !482)
!482 = !{!483, !492, !493}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !481, file: !309, line: 5074, baseType: !484, size: 96)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !486)
!485 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!486 = !{!487, !490, !491}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !484, file: !485, line: 57, baseType: !488, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 32)
!489 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !485, line: 57, flags: DIFlagFwdDecl)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !484, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !484, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !481, file: !309, line: 5075, baseType: !424, size: 64, offset: 96)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !481, file: !309, line: 5076, baseType: !494, offset: 160)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !391, file: !392, line: 343, baseType: !496, size: 64, offset: 928)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !459, line: 63, baseType: !121, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !386, file: !387, line: 175, type: !390)
!502 = !DILocalVariable(name: "region_num", scope: !386, file: !387, line: 200, type: !167)
!503 = !DILocalVariable(name: "guard_start", scope: !386, file: !387, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !386, file: !387, line: 266, type: !217)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !217, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !121, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !517)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !523, file: !556, line: 39, type: !167, isLocal: true, isDefinition: true)
!523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !525, globals: !555, splitDebugInlining: false, nameTableKind: None)
!524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!525 = !{!526, !102, !103, !543, !167}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !528, line: 1168, baseType: !529)
!528 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 1155, size: 352, elements: !530)
!530 = !{!531, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !529, file: !528, line: 1157, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !529, file: !528, line: 1158, baseType: !120, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !529, file: !528, line: 1159, baseType: !120, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !529, file: !528, line: 1160, baseType: !120, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !529, file: !528, line: 1161, baseType: !120, size: 32, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !529, file: !528, line: 1162, baseType: !120, size: 32, offset: 160)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !529, file: !528, line: 1163, baseType: !120, size: 32, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !529, file: !528, line: 1164, baseType: !120, size: 32, offset: 224)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !529, file: !528, line: 1165, baseType: !120, size: 32, offset: 256)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !529, file: !528, line: 1166, baseType: !120, size: 32, offset: 288)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !529, file: !528, line: 1167, baseType: !120, size: 32, offset: 320)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !546, line: 27, size: 96, elements: !547)
!546 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!547 = !{!548, !549, !550}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !545, file: !546, line: 29, baseType: !121, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !545, file: !546, line: 31, baseType: !157, size: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !545, file: !546, line: 37, baseType: !551, size: 32, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !553)
!553 = !{!554}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !552, file: !513, line: 143, baseType: !121, size: 32)
!555 = !{!521}
!556 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !559, file: !566, line: 21, type: !106, isLocal: true, isDefinition: true)
!559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !561, globals: !565, splitDebugInlining: false, nameTableKind: None)
!560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!561 = !{!562, !103, !102}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !564, line: 22, baseType: !103)
!564 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!565 = !{!557}
!566 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = !DIGlobalVariableExpression(var: !568, expr: !DIExpression())
!568 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !569, file: !574, line: 13, type: !591, isLocal: true, isDefinition: true)
!569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !571, splitDebugInlining: false, nameTableKind: None)
!570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!571 = !{!572, !567}
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_config", scope: !569, file: !574, line: 37, type: !575, isLocal: false, isDefinition: true)
!574 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !576)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !546, line: 41, size: 64, elements: !577)
!577 = !{!578, !579}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !576, file: !546, line: 43, baseType: !121, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !576, file: !546, line: 45, baseType: !580, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !546, line: 27, size: 96, elements: !583)
!583 = !{!584, !585, !586}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !582, file: !546, line: 29, baseType: !121, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !582, file: !546, line: 31, baseType: !157, size: 32, offset: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !582, file: !546, line: 37, baseType: !587, size: 32, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !589)
!589 = !{!590}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !588, file: !513, line: 143, baseType: !121, size: 32)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 192, elements: !376)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !594, file: !691, line: 36, type: !692, isLocal: true, isDefinition: true, align: 32)
!594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !595, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !596, retainedTypes: !608, globals: !690, splitDebugInlining: false, nameTableKind: None)
!595 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!596 = !{!597, !603}
!597 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !598, line: 506, baseType: !32, size: 32, elements: !599)
!598 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!599 = !{!600, !601, !602}
!600 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!601 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!602 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!603 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !598, line: 512, baseType: !32, size: 32, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!606 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!607 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!608 = !{!609, !679, !684, !644, !603, !597, !689, !102}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !598, line: 523, size: 288, elements: !612)
!612 = !{!613, !634, !640, !645, !649, !650, !651, !655, !675}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !611, file: !598, line: 524, baseType: !614, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = !DISubroutineType(types: !616)
!616 = !{!103, !617, !632, !633}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !620)
!620 = !{!621, !622, !623, !624, !630, !631}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !619, file: !154, line: 380, baseType: !157, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !619, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !619, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !619, file: !154, line: 386, baseType: !625, size: 32, offset: 96)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !627)
!627 = !{!628, !629}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !626, file: !154, line: 359, baseType: !167, size: 8)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !626, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !619, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !619, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !598, line: 237, baseType: !167)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !598, line: 257, baseType: !121)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !611, file: !598, line: 530, baseType: !635, size: 32, offset: 32)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!636 = !DISubroutineType(types: !637)
!637 = !{!103, !617, !638}
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !598, line: 229, baseType: !121)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !611, file: !598, line: 532, baseType: !641, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{!103, !617, !644, !639}
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !598, line: 216, baseType: !121)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !611, file: !598, line: 535, baseType: !646, size: 32, offset: 96)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DISubroutineType(types: !648)
!648 = !{!103, !617, !644}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !611, file: !598, line: 537, baseType: !646, size: 32, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !611, file: !598, line: 539, baseType: !646, size: 32, offset: 160)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !611, file: !598, line: 541, baseType: !652, size: 32, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DISubroutineType(types: !654)
!654 = !{!103, !617, !632, !597, !603}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !611, file: !598, line: 544, baseType: !656, size: 32, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 32)
!657 = !DISubroutineType(types: !658)
!658 = !{!103, !617, !659, !170}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !598, line: 478, size: 96, elements: !661)
!661 = !{!662, !669, !674}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !660, file: !598, line: 482, baseType: !663, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !664, line: 33, baseType: !665)
!664 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !664, line: 29, size: 32, elements: !666)
!666 = !{!667}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !665, file: !664, line: 30, baseType: !668, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !660, file: !598, line: 485, baseType: !670, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !598, line: 464, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DISubroutineType(types: !673)
!673 = !{null, !617, !659, !644}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !660, file: !598, line: 493, baseType: !644, size: 32, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !611, file: !598, line: 547, baseType: !676, size: 32, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DISubroutineType(types: !678)
!678 = !{!121, !617}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !598, line: 428, size: 32, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !681, file: !598, line: 434, baseType: !644, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !686)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !598, line: 441, size: 32, elements: !687)
!687 = !{!688}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !686, file: !598, line: 447, baseType: !644, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 32)
!690 = !{!592}
!691 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !694)
!694 = !{!695, !699}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !693, file: !145, line: 60, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DISubroutineType(types: !698)
!698 = !{!103, !617}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !693, file: !145, line: 65, baseType: !617, size: 32, offset: 32)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !702, file: !774, line: 48, type: !850, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !704, retainedTypes: !760, globals: !771, splitDebugInlining: false, nameTableKind: None)
!703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!704 = !{!30, !705}
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 69, baseType: !103, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759}
!707 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!708 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!709 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!710 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!711 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!712 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!713 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!714 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!715 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!716 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!717 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!718 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!719 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!720 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!721 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!722 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!723 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!724 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!725 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!726 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!727 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!728 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!729 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!730 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!731 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!732 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!733 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!734 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!735 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!736 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!737 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!738 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!739 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!740 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!741 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!742 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!743 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!744 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!745 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!746 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!747 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!748 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!749 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!750 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!751 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!752 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!753 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!754 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!755 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!756 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!757 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!758 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!759 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!760 = !{!217, !103, !102, !761}
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 270, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 262, size: 192, elements: !764)
!764 = !{!765, !766, !767, !768, !769, !770}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !763, file: !116, line: 264, baseType: !120, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !763, file: !116, line: 265, baseType: !120, size: 32, offset: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !763, file: !116, line: 266, baseType: !120, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !763, file: !116, line: 267, baseType: !120, size: 32, offset: 96)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !763, file: !116, line: 268, baseType: !120, size: 32, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !763, file: !116, line: 269, baseType: !120, size: 32, offset: 160)
!771 = !{!772, !778, !794, !805, !822, !700, !824, !838, !840, !842, !844, !846, !848}
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !702, file: !774, line: 424, type: !775, isLocal: false, isDefinition: true, align: 16)
!774 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !776)
!776 = !{!777}
!777 = !DISubrange(count: 4)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !702, file: !774, line: 424, type: !780, isLocal: false, isDefinition: true, align: 32)
!780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !782)
!782 = !{!783, !784, !785, !786, !792, !793}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !781, file: !154, line: 380, baseType: !157, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !781, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !781, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !781, file: !154, line: 386, baseType: !787, size: 32, offset: 96)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 32)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !789)
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !788, file: !154, line: 359, baseType: !167, size: 8)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !788, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !781, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !781, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !702, file: !774, line: 424, type: !796, isLocal: true, isDefinition: true, align: 32)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !798)
!798 = !{!799, !804}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !797, file: !145, line: 60, baseType: !800, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 32)
!801 = !DISubroutineType(types: !802)
!802 = !{!103, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !797, file: !145, line: 65, baseType: !803, size: 32, offset: 32)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "exti_data", scope: !702, file: !774, line: 423, type: !807, isLocal: true, isDefinition: true)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !774, line: 107, size: 1024, elements: !808)
!808 = !{!809}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !807, file: !774, line: 109, baseType: !810, size: 1024)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 1024, elements: !820)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !774, line: 101, size: 64, elements: !812)
!812 = !{!813, !819}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !811, file: !774, line: 102, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !815, line: 63, baseType: !816)
!815 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{null, !103, !102}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !811, file: !774, line: 103, baseType: !102, size: 32, offset: 32)
!820 = !{!821}
!821 = !DISubrange(count: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !702, file: !774, line: 424, type: !788, isLocal: true, isDefinition: true, align: 8)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !826, file: !774, line: 493, type: !831, isLocal: true, isDefinition: true, align: 32)
!826 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !774, file: !774, line: 460, type: !827, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !829)
!827 = !DISubroutineType(types: !828)
!828 = !{null, !803}
!829 = !{!830}
!830 = !DILocalVariable(name: "dev", arg: 1, scope: !826, file: !774, line: 460, type: !803)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !832)
!832 = !{!833, !835, !836, !837}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !831, file: !10, line: 55, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !831, file: !10, line: 57, baseType: !834, size: 32, offset: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !831, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !831, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !826, file: !774, line: 497, type: !831, isLocal: true, isDefinition: true, align: 32)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !826, file: !774, line: 507, type: !831, isLocal: true, isDefinition: true, align: 32)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !826, file: !774, line: 512, type: !831, isLocal: true, isDefinition: true, align: 32)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !826, file: !774, line: 516, type: !831, isLocal: true, isDefinition: true, align: 32)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !826, file: !774, line: 523, type: !831, isLocal: true, isDefinition: true, align: 32)
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !826, file: !774, line: 527, type: !831, isLocal: true, isDefinition: true, align: 32)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !851, size: 512, elements: !820)
!851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 127, baseType: !705)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !855, file: !860, line: 21, type: !880, isLocal: false, isDefinition: true, align: 16)
!855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !856, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !857, splitDebugInlining: false, nameTableKind: None)
!856 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!857 = !{!858, !853, !864, !866, !868, !870, !872, !874, !876, !878}
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !855, file: !860, line: 16, type: !861, isLocal: false, isDefinition: true, align: 16)
!860 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 176, elements: !862)
!862 = !{!863}
!863 = !DISubrange(count: 11)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !855, file: !860, line: 28, type: !775, isLocal: false, isDefinition: true, align: 16)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !855, file: !860, line: 35, type: !775, isLocal: false, isDefinition: true, align: 16)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !855, file: !860, line: 42, type: !775, isLocal: false, isDefinition: true, align: 16)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !855, file: !860, line: 49, type: !775, isLocal: false, isDefinition: true, align: 16)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !855, file: !860, line: 56, type: !775, isLocal: false, isDefinition: true, align: 16)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !855, file: !860, line: 63, type: !775, isLocal: false, isDefinition: true, align: 16)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !855, file: !860, line: 70, type: !775, isLocal: false, isDefinition: true, align: 16)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !855, file: !860, line: 77, type: !775, isLocal: false, isDefinition: true, align: 16)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 48, elements: !881)
!881 = !{!882}
!882 = !DISubrange(count: 3)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !885, file: !929, line: 398, type: !962, isLocal: true, isDefinition: true)
!885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !887, retainedTypes: !900, globals: !926, splitDebugInlining: false, nameTableKind: None)
!886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!887 = !{!888, !30, !893}
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !889, line: 190, baseType: !32, size: 32, elements: !890)
!889 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!890 = !{!891, !892}
!891 = !DIEnumerator(name: "SUCCESS", value: 0)
!892 = !DIEnumerator(name: "ERROR", value: 1)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !894, line: 44, baseType: !32, size: 32, elements: !895)
!894 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!895 = !{!896, !897, !898, !899}
!896 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!897 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!898 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!899 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!900 = !{!102, !103, !121, !901, !919, !925}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !904)
!904 = !{!905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !903, file: !116, line: 372, baseType: !120, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !903, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !903, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !903, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !903, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !903, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !903, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !903, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !903, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !903, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !903, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !903, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !903, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !903, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !921, line: 343, size: 64, elements: !922)
!921 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!922 = !{!923, !924}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !920, file: !921, line: 344, baseType: !121, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !920, file: !921, line: 345, baseType: !121, size: 32, offset: 32)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!926 = !{!927, !933, !949, !960, !883}
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !885, file: !929, line: 752, type: !930, isLocal: false, isDefinition: true, align: 16)
!929 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 512, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 32)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !885, file: !929, line: 752, type: !935, isLocal: false, isDefinition: true, align: 32)
!935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !937)
!937 = !{!938, !939, !940, !941, !947, !948}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !936, file: !154, line: 380, baseType: !157, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !936, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !936, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !936, file: !154, line: 386, baseType: !942, size: 32, offset: 96)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !943, file: !154, line: 359, baseType: !167, size: 8)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !943, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !936, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !936, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !885, file: !929, line: 752, type: !951, isLocal: true, isDefinition: true, align: 32)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !953)
!953 = !{!954, !959}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !952, file: !145, line: 60, baseType: !955, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!103, !958}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !952, file: !145, line: 65, baseType: !958, size: 32, offset: 32)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !885, file: !929, line: 752, type: !943, isLocal: true, isDefinition: true, align: 8)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !894, line: 100, size: 224, elements: !963)
!963 = !{!964, !970, !971, !980, !985, !990, !996}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !962, file: !894, line: 101, baseType: !965, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !894, line: 76, baseType: !966)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DISubroutineType(types: !968)
!968 = !{!103, !958, !969}
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !894, line: 56, baseType: !102)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !962, file: !894, line: 102, baseType: !965, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !962, file: !894, line: 103, baseType: !972, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !894, line: 83, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!103, !958, !969, !976, !102}
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !894, line: 72, baseType: !977)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !958, !969, !102}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !962, file: !894, line: 104, baseType: !981, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !894, line: 79, baseType: !982)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!103, !958, !969, !925}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !962, file: !894, line: 105, baseType: !986, size: 32, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !894, line: 88, baseType: !987)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DISubroutineType(types: !989)
!989 = !{!893, !958, !969}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !962, file: !894, line: 106, baseType: !991, size: 32, offset: 160)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !894, line: 92, baseType: !992)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DISubroutineType(types: !994)
!994 = !{!103, !958, !969, !995}
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !894, line: 64, baseType: !102)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !962, file: !894, line: 107, baseType: !997, size: 32, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !894, line: 96, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!103, !958, !969, !102}
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "avail_queue", scope: !1003, file: !1007, line: 108, type: !1104, isLocal: true, isDefinition: true)
!1003 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1004, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1005, retainedTypes: !1014, globals: !1094, splitDebugInlining: false, nameTableKind: None)
!1004 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1005 = !{!30, !1006}
!1006 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1007, line: 214, baseType: !32, size: 32, elements: !1008)
!1007 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1008 = !{!1009, !1010, !1011, !1012, !1013}
!1009 = !DIEnumerator(name: "ESC_ESC", value: 0)
!1010 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!1011 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!1012 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!1013 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!1014 = !{!102, !103, !1015, !32, !24}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !222, line: 336, size: 608, elements: !1018)
!1018 = !{!1019, !1038, !1042, !1046, !1059, !1064, !1068, !1072, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1017, file: !222, line: 365, baseType: !1020, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!103, !1023, !243}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1026)
!1026 = !{!1027, !1028, !1029, !1030, !1036, !1037}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1025, file: !154, line: 380, baseType: !157, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1025, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1025, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1025, file: !154, line: 386, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1032, file: !154, line: 359, baseType: !167, size: 8)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1032, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1025, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1025, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1017, file: !222, line: 366, baseType: !1039, size: 32, offset: 32)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{null, !1023, !168}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1017, file: !222, line: 374, baseType: !1043, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!103, !1023}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1017, file: !222, line: 377, baseType: !1047, size: 32, offset: 96)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!103, !1023, !1050}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !222, line: 122, size: 64, elements: !1053)
!1053 = !{!1054, !1055, !1056, !1057, !1058}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1052, file: !222, line: 123, baseType: !121, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1052, file: !222, line: 124, baseType: !167, size: 8, offset: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1052, file: !222, line: 125, baseType: !167, size: 8, offset: 40)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1052, file: !222, line: 126, baseType: !167, size: 8, offset: 48)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1052, file: !222, line: 127, baseType: !167, size: 8, offset: 56)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1017, file: !222, line: 379, baseType: !1060, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!103, !1023, !1063}
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1017, file: !222, line: 384, baseType: !1065, size: 32, offset: 160)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!103, !1023, !274, !103}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1017, file: !222, line: 393, baseType: !1069, size: 32, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!103, !1023, !280, !281}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1017, file: !222, line: 402, baseType: !1073, size: 32, offset: 224)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1023}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1017, file: !222, line: 405, baseType: !1073, size: 32, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1017, file: !222, line: 408, baseType: !1043, size: 32, offset: 288)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1017, file: !222, line: 411, baseType: !1073, size: 32, offset: 320)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1017, file: !222, line: 414, baseType: !1073, size: 32, offset: 352)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1017, file: !222, line: 417, baseType: !1043, size: 32, offset: 384)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1017, file: !222, line: 420, baseType: !1043, size: 32, offset: 416)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1017, file: !222, line: 423, baseType: !1073, size: 32, offset: 448)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1017, file: !222, line: 426, baseType: !1073, size: 32, offset: 480)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1017, file: !222, line: 429, baseType: !1043, size: 32, offset: 512)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1017, file: !222, line: 432, baseType: !1043, size: 32, offset: 544)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1017, file: !222, line: 435, baseType: !1087, size: 32, offset: 576)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{null, !1023, !1090, !102}
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !222, line: 142, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !1023, !102}
!1094 = !{!1095, !1001, !1102, !1142, !1147, !1150, !1169, !1173, !1175, !1177, !1179}
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1003, file: !1007, line: 603, type: !1097, isLocal: true, isDefinition: true, align: 32)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1098, file: !145, line: 60, baseType: !1043, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1098, file: !145, line: 65, baseType: !1023, size: 32, offset: 32)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "lines_queue", scope: !1003, file: !1007, line: 109, type: !1104, isLocal: true, isDefinition: true)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !309, line: 2208, size: 128, elements: !1106)
!1106 = !{!1107}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1105, file: !309, line: 2209, baseType: !1108, size: 128)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !309, line: 1709, size: 128, elements: !1109)
!1109 = !{!1110, !1121, !1123}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1108, file: !309, line: 1710, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !316, line: 46, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !316, line: 41, size: 64, elements: !1113)
!1113 = !{!1114, !1120}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1112, file: !316, line: 42, baseType: !1115, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !316, line: 39, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !316, line: 35, size: 32, elements: !1118)
!1118 = !{!1119}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1117, file: !316, line: 36, baseType: !325, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1112, file: !316, line: 43, baseType: !1115, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1108, file: !309, line: 1711, baseType: !1122, offset: 64)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1108, file: !309, line: 1712, baseType: !1124, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !1125)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !1126)
!1126 = !{!1127}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1125, file: !333, line: 232, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !1130)
!1130 = !{!1131, !1137}
!1131 = !DIDerivedType(tag: DW_TAG_member, scope: !1129, file: !338, line: 38, baseType: !1132, size: 32)
!1132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1129, file: !338, line: 38, size: 32, elements: !1133)
!1133 = !{!1134, !1136}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1132, file: !338, line: 39, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1132, file: !338, line: 40, baseType: !1135, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, scope: !1129, file: !338, line: 42, baseType: !1138, size: 32, offset: 32)
!1138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1129, file: !338, line: 42, size: 32, elements: !1139)
!1139 = !{!1140, !1141}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1138, file: !338, line: 43, baseType: !1135, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1138, file: !338, line: 44, baseType: !1135, size: 32)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "completion_cb", scope: !1003, file: !1007, line: 110, type: !1144, isLocal: true, isDefinition: true)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!167, !357, !167}
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1003, file: !1007, line: 38, type: !1149, isLocal: true, isDefinition: true)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "cmd", scope: !1152, file: !1007, line: 435, type: !1163, isLocal: true, isDefinition: true)
!1152 = distinct !DISubprogram(name: "uart_console_isr", scope: !1007, file: !1007, line: 428, type: !1092, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !1153)
!1153 = !{!1154, !1155, !1156, !1158, !1159}
!1154 = !DILocalVariable(name: "unused", arg: 1, scope: !1152, file: !1007, line: 428, type: !1023)
!1155 = !DILocalVariable(name: "user_data", arg: 2, scope: !1152, file: !1007, line: 428, type: !102)
!1156 = !DILocalVariable(name: "byte", scope: !1157, file: !1007, line: 436, type: !167)
!1157 = distinct !DILexicalBlock(scope: !1152, file: !1007, line: 434, column: 48)
!1158 = !DILocalVariable(name: "rx", scope: !1157, file: !1007, line: 437, type: !103)
!1159 = !DILocalVariable(name: "ret", scope: !1160, file: !1007, line: 461, type: !102)
!1160 = distinct !DILexicalBlock(scope: !1161, file: !1007, line: 461, column: 10)
!1161 = distinct !DILexicalBlock(scope: !1162, file: !1007, line: 460, column: 13)
!1162 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 460, column: 7)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !363, line: 21, size: 1088, elements: !1165)
!1165 = !{!1166, !1167, !1168}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1164, file: !363, line: 23, baseType: !366, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1164, file: !363, line: 25, baseType: !167, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1164, file: !363, line: 27, baseType: !370, size: 1024, offset: 40)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "esc_state", scope: !1003, file: !1007, line: 228, type: !1171, isLocal: true, isDefinition: true)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1172, line: 22, baseType: !367)
!1172 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "ansi_val", scope: !1003, file: !1007, line: 229, type: !32, isLocal: true, isDefinition: true)
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !1003, file: !1007, line: 229, type: !32, isLocal: true, isDefinition: true)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "cur", scope: !1003, file: !1007, line: 230, type: !167, isLocal: true, isDefinition: true)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(name: "end", scope: !1003, file: !1007, line: 230, type: !167, isLocal: true, isDefinition: true)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1183, file: !1333, line: 762, type: !1431, isLocal: true, isDefinition: true)
!1183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1185, retainedTypes: !1192, globals: !1330, splitDebugInlining: false, nameTableKind: None)
!1184 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1185 = !{!30, !597, !603, !1186, !893}
!1186 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !815, line: 43, baseType: !32, size: 32, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1191}
!1188 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1189 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1190 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1191 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1192 = !{!102, !103, !1193, !1257, !1262, !644, !603, !597, !1267, !1268, !121, !1282, !1238, !357, !1290, !1291}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !598, line: 523, size: 288, elements: !1196)
!1196 = !{!1197, !1216, !1220, !1224, !1228, !1229, !1230, !1234, !1253}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1195, file: !598, line: 524, baseType: !1198, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!103, !1201, !632, !633}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208, !1214, !1215}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1203, file: !154, line: 380, baseType: !157, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1203, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1203, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1203, file: !154, line: 386, baseType: !1209, size: 32, offset: 96)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1211)
!1211 = !{!1212, !1213}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1210, file: !154, line: 359, baseType: !167, size: 8)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1210, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1203, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1203, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1195, file: !598, line: 530, baseType: !1217, size: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!103, !1201, !638}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1195, file: !598, line: 532, baseType: !1221, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!103, !1201, !644, !639}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1195, file: !598, line: 535, baseType: !1225, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!103, !1201, !644}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1195, file: !598, line: 537, baseType: !1225, size: 32, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1195, file: !598, line: 539, baseType: !1225, size: 32, offset: 160)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1195, file: !598, line: 541, baseType: !1231, size: 32, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!103, !1201, !632, !597, !603}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1195, file: !598, line: 544, baseType: !1235, size: 32, offset: 224)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!103, !1201, !1238, !170}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !598, line: 478, size: 96, elements: !1240)
!1240 = !{!1241, !1247, !1252}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1239, file: !598, line: 482, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !664, line: 33, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !664, line: 29, size: 32, elements: !1244)
!1244 = !{!1245}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1243, file: !664, line: 30, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1239, file: !598, line: 485, baseType: !1248, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !598, line: 464, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{null, !1201, !1238, !644}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1239, file: !598, line: 493, baseType: !644, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1195, file: !598, line: 547, baseType: !1254, size: 32, offset: 256)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!121, !1201}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !598, line: 428, size: 32, elements: !1260)
!1260 = !{!1261}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1259, file: !598, line: 434, baseType: !644, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !598, line: 441, size: 32, elements: !1265)
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1264, file: !598, line: 447, baseType: !644, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1270, file: !116, line: 305, baseType: !120, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1270, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1270, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1270, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1270, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1270, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1270, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1270, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1270, file: !116, line: 313, baseType: !1281, size: 64, offset: 256)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !376)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 325, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 320, size: 192, elements: !1285)
!1285 = !{!1286, !1287, !1288}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1284, file: !116, line: 322, baseType: !120, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1284, file: !116, line: 323, baseType: !120, size: 32, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1284, file: !116, line: 324, baseType: !1289, size: 128, offset: 64)
!1289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !776)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !894, line: 100, size: 224, elements: !1294)
!1294 = !{!1295, !1300, !1301, !1310, !1315, !1320, !1325}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1293, file: !894, line: 101, baseType: !1296, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !894, line: 76, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!103, !1201, !969}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1293, file: !894, line: 102, baseType: !1296, size: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1293, file: !894, line: 103, baseType: !1302, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !894, line: 83, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!103, !1201, !969, !1306, !102}
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !894, line: 72, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1201, !969, !102}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1293, file: !894, line: 104, baseType: !1311, size: 32, offset: 96)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !894, line: 79, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!103, !1201, !969, !925}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1293, file: !894, line: 105, baseType: !1316, size: 32, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !894, line: 88, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!893, !1201, !969}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1293, file: !894, line: 106, baseType: !1321, size: 32, offset: 160)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !894, line: 92, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!103, !1201, !969, !995}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1293, file: !894, line: 107, baseType: !1326, size: 32, offset: 192)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !894, line: 96, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!103, !1201, !969, !102}
!1330 = !{!1331, !1337, !1339, !1349, !1354, !1356, !1358, !1363, !1365, !1367, !1372, !1374, !1376, !1378, !1380, !1382, !1387, !1389, !1391, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1181, !1427, !1429, !1442, !1444, !1446, !1448}
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1183, file: !1333, line: 762, type: !1334, isLocal: false, isDefinition: true, align: 16)
!1333 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 128, elements: !1335)
!1335 = !{!1336}
!1336 = !DISubrange(count: 8)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1183, file: !1333, line: 762, type: !1202, isLocal: false, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1183, file: !1333, line: 762, type: !1341, isLocal: true, isDefinition: true, align: 32)
!1341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1342)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1343)
!1343 = !{!1344, !1348}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1342, file: !145, line: 60, baseType: !1345, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!103, !1201}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1342, file: !145, line: 65, baseType: !1201, size: 32, offset: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1183, file: !1333, line: 766, type: !1351, isLocal: false, isDefinition: true, align: 16)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 144, elements: !1352)
!1352 = !{!1353}
!1353 = !DISubrange(count: 9)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1183, file: !1333, line: 766, type: !1202, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1183, file: !1333, line: 766, type: !1341, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1183, file: !1333, line: 770, type: !1360, isLocal: false, isDefinition: true, align: 16)
!1360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 96, elements: !1361)
!1361 = !{!1362}
!1362 = !DISubrange(count: 6)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1183, file: !1333, line: 770, type: !1202, isLocal: false, isDefinition: true, align: 32)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1183, file: !1333, line: 770, type: !1341, isLocal: true, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1183, file: !1333, line: 774, type: !1369, isLocal: false, isDefinition: true, align: 16)
!1369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 80, elements: !1370)
!1370 = !{!1371}
!1371 = !DISubrange(count: 5)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1183, file: !1333, line: 774, type: !1202, isLocal: false, isDefinition: true, align: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1183, file: !1333, line: 774, type: !1341, isLocal: true, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1183, file: !1333, line: 778, type: !1369, isLocal: false, isDefinition: true, align: 16)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1183, file: !1333, line: 778, type: !1202, isLocal: false, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1183, file: !1333, line: 778, type: !1341, isLocal: true, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1183, file: !1333, line: 790, type: !1384, isLocal: false, isDefinition: true, align: 16)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 112, elements: !1385)
!1385 = !{!1386}
!1386 = !DISubrange(count: 7)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1183, file: !1333, line: 790, type: !1202, isLocal: false, isDefinition: true, align: 32)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1183, file: !1333, line: 790, type: !1341, isLocal: true, isDefinition: true, align: 32)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1183, file: !1333, line: 762, type: !1393, isLocal: true, isDefinition: true)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1394, line: 237, size: 128, elements: !1395)
!1394 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1395 = !{!1396, !1397, !1398}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1393, file: !1394, line: 239, baseType: !1264, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1393, file: !1394, line: 241, baseType: !1201, size: 32, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1393, file: !1394, line: 243, baseType: !1399, size: 64, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !664, line: 40, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !664, line: 35, size: 64, elements: !1401)
!1401 = !{!1402, !1404}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1400, file: !664, line: 36, baseType: !1403, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1400, file: !664, line: 37, baseType: !1403, size: 32, offset: 32)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1183, file: !1333, line: 762, type: !1210, isLocal: true, isDefinition: true, align: 8)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1183, file: !1333, line: 766, type: !1393, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1183, file: !1333, line: 766, type: !1210, isLocal: true, isDefinition: true, align: 8)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1183, file: !1333, line: 770, type: !1393, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1183, file: !1333, line: 770, type: !1210, isLocal: true, isDefinition: true, align: 8)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1183, file: !1333, line: 774, type: !1393, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1183, file: !1333, line: 774, type: !1210, isLocal: true, isDefinition: true, align: 8)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1183, file: !1333, line: 778, type: !1393, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1183, file: !1333, line: 778, type: !1210, isLocal: true, isDefinition: true, align: 8)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1183, file: !1333, line: 790, type: !1393, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1183, file: !1333, line: 790, type: !1210, isLocal: true, isDefinition: true, align: 8)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1183, file: !1333, line: 656, type: !1194, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1183, file: !1333, line: 766, type: !1431, isLocal: true, isDefinition: true)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1394, line: 224, size: 160, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1432, file: !1394, line: 226, baseType: !1259, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1432, file: !1394, line: 228, baseType: !925, size: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1432, file: !1394, line: 230, baseType: !103, size: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1432, file: !1394, line: 231, baseType: !1438, size: 64, offset: 96)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !921, line: 343, size: 64, elements: !1439)
!1439 = !{!1440, !1441}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1438, file: !921, line: 344, baseType: !121, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1438, file: !921, line: 345, baseType: !121, size: 32, offset: 32)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1183, file: !1333, line: 770, type: !1431, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1183, file: !1333, line: 774, type: !1431, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1183, file: !1333, line: 778, type: !1431, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1183, file: !1333, line: 790, type: !1431, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1452, file: !1620, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1487, globals: !1617, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1454 = !{!30, !1455, !1462, !1469, !1476, !1482, !893}
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !222, line: 47, baseType: !32, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461}
!1457 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1458 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1459 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1460 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1461 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !222, line: 75, baseType: !32, size: 32, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468}
!1464 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1465 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1466 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1467 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !222, line: 92, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475}
!1471 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1472 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1473 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1474 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1476 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !222, line: 84, baseType: !32, size: 32, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481}
!1478 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1479 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1480 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1481 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1482 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !222, line: 107, baseType: !32, size: 32, elements: !1483)
!1483 = !{!1484, !1485, !1486}
!1484 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1485 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1486 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1487 = !{!102, !103, !1488, !168, !167, !1567, !121, !969, !1578, !442}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !222, line: 336, size: 608, elements: !1491)
!1491 = !{!1492, !1511, !1515, !1519, !1532, !1537, !1541, !1545, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1490, file: !222, line: 365, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!103, !1496, !243}
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1509, !1510}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1498, file: !154, line: 380, baseType: !157, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1498, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1498, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1498, file: !154, line: 386, baseType: !1504, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1506)
!1506 = !{!1507, !1508}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1505, file: !154, line: 359, baseType: !167, size: 8)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1505, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1498, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1498, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1490, file: !222, line: 366, baseType: !1512, size: 32, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{null, !1496, !168}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1490, file: !222, line: 374, baseType: !1516, size: 32, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!103, !1496}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1490, file: !222, line: 377, baseType: !1520, size: 32, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!103, !1496, !1523}
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !222, line: 122, size: 64, elements: !1526)
!1526 = !{!1527, !1528, !1529, !1530, !1531}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1525, file: !222, line: 123, baseType: !121, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1525, file: !222, line: 124, baseType: !167, size: 8, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1525, file: !222, line: 125, baseType: !167, size: 8, offset: 40)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1525, file: !222, line: 126, baseType: !167, size: 8, offset: 48)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1525, file: !222, line: 127, baseType: !167, size: 8, offset: 56)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1490, file: !222, line: 379, baseType: !1533, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!103, !1496, !1536}
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1490, file: !222, line: 384, baseType: !1538, size: 32, offset: 160)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!103, !1496, !274, !103}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1490, file: !222, line: 393, baseType: !1542, size: 32, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!103, !1496, !280, !281}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1490, file: !222, line: 402, baseType: !1546, size: 32, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1496}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1490, file: !222, line: 405, baseType: !1546, size: 32, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1490, file: !222, line: 408, baseType: !1516, size: 32, offset: 288)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1490, file: !222, line: 411, baseType: !1546, size: 32, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1490, file: !222, line: 414, baseType: !1546, size: 32, offset: 352)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1490, file: !222, line: 417, baseType: !1516, size: 32, offset: 384)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1490, file: !222, line: 420, baseType: !1516, size: 32, offset: 416)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1490, file: !222, line: 423, baseType: !1546, size: 32, offset: 448)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1490, file: !222, line: 426, baseType: !1546, size: 32, offset: 480)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1490, file: !222, line: 429, baseType: !1516, size: 32, offset: 512)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1490, file: !222, line: 432, baseType: !1516, size: 32, offset: 544)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1490, file: !222, line: 435, baseType: !1560, size: 32, offset: 576)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !1496, !1563, !102}
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !222, line: 142, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{null, !1496, !102}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 505, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 496, size: 224, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1569, file: !116, line: 498, baseType: !120, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1569, file: !116, line: 499, baseType: !120, size: 32, offset: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1569, file: !116, line: 500, baseType: !120, size: 32, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1569, file: !116, line: 501, baseType: !120, size: 32, offset: 96)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1569, file: !116, line: 502, baseType: !120, size: 32, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1569, file: !116, line: 503, baseType: !120, size: 32, offset: 160)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1569, file: !116, line: 504, baseType: !120, size: 32, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !894, line: 100, size: 224, elements: !1581)
!1581 = !{!1582, !1587, !1588, !1597, !1602, !1607, !1612}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1580, file: !894, line: 101, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !894, line: 76, baseType: !1584)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!103, !1496, !969}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1580, file: !894, line: 102, baseType: !1583, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1580, file: !894, line: 103, baseType: !1589, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !894, line: 83, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{!103, !1496, !969, !1593, !102}
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !894, line: 72, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{null, !1496, !969, !102}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1580, file: !894, line: 104, baseType: !1598, size: 32, offset: 96)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !894, line: 79, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!103, !1496, !969, !925}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1580, file: !894, line: 105, baseType: !1603, size: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !894, line: 88, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!893, !1496, !969}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1580, file: !894, line: 106, baseType: !1608, size: 32, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !894, line: 92, baseType: !1609)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!103, !1496, !969, !995}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1580, file: !894, line: 107, baseType: !1613, size: 32, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !894, line: 96, baseType: !1614)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{!103, !1496, !969, !102}
!1617 = !{!1618, !1621, !1623, !1630, !1632, !1634, !1636, !1638, !1450, !1640, !1648, !1671, !1674, !1677, !1688, !1690, !1699, !1718, !1720, !1722, !1724, !1726, !1731}
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1334, isLocal: false, isDefinition: true, align: 16)
!1620 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1497, isLocal: false, isDefinition: true, align: 32)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1625, isLocal: true, isDefinition: true, align: 32)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1626, file: !145, line: 60, baseType: !1516, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1626, file: !145, line: 65, baseType: !1496, size: 32, offset: 32)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1334, isLocal: false, isDefinition: true, align: 16)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1497, isLocal: false, isDefinition: true, align: 32)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1625, isLocal: true, isDefinition: true, align: 32)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1505, isLocal: true, isDefinition: true, align: 8)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1505, isLocal: true, isDefinition: true, align: 8)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1452, file: !1620, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 64, elements: !517)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !921, line: 343, size: 64, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1644, file: !921, line: 344, baseType: !121, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1644, file: !921, line: 345, baseType: !121, size: 32, offset: 32)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1652, line: 60, size: 64, elements: !1653)
!1652 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1653 = !{!1654, !1670}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1651, file: !1652, line: 69, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1652, line: 50, size: 64, elements: !1658)
!1658 = !{!1659, !1668, !1669}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1657, file: !1652, line: 52, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1663, line: 37, baseType: !1664)
!1663 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1663, line: 32, size: 64, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1664, file: !1663, line: 34, baseType: !121, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1664, file: !1663, line: 36, baseType: !121, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1657, file: !1652, line: 54, baseType: !167, size: 8, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1657, file: !1652, line: 56, baseType: !167, size: 8, offset: 40)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1651, file: !1652, line: 71, baseType: !167, size: 8, offset: 32)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 64, elements: !517)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1452, file: !1620, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1661, size: 128, elements: !376)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1679, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true, align: 32)
!1679 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1620, file: !1620, line: 1914, type: !1547, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1680)
!1680 = !{!1681}
!1681 = !DILocalVariable(name: "dev", arg: 1, scope: !1679, file: !1620, line: 1914, type: !1496)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1682, file: !10, line: 55, baseType: !834, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1682, file: !10, line: 57, baseType: !834, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1682, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1682, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1452, file: !1620, line: 1539, type: !1489, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1452, file: !1620, line: 1914, type: !1692, isLocal: true, isDefinition: true)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1693, line: 74, size: 128, elements: !1694)
!1693 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1694 = !{!1695, !1696, !1697, !1698}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1692, file: !1693, line: 76, baseType: !121, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1692, file: !1693, line: 78, baseType: !1496, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1692, file: !1693, line: 80, baseType: !1563, size: 32, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1692, file: !1693, line: 81, baseType: !102, size: 32, offset: 96)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1452, file: !1620, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1693, line: 22, size: 256, elements: !1703)
!1703 = !{!1704, !1705, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1716}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1702, file: !1693, line: 24, baseType: !1567, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1702, file: !1693, line: 26, baseType: !1706, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1702, file: !1693, line: 28, baseType: !217, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1702, file: !1693, line: 30, baseType: !170, size: 8, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1702, file: !1693, line: 32, baseType: !103, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1702, file: !1693, line: 34, baseType: !170, size: 8, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1702, file: !1693, line: 36, baseType: !170, size: 8, offset: 168)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1702, file: !1693, line: 38, baseType: !170, size: 8, offset: 176)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1702, file: !1693, line: 40, baseType: !170, size: 8, offset: 184)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1702, file: !1693, line: 41, baseType: !1715, size: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1702, file: !1693, line: 44, baseType: !1717, size: 32, offset: 224)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !222, line: 150, baseType: !1546)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1452, file: !1620, line: 1914, type: !1642, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1452, file: !1620, line: 1914, type: !1676, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1728, file: !1620, line: 1914, type: !1682, isLocal: true, isDefinition: true, align: 32)
!1728 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1620, file: !1620, line: 1914, type: !1547, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1729)
!1729 = !{!1730}
!1730 = !DILocalVariable(name: "dev", arg: 1, scope: !1728, file: !1620, line: 1914, type: !1496)
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1452, file: !1620, line: 1914, type: !1692, isLocal: true, isDefinition: true)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1735, file: !1813, line: 65, type: !120, isLocal: true, isDefinition: true)
!1735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1737, retainedTypes: !1738, globals: !1810, splitDebugInlining: false, nameTableKind: None)
!1736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1737 = !{!705}
!1738 = !{!213, !1739, !834, !167, !121, !1747, !1778}
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !528, line: 712, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 706, size: 128, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1741, file: !528, line: 708, baseType: !120, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1741, file: !528, line: 709, baseType: !120, size: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1741, file: !528, line: 710, baseType: !120, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1741, file: !528, line: 711, baseType: !532, size: 32, offset: 96)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !528, line: 360, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 345, size: 28704, elements: !1750)
!1750 = !{!1751, !1753, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1768, !1773, !1777}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1749, file: !528, line: 347, baseType: !1752, size: 256)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1335)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1749, file: !528, line: 348, baseType: !1754, size: 768, offset: 256)
!1754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1755)
!1755 = !{!1756}
!1756 = !DISubrange(count: 24)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1749, file: !528, line: 349, baseType: !1752, size: 256, offset: 1024)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1749, file: !528, line: 350, baseType: !1754, size: 768, offset: 1280)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1749, file: !528, line: 351, baseType: !1752, size: 256, offset: 2048)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1749, file: !528, line: 352, baseType: !1754, size: 768, offset: 2304)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1749, file: !528, line: 353, baseType: !1752, size: 256, offset: 3072)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1749, file: !528, line: 354, baseType: !1754, size: 768, offset: 3328)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1749, file: !528, line: 355, baseType: !1752, size: 256, offset: 4096)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1749, file: !528, line: 356, baseType: !1765, size: 1792, offset: 4352)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1766)
!1766 = !{!1767}
!1767 = !DISubrange(count: 56)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1749, file: !528, line: 357, baseType: !1769, size: 1920, offset: 6144)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1770, size: 1920, elements: !1771)
!1770 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1771 = !{!1772}
!1772 = !DISubrange(count: 240)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1749, file: !528, line: 358, baseType: !1774, size: 20608, offset: 8064)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1775)
!1775 = !{!1776}
!1776 = !DISubrange(count: 644)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1749, file: !528, line: 359, baseType: !120, size: 32, offset: 28672)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1801, !1802, !1803, !1805, !1807, !1809}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1780, file: !528, line: 381, baseType: !532, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1780, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1780, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1780, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1780, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1780, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1780, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1770, size: 96, elements: !1790)
!1790 = !{!1791}
!1791 = !DISubrange(count: 12)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1780, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1780, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1780, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1780, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1780, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1780, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1780, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1780, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 64, elements: !376)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1780, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1780, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1780, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 128, elements: !776)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1780, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !532, size: 160, elements: !1370)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1780, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1370)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1780, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!1810 = !{!1811, !1837, !1840, !1842, !1844, !1733}
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1735, file: !1813, line: 285, type: !1814, isLocal: true, isDefinition: true, align: 32)
!1813 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1816)
!1816 = !{!1817, !1836}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1815, file: !145, line: 60, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!103, !1821}
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1834, !1835}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1823, file: !154, line: 380, baseType: !157, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1823, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1823, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1823, file: !154, line: 386, baseType: !1829, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1830, file: !154, line: 359, baseType: !167, size: 8)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1830, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1823, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1823, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1815, file: !145, line: 65, baseType: !1821, size: 32, offset: 32)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "lock", scope: !1735, file: !1813, line: 34, type: !1839, isLocal: true, isDefinition: true)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "last_load", scope: !1735, file: !1813, line: 36, type: !121, isLocal: true, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1735, file: !1813, line: 48, type: !121, isLocal: true, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1735, file: !1813, line: 54, type: !121, isLocal: true, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1848, file: !1929, line: 22, type: !1931, isLocal: true, isDefinition: true)
!1848 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1849, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !596, retainedTypes: !1850, globals: !1926, splitDebugInlining: false, nameTableKind: None)
!1849 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1850 = !{!1851, !1915, !1920, !644, !603, !597, !1925, !102}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !598, line: 523, size: 288, elements: !1854)
!1854 = !{!1855, !1874, !1878, !1882, !1886, !1887, !1888, !1892, !1911}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1853, file: !598, line: 524, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!103, !1859, !632, !633}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1872, !1873}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1861, file: !154, line: 380, baseType: !157, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1861, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1861, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1861, file: !154, line: 386, baseType: !1867, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1869)
!1869 = !{!1870, !1871}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1868, file: !154, line: 359, baseType: !167, size: 8)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1868, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1861, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1861, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1853, file: !598, line: 530, baseType: !1875, size: 32, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!103, !1859, !638}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1853, file: !598, line: 532, baseType: !1879, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!103, !1859, !644, !639}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1853, file: !598, line: 535, baseType: !1883, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!103, !1859, !644}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1853, file: !598, line: 537, baseType: !1883, size: 32, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1853, file: !598, line: 539, baseType: !1883, size: 32, offset: 160)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1853, file: !598, line: 541, baseType: !1889, size: 32, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!103, !1859, !632, !597, !603}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1853, file: !598, line: 544, baseType: !1893, size: 32, offset: 224)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!103, !1859, !1896, !170}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !598, line: 478, size: 96, elements: !1898)
!1898 = !{!1899, !1905, !1910}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1897, file: !598, line: 482, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !664, line: 33, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !664, line: 29, size: 32, elements: !1902)
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1901, file: !664, line: 30, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1897, file: !598, line: 485, baseType: !1906, size: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !598, line: 464, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{null, !1859, !1896, !644}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1897, file: !598, line: 493, baseType: !644, size: 32, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1853, file: !598, line: 547, baseType: !1912, size: 32, offset: 256)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!121, !1859}
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !598, line: 428, size: 32, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1917, file: !598, line: 434, baseType: !644, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !598, line: 441, size: 32, elements: !1923)
!1923 = !{!1924}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1922, file: !598, line: 447, baseType: !644, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1926 = !{!1927, !1846}
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1928 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1848, file: !1929, line: 37, type: !1930, isLocal: true, isDefinition: true)
!1929 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1932, size: 352, elements: !862)
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1934 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1935, file: !1959, line: 129, type: !1966, isLocal: false, isDefinition: true)
!1935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1937, globals: !1956, splitDebugInlining: false, nameTableKind: None)
!1936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1937 = !{!1938}
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !1941)
!1941 = !{!1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1940, file: !116, line: 372, baseType: !120, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1940, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1940, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1940, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1940, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1940, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1940, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1940, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1940, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1940, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1940, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1940, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1940, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1940, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!1956 = !{!1957, !1960, !1963, !1933}
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1935, file: !1959, line: 126, type: !121, isLocal: false, isDefinition: true)
!1959 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1935, file: !1959, line: 127, type: !1962, isLocal: false, isDefinition: true)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 72, elements: !1352)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1935, file: !1959, line: 128, type: !1965, isLocal: false, isDefinition: true)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 128, elements: !820)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 64, elements: !1335)
!1967 = !DIGlobalVariableExpression(var: !1968, expr: !DIExpression())
!1968 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1969, file: !1972, line: 23, type: !281, isLocal: false, isDefinition: true)
!1969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1971, splitDebugInlining: false, nameTableKind: None)
!1970 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1971 = !{!1967}
!1972 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1975, file: !1979, line: 86, type: !2226, isLocal: false, isDefinition: true, align: 512)
!1975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1977, retainedTypes: !1986, globals: !2059, splitDebugInlining: false, nameTableKind: None)
!1976 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!1977 = !{!1978, !30, !705}
!1978 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1979, line: 63, baseType: !32, size: 32, elements: !1980)
!1979 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1980 = !{!1981, !1982, !1983, !1984, !1985}
!1981 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1982 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1983 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1984 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1985 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1986 = !{!217, !102, !103, !1987, !357, !121, !2017, !834, !167, !2042}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1990, line: 51, size: 64, elements: !1991)
!1990 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1991 = !{!1992, !2012}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1989, file: !1990, line: 52, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1990, line: 38, baseType: !1994)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 32)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!103, !1997, !280, !442}
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004, !2010, !2011}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1999, file: !154, line: 380, baseType: !157, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1999, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1999, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1999, file: !154, line: 386, baseType: !2005, size: 32, offset: 96)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !2007)
!2007 = !{!2008, !2009}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2006, file: !154, line: 359, baseType: !167, size: 8)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2006, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1999, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1999, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1989, file: !1990, line: 53, baseType: !2013, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1990, line: 47, baseType: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!103, !1997, !280, !442, !121}
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2019, file: !528, line: 381, baseType: !532, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2019, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2019, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2019, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2019, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2019, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2019, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2019, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2019, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2019, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2019, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2019, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2019, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2019, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2019, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2019, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2019, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2019, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2019, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2019, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2019, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !528, line: 360, baseType: !2044)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 345, size: 28704, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2044, file: !528, line: 347, baseType: !1752, size: 256)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2044, file: !528, line: 348, baseType: !1754, size: 768, offset: 256)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2044, file: !528, line: 349, baseType: !1752, size: 256, offset: 1024)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2044, file: !528, line: 350, baseType: !1754, size: 768, offset: 1280)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2044, file: !528, line: 351, baseType: !1752, size: 256, offset: 2048)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2044, file: !528, line: 352, baseType: !1754, size: 768, offset: 2304)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2044, file: !528, line: 353, baseType: !1752, size: 256, offset: 3072)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2044, file: !528, line: 354, baseType: !1754, size: 768, offset: 3328)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2044, file: !528, line: 355, baseType: !1752, size: 256, offset: 4096)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2044, file: !528, line: 356, baseType: !1765, size: 1792, offset: 4352)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2044, file: !528, line: 357, baseType: !1769, size: 1920, offset: 6144)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2044, file: !528, line: 358, baseType: !1774, size: 20608, offset: 8064)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2044, file: !528, line: 359, baseType: !120, size: 32, offset: 28672)
!2059 = !{!2060, !2182, !2191, !2193, !1973, !2196, !2198, !2203}
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "_kernel", scope: !1975, file: !1979, line: 40, type: !2062, isLocal: false, isDefinition: true)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !333, line: 158, size: 288, elements: !2063)
!2063 = !{!2064, !2177}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2062, file: !333, line: 159, baseType: !2065, size: 192)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2066, size: 192, elements: !517)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !333, line: 100, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2171, !2172, !2173, !2174}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2066, file: !333, line: 102, baseType: !121, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2066, file: !333, line: 105, baseType: !357, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2066, file: !333, line: 108, baseType: !2071, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !2073)
!2073 = !{!2074, !2132, !2144, !2145, !2146, !2147, !2153, !2166}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2072, file: !392, line: 247, baseType: !2075, size: 384)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !2076)
!2076 = !{!2077, !2101, !2108, !2109, !2110, !2119, !2120, !2121}
!2077 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !392, line: 60, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2075, file: !392, line: 60, size: 64, elements: !2079)
!2079 = !{!2080, !2095}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2078, file: !392, line: 61, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !2083)
!2083 = !{!2084, !2090}
!2084 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !338, line: 38, baseType: !2085, size: 32)
!2085 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !338, line: 38, size: 32, elements: !2086)
!2086 = !{!2087, !2089}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2085, file: !338, line: 39, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2085, file: !338, line: 40, baseType: !2088, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !338, line: 42, baseType: !2091, size: 32, offset: 32)
!2091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !338, line: 42, size: 32, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2091, file: !338, line: 43, baseType: !2088, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2091, file: !338, line: 44, baseType: !2088, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2078, file: !392, line: 62, baseType: !2096, size: 64)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !2097)
!2097 = !{!2098}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2096, file: !417, line: 50, baseType: !2099, size: 64)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2100, size: 64, elements: !376)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2075, file: !392, line: 68, baseType: !2102, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !2105)
!2105 = !{!2106}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2104, file: !333, line: 232, baseType: !2107, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !2082)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2075, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2075, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !392, line: 90, baseType: !2111, size: 16, offset: 112)
!2111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2075, file: !392, line: 90, size: 16, elements: !2112)
!2112 = !{!2113, !2118}
!2113 = !DIDerivedType(tag: DW_TAG_member, scope: !2111, file: !392, line: 91, baseType: !2114, size: 16)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2111, file: !392, line: 91, size: 16, elements: !2115)
!2115 = !{!2116, !2117}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2114, file: !392, line: 96, baseType: !438, size: 8)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2114, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2111, file: !392, line: 100, baseType: !442, size: 16)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2075, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2075, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2075, file: !392, line: 131, baseType: !2122, size: 192, offset: 192)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !2123)
!2123 = !{!2124, !2125, !2131}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2122, file: !333, line: 245, baseType: !2081, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2122, file: !333, line: 246, baseType: !2126, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !2127)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !2130}
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2122, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2072, file: !392, line: 250, baseType: !2133, size: 288, offset: 384)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2133, file: !459, line: 26, baseType: !121, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2133, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2133, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2133, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2133, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2133, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2133, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2133, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2133, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2072, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2072, file: !392, line: 256, baseType: !2103, size: 64, offset: 704)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2072, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2072, file: !392, line: 300, baseType: !2148, size: 96, offset: 800)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !2149)
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2148, file: !392, line: 153, baseType: !22, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2148, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2148, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2072, file: !392, line: 325, baseType: !2154, size: 32, offset: 896)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !2156)
!2156 = !{!2157, !2163, !2164}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2155, file: !309, line: 5074, baseType: !2158, size: 96)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !2159)
!2159 = !{!2160, !2161, !2162}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2158, file: !485, line: 57, baseType: !488, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2158, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2158, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2155, file: !309, line: 5075, baseType: !2103, size: 64, offset: 96)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2155, file: !309, line: 5076, baseType: !2165, offset: 160)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2072, file: !392, line: 343, baseType: !2167, size: 64, offset: 928)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !2168)
!2168 = !{!2169, !2170}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2167, file: !459, line: 63, baseType: !121, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2167, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2066, file: !333, line: 111, baseType: !2071, size: 32, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2066, file: !333, line: 124, baseType: !103, size: 32, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2066, file: !333, line: 127, baseType: !167, size: 8, offset: 160)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2066, file: !333, line: 153, baseType: !2175, offset: 168)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2176, line: 33, elements: !330)
!2176 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2062, file: !333, line: 170, baseType: !2178, size: 96, offset: 192)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !333, line: 83, size: 96, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2178, file: !333, line: 86, baseType: !2071, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2178, file: !333, line: 90, baseType: !2107, size: 64, offset: 32)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1975, file: !1979, line: 43, type: !2184, isLocal: false, isDefinition: true, align: 512)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 8704, elements: !2189)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2186, line: 47, size: 8, elements: !2187)
!2186 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2187 = !{!2188}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2185, file: !2186, line: 48, baseType: !159, size: 8)
!2189 = !{!2190}
!2190 = !DISubrange(count: 1088)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1975, file: !1979, line: 44, type: !2072, isLocal: false, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1975, file: !1979, line: 48, type: !2195, isLocal: false, isDefinition: true)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2072, size: 1024, elements: !517)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1975, file: !1979, line: 217, type: !170, isLocal: false, isDefinition: true)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1975, file: !1979, line: 50, type: !2200, isLocal: true, isDefinition: true, align: 512)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 2560, elements: !2201)
!2201 = !{!518, !2202}
!2202 = !DISubrange(count: 320)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "levels", scope: !2205, file: !1979, line: 232, type: !2225, isLocal: true, isDefinition: true)
!2205 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1979, file: !1979, line: 230, type: !2206, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !2208)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{null, !1978}
!2208 = !{!2209, !2210, !2220, !2224}
!2209 = !DILocalVariable(name: "level", arg: 1, scope: !2205, file: !1979, line: 230, type: !1978)
!2210 = !DILocalVariable(name: "entry", scope: !2205, file: !1979, line: 244, type: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !2214)
!2214 = !{!2215, !2219}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2213, file: !145, line: 60, baseType: !2216, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!103, !1997}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2213, file: !145, line: 65, baseType: !1997, size: 32, offset: 32)
!2220 = !DILocalVariable(name: "dev", scope: !2221, file: !1979, line: 247, type: !1997)
!2221 = distinct !DILexicalBlock(scope: !2222, file: !1979, line: 246, column: 64)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1979, line: 246, column: 2)
!2223 = distinct !DILexicalBlock(scope: !2205, file: !1979, line: 246, column: 2)
!2224 = !DILocalVariable(name: "rc", scope: !2221, file: !1979, line: 248, type: !103)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2211, size: 192, elements: !1361)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2185, size: 16896, elements: !2227)
!2227 = !{!518, !2228}
!2228 = !DISubrange(count: 2112)
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "states_str", scope: !2231, file: !2232, line: 276, type: !2355, isLocal: true, isDefinition: true)
!2231 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2232, file: !2232, line: 271, type: !2233, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !2346)
!2232 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!157, !2235, !357, !217}
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !392, line: 347, baseType: !2236)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !2238)
!2238 = !{!2239, !2297, !2309, !2310, !2311, !2312, !2318, !2331}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2237, file: !392, line: 247, baseType: !2240, size: 384)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !2241)
!2241 = !{!2242, !2266, !2273, !2274, !2275, !2284, !2285, !2286}
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !392, line: 60, baseType: !2243, size: 64)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2240, file: !392, line: 60, size: 64, elements: !2244)
!2244 = !{!2245, !2260}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2243, file: !392, line: 61, baseType: !2246, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !2248)
!2248 = !{!2249, !2255}
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2247, file: !338, line: 38, baseType: !2250, size: 32)
!2250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2247, file: !338, line: 38, size: 32, elements: !2251)
!2251 = !{!2252, !2254}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2250, file: !338, line: 39, baseType: !2253, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2250, file: !338, line: 40, baseType: !2253, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, scope: !2247, file: !338, line: 42, baseType: !2256, size: 32, offset: 32)
!2256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2247, file: !338, line: 42, size: 32, elements: !2257)
!2257 = !{!2258, !2259}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2256, file: !338, line: 43, baseType: !2253, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2256, file: !338, line: 44, baseType: !2253, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2243, file: !392, line: 62, baseType: !2261, size: 64)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !2262)
!2262 = !{!2263}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2261, file: !417, line: 50, baseType: !2264, size: 64)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2265, size: 64, elements: !376)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2240, file: !392, line: 68, baseType: !2267, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !2269)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !2270)
!2270 = !{!2271}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2269, file: !333, line: 232, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !2247)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2240, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2240, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!2275 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !392, line: 90, baseType: !2276, size: 16, offset: 112)
!2276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2240, file: !392, line: 90, size: 16, elements: !2277)
!2277 = !{!2278, !2283}
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2276, file: !392, line: 91, baseType: !2279, size: 16)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2276, file: !392, line: 91, size: 16, elements: !2280)
!2280 = !{!2281, !2282}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2279, file: !392, line: 96, baseType: !438, size: 8)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2279, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2276, file: !392, line: 100, baseType: !442, size: 16)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2240, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2240, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2240, file: !392, line: 131, baseType: !2287, size: 192, offset: 192)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !2288)
!2288 = !{!2289, !2290, !2296}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2287, file: !333, line: 245, baseType: !2246, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2287, file: !333, line: 246, baseType: !2291, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !2292)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{null, !2295}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2287, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2237, file: !392, line: 250, baseType: !2298, size: 288, offset: 384)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2298, file: !459, line: 26, baseType: !121, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2298, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2298, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2298, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2298, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2298, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2298, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2298, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2298, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2237, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2237, file: !392, line: 256, baseType: !2268, size: 64, offset: 704)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2237, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2237, file: !392, line: 300, baseType: !2313, size: 96, offset: 800)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !2314)
!2314 = !{!2315, !2316, !2317}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2313, file: !392, line: 153, baseType: !22, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2313, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2313, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2237, file: !392, line: 325, baseType: !2319, size: 32, offset: 896)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !2321)
!2321 = !{!2322, !2328, !2329}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2320, file: !309, line: 5074, baseType: !2323, size: 96)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !2324)
!2324 = !{!2325, !2326, !2327}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2323, file: !485, line: 57, baseType: !488, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2323, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2323, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2320, file: !309, line: 5075, baseType: !2268, size: 64, offset: 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2320, file: !309, line: 5076, baseType: !2330, offset: 160)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2237, file: !392, line: 343, baseType: !2332, size: 64, offset: 928)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !2333)
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2332, file: !459, line: 63, baseType: !121, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2332, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!2336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2337, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2338, globals: !2342, splitDebugInlining: false, nameTableKind: None)
!2337 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2338 = !{!102, !157, !213, !167, !103, !2339, !24, !217, !357, !22, !121, !2340}
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2341)
!2341 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2342 = !{!2229, !2343}
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "states_sz", scope: !2231, file: !2232, line: 279, type: !2345, isLocal: true, isDefinition: true)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1930, size: 256, elements: !1335)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353}
!2347 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2231, file: !2232, line: 271, type: !2235)
!2348 = !DILocalVariable(name: "buf", arg: 2, scope: !2231, file: !2232, line: 271, type: !357)
!2349 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2231, file: !2232, line: 271, type: !217)
!2350 = !DILocalVariable(name: "off", scope: !2231, file: !2232, line: 273, type: !217)
!2351 = !DILocalVariable(name: "bit", scope: !2231, file: !2232, line: 274, type: !167)
!2352 = !DILocalVariable(name: "thread_state", scope: !2231, file: !2232, line: 275, type: !167)
!2353 = !DILocalVariable(name: "index", scope: !2354, file: !2232, line: 293, type: !167)
!2354 = distinct !DILexicalBlock(scope: !2231, file: !2232, line: 293, column: 2)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 256, elements: !1335)
!2356 = !DIGlobalVariableExpression(var: !2357, expr: !DIExpression())
!2357 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2358, file: !2466, line: 56, type: !2455, isLocal: false, isDefinition: true)
!2358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2360, globals: !2463, splitDebugInlining: false, nameTableKind: None)
!2359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2360 = !{!2361, !357, !102, !2461, !280, !213, !834, !103, !121, !2340, !2462}
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !2363)
!2363 = !{!2364, !2422, !2434, !2435, !2436, !2437, !2443, !2456}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2362, file: !392, line: 247, baseType: !2365, size: 384)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !2366)
!2366 = !{!2367, !2391, !2398, !2399, !2400, !2409, !2410, !2411}
!2367 = !DIDerivedType(tag: DW_TAG_member, scope: !2365, file: !392, line: 60, baseType: !2368, size: 64)
!2368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2365, file: !392, line: 60, size: 64, elements: !2369)
!2369 = !{!2370, !2385}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2368, file: !392, line: 61, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !2373)
!2373 = !{!2374, !2380}
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2372, file: !338, line: 38, baseType: !2375, size: 32)
!2375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2372, file: !338, line: 38, size: 32, elements: !2376)
!2376 = !{!2377, !2379}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2375, file: !338, line: 39, baseType: !2378, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2375, file: !338, line: 40, baseType: !2378, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, scope: !2372, file: !338, line: 42, baseType: !2381, size: 32, offset: 32)
!2381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2372, file: !338, line: 42, size: 32, elements: !2382)
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2381, file: !338, line: 43, baseType: !2378, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2381, file: !338, line: 44, baseType: !2378, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2368, file: !392, line: 62, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !2387)
!2387 = !{!2388}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2386, file: !417, line: 50, baseType: !2389, size: 64)
!2389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2390, size: 64, elements: !376)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2365, file: !392, line: 68, baseType: !2392, size: 32, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !2395)
!2395 = !{!2396}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2394, file: !333, line: 232, baseType: !2397, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !2372)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2365, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2365, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!2400 = !DIDerivedType(tag: DW_TAG_member, scope: !2365, file: !392, line: 90, baseType: !2401, size: 16, offset: 112)
!2401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2365, file: !392, line: 90, size: 16, elements: !2402)
!2402 = !{!2403, !2408}
!2403 = !DIDerivedType(tag: DW_TAG_member, scope: !2401, file: !392, line: 91, baseType: !2404, size: 16)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2401, file: !392, line: 91, size: 16, elements: !2405)
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2404, file: !392, line: 96, baseType: !438, size: 8)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2404, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2401, file: !392, line: 100, baseType: !442, size: 16)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2365, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2365, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2365, file: !392, line: 131, baseType: !2412, size: 192, offset: 192)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !2413)
!2413 = !{!2414, !2415, !2421}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2412, file: !333, line: 245, baseType: !2371, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2412, file: !333, line: 246, baseType: !2416, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !2417)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{null, !2420}
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2412, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2362, file: !392, line: 250, baseType: !2423, size: 288, offset: 384)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !2424)
!2424 = !{!2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2423, file: !459, line: 26, baseType: !121, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2423, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2423, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2423, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2423, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2423, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2423, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2423, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2423, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2362, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2362, file: !392, line: 256, baseType: !2393, size: 64, offset: 704)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2362, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2362, file: !392, line: 300, baseType: !2438, size: 96, offset: 800)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !2439)
!2439 = !{!2440, !2441, !2442}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2438, file: !392, line: 153, baseType: !22, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2438, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2438, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2362, file: !392, line: 325, baseType: !2444, size: 32, offset: 896)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !2446)
!2446 = !{!2447, !2453, !2454}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2445, file: !309, line: 5074, baseType: !2448, size: 96)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !2449)
!2449 = !{!2450, !2451, !2452}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2448, file: !485, line: 57, baseType: !488, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2448, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2448, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2445, file: !309, line: 5075, baseType: !2393, size: 64, offset: 96)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2445, file: !309, line: 5076, baseType: !2455, offset: 160)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2362, file: !392, line: 343, baseType: !2457, size: 64, offset: 928)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2457, file: !459, line: 63, baseType: !121, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2457, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!2463 = !{!2356, !2464, !2467, !2469}
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2358, file: !2466, line: 404, type: !103, isLocal: true, isDefinition: true)
!2466 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2358, file: !2466, line: 405, type: !103, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "pending_current", scope: !2358, file: !2466, line: 425, type: !2361, isLocal: true, isDefinition: true)
!2471 = !DIGlobalVariableExpression(var: !2472, expr: !DIExpression())
!2472 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2473, file: !2503, line: 15, type: !2340, isLocal: true, isDefinition: true)
!2473 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2474, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2475, globals: !2500, splitDebugInlining: false, nameTableKind: None)
!2474 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2475 = !{!213, !102, !834, !121, !2340, !103, !2476, !357, !215}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !2478)
!2478 = !{!2479, !2494, !2499}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2477, file: !333, line: 245, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !2481)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !2482)
!2482 = !{!2483, !2489}
!2483 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !338, line: 38, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !338, line: 38, size: 32, elements: !2485)
!2485 = !{!2486, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2484, file: !338, line: 39, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2484, file: !338, line: 40, baseType: !2487, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !338, line: 42, baseType: !2490, size: 32, offset: 32)
!2490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !338, line: 42, size: 32, elements: !2491)
!2491 = !{!2492, !2493}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2490, file: !338, line: 43, baseType: !2487, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2490, file: !338, line: 44, baseType: !2487, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2477, file: !333, line: 246, baseType: !2495, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !2496)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !2476}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2477, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!2500 = !{!2471, !2501, !2505, !2507}
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2473, file: !2503, line: 19, type: !2504, isLocal: true, isDefinition: true)
!2503 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2473, file: !2503, line: 25, type: !103, isLocal: true, isDefinition: true)
!2507 = !DIGlobalVariableExpression(var: !2508, expr: !DIExpression())
!2508 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2473, file: !2503, line: 17, type: !2509, isLocal: true, isDefinition: true)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !2481)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2512, file: !2531, line: 55, type: !2532, isLocal: true, isDefinition: true, align: 32)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2514, globals: !2530, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2514 = !{!102, !213, !103, !2515}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !2518)
!2518 = !{!2519, !2525}
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !338, line: 38, baseType: !2520, size: 32)
!2520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !338, line: 38, size: 32, elements: !2521)
!2521 = !{!2522, !2524}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2520, file: !338, line: 39, baseType: !2523, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2520, file: !338, line: 40, baseType: !2523, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !338, line: 42, baseType: !2526, size: 32, offset: 32)
!2526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !338, line: 42, size: 32, elements: !2527)
!2527 = !{!2528, !2529}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2526, file: !338, line: 43, baseType: !2523, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2526, file: !338, line: 44, baseType: !2523, size: 32)
!2530 = !{!2510}
!2531 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2533)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !2534)
!2534 = !{!2535, !2542}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2533, file: !145, line: 60, baseType: !2536, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 32)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!103, !2539}
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2541)
!2541 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !145, line: 48, flags: DIFlagFwdDecl)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2533, file: !145, line: 65, baseType: !2539, size: 32, offset: 32)
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2551, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2551 = !{!30, !2552}
!2552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2553, line: 54, baseType: !32, size: 32, elements: !2554)
!2553 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2554 = !{!2555, !2556, !2557, !2558}
!2555 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2556 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2557 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2558 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2559 = !{!102, !217, !280, !24, !2560, !22, !2566, !103, !925, !2581}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2553, line: 58, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2553, line: 58, size: 64, elements: !2563)
!2563 = !{!2564}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2562, file: !2553, line: 58, baseType: !2565, size: 64)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 64, elements: !1335)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2553, line: 68, size: 128, elements: !2568)
!2568 = !{!2569, !2572, !2573, !2574}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2567, file: !2553, line: 69, baseType: !2570, size: 64)
!2570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 64, elements: !376)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2553, line: 61, baseType: !121)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2567, file: !2553, line: 70, baseType: !2571, size: 32, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2567, file: !2553, line: 71, baseType: !121, size: 32, offset: 96)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2567, file: !2553, line: 77, baseType: !2575, offset: 128)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2576, elements: !2579)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2553, line: 64, size: 32, elements: !2577)
!2577 = !{!2578}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2576, file: !2553, line: 65, baseType: !2571, size: 32)
!2579 = !{!2580}
!2580 = !DISubrange(count: 0)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2584, retainedTypes: !2604, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2584 = !{!2585, !2593}
!2585 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2586, line: 69, baseType: !32, size: 32, elements: !2587)
!2586 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2587 = !{!2588, !2589, !2590, !2591, !2592}
!2588 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2589 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2590 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2591 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2592 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2586, line: 56, baseType: !32, size: 32, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603}
!2595 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2596 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2597 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2598 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2599 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2600 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2601 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2602 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2603 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2604 = !{!103, !2585, !2593, !2605, !439, !177, !2607, !2608, !168, !443, !157, !217, !102, !22, !32, !2610, !2611, !2612, !367, !2613, !216, !2614, !2606, !2615, !2616, !2617, !2618}
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2586, line: 31, baseType: !2606)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !216)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !218, line: 329, baseType: !32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2586, line: 32, baseType: !2609)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2341)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !218, line: 145, baseType: !103)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2623, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2623 = !{!2624, !30}
!2624 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2625, line: 27, baseType: !32, size: 32, elements: !2626)
!2625 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2626 = !{!2627, !2628, !2629, !2630, !2631}
!2627 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2628 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2629 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2630 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2631 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2634, retainedTypes: !2635, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2634 = !{!705, !2624, !30}
!2635 = !{!852, !2636, !102, !103, !834, !121, !167, !2653}
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !528, line: 360, baseType: !2638)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 345, size: 28704, elements: !2639)
!2639 = !{!2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2638, file: !528, line: 347, baseType: !1752, size: 256)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2638, file: !528, line: 348, baseType: !1754, size: 768, offset: 256)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2638, file: !528, line: 349, baseType: !1752, size: 256, offset: 1024)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2638, file: !528, line: 350, baseType: !1754, size: 768, offset: 1280)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2638, file: !528, line: 351, baseType: !1752, size: 256, offset: 2048)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2638, file: !528, line: 352, baseType: !1754, size: 768, offset: 2304)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2638, file: !528, line: 353, baseType: !1752, size: 256, offset: 3072)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2638, file: !528, line: 354, baseType: !1754, size: 768, offset: 3328)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2638, file: !528, line: 355, baseType: !1752, size: 256, offset: 4096)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2638, file: !528, line: 356, baseType: !1765, size: 1792, offset: 4352)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2638, file: !528, line: 357, baseType: !1769, size: 1920, offset: 6144)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2638, file: !528, line: 358, baseType: !1774, size: 20608, offset: 8064)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2638, file: !528, line: 359, baseType: !120, size: 32, offset: 28672)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2655)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2655, file: !528, line: 381, baseType: !532, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2655, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2655, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2655, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2655, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2655, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2655, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2655, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2655, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2655, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2655, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2655, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2655, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2655, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2655, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2655, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2655, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2655, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2655, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2655, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2655, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2682, splitDebugInlining: false, nameTableKind: None)
!2681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2682 = !{!102, !103, !22, !2683}
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2685, file: !528, line: 381, baseType: !532, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2685, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2685, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2685, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2685, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2685, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2685, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2685, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2685, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2685, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2685, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2685, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2685, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2685, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2685, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2685, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2685, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2685, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2685, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2685, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2685, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2710, splitDebugInlining: false, nameTableKind: None)
!2709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2710 = !{!2711, !102, !103}
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2714)
!2714 = !{!2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2713, file: !528, line: 381, baseType: !532, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2713, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2713, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2713, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2713, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2713, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2713, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2713, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2713, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2713, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2713, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2713, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2713, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2713, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2713, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2713, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2713, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2713, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2713, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2713, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2713, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2738, splitDebugInlining: false, nameTableKind: None)
!2737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2738 = !{!2739, !121, !102, !103}
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 32)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2741, line: 98, size: 256, elements: !2742)
!2741 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2742 = !{!2743, !2748, !2753, !2758, !2763, !2768, !2773, !2778}
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 99, baseType: !2744, size: 32)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 99, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2744, file: !2741, line: 99, baseType: !121, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2744, file: !2741, line: 99, baseType: !121, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 100, baseType: !2749, size: 32, offset: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 100, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2749, file: !2741, line: 100, baseType: !121, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2749, file: !2741, line: 100, baseType: !121, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 101, baseType: !2754, size: 32, offset: 64)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 101, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2754, file: !2741, line: 101, baseType: !121, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2754, file: !2741, line: 101, baseType: !121, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 102, baseType: !2759, size: 32, offset: 96)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 102, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2759, file: !2741, line: 102, baseType: !121, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2759, file: !2741, line: 102, baseType: !121, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 103, baseType: !2764, size: 32, offset: 128)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 103, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2764, file: !2741, line: 103, baseType: !121, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2764, file: !2741, line: 103, baseType: !121, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 104, baseType: !2769, size: 32, offset: 160)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 104, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2769, file: !2741, line: 104, baseType: !121, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2769, file: !2741, line: 104, baseType: !121, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2741, line: 105, baseType: !2774, size: 32, offset: 192)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2740, file: !2741, line: 105, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2774, file: !2741, line: 105, baseType: !121, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2774, file: !2741, line: 105, baseType: !121, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2740, file: !2741, line: 106, baseType: !121, size: 32, offset: 224)
!2779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2623, retainedTypes: !2781, splitDebugInlining: false, nameTableKind: None)
!2780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2781 = !{!2782, !102, !103, !2807, !2581, !121}
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2784, file: !528, line: 381, baseType: !532, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2784, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2784, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2784, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2784, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2784, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2784, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2784, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2784, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2784, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2784, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2784, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2784, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2784, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2784, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2784, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2784, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2784, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2784, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2784, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2784, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2741, line: 141, baseType: !2809)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2741, line: 97, size: 256, elements: !2810)
!2810 = !{!2811}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2809, file: !2741, line: 107, baseType: !2812, size: 256)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2741, line: 98, size: 256, elements: !2813)
!2813 = !{!2814, !2819, !2824, !2829, !2834, !2839, !2844, !2849}
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 99, baseType: !2815, size: 32)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 99, size: 32, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2815, file: !2741, line: 99, baseType: !121, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2815, file: !2741, line: 99, baseType: !121, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 100, baseType: !2820, size: 32, offset: 32)
!2820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 100, size: 32, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2820, file: !2741, line: 100, baseType: !121, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2820, file: !2741, line: 100, baseType: !121, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 101, baseType: !2825, size: 32, offset: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 101, size: 32, elements: !2826)
!2826 = !{!2827, !2828}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2825, file: !2741, line: 101, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2825, file: !2741, line: 101, baseType: !121, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 102, baseType: !2830, size: 32, offset: 96)
!2830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 102, size: 32, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2830, file: !2741, line: 102, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2830, file: !2741, line: 102, baseType: !121, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 103, baseType: !2835, size: 32, offset: 128)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 103, size: 32, elements: !2836)
!2836 = !{!2837, !2838}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2835, file: !2741, line: 103, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2835, file: !2741, line: 103, baseType: !121, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 104, baseType: !2840, size: 32, offset: 160)
!2840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 104, size: 32, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2840, file: !2741, line: 104, baseType: !121, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2840, file: !2741, line: 104, baseType: !121, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2741, line: 105, baseType: !2845, size: 32, offset: 192)
!2845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2741, line: 105, size: 32, elements: !2846)
!2846 = !{!2847, !2848}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2845, file: !2741, line: 105, baseType: !121, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2845, file: !2741, line: 105, baseType: !121, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2812, file: !2741, line: 106, baseType: !121, size: 32, offset: 224)
!2850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2851, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1737, retainedTypes: !2852, splitDebugInlining: false, nameTableKind: None)
!2851 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2852 = !{!852, !834, !167, !121, !2853, !2870}
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !528, line: 360, baseType: !2855)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 345, size: 28704, elements: !2856)
!2856 = !{!2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2855, file: !528, line: 347, baseType: !1752, size: 256)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2855, file: !528, line: 348, baseType: !1754, size: 768, offset: 256)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2855, file: !528, line: 349, baseType: !1752, size: 256, offset: 1024)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2855, file: !528, line: 350, baseType: !1754, size: 768, offset: 1280)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2855, file: !528, line: 351, baseType: !1752, size: 256, offset: 2048)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2855, file: !528, line: 352, baseType: !1754, size: 768, offset: 2304)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2855, file: !528, line: 353, baseType: !1752, size: 256, offset: 3072)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2855, file: !528, line: 354, baseType: !1754, size: 768, offset: 3328)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2855, file: !528, line: 355, baseType: !1752, size: 256, offset: 4096)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2855, file: !528, line: 356, baseType: !1765, size: 1792, offset: 4352)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2855, file: !528, line: 357, baseType: !1769, size: 1920, offset: 6144)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2855, file: !528, line: 358, baseType: !1774, size: 20608, offset: 8064)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2855, file: !528, line: 359, baseType: !120, size: 32, offset: 28672)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2872, file: !528, line: 381, baseType: !532, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2872, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2872, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2872, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2872, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2872, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2872, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2872, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2872, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2872, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2872, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2872, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2872, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2872, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2872, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2872, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2872, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2872, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2872, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2872, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2872, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2897, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2897 = !{!2898, !102, !103}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !528, line: 402, baseType: !2900)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 379, size: 1120, elements: !2901)
!2901 = !{!2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2900, file: !528, line: 381, baseType: !532, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2900, file: !528, line: 382, baseType: !120, size: 32, offset: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2900, file: !528, line: 383, baseType: !120, size: 32, offset: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2900, file: !528, line: 384, baseType: !120, size: 32, offset: 96)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2900, file: !528, line: 385, baseType: !120, size: 32, offset: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2900, file: !528, line: 386, baseType: !120, size: 32, offset: 160)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2900, file: !528, line: 387, baseType: !1789, size: 96, offset: 192)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2900, file: !528, line: 388, baseType: !120, size: 32, offset: 288)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2900, file: !528, line: 389, baseType: !120, size: 32, offset: 320)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2900, file: !528, line: 390, baseType: !120, size: 32, offset: 352)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2900, file: !528, line: 391, baseType: !120, size: 32, offset: 384)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2900, file: !528, line: 392, baseType: !120, size: 32, offset: 416)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2900, file: !528, line: 393, baseType: !120, size: 32, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2900, file: !528, line: 394, baseType: !120, size: 32, offset: 480)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2900, file: !528, line: 395, baseType: !1800, size: 64, offset: 512)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2900, file: !528, line: 396, baseType: !532, size: 32, offset: 576)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2900, file: !528, line: 397, baseType: !532, size: 32, offset: 608)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2900, file: !528, line: 398, baseType: !1804, size: 128, offset: 640)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2900, file: !528, line: 399, baseType: !1806, size: 160, offset: 768)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2900, file: !528, line: 400, baseType: !1808, size: 160, offset: 928)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2900, file: !528, line: 401, baseType: !120, size: 32, offset: 1088)
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2925 = !{!159, !357, !217, !243, !2926, !168, !102}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2930, splitDebugInlining: false, nameTableKind: None)
!2929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2930 = !{!2931}
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 32)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2933)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2933, file: !116, line: 372, baseType: !120, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2933, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2933, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2933, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2933, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2933, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2933, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2933, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2933, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2933, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2933, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2933, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2933, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2933, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2950, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2950 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2953, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!2953 = !{!2954, !2961, !2965}
!2954 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2955, line: 39, baseType: !32, size: 32, elements: !2956)
!2955 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2956 = !{!2957, !2958, !2959, !2960}
!2957 = !DIEnumerator(name: "HAL_OK", value: 0)
!2958 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2959 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2960 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2961 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !889, line: 183, baseType: !32, size: 32, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIEnumerator(name: "DISABLE", value: 0)
!2964 = !DIEnumerator(name: "ENABLE", value: 1)
!2965 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !889, line: 177, baseType: !32, size: 32, elements: !2966)
!2966 = !{!2967, !2968}
!2967 = !DIEnumerator(name: "RESET", value: 0)
!2968 = !DIEnumerator(name: "SET", value: 1)
!2969 = !{!2970, !102, !121, !167, !2988, !2989, !2995, !442, !3008, !2340, !3021}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2972, file: !116, line: 372, baseType: !120, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2972, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2972, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2972, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2972, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2972, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2972, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2972, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2972, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2972, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2972, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2972, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2972, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2972, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !2992)
!2992 = !{!2993, !2994}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2991, file: !116, line: 362, baseType: !120, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2991, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2997, file: !116, line: 277, baseType: !120, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2997, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2997, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2997, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2997, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2997, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2997, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2997, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2997, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !3010)
!3010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !3011)
!3011 = !{!3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3010, file: !116, line: 305, baseType: !120, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3010, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3010, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3010, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3010, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3010, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3010, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3010, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3010, file: !116, line: 313, baseType: !1281, size: 64, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!3022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3024, retainedTypes: !3025, splitDebugInlining: false, nameTableKind: None)
!3023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3024 = !{!888}
!3025 = !{!3026, !121, !3034, !3040, !3053}
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !528, line: 712, baseType: !3028)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !528, line: 706, size: 128, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3028, file: !528, line: 708, baseType: !120, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3028, file: !528, line: 709, baseType: !120, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3028, file: !528, line: 710, baseType: !120, size: 32, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3028, file: !528, line: 711, baseType: !532, size: 32, offset: 96)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !3036)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !3037)
!3037 = !{!3038, !3039}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3036, file: !116, line: 362, baseType: !120, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3036, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !3042)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !3043)
!3043 = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3042, file: !116, line: 277, baseType: !120, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3042, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3042, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3042, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3042, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3042, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3042, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3042, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3042, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3055, file: !116, line: 372, baseType: !120, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3055, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3055, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3055, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3055, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3055, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3055, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3055, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3055, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3055, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3055, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3055, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3055, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3055, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!3071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3073, splitDebugInlining: false, nameTableKind: None)
!3072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3073 = !{!102, !217}
!3074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3076, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3076 = !{!3077, !3084, !30}
!3077 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3078, line: 14, baseType: !32, size: 32, elements: !3079)
!3078 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3079 = !{!3080, !3081, !3082, !3083}
!3080 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3081 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3082 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3083 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3084 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3078, line: 42, baseType: !32, size: 32, elements: !3085)
!3085 = !{!3086, !3087, !3088, !3089, !3090, !3091}
!3086 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3087 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3088 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3089 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3090 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3091 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3096, retainedTypes: !3107, splitDebugInlining: false, nameTableKind: None)
!3095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3096 = !{!3097, !30}
!3097 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !309, line: 5323, baseType: !32, size: 32, elements: !3098)
!3098 = !{!3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106}
!3099 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3100 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3101 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3102 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3103 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3104 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3105 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3106 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3107 = !{!102, !167, !3108, !357, !3118, !170, !3119, !103, !3120, !325}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3110, line: 25, size: 64, elements: !3111)
!3110 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3111 = !{!3112, !3117}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3109, file: !3110, line: 26, baseType: !3113, size: 32)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !316, line: 39, baseType: !3114)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !316, line: 35, size: 32, elements: !3115)
!3115 = !{!3116}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3114, file: !316, line: 36, baseType: !325, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3109, file: !3110, line: 27, baseType: !102, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !3123)
!3123 = !{!3124, !3130}
!3124 = !DIDerivedType(tag: DW_TAG_member, scope: !3122, file: !338, line: 38, baseType: !3125, size: 32)
!3125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3122, file: !338, line: 38, size: 32, elements: !3126)
!3126 = !{!3127, !3129}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3125, file: !338, line: 39, baseType: !3128, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3125, file: !338, line: 40, baseType: !3128, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, scope: !3122, file: !338, line: 42, baseType: !3131, size: 32, offset: 32)
!3131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3122, file: !338, line: 42, size: 32, elements: !3132)
!3132 = !{!3133, !3134}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3131, file: !338, line: 43, baseType: !3128, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3131, file: !338, line: 44, baseType: !3128, size: 32)
!3135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3137, splitDebugInlining: false, nameTableKind: None)
!3136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3137 = !{!22, !102, !103}
!3138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3142 = !{!"Ubuntu clang version 14.0.6"}
!3143 = !{i32 7, !"Dwarf Version", i32 4}
!3144 = !{i32 2, !"Debug Info Version", i32 3}
!3145 = !{i32 1, !"wchar_size", i32 4}
!3146 = !{i32 1, !"min_enum_size", i32 4}
!3147 = !{i32 1, !"branch-target-enforcement", i32 0}
!3148 = !{i32 1, !"sign-return-address", i32 0}
!3149 = !{i32 1, !"sign-return-address-all", i32 0}
!3150 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3151 = !{i32 7, !"frame-pointer", i32 2}
!3152 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3153, file: !3153, line: 26, type: !3154, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !330)
!3153 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3154 = !DISubroutineType(types: !3155)
!3155 = !{null}
!3156 = !DILocation(line: 28, column: 1, scope: !3152)
!3157 = !{i64 2152483133, i64 2152483153, i64 2152483216}
!3158 = !DILocation(line: 29, column: 1, scope: !3152)
!3159 = !{i64 2152483548, i64 2152483568, i64 2152483631}
!3160 = !DILocation(line: 30, column: 1, scope: !3152)
!3161 = !{i64 2152488028, i64 2152488048, i64 2152488111}
!3162 = !DILocation(line: 31, column: 1, scope: !3152)
!3163 = !{i64 2152488447, i64 2152488467, i64 2152488530}
!3164 = !DILocation(line: 33, column: 1, scope: !3152)
!3165 = !{i64 2152488739, i64 2152488759, i64 2152488822}
!3166 = !DILocation(line: 35, column: 1, scope: !3152)
!3167 = !{i64 2152489064, i64 2152489084, i64 2152489147}
!3168 = !DILocation(line: 50, column: 1, scope: !3152)
!3169 = !{i64 2152489491, i64 2152489511, i64 2152489574}
!3170 = !DILocation(line: 54, column: 1, scope: !3152)
!3171 = !{i64 2152489930, i64 2152489950, i64 2152490013}
!3172 = !DILocation(line: 61, column: 1, scope: !3152)
!3173 = !{i64 2152490247, i64 2152490267, i64 2152490330}
!3174 = !DILocation(line: 63, column: 1, scope: !3152)
!3175 = !{i64 2152490627, i64 2152490647, i64 2152490710}
!3176 = !DILocation(line: 64, column: 1, scope: !3152)
!3177 = !{i64 2152491149, i64 2152491169, i64 2152491232}
!3178 = !DILocation(line: 65, column: 1, scope: !3152)
!3179 = !{i64 2152491647, i64 2152491667, i64 2152491730}
!3180 = !DILocation(line: 66, column: 1, scope: !3152)
!3181 = !{i64 2152492129, i64 2152492149, i64 2152492212}
!3182 = !DILocation(line: 67, column: 1, scope: !3152)
!3183 = !{i64 2152492636, i64 2152492656, i64 2152492719}
!3184 = !DILocation(line: 68, column: 1, scope: !3152)
!3185 = !{i64 2152493124, i64 2152493144, i64 2152493207}
!3186 = !DILocation(line: 70, column: 1, scope: !3152)
!3187 = !{i64 2152493592, i64 2152493612, i64 2152493675}
!3188 = !DILocation(line: 71, column: 1, scope: !3152)
!3189 = !{i64 2152494034, i64 2152494054, i64 2152494117}
!3190 = !DILocation(line: 72, column: 1, scope: !3152)
!3191 = !{i64 2152494492, i64 2152494512, i64 2152494575}
!3192 = !DILocation(line: 79, column: 1, scope: !3152)
!3193 = !{i64 2152494946, i64 2152494966, i64 2152495029}
!3194 = !DILocation(line: 80, column: 1, scope: !3152)
!3195 = !{i64 2152495457, i64 2152495477, i64 2152495540}
!3196 = !DILocation(line: 82, column: 1, scope: !3152)
!3197 = !{i64 2152495948, i64 2152495968, i64 2152496031}
!3198 = !DILocation(line: 97, column: 1, scope: !3152)
!3199 = !{i64 2152496285, i64 2152496305, i64 2152496368}
!3200 = !DILocation(line: 99, column: 1, scope: !3152)
!3201 = !{i64 2152496503, i64 2152496523, i64 2152496586}
!3202 = !DILocation(line: 102, column: 1, scope: !3152)
!3203 = !{i64 2152496760, i64 2152496780, i64 2152496843}
!3204 = !DILocation(line: 105, column: 1, scope: !3152)
!3205 = !{i64 2152497000, i64 2152497020, i64 2152497083}
!3206 = !DILocation(line: 115, column: 1, scope: !3152)
!3207 = !{i64 2152497339, i64 2152497359, i64 2152497422}
!3208 = !DILocation(line: 118, column: 1, scope: !3152)
!3209 = !{i64 2152501744, i64 2152501764, i64 2152501827}
!3210 = !DILocation(line: 32, column: 1, scope: !3211)
!3211 = !DILexicalBlockFile(scope: !3152, file: !3212, discriminator: 0)
!3212 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3213 = !{i64 2152502100, i64 2152502120, i64 2152502183}
!3214 = !DILocation(line: 33, column: 1, scope: !3211)
!3215 = !{i64 2152502612, i64 2152502632, i64 2152502695}
!3216 = !DILocation(line: 53, column: 1, scope: !3211)
!3217 = !{i64 2152503120, i64 2152503140, i64 2152503203}
!3218 = !DILocation(line: 54, column: 1, scope: !3211)
!3219 = !{i64 2152503538, i64 2152503558, i64 2152503621}
!3220 = !DILocation(line: 55, column: 1, scope: !3211)
!3221 = !{i64 2152503956, i64 2152503976, i64 2152504039}
!3222 = !DILocation(line: 56, column: 1, scope: !3211)
!3223 = !{i64 2152504374, i64 2152504394, i64 2152504457}
!3224 = !DILocation(line: 57, column: 1, scope: !3211)
!3225 = !{i64 2152504792, i64 2152504812, i64 2152504875}
!3226 = !DILocation(line: 58, column: 1, scope: !3211)
!3227 = !{i64 2152505210, i64 2152505230, i64 2152505293}
!3228 = !DILocation(line: 59, column: 1, scope: !3211)
!3229 = !{i64 2152505628, i64 2152505648, i64 2152505711}
!3230 = !DILocation(line: 60, column: 1, scope: !3211)
!3231 = !{i64 2152506052, i64 2152506072, i64 2152506135}
!3232 = !DILocation(line: 61, column: 1, scope: !3211)
!3233 = !{i64 2152506369, i64 2152506389, i64 2152506452}
!3234 = !DILocation(line: 70, column: 1, scope: !3211)
!3235 = !{i64 2152506598, i64 2152506618, i64 2152506681}
!3236 = !DILocation(line: 72, column: 1, scope: !3211)
!3237 = !{i64 2152506930, i64 2152506950, i64 2152507013}
!3238 = !DILocation(line: 73, column: 1, scope: !3211)
!3239 = !{i64 2152507380, i64 2152507400, i64 2152507463}
!3240 = !DILocation(line: 74, column: 1, scope: !3211)
!3241 = !{i64 2152507830, i64 2152507850, i64 2152507913}
!3242 = !DILocation(line: 75, column: 1, scope: !3211)
!3243 = !{i64 2152508280, i64 2152508300, i64 2152508363}
!3244 = !DILocation(line: 76, column: 1, scope: !3211)
!3245 = !{i64 2152508730, i64 2152508750, i64 2152508813}
!3246 = !DILocation(line: 77, column: 1, scope: !3211)
!3247 = !{i64 2152509180, i64 2152509200, i64 2152509263}
!3248 = !DILocation(line: 78, column: 1, scope: !3211)
!3249 = !{i64 2152509630, i64 2152509650, i64 2152509713}
!3250 = !DILocation(line: 79, column: 1, scope: !3211)
!3251 = !{i64 2152510080, i64 2152510100, i64 2152510163}
!3252 = !DILocation(line: 80, column: 1, scope: !3211)
!3253 = !{i64 2152510533, i64 2152510553, i64 2152510616}
!3254 = !DILocation(line: 84, column: 1, scope: !3211)
!3255 = !{i64 2152514926, i64 2152514946, i64 2152515009}
!3256 = !DILocation(line: 91, column: 1, scope: !3211)
!3257 = !{i64 2152515323, i64 2152515343, i64 2152515406}
!3258 = !DILocation(line: 93, column: 1, scope: !3211)
!3259 = !{i64 2152515690, i64 2152515710, i64 2152515773}
!3260 = !DILocation(line: 106, column: 1, scope: !3211)
!3261 = !{i64 2152515960, i64 2152515980, i64 2152516043}
!3262 = !DILocation(line: 11, column: 1, scope: !3263)
!3263 = !DILexicalBlockFile(scope: !3152, file: !3264, discriminator: 0)
!3264 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3265 = distinct !DISubprogram(name: "main", scope: !3266, file: !3266, line: 12, type: !3154, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !3267)
!3266 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3267 = !{!3268}
!3268 = !DILocalVariable(name: "s", scope: !3269, file: !3266, line: 19, type: !357)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !3266, line: 18, column: 12)
!3270 = !DILocation(line: 14, column: 2, scope: !3265)
!3271 = !DILocation(line: 16, column: 2, scope: !3265)
!3272 = !DILocation(line: 18, column: 2, scope: !3265)
!3273 = !DILocation(line: 19, column: 13, scope: !3269)
!3274 = !DILocation(line: 0, scope: !3269)
!3275 = !DILocation(line: 21, column: 3, scope: !3269)
!3276 = !DILocation(line: 22, column: 37, scope: !3269)
!3277 = !DILocation(line: 22, column: 47, scope: !3269)
!3278 = !DILocation(line: 22, column: 35, scope: !3269)
!3279 = !DILocation(line: 22, column: 3, scope: !3269)
!3280 = distinct !{!3280, !3272, !3281}
!3281 = !DILocation(line: 23, column: 2, scope: !3265)
!3282 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3283)
!3283 = !{!3284}
!3284 = !DILocalVariable(name: "c", arg: 1, scope: !3282, file: !105, line: 45, type: !103)
!3285 = !DILocation(line: 0, scope: !3282)
!3286 = !DILocation(line: 50, column: 2, scope: !3282)
!3287 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3288, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !106}
!3290 = !{!3291}
!3291 = !DILocalVariable(name: "fn", arg: 1, scope: !3287, file: !105, line: 63, type: !106)
!3292 = !DILocation(line: 0, scope: !3287)
!3293 = !DILocation(line: 65, column: 12, scope: !3287)
!3294 = !DILocation(line: 66, column: 1, scope: !3287)
!3295 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3296, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !330)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!102}
!3298 = !DILocation(line: 78, column: 9, scope: !3295)
!3299 = !DILocation(line: 78, column: 2, scope: !3295)
!3300 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3301, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3310)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{null, !157, !3303}
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3304, line: 99, baseType: !3305)
!3304 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3304, line: 40, baseType: !3306)
!3306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3307)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3308)
!3308 = !{!3309}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3307, file: !105, line: 79, baseType: !102, size: 32)
!3310 = !{!3311, !3312, !3313}
!3311 = !DILocalVariable(name: "fmt", arg: 1, scope: !3300, file: !105, line: 113, type: !157)
!3312 = !DILocalVariable(name: "ap", arg: 2, scope: !3300, file: !105, line: 113, type: !3303)
!3313 = !DILocalVariable(name: "ctx", scope: !3314, file: !105, line: 121, type: !3316)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !105, line: 120, column: 27)
!3315 = distinct !DILexicalBlock(scope: !3300, file: !105, line: 120, column: 6)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3316, file: !105, line: 85, baseType: !32, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3316, file: !105, line: 86, baseType: !3320, offset: 32)
!3320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, elements: !2579)
!3321 = !DILocation(line: 0, scope: !3300)
!3322 = !DILocation(line: 148, column: 3, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3315, file: !105, line: 138, column: 9)
!3324 = !DILocation(line: 155, column: 1, scope: !3300)
!3325 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3326, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3328)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!103, !103, !102}
!3328 = !{!3329, !3330}
!3329 = !DILocalVariable(name: "c", arg: 1, scope: !3325, file: !105, line: 107, type: !103)
!3330 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3325, file: !105, line: 107, type: !102)
!3331 = !DILocation(line: 0, scope: !3325)
!3332 = !DILocation(line: 110, column: 9, scope: !3325)
!3333 = !DILocation(line: 110, column: 2, scope: !3325)
!3334 = distinct !DISubprogram(name: "cbvprintf", scope: !3335, file: !3335, line: 739, type: !3336, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3342)
!3335 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!103, !3338, !102, !157, !3303}
!3338 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3335, line: 297, baseType: !3339)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!103, null}
!3342 = !{!3343, !3344, !3345, !3346}
!3343 = !DILocalVariable(name: "out", arg: 1, scope: !3334, file: !3335, line: 739, type: !3338)
!3344 = !DILocalVariable(name: "ctx", arg: 2, scope: !3334, file: !3335, line: 739, type: !102)
!3345 = !DILocalVariable(name: "format", arg: 3, scope: !3334, file: !3335, line: 739, type: !157)
!3346 = !DILocalVariable(name: "ap", arg: 4, scope: !3334, file: !3335, line: 739, type: !3303)
!3347 = !DILocation(line: 0, scope: !3334)
!3348 = !DILocation(line: 741, column: 9, scope: !3334)
!3349 = !DILocation(line: 741, column: 2, scope: !3334)
!3350 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3351, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3353)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{null, !357, !217}
!3353 = !{!3354, !3355, !3356}
!3354 = !DILocalVariable(name: "c", arg: 1, scope: !3350, file: !105, line: 157, type: !357)
!3355 = !DILocalVariable(name: "n", arg: 2, scope: !3350, file: !105, line: 157, type: !217)
!3356 = !DILocalVariable(name: "i", scope: !3350, file: !105, line: 159, type: !217)
!3357 = !DILocation(line: 0, scope: !3350)
!3358 = !DILocation(line: 164, column: 16, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !105, line: 164, column: 2)
!3360 = distinct !DILexicalBlock(scope: !3350, file: !105, line: 164, column: 2)
!3361 = !DILocation(line: 164, column: 2, scope: !3360)
!3362 = !DILocation(line: 165, column: 3, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !105, line: 164, column: 26)
!3364 = !DILocation(line: 165, column: 13, scope: !3363)
!3365 = !DILocation(line: 164, column: 22, scope: !3359)
!3366 = distinct !{!3366, !3361, !3367}
!3367 = !DILocation(line: 166, column: 2, scope: !3360)
!3368 = !DILocation(line: 171, column: 1, scope: !3350)
!3369 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3370, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3372)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{null, !157, null}
!3372 = !{!3373, !3374}
!3373 = !DILocalVariable(name: "fmt", arg: 1, scope: !3369, file: !105, line: 203, type: !157)
!3374 = !DILocalVariable(name: "ap", scope: !3369, file: !105, line: 205, type: !3303)
!3375 = !DILocation(line: 0, scope: !3369)
!3376 = !DILocation(line: 205, column: 2, scope: !3369)
!3377 = !DILocation(line: 205, column: 10, scope: !3369)
!3378 = !DILocation(line: 207, column: 2, scope: !3369)
!3379 = !DILocation(line: 209, column: 2, scope: !3369)
!3380 = !DILocation(line: 211, column: 2, scope: !3369)
!3381 = !DILocation(line: 212, column: 1, scope: !3369)
!3382 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3383, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3385)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!103, !357, !217, !157, null}
!3385 = !{!3386, !3387, !3388, !3389, !3390}
!3386 = !DILocalVariable(name: "str", arg: 1, scope: !3382, file: !105, line: 239, type: !357)
!3387 = !DILocalVariable(name: "size", arg: 2, scope: !3382, file: !105, line: 239, type: !217)
!3388 = !DILocalVariable(name: "fmt", arg: 3, scope: !3382, file: !105, line: 239, type: !157)
!3389 = !DILocalVariable(name: "ap", scope: !3382, file: !105, line: 241, type: !3303)
!3390 = !DILocalVariable(name: "ret", scope: !3382, file: !105, line: 242, type: !103)
!3391 = !DILocation(line: 0, scope: !3382)
!3392 = !DILocation(line: 241, column: 2, scope: !3382)
!3393 = !DILocation(line: 241, column: 10, scope: !3382)
!3394 = !DILocation(line: 244, column: 2, scope: !3382)
!3395 = !DILocation(line: 245, column: 8, scope: !3382)
!3396 = !DILocation(line: 246, column: 2, scope: !3382)
!3397 = !DILocation(line: 249, column: 1, scope: !3382)
!3398 = !DILocation(line: 248, column: 2, scope: !3382)
!3399 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3400, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3402)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!103, !357, !217, !157, !3303}
!3402 = !{!3403, !3404, !3405, !3406, !3407}
!3403 = !DILocalVariable(name: "str", arg: 1, scope: !3399, file: !105, line: 251, type: !357)
!3404 = !DILocalVariable(name: "size", arg: 2, scope: !3399, file: !105, line: 251, type: !217)
!3405 = !DILocalVariable(name: "fmt", arg: 3, scope: !3399, file: !105, line: 251, type: !157)
!3406 = !DILocalVariable(name: "ap", arg: 4, scope: !3399, file: !105, line: 251, type: !3303)
!3407 = !DILocalVariable(name: "ctx", scope: !3399, file: !105, line: 253, type: !3408)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3409)
!3409 = !{!3410, !3411, !3412}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3408, file: !105, line: 218, baseType: !357, size: 32)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3408, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3408, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3413 = !DILocation(line: 0, scope: !3399)
!3414 = !DILocation(line: 253, column: 2, scope: !3399)
!3415 = !DILocation(line: 253, column: 21, scope: !3399)
!3416 = !DILocation(line: 253, column: 27, scope: !3399)
!3417 = !DILocation(line: 255, column: 2, scope: !3399)
!3418 = !DILocation(line: 257, column: 10, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3399, file: !105, line: 257, column: 6)
!3420 = !DILocation(line: 257, column: 22, scope: !3419)
!3421 = !DILocation(line: 257, column: 16, scope: !3419)
!3422 = !DILocation(line: 257, column: 6, scope: !3399)
!3423 = !DILocation(line: 258, column: 3, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3419, file: !105, line: 257, column: 27)
!3425 = !DILocation(line: 258, column: 18, scope: !3424)
!3426 = !DILocation(line: 259, column: 2, scope: !3424)
!3427 = !DILocation(line: 262, column: 1, scope: !3399)
!3428 = !DILocation(line: 261, column: 2, scope: !3399)
!3429 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3430, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3433)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{!103, !103, !3432}
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 32)
!3433 = !{!3434, !3435}
!3434 = !DILocalVariable(name: "c", arg: 1, scope: !3429, file: !105, line: 223, type: !103)
!3435 = !DILocalVariable(name: "ctx", arg: 2, scope: !3429, file: !105, line: 223, type: !3432)
!3436 = !DILocation(line: 0, scope: !3429)
!3437 = !DILocation(line: 225, column: 11, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3429, file: !105, line: 225, column: 6)
!3439 = !DILocation(line: 225, column: 15, scope: !3438)
!3440 = !DILocation(line: 0, scope: !3438)
!3441 = !DILocation(line: 225, column: 23, scope: !3438)
!3442 = !DILocation(line: 225, column: 45, scope: !3438)
!3443 = !DILocation(line: 225, column: 37, scope: !3438)
!3444 = !DILocation(line: 225, column: 6, scope: !3429)
!3445 = !DILocation(line: 226, column: 8, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3438, file: !105, line: 225, column: 50)
!3447 = !DILocation(line: 226, column: 13, scope: !3446)
!3448 = !DILocation(line: 227, column: 3, scope: !3446)
!3449 = !DILocation(line: 230, column: 29, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3429, file: !105, line: 230, column: 6)
!3451 = !DILocation(line: 230, column: 17, scope: !3450)
!3452 = !DILocation(line: 230, column: 6, scope: !3429)
!3453 = !DILocation(line: 231, column: 22, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3450, file: !105, line: 230, column: 34)
!3455 = !DILocation(line: 231, column: 3, scope: !3454)
!3456 = !DILocation(line: 231, column: 26, scope: !3454)
!3457 = !DILocation(line: 232, column: 2, scope: !3454)
!3458 = !DILocation(line: 233, column: 28, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3450, file: !105, line: 232, column: 9)
!3460 = !DILocation(line: 233, column: 22, scope: !3459)
!3461 = !DILocation(line: 233, column: 3, scope: !3459)
!3462 = !DILocation(line: 233, column: 26, scope: !3459)
!3463 = !DILocation(line: 237, column: 1, scope: !3429)
!3464 = distinct !DISubprogram(name: "z_thread_entry", scope: !3465, file: !3465, line: 30, type: !3466, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3473)
!3465 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !3468, !102, !102, !102}
!3468 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3469, line: 46, baseType: !3470)
!3469 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 32)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !102, !102, !102}
!3473 = !{!3474, !3475, !3476, !3477}
!3474 = !DILocalVariable(name: "entry", arg: 1, scope: !3464, file: !3465, line: 30, type: !3468)
!3475 = !DILocalVariable(name: "p1", arg: 2, scope: !3464, file: !3465, line: 31, type: !102)
!3476 = !DILocalVariable(name: "p2", arg: 3, scope: !3464, file: !3465, line: 31, type: !102)
!3477 = !DILocalVariable(name: "p3", arg: 4, scope: !3464, file: !3465, line: 31, type: !102)
!3478 = !DILocation(line: 0, scope: !3464)
!3479 = !DILocation(line: 36, column: 2, scope: !3464)
!3480 = !DILocation(line: 38, column: 17, scope: !3464)
!3481 = !DILocation(line: 38, column: 2, scope: !3464)
!3482 = !DILocation(line: 45, column: 2, scope: !3464)
!3483 = distinct !DISubprogram(name: "k_current_get", scope: !309, file: !309, line: 530, type: !3484, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !330)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!3486}
!3486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !392, line: 347, baseType: !3487)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 32)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !3489)
!3489 = !{!3490, !3548, !3560, !3561, !3562, !3563, !3569, !3582}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3488, file: !392, line: 247, baseType: !3491, size: 384)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !3492)
!3492 = !{!3493, !3517, !3524, !3525, !3526, !3535, !3536, !3537}
!3493 = !DIDerivedType(tag: DW_TAG_member, scope: !3491, file: !392, line: 60, baseType: !3494, size: 64)
!3494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3491, file: !392, line: 60, size: 64, elements: !3495)
!3495 = !{!3496, !3511}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3494, file: !392, line: 61, baseType: !3497, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !3498)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !3499)
!3499 = !{!3500, !3506}
!3500 = !DIDerivedType(tag: DW_TAG_member, scope: !3498, file: !338, line: 38, baseType: !3501, size: 32)
!3501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3498, file: !338, line: 38, size: 32, elements: !3502)
!3502 = !{!3503, !3505}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3501, file: !338, line: 39, baseType: !3504, size: 32)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3501, file: !338, line: 40, baseType: !3504, size: 32)
!3506 = !DIDerivedType(tag: DW_TAG_member, scope: !3498, file: !338, line: 42, baseType: !3507, size: 32, offset: 32)
!3507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3498, file: !338, line: 42, size: 32, elements: !3508)
!3508 = !{!3509, !3510}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3507, file: !338, line: 43, baseType: !3504, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3507, file: !338, line: 44, baseType: !3504, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3494, file: !392, line: 62, baseType: !3512, size: 64)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !3513)
!3513 = !{!3514}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3512, file: !417, line: 50, baseType: !3515, size: 64)
!3515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3516, size: 64, elements: !376)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3491, file: !392, line: 68, baseType: !3518, size: 32, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 32)
!3519 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !3520)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !3521)
!3521 = !{!3522}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3520, file: !333, line: 232, baseType: !3523, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !3498)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3491, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3491, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!3526 = !DIDerivedType(tag: DW_TAG_member, scope: !3491, file: !392, line: 90, baseType: !3527, size: 16, offset: 112)
!3527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3491, file: !392, line: 90, size: 16, elements: !3528)
!3528 = !{!3529, !3534}
!3529 = !DIDerivedType(tag: DW_TAG_member, scope: !3527, file: !392, line: 91, baseType: !3530, size: 16)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3527, file: !392, line: 91, size: 16, elements: !3531)
!3531 = !{!3532, !3533}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3530, file: !392, line: 96, baseType: !438, size: 8)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3530, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3527, file: !392, line: 100, baseType: !442, size: 16)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3491, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3491, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3491, file: !392, line: 131, baseType: !3538, size: 192, offset: 192)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !3539)
!3539 = !{!3540, !3541, !3547}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3538, file: !333, line: 245, baseType: !3497, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3538, file: !333, line: 246, baseType: !3542, size: 32, offset: 64)
!3542 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !3543)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 32)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{null, !3546}
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3538, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3488, file: !392, line: 250, baseType: !3549, size: 288, offset: 384)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !3550)
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3549, file: !459, line: 26, baseType: !121, size: 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3549, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3549, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3549, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3549, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3549, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3549, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3549, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3549, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3488, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3488, file: !392, line: 256, baseType: !3519, size: 64, offset: 704)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3488, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3488, file: !392, line: 300, baseType: !3564, size: 96, offset: 800)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !3565)
!3565 = !{!3566, !3567, !3568}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3564, file: !392, line: 153, baseType: !22, size: 32)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3564, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3564, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3488, file: !392, line: 325, baseType: !3570, size: 32, offset: 896)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 32)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !3572)
!3572 = !{!3573, !3579, !3580}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3571, file: !309, line: 5074, baseType: !3574, size: 96)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !3575)
!3575 = !{!3576, !3577, !3578}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3574, file: !485, line: 57, baseType: !488, size: 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3574, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3574, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3571, file: !309, line: 5075, baseType: !3519, size: 64, offset: 96)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3571, file: !309, line: 5076, baseType: !3581, offset: 160)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3488, file: !392, line: 343, baseType: !3583, size: 64, offset: 928)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !3584)
!3584 = !{!3585, !3586}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3583, file: !459, line: 63, baseType: !121, size: 32)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3583, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!3587 = !DILocation(line: 535, column: 9, scope: !3483)
!3588 = !DILocation(line: 535, column: 2, scope: !3483)
!3589 = distinct !DISubprogram(name: "k_thread_abort", scope: !3590, file: !3590, line: 188, type: !3591, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !3593)
!3590 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!3591 = !DISubroutineType(types: !3592)
!3592 = !{null, !3486}
!3593 = !{!3594}
!3594 = !DILocalVariable(name: "thread", arg: 1, scope: !3589, file: !3590, line: 188, type: !3486)
!3595 = !DILocation(line: 0, scope: !3589)
!3596 = !DILocation(line: 197, column: 2, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3589, file: !3590, line: 197, column: 2)
!3598 = !{i64 2152212449}
!3599 = !DILocation(line: 198, column: 2, scope: !3589)
!3600 = !DILocation(line: 199, column: 1, scope: !3589)
!3601 = distinct !DISubprogram(name: "z_current_get", scope: !3590, file: !3590, line: 173, type: !3484, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !330)
!3602 = !DILocation(line: 180, column: 2, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3601, file: !3590, line: 180, column: 2)
!3604 = !{i64 2152212381}
!3605 = !DILocation(line: 181, column: 9, scope: !3601)
!3606 = !DILocation(line: 181, column: 2, scope: !3601)
!3607 = distinct !DISubprogram(name: "sys_heap_free", scope: !3608, file: !3608, line: 163, type: !3609, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3617)
!3608 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3609 = !DISubroutineType(types: !3610)
!3610 = !{null, !3611, !102}
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 32)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !3613)
!3613 = !{!3614, !3615, !3616}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3612, file: !485, line: 57, baseType: !2566, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3612, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3612, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!3617 = !{!3618, !3619, !3620, !3621}
!3618 = !DILocalVariable(name: "heap", arg: 1, scope: !3607, file: !3608, line: 163, type: !3611)
!3619 = !DILocalVariable(name: "mem", arg: 2, scope: !3607, file: !3608, line: 163, type: !102)
!3620 = !DILocalVariable(name: "h", scope: !3607, file: !3608, line: 168, type: !2566)
!3621 = !DILocalVariable(name: "c", scope: !3607, file: !3608, line: 169, type: !2571)
!3622 = !DILocation(line: 0, scope: !3607)
!3623 = !DILocation(line: 165, column: 10, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3607, file: !3608, line: 165, column: 6)
!3625 = !DILocation(line: 165, column: 6, scope: !3607)
!3626 = !DILocation(line: 168, column: 27, scope: !3607)
!3627 = !DILocation(line: 169, column: 16, scope: !3607)
!3628 = !{i32 0, i32 536870912}
!3629 = !DILocation(line: 187, column: 2, scope: !3607)
!3630 = !DILocation(line: 197, column: 2, scope: !3607)
!3631 = !DILocation(line: 198, column: 1, scope: !3607)
!3632 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3608, file: !3608, line: 157, type: !3633, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3635)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!2571, !2566, !102}
!3635 = !{!3636, !3637, !3638, !3639}
!3636 = !DILocalVariable(name: "h", arg: 1, scope: !3632, file: !3608, line: 157, type: !2566)
!3637 = !DILocalVariable(name: "p", arg: 2, scope: !3632, file: !3608, line: 157, type: !102)
!3638 = !DILocalVariable(name: "mem", scope: !3632, file: !3608, line: 159, type: !280)
!3639 = !DILocalVariable(name: "base", scope: !3632, file: !3608, line: 159, type: !280)
!3640 = !DILocation(line: 0, scope: !3632)
!3641 = !DILocation(line: 159, column: 39, scope: !3632)
!3642 = !DILocation(line: 160, column: 14, scope: !3632)
!3643 = !DILocation(line: 160, column: 38, scope: !3632)
!3644 = !DILocation(line: 160, column: 46, scope: !3632)
!3645 = !DILocation(line: 160, column: 2, scope: !3632)
!3646 = distinct !DISubprogram(name: "set_chunk_used", scope: !2553, file: !2553, line: 147, type: !3647, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3649)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{null, !2566, !2571, !170}
!3649 = !{!3650, !3651, !3652, !3653, !3654}
!3650 = !DILocalVariable(name: "h", arg: 1, scope: !3646, file: !2553, line: 147, type: !2566)
!3651 = !DILocalVariable(name: "c", arg: 2, scope: !3646, file: !2553, line: 147, type: !2571)
!3652 = !DILocalVariable(name: "used", arg: 3, scope: !3646, file: !2553, line: 147, type: !170)
!3653 = !DILocalVariable(name: "buf", scope: !3646, file: !2553, line: 149, type: !2560)
!3654 = !DILocalVariable(name: "cmem", scope: !3646, file: !2553, line: 150, type: !102)
!3655 = !DILocation(line: 0, scope: !3646)
!3656 = !DILocation(line: 149, column: 22, scope: !3646)
!3657 = !DILocation(line: 0, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !2553, line: 159, column: 7)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !2553, line: 158, column: 9)
!3660 = distinct !DILexicalBlock(scope: !3646, file: !2553, line: 152, column: 6)
!3661 = !DILocation(line: 159, column: 7, scope: !3659)
!3662 = !DILocation(line: 165, column: 1, scope: !3646)
!3663 = distinct !DISubprogram(name: "free_chunk", scope: !3608, file: !3608, line: 133, type: !3664, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3666)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{null, !2566, !2571}
!3666 = !{!3667, !3668}
!3667 = !DILocalVariable(name: "h", arg: 1, scope: !3663, file: !3608, line: 133, type: !2566)
!3668 = !DILocalVariable(name: "c", arg: 2, scope: !3663, file: !3608, line: 133, type: !2571)
!3669 = !DILocation(line: 0, scope: !3663)
!3670 = !DILocation(line: 136, column: 21, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3663, file: !3608, line: 136, column: 6)
!3672 = !DILocation(line: 136, column: 7, scope: !3671)
!3673 = !DILocation(line: 136, column: 6, scope: !3663)
!3674 = !DILocation(line: 137, column: 3, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3671, file: !3608, line: 136, column: 41)
!3676 = !DILocation(line: 138, column: 22, scope: !3675)
!3677 = !DILocation(line: 138, column: 3, scope: !3675)
!3678 = !DILocation(line: 139, column: 2, scope: !3675)
!3679 = !DILocation(line: 142, column: 21, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3663, file: !3608, line: 142, column: 6)
!3681 = !{i32 -65535, i32 536903678}
!3682 = !DILocation(line: 142, column: 7, scope: !3680)
!3683 = !DILocation(line: 142, column: 6, scope: !3663)
!3684 = !DILocation(line: 143, column: 3, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3680, file: !3608, line: 142, column: 40)
!3686 = !DILocation(line: 144, column: 19, scope: !3685)
!3687 = !DILocation(line: 144, column: 3, scope: !3685)
!3688 = !DILocation(line: 145, column: 7, scope: !3685)
!3689 = !DILocation(line: 146, column: 2, scope: !3685)
!3690 = !DILocation(line: 148, column: 2, scope: !3663)
!3691 = !DILocation(line: 149, column: 1, scope: !3663)
!3692 = distinct !DISubprogram(name: "right_chunk", scope: !2553, file: !2553, line: 204, type: !3693, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3695)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!2571, !2566, !2571}
!3695 = !{!3696, !3697}
!3696 = !DILocalVariable(name: "h", arg: 1, scope: !3692, file: !2553, line: 204, type: !2566)
!3697 = !DILocalVariable(name: "c", arg: 2, scope: !3692, file: !2553, line: 204, type: !2571)
!3698 = !DILocation(line: 0, scope: !3692)
!3699 = !DILocation(line: 206, column: 13, scope: !3692)
!3700 = !DILocation(line: 206, column: 11, scope: !3692)
!3701 = !DILocation(line: 206, column: 2, scope: !3692)
!3702 = distinct !DISubprogram(name: "chunk_used", scope: !2553, file: !2553, line: 137, type: !3703, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3705)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!170, !2566, !2571}
!3705 = !{!3706, !3707}
!3706 = !DILocalVariable(name: "h", arg: 1, scope: !3702, file: !2553, line: 137, type: !2566)
!3707 = !DILocalVariable(name: "c", arg: 2, scope: !3702, file: !2553, line: 137, type: !2571)
!3708 = !DILocation(line: 0, scope: !3702)
!3709 = !DILocation(line: 139, column: 9, scope: !3702)
!3710 = !DILocation(line: 139, column: 42, scope: !3702)
!3711 = !DILocation(line: 139, column: 2, scope: !3702)
!3712 = distinct !DISubprogram(name: "free_list_remove", scope: !3608, file: !3608, line: 60, type: !3664, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3713)
!3713 = !{!3714, !3715, !3716}
!3714 = !DILocalVariable(name: "h", arg: 1, scope: !3712, file: !3608, line: 60, type: !2566)
!3715 = !DILocalVariable(name: "c", arg: 2, scope: !3712, file: !3608, line: 60, type: !2571)
!3716 = !DILocalVariable(name: "bidx", scope: !3717, file: !3608, line: 63, type: !103)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !3608, line: 62, column: 31)
!3718 = distinct !DILexicalBlock(scope: !3712, file: !3608, line: 62, column: 6)
!3719 = !DILocation(line: 0, scope: !3712)
!3720 = !DILocation(line: 63, column: 28, scope: !3717)
!3721 = !{i32 0, i32 32768}
!3722 = !DILocation(line: 63, column: 14, scope: !3717)
!3723 = !DILocation(line: 0, scope: !3717)
!3724 = !DILocation(line: 64, column: 3, scope: !3717)
!3725 = !DILocation(line: 66, column: 1, scope: !3712)
!3726 = distinct !DISubprogram(name: "merge_chunks", scope: !3608, file: !3608, line: 125, type: !3727, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{null, !2566, !2571, !2571}
!3729 = !{!3730, !3731, !3732, !3733}
!3730 = !DILocalVariable(name: "h", arg: 1, scope: !3726, file: !3608, line: 125, type: !2566)
!3731 = !DILocalVariable(name: "lc", arg: 2, scope: !3726, file: !3608, line: 125, type: !2571)
!3732 = !DILocalVariable(name: "rc", arg: 3, scope: !3726, file: !3608, line: 125, type: !2571)
!3733 = !DILocalVariable(name: "newsz", scope: !3726, file: !3608, line: 127, type: !3734)
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2553, line: 62, baseType: !121)
!3735 = !DILocation(line: 0, scope: !3726)
!3736 = !DILocation(line: 127, column: 20, scope: !3726)
!3737 = !DILocation(line: 127, column: 40, scope: !3726)
!3738 = !DILocation(line: 127, column: 38, scope: !3726)
!3739 = !DILocation(line: 129, column: 2, scope: !3726)
!3740 = !DILocation(line: 130, column: 25, scope: !3726)
!3741 = !DILocation(line: 130, column: 2, scope: !3726)
!3742 = !DILocation(line: 131, column: 1, scope: !3726)
!3743 = distinct !DISubprogram(name: "left_chunk", scope: !2553, file: !2553, line: 199, type: !3693, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3744)
!3744 = !{!3745, !3746}
!3745 = !DILocalVariable(name: "h", arg: 1, scope: !3743, file: !2553, line: 199, type: !2566)
!3746 = !DILocalVariable(name: "c", arg: 2, scope: !3743, file: !2553, line: 199, type: !2571)
!3747 = !DILocation(line: 0, scope: !3743)
!3748 = !DILocation(line: 201, column: 13, scope: !3743)
!3749 = !DILocation(line: 201, column: 11, scope: !3743)
!3750 = !DILocation(line: 201, column: 2, scope: !3743)
!3751 = distinct !DISubprogram(name: "free_list_add", scope: !3608, file: !3608, line: 98, type: !3664, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3752)
!3752 = !{!3753, !3754, !3755}
!3753 = !DILocalVariable(name: "h", arg: 1, scope: !3751, file: !3608, line: 98, type: !2566)
!3754 = !DILocalVariable(name: "c", arg: 2, scope: !3751, file: !3608, line: 98, type: !2571)
!3755 = !DILocalVariable(name: "bidx", scope: !3756, file: !3608, line: 101, type: !103)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !3608, line: 100, column: 31)
!3757 = distinct !DILexicalBlock(scope: !3751, file: !3608, line: 100, column: 6)
!3758 = !DILocation(line: 0, scope: !3751)
!3759 = !DILocation(line: 101, column: 28, scope: !3756)
!3760 = !DILocation(line: 101, column: 14, scope: !3756)
!3761 = !DILocation(line: 0, scope: !3756)
!3762 = !DILocation(line: 102, column: 3, scope: !3756)
!3763 = !DILocation(line: 104, column: 1, scope: !3751)
!3764 = distinct !DISubprogram(name: "chunk_size", scope: !2553, file: !2553, line: 142, type: !3765, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3767)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!3734, !2566, !2571}
!3767 = !{!3768, !3769}
!3768 = !DILocalVariable(name: "h", arg: 1, scope: !3764, file: !2553, line: 142, type: !2566)
!3769 = !DILocalVariable(name: "c", arg: 2, scope: !3764, file: !2553, line: 142, type: !2571)
!3770 = !DILocation(line: 0, scope: !3764)
!3771 = !DILocation(line: 144, column: 9, scope: !3764)
!3772 = !DILocation(line: 144, column: 42, scope: !3764)
!3773 = !DILocation(line: 144, column: 2, scope: !3764)
!3774 = distinct !DISubprogram(name: "bucket_idx", scope: !2553, file: !2553, line: 250, type: !3775, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3777)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!103, !2566, !3734}
!3777 = !{!3778, !3779, !3780}
!3778 = !DILocalVariable(name: "h", arg: 1, scope: !3774, file: !2553, line: 250, type: !2566)
!3779 = !DILocalVariable(name: "sz", arg: 2, scope: !3774, file: !2553, line: 250, type: !3734)
!3780 = !DILocalVariable(name: "usable_sz", scope: !3774, file: !2553, line: 252, type: !32)
!3781 = !DILocation(line: 0, scope: !3774)
!3782 = !DILocation(line: 252, column: 32, scope: !3774)
!3783 = !DILocation(line: 252, column: 30, scope: !3774)
!3784 = !DILocation(line: 252, column: 50, scope: !3774)
!3785 = !DILocation(line: 253, column: 14, scope: !3774)
!3786 = !{i32 0, i32 33}
!3787 = !DILocation(line: 253, column: 12, scope: !3774)
!3788 = !DILocation(line: 253, column: 2, scope: !3774)
!3789 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3608, file: !3608, line: 68, type: !3790, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{null, !2566, !2571, !103}
!3792 = !{!3793, !3794, !3795, !3796, !3798, !3801}
!3793 = !DILocalVariable(name: "h", arg: 1, scope: !3789, file: !3608, line: 68, type: !2566)
!3794 = !DILocalVariable(name: "c", arg: 2, scope: !3789, file: !3608, line: 68, type: !2571)
!3795 = !DILocalVariable(name: "bidx", arg: 3, scope: !3789, file: !3608, line: 68, type: !103)
!3796 = !DILocalVariable(name: "b", scope: !3789, file: !3608, line: 70, type: !3797)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!3798 = !DILocalVariable(name: "second", scope: !3799, file: !3608, line: 84, type: !2571)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3608, line: 80, column: 9)
!3800 = distinct !DILexicalBlock(scope: !3789, file: !3608, line: 72, column: 6)
!3801 = !DILocalVariable(name: "first", scope: !3799, file: !3608, line: 85, type: !2571)
!3802 = !DILocation(line: 0, scope: !3789)
!3803 = !DILocation(line: 72, column: 9, scope: !3800)
!3804 = !DILocation(line: 72, column: 14, scope: !3800)
!3805 = !DILocation(line: 72, column: 6, scope: !3789)
!3806 = !DILocation(line: 76, column: 23, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3800, file: !3608, line: 72, column: 21)
!3808 = !DILocation(line: 76, column: 6, scope: !3807)
!3809 = !DILocation(line: 76, column: 20, scope: !3807)
!3810 = !DILocation(line: 77, column: 11, scope: !3807)
!3811 = !DILocation(line: 78, column: 3, scope: !3807)
!3812 = !DILocation(line: 79, column: 3, scope: !3807)
!3813 = !DILocation(line: 80, column: 2, scope: !3807)
!3814 = !DILocation(line: 0, scope: !3799)
!3815 = !DILocation(line: 85, column: 21, scope: !3799)
!3816 = !{i32 0, i32 65536}
!3817 = !DILocation(line: 87, column: 3, scope: !3799)
!3818 = !DILocation(line: 88, column: 3, scope: !3799)
!3819 = !DILocation(line: 89, column: 3, scope: !3799)
!3820 = !DILocation(line: 90, column: 3, scope: !3799)
!3821 = !DILocation(line: 96, column: 1, scope: !3789)
!3822 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2553, file: !2553, line: 187, type: !3727, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3823)
!3823 = !{!3824, !3825, !3826}
!3824 = !DILocalVariable(name: "h", arg: 1, scope: !3822, file: !2553, line: 187, type: !2566)
!3825 = !DILocalVariable(name: "c", arg: 2, scope: !3822, file: !2553, line: 187, type: !2571)
!3826 = !DILocalVariable(name: "prev", arg: 3, scope: !3822, file: !2553, line: 188, type: !2571)
!3827 = !DILocation(line: 0, scope: !3822)
!3828 = !DILocation(line: 190, column: 2, scope: !3822)
!3829 = !DILocation(line: 191, column: 1, scope: !3822)
!3830 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2553, file: !2553, line: 193, type: !3727, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3831)
!3831 = !{!3832, !3833, !3834}
!3832 = !DILocalVariable(name: "h", arg: 1, scope: !3830, file: !2553, line: 193, type: !2566)
!3833 = !DILocalVariable(name: "c", arg: 2, scope: !3830, file: !2553, line: 193, type: !2571)
!3834 = !DILocalVariable(name: "next", arg: 3, scope: !3830, file: !2553, line: 194, type: !2571)
!3835 = !DILocation(line: 0, scope: !3830)
!3836 = !DILocation(line: 196, column: 2, scope: !3830)
!3837 = !DILocation(line: 197, column: 1, scope: !3830)
!3838 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2553, file: !2553, line: 177, type: !3693, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3839)
!3839 = !{!3840, !3841}
!3840 = !DILocalVariable(name: "h", arg: 1, scope: !3838, file: !2553, line: 177, type: !2566)
!3841 = !DILocalVariable(name: "c", arg: 2, scope: !3838, file: !2553, line: 177, type: !2571)
!3842 = !DILocation(line: 0, scope: !3838)
!3843 = !DILocation(line: 179, column: 9, scope: !3838)
!3844 = !DILocation(line: 179, column: 2, scope: !3838)
!3845 = distinct !DISubprogram(name: "chunk_field", scope: !2553, file: !2553, line: 107, type: !3846, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3848)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!2571, !2566, !2571, !2552}
!3848 = !{!3849, !3850, !3851, !3852, !3853}
!3849 = !DILocalVariable(name: "h", arg: 1, scope: !3845, file: !2553, line: 107, type: !2566)
!3850 = !DILocalVariable(name: "c", arg: 2, scope: !3845, file: !2553, line: 107, type: !2571)
!3851 = !DILocalVariable(name: "f", arg: 3, scope: !3845, file: !2553, line: 108, type: !2552)
!3852 = !DILocalVariable(name: "buf", scope: !3845, file: !2553, line: 110, type: !2560)
!3853 = !DILocalVariable(name: "cmem", scope: !3845, file: !2553, line: 111, type: !102)
!3854 = !DILocation(line: 0, scope: !3845)
!3855 = !DILocation(line: 110, column: 22, scope: !3845)
!3856 = !DILocation(line: 111, column: 15, scope: !3845)
!3857 = !DILocation(line: 116, column: 11, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !2553, line: 115, column: 9)
!3859 = distinct !DILexicalBlock(scope: !3845, file: !2553, line: 113, column: 6)
!3860 = !DILocation(line: 116, column: 10, scope: !3858)
!3861 = !DILocation(line: 118, column: 1, scope: !3845)
!3862 = distinct !DISubprogram(name: "chunk_buf", scope: !2553, file: !2553, line: 101, type: !3863, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3865)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!2560, !2566}
!3865 = !{!3866}
!3866 = !DILocalVariable(name: "h", arg: 1, scope: !3862, file: !2553, line: 101, type: !2566)
!3867 = !DILocation(line: 0, scope: !3862)
!3868 = !DILocation(line: 104, column: 9, scope: !3862)
!3869 = !DILocation(line: 104, column: 2, scope: !3862)
!3870 = distinct !DISubprogram(name: "chunk_set", scope: !2553, file: !2553, line: 120, type: !3871, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{null, !2566, !2571, !2552, !2571}
!3873 = !{!3874, !3875, !3876, !3877, !3878, !3879}
!3874 = !DILocalVariable(name: "h", arg: 1, scope: !3870, file: !2553, line: 120, type: !2566)
!3875 = !DILocalVariable(name: "c", arg: 2, scope: !3870, file: !2553, line: 120, type: !2571)
!3876 = !DILocalVariable(name: "f", arg: 3, scope: !3870, file: !2553, line: 121, type: !2552)
!3877 = !DILocalVariable(name: "val", arg: 4, scope: !3870, file: !2553, line: 121, type: !2571)
!3878 = !DILocalVariable(name: "buf", scope: !3870, file: !2553, line: 125, type: !2560)
!3879 = !DILocalVariable(name: "cmem", scope: !3870, file: !2553, line: 126, type: !102)
!3880 = !DILocation(line: 0, scope: !3870)
!3881 = !DILocation(line: 125, column: 22, scope: !3870)
!3882 = !DILocation(line: 126, column: 15, scope: !3870)
!3883 = !DILocation(line: 133, column: 27, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !2553, line: 131, column: 9)
!3885 = distinct !DILexicalBlock(scope: !3870, file: !2553, line: 128, column: 6)
!3886 = !DILocation(line: 133, column: 4, scope: !3884)
!3887 = !DILocation(line: 133, column: 3, scope: !3884)
!3888 = !DILocation(line: 133, column: 25, scope: !3884)
!3889 = !DILocation(line: 135, column: 1, scope: !3870)
!3890 = distinct !DISubprogram(name: "min_chunk_size", scope: !2553, file: !2553, line: 240, type: !3891, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!3734, !2566}
!3893 = !{!3894}
!3894 = !DILocalVariable(name: "h", arg: 1, scope: !3890, file: !2553, line: 240, type: !2566)
!3895 = !DILocation(line: 0, scope: !3890)
!3896 = !DILocation(line: 242, column: 9, scope: !3890)
!3897 = !DILocation(line: 242, column: 2, scope: !3890)
!3898 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2553, file: !2553, line: 235, type: !3899, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3901)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!3734, !2566, !217}
!3901 = !{!3902, !3903}
!3902 = !DILocalVariable(name: "h", arg: 1, scope: !3898, file: !2553, line: 235, type: !2566)
!3903 = !DILocalVariable(name: "bytes", arg: 2, scope: !3898, file: !2553, line: 235, type: !217)
!3904 = !DILocation(line: 0, scope: !3898)
!3905 = !DILocation(line: 237, column: 39, scope: !3898)
!3906 = !DILocation(line: 237, column: 9, scope: !3898)
!3907 = !DILocation(line: 237, column: 2, scope: !3898)
!3908 = distinct !DISubprogram(name: "chunksz", scope: !2553, file: !2553, line: 230, type: !3909, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3911)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!3734, !217}
!3911 = !{!3912}
!3912 = !DILocalVariable(name: "bytes", arg: 1, scope: !3908, file: !2553, line: 230, type: !217)
!3913 = !DILocation(line: 0, scope: !3908)
!3914 = !DILocation(line: 232, column: 29, scope: !3908)
!3915 = !DILocation(line: 232, column: 35, scope: !3908)
!3916 = !DILocation(line: 232, column: 2, scope: !3908)
!3917 = distinct !DISubprogram(name: "set_chunk_size", scope: !2553, file: !2553, line: 172, type: !3918, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3920)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{null, !2566, !2571, !3734}
!3920 = !{!3921, !3922, !3923}
!3921 = !DILocalVariable(name: "h", arg: 1, scope: !3917, file: !2553, line: 172, type: !2566)
!3922 = !DILocalVariable(name: "c", arg: 2, scope: !3917, file: !2553, line: 172, type: !2571)
!3923 = !DILocalVariable(name: "size", arg: 3, scope: !3917, file: !2553, line: 172, type: !3734)
!3924 = !DILocation(line: 0, scope: !3917)
!3925 = !DILocation(line: 174, column: 38, scope: !3917)
!3926 = !DILocation(line: 174, column: 2, scope: !3917)
!3927 = !DILocation(line: 175, column: 1, scope: !3917)
!3928 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2553, file: !2553, line: 209, type: !3918, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3929)
!3929 = !{!3930, !3931, !3932}
!3930 = !DILocalVariable(name: "h", arg: 1, scope: !3928, file: !2553, line: 209, type: !2566)
!3931 = !DILocalVariable(name: "c", arg: 2, scope: !3928, file: !2553, line: 209, type: !2571)
!3932 = !DILocalVariable(name: "size", arg: 3, scope: !3928, file: !2553, line: 210, type: !3734)
!3933 = !DILocation(line: 0, scope: !3928)
!3934 = !DILocation(line: 212, column: 2, scope: !3928)
!3935 = !DILocation(line: 213, column: 1, scope: !3928)
!3936 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3608, file: !3608, line: 34, type: !3790, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3937)
!3937 = !{!3938, !3939, !3940, !3941, !3942, !3945}
!3938 = !DILocalVariable(name: "h", arg: 1, scope: !3936, file: !3608, line: 34, type: !2566)
!3939 = !DILocalVariable(name: "c", arg: 2, scope: !3936, file: !3608, line: 34, type: !2571)
!3940 = !DILocalVariable(name: "bidx", arg: 3, scope: !3936, file: !3608, line: 34, type: !103)
!3941 = !DILocalVariable(name: "b", scope: !3936, file: !3608, line: 36, type: !3797)
!3942 = !DILocalVariable(name: "first", scope: !3943, file: !3608, line: 47, type: !2571)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !3608, line: 46, column: 9)
!3944 = distinct !DILexicalBlock(scope: !3936, file: !3608, line: 42, column: 6)
!3945 = !DILocalVariable(name: "second", scope: !3943, file: !3608, line: 48, type: !2571)
!3946 = !DILocation(line: 0, scope: !3936)
!3947 = !DILocation(line: 36, column: 29, scope: !3936)
!3948 = !DILocation(line: 42, column: 6, scope: !3944)
!3949 = !DILocation(line: 42, column: 28, scope: !3944)
!3950 = !DILocation(line: 42, column: 6, scope: !3936)
!3951 = !DILocation(line: 44, column: 24, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3944, file: !3608, line: 42, column: 34)
!3953 = !DILocation(line: 44, column: 23, scope: !3952)
!3954 = !DILocation(line: 44, column: 6, scope: !3952)
!3955 = !DILocation(line: 44, column: 20, scope: !3952)
!3956 = !DILocation(line: 45, column: 6, scope: !3952)
!3957 = !DILocation(line: 45, column: 11, scope: !3952)
!3958 = !DILocation(line: 46, column: 2, scope: !3952)
!3959 = !DILocation(line: 47, column: 21, scope: !3943)
!3960 = !DILocation(line: 0, scope: !3943)
!3961 = !DILocation(line: 50, column: 6, scope: !3943)
!3962 = !DILocation(line: 50, column: 11, scope: !3943)
!3963 = !DILocation(line: 51, column: 3, scope: !3943)
!3964 = !DILocation(line: 52, column: 3, scope: !3943)
!3965 = !DILocation(line: 58, column: 1, scope: !3936)
!3966 = distinct !DISubprogram(name: "next_free_chunk", scope: !2553, file: !2553, line: 182, type: !3693, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3967)
!3967 = !{!3968, !3969}
!3968 = !DILocalVariable(name: "h", arg: 1, scope: !3966, file: !2553, line: 182, type: !2566)
!3969 = !DILocalVariable(name: "c", arg: 2, scope: !3966, file: !2553, line: 182, type: !2571)
!3970 = !DILocation(line: 0, scope: !3966)
!3971 = !DILocation(line: 184, column: 9, scope: !3966)
!3972 = !DILocation(line: 184, column: 2, scope: !3966)
!3973 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3608, file: !3608, line: 200, type: !3974, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3976)
!3974 = !DISubroutineType(types: !3975)
!3975 = !{!217, !3611, !102}
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982, !3983}
!3977 = !DILocalVariable(name: "heap", arg: 1, scope: !3973, file: !3608, line: 200, type: !3611)
!3978 = !DILocalVariable(name: "mem", arg: 2, scope: !3973, file: !3608, line: 200, type: !102)
!3979 = !DILocalVariable(name: "h", scope: !3973, file: !3608, line: 202, type: !2566)
!3980 = !DILocalVariable(name: "c", scope: !3973, file: !3608, line: 203, type: !2571)
!3981 = !DILocalVariable(name: "addr", scope: !3973, file: !3608, line: 204, type: !217)
!3982 = !DILocalVariable(name: "chunk_base", scope: !3973, file: !3608, line: 205, type: !217)
!3983 = !DILocalVariable(name: "chunk_sz", scope: !3973, file: !3608, line: 206, type: !217)
!3984 = !DILocation(line: 0, scope: !3973)
!3985 = !DILocation(line: 202, column: 27, scope: !3973)
!3986 = !DILocation(line: 203, column: 16, scope: !3973)
!3987 = !DILocation(line: 204, column: 16, scope: !3973)
!3988 = !DILocation(line: 205, column: 31, scope: !3973)
!3989 = !DILocation(line: 205, column: 22, scope: !3973)
!3990 = !DILocation(line: 206, column: 20, scope: !3973)
!3991 = !DILocation(line: 206, column: 37, scope: !3973)
!3992 = !DILocation(line: 208, column: 26, scope: !3973)
!3993 = !DILocation(line: 208, column: 18, scope: !3973)
!3994 = !DILocation(line: 208, column: 2, scope: !3973)
!3995 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3608, file: !3608, line: 263, type: !3996, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !3998)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!102, !3611, !217}
!3998 = !{!3999, !4000, !4001, !4002, !4003, !4004}
!3999 = !DILocalVariable(name: "heap", arg: 1, scope: !3995, file: !3608, line: 263, type: !3611)
!4000 = !DILocalVariable(name: "bytes", arg: 2, scope: !3995, file: !3608, line: 263, type: !217)
!4001 = !DILocalVariable(name: "h", scope: !3995, file: !3608, line: 265, type: !2566)
!4002 = !DILocalVariable(name: "mem", scope: !3995, file: !3608, line: 266, type: !102)
!4003 = !DILocalVariable(name: "chunk_sz", scope: !3995, file: !3608, line: 272, type: !3734)
!4004 = !DILocalVariable(name: "c", scope: !3995, file: !3608, line: 273, type: !2571)
!4005 = !DILocation(line: 0, scope: !3995)
!4006 = !DILocation(line: 265, column: 27, scope: !3995)
!4007 = !DILocation(line: 268, column: 12, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3995, file: !3608, line: 268, column: 6)
!4009 = !DILocation(line: 268, column: 18, scope: !4008)
!4010 = !DILocation(line: 268, column: 21, scope: !4008)
!4011 = !DILocation(line: 268, column: 6, scope: !3995)
!4012 = !DILocation(line: 272, column: 23, scope: !3995)
!4013 = !DILocation(line: 273, column: 16, scope: !3995)
!4014 = !DILocation(line: 274, column: 8, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3995, file: !3608, line: 274, column: 6)
!4016 = !DILocation(line: 274, column: 6, scope: !3995)
!4017 = !DILocation(line: 279, column: 6, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3995, file: !3608, line: 279, column: 6)
!4019 = !DILocation(line: 279, column: 23, scope: !4018)
!4020 = !DILocation(line: 279, column: 6, scope: !3995)
!4021 = !DILocation(line: 280, column: 24, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4018, file: !3608, line: 279, column: 35)
!4023 = !DILocation(line: 280, column: 3, scope: !4022)
!4024 = !DILocation(line: 281, column: 3, scope: !4022)
!4025 = !DILocation(line: 282, column: 2, scope: !4022)
!4026 = !DILocation(line: 284, column: 2, scope: !3995)
!4027 = !DILocation(line: 286, column: 8, scope: !3995)
!4028 = !DILocation(line: 298, column: 2, scope: !3995)
!4029 = !DILocation(line: 299, column: 1, scope: !3995)
!4030 = distinct !DISubprogram(name: "size_too_big", scope: !2553, file: !2553, line: 256, type: !4031, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4033)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!170, !2566, !217}
!4033 = !{!4034, !4035}
!4034 = !DILocalVariable(name: "h", arg: 1, scope: !4030, file: !2553, line: 256, type: !2566)
!4035 = !DILocalVariable(name: "bytes", arg: 2, scope: !4030, file: !2553, line: 256, type: !217)
!4036 = !DILocation(line: 0, scope: !4030)
!4037 = !DILocation(line: 262, column: 16, scope: !4030)
!4038 = !DILocation(line: 262, column: 36, scope: !4030)
!4039 = !DILocation(line: 262, column: 30, scope: !4030)
!4040 = !DILocation(line: 262, column: 2, scope: !4030)
!4041 = distinct !DISubprogram(name: "alloc_chunk", scope: !3608, file: !3608, line: 211, type: !4042, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4044)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!2571, !2566, !3734}
!4044 = !{!4045, !4046, !4047, !4048, !4049, !4052, !4053, !4055, !4056, !4059}
!4045 = !DILocalVariable(name: "h", arg: 1, scope: !4041, file: !3608, line: 211, type: !2566)
!4046 = !DILocalVariable(name: "sz", arg: 2, scope: !4041, file: !3608, line: 211, type: !3734)
!4047 = !DILocalVariable(name: "bi", scope: !4041, file: !3608, line: 213, type: !103)
!4048 = !DILocalVariable(name: "b", scope: !4041, file: !3608, line: 214, type: !3797)
!4049 = !DILocalVariable(name: "first", scope: !4050, file: !3608, line: 233, type: !2571)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !3608, line: 232, column: 15)
!4051 = distinct !DILexicalBlock(scope: !4041, file: !3608, line: 232, column: 6)
!4052 = !DILocalVariable(name: "i", scope: !4050, file: !3608, line: 234, type: !103)
!4053 = !DILocalVariable(name: "c", scope: !4054, file: !3608, line: 236, type: !2571)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !3608, line: 235, column: 6)
!4055 = !DILocalVariable(name: "bmask", scope: !4041, file: !3608, line: 249, type: !121)
!4056 = !DILocalVariable(name: "minbucket", scope: !4057, file: !3608, line: 252, type: !103)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !3608, line: 251, column: 19)
!4058 = distinct !DILexicalBlock(scope: !4041, file: !3608, line: 251, column: 6)
!4059 = !DILocalVariable(name: "c", scope: !4057, file: !3608, line: 253, type: !2571)
!4060 = !DILocation(line: 0, scope: !4041)
!4061 = !DILocation(line: 213, column: 11, scope: !4041)
!4062 = !DILocation(line: 232, column: 9, scope: !4051)
!4063 = !DILocation(line: 232, column: 6, scope: !4051)
!4064 = !DILocation(line: 232, column: 6, scope: !4041)
!4065 = !DILocation(line: 236, column: 21, scope: !4054)
!4066 = !DILocation(line: 0, scope: !4050)
!4067 = !DILocation(line: 0, scope: !4054)
!4068 = !DILocation(line: 237, column: 8, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4054, file: !3608, line: 237, column: 8)
!4070 = !DILocation(line: 237, column: 25, scope: !4069)
!4071 = !DILocation(line: 237, column: 8, scope: !4054)
!4072 = !DILocation(line: 238, column: 5, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4069, file: !3608, line: 237, column: 32)
!4074 = !DILocation(line: 241, column: 14, scope: !4054)
!4075 = !DILocation(line: 241, column: 12, scope: !4054)
!4076 = !DILocation(line: 243, column: 12, scope: !4050)
!4077 = !DILocation(line: 243, column: 16, scope: !4050)
!4078 = distinct !{!4078, !4079, !4080}
!4079 = !DILocation(line: 235, column: 3, scope: !4050)
!4080 = !DILocation(line: 243, column: 35, scope: !4050)
!4081 = !DILocation(line: 249, column: 22, scope: !4041)
!4082 = !DILocation(line: 249, column: 39, scope: !4041)
!4083 = !DILocation(line: 249, column: 36, scope: !4041)
!4084 = !DILocation(line: 251, column: 12, scope: !4058)
!4085 = !DILocation(line: 251, column: 6, scope: !4041)
!4086 = !DILocation(line: 252, column: 19, scope: !4057)
!4087 = !DILocation(line: 0, scope: !4057)
!4088 = !DILocation(line: 253, column: 39, scope: !4057)
!4089 = !DILocation(line: 255, column: 3, scope: !4057)
!4090 = !DILocation(line: 261, column: 1, scope: !4041)
!4091 = distinct !DISubprogram(name: "split_chunks", scope: !3608, file: !3608, line: 109, type: !3727, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4092)
!4092 = !{!4093, !4094, !4095, !4096, !4097, !4098}
!4093 = !DILocalVariable(name: "h", arg: 1, scope: !4091, file: !3608, line: 109, type: !2566)
!4094 = !DILocalVariable(name: "lc", arg: 2, scope: !4091, file: !3608, line: 109, type: !2571)
!4095 = !DILocalVariable(name: "rc", arg: 3, scope: !4091, file: !3608, line: 109, type: !2571)
!4096 = !DILocalVariable(name: "sz0", scope: !4091, file: !3608, line: 114, type: !3734)
!4097 = !DILocalVariable(name: "lsz", scope: !4091, file: !3608, line: 115, type: !3734)
!4098 = !DILocalVariable(name: "rsz", scope: !4091, file: !3608, line: 116, type: !3734)
!4099 = !DILocation(line: 0, scope: !4091)
!4100 = !DILocation(line: 114, column: 18, scope: !4091)
!4101 = !DILocation(line: 115, column: 21, scope: !4091)
!4102 = !DILocation(line: 116, column: 22, scope: !4091)
!4103 = !DILocation(line: 118, column: 2, scope: !4091)
!4104 = !DILocation(line: 119, column: 2, scope: !4091)
!4105 = !DILocation(line: 120, column: 2, scope: !4091)
!4106 = !DILocation(line: 121, column: 25, scope: !4091)
!4107 = !DILocation(line: 121, column: 2, scope: !4091)
!4108 = !DILocation(line: 122, column: 1, scope: !4091)
!4109 = distinct !DISubprogram(name: "chunk_mem", scope: !3608, file: !3608, line: 24, type: !4110, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4112)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!102, !2566, !2571}
!4112 = !{!4113, !4114, !4115, !4116}
!4113 = !DILocalVariable(name: "h", arg: 1, scope: !4109, file: !3608, line: 24, type: !2566)
!4114 = !DILocalVariable(name: "c", arg: 2, scope: !4109, file: !3608, line: 24, type: !2571)
!4115 = !DILocalVariable(name: "buf", scope: !4109, file: !3608, line: 26, type: !2560)
!4116 = !DILocalVariable(name: "ret", scope: !4109, file: !3608, line: 27, type: !280)
!4117 = !DILocation(line: 0, scope: !4109)
!4118 = !DILocation(line: 26, column: 22, scope: !4109)
!4119 = !DILocation(line: 27, column: 38, scope: !4109)
!4120 = !DILocation(line: 31, column: 2, scope: !4109)
!4121 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3608, file: !3608, line: 301, type: !4122, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4124)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!102, !3611, !217, !217}
!4124 = !{!4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136}
!4125 = !DILocalVariable(name: "heap", arg: 1, scope: !4121, file: !3608, line: 301, type: !3611)
!4126 = !DILocalVariable(name: "align", arg: 2, scope: !4121, file: !3608, line: 301, type: !217)
!4127 = !DILocalVariable(name: "bytes", arg: 3, scope: !4121, file: !3608, line: 301, type: !217)
!4128 = !DILocalVariable(name: "h", scope: !4121, file: !3608, line: 303, type: !2566)
!4129 = !DILocalVariable(name: "gap", scope: !4121, file: !3608, line: 304, type: !217)
!4130 = !DILocalVariable(name: "rew", scope: !4121, file: !3608, line: 304, type: !217)
!4131 = !DILocalVariable(name: "padded_sz", scope: !4121, file: !3608, line: 335, type: !3734)
!4132 = !DILocalVariable(name: "c0", scope: !4121, file: !3608, line: 336, type: !2571)
!4133 = !DILocalVariable(name: "mem", scope: !4121, file: !3608, line: 341, type: !280)
!4134 = !DILocalVariable(name: "end", scope: !4121, file: !3608, line: 345, type: !2560)
!4135 = !DILocalVariable(name: "c", scope: !4121, file: !3608, line: 348, type: !2571)
!4136 = !DILocalVariable(name: "c_end", scope: !4121, file: !3608, line: 349, type: !2571)
!4137 = !DILocation(line: 0, scope: !4121)
!4138 = !DILocation(line: 303, column: 27, scope: !4121)
!4139 = !DILocation(line: 313, column: 16, scope: !4121)
!4140 = !DILocation(line: 313, column: 14, scope: !4121)
!4141 = !DILocation(line: 314, column: 12, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4121, file: !3608, line: 314, column: 6)
!4143 = !DILocation(line: 314, column: 6, scope: !4121)
!4144 = !DILocation(line: 315, column: 9, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4142, file: !3608, line: 314, column: 20)
!4146 = !DILocation(line: 316, column: 9, scope: !4145)
!4147 = !DILocation(line: 318, column: 13, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !3608, line: 318, column: 7)
!4149 = distinct !DILexicalBlock(scope: !4142, file: !3608, line: 317, column: 9)
!4150 = !DILocation(line: 318, column: 7, scope: !4149)
!4151 = !DILocation(line: 319, column: 11, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4148, file: !3608, line: 318, column: 39)
!4153 = !DILocation(line: 319, column: 4, scope: !4152)
!4154 = !DILocation(line: 0, scope: !4142)
!4155 = !DILocation(line: 326, column: 12, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4121, file: !3608, line: 326, column: 6)
!4157 = !DILocation(line: 326, column: 17, scope: !4156)
!4158 = !DILocation(line: 326, column: 20, scope: !4156)
!4159 = !DILocation(line: 326, column: 6, scope: !4121)
!4160 = !DILocation(line: 335, column: 50, scope: !4121)
!4161 = !DILocation(line: 335, column: 58, scope: !4121)
!4162 = !DILocation(line: 335, column: 24, scope: !4121)
!4163 = !DILocation(line: 336, column: 17, scope: !4121)
!4164 = !DILocation(line: 338, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4121, file: !3608, line: 338, column: 6)
!4166 = !DILocation(line: 338, column: 6, scope: !4121)
!4167 = !DILocation(line: 341, column: 17, scope: !4121)
!4168 = !DILocation(line: 344, column: 20, scope: !4121)
!4169 = !DILocation(line: 344, column: 8, scope: !4121)
!4170 = !DILocation(line: 344, column: 47, scope: !4121)
!4171 = !DILocation(line: 345, column: 39, scope: !4121)
!4172 = !DILocation(line: 348, column: 16, scope: !4121)
!4173 = !DILocation(line: 349, column: 26, scope: !4121)
!4174 = !DILocation(line: 349, column: 24, scope: !4121)
!4175 = !DILocation(line: 353, column: 8, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4121, file: !3608, line: 353, column: 6)
!4177 = !DILocation(line: 353, column: 6, scope: !4121)
!4178 = !DILocation(line: 354, column: 3, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4176, file: !3608, line: 353, column: 14)
!4180 = !DILocation(line: 355, column: 3, scope: !4179)
!4181 = !DILocation(line: 356, column: 2, scope: !4179)
!4182 = !DILocation(line: 359, column: 6, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4121, file: !3608, line: 359, column: 6)
!4184 = !DILocation(line: 359, column: 24, scope: !4183)
!4185 = !DILocation(line: 359, column: 6, scope: !4121)
!4186 = !DILocation(line: 360, column: 3, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !3608, line: 359, column: 33)
!4188 = !DILocation(line: 361, column: 3, scope: !4187)
!4189 = !DILocation(line: 362, column: 2, scope: !4187)
!4190 = !DILocation(line: 364, column: 2, scope: !4121)
!4191 = !DILocation(line: 377, column: 1, scope: !4121)
!4192 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3608, file: !3608, line: 379, type: !4193, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4195)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!102, !3611, !102, !217, !217}
!4195 = !{!4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4211, !4212}
!4196 = !DILocalVariable(name: "heap", arg: 1, scope: !4192, file: !3608, line: 379, type: !3611)
!4197 = !DILocalVariable(name: "ptr", arg: 2, scope: !4192, file: !3608, line: 379, type: !102)
!4198 = !DILocalVariable(name: "align", arg: 3, scope: !4192, file: !3608, line: 380, type: !217)
!4199 = !DILocalVariable(name: "bytes", arg: 4, scope: !4192, file: !3608, line: 380, type: !217)
!4200 = !DILocalVariable(name: "h", scope: !4192, file: !3608, line: 382, type: !2566)
!4201 = !DILocalVariable(name: "c", scope: !4192, file: !3608, line: 399, type: !2571)
!4202 = !DILocalVariable(name: "rc", scope: !4192, file: !3608, line: 400, type: !2571)
!4203 = !DILocalVariable(name: "align_gap", scope: !4192, file: !3608, line: 401, type: !217)
!4204 = !DILocalVariable(name: "chunks_need", scope: !4192, file: !3608, line: 402, type: !3734)
!4205 = !DILocalVariable(name: "split_size", scope: !4206, file: !3608, line: 435, type: !3734)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !3608, line: 433, column: 61)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !3608, line: 432, column: 13)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !3608, line: 409, column: 13)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !3608, line: 406, column: 13)
!4210 = distinct !DILexicalBlock(scope: !4192, file: !3608, line: 404, column: 6)
!4211 = !DILocalVariable(name: "ptr2", scope: !4192, file: !3608, line: 474, type: !102)
!4212 = !DILocalVariable(name: "prev_size", scope: !4213, file: !3608, line: 477, type: !217)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !3608, line: 476, column: 20)
!4214 = distinct !DILexicalBlock(scope: !4192, file: !3608, line: 476, column: 6)
!4215 = !DILocation(line: 0, scope: !4192)
!4216 = !DILocation(line: 382, column: 27, scope: !4192)
!4217 = !DILocation(line: 385, column: 10, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4192, file: !3608, line: 385, column: 6)
!4219 = !DILocation(line: 385, column: 6, scope: !4192)
!4220 = !DILocation(line: 386, column: 10, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4218, file: !3608, line: 385, column: 19)
!4222 = !DILocation(line: 386, column: 3, scope: !4221)
!4223 = !DILocation(line: 388, column: 12, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4192, file: !3608, line: 388, column: 6)
!4225 = !DILocation(line: 388, column: 6, scope: !4192)
!4226 = !DILocation(line: 389, column: 3, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !3608, line: 388, column: 18)
!4228 = !DILocation(line: 390, column: 3, scope: !4227)
!4229 = !DILocation(line: 395, column: 6, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4192, file: !3608, line: 395, column: 6)
!4231 = !DILocation(line: 395, column: 6, scope: !4192)
!4232 = !DILocation(line: 399, column: 16, scope: !4192)
!4233 = !DILocation(line: 400, column: 17, scope: !4192)
!4234 = !DILocation(line: 401, column: 49, scope: !4192)
!4235 = !DILocation(line: 401, column: 36, scope: !4192)
!4236 = !DILocation(line: 402, column: 52, scope: !4192)
!4237 = !DILocation(line: 402, column: 26, scope: !4192)
!4238 = !DILocation(line: 404, column: 6, scope: !4210)
!4239 = !DILocation(line: 404, column: 12, scope: !4210)
!4240 = !DILocation(line: 404, column: 40, scope: !4210)
!4241 = !DILocation(line: 404, column: 31, scope: !4210)
!4242 = !DILocation(line: 404, column: 6, scope: !4192)
!4243 = !DILocation(line: 406, column: 13, scope: !4209)
!4244 = !DILocation(line: 406, column: 30, scope: !4209)
!4245 = !DILocation(line: 406, column: 13, scope: !4210)
!4246 = !DILocation(line: 409, column: 30, scope: !4208)
!4247 = !DILocation(line: 409, column: 13, scope: !4209)
!4248 = !DILocation(line: 420, column: 24, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4208, file: !3608, line: 409, column: 45)
!4250 = !DILocation(line: 420, column: 3, scope: !4249)
!4251 = !DILocation(line: 421, column: 3, scope: !4249)
!4252 = !DILocation(line: 422, column: 3, scope: !4249)
!4253 = !DILocation(line: 431, column: 3, scope: !4249)
!4254 = !DILocation(line: 432, column: 14, scope: !4207)
!4255 = !DILocation(line: 432, column: 32, scope: !4207)
!4256 = !DILocation(line: 433, column: 26, scope: !4207)
!4257 = !DILocation(line: 433, column: 24, scope: !4207)
!4258 = !DILocation(line: 433, column: 44, scope: !4207)
!4259 = !DILocation(line: 432, column: 13, scope: !4208)
!4260 = !DILocation(line: 435, column: 38, scope: !4206)
!4261 = !DILocation(line: 0, scope: !4206)
!4262 = !DILocation(line: 445, column: 3, scope: !4206)
!4263 = !DILocation(line: 447, column: 20, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4206, file: !3608, line: 447, column: 7)
!4265 = !DILocation(line: 447, column: 18, scope: !4264)
!4266 = !DILocation(line: 447, column: 7, scope: !4206)
!4267 = !DILocation(line: 448, column: 27, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4264, file: !3608, line: 447, column: 39)
!4269 = !DILocation(line: 448, column: 4, scope: !4268)
!4270 = !DILocation(line: 449, column: 4, scope: !4268)
!4271 = !DILocation(line: 450, column: 3, scope: !4268)
!4272 = !DILocation(line: 452, column: 3, scope: !4206)
!4273 = !DILocation(line: 453, column: 3, scope: !4206)
!4274 = !DILocation(line: 474, column: 15, scope: !4192)
!4275 = !DILocation(line: 476, column: 11, scope: !4214)
!4276 = !DILocation(line: 476, column: 6, scope: !4192)
!4277 = !DILocation(line: 477, column: 42, scope: !4213)
!4278 = !DILocation(line: 477, column: 22, scope: !4213)
!4279 = !DILocation(line: 477, column: 60, scope: !4213)
!4280 = !DILocation(line: 0, scope: !4213)
!4281 = !DILocation(line: 479, column: 21, scope: !4213)
!4282 = !DILocation(line: 479, column: 3, scope: !4213)
!4283 = !DILocation(line: 480, column: 3, scope: !4213)
!4284 = !DILocation(line: 481, column: 2, scope: !4213)
!4285 = !DILocation(line: 483, column: 1, scope: !4192)
!4286 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2553, file: !2553, line: 245, type: !4287, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!217, !2566, !3734}
!4289 = !{!4290, !4291}
!4290 = !DILocalVariable(name: "h", arg: 1, scope: !4286, file: !2553, line: 245, type: !2566)
!4291 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4286, file: !2553, line: 245, type: !3734)
!4292 = !DILocation(line: 0, scope: !4286)
!4293 = !DILocation(line: 247, column: 20, scope: !4286)
!4294 = !DILocation(line: 247, column: 33, scope: !4286)
!4295 = !DILocation(line: 247, column: 2, scope: !4286)
!4296 = distinct !DISubprogram(name: "sys_heap_init", scope: !3608, file: !3608, line: 485, type: !4297, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !4299)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{null, !3611, !102, !217}
!4299 = !{!4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309}
!4300 = !DILocalVariable(name: "heap", arg: 1, scope: !4296, file: !3608, line: 485, type: !3611)
!4301 = !DILocalVariable(name: "mem", arg: 2, scope: !4296, file: !3608, line: 485, type: !102)
!4302 = !DILocalVariable(name: "bytes", arg: 3, scope: !4296, file: !3608, line: 485, type: !217)
!4303 = !DILocalVariable(name: "addr", scope: !4296, file: !3608, line: 502, type: !22)
!4304 = !DILocalVariable(name: "end", scope: !4296, file: !3608, line: 503, type: !22)
!4305 = !DILocalVariable(name: "heap_sz", scope: !4296, file: !3608, line: 504, type: !3734)
!4306 = !DILocalVariable(name: "h", scope: !4296, file: !3608, line: 509, type: !2566)
!4307 = !DILocalVariable(name: "nb_buckets", scope: !4296, file: !3608, line: 520, type: !103)
!4308 = !DILocalVariable(name: "chunk0_size", scope: !4296, file: !3608, line: 521, type: !3734)
!4309 = !DILocalVariable(name: "i", scope: !4310, file: !3608, line: 526, type: !103)
!4310 = distinct !DILexicalBlock(scope: !4296, file: !3608, line: 526, column: 2)
!4311 = !DILocation(line: 0, scope: !4296)
!4312 = !DILocation(line: 499, column: 8, scope: !4296)
!4313 = !DILocation(line: 502, column: 19, scope: !4296)
!4314 = !DILocation(line: 503, column: 18, scope: !4296)
!4315 = !DILocation(line: 504, column: 27, scope: !4296)
!4316 = !DILocation(line: 504, column: 35, scope: !4296)
!4317 = !DILocation(line: 509, column: 21, scope: !4296)
!4318 = !DILocation(line: 510, column: 8, scope: !4296)
!4319 = !DILocation(line: 510, column: 13, scope: !4296)
!4320 = !DILocation(line: 511, column: 5, scope: !4296)
!4321 = !DILocation(line: 511, column: 15, scope: !4296)
!4322 = !DILocation(line: 512, column: 5, scope: !4296)
!4323 = !DILocation(line: 512, column: 19, scope: !4296)
!4324 = !DILocation(line: 520, column: 19, scope: !4296)
!4325 = !DILocation(line: 522, column: 21, scope: !4296)
!4326 = !DILocation(line: 521, column: 56, scope: !4296)
!4327 = !DILocation(line: 521, column: 26, scope: !4296)
!4328 = !DILocation(line: 0, scope: !4310)
!4329 = !DILocation(line: 526, column: 20, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4310, file: !3608, line: 526, column: 2)
!4331 = !DILocation(line: 526, column: 2, scope: !4310)
!4332 = !DILocation(line: 531, column: 2, scope: !4296)
!4333 = !DILocation(line: 532, column: 2, scope: !4296)
!4334 = !DILocation(line: 533, column: 2, scope: !4296)
!4335 = !DILocation(line: 536, column: 41, scope: !4296)
!4336 = !DILocation(line: 536, column: 2, scope: !4296)
!4337 = !DILocation(line: 537, column: 2, scope: !4296)
!4338 = !DILocation(line: 540, column: 2, scope: !4296)
!4339 = !DILocation(line: 541, column: 2, scope: !4296)
!4340 = !DILocation(line: 542, column: 2, scope: !4296)
!4341 = !DILocation(line: 544, column: 2, scope: !4296)
!4342 = !DILocation(line: 545, column: 1, scope: !4296)
!4343 = !DILocation(line: 527, column: 17, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4330, file: !3608, line: 526, column: 39)
!4345 = !DILocation(line: 527, column: 22, scope: !4344)
!4346 = !DILocation(line: 526, column: 35, scope: !4330)
!4347 = distinct !{!4347, !4331, !4348}
!4348 = !DILocation(line: 528, column: 2, scope: !4310)
!4349 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2586, file: !2586, line: 1338, type: !4350, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4358)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!103, !3338, !102, !157, !4352, !121}
!4352 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3304, line: 99, baseType: !4353)
!4353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3304, line: 40, baseType: !4354)
!4354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2586, baseType: !4355)
!4355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4356)
!4356 = !{!4357}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4355, file: !2586, baseType: !102, size: 32)
!4358 = !{!4359, !4360, !4361, !4362, !4363, !4364, !4368, !4369, !4370, !4372, !4377, !4422, !4425, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4437, !4438, !4439, !4443, !4446, !4448, !4451, !4452, !4453, !4458, !4464, !4467, !4471, !4477, !4481, !4484, !4486, !4489}
!4359 = !DILocalVariable(name: "out", arg: 1, scope: !4349, file: !2586, line: 1338, type: !3338)
!4360 = !DILocalVariable(name: "ctx", arg: 2, scope: !4349, file: !2586, line: 1338, type: !102)
!4361 = !DILocalVariable(name: "fp", arg: 3, scope: !4349, file: !2586, line: 1338, type: !157)
!4362 = !DILocalVariable(name: "ap", arg: 4, scope: !4349, file: !2586, line: 1339, type: !4352)
!4363 = !DILocalVariable(name: "flags", arg: 5, scope: !4349, file: !2586, line: 1339, type: !121)
!4364 = !DILocalVariable(name: "buf", scope: !4349, file: !2586, line: 1341, type: !4365)
!4365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 176, elements: !4366)
!4366 = !{!4367}
!4367 = !DISubrange(count: 22)
!4368 = !DILocalVariable(name: "count", scope: !4349, file: !2586, line: 1342, type: !217)
!4369 = !DILocalVariable(name: "sint", scope: !4349, file: !2586, line: 1343, type: !2605)
!4370 = !DILocalVariable(name: "tagged_ap", scope: !4349, file: !2586, line: 1345, type: !4371)
!4371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!4372 = !DILocalVariable(name: "rc", scope: !4373, file: !2586, line: 1377, type: !103)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !2586, line: 1377, column: 4)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !2586, line: 1376, column: 19)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1376, column: 7)
!4376 = distinct !DILexicalBlock(scope: !4349, file: !2586, line: 1375, column: 19)
!4377 = !DILocalVariable(name: "state", scope: !4376, file: !2586, line: 1395, type: !4378)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4349, file: !2586, line: 1392, size: 192, elements: !4379)
!4379 = !{!4380, !4390}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4378, file: !2586, line: 1393, baseType: !4381, size: 64)
!4381 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2586, line: 166, size: 64, elements: !4382)
!4382 = !{!4383, !4384, !4385, !4387, !4389}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4381, file: !2586, line: 168, baseType: !2605, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4381, file: !2586, line: 171, baseType: !2608, size: 64)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4381, file: !2586, line: 174, baseType: !4386, size: 64)
!4386 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4381, file: !2586, line: 177, baseType: !4388, size: 64)
!4388 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4381, file: !2586, line: 180, baseType: !102, size: 32)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4378, file: !2586, line: 1394, baseType: !4391, size: 96, offset: 64)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2586, line: 189, size: 96, elements: !4392)
!4392 = !{!4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4417}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4391, file: !2586, line: 191, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4391, file: !2586, line: 194, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4391, file: !2586, line: 197, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4391, file: !2586, line: 200, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4391, file: !2586, line: 203, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4391, file: !2586, line: 206, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4391, file: !2586, line: 209, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4391, file: !2586, line: 212, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4391, file: !2586, line: 219, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4391, file: !2586, line: 222, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4391, file: !2586, line: 229, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4391, file: !2586, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4391, file: !2586, line: 238, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4391, file: !2586, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4391, file: !2586, line: 244, baseType: !170, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4391, file: !2586, line: 247, baseType: !170, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4391, file: !2586, line: 252, baseType: !170, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4391, file: !2586, line: 257, baseType: !170, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4391, file: !2586, line: 260, baseType: !168, size: 8, offset: 24)
!4412 = !DIDerivedType(tag: DW_TAG_member, scope: !4391, file: !2586, line: 262, baseType: !4413, size: 32, offset: 32)
!4413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4391, file: !2586, line: 262, size: 32, elements: !4414)
!4414 = !{!4415, !4416}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4413, file: !2586, line: 267, baseType: !103, size: 32)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4413, file: !2586, line: 289, baseType: !103, size: 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, scope: !4391, file: !2586, line: 292, baseType: !4418, size: 32, offset: 64)
!4418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4391, file: !2586, line: 292, size: 32, elements: !4419)
!4419 = !{!4420, !4421}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4418, file: !2586, line: 297, baseType: !103, size: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4418, file: !2586, line: 306, baseType: !103, size: 32)
!4422 = !DILocalVariable(name: "conv", scope: !4376, file: !2586, line: 1400, type: !4423)
!4423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4424)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 32)
!4425 = !DILocalVariable(name: "value", scope: !4376, file: !2586, line: 1401, type: !4426)
!4426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4427)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 32)
!4428 = !DILocalVariable(name: "sp", scope: !4376, file: !2586, line: 1402, type: !157)
!4429 = !DILocalVariable(name: "width", scope: !4376, file: !2586, line: 1403, type: !103)
!4430 = !DILocalVariable(name: "precision", scope: !4376, file: !2586, line: 1404, type: !103)
!4431 = !DILocalVariable(name: "bps", scope: !4376, file: !2586, line: 1405, type: !157)
!4432 = !DILocalVariable(name: "bpe", scope: !4376, file: !2586, line: 1406, type: !157)
!4433 = !DILocalVariable(name: "sign", scope: !4376, file: !2586, line: 1407, type: !159)
!4434 = !DILocalVariable(name: "arg", scope: !4435, file: !2586, line: 1432, type: !103)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !2586, line: 1431, column: 24)
!4436 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1431, column: 7)
!4437 = !DILocalVariable(name: "specifier_cat", scope: !4376, file: !2586, line: 1468, type: !2585)
!4438 = !DILocalVariable(name: "length_mod", scope: !4376, file: !2586, line: 1470, type: !2593)
!4439 = !DILocalVariable(name: "rc", scope: !4440, file: !2586, line: 1575, type: !103)
!4440 = distinct !DILexicalBlock(scope: !4441, file: !2586, line: 1575, column: 4)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !2586, line: 1574, column: 43)
!4442 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1574, column: 7)
!4443 = !DILocalVariable(name: "rc", scope: !4444, file: !2586, line: 1584, type: !103)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1584, column: 4)
!4445 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1582, column: 28)
!4446 = !DILocalVariable(name: "len", scope: !4447, file: !2586, line: 1589, type: !217)
!4447 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1586, column: 13)
!4448 = !DILocalVariable(name: "len", scope: !4449, file: !2586, line: 1641, type: !217)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !2586, line: 1640, column: 24)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1640, column: 8)
!4451 = !DILocalVariable(name: "nj_len", scope: !4376, file: !2586, line: 1722, type: !217)
!4452 = !DILocalVariable(name: "pad_len", scope: !4376, file: !2586, line: 1723, type: !103)
!4453 = !DILocalVariable(name: "pad", scope: !4454, file: !2586, line: 1751, type: !159)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !2586, line: 1750, column: 26)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !2586, line: 1750, column: 8)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !2586, line: 1747, column: 18)
!4457 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1747, column: 7)
!4458 = !DILocalVariable(name: "rc", scope: !4459, file: !2586, line: 1758, type: !103)
!4459 = distinct !DILexicalBlock(scope: !4460, file: !2586, line: 1758, column: 7)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !2586, line: 1757, column: 21)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !2586, line: 1757, column: 10)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !2586, line: 1756, column: 26)
!4463 = distinct !DILexicalBlock(scope: !4454, file: !2586, line: 1756, column: 9)
!4464 = !DILocalVariable(name: "rc", scope: !4465, file: !2586, line: 1765, type: !103)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !2586, line: 1765, column: 6)
!4466 = distinct !DILexicalBlock(scope: !4454, file: !2586, line: 1764, column: 25)
!4467 = !DILocalVariable(name: "rc", scope: !4468, file: !2586, line: 1774, type: !103)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !2586, line: 1774, column: 4)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !2586, line: 1773, column: 18)
!4470 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1773, column: 7)
!4471 = !DILocalVariable(name: "rc", scope: !4472, file: !2586, line: 1819, type: !103)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !2586, line: 1819, column: 5)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !2586, line: 1818, column: 44)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !2586, line: 1818, column: 8)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !2586, line: 1817, column: 10)
!4476 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1777, column: 7)
!4477 = !DILocalVariable(name: "rc", scope: !4478, file: !2586, line: 1823, type: !103)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !2586, line: 1823, column: 5)
!4479 = distinct !DILexicalBlock(scope: !4480, file: !2586, line: 1822, column: 26)
!4480 = distinct !DILexicalBlock(scope: !4475, file: !2586, line: 1822, column: 8)
!4481 = !DILocalVariable(name: "rc", scope: !4482, file: !2586, line: 1828, type: !103)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !2586, line: 1828, column: 5)
!4483 = distinct !DILexicalBlock(scope: !4475, file: !2586, line: 1827, column: 26)
!4484 = !DILocalVariable(name: "rc", scope: !4485, file: !2586, line: 1831, type: !103)
!4485 = distinct !DILexicalBlock(scope: !4475, file: !2586, line: 1831, column: 4)
!4486 = !DILocalVariable(name: "rc", scope: !4487, file: !2586, line: 1836, type: !103)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !2586, line: 1836, column: 4)
!4488 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1835, column: 21)
!4489 = !DILabel(scope: !4445, name: "prec_int_pad0", file: !2586, line: 1634)
!4490 = !DILocation(line: 0, scope: !4349)
!4491 = !DILocation(line: 1341, column: 2, scope: !4349)
!4492 = !DILocation(line: 1341, column: 7, scope: !4349)
!4493 = !DILocation(line: 1375, column: 2, scope: !4349)
!4494 = !DILocation(line: 1342, column: 9, scope: !4349)
!4495 = !DILocation(line: 1375, column: 9, scope: !4349)
!4496 = !DILocation(line: 1377, column: 4, scope: !4373)
!4497 = !DILocation(line: 0, scope: !4373)
!4498 = !DILocation(line: 1377, column: 4, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4373, file: !2586, line: 1377, column: 4)
!4500 = distinct !{!4500, !4493, !4501}
!4501 = !DILocation(line: 1839, column: 2, scope: !4349)
!4502 = !DILocation(line: 1392, column: 3, scope: !4376)
!4503 = !DILocation(line: 1395, column: 5, scope: !4376)
!4504 = !DILocation(line: 0, scope: !4376)
!4505 = !DILocation(line: 1409, column: 8, scope: !4376)
!4506 = !DILocation(line: 1414, column: 13, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1414, column: 7)
!4508 = !DILocation(line: 1414, column: 7, scope: !4376)
!4509 = !DILocation(line: 1415, column: 12, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4507, file: !2586, line: 1414, column: 25)
!4511 = !DILocation(line: 1417, column: 14, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4510, file: !2586, line: 1417, column: 8)
!4513 = !DILocation(line: 1417, column: 8, scope: !4510)
!4514 = !DILocation(line: 1418, column: 21, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4512, file: !2586, line: 1417, column: 19)
!4516 = !DILocation(line: 1419, column: 13, scope: !4515)
!4517 = !DILocation(line: 1420, column: 4, scope: !4515)
!4518 = !DILocation(line: 1421, column: 20, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4507, file: !2586, line: 1421, column: 14)
!4520 = !DILocation(line: 1421, column: 14, scope: !4507)
!4521 = !DILocation(line: 1431, column: 13, scope: !4436)
!4522 = !DILocation(line: 1431, column: 7, scope: !4376)
!4523 = !DILocation(line: 1432, column: 14, scope: !4435)
!4524 = !DILocation(line: 0, scope: !4435)
!4525 = !DILocation(line: 1434, column: 12, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4435, file: !2586, line: 1434, column: 8)
!4527 = !DILocation(line: 1434, column: 8, scope: !4435)
!4528 = !DILocation(line: 1435, column: 24, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4526, file: !2586, line: 1434, column: 17)
!4530 = !DILocation(line: 1436, column: 4, scope: !4529)
!4531 = !DILocation(line: 1439, column: 20, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4436, file: !2586, line: 1439, column: 14)
!4533 = !DILocation(line: 1439, column: 14, scope: !4436)
!4534 = !DILocation(line: 1469, column: 37, scope: !4376)
!4535 = !DILocation(line: 1448, column: 20, scope: !4376)
!4536 = !DILocation(line: 1449, column: 22, scope: !4376)
!4537 = !DILocation(line: 1471, column: 34, scope: !4376)
!4538 = !DILocation(line: 1478, column: 7, scope: !4376)
!4539 = !DILocation(line: 1479, column: 4, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2586, line: 1478, column: 40)
!4541 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1478, column: 7)
!4542 = !DILocation(line: 1484, column: 19, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4540, file: !2586, line: 1479, column: 24)
!4544 = !DILocation(line: 1484, column: 17, scope: !4543)
!4545 = !DILocation(line: 1485, column: 5, scope: !4543)
!4546 = !DILocation(line: 1492, column: 20, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2586, line: 1491, column: 12)
!4548 = distinct !DILexicalBlock(scope: !4543, file: !2586, line: 1487, column: 9)
!4549 = !DILocation(line: 1492, column: 18, scope: !4547)
!4550 = !DILocation(line: 1494, column: 5, scope: !4543)
!4551 = !DILocation(line: 1497, column: 23, scope: !4543)
!4552 = !DILocation(line: 1496, column: 17, scope: !4543)
!4553 = !DILocation(line: 1498, column: 5, scope: !4543)
!4554 = !DILocation(line: 1501, column: 23, scope: !4543)
!4555 = !DILocation(line: 1500, column: 17, scope: !4543)
!4556 = !DILocation(line: 1502, column: 5, scope: !4543)
!4557 = !DILocation(line: 1513, column: 23, scope: !4543)
!4558 = !DILocation(line: 1513, column: 6, scope: !4543)
!4559 = !DILocation(line: 1512, column: 17, scope: !4543)
!4560 = !DILocation(line: 1514, column: 5, scope: !4543)
!4561 = !DILocation(line: 0, scope: !4543)
!4562 = !DILocation(line: 1516, column: 8, scope: !4540)
!4563 = !DILocation(line: 1517, column: 19, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !2586, line: 1516, column: 33)
!4565 = distinct !DILexicalBlock(scope: !4540, file: !2586, line: 1516, column: 8)
!4566 = !DILocation(line: 1517, column: 17, scope: !4564)
!4567 = !DILocation(line: 1518, column: 4, scope: !4564)
!4568 = !DILocation(line: 1519, column: 19, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !2586, line: 1518, column: 39)
!4570 = distinct !DILexicalBlock(scope: !4565, file: !2586, line: 1518, column: 15)
!4571 = !DILocation(line: 1519, column: 17, scope: !4569)
!4572 = !DILocation(line: 1520, column: 4, scope: !4569)
!4573 = !DILocation(line: 1522, column: 4, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2586, line: 1521, column: 47)
!4575 = distinct !DILexicalBlock(scope: !4541, file: !2586, line: 1521, column: 14)
!4576 = !DILocation(line: 1527, column: 19, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !2586, line: 1522, column: 24)
!4578 = !DILocation(line: 1527, column: 17, scope: !4577)
!4579 = !DILocation(line: 1528, column: 5, scope: !4577)
!4580 = !DILocation(line: 0, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !2586, line: 1530, column: 9)
!4582 = !DILocation(line: 1540, column: 23, scope: !4577)
!4583 = !DILocation(line: 1539, column: 17, scope: !4577)
!4584 = !DILocation(line: 1542, column: 5, scope: !4577)
!4585 = !DILocation(line: 1545, column: 23, scope: !4577)
!4586 = !DILocation(line: 1544, column: 17, scope: !4577)
!4587 = !DILocation(line: 1547, column: 5, scope: !4577)
!4588 = !DILocation(line: 1551, column: 23, scope: !4577)
!4589 = !DILocation(line: 1551, column: 6, scope: !4577)
!4590 = !DILocation(line: 1550, column: 17, scope: !4577)
!4591 = !DILocation(line: 1552, column: 5, scope: !4577)
!4592 = !DILocation(line: 0, scope: !4577)
!4593 = !DILocation(line: 1554, column: 8, scope: !4574)
!4594 = !DILocation(line: 1555, column: 19, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4596, file: !2586, line: 1554, column: 33)
!4596 = distinct !DILexicalBlock(scope: !4574, file: !2586, line: 1554, column: 8)
!4597 = !DILocation(line: 1555, column: 17, scope: !4595)
!4598 = !DILocation(line: 1556, column: 4, scope: !4595)
!4599 = !DILocation(line: 1557, column: 19, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !2586, line: 1556, column: 39)
!4601 = distinct !DILexicalBlock(scope: !4596, file: !2586, line: 1556, column: 15)
!4602 = !DILocation(line: 1557, column: 17, scope: !4600)
!4603 = !DILocation(line: 1558, column: 4, scope: !4600)
!4604 = !DILocation(line: 0, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2586, line: 1560, column: 8)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !2586, line: 1559, column: 45)
!4607 = distinct !DILexicalBlock(scope: !4575, file: !2586, line: 1559, column: 14)
!4608 = !DILocation(line: 1566, column: 17, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !2586, line: 1565, column: 46)
!4610 = distinct !DILexicalBlock(scope: !4607, file: !2586, line: 1565, column: 14)
!4611 = !DILocation(line: 1566, column: 15, scope: !4609)
!4612 = !DILocation(line: 1567, column: 3, scope: !4609)
!4613 = !DILocation(line: 1574, column: 21, scope: !4442)
!4614 = !DILocation(line: 1575, column: 4, scope: !4440)
!4615 = !DILocation(line: 0, scope: !4440)
!4616 = !DILocation(line: 1575, column: 4, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4440, file: !2586, line: 1575, column: 4)
!4618 = !DILocation(line: 1582, column: 17, scope: !4376)
!4619 = !DILocation(line: 1582, column: 3, scope: !4376)
!4620 = !DILocation(line: 1584, column: 4, scope: !4444)
!4621 = !DILocation(line: 0, scope: !4444)
!4622 = !DILocation(line: 1584, column: 4, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4444, file: !2586, line: 1584, column: 4)
!4624 = !DILocation(line: 1587, column: 31, scope: !4447)
!4625 = !DILocation(line: 1591, column: 18, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4447, file: !2586, line: 1591, column: 8)
!4627 = !DILocation(line: 1591, column: 8, scope: !4447)
!4628 = !DILocation(line: 1592, column: 11, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4626, file: !2586, line: 1591, column: 24)
!4630 = !DILocation(line: 0, scope: !4447)
!4631 = !DILocation(line: 1593, column: 4, scope: !4629)
!4632 = !DILocation(line: 1594, column: 11, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4626, file: !2586, line: 1593, column: 11)
!4634 = !DILocation(line: 1604, column: 51, scope: !4445)
!4635 = !DILocation(line: 1604, column: 13, scope: !4445)
!4636 = !DILocation(line: 1604, column: 11, scope: !4445)
!4637 = !DILocation(line: 1606, column: 4, scope: !4445)
!4638 = !DILocation(line: 1609, column: 14, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1609, column: 8)
!4640 = !DILocation(line: 1609, column: 8, scope: !4445)
!4641 = !DILocation(line: 1619, column: 18, scope: !4445)
!4642 = !DILocation(line: 1620, column: 13, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1620, column: 8)
!4644 = !DILocation(line: 1620, column: 8, scope: !4445)
!4645 = !DILocation(line: 1622, column: 36, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4643, file: !2586, line: 1620, column: 18)
!4647 = !DILocation(line: 1622, column: 17, scope: !4646)
!4648 = !DILocation(line: 1623, column: 4, scope: !4646)
!4649 = !DILocation(line: 1632, column: 29, scope: !4445)
!4650 = !DILocation(line: 1632, column: 10, scope: !4445)
!4651 = !DILocation(line: 1632, column: 4, scope: !4445)
!4652 = !DILocation(line: 1407, column: 8, scope: !4376)
!4653 = !DILocation(line: 0, scope: !4445)
!4654 = !DILocation(line: 1634, column: 3, scope: !4445)
!4655 = !DILocation(line: 1640, column: 18, scope: !4450)
!4656 = !DILocation(line: 1640, column: 8, scope: !4445)
!4657 = !DILocation(line: 1729, column: 13, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1729, column: 7)
!4659 = !DILocation(line: 1641, column: 22, scope: !4449)
!4660 = !DILocation(line: 0, scope: !4449)
!4661 = !DILocation(line: 1646, column: 21, scope: !4449)
!4662 = !DILocation(line: 1649, column: 13, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4449, file: !2586, line: 1649, column: 9)
!4664 = !DILocation(line: 1649, column: 9, scope: !4449)
!4665 = !DILocation(line: 1650, column: 35, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !2586, line: 1649, column: 34)
!4667 = !DILocation(line: 1650, column: 23, scope: !4666)
!4668 = !DILocation(line: 1651, column: 5, scope: !4666)
!4669 = !DILocation(line: 1660, column: 15, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1660, column: 8)
!4671 = !DILocation(line: 1660, column: 19, scope: !4670)
!4672 = !DILocation(line: 1660, column: 8, scope: !4445)
!4673 = !DILocation(line: 1661, column: 23, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4670, file: !2586, line: 1660, column: 28)
!4675 = !DILocation(line: 1661, column: 11, scope: !4674)
!4676 = !DILocation(line: 1665, column: 22, scope: !4674)
!4677 = !DILocation(line: 1666, column: 21, scope: !4674)
!4678 = !DILocation(line: 1668, column: 5, scope: !4674)
!4679 = !DILocation(line: 1677, column: 30, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2586, line: 1676, column: 49)
!4681 = distinct !DILexicalBlock(scope: !4445, file: !2586, line: 1676, column: 8)
!4682 = !DILocation(line: 1677, column: 5, scope: !4680)
!4683 = !DILocation(line: 1680, column: 4, scope: !4445)
!4684 = !DILocation(line: 0, scope: !4626)
!4685 = !DILocation(line: 1597, column: 14, scope: !4447)
!4686 = !DILocation(line: 1699, column: 11, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1699, column: 7)
!4688 = !DILocation(line: 1699, column: 7, scope: !4376)
!4689 = !DILocation(line: 1725, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1725, column: 7)
!4691 = !DILocation(line: 1725, column: 12, scope: !4690)
!4692 = !DILocation(line: 1747, column: 13, scope: !4457)
!4693 = !DILocation(line: 1747, column: 7, scope: !4376)
!4694 = !DILocation(line: 1722, column: 24, scope: !4376)
!4695 = !DILocation(line: 1725, column: 7, scope: !4376)
!4696 = !DILocation(line: 1729, column: 7, scope: !4376)
!4697 = !DILocation(line: 1736, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4376, file: !2586, line: 1736, column: 7)
!4699 = !DILocation(line: 1735, column: 19, scope: !4376)
!4700 = !DILocation(line: 1736, column: 7, scope: !4376)
!4701 = !DILocation(line: 1748, column: 10, scope: !4456)
!4702 = !DILocation(line: 1750, column: 15, scope: !4455)
!4703 = !DILocation(line: 1750, column: 8, scope: !4456)
!4704 = !DILocation(line: 0, scope: !4454)
!4705 = !DILocation(line: 1756, column: 15, scope: !4463)
!4706 = !DILocation(line: 1756, column: 9, scope: !4454)
!4707 = !DILocation(line: 1758, column: 7, scope: !4459)
!4708 = !DILocation(line: 0, scope: !4459)
!4709 = !DILocation(line: 1758, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4459, file: !2586, line: 1758, column: 7)
!4711 = !DILocation(line: 1764, column: 5, scope: !4454)
!4712 = !DILocation(line: 0, scope: !4456)
!4713 = !DILocation(line: 1764, column: 20, scope: !4454)
!4714 = !DILocation(line: 1764, column: 17, scope: !4454)
!4715 = !DILocation(line: 1765, column: 6, scope: !4465)
!4716 = !DILocation(line: 0, scope: !4465)
!4717 = !DILocation(line: 1765, column: 6, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4465, file: !2586, line: 1765, column: 6)
!4719 = distinct !{!4719, !4711, !4720}
!4720 = !DILocation(line: 1766, column: 5, scope: !4454)
!4721 = !DILocation(line: 1773, column: 12, scope: !4470)
!4722 = !DILocation(line: 1773, column: 7, scope: !4376)
!4723 = !DILocation(line: 1773, column: 7, scope: !4470)
!4724 = !DILocation(line: 1774, column: 4, scope: !4468)
!4725 = !DILocation(line: 0, scope: !4468)
!4726 = !DILocation(line: 1774, column: 4, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4468, file: !2586, line: 1774, column: 4)
!4728 = !DILocation(line: 1818, column: 8, scope: !4474)
!4729 = !DILocation(line: 1818, column: 27, scope: !4474)
!4730 = !DILocation(line: 1818, column: 25, scope: !4474)
!4731 = !DILocation(line: 1818, column: 8, scope: !4475)
!4732 = !DILocation(line: 1819, column: 5, scope: !4472)
!4733 = !DILocation(line: 0, scope: !4472)
!4734 = !DILocation(line: 1819, column: 5, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4472, file: !2586, line: 1819, column: 5)
!4736 = !DILocation(line: 1822, column: 14, scope: !4480)
!4737 = !DILocation(line: 1822, column: 8, scope: !4475)
!4738 = !DILocation(line: 1823, column: 5, scope: !4478)
!4739 = !DILocation(line: 0, scope: !4478)
!4740 = !DILocation(line: 1823, column: 5, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4478, file: !2586, line: 1823, column: 5)
!4742 = !DILocation(line: 1826, column: 20, scope: !4475)
!4743 = !DILocation(line: 1827, column: 4, scope: !4475)
!4744 = !DILocation(line: 0, scope: !4475)
!4745 = !DILocation(line: 1827, column: 21, scope: !4475)
!4746 = !DILocation(line: 1827, column: 18, scope: !4475)
!4747 = !DILocation(line: 1828, column: 5, scope: !4482)
!4748 = !DILocation(line: 0, scope: !4482)
!4749 = !DILocation(line: 1828, column: 5, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4482, file: !2586, line: 1828, column: 5)
!4751 = distinct !{!4751, !4743, !4752}
!4752 = !DILocation(line: 1829, column: 4, scope: !4475)
!4753 = !DILocation(line: 1831, column: 4, scope: !4485)
!4754 = !DILocation(line: 0, scope: !4485)
!4755 = !DILocation(line: 1831, column: 4, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4485, file: !2586, line: 1831, column: 4)
!4757 = !DILocation(line: 1835, column: 16, scope: !4376)
!4758 = !DILocation(line: 1835, column: 3, scope: !4376)
!4759 = !DILocation(line: 1836, column: 4, scope: !4487)
!4760 = !DILocation(line: 0, scope: !4487)
!4761 = !DILocation(line: 1836, column: 4, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4487, file: !2586, line: 1836, column: 4)
!4763 = !DILocation(line: 1837, column: 4, scope: !4488)
!4764 = distinct !{!4764, !4758, !4765}
!4765 = !DILocation(line: 1838, column: 3, scope: !4376)
!4766 = !DILocation(line: 1844, column: 1, scope: !4349)
!4767 = distinct !DISubprogram(name: "extract_conversion", scope: !2586, file: !2586, line: 642, type: !4768, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!157, !4424, !157}
!4770 = !{!4771, !4772}
!4771 = !DILocalVariable(name: "conv", arg: 1, scope: !4767, file: !2586, line: 642, type: !4424)
!4772 = !DILocalVariable(name: "sp", arg: 2, scope: !4767, file: !2586, line: 643, type: !157)
!4773 = !DILocation(line: 0, scope: !4767)
!4774 = !DILocation(line: 645, column: 10, scope: !4767)
!4775 = !DILocation(line: 653, column: 2, scope: !4767)
!4776 = !DILocation(line: 654, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4767, file: !2586, line: 654, column: 6)
!4778 = !DILocation(line: 654, column: 10, scope: !4777)
!4779 = !DILocation(line: 654, column: 6, scope: !4767)
!4780 = !DILocation(line: 655, column: 24, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4777, file: !2586, line: 654, column: 18)
!4782 = !DILocation(line: 655, column: 19, scope: !4781)
!4783 = !DILocation(line: 656, column: 3, scope: !4781)
!4784 = !DILocation(line: 659, column: 7, scope: !4767)
!4785 = !DILocation(line: 660, column: 7, scope: !4767)
!4786 = !DILocation(line: 661, column: 7, scope: !4767)
!4787 = !DILocation(line: 662, column: 7, scope: !4767)
!4788 = !DILocation(line: 663, column: 7, scope: !4767)
!4789 = !DILocation(line: 665, column: 2, scope: !4767)
!4790 = !DILocation(line: 666, column: 1, scope: !4767)
!4791 = distinct !DISubprogram(name: "outs", scope: !2586, file: !2586, line: 1319, type: !4792, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4794)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!103, !3338, !102, !157, !157}
!4794 = !{!4795, !4796, !4797, !4798, !4799, !4800}
!4795 = !DILocalVariable(name: "out", arg: 1, scope: !4791, file: !2586, line: 1319, type: !3338)
!4796 = !DILocalVariable(name: "ctx", arg: 2, scope: !4791, file: !2586, line: 1320, type: !102)
!4797 = !DILocalVariable(name: "sp", arg: 3, scope: !4791, file: !2586, line: 1321, type: !157)
!4798 = !DILocalVariable(name: "ep", arg: 4, scope: !4791, file: !2586, line: 1322, type: !157)
!4799 = !DILocalVariable(name: "count", scope: !4791, file: !2586, line: 1324, type: !217)
!4800 = !DILocalVariable(name: "rc", scope: !4801, file: !2586, line: 1327, type: !103)
!4801 = distinct !DILexicalBlock(scope: !4791, file: !2586, line: 1326, column: 45)
!4802 = !DILocation(line: 0, scope: !4791)
!4803 = !DILocation(line: 1326, column: 2, scope: !4791)
!4804 = !DILocation(line: 1324, column: 9, scope: !4791)
!4805 = !DILocation(line: 1326, column: 13, scope: !4791)
!4806 = !DILocation(line: 1326, column: 19, scope: !4791)
!4807 = !DILocation(line: 1327, column: 21, scope: !4801)
!4808 = !DILocation(line: 1326, column: 36, scope: !4791)
!4809 = !DILocation(line: 1326, column: 39, scope: !4791)
!4810 = !DILocation(line: 1327, column: 24, scope: !4801)
!4811 = !DILocation(line: 1327, column: 16, scope: !4801)
!4812 = !DILocation(line: 1327, column: 12, scope: !4801)
!4813 = !DILocation(line: 0, scope: !4801)
!4814 = !DILocation(line: 1329, column: 10, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4801, file: !2586, line: 1329, column: 7)
!4816 = !DILocation(line: 1329, column: 7, scope: !4801)
!4817 = distinct !{!4817, !4803, !4818}
!4818 = !DILocation(line: 1333, column: 2, scope: !4791)
!4819 = !DILocation(line: 1336, column: 1, scope: !4791)
!4820 = distinct !DISubprogram(name: "encode_uint", scope: !2586, file: !2586, line: 788, type: !4821, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4823)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!357, !2608, !4424, !357, !157}
!4823 = !{!4824, !4825, !4826, !4827, !4828, !4829, !4831, !4832}
!4824 = !DILocalVariable(name: "value", arg: 1, scope: !4820, file: !2586, line: 788, type: !2608)
!4825 = !DILocalVariable(name: "conv", arg: 2, scope: !4820, file: !2586, line: 789, type: !4424)
!4826 = !DILocalVariable(name: "bps", arg: 3, scope: !4820, file: !2586, line: 790, type: !357)
!4827 = !DILocalVariable(name: "bpe", arg: 4, scope: !4820, file: !2586, line: 791, type: !157)
!4828 = !DILocalVariable(name: "upcase", scope: !4820, file: !2586, line: 793, type: !170)
!4829 = !DILocalVariable(name: "radix", scope: !4820, file: !2586, line: 794, type: !4830)
!4830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4831 = !DILocalVariable(name: "bp", scope: !4820, file: !2586, line: 795, type: !357)
!4832 = !DILocalVariable(name: "lsv", scope: !4833, file: !2586, line: 798, type: !32)
!4833 = distinct !DILexicalBlock(scope: !4820, file: !2586, line: 797, column: 5)
!4834 = !DILocation(line: 0, scope: !4820)
!4835 = !DILocation(line: 793, column: 35, scope: !4820)
!4836 = !DILocation(line: 793, column: 24, scope: !4820)
!4837 = !DILocation(line: 793, column: 16, scope: !4820)
!4838 = !DILocation(line: 794, column: 29, scope: !4820)
!4839 = !DILocation(line: 795, column: 24, scope: !4820)
!4840 = !DILocation(line: 795, column: 17, scope: !4820)
!4841 = !DILocation(line: 797, column: 2, scope: !4820)
!4842 = !DILocation(line: 802, column: 9, scope: !4833)
!4843 = !DILocation(line: 798, column: 22, scope: !4833)
!4844 = !DILocation(line: 0, scope: !4833)
!4845 = !DILocation(line: 800, column: 16, scope: !4833)
!4846 = !DILocation(line: 800, column: 11, scope: !4833)
!4847 = !DILocation(line: 800, column: 4, scope: !4833)
!4848 = !DILocation(line: 800, column: 9, scope: !4833)
!4849 = !DILocation(line: 803, column: 18, scope: !4820)
!4850 = !DILocation(line: 803, column: 24, scope: !4820)
!4851 = !DILocation(line: 803, column: 2, scope: !4833)
!4852 = distinct !{!4852, !4841, !4853}
!4853 = !DILocation(line: 803, column: 37, scope: !4820)
!4854 = !DILocation(line: 808, column: 12, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4820, file: !2586, line: 808, column: 6)
!4856 = !DILocation(line: 808, column: 6, scope: !4820)
!4857 = !DILocation(line: 809, column: 7, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4855, file: !2586, line: 808, column: 23)
!4859 = !DILocation(line: 813, column: 3, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !2586, line: 811, column: 27)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !2586, line: 811, column: 14)
!4862 = distinct !DILexicalBlock(scope: !4858, file: !2586, line: 809, column: 7)
!4863 = !DILocation(line: 0, scope: !4862)
!4864 = !DILocation(line: 818, column: 2, scope: !4820)
!4865 = distinct !DISubprogram(name: "store_count", scope: !2586, file: !2586, line: 1280, type: !4866, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4870)
!4866 = !DISubroutineType(types: !4867)
!4867 = !{null, !4868, !102, !103}
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 32)
!4869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4391)
!4870 = !{!4871, !4872, !4873}
!4871 = !DILocalVariable(name: "conv", arg: 1, scope: !4865, file: !2586, line: 1280, type: !4868)
!4872 = !DILocalVariable(name: "dp", arg: 2, scope: !4865, file: !2586, line: 1281, type: !102)
!4873 = !DILocalVariable(name: "count", arg: 3, scope: !4865, file: !2586, line: 1282, type: !103)
!4874 = !DILocation(line: 0, scope: !4865)
!4875 = !DILocation(line: 1284, column: 38, scope: !4865)
!4876 = !DILocation(line: 1284, column: 2, scope: !4865)
!4877 = !DILocation(line: 1286, column: 4, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4865, file: !2586, line: 1284, column: 50)
!4879 = !DILocation(line: 1286, column: 14, scope: !4878)
!4880 = !DILocation(line: 1287, column: 3, scope: !4878)
!4881 = !DILocation(line: 1289, column: 24, scope: !4878)
!4882 = !DILocation(line: 1289, column: 22, scope: !4878)
!4883 = !DILocation(line: 1290, column: 3, scope: !4878)
!4884 = !DILocation(line: 1292, column: 18, scope: !4878)
!4885 = !DILocation(line: 1292, column: 4, scope: !4878)
!4886 = !DILocation(line: 1292, column: 16, scope: !4878)
!4887 = !DILocation(line: 1293, column: 3, scope: !4878)
!4888 = !DILocation(line: 1295, column: 4, scope: !4878)
!4889 = !DILocation(line: 1295, column: 15, scope: !4878)
!4890 = !DILocation(line: 1296, column: 3, scope: !4878)
!4891 = !DILocation(line: 1298, column: 22, scope: !4878)
!4892 = !DILocation(line: 1298, column: 4, scope: !4878)
!4893 = !DILocation(line: 1298, column: 20, scope: !4878)
!4894 = !DILocation(line: 1299, column: 3, scope: !4878)
!4895 = !DILocation(line: 1301, column: 21, scope: !4878)
!4896 = !DILocation(line: 1301, column: 4, scope: !4878)
!4897 = !DILocation(line: 1301, column: 19, scope: !4878)
!4898 = !DILocation(line: 1302, column: 3, scope: !4878)
!4899 = !DILocation(line: 1304, column: 4, scope: !4878)
!4900 = !DILocation(line: 1304, column: 17, scope: !4878)
!4901 = !DILocation(line: 1305, column: 3, scope: !4878)
!4902 = !DILocation(line: 1307, column: 4, scope: !4878)
!4903 = !DILocation(line: 1307, column: 20, scope: !4878)
!4904 = !DILocation(line: 1308, column: 3, scope: !4878)
!4905 = !DILocation(line: 1316, column: 1, scope: !4865)
!4906 = distinct !DISubprogram(name: "isupper", scope: !4907, file: !4907, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4908)
!4907 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4908 = !{!4909}
!4909 = !DILocalVariable(name: "a", arg: 1, scope: !4906, file: !4907, line: 16, type: !103)
!4910 = !DILocation(line: 0, scope: !4906)
!4911 = !DILocation(line: 18, column: 29, scope: !4906)
!4912 = !DILocation(line: 18, column: 45, scope: !4906)
!4913 = !DILocation(line: 18, column: 2, scope: !4906)
!4914 = distinct !DISubprogram(name: "conversion_radix", scope: !2586, file: !2586, line: 761, type: !4915, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4917)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!217, !159}
!4917 = !{!4918}
!4918 = !DILocalVariable(name: "specifier", arg: 1, scope: !4914, file: !2586, line: 761, type: !159)
!4919 = !DILocation(line: 0, scope: !4914)
!4920 = !DILocation(line: 763, column: 2, scope: !4914)
!4921 = !DILocation(line: 770, column: 3, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4914, file: !2586, line: 763, column: 21)
!4923 = !DILocation(line: 774, column: 3, scope: !4922)
!4924 = !DILocation(line: 0, scope: !4922)
!4925 = !DILocation(line: 776, column: 1, scope: !4914)
!4926 = distinct !DISubprogram(name: "extract_flags", scope: !2586, file: !2586, line: 339, type: !4768, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4927)
!4927 = !{!4928, !4929, !4930}
!4928 = !DILocalVariable(name: "conv", arg: 1, scope: !4926, file: !2586, line: 339, type: !4424)
!4929 = !DILocalVariable(name: "sp", arg: 2, scope: !4926, file: !2586, line: 340, type: !157)
!4930 = !DILocalVariable(name: "loop", scope: !4926, file: !2586, line: 342, type: !170)
!4931 = !DILocation(line: 0, scope: !4926)
!4932 = !DILocation(line: 344, column: 2, scope: !4926)
!4933 = !DILocation(line: 345, column: 11, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4926, file: !2586, line: 344, column: 5)
!4935 = !DILocation(line: 345, column: 3, scope: !4934)
!4936 = !DILocation(line: 351, column: 4, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !2586, line: 345, column: 16)
!4938 = !DILocation(line: 354, column: 4, scope: !4937)
!4939 = !DILocation(line: 357, column: 4, scope: !4937)
!4940 = !DILocation(line: 360, column: 4, scope: !4937)
!4941 = !DILocation(line: 0, scope: !4937)
!4942 = !DILocation(line: 370, column: 12, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4926, file: !2586, line: 370, column: 6)
!4944 = !DILocation(line: 370, column: 22, scope: !4943)
!4945 = !DILocation(line: 371, column: 19, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4943, file: !2586, line: 370, column: 42)
!4947 = !DILocation(line: 372, column: 2, scope: !4946)
!4948 = !DILocation(line: 376, column: 2, scope: !4926)
!4949 = distinct !DISubprogram(name: "extract_width", scope: !2586, file: !2586, line: 388, type: !4768, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4950)
!4950 = !{!4951, !4952, !4953, !4954}
!4951 = !DILocalVariable(name: "conv", arg: 1, scope: !4949, file: !2586, line: 388, type: !4424)
!4952 = !DILocalVariable(name: "sp", arg: 2, scope: !4949, file: !2586, line: 389, type: !157)
!4953 = !DILocalVariable(name: "wp", scope: !4949, file: !2586, line: 398, type: !157)
!4954 = !DILocalVariable(name: "width", scope: !4949, file: !2586, line: 399, type: !217)
!4955 = !DILocation(line: 0, scope: !4949)
!4956 = !DILocation(line: 391, column: 8, scope: !4949)
!4957 = !DILocation(line: 391, column: 22, scope: !4949)
!4958 = !DILocation(line: 393, column: 6, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4949, file: !2586, line: 393, column: 6)
!4960 = !DILocation(line: 393, column: 10, scope: !4959)
!4961 = !DILocation(line: 393, column: 6, scope: !4949)
!4962 = !DILocation(line: 394, column: 20, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4959, file: !2586, line: 393, column: 18)
!4964 = !DILocation(line: 395, column: 10, scope: !4963)
!4965 = !DILocation(line: 395, column: 3, scope: !4963)
!4966 = !DILocation(line: 399, column: 17, scope: !4949)
!4967 = !DILocation(line: 401, column: 6, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4949, file: !2586, line: 401, column: 6)
!4969 = !DILocation(line: 401, column: 9, scope: !4968)
!4970 = !DILocation(line: 401, column: 6, scope: !4949)
!4971 = !DILocation(line: 402, column: 23, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !2586, line: 401, column: 16)
!4973 = !DILocation(line: 403, column: 9, scope: !4972)
!4974 = !DILocation(line: 403, column: 21, scope: !4972)
!4975 = !DILocation(line: 405, column: 11, scope: !4972)
!4976 = !DILocation(line: 404, column: 21, scope: !4972)
!4977 = !DILocation(line: 406, column: 2, scope: !4972)
!4978 = !DILocation(line: 409, column: 1, scope: !4949)
!4979 = distinct !DISubprogram(name: "extract_prec", scope: !2586, file: !2586, line: 420, type: !4768, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !4980)
!4980 = !{!4981, !4982, !4983}
!4981 = !DILocalVariable(name: "conv", arg: 1, scope: !4979, file: !2586, line: 420, type: !4424)
!4982 = !DILocalVariable(name: "sp", arg: 2, scope: !4979, file: !2586, line: 421, type: !157)
!4983 = !DILocalVariable(name: "prec", scope: !4979, file: !2586, line: 435, type: !217)
!4984 = !DILocation(line: 0, scope: !4979)
!4985 = !DILocation(line: 423, column: 24, scope: !4979)
!4986 = !DILocation(line: 423, column: 28, scope: !4979)
!4987 = !DILocation(line: 423, column: 8, scope: !4979)
!4988 = !DILocation(line: 423, column: 21, scope: !4979)
!4989 = !DILocation(line: 425, column: 6, scope: !4979)
!4990 = !DILocation(line: 428, column: 2, scope: !4979)
!4991 = !DILocation(line: 430, column: 6, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4979, file: !2586, line: 430, column: 6)
!4993 = !DILocation(line: 430, column: 10, scope: !4992)
!4994 = !DILocation(line: 430, column: 6, scope: !4979)
!4995 = !DILocation(line: 431, column: 19, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !2586, line: 430, column: 18)
!4997 = !DILocation(line: 432, column: 10, scope: !4996)
!4998 = !DILocation(line: 432, column: 3, scope: !4996)
!4999 = !DILocation(line: 435, column: 16, scope: !4979)
!5000 = !DILocation(line: 437, column: 8, scope: !4979)
!5001 = !DILocation(line: 437, column: 19, scope: !4979)
!5002 = !DILocation(line: 439, column: 10, scope: !4979)
!5003 = !DILocation(line: 438, column: 20, scope: !4979)
!5004 = !DILocation(line: 441, column: 9, scope: !4979)
!5005 = !DILocation(line: 442, column: 1, scope: !4979)
!5006 = distinct !DISubprogram(name: "extract_length", scope: !2586, file: !2586, line: 453, type: !4768, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !5007)
!5007 = !{!5008, !5009}
!5008 = !DILocalVariable(name: "conv", arg: 1, scope: !5006, file: !2586, line: 453, type: !4424)
!5009 = !DILocalVariable(name: "sp", arg: 2, scope: !5006, file: !2586, line: 454, type: !157)
!5010 = !DILocation(line: 0, scope: !5006)
!5011 = !DILocation(line: 456, column: 10, scope: !5006)
!5012 = !DILocation(line: 456, column: 2, scope: !5006)
!5013 = !DILocation(line: 458, column: 8, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !2586, line: 458, column: 7)
!5015 = distinct !DILexicalBlock(scope: !5006, file: !2586, line: 456, column: 15)
!5016 = !DILocation(line: 458, column: 7, scope: !5014)
!5017 = !DILocation(line: 458, column: 13, scope: !5014)
!5018 = !DILocation(line: 0, scope: !5014)
!5019 = !DILocation(line: 458, column: 7, scope: !5015)
!5020 = !DILocation(line: 459, column: 21, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5014, file: !2586, line: 458, column: 21)
!5022 = !DILocation(line: 460, column: 4, scope: !5021)
!5023 = !DILocation(line: 461, column: 3, scope: !5021)
!5024 = !DILocation(line: 462, column: 21, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5014, file: !2586, line: 461, column: 10)
!5026 = !DILocation(line: 466, column: 8, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5015, file: !2586, line: 466, column: 7)
!5028 = !DILocation(line: 466, column: 7, scope: !5027)
!5029 = !DILocation(line: 466, column: 13, scope: !5027)
!5030 = !DILocation(line: 0, scope: !5027)
!5031 = !DILocation(line: 466, column: 7, scope: !5015)
!5032 = !DILocation(line: 467, column: 21, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5027, file: !2586, line: 466, column: 21)
!5034 = !DILocation(line: 468, column: 4, scope: !5033)
!5035 = !DILocation(line: 469, column: 3, scope: !5033)
!5036 = !DILocation(line: 470, column: 21, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5027, file: !2586, line: 469, column: 10)
!5038 = !DILocation(line: 474, column: 9, scope: !5015)
!5039 = !DILocation(line: 474, column: 20, scope: !5015)
!5040 = !DILocation(line: 475, column: 3, scope: !5015)
!5041 = !DILocation(line: 476, column: 3, scope: !5015)
!5042 = !DILocation(line: 478, column: 9, scope: !5015)
!5043 = !DILocation(line: 478, column: 20, scope: !5015)
!5044 = !DILocation(line: 479, column: 3, scope: !5015)
!5045 = !DILocation(line: 480, column: 3, scope: !5015)
!5046 = !DILocation(line: 482, column: 9, scope: !5015)
!5047 = !DILocation(line: 482, column: 20, scope: !5015)
!5048 = !DILocation(line: 483, column: 3, scope: !5015)
!5049 = !DILocation(line: 484, column: 3, scope: !5015)
!5050 = !DILocation(line: 486, column: 9, scope: !5015)
!5051 = !DILocation(line: 486, column: 20, scope: !5015)
!5052 = !DILocation(line: 487, column: 3, scope: !5015)
!5053 = !DILocation(line: 492, column: 21, scope: !5015)
!5054 = !DILocation(line: 493, column: 3, scope: !5015)
!5055 = !DILocation(line: 495, column: 9, scope: !5015)
!5056 = !DILocation(line: 495, column: 20, scope: !5015)
!5057 = !DILocation(line: 496, column: 3, scope: !5015)
!5058 = !DILocation(line: 498, column: 2, scope: !5006)
!5059 = distinct !DISubprogram(name: "extract_specifier", scope: !2586, file: !2586, line: 513, type: !4768, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !5060)
!5060 = !{!5061, !5062, !5063, !5064}
!5061 = !DILocalVariable(name: "conv", arg: 1, scope: !5059, file: !2586, line: 513, type: !4424)
!5062 = !DILocalVariable(name: "sp", arg: 2, scope: !5059, file: !2586, line: 514, type: !157)
!5063 = !DILocalVariable(name: "unsupported", scope: !5059, file: !2586, line: 516, type: !170)
!5064 = !DILabel(scope: !5065, name: "int_conv", file: !2586, line: 526)
!5065 = distinct !DILexicalBlock(scope: !5059, file: !2586, line: 520, column: 27)
!5066 = !DILocation(line: 0, scope: !5059)
!5067 = !DILocation(line: 518, column: 20, scope: !5059)
!5068 = !DILocation(line: 518, column: 8, scope: !5059)
!5069 = !DILocation(line: 518, column: 18, scope: !5059)
!5070 = !DILocation(line: 520, column: 2, scope: !5059)
!5071 = !DILocation(line: 525, column: 3, scope: !5065)
!5072 = !DILocation(line: 0, scope: !5065)
!5073 = !DILocation(line: 526, column: 1, scope: !5065)
!5074 = !DILocation(line: 528, column: 24, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5065, file: !2586, line: 528, column: 7)
!5076 = !DILocation(line: 528, column: 7, scope: !5065)
!5077 = !DILocation(line: 535, column: 23, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5065, file: !2586, line: 535, column: 7)
!5079 = !DILocation(line: 535, column: 7, scope: !5065)
!5080 = !DILocation(line: 536, column: 36, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5078, file: !2586, line: 535, column: 31)
!5082 = !DILocation(line: 537, column: 3, scope: !5081)
!5083 = !DILocation(line: 570, column: 9, scope: !5065)
!5084 = !DILocation(line: 570, column: 23, scope: !5065)
!5085 = !DILocation(line: 575, column: 4, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !2586, line: 573, column: 48)
!5087 = distinct !DILexicalBlock(scope: !5065, file: !2586, line: 573, column: 7)
!5088 = !DILocation(line: 603, column: 9, scope: !5065)
!5089 = !DILocation(line: 603, column: 23, scope: !5065)
!5090 = !DILocation(line: 605, column: 24, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5065, file: !2586, line: 605, column: 7)
!5092 = !DILocation(line: 605, column: 7, scope: !5065)
!5093 = !DILocation(line: 612, column: 9, scope: !5065)
!5094 = !DILocation(line: 612, column: 23, scope: !5065)
!5095 = !DILocation(line: 619, column: 24, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5065, file: !2586, line: 619, column: 7)
!5097 = !DILocation(line: 619, column: 7, scope: !5065)
!5098 = !DILocation(line: 625, column: 9, scope: !5065)
!5099 = !DILocation(line: 625, column: 17, scope: !5065)
!5100 = !DILocation(line: 626, column: 3, scope: !5065)
!5101 = !DILocation(line: 629, column: 20, scope: !5059)
!5102 = !DILocation(line: 629, column: 8, scope: !5059)
!5103 = !DILocation(line: 518, column: 23, scope: !5059)
!5104 = !DILocation(line: 631, column: 2, scope: !5059)
!5105 = distinct !DISubprogram(name: "extract_decimal", scope: !2586, file: !2586, line: 318, type: !5106, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !5109)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!217, !5108}
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5109 = !{!5110, !5111, !5112}
!5110 = !DILocalVariable(name: "str", arg: 1, scope: !5105, file: !2586, line: 318, type: !5108)
!5111 = !DILocalVariable(name: "sp", scope: !5105, file: !2586, line: 320, type: !157)
!5112 = !DILocalVariable(name: "val", scope: !5105, file: !2586, line: 321, type: !217)
!5113 = !DILocation(line: 0, scope: !5105)
!5114 = !DILocation(line: 320, column: 19, scope: !5105)
!5115 = !DILocation(line: 323, column: 37, scope: !5105)
!5116 = !DILocation(line: 323, column: 17, scope: !5105)
!5117 = !DILocation(line: 323, column: 9, scope: !5105)
!5118 = !DILocation(line: 323, column: 2, scope: !5105)
!5119 = !DILocation(line: 324, column: 13, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5105, file: !2586, line: 323, column: 43)
!5121 = !DILocation(line: 324, column: 24, scope: !5120)
!5122 = !DILocation(line: 324, column: 19, scope: !5120)
!5123 = !DILocation(line: 324, column: 27, scope: !5120)
!5124 = distinct !{!5124, !5118, !5125}
!5125 = !DILocation(line: 325, column: 2, scope: !5105)
!5126 = !DILocation(line: 326, column: 7, scope: !5105)
!5127 = !DILocation(line: 327, column: 2, scope: !5105)
!5128 = distinct !DISubprogram(name: "isdigit", scope: !4907, file: !4907, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !5129)
!5129 = !{!5130}
!5130 = !DILocalVariable(name: "a", arg: 1, scope: !5128, file: !4907, line: 43, type: !103)
!5131 = !DILocation(line: 0, scope: !5128)
!5132 = !DILocation(line: 45, column: 29, scope: !5128)
!5133 = !DILocation(line: 45, column: 45, scope: !5128)
!5134 = !DILocation(line: 45, column: 2, scope: !5128)
!5135 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5136, file: !5136, line: 9, type: !3154, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !330)
!5136 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!5137 = !DILocation(line: 11, column: 1, scope: !5135)
!5138 = !{i64 2147560762, i64 2147560805, i64 2147560845}
!5139 = !DILocation(line: 12, column: 1, scope: !5135)
!5140 = !{i64 2147564989, i64 2147565032, i64 2147565072}
!5141 = !DILocation(line: 13, column: 1, scope: !5135)
!5142 = !{i64 2147565198, i64 2147565241, i64 2147565281}
!5143 = !DILocation(line: 14, column: 1, scope: !5135)
!5144 = !{i64 2147565415, i64 2147565458, i64 2147565498}
!5145 = !DILocation(line: 15, column: 1, scope: !5135)
!5146 = !{i64 2147565584, i64 2147565627, i64 2147565667}
!5147 = !DILocation(line: 16, column: 1, scope: !5135)
!5148 = !{i64 2147565747, i64 2147565790, i64 2147565830}
!5149 = !DILocation(line: 17, column: 1, scope: !5135)
!5150 = !{i64 2147565931, i64 2147565974, i64 2147566014}
!5151 = !DILocation(line: 18, column: 1, scope: !5135)
!5152 = !{i64 2147566110, i64 2147566153, i64 2147566193}
!5153 = !DILocation(line: 19, column: 1, scope: !5135)
!5154 = !{i64 2147566352, i64 2147566395, i64 2147566435}
!5155 = !DILocation(line: 20, column: 1, scope: !5135)
!5156 = !{i64 2147566587, i64 2147566630, i64 2147566670}
!5157 = !DILocation(line: 21, column: 1, scope: !5135)
!5158 = !{i64 2147566773, i64 2147566816, i64 2147566856}
!5159 = !DILocation(line: 22, column: 1, scope: !5135)
!5160 = !{i64 2147566989, i64 2147567032, i64 2147567072}
!5161 = !DILocation(line: 23, column: 1, scope: !5135)
!5162 = !{i64 2147567192, i64 2147567235, i64 2147567275}
!5163 = !DILocation(line: 24, column: 1, scope: !5135)
!5164 = !{i64 2147567395, i64 2147567438, i64 2147567478}
!5165 = !DILocation(line: 25, column: 1, scope: !5135)
!5166 = !{i64 2147567570, i64 2147567613, i64 2147567653}
!5167 = !DILocation(line: 26, column: 1, scope: !5135)
!5168 = !{i64 2147567778, i64 2147567821, i64 2147567861}
!5169 = !DILocation(line: 27, column: 1, scope: !5135)
!5170 = !{i64 2147567982, i64 2147568025, i64 2147568065}
!5171 = !DILocation(line: 28, column: 1, scope: !5135)
!5172 = !{i64 2147568175, i64 2147568218, i64 2147568258}
!5173 = !DILocation(line: 29, column: 1, scope: !5135)
!5174 = !{i64 2147568377, i64 2147568420, i64 2147568460}
!5175 = !DILocation(line: 30, column: 1, scope: !5135)
!5176 = !{i64 2147568604, i64 2147568647, i64 2147568687}
!5177 = !DILocation(line: 31, column: 1, scope: !5135)
!5178 = !{i64 2147568806, i64 2147568849, i64 2147568889}
!5179 = !DILocation(line: 32, column: 1, scope: !5135)
!5180 = !{i64 2147569021, i64 2147569064, i64 2147569104}
!5181 = !DILocation(line: 33, column: 1, scope: !5135)
!5182 = !{i64 2147569193, i64 2147569236, i64 2147569276}
!5183 = !DILocation(line: 34, column: 1, scope: !5135)
!5184 = !{i64 2147569395, i64 2147569438, i64 2147569478}
!5185 = !DILocation(line: 35, column: 1, scope: !5135)
!5186 = !{i64 2147569621, i64 2147569664, i64 2147569704}
!5187 = !DILocation(line: 36, column: 1, scope: !5135)
!5188 = !{i64 2147569820, i64 2147569863, i64 2147569903}
!5189 = !DILocation(line: 37, column: 1, scope: !5135)
!5190 = !{i64 2147569995, i64 2147570038, i64 2147570078}
!5191 = !DILocation(line: 38, column: 1, scope: !5135)
!5192 = !{i64 2147570248, i64 2147570291, i64 2147570331}
!5193 = !DILocation(line: 39, column: 1, scope: !5135)
!5194 = !{i64 2147570486, i64 2147570529, i64 2147570569}
!5195 = !DILocation(line: 40, column: 1, scope: !5135)
!5196 = !{i64 2147570721, i64 2147570764, i64 2147570804}
!5197 = !DILocation(line: 41, column: 1, scope: !5135)
!5198 = !{i64 2147570953, i64 2147570996, i64 2147571036}
!5199 = !DILocation(line: 42, column: 1, scope: !5135)
!5200 = !{i64 2147571179, i64 2147571222, i64 2147571262}
!5201 = !DILocation(line: 43, column: 1, scope: !5135)
!5202 = !{i64 2147571438, i64 2147571481, i64 2147571521}
!5203 = !DILocation(line: 44, column: 1, scope: !5135)
!5204 = !{i64 2147571664, i64 2147571707, i64 2147571747}
!5205 = !DILocation(line: 45, column: 1, scope: !5135)
!5206 = !{i64 2147571905, i64 2147571948, i64 2147571988}
!5207 = !DILocation(line: 46, column: 1, scope: !5135)
!5208 = !{i64 2147572149, i64 2147572192, i64 2147572232}
!5209 = !DILocation(line: 47, column: 1, scope: !5135)
!5210 = !{i64 2147572390, i64 2147572433, i64 2147572473}
!5211 = !DILocation(line: 48, column: 1, scope: !5135)
!5212 = !{i64 2147572625, i64 2147572668, i64 2147572708}
!5213 = !DILocation(line: 49, column: 1, scope: !5135)
!5214 = !{i64 2147572851, i64 2147572894, i64 2147572934}
!5215 = !DILocation(line: 50, column: 1, scope: !5135)
!5216 = !{i64 2147573077, i64 2147573120, i64 2147573160}
!5217 = !DILocation(line: 51, column: 1, scope: !5135)
!5218 = !{i64 2147573321, i64 2147573364, i64 2147573404}
!5219 = !DILocation(line: 52, column: 1, scope: !5135)
!5220 = !{i64 2147573559, i64 2147573602, i64 2147573642}
!5221 = !DILocation(line: 53, column: 1, scope: !5135)
!5222 = !{i64 2147577894, i64 2147577937, i64 2147577977}
!5223 = !DILocation(line: 54, column: 1, scope: !5135)
!5224 = !{i64 2147578132, i64 2147578175, i64 2147578215}
!5225 = !DILocation(line: 55, column: 1, scope: !5135)
!5226 = !{i64 2147578376, i64 2147578419, i64 2147578459}
!5227 = !DILocation(line: 56, column: 1, scope: !5135)
!5228 = !{i64 2147578626, i64 2147578669, i64 2147578709}
!5229 = !DILocation(line: 57, column: 1, scope: !5135)
!5230 = !{i64 2147578873, i64 2147578916, i64 2147578956}
!5231 = !DILocation(line: 58, column: 1, scope: !5135)
!5232 = !{i64 2147579108, i64 2147579151, i64 2147579191}
!5233 = !DILocation(line: 59, column: 1, scope: !5135)
!5234 = !{i64 2147579343, i64 2147579386, i64 2147579426}
!5235 = !DILocation(line: 60, column: 1, scope: !5135)
!5236 = !{i64 2147579578, i64 2147579621, i64 2147579661}
!5237 = !DILocation(line: 61, column: 1, scope: !5135)
!5238 = !{i64 2147579816, i64 2147579859, i64 2147579899}
!5239 = !DILocation(line: 62, column: 1, scope: !5135)
!5240 = !{i64 2147580057, i64 2147580100, i64 2147580140}
!5241 = !DILocation(line: 63, column: 1, scope: !5135)
!5242 = !{i64 2147580316, i64 2147580359, i64 2147580399}
!5243 = !DILocation(line: 64, column: 1, scope: !5135)
!5244 = !{i64 2147580596, i64 2147580639, i64 2147580679}
!5245 = !DILocation(line: 65, column: 1, scope: !5135)
!5246 = !{i64 2147580825, i64 2147580868, i64 2147580908}
!5247 = !DILocation(line: 66, column: 1, scope: !5135)
!5248 = !{i64 2147581033, i64 2147581076, i64 2147581116}
!5249 = !DILocation(line: 67, column: 1, scope: !5135)
!5250 = !{i64 2147581244, i64 2147581287, i64 2147581327}
!5251 = !DILocation(line: 68, column: 1, scope: !5135)
!5252 = !{i64 2147581479, i64 2147581522, i64 2147581562}
!5253 = !DILocation(line: 69, column: 1, scope: !5135)
!5254 = !{i64 2147581708, i64 2147581751, i64 2147581791}
!5255 = !DILocation(line: 70, column: 1, scope: !5135)
!5256 = !{i64 2147581946, i64 2147581989, i64 2147582029}
!5257 = !DILocation(line: 71, column: 1, scope: !5135)
!5258 = !{i64 2147582178, i64 2147582221, i64 2147582261}
!5259 = !DILocation(line: 72, column: 1, scope: !5135)
!5260 = !{i64 2147582404, i64 2147582447, i64 2147582487}
!5261 = !DILocation(line: 73, column: 1, scope: !5135)
!5262 = !{i64 2147582621, i64 2147582664, i64 2147582704}
!5263 = !DILocation(line: 74, column: 1, scope: !5135)
!5264 = !{i64 2147582853, i64 2147582896, i64 2147582936}
!5265 = !DILocation(line: 75, column: 1, scope: !5135)
!5266 = !{i64 2147583079, i64 2147583122, i64 2147583162}
!5267 = !DILocation(line: 76, column: 1, scope: !5135)
!5268 = !{i64 2147583293, i64 2147583336, i64 2147583376}
!5269 = !DILocation(line: 77, column: 1, scope: !5135)
!5270 = !{i64 2147583513, i64 2147583556, i64 2147583596}
!5271 = !DILocation(line: 78, column: 1, scope: !5135)
!5272 = !{i64 2147583745, i64 2147583788, i64 2147583828}
!5273 = !DILocation(line: 79, column: 1, scope: !5135)
!5274 = !{i64 2147583953, i64 2147583996, i64 2147584036}
!5275 = !DILocation(line: 80, column: 1, scope: !5135)
!5276 = !{i64 2147584158, i64 2147584201, i64 2147584241}
!5277 = !DILocation(line: 81, column: 1, scope: !5135)
!5278 = !{i64 2147584375, i64 2147584418, i64 2147584458}
!5279 = !DILocation(line: 82, column: 1, scope: !5135)
!5280 = !{i64 2147584589, i64 2147584632, i64 2147584672}
!5281 = !DILocation(line: 83, column: 1, scope: !5135)
!5282 = !{i64 2147584815, i64 2147584858, i64 2147584898}
!5283 = !DILocation(line: 84, column: 1, scope: !5135)
!5284 = !{i64 2147585035, i64 2147585078, i64 2147585118}
!5285 = !DILocation(line: 85, column: 1, scope: !5135)
!5286 = !{i64 2147585240, i64 2147585283, i64 2147585323}
!5287 = !DILocation(line: 86, column: 1, scope: !5135)
!5288 = !{i64 2147585472, i64 2147585515, i64 2147585555}
!5289 = !DILocation(line: 87, column: 1, scope: !5135)
!5290 = !{i64 2147585707, i64 2147585750, i64 2147585790}
!5291 = !DILocation(line: 88, column: 1, scope: !5135)
!5292 = !{i64 2147590018, i64 2147590061, i64 2147590101}
!5293 = !DILocation(line: 89, column: 1, scope: !5135)
!5294 = !{i64 2147590268, i64 2147590311, i64 2147590351}
!5295 = !DILocation(line: 90, column: 1, scope: !5135)
!5296 = !{i64 2147590506, i64 2147590549, i64 2147590589}
!5297 = !DILocation(line: 91, column: 1, scope: !5135)
!5298 = !{i64 2147590717, i64 2147590760, i64 2147590800}
!5299 = !DILocation(line: 92, column: 1, scope: !5135)
!5300 = !{i64 2147590934, i64 2147590977, i64 2147591017}
!5301 = !DILocation(line: 93, column: 1, scope: !5135)
!5302 = !{i64 2147591130, i64 2147591173, i64 2147591213}
!5303 = !DILocation(line: 94, column: 1, scope: !5135)
!5304 = !{i64 2147591332, i64 2147591375, i64 2147591415}
!5305 = !DILocation(line: 95, column: 1, scope: !5135)
!5306 = !{i64 2147591525, i64 2147591568, i64 2147591608}
!5307 = !DILocation(line: 96, column: 1, scope: !5135)
!5308 = !{i64 2147591733, i64 2147591776, i64 2147591816}
!5309 = !DILocation(line: 97, column: 1, scope: !5135)
!5310 = !{i64 2147591929, i64 2147591972, i64 2147592012}
!5311 = !DILocation(line: 98, column: 1, scope: !5135)
!5312 = !{i64 2147592134, i64 2147592177, i64 2147592217}
!5313 = !DILocation(line: 99, column: 1, scope: !5135)
!5314 = !{i64 2147592345, i64 2147592388, i64 2147592428}
!5315 = !DILocation(line: 100, column: 1, scope: !5135)
!5316 = !{i64 2147592544, i64 2147592587, i64 2147592627}
!5317 = !DILocation(line: 101, column: 1, scope: !5135)
!5318 = !{i64 2147592719, i64 2147592762, i64 2147592802}
!5319 = !DILocation(line: 102, column: 1, scope: !5135)
!5320 = !{i64 2147592903, i64 2147592946, i64 2147592986}
!5321 = !DILocation(line: 103, column: 1, scope: !5135)
!5322 = !{i64 2147593105, i64 2147593148, i64 2147593188}
!5323 = !DILocation(line: 104, column: 1, scope: !5135)
!5324 = !{i64 2147593307, i64 2147593350, i64 2147593390}
!5325 = !DILocation(line: 105, column: 1, scope: !5135)
!5326 = !{i64 2147593473, i64 2147593516, i64 2147593556}
!5327 = !DILocation(line: 106, column: 1, scope: !5135)
!5328 = !{i64 2147593657, i64 2147593700, i64 2147593740}
!5329 = !DILocation(line: 107, column: 1, scope: !5135)
!5330 = !{i64 2147593847, i64 2147593890, i64 2147593930}
!5331 = !DILocation(line: 108, column: 1, scope: !5135)
!5332 = !{i64 2147594031, i64 2147594074, i64 2147594114}
!5333 = !DILocation(line: 109, column: 1, scope: !5135)
!5334 = !{i64 2147594245, i64 2147594288, i64 2147594328}
!5335 = !DILocation(line: 110, column: 1, scope: !5135)
!5336 = !{i64 2147594456, i64 2147594499, i64 2147594539}
!5337 = !DILocation(line: 111, column: 1, scope: !5135)
!5338 = !{i64 2147594679, i64 2147594722, i64 2147594762}
!5339 = !DILocation(line: 112, column: 1, scope: !5135)
!5340 = !{i64 2147594863, i64 2147594906, i64 2147594946}
!5341 = !DILocation(line: 113, column: 1, scope: !5135)
!5342 = !{i64 2147595077, i64 2147595120, i64 2147595160}
!5343 = !DILocation(line: 114, column: 1, scope: !5135)
!5344 = !{i64 2147595243, i64 2147595286, i64 2147595326}
!5345 = !DILocation(line: 115, column: 1, scope: !5135)
!5346 = !{i64 2147595424, i64 2147595467, i64 2147595507}
!5347 = !DILocation(line: 116, column: 1, scope: !5135)
!5348 = !{i64 2147595617, i64 2147595660, i64 2147595700}
!5349 = !DILocation(line: 117, column: 1, scope: !5135)
!5350 = !{i64 2147595843, i64 2147595886, i64 2147595926}
!5351 = !DILocation(line: 118, column: 1, scope: !5135)
!5352 = !{i64 2147596057, i64 2147596100, i64 2147596140}
!5353 = !DILocation(line: 119, column: 1, scope: !5135)
!5354 = !{i64 2147596283, i64 2147596326, i64 2147596366}
!5355 = !DILocation(line: 120, column: 1, scope: !5135)
!5356 = !{i64 2147596500, i64 2147596543, i64 2147596583}
!5357 = !DILocation(line: 121, column: 1, scope: !5135)
!5358 = !{i64 2147596777, i64 2147596820, i64 2147596860}
!5359 = !DILocation(line: 122, column: 1, scope: !5135)
!5360 = !{i64 2147597003, i64 2147597046, i64 2147597086}
!5361 = !DILocation(line: 123, column: 1, scope: !5135)
!5362 = !{i64 2147597199, i64 2147597242, i64 2147597282}
!5363 = !DILocation(line: 124, column: 1, scope: !5135)
!5364 = !{i64 2147597464, i64 2147597507, i64 2147597547}
!5365 = !DILocation(line: 125, column: 1, scope: !5135)
!5366 = !{i64 2147597678, i64 2147597721, i64 2147597761}
!5367 = !DILocation(line: 126, column: 1, scope: !5135)
!5368 = !{i64 2147597853, i64 2147597896, i64 2147597936}
!5369 = !DILocation(line: 127, column: 1, scope: !5135)
!5370 = !{i64 2147598107, i64 2147598150, i64 2147598190}
!5371 = !DILocation(line: 128, column: 1, scope: !5135)
!5372 = !{i64 2147598306, i64 2147598349, i64 2147598389}
!5373 = !DILocation(line: 129, column: 1, scope: !5135)
!5374 = !{i64 2147598548, i64 2147598591, i64 2147598631}
!5375 = !DILocation(line: 130, column: 1, scope: !5135)
!5376 = !{i64 2147598711, i64 2147598754, i64 2147598794}
!5377 = !DILocation(line: 131, column: 1, scope: !5135)
!5378 = !{i64 2147598898, i64 2147598941, i64 2147598981}
!5379 = !DILocation(line: 132, column: 1, scope: !5135)
!5380 = !{i64 2147599091, i64 2147599134, i64 2147599174}
!5381 = !DILocation(line: 133, column: 1, scope: !5135)
!5382 = !{i64 2147603334, i64 2147603377, i64 2147603417}
!5383 = !DILocation(line: 134, column: 1, scope: !5135)
!5384 = !{i64 2147603548, i64 2147603591, i64 2147603631}
!5385 = !DILocation(line: 135, column: 1, scope: !5135)
!5386 = !{i64 2147603759, i64 2147603802, i64 2147603842}
!5387 = !DILocation(line: 136, column: 1, scope: !5135)
!5388 = !{i64 2147603979, i64 2147604022, i64 2147604062}
!5389 = !DILocation(line: 137, column: 1, scope: !5135)
!5390 = !{i64 2147604186, i64 2147604229, i64 2147604269}
!5391 = !DILocation(line: 138, column: 1, scope: !5135)
!5392 = !{i64 2147604459, i64 2147604502, i64 2147604542}
!5393 = !DILocation(line: 139, column: 1, scope: !5135)
!5394 = !{i64 2147604707, i64 2147604750, i64 2147604790}
!5395 = !DILocation(line: 140, column: 1, scope: !5135)
!5396 = !{i64 2147604906, i64 2147604949, i64 2147604989}
!5397 = !DILocation(line: 141, column: 1, scope: !5135)
!5398 = !{i64 2147605141, i64 2147605184, i64 2147605224}
!5399 = !DILocation(line: 142, column: 1, scope: !5135)
!5400 = !{i64 2147605391, i64 2147605434, i64 2147605474}
!5401 = !DILocation(line: 143, column: 1, scope: !5135)
!5402 = !{i64 2147605593, i64 2147605636, i64 2147605676}
!5403 = !DILocation(line: 144, column: 1, scope: !5135)
!5404 = !{i64 2147605816, i64 2147605859, i64 2147605899}
!5405 = !DILocation(line: 145, column: 1, scope: !5135)
!5406 = !{i64 2147606030, i64 2147606073, i64 2147606113}
!5407 = !DILocation(line: 146, column: 1, scope: !5135)
!5408 = !{i64 2147606274, i64 2147606317, i64 2147606357}
!5409 = !DILocation(line: 147, column: 1, scope: !5135)
!5410 = !{i64 2147606503, i64 2147606546, i64 2147606586}
!5411 = !DILocation(line: 148, column: 1, scope: !5135)
!5412 = !{i64 2147606732, i64 2147606775, i64 2147606815}
!5413 = !DILocation(line: 149, column: 1, scope: !5135)
!5414 = !{i64 2147606940, i64 2147606983, i64 2147607023}
!5415 = !DILocation(line: 150, column: 1, scope: !5135)
!5416 = !{i64 2147607178, i64 2147607221, i64 2147607261}
!5417 = !DILocation(line: 151, column: 1, scope: !5135)
!5418 = !{i64 2147607404, i64 2147607447, i64 2147607487}
!5419 = !DILocation(line: 152, column: 1, scope: !5135)
!5420 = !{i64 2147607663, i64 2147607706, i64 2147607746}
!5421 = !DILocation(line: 153, column: 1, scope: !5135)
!5422 = !{i64 2147607883, i64 2147607926, i64 2147607966}
!5423 = !DILocation(line: 154, column: 1, scope: !5135)
!5424 = !{i64 2147608115, i64 2147608158, i64 2147608198}
!5425 = !DILocation(line: 155, column: 1, scope: !5135)
!5426 = !{i64 2147608356, i64 2147608399, i64 2147608439}
!5427 = !DILocation(line: 156, column: 1, scope: !5135)
!5428 = !{i64 2147608597, i64 2147608640, i64 2147608680}
!5429 = !DILocation(line: 157, column: 1, scope: !5135)
!5430 = !{i64 2147608820, i64 2147608863, i64 2147608903}
!5431 = !DILocation(line: 158, column: 1, scope: !5135)
!5432 = !{i64 2147609037, i64 2147609080, i64 2147609120}
!5433 = !DILocation(line: 159, column: 1, scope: !5135)
!5434 = !{i64 2147609278, i64 2147609321, i64 2147609361}
!5435 = !DILocation(line: 160, column: 1, scope: !5135)
!5436 = !{i64 2147609465, i64 2147609508, i64 2147609548}
!5437 = !DILocation(line: 161, column: 1, scope: !5135)
!5438 = !{i64 2147609628, i64 2147609671, i64 2147609711}
!5439 = !DILocation(line: 162, column: 1, scope: !5135)
!5440 = !{i64 2147609887, i64 2147609930, i64 2147609970}
!5441 = !DILocation(line: 163, column: 1, scope: !5135)
!5442 = !{i64 2147610110, i64 2147610153, i64 2147610193}
!5443 = !DILocation(line: 164, column: 1, scope: !5135)
!5444 = !{i64 2147610339, i64 2147610382, i64 2147610422}
!5445 = !DILocation(line: 165, column: 1, scope: !5135)
!5446 = !{i64 2147610535, i64 2147610578, i64 2147610618}
!5447 = !DILocation(line: 166, column: 1, scope: !5135)
!5448 = !{i64 2147610747, i64 2147610790, i64 2147610830}
!5449 = !DILocation(line: 167, column: 1, scope: !5135)
!5450 = !{i64 2147610968, i64 2147611011, i64 2147611051}
!5451 = !DILocation(line: 168, column: 1, scope: !5135)
!5452 = !{i64 2147611182, i64 2147611225, i64 2147611265}
!5453 = !DILocation(line: 169, column: 1, scope: !5135)
!5454 = !{i64 2147611372, i64 2147611415, i64 2147611455}
!5455 = !DILocation(line: 170, column: 1, scope: !5135)
!5456 = !{i64 2147611571, i64 2147611614, i64 2147611654}
!5457 = !DILocation(line: 171, column: 1, scope: !5135)
!5458 = !{i64 2147615837, i64 2147615880, i64 2147615920}
!5459 = !DILocation(line: 172, column: 1, scope: !5135)
!5460 = !{i64 2147616057, i64 2147616100, i64 2147616140}
!5461 = !DILocation(line: 173, column: 1, scope: !5135)
!5462 = !{i64 2147616258, i64 2147616301, i64 2147616341}
!5463 = !DILocation(line: 174, column: 1, scope: !5135)
!5464 = !{i64 2147616457, i64 2147616500, i64 2147616540}
!5465 = !DILocation(line: 175, column: 1, scope: !5135)
!5466 = !{i64 2147616662, i64 2147616705, i64 2147616745}
!5467 = !DILocation(line: 176, column: 1, scope: !5135)
!5468 = !{i64 2147616831, i64 2147616874, i64 2147616914}
!5469 = !DILocation(line: 177, column: 1, scope: !5135)
!5470 = !{i64 2147617015, i64 2147617058, i64 2147617098}
!5471 = !DILocation(line: 178, column: 1, scope: !5135)
!5472 = !{i64 2147617199, i64 2147617242, i64 2147617282}
!5473 = !DILocation(line: 179, column: 1, scope: !5135)
!5474 = !{i64 2147617386, i64 2147617429, i64 2147617469}
!5475 = !DILocation(line: 180, column: 1, scope: !5135)
!5476 = !{i64 2147617570, i64 2147617613, i64 2147617653}
!5477 = !DILocation(line: 181, column: 1, scope: !5135)
!5478 = !{i64 2147617808, i64 2147617851, i64 2147617891}
!5479 = !DILocation(line: 182, column: 1, scope: !5135)
!5480 = !{i64 2147618038, i64 2147618081, i64 2147618121}
!5481 = !DILocation(line: 183, column: 1, scope: !5135)
!5482 = !{i64 2147618267, i64 2147618310, i64 2147618350}
!5483 = !DILocation(line: 184, column: 1, scope: !5135)
!5484 = !{i64 2147618454, i64 2147618497, i64 2147618537}
!5485 = !DILocation(line: 185, column: 1, scope: !5135)
!5486 = !{i64 2147618650, i64 2147618693, i64 2147618733}
!5487 = !DILocation(line: 186, column: 1, scope: !5135)
!5488 = !{i64 2147618858, i64 2147618901, i64 2147618941}
!5489 = !DILocation(line: 187, column: 1, scope: !5135)
!5490 = !{i64 2147619070, i64 2147619113, i64 2147619153}
!5491 = !DILocation(line: 188, column: 1, scope: !5135)
!5492 = !{i64 2147619269, i64 2147619312, i64 2147619352}
!5493 = !DILocation(line: 189, column: 1, scope: !5135)
!5494 = !{i64 2147619507, i64 2147619550, i64 2147619590}
!5495 = !DILocation(line: 190, column: 1, scope: !5135)
!5496 = !{i64 2147619703, i64 2147619746, i64 2147619786}
!5497 = !DILocation(line: 191, column: 1, scope: !5135)
!5498 = !{i64 2147619905, i64 2147619948, i64 2147619988}
!5499 = !DILocation(line: 192, column: 1, scope: !5135)
!5500 = !{i64 2147620098, i64 2147620141, i64 2147620181}
!5501 = !DILocation(line: 193, column: 1, scope: !5135)
!5502 = !{i64 2147620332, i64 2147620375, i64 2147620415}
!5503 = !DILocation(line: 194, column: 1, scope: !5135)
!5504 = !{i64 2147620495, i64 2147620538, i64 2147620578}
!5505 = !DILocation(line: 195, column: 1, scope: !5135)
!5506 = !{i64 2147620734, i64 2147620777, i64 2147620817}
!5507 = !DILocation(line: 196, column: 1, scope: !5135)
!5508 = !{i64 2147620973, i64 2147621016, i64 2147621056}
!5509 = !DILocation(line: 197, column: 1, scope: !5135)
!5510 = !{i64 2147621209, i64 2147621252, i64 2147621292}
!5511 = !DILocation(line: 198, column: 1, scope: !5135)
!5512 = !{i64 2147621439, i64 2147621482, i64 2147621522}
!5513 = !DILocation(line: 199, column: 1, scope: !5135)
!5514 = !{i64 2147621626, i64 2147621669, i64 2147621709}
!5515 = !DILocation(line: 200, column: 1, scope: !5135)
!5516 = !{i64 2147621825, i64 2147621868, i64 2147621908}
!5517 = !DILocation(line: 201, column: 1, scope: !5135)
!5518 = !{i64 2147622096, i64 2147622139, i64 2147622179}
!5519 = !DILocation(line: 202, column: 1, scope: !5135)
!5520 = !{i64 2147622271, i64 2147622314, i64 2147622354}
!5521 = !DILocation(line: 203, column: 1, scope: !5135)
!5522 = !{i64 2147622505, i64 2147622548, i64 2147622588}
!5523 = !DILocation(line: 204, column: 1, scope: !5135)
!5524 = !{i64 2147622713, i64 2147622756, i64 2147622796}
!5525 = !DILocation(line: 205, column: 1, scope: !5135)
!5526 = !{i64 2147622912, i64 2147622955, i64 2147622995}
!5527 = !DILocation(line: 206, column: 1, scope: !5135)
!5528 = !{i64 2147623130, i64 2147623173, i64 2147623213}
!5529 = !DILocation(line: 207, column: 1, scope: !5135)
!5530 = !{i64 2147623320, i64 2147623363, i64 2147623403}
!5531 = !DILocation(line: 208, column: 1, scope: !5135)
!5532 = !{i64 2147623516, i64 2147623559, i64 2147623599}
!5533 = !DILocation(line: 209, column: 1, scope: !5135)
!5534 = !{i64 2147623722, i64 2147623765, i64 2147623805}
!5535 = !DILocation(line: 210, column: 1, scope: !5135)
!5536 = !{i64 2147623927, i64 2147623970, i64 2147624010}
!5537 = !DILocation(line: 211, column: 1, scope: !5135)
!5538 = !{i64 2147624153, i64 2147624196, i64 2147624236}
!5539 = !DILocation(line: 212, column: 1, scope: !5135)
!5540 = !{i64 2147624385, i64 2147624428, i64 2147624468}
!5541 = !DILocation(line: 213, column: 1, scope: !5135)
!5542 = !{i64 2147624569, i64 2147624612, i64 2147624652}
!5543 = !DILocation(line: 214, column: 1, scope: !5135)
!5544 = !{i64 2147624778, i64 2147624821, i64 2147624861}
!5545 = !DILocation(line: 215, column: 1, scope: !5135)
!5546 = !{i64 2147629023, i64 2147629066, i64 2147629106}
!5547 = !DILocation(line: 216, column: 1, scope: !5135)
!5548 = !{i64 2147629249, i64 2147629292, i64 2147629332}
!5549 = !DILocation(line: 217, column: 1, scope: !5135)
!5550 = !{i64 2147629475, i64 2147629518, i64 2147629558}
!5551 = !DILocation(line: 218, column: 1, scope: !5135)
!5552 = !{i64 2147629701, i64 2147629744, i64 2147629784}
!5553 = !DILocation(line: 219, column: 1, scope: !5135)
!5554 = !{i64 2147629927, i64 2147629970, i64 2147630010}
!5555 = !DILocation(line: 220, column: 1, scope: !5135)
!5556 = !{i64 2147630153, i64 2147630196, i64 2147630236}
!5557 = !DILocation(line: 221, column: 1, scope: !5135)
!5558 = !{i64 2147630385, i64 2147630428, i64 2147630468}
!5559 = !DILocation(line: 222, column: 1, scope: !5135)
!5560 = !{i64 2147630623, i64 2147630666, i64 2147630706}
!5561 = !DILocation(line: 223, column: 1, scope: !5135)
!5562 = !{i64 2147630855, i64 2147630898, i64 2147630938}
!5563 = !DILocation(line: 224, column: 1, scope: !5135)
!5564 = !{i64 2147631057, i64 2147631100, i64 2147631140}
!5565 = !DILocation(line: 225, column: 1, scope: !5135)
!5566 = !{i64 2147631307, i64 2147631350, i64 2147631390}
!5567 = !DILocation(line: 226, column: 1, scope: !5135)
!5568 = !{i64 2147631545, i64 2147631588, i64 2147631628}
!5569 = !DILocation(line: 227, column: 1, scope: !5135)
!5570 = !{i64 2147631729, i64 2147631772, i64 2147631812}
!5571 = !DILocation(line: 228, column: 1, scope: !5135)
!5572 = !{i64 2147631952, i64 2147631995, i64 2147632035}
!5573 = !DILocation(line: 229, column: 1, scope: !5135)
!5574 = !{i64 2147632190, i64 2147632233, i64 2147632273}
!5575 = !DILocation(line: 230, column: 1, scope: !5135)
!5576 = !{i64 2147632428, i64 2147632471, i64 2147632511}
!5577 = !DILocation(line: 231, column: 1, scope: !5135)
!5578 = !{i64 2147632621, i64 2147632664, i64 2147632704}
!5579 = !DILocation(line: 232, column: 1, scope: !5135)
!5580 = !{i64 2147632874, i64 2147632917, i64 2147632957}
!5581 = !DILocation(line: 233, column: 1, scope: !5135)
!5582 = !{i64 2147633088, i64 2147633131, i64 2147633171}
!5583 = !DILocation(line: 234, column: 1, scope: !5135)
!5584 = !{i64 2147633296, i64 2147633339, i64 2147633379}
!5585 = !DILocation(line: 235, column: 1, scope: !5135)
!5586 = !{i64 2147633486, i64 2147633529, i64 2147633569}
!5587 = !DILocation(line: 236, column: 1, scope: !5135)
!5588 = !{i64 2147633700, i64 2147633743, i64 2147633783}
!5589 = !DILocation(line: 237, column: 1, scope: !5135)
!5590 = !{i64 2147633962, i64 2147634005, i64 2147634045}
!5591 = !DILocation(line: 238, column: 1, scope: !5135)
!5592 = !{i64 2147634173, i64 2147634216, i64 2147634256}
!5593 = !DILocation(line: 239, column: 1, scope: !5135)
!5594 = !{i64 2147634417, i64 2147634460, i64 2147634500}
!5595 = !DILocation(line: 240, column: 1, scope: !5135)
!5596 = !{i64 2147634628, i64 2147634671, i64 2147634711}
!5597 = !DILocation(line: 241, column: 1, scope: !5135)
!5598 = !{i64 2147634857, i64 2147634900, i64 2147634940}
!5599 = !DILocation(line: 242, column: 1, scope: !5135)
!5600 = !{i64 2147635122, i64 2147635165, i64 2147635205}
!5601 = !DILocation(line: 243, column: 1, scope: !5135)
!5602 = !{i64 2147635327, i64 2147635370, i64 2147635410}
!5603 = !DILocation(line: 244, column: 1, scope: !5135)
!5604 = !{i64 2147635523, i64 2147635566, i64 2147635606}
!5605 = !DILocation(line: 245, column: 1, scope: !5135)
!5606 = !{i64 2147635746, i64 2147635789, i64 2147635829}
!5607 = !DILocation(line: 246, column: 1, scope: !5135)
!5608 = !{i64 2147635909, i64 2147635952, i64 2147635992}
!5609 = !DILocation(line: 247, column: 1, scope: !5135)
!5610 = !{i64 2147636114, i64 2147636157, i64 2147636197}
!5611 = !DILocation(line: 248, column: 1, scope: !5135)
!5612 = !{i64 2147636334, i64 2147636377, i64 2147636417}
!5613 = !DILocation(line: 249, column: 1, scope: !5135)
!5614 = !{i64 2147636548, i64 2147636591, i64 2147636631}
!5615 = !DILocation(line: 250, column: 1, scope: !5135)
!5616 = !{i64 2147636762, i64 2147636805, i64 2147636845}
!5617 = !DILocation(line: 251, column: 1, scope: !5135)
!5618 = !{i64 2147636973, i64 2147637016, i64 2147637056}
!5619 = !DILocation(line: 252, column: 1, scope: !5135)
!5620 = !{i64 2147637166, i64 2147637209, i64 2147637249}
!5621 = !DILocation(line: 253, column: 1, scope: !5135)
!5622 = !{i64 2147637365, i64 2147637408, i64 2147637448}
!5623 = !DILocation(line: 254, column: 1, scope: !5135)
!5624 = !{i64 2147637561, i64 2147637604, i64 2147637644}
!5625 = !DILocation(line: 255, column: 1, scope: !5135)
!5626 = !{i64 2147641821, i64 2147641864, i64 2147641904}
!5627 = !DILocation(line: 256, column: 1, scope: !5135)
!5628 = !{i64 2147641993, i64 2147642036, i64 2147642076}
!5629 = !DILocation(line: 257, column: 1, scope: !5135)
!5630 = !{i64 2147642186, i64 2147642229, i64 2147642269}
!5631 = !DILocation(line: 258, column: 1, scope: !5135)
!5632 = !{i64 2147642382, i64 2147642425, i64 2147642465}
!5633 = !DILocation(line: 259, column: 1, scope: !5135)
!5634 = !{i64 2147642609, i64 2147642652, i64 2147642692}
!5635 = !DILocation(line: 260, column: 1, scope: !5135)
!5636 = !{i64 2147642826, i64 2147642869, i64 2147642909}
!5637 = !DILocation(line: 261, column: 1, scope: !5135)
!5638 = !{i64 2147643118, i64 2147643161, i64 2147643201}
!5639 = !DILocation(line: 262, column: 1, scope: !5135)
!5640 = !{i64 2147643350, i64 2147643393, i64 2147643433}
!5641 = !DILocation(line: 263, column: 1, scope: !5135)
!5642 = !{i64 2147643567, i64 2147643610, i64 2147643650}
!5643 = !DILocation(line: 264, column: 1, scope: !5135)
!5644 = !{i64 2147643774, i64 2147643817, i64 2147643857}
!5645 = !DILocation(line: 265, column: 1, scope: !5135)
!5646 = !{i64 2147643975, i64 2147644018, i64 2147644058}
!5647 = !DILocation(line: 266, column: 1, scope: !5135)
!5648 = !{i64 2147644207, i64 2147644250, i64 2147644290}
!5649 = !DILocation(line: 267, column: 1, scope: !5135)
!5650 = !{i64 2147644415, i64 2147644458, i64 2147644498}
!5651 = !DILocation(line: 268, column: 1, scope: !5135)
!5652 = !{i64 2147644605, i64 2147644648, i64 2147644688}
!5653 = !DILocation(line: 269, column: 1, scope: !5135)
!5654 = !{i64 2147644831, i64 2147644874, i64 2147644914}
!5655 = !DILocation(line: 270, column: 1, scope: !5135)
!5656 = !{i64 2147645020, i64 2147645063, i64 2147645103}
!5657 = !DILocation(line: 271, column: 1, scope: !5135)
!5658 = !{i64 2147645291, i64 2147645334, i64 2147645374}
!5659 = !DILocation(line: 272, column: 1, scope: !5135)
!5660 = !{i64 2147645511, i64 2147645554, i64 2147645594}
!5661 = !DILocation(line: 273, column: 1, scope: !5135)
!5662 = !{i64 2147645764, i64 2147645807, i64 2147645847}
!5663 = !DILocation(line: 274, column: 1, scope: !5135)
!5664 = !{i64 2147645972, i64 2147646015, i64 2147646055}
!5665 = !DILocation(line: 275, column: 1, scope: !5135)
!5666 = !{i64 2147646204, i64 2147646247, i64 2147646287}
!5667 = !DILocation(line: 276, column: 1, scope: !5135)
!5668 = !{i64 2147646415, i64 2147646458, i64 2147646498}
!5669 = !DILocation(line: 277, column: 1, scope: !5135)
!5670 = !{i64 2147646605, i64 2147646648, i64 2147646688}
!5671 = !DILocation(line: 278, column: 1, scope: !5135)
!5672 = !{i64 2147646819, i64 2147646862, i64 2147646902}
!5673 = !DILocation(line: 279, column: 1, scope: !5135)
!5674 = !{i64 2147647018, i64 2147647061, i64 2147647101}
!5675 = !DILocation(line: 280, column: 1, scope: !5135)
!5676 = !{i64 2147647205, i64 2147647248, i64 2147647288}
!5677 = !DILocation(line: 281, column: 1, scope: !5135)
!5678 = !{i64 2147647413, i64 2147647456, i64 2147647496}
!5679 = !DILocation(line: 282, column: 1, scope: !5135)
!5680 = !{i64 2147647642, i64 2147647685, i64 2147647725}
!5681 = !DILocation(line: 283, column: 1, scope: !5135)
!5682 = !{i64 2147647844, i64 2147647887, i64 2147647927}
!5683 = !DILocation(line: 284, column: 1, scope: !5135)
!5684 = !{i64 2147648043, i64 2147648086, i64 2147648126}
!5685 = !DILocation(line: 285, column: 1, scope: !5135)
!5686 = !{i64 2147648260, i64 2147648303, i64 2147648343}
!5687 = !DILocation(line: 287, column: 1, scope: !5135)
!5688 = distinct !DISubprogram(name: "stm32l1_init", scope: !142, file: !142, line: 31, type: !149, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5689)
!5689 = !{!5690, !5691}
!5690 = !DILocalVariable(name: "arg", arg: 1, scope: !5688, file: !142, line: 31, type: !151)
!5691 = !DILocalVariable(name: "key", scope: !5688, file: !142, line: 33, type: !121)
!5692 = !DILocation(line: 0, scope: !5688)
!5693 = !DILocation(line: 55, column: 2, scope: !5694, inlinedAt: !5701)
!5694 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5698)
!5695 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5696 = !DISubroutineType(types: !5697)
!5697 = !{!32}
!5698 = !{!5699, !5700}
!5699 = !DILocalVariable(name: "key", scope: !5694, file: !5695, line: 44, type: !32)
!5700 = !DILocalVariable(name: "tmp", scope: !5694, file: !5695, line: 53, type: !32)
!5701 = distinct !DILocation(line: 37, column: 8, scope: !5688)
!5702 = !{i64 1523365}
!5703 = !DILocation(line: 0, scope: !5694, inlinedAt: !5701)
!5704 = !DILocalVariable(name: "key", arg: 1, scope: !5705, file: !5695, line: 84, type: !32)
!5705 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5708)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{null, !32}
!5708 = !{!5704}
!5709 = !DILocation(line: 0, scope: !5705, inlinedAt: !5710)
!5710 = distinct !DILocation(line: 44, column: 2, scope: !5688)
!5711 = !DILocation(line: 95, column: 2, scope: !5705, inlinedAt: !5710)
!5712 = !{i64 1524182}
!5713 = !DILocation(line: 48, column: 18, scope: !5688)
!5714 = !DILocation(line: 54, column: 2, scope: !5688)
!5715 = !DILocation(line: 55, column: 2, scope: !5688)
!5716 = !DILocation(line: 57, column: 2, scope: !5688)
!5717 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5718, file: !5718, line: 531, type: !5719, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5721)
!5718 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5719 = !DISubroutineType(types: !5720)
!5720 = !{null, !121}
!5721 = !{!5722, !5723}
!5722 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5717, file: !5718, line: 531, type: !121)
!5723 = !DILocalVariable(name: "tmpreg", scope: !5717, file: !5718, line: 533, type: !120)
!5724 = !DILocation(line: 0, scope: !5717)
!5725 = !DILocation(line: 533, column: 3, scope: !5717)
!5726 = !DILocation(line: 533, column: 17, scope: !5717)
!5727 = !DILocation(line: 534, column: 3, scope: !5717)
!5728 = !DILocation(line: 536, column: 12, scope: !5717)
!5729 = !DILocation(line: 536, column: 10, scope: !5717)
!5730 = !DILocation(line: 537, column: 9, scope: !5717)
!5731 = !DILocation(line: 538, column: 1, scope: !5717)
!5732 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5733, file: !5733, line: 272, type: !5719, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5734)
!5733 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5734 = !{!5735}
!5735 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5732, file: !5733, line: 272, type: !121)
!5736 = !DILocation(line: 0, scope: !5732)
!5737 = !DILocation(line: 274, column: 3, scope: !5732)
!5738 = !DILocation(line: 275, column: 1, scope: !5732)
!5739 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !184, file: !184, line: 26, type: !190, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !181, retainedNodes: !5740)
!5740 = !{!5741}
!5741 = !DILocalVariable(name: "dev", arg: 1, scope: !5739, file: !184, line: 26, type: !192)
!5742 = !DILocation(line: 0, scope: !5739)
!5743 = !DILocation(line: 68, column: 2, scope: !5739)
!5744 = !DILocation(line: 25, column: 6, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !354, file: !307, line: 25, column: 6)
!5746 = !DILocation(line: 25, column: 10, scope: !5745)
!5747 = !DILocation(line: 25, column: 6, scope: !354)
!5748 = !DILocation(line: 26, column: 3, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !307, line: 26, column: 3)
!5750 = distinct !DILexicalBlock(scope: !5745, file: !307, line: 25, column: 19)
!5751 = !DILocation(line: 27, column: 2, scope: !5750)
!5752 = !DILocation(line: 29, column: 8, scope: !360)
!5753 = !DILocation(line: 0, scope: !360)
!5754 = !DILocation(line: 29, column: 6, scope: !354)
!5755 = !DILocation(line: 30, column: 14, scope: !354)
!5756 = !DILocation(line: 30, column: 2, scope: !354)
!5757 = distinct !DISubprogram(name: "k_queue_get", scope: !3590, file: !3590, line: 649, type: !5758, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !5765)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!102, !5760, !5761}
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!5761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !5762)
!5762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !5763)
!5763 = !{!5764}
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5762, file: !214, line: 66, baseType: !213, size: 64)
!5765 = !{!5766, !5767}
!5766 = !DILocalVariable(name: "queue", arg: 1, scope: !5757, file: !3590, line: 649, type: !5760)
!5767 = !DILocalVariable(name: "timeout", arg: 2, scope: !5757, file: !3590, line: 649, type: !5761)
!5768 = !DILocation(line: 0, scope: !5757)
!5769 = !DILocation(line: 658, column: 2, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5757, file: !3590, line: 658, column: 2)
!5771 = !{i64 2152214200}
!5772 = !DILocation(line: 659, column: 9, scope: !5757)
!5773 = !DILocation(line: 659, column: 2, scope: !5757)
!5774 = distinct !DISubprogram(name: "console_getline_init", scope: !307, file: !307, line: 33, type: !3154, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !5775)
!5775 = !{!5776}
!5776 = !DILocalVariable(name: "i", scope: !5774, file: !307, line: 35, type: !103)
!5777 = !DILocation(line: 0, scope: !5774)
!5778 = !DILocation(line: 38, column: 3, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !307, line: 38, column: 3)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !307, line: 37, column: 46)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !307, line: 37, column: 2)
!5782 = distinct !DILexicalBlock(scope: !5774, file: !307, line: 37, column: 2)
!5783 = !DILocation(line: 45, column: 2, scope: !5774)
!5784 = !DILocation(line: 46, column: 1, scope: !5774)
!5785 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5786, file: !5786, line: 57, type: !5787, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5833)
!5786 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5787 = !DISubroutineType(types: !5788)
!5788 = !{null, !32, !5789}
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 32)
!5790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5791)
!5791 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2741, line: 141, baseType: !5792)
!5792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2741, line: 97, size: 256, elements: !5793)
!5793 = !{!5794}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5792, file: !2741, line: 107, baseType: !5795, size: 256)
!5795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2741, line: 98, size: 256, elements: !5796)
!5796 = !{!5797, !5802, !5807, !5812, !5817, !5822, !5827, !5832}
!5797 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 99, baseType: !5798, size: 32)
!5798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 99, size: 32, elements: !5799)
!5799 = !{!5800, !5801}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5798, file: !2741, line: 99, baseType: !121, size: 32)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5798, file: !2741, line: 99, baseType: !121, size: 32)
!5802 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 100, baseType: !5803, size: 32, offset: 32)
!5803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 100, size: 32, elements: !5804)
!5804 = !{!5805, !5806}
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5803, file: !2741, line: 100, baseType: !121, size: 32)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5803, file: !2741, line: 100, baseType: !121, size: 32)
!5807 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 101, baseType: !5808, size: 32, offset: 64)
!5808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 101, size: 32, elements: !5809)
!5809 = !{!5810, !5811}
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5808, file: !2741, line: 101, baseType: !121, size: 32)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5808, file: !2741, line: 101, baseType: !121, size: 32)
!5812 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 102, baseType: !5813, size: 32, offset: 96)
!5813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 102, size: 32, elements: !5814)
!5814 = !{!5815, !5816}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5813, file: !2741, line: 102, baseType: !121, size: 32)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5813, file: !2741, line: 102, baseType: !121, size: 32)
!5817 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 103, baseType: !5818, size: 32, offset: 128)
!5818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 103, size: 32, elements: !5819)
!5819 = !{!5820, !5821}
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5818, file: !2741, line: 103, baseType: !121, size: 32)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5818, file: !2741, line: 103, baseType: !121, size: 32)
!5822 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 104, baseType: !5823, size: 32, offset: 160)
!5823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 104, size: 32, elements: !5824)
!5824 = !{!5825, !5826}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5823, file: !2741, line: 104, baseType: !121, size: 32)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5823, file: !2741, line: 104, baseType: !121, size: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, scope: !5795, file: !2741, line: 105, baseType: !5828, size: 32, offset: 192)
!5828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5795, file: !2741, line: 105, size: 32, elements: !5829)
!5829 = !{!5830, !5831}
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5828, file: !2741, line: 105, baseType: !121, size: 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5828, file: !2741, line: 105, baseType: !121, size: 32)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5795, file: !2741, line: 106, baseType: !121, size: 32, offset: 224)
!5833 = !{!5834, !5835}
!5834 = !DILocalVariable(name: "reason", arg: 1, scope: !5785, file: !5786, line: 57, type: !32)
!5835 = !DILocalVariable(name: "esf", arg: 2, scope: !5785, file: !5786, line: 57, type: !5789)
!5836 = !DILocation(line: 0, scope: !5785)
!5837 = !DILocation(line: 63, column: 2, scope: !5785)
!5838 = !DILocation(line: 64, column: 1, scope: !5785)
!5839 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5786, file: !5786, line: 82, type: !5840, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5855)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{null, !5789, !5842}
!5842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5843, size: 32)
!5843 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !459, line: 37, baseType: !5844)
!5844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !5845)
!5845 = !{!5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5844, file: !459, line: 26, baseType: !121, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5844, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5844, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5844, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5844, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5844, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5844, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5844, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5844, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!5855 = !{!5856, !5857, !5858}
!5856 = !DILocalVariable(name: "esf", arg: 1, scope: !5839, file: !5786, line: 82, type: !5789)
!5857 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5839, file: !5786, line: 82, type: !5842)
!5858 = !DILocalVariable(name: "reason", scope: !5839, file: !5786, line: 88, type: !32)
!5859 = !DILocation(line: 0, scope: !5839)
!5860 = !DILocation(line: 88, column: 35, scope: !5839)
!5861 = !DILocation(line: 108, column: 2, scope: !5839)
!5862 = !DILocation(line: 131, column: 1, scope: !5839)
!5863 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5786, file: !5786, line: 133, type: !5864, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !5866)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{null, !102}
!5866 = !{!5867, !5868, !5869}
!5867 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5863, file: !5786, line: 133, type: !102)
!5868 = !DILocalVariable(name: "ssf_contents", scope: !5863, file: !5786, line: 135, type: !925)
!5869 = !DILocalVariable(name: "oops_esf", scope: !5863, file: !5786, line: 136, type: !5791)
!5870 = !DILocation(line: 0, scope: !5863)
!5871 = !DILocation(line: 136, column: 2, scope: !5863)
!5872 = !DILocation(line: 136, column: 15, scope: !5863)
!5873 = !DILocation(line: 139, column: 22, scope: !5863)
!5874 = !DILocation(line: 139, column: 17, scope: !5863)
!5875 = !DILocation(line: 139, column: 20, scope: !5863)
!5876 = !DILocation(line: 141, column: 2, scope: !5863)
!5877 = !DILocation(line: 142, column: 2, scope: !5863)
!5878 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5879, file: !5879, line: 40, type: !5706, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5880)
!5879 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5880 = !{!5881}
!5881 = !DILocalVariable(name: "irq", arg: 1, scope: !5878, file: !5879, line: 40, type: !32)
!5882 = !DILocation(line: 0, scope: !5878)
!5883 = !DILocation(line: 42, column: 2, scope: !5878)
!5884 = !DILocation(line: 43, column: 1, scope: !5878)
!5885 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !528, file: !528, line: 1508, type: !5886, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5888)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{null, !852}
!5888 = !{!5889}
!5889 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5885, file: !528, line: 1508, type: !852)
!5890 = !DILocation(line: 0, scope: !5885)
!5891 = !DILocation(line: 1510, column: 23, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5885, file: !528, line: 1510, column: 7)
!5893 = !DILocation(line: 1510, column: 7, scope: !5885)
!5894 = !DILocation(line: 1512, column: 5, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5892, file: !528, line: 1511, column: 3)
!5896 = !{i64 2149969162}
!5897 = !DILocation(line: 1513, column: 81, scope: !5895)
!5898 = !DILocation(line: 1513, column: 60, scope: !5895)
!5899 = !DILocation(line: 1513, column: 34, scope: !5895)
!5900 = !DILocation(line: 1513, column: 5, scope: !5895)
!5901 = !DILocation(line: 1513, column: 43, scope: !5895)
!5902 = !DILocation(line: 1514, column: 5, scope: !5895)
!5903 = !{i64 2149969276}
!5904 = !DILocation(line: 1515, column: 3, scope: !5895)
!5905 = !DILocation(line: 1516, column: 1, scope: !5885)
!5906 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5879, file: !5879, line: 45, type: !5706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5907)
!5907 = !{!5908}
!5908 = !DILocalVariable(name: "irq", arg: 1, scope: !5906, file: !5879, line: 45, type: !32)
!5909 = !DILocation(line: 0, scope: !5906)
!5910 = !DILocation(line: 47, column: 2, scope: !5906)
!5911 = !DILocation(line: 48, column: 1, scope: !5906)
!5912 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !528, file: !528, line: 1546, type: !5886, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5913)
!5913 = !{!5914}
!5914 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5912, file: !528, line: 1546, type: !852)
!5915 = !DILocation(line: 0, scope: !5912)
!5916 = !DILocation(line: 1548, column: 23, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5912, file: !528, line: 1548, column: 7)
!5918 = !DILocation(line: 1548, column: 7, scope: !5912)
!5919 = !DILocation(line: 1550, column: 81, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5917, file: !528, line: 1549, column: 3)
!5921 = !DILocation(line: 1550, column: 60, scope: !5920)
!5922 = !DILocation(line: 1550, column: 34, scope: !5920)
!5923 = !DILocation(line: 1550, column: 5, scope: !5920)
!5924 = !DILocation(line: 1550, column: 43, scope: !5920)
!5925 = !DILocation(line: 271, column: 3, scope: !5926, inlinedAt: !5928)
!5926 = distinct !DISubprogram(name: "__DSB", scope: !5927, file: !5927, line: 269, type: !3154, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !330)
!5927 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5928 = distinct !DILocation(line: 1551, column: 5, scope: !5920)
!5929 = !{i64 2426664}
!5930 = !DILocation(line: 260, column: 3, scope: !5931, inlinedAt: !5932)
!5931 = distinct !DISubprogram(name: "__ISB", scope: !5927, file: !5927, line: 258, type: !3154, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !330)
!5932 = distinct !DILocation(line: 1552, column: 5, scope: !5920)
!5933 = !{i64 2426381}
!5934 = !DILocation(line: 1553, column: 3, scope: !5920)
!5935 = !DILocation(line: 1554, column: 1, scope: !5912)
!5936 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5879, file: !5879, line: 50, type: !5937, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5939)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!103, !32}
!5939 = !{!5940}
!5940 = !DILocalVariable(name: "irq", arg: 1, scope: !5936, file: !5879, line: 50, type: !32)
!5941 = !DILocation(line: 0, scope: !5936)
!5942 = !DILocation(line: 52, column: 20, scope: !5936)
!5943 = !DILocation(line: 52, column: 9, scope: !5936)
!5944 = !DILocation(line: 52, column: 41, scope: !5936)
!5945 = !DILocation(line: 52, column: 39, scope: !5936)
!5946 = !DILocation(line: 52, column: 2, scope: !5936)
!5947 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5879, file: !5879, line: 64, type: !5948, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5950)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{null, !32, !32, !121}
!5950 = !{!5951, !5952, !5953}
!5951 = !DILocalVariable(name: "irq", arg: 1, scope: !5947, file: !5879, line: 64, type: !32)
!5952 = !DILocalVariable(name: "prio", arg: 2, scope: !5947, file: !5879, line: 64, type: !32)
!5953 = !DILocalVariable(name: "flags", arg: 3, scope: !5947, file: !5879, line: 64, type: !121)
!5954 = !DILocation(line: 0, scope: !5947)
!5955 = !DILocation(line: 83, column: 8, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5957, file: !5879, line: 82, column: 9)
!5957 = distinct !DILexicalBlock(scope: !5947, file: !5879, line: 76, column: 6)
!5958 = !DILocation(line: 95, column: 2, scope: !5947)
!5959 = !DILocation(line: 96, column: 1, scope: !5947)
!5960 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !528, file: !528, line: 1638, type: !5961, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5963)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{null, !852, !121}
!5963 = !{!5964, !5965}
!5964 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5960, file: !528, line: 1638, type: !852)
!5965 = !DILocalVariable(name: "priority", arg: 2, scope: !5960, file: !528, line: 1638, type: !121)
!5966 = !DILocation(line: 0, scope: !5960)
!5967 = !DILocation(line: 0, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5960, file: !528, line: 1640, column: 7)
!5969 = !DILocation(line: 1640, column: 7, scope: !5960)
!5970 = !DILocation(line: 1648, column: 1, scope: !5960)
!5971 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5879, file: !5879, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !5972)
!5972 = !{!5973}
!5973 = !DILocalVariable(name: "unused", arg: 1, scope: !5971, file: !5879, line: 155, type: !13)
!5974 = !DILocation(line: 0, scope: !5971)
!5975 = !DILocation(line: 159, column: 2, scope: !5971)
!5976 = !DILocation(line: 160, column: 1, scope: !5971)
!5977 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5978, file: !5978, line: 87, type: !3154, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !330)
!5978 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5979 = !DILocation(line: 89, column: 2, scope: !5977)
!5980 = !DILocation(line: 90, column: 2, scope: !5977)
!5981 = !DILocation(line: 91, column: 1, scope: !5977)
!5982 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5978, file: !5978, line: 23, type: !3154, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!5983 = !DISubprogram(name: "z_arm_int_exit", scope: !5984, file: !5984, line: 153, type: !3154, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!5984 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5985 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5986, file: !5986, line: 256, type: !3154, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !330)
!5986 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5987 = !DILocation(line: 258, column: 2, scope: !5985)
!5988 = !DILocation(line: 262, column: 2, scope: !5985)
!5989 = !DILocation(line: 263, column: 2, scope: !5985)
!5990 = !DILocation(line: 267, column: 2, scope: !5985)
!5991 = !DILocation(line: 268, column: 2, scope: !5985)
!5992 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5986, file: !5986, line: 53, type: !3154, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !330)
!5993 = !DILocation(line: 55, column: 12, scope: !5992)
!5994 = !DILocation(line: 271, column: 3, scope: !5995, inlinedAt: !5996)
!5995 = distinct !DISubprogram(name: "__DSB", scope: !5927, file: !5927, line: 269, type: !3154, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !330)
!5996 = distinct !DILocation(line: 56, column: 2, scope: !5992)
!5997 = !{i64 2425335}
!5998 = !DILocation(line: 260, column: 3, scope: !5999, inlinedAt: !6000)
!5999 = distinct !DISubprogram(name: "__ISB", scope: !5927, file: !5927, line: 258, type: !3154, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !330)
!6000 = distinct !DILocation(line: 57, column: 2, scope: !5992)
!6001 = !{i64 2425052}
!6002 = !DILocation(line: 58, column: 1, scope: !5992)
!6003 = distinct !DISubprogram(name: "arch_swap", scope: !6004, file: !6004, line: 33, type: !5937, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6005)
!6004 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6005 = !{!6006}
!6006 = !DILocalVariable(name: "key", arg: 1, scope: !6003, file: !6004, line: 33, type: !32)
!6007 = !DILocation(line: 0, scope: !6003)
!6008 = !DILocation(line: 36, column: 2, scope: !6003)
!6009 = !DILocation(line: 36, column: 17, scope: !6003)
!6010 = !DILocation(line: 36, column: 25, scope: !6003)
!6011 = !DILocation(line: 37, column: 37, scope: !6003)
!6012 = !DILocation(line: 37, column: 17, scope: !6003)
!6013 = !DILocation(line: 37, column: 35, scope: !6003)
!6014 = !DILocation(line: 41, column: 12, scope: !6003)
!6015 = !DILocalVariable(name: "key", arg: 1, scope: !6016, file: !5695, line: 84, type: !32)
!6016 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6017)
!6017 = !{!6015}
!6018 = !DILocation(line: 0, scope: !6016, inlinedAt: !6019)
!6019 = distinct !DILocation(line: 44, column: 2, scope: !6003)
!6020 = !DILocation(line: 95, column: 2, scope: !6016, inlinedAt: !6019)
!6021 = !{i64 1648335}
!6022 = !DILocation(line: 53, column: 9, scope: !6003)
!6023 = !DILocation(line: 53, column: 24, scope: !6003)
!6024 = !DILocation(line: 53, column: 2, scope: !6003)
!6025 = distinct !DISubprogram(name: "arch_new_thread", scope: !6026, file: !6026, line: 56, type: !6027, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6134)
!6026 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6027 = !DISubroutineType(types: !6028)
!6028 = !{null, !6029, !6129, !357, !3468, !102, !102, !102}
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 32)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !6031)
!6031 = !{!6032, !6090, !6102, !6103, !6104, !6105, !6111, !6124}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6030, file: !392, line: 247, baseType: !6033, size: 384)
!6033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !6034)
!6034 = !{!6035, !6059, !6066, !6067, !6068, !6077, !6078, !6079}
!6035 = !DIDerivedType(tag: DW_TAG_member, scope: !6033, file: !392, line: 60, baseType: !6036, size: 64)
!6036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6033, file: !392, line: 60, size: 64, elements: !6037)
!6037 = !{!6038, !6053}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6036, file: !392, line: 61, baseType: !6039, size: 64)
!6039 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !6040)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !6041)
!6041 = !{!6042, !6048}
!6042 = !DIDerivedType(tag: DW_TAG_member, scope: !6040, file: !338, line: 38, baseType: !6043, size: 32)
!6043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6040, file: !338, line: 38, size: 32, elements: !6044)
!6044 = !{!6045, !6047}
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6043, file: !338, line: 39, baseType: !6046, size: 32)
!6046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6043, file: !338, line: 40, baseType: !6046, size: 32)
!6048 = !DIDerivedType(tag: DW_TAG_member, scope: !6040, file: !338, line: 42, baseType: !6049, size: 32, offset: 32)
!6049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6040, file: !338, line: 42, size: 32, elements: !6050)
!6050 = !{!6051, !6052}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6049, file: !338, line: 43, baseType: !6046, size: 32)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6049, file: !338, line: 44, baseType: !6046, size: 32)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6036, file: !392, line: 62, baseType: !6054, size: 64)
!6054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !6055)
!6055 = !{!6056}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6054, file: !417, line: 50, baseType: !6057, size: 64)
!6057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6058, size: 64, elements: !376)
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 32)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6033, file: !392, line: 68, baseType: !6060, size: 32, offset: 64)
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 32)
!6061 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !6062)
!6062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !6063)
!6063 = !{!6064}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6062, file: !333, line: 232, baseType: !6065, size: 64)
!6065 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !6040)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6033, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6033, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!6068 = !DIDerivedType(tag: DW_TAG_member, scope: !6033, file: !392, line: 90, baseType: !6069, size: 16, offset: 112)
!6069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6033, file: !392, line: 90, size: 16, elements: !6070)
!6070 = !{!6071, !6076}
!6071 = !DIDerivedType(tag: DW_TAG_member, scope: !6069, file: !392, line: 91, baseType: !6072, size: 16)
!6072 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6069, file: !392, line: 91, size: 16, elements: !6073)
!6073 = !{!6074, !6075}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6072, file: !392, line: 96, baseType: !438, size: 8)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6072, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6069, file: !392, line: 100, baseType: !442, size: 16)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6033, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6033, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6033, file: !392, line: 131, baseType: !6080, size: 192, offset: 192)
!6080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !6081)
!6081 = !{!6082, !6083, !6089}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6080, file: !333, line: 245, baseType: !6039, size: 64)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6080, file: !333, line: 246, baseType: !6084, size: 32, offset: 64)
!6084 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !6085)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 32)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{null, !6088}
!6088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6080, size: 32)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6080, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6030, file: !392, line: 250, baseType: !6091, size: 288, offset: 384)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !6092)
!6092 = !{!6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6091, file: !459, line: 26, baseType: !121, size: 32)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6091, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6091, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6091, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6091, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6091, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6091, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6091, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6091, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6030, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6030, file: !392, line: 256, baseType: !6061, size: 64, offset: 704)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6030, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6030, file: !392, line: 300, baseType: !6106, size: 96, offset: 800)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !6107)
!6107 = !{!6108, !6109, !6110}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6106, file: !392, line: 153, baseType: !22, size: 32)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6106, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6106, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6030, file: !392, line: 325, baseType: !6112, size: 32, offset: 896)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 32)
!6113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !6114)
!6114 = !{!6115, !6121, !6122}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6113, file: !309, line: 5074, baseType: !6116, size: 96)
!6116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !6117)
!6117 = !{!6118, !6119, !6120}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6116, file: !485, line: 57, baseType: !488, size: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6116, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6116, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6113, file: !309, line: 5075, baseType: !6061, size: 64, offset: 96)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6113, file: !309, line: 5076, baseType: !6123, offset: 160)
!6123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6030, file: !392, line: 343, baseType: !6125, size: 64, offset: 928)
!6125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !6126)
!6126 = !{!6127, !6128}
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6125, file: !459, line: 63, baseType: !121, size: 32)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6125, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3469, line: 44, baseType: !6131)
!6131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2186, line: 47, size: 8, elements: !6132)
!6132 = !{!6133}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6131, file: !2186, line: 48, baseType: !159, size: 8)
!6134 = !{!6135, !6136, !6137, !6138, !6139, !6140, !6141, !6142}
!6135 = !DILocalVariable(name: "thread", arg: 1, scope: !6025, file: !6026, line: 56, type: !6029)
!6136 = !DILocalVariable(name: "stack", arg: 2, scope: !6025, file: !6026, line: 56, type: !6129)
!6137 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6025, file: !6026, line: 57, type: !357)
!6138 = !DILocalVariable(name: "entry", arg: 4, scope: !6025, file: !6026, line: 57, type: !3468)
!6139 = !DILocalVariable(name: "p1", arg: 5, scope: !6025, file: !6026, line: 58, type: !102)
!6140 = !DILocalVariable(name: "p2", arg: 6, scope: !6025, file: !6026, line: 58, type: !102)
!6141 = !DILocalVariable(name: "p3", arg: 7, scope: !6025, file: !6026, line: 58, type: !102)
!6142 = !DILocalVariable(name: "iframe", scope: !6025, file: !6026, line: 60, type: !2739)
!6143 = !DILocation(line: 0, scope: !6025)
!6144 = !DILocation(line: 85, column: 11, scope: !6025)
!6145 = !DILocation(line: 93, column: 10, scope: !6025)
!6146 = !DILocation(line: 98, column: 13, scope: !6025)
!6147 = !DILocation(line: 100, column: 15, scope: !6025)
!6148 = !DILocation(line: 100, column: 10, scope: !6025)
!6149 = !DILocation(line: 100, column: 13, scope: !6025)
!6150 = !DILocation(line: 101, column: 15, scope: !6025)
!6151 = !DILocation(line: 101, column: 10, scope: !6025)
!6152 = !DILocation(line: 101, column: 13, scope: !6025)
!6153 = !DILocation(line: 102, column: 15, scope: !6025)
!6154 = !DILocation(line: 102, column: 10, scope: !6025)
!6155 = !DILocation(line: 102, column: 13, scope: !6025)
!6156 = !DILocation(line: 103, column: 15, scope: !6025)
!6157 = !DILocation(line: 103, column: 10, scope: !6025)
!6158 = !DILocation(line: 103, column: 13, scope: !6025)
!6159 = !DILocation(line: 106, column: 10, scope: !6025)
!6160 = !DILocation(line: 106, column: 15, scope: !6025)
!6161 = !DILocation(line: 122, column: 29, scope: !6025)
!6162 = !DILocation(line: 122, column: 23, scope: !6025)
!6163 = !DILocation(line: 122, column: 27, scope: !6025)
!6164 = !DILocation(line: 123, column: 15, scope: !6025)
!6165 = !DILocation(line: 123, column: 23, scope: !6025)
!6166 = !DILocation(line: 143, column: 1, scope: !6025)
!6167 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6026, file: !6026, line: 385, type: !6168, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6171)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!121, !6170, !6170}
!6170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6171 = !{!6172, !6173, !6174, !6177}
!6172 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6167, file: !6026, line: 385, type: !6170)
!6173 = !DILocalVariable(name: "psp", arg: 2, scope: !6167, file: !6026, line: 385, type: !6170)
!6174 = !DILocalVariable(name: "thread", scope: !6167, file: !6026, line: 388, type: !6175)
!6175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6176, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6030)
!6177 = !DILocalVariable(name: "guard_len", scope: !6167, file: !6026, line: 405, type: !121)
!6178 = !DILocation(line: 0, scope: !6167)
!6179 = !DILocation(line: 388, column: 34, scope: !6167)
!6180 = !DILocation(line: 390, column: 13, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6167, file: !6026, line: 390, column: 6)
!6182 = !DILocation(line: 390, column: 6, scope: !6167)
!6183 = !DILocation(line: 438, column: 6, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6167, file: !6026, line: 438, column: 6)
!6185 = !DILocation(line: 438, column: 6, scope: !6167)
!6186 = !DILocation(line: 442, column: 3, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6184, file: !6026, line: 440, column: 22)
!6188 = !DILocation(line: 455, column: 1, scope: !6167)
!6189 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6026, file: !6026, line: 530, type: !6190, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !6192)
!6190 = !DISubroutineType(types: !6191)
!6191 = !{null, !6029, !357, !3468}
!6192 = !{!6193, !6194, !6195}
!6193 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6189, file: !6026, line: 530, type: !6029)
!6194 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6189, file: !6026, line: 530, type: !357)
!6195 = !DILocalVariable(name: "_main", arg: 3, scope: !6189, file: !6026, line: 531, type: !3468)
!6196 = !DILocation(line: 0, scope: !6189)
!6197 = !DILocation(line: 535, column: 11, scope: !6189)
!6198 = !DILocation(line: 560, column: 2, scope: !6189)
!6199 = !DILocation(line: 576, column: 2, scope: !6189)
!6200 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6201 = !DILocation(line: 603, column: 2, scope: !6189)
!6202 = distinct !DISubprogram(name: "z_arm_fault", scope: !6203, file: !6203, line: 1036, type: !6204, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6219)
!6203 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6204 = !DISubroutineType(types: !6205)
!6205 = !{null, !121, !121, !121, !6206}
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 32)
!6207 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !459, line: 37, baseType: !6208)
!6208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !6209)
!6209 = !{!6210, !6211, !6212, !6213, !6214, !6215, !6216, !6217, !6218}
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6208, file: !459, line: 26, baseType: !121, size: 32)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6208, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6208, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6208, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6208, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6208, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6208, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6208, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6208, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!6219 = !{!6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229}
!6220 = !DILocalVariable(name: "msp", arg: 1, scope: !6202, file: !6203, line: 1036, type: !121)
!6221 = !DILocalVariable(name: "psp", arg: 2, scope: !6202, file: !6203, line: 1036, type: !121)
!6222 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6202, file: !6203, line: 1036, type: !121)
!6223 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6202, file: !6203, line: 1037, type: !6206)
!6224 = !DILocalVariable(name: "reason", scope: !6202, file: !6203, line: 1039, type: !121)
!6225 = !DILocalVariable(name: "fault", scope: !6202, file: !6203, line: 1040, type: !103)
!6226 = !DILocalVariable(name: "recoverable", scope: !6202, file: !6203, line: 1041, type: !170)
!6227 = !DILocalVariable(name: "nested_exc", scope: !6202, file: !6203, line: 1041, type: !170)
!6228 = !DILocalVariable(name: "esf", scope: !6202, file: !6203, line: 1042, type: !2807)
!6229 = !DILocalVariable(name: "esf_copy", scope: !6202, file: !6203, line: 1047, type: !2808)
!6230 = !DILocation(line: 0, scope: !6202)
!6231 = !DILocation(line: 1040, column: 19, scope: !6202)
!6232 = !DILocation(line: 1040, column: 24, scope: !6202)
!6233 = !DILocation(line: 1041, column: 2, scope: !6202)
!6234 = !DILocation(line: 1047, column: 2, scope: !6202)
!6235 = !DILocation(line: 1047, column: 15, scope: !6202)
!6236 = !DILocalVariable(name: "key", arg: 1, scope: !6237, file: !5695, line: 84, type: !32)
!6237 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6238)
!6238 = !{!6236}
!6239 = !DILocation(line: 0, scope: !6237, inlinedAt: !6240)
!6240 = distinct !DILocation(line: 1050, column: 2, scope: !6202)
!6241 = !DILocation(line: 95, column: 2, scope: !6237, inlinedAt: !6240)
!6242 = !{i64 1681579}
!6243 = !DILocation(line: 1055, column: 9, scope: !6202)
!6244 = !DILocation(line: 1063, column: 11, scope: !6202)
!6245 = !DILocation(line: 1064, column: 6, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6202, file: !6203, line: 1064, column: 6)
!6247 = !{i8 0, i8 2}
!6248 = !DILocation(line: 1064, column: 6, scope: !6202)
!6249 = !DILocation(line: 1070, column: 20, scope: !6202)
!6250 = !DILocation(line: 1070, column: 2, scope: !6202)
!6251 = !DILocation(line: 1089, column: 6, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6202, file: !6203, line: 1089, column: 6)
!6253 = !DILocation(line: 0, scope: !6252)
!6254 = !DILocation(line: 1089, column: 6, scope: !6202)
!6255 = !DILocation(line: 1090, column: 28, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !6203, line: 1090, column: 7)
!6257 = distinct !DILexicalBlock(scope: !6252, file: !6203, line: 1089, column: 18)
!6258 = !DILocation(line: 1090, column: 44, scope: !6256)
!6259 = !DILocation(line: 1090, column: 7, scope: !6257)
!6260 = !DILocation(line: 1091, column: 24, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !6203, line: 1090, column: 50)
!6262 = !DILocation(line: 1092, column: 3, scope: !6261)
!6263 = !DILocation(line: 1094, column: 23, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6252, file: !6203, line: 1093, column: 9)
!6265 = !DILocation(line: 1097, column: 2, scope: !6202)
!6266 = !DILocation(line: 1098, column: 1, scope: !6202)
!6267 = distinct !DISubprogram(name: "get_esf", scope: !6203, file: !6203, line: 894, type: !6268, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6271)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!2807, !121, !121, !121, !6270}
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!6271 = !{!6272, !6273, !6274, !6275, !6276, !6277}
!6272 = !DILocalVariable(name: "msp", arg: 1, scope: !6267, file: !6203, line: 894, type: !121)
!6273 = !DILocalVariable(name: "psp", arg: 2, scope: !6267, file: !6203, line: 894, type: !121)
!6274 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6267, file: !6203, line: 894, type: !121)
!6275 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6267, file: !6203, line: 895, type: !6270)
!6276 = !DILocalVariable(name: "alternative_state_exc", scope: !6267, file: !6203, line: 897, type: !170)
!6277 = !DILocalVariable(name: "ptr_esf", scope: !6267, file: !6203, line: 898, type: !2807)
!6278 = !DILocation(line: 0, scope: !6267)
!6279 = !DILocation(line: 900, column: 14, scope: !6267)
!6280 = !DILocation(line: 902, column: 49, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6267, file: !6203, line: 902, column: 6)
!6282 = !DILocation(line: 902, column: 6, scope: !6267)
!6283 = !DILocation(line: 983, column: 18, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6267, file: !6203, line: 983, column: 6)
!6285 = !DILocation(line: 991, column: 7, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6203, line: 990, column: 30)
!6287 = distinct !DILexicalBlock(scope: !6267, file: !6203, line: 990, column: 6)
!6288 = !DILocation(line: 998, column: 16, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !6203, line: 995, column: 10)
!6290 = distinct !DILexicalBlock(scope: !6286, file: !6203, line: 991, column: 7)
!6291 = !DILocation(line: 1002, column: 2, scope: !6267)
!6292 = !DILocation(line: 1003, column: 1, scope: !6267)
!6293 = distinct !DISubprogram(name: "fault_handle", scope: !6203, file: !6203, line: 786, type: !6294, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6296)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{!121, !2807, !103, !6270}
!6296 = !{!6297, !6298, !6299, !6300}
!6297 = !DILocalVariable(name: "esf", arg: 1, scope: !6293, file: !6203, line: 786, type: !2807)
!6298 = !DILocalVariable(name: "fault", arg: 2, scope: !6293, file: !6203, line: 786, type: !103)
!6299 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6293, file: !6203, line: 786, type: !6270)
!6300 = !DILocalVariable(name: "reason", scope: !6293, file: !6203, line: 788, type: !121)
!6301 = !DILocation(line: 0, scope: !6293)
!6302 = !DILocation(line: 790, column: 15, scope: !6293)
!6303 = !DILocation(line: 792, column: 2, scope: !6293)
!6304 = !DILocation(line: 794, column: 12, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6293, file: !6203, line: 792, column: 17)
!6306 = !DILocation(line: 795, column: 3, scope: !6305)
!6307 = !DILocation(line: 800, column: 12, scope: !6305)
!6308 = !DILocation(line: 801, column: 3, scope: !6305)
!6309 = !DILocation(line: 803, column: 12, scope: !6305)
!6310 = !DILocation(line: 804, column: 3, scope: !6305)
!6311 = !DILocation(line: 806, column: 12, scope: !6305)
!6312 = !DILocation(line: 807, column: 3, scope: !6305)
!6313 = !DILocation(line: 814, column: 3, scope: !6305)
!6314 = !DILocation(line: 815, column: 3, scope: !6305)
!6315 = !DILocation(line: 829, column: 2, scope: !6293)
!6316 = distinct !DISubprogram(name: "hard_fault", scope: !6203, file: !6203, line: 709, type: !6317, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6319)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!121, !2807, !6270}
!6319 = !{!6320, !6321, !6322}
!6320 = !DILocalVariable(name: "esf", arg: 1, scope: !6316, file: !6203, line: 709, type: !2807)
!6321 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6316, file: !6203, line: 709, type: !6270)
!6322 = !DILocalVariable(name: "reason", scope: !6316, file: !6203, line: 711, type: !121)
!6323 = !DILocation(line: 0, scope: !6316)
!6324 = !DILocation(line: 732, column: 15, scope: !6316)
!6325 = !DILocation(line: 734, column: 12, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6316, file: !6203, line: 734, column: 6)
!6327 = !DILocation(line: 734, column: 17, scope: !6326)
!6328 = !DILocation(line: 734, column: 41, scope: !6326)
!6329 = !DILocation(line: 734, column: 6, scope: !6316)
!6330 = !DILocation(line: 736, column: 19, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6326, file: !6203, line: 736, column: 13)
!6332 = !DILocation(line: 736, column: 49, scope: !6331)
!6333 = !DILocation(line: 736, column: 13, scope: !6326)
!6334 = !DILocation(line: 738, column: 19, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !6203, line: 738, column: 13)
!6336 = !DILocation(line: 738, column: 24, scope: !6335)
!6337 = !DILocation(line: 738, column: 47, scope: !6335)
!6338 = !DILocation(line: 738, column: 13, scope: !6331)
!6339 = !DILocation(line: 740, column: 7, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !6203, line: 740, column: 7)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !6203, line: 738, column: 53)
!6342 = !DILocation(line: 740, column: 7, scope: !6341)
!6343 = !DILocation(line: 742, column: 24, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6340, file: !6203, line: 740, column: 38)
!6345 = !DILocation(line: 743, column: 3, scope: !6344)
!6346 = !DILocation(line: 743, column: 20, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6340, file: !6203, line: 743, column: 14)
!6348 = !DILocation(line: 743, column: 25, scope: !6347)
!6349 = !DILocation(line: 743, column: 52, scope: !6347)
!6350 = !DILocation(line: 743, column: 14, scope: !6340)
!6351 = !DILocation(line: 744, column: 13, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6347, file: !6203, line: 743, column: 58)
!6353 = !DILocation(line: 745, column: 3, scope: !6352)
!6354 = !DILocation(line: 745, column: 20, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6347, file: !6203, line: 745, column: 14)
!6356 = !DILocation(line: 745, column: 25, scope: !6355)
!6357 = !DILocation(line: 745, column: 52, scope: !6355)
!6358 = !DILocation(line: 745, column: 14, scope: !6347)
!6359 = !DILocation(line: 746, column: 13, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6355, file: !6203, line: 745, column: 58)
!6361 = !DILocation(line: 747, column: 3, scope: !6360)
!6362 = !DILocation(line: 747, column: 20, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6355, file: !6203, line: 747, column: 14)
!6364 = !DILocation(line: 747, column: 52, scope: !6363)
!6365 = !DILocation(line: 747, column: 14, scope: !6355)
!6366 = !DILocation(line: 748, column: 13, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !6203, line: 747, column: 58)
!6368 = !DILocation(line: 753, column: 3, scope: !6367)
!6369 = !DILocation(line: 766, column: 2, scope: !6316)
!6370 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6203, file: !6203, line: 229, type: !6294, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6371)
!6371 = !{!6372, !6373, !6374, !6375, !6376, !6377, !6380}
!6372 = !DILocalVariable(name: "esf", arg: 1, scope: !6370, file: !6203, line: 229, type: !2807)
!6373 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6370, file: !6203, line: 229, type: !103)
!6374 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6370, file: !6203, line: 230, type: !6270)
!6375 = !DILocalVariable(name: "reason", scope: !6370, file: !6203, line: 232, type: !121)
!6376 = !DILocalVariable(name: "mmfar", scope: !6370, file: !6203, line: 233, type: !121)
!6377 = !DILocalVariable(name: "temp", scope: !6378, file: !6203, line: 254, type: !121)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !6203, line: 244, column: 48)
!6379 = distinct !DILexicalBlock(scope: !6370, file: !6203, line: 244, column: 6)
!6380 = !DILocalVariable(name: "min_stack_ptr", scope: !6381, file: !6203, line: 309, type: !121)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !6203, line: 308, column: 43)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !6203, line: 308, column: 7)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !6203, line: 289, column: 40)
!6384 = distinct !DILexicalBlock(scope: !6370, file: !6203, line: 288, column: 6)
!6385 = !DILocation(line: 0, scope: !6370)
!6386 = !DILocation(line: 237, column: 12, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6370, file: !6203, line: 237, column: 6)
!6388 = !DILocation(line: 241, column: 12, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6370, file: !6203, line: 241, column: 6)
!6390 = !DILocation(line: 244, column: 12, scope: !6379)
!6391 = !DILocation(line: 244, column: 17, scope: !6379)
!6392 = !DILocation(line: 244, column: 42, scope: !6379)
!6393 = !DILocation(line: 244, column: 6, scope: !6370)
!6394 = !DILocation(line: 254, column: 24, scope: !6378)
!6395 = !DILocation(line: 0, scope: !6378)
!6396 = !DILocation(line: 256, column: 13, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6378, file: !6203, line: 256, column: 7)
!6398 = !DILocation(line: 256, column: 18, scope: !6397)
!6399 = !DILocation(line: 256, column: 44, scope: !6397)
!6400 = !DILocation(line: 256, column: 7, scope: !6378)
!6401 = !DILocation(line: 259, column: 24, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !6203, line: 259, column: 8)
!6403 = distinct !DILexicalBlock(scope: !6397, file: !6203, line: 256, column: 50)
!6404 = !DILocation(line: 259, column: 8, scope: !6403)
!6405 = !DILocation(line: 261, column: 15, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6402, file: !6203, line: 259, column: 30)
!6407 = !DILocation(line: 262, column: 4, scope: !6406)
!6408 = !DILocation(line: 265, column: 12, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6370, file: !6203, line: 265, column: 6)
!6410 = !DILocation(line: 288, column: 12, scope: !6384)
!6411 = !DILocation(line: 288, column: 17, scope: !6384)
!6412 = !DILocation(line: 288, column: 41, scope: !6384)
!6413 = !DILocation(line: 289, column: 9, scope: !6384)
!6414 = !DILocation(line: 289, column: 14, scope: !6384)
!6415 = !DILocation(line: 288, column: 6, scope: !6370)
!6416 = !DILocation(line: 308, column: 12, scope: !6382)
!6417 = !DILocation(line: 308, column: 17, scope: !6382)
!6418 = !DILocation(line: 308, column: 7, scope: !6383)
!6419 = !DILocation(line: 310, column: 6, scope: !6381)
!6420 = !DILocation(line: 309, column: 29, scope: !6381)
!6421 = !DILocation(line: 0, scope: !6381)
!6422 = !DILocation(line: 312, column: 8, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6381, file: !6203, line: 312, column: 8)
!6424 = !DILocation(line: 312, column: 8, scope: !6381)
!6425 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6426, file: !5927, line: 1099, type: !121)
!6426 = distinct !DISubprogram(name: "__set_PSP", scope: !5927, file: !5927, line: 1099, type: !5719, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6427)
!6427 = !{!6425}
!6428 = !DILocation(line: 0, scope: !6426, inlinedAt: !6429)
!6429 = distinct !DILocation(line: 338, column: 5, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6423, file: !6203, line: 312, column: 23)
!6431 = !DILocation(line: 1101, column: 3, scope: !6426, inlinedAt: !6429)
!6432 = !{i64 2476304}
!6433 = !DILocation(line: 341, column: 4, scope: !6430)
!6434 = !DILocation(line: 366, column: 12, scope: !6370)
!6435 = !DILocation(line: 369, column: 15, scope: !6370)
!6436 = !DILocation(line: 371, column: 2, scope: !6370)
!6437 = distinct !DISubprogram(name: "bus_fault", scope: !6203, file: !6203, line: 383, type: !6438, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6440)
!6438 = !DISubroutineType(types: !6439)
!6439 = !{!103, !2807, !103, !6270}
!6440 = !{!6441, !6442, !6443, !6444, !6445}
!6441 = !DILocalVariable(name: "esf", arg: 1, scope: !6437, file: !6203, line: 383, type: !2807)
!6442 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6437, file: !6203, line: 383, type: !103)
!6443 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6437, file: !6203, line: 383, type: !6270)
!6444 = !DILocalVariable(name: "reason", scope: !6437, file: !6203, line: 385, type: !121)
!6445 = !DILocalVariable(name: "bfar", scope: !6446, file: !6203, line: 405, type: !121)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !6203, line: 395, column: 42)
!6447 = distinct !DILexicalBlock(scope: !6437, file: !6203, line: 395, column: 6)
!6448 = !DILocation(line: 0, scope: !6437)
!6449 = !DILocation(line: 389, column: 11, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6437, file: !6203, line: 389, column: 6)
!6451 = !DILocation(line: 392, column: 11, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6437, file: !6203, line: 392, column: 6)
!6453 = !DILocation(line: 395, column: 11, scope: !6447)
!6454 = !DILocation(line: 395, column: 16, scope: !6447)
!6455 = !DILocation(line: 395, column: 6, scope: !6437)
!6456 = !DILocation(line: 405, column: 3, scope: !6446)
!6457 = !DILocation(line: 0, scope: !6446)
!6458 = !DILocation(line: 407, column: 13, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6446, file: !6203, line: 407, column: 7)
!6460 = !DILocation(line: 407, column: 18, scope: !6459)
!6461 = !DILocation(line: 407, column: 44, scope: !6459)
!6462 = !DILocation(line: 407, column: 7, scope: !6446)
!6463 = !DILocation(line: 411, column: 15, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !6203, line: 409, column: 30)
!6465 = distinct !DILexicalBlock(scope: !6466, file: !6203, line: 409, column: 8)
!6466 = distinct !DILexicalBlock(scope: !6459, file: !6203, line: 407, column: 50)
!6467 = !DILocation(line: 412, column: 4, scope: !6464)
!6468 = !DILocation(line: 415, column: 11, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6437, file: !6203, line: 415, column: 6)
!6470 = !DILocation(line: 418, column: 12, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6437, file: !6203, line: 418, column: 6)
!6472 = !DILocation(line: 524, column: 12, scope: !6437)
!6473 = !DILocation(line: 526, column: 15, scope: !6437)
!6474 = !DILocation(line: 528, column: 2, scope: !6437)
!6475 = distinct !DISubprogram(name: "usage_fault", scope: !6203, file: !6203, line: 539, type: !6476, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6480)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!121, !6478}
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 32)
!6479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2808)
!6480 = !{!6481, !6482}
!6481 = !DILocalVariable(name: "esf", arg: 1, scope: !6475, file: !6203, line: 539, type: !6478)
!6482 = !DILocalVariable(name: "reason", scope: !6475, file: !6203, line: 541, type: !121)
!6483 = !DILocation(line: 0, scope: !6475)
!6484 = !DILocation(line: 546, column: 12, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6475, file: !6203, line: 546, column: 6)
!6486 = !DILocation(line: 549, column: 12, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6475, file: !6203, line: 549, column: 6)
!6488 = !DILocation(line: 567, column: 12, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6475, file: !6203, line: 567, column: 6)
!6490 = !DILocation(line: 570, column: 12, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6475, file: !6203, line: 570, column: 6)
!6492 = !DILocation(line: 573, column: 12, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6475, file: !6203, line: 573, column: 6)
!6494 = !DILocation(line: 576, column: 12, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6475, file: !6203, line: 576, column: 6)
!6496 = !DILocation(line: 581, column: 12, scope: !6475)
!6497 = !DILocation(line: 583, column: 2, scope: !6475)
!6498 = distinct !DISubprogram(name: "debug_monitor", scope: !6203, file: !6203, line: 632, type: !6499, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6501)
!6499 = !DISubroutineType(types: !6500)
!6500 = !{null, !2807, !6270}
!6501 = !{!6502, !6503}
!6502 = !DILocalVariable(name: "esf", arg: 1, scope: !6498, file: !6203, line: 632, type: !2807)
!6503 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6498, file: !6203, line: 632, type: !6270)
!6504 = !DILocation(line: 0, scope: !6498)
!6505 = !DILocation(line: 634, column: 15, scope: !6498)
!6506 = !DILocation(line: 652, column: 1, scope: !6498)
!6507 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6203, file: !6203, line: 658, type: !6508, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !6510)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{!170, !2807}
!6510 = !{!6511, !6512, !6513}
!6511 = !DILocalVariable(name: "esf", arg: 1, scope: !6507, file: !6203, line: 658, type: !2807)
!6512 = !DILocalVariable(name: "ret_addr", scope: !6507, file: !6203, line: 660, type: !2581)
!6513 = !DILocalVariable(name: "fault_insn", scope: !6507, file: !6203, line: 686, type: !442)
!6514 = !DILocation(line: 0, scope: !6507)
!6515 = !DILocation(line: 660, column: 46, scope: !6507)
!6516 = !DILocation(line: 660, column: 23, scope: !6507)
!6517 = !DILocation(line: 682, column: 11, scope: !6507)
!6518 = !DILocation(line: 271, column: 3, scope: !6519, inlinedAt: !6520)
!6519 = distinct !DISubprogram(name: "__DSB", scope: !5927, file: !5927, line: 269, type: !3154, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !330)
!6520 = distinct !DILocation(line: 683, column: 2, scope: !6507)
!6521 = !{i64 2452439}
!6522 = !DILocation(line: 260, column: 3, scope: !6523, inlinedAt: !6524)
!6523 = distinct !DISubprogram(name: "__ISB", scope: !5927, file: !5927, line: 258, type: !3154, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !330)
!6524 = distinct !DILocation(line: 684, column: 2, scope: !6507)
!6525 = !{i64 2452156}
!6526 = !DILocation(line: 686, column: 35, scope: !6507)
!6527 = !DILocation(line: 686, column: 24, scope: !6507)
!6528 = !DILocation(line: 688, column: 11, scope: !6507)
!6529 = !DILocation(line: 271, column: 3, scope: !6519, inlinedAt: !6530)
!6530 = distinct !DILocation(line: 689, column: 2, scope: !6507)
!6531 = !DILocation(line: 260, column: 3, scope: !6523, inlinedAt: !6532)
!6532 = distinct !DILocation(line: 690, column: 2, scope: !6507)
!6533 = !DILocation(line: 693, column: 45, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6507, file: !6203, line: 693, column: 6)
!6535 = !DILocation(line: 699, column: 1, scope: !6507)
!6536 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6203, file: !6203, line: 1107, type: !3154, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !330)
!6537 = !DILocation(line: 1111, column: 11, scope: !6536)
!6538 = !DILocation(line: 1136, column: 1, scope: !6536)
!6539 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6540, file: !6540, line: 26, type: !3154, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6541)
!6540 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6541 = !{!6542}
!6542 = !DILocalVariable(name: "irq", scope: !6539, file: !6540, line: 28, type: !103)
!6543 = !DILocation(line: 0, scope: !6539)
!6544 = !DILocation(line: 30, column: 2, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6539, file: !6540, line: 30, column: 2)
!6546 = !DILocation(line: 31, column: 3, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !6540, line: 30, column: 39)
!6548 = distinct !DILexicalBlock(scope: !6545, file: !6540, line: 30, column: 2)
!6549 = !DILocation(line: 30, column: 35, scope: !6548)
!6550 = !DILocation(line: 30, column: 13, scope: !6548)
!6551 = distinct !{!6551, !6544, !6552}
!6552 = !DILocation(line: 32, column: 2, scope: !6545)
!6553 = !DILocation(line: 33, column: 1, scope: !6539)
!6554 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !528, file: !528, line: 1638, type: !5961, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !6555)
!6555 = !{!6556, !6557}
!6556 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6554, file: !528, line: 1638, type: !852)
!6557 = !DILocalVariable(name: "priority", arg: 2, scope: !6554, file: !528, line: 1638, type: !121)
!6558 = !DILocation(line: 0, scope: !6554)
!6559 = !DILocation(line: 1640, column: 7, scope: !6554)
!6560 = !DILocation(line: 0, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !528, line: 1640, column: 7)
!6562 = !DILocation(line: 1648, column: 1, scope: !6554)
!6563 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6564, file: !6564, line: 27, type: !6565, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !6668)
!6564 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6565 = !DISubroutineType(types: !6566)
!6566 = !{null, !6567}
!6567 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !392, line: 347, baseType: !6568)
!6568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6569, size: 32)
!6569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !6570)
!6570 = !{!6571, !6629, !6641, !6642, !6643, !6644, !6650, !6663}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6569, file: !392, line: 247, baseType: !6572, size: 384)
!6572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !6573)
!6573 = !{!6574, !6598, !6605, !6606, !6607, !6616, !6617, !6618}
!6574 = !DIDerivedType(tag: DW_TAG_member, scope: !6572, file: !392, line: 60, baseType: !6575, size: 64)
!6575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6572, file: !392, line: 60, size: 64, elements: !6576)
!6576 = !{!6577, !6592}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6575, file: !392, line: 61, baseType: !6578, size: 64)
!6578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !6579)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !6580)
!6580 = !{!6581, !6587}
!6581 = !DIDerivedType(tag: DW_TAG_member, scope: !6579, file: !338, line: 38, baseType: !6582, size: 32)
!6582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6579, file: !338, line: 38, size: 32, elements: !6583)
!6583 = !{!6584, !6586}
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6582, file: !338, line: 39, baseType: !6585, size: 32)
!6585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 32)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6582, file: !338, line: 40, baseType: !6585, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_member, scope: !6579, file: !338, line: 42, baseType: !6588, size: 32, offset: 32)
!6588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6579, file: !338, line: 42, size: 32, elements: !6589)
!6589 = !{!6590, !6591}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6588, file: !338, line: 43, baseType: !6585, size: 32)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6588, file: !338, line: 44, baseType: !6585, size: 32)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6575, file: !392, line: 62, baseType: !6593, size: 64)
!6593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !6594)
!6594 = !{!6595}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6593, file: !417, line: 50, baseType: !6596, size: 64)
!6596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6597, size: 64, elements: !376)
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6593, size: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6572, file: !392, line: 68, baseType: !6599, size: 32, offset: 64)
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6600, size: 32)
!6600 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !6601)
!6601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !6602)
!6602 = !{!6603}
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6601, file: !333, line: 232, baseType: !6604, size: 64)
!6604 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !6579)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6572, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6572, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!6607 = !DIDerivedType(tag: DW_TAG_member, scope: !6572, file: !392, line: 90, baseType: !6608, size: 16, offset: 112)
!6608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6572, file: !392, line: 90, size: 16, elements: !6609)
!6609 = !{!6610, !6615}
!6610 = !DIDerivedType(tag: DW_TAG_member, scope: !6608, file: !392, line: 91, baseType: !6611, size: 16)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6608, file: !392, line: 91, size: 16, elements: !6612)
!6612 = !{!6613, !6614}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6611, file: !392, line: 96, baseType: !438, size: 8)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6611, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6608, file: !392, line: 100, baseType: !442, size: 16)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6572, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6572, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6572, file: !392, line: 131, baseType: !6619, size: 192, offset: 192)
!6619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !6620)
!6620 = !{!6621, !6622, !6628}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6619, file: !333, line: 245, baseType: !6578, size: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6619, file: !333, line: 246, baseType: !6623, size: 32, offset: 64)
!6623 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !6624)
!6624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6625, size: 32)
!6625 = !DISubroutineType(types: !6626)
!6626 = !{null, !6627}
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6619, size: 32)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6619, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6569, file: !392, line: 250, baseType: !6630, size: 288, offset: 384)
!6630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !6631)
!6631 = !{!6632, !6633, !6634, !6635, !6636, !6637, !6638, !6639, !6640}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6630, file: !459, line: 26, baseType: !121, size: 32)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6630, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6630, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6630, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6630, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6630, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6630, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6630, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6630, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6569, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6569, file: !392, line: 256, baseType: !6600, size: 64, offset: 704)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6569, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6569, file: !392, line: 300, baseType: !6645, size: 96, offset: 800)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !6646)
!6646 = !{!6647, !6648, !6649}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6645, file: !392, line: 153, baseType: !22, size: 32)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6645, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6645, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6569, file: !392, line: 325, baseType: !6651, size: 32, offset: 896)
!6651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6652, size: 32)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !6653)
!6653 = !{!6654, !6660, !6661}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6652, file: !309, line: 5074, baseType: !6655, size: 96)
!6655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !6656)
!6656 = !{!6657, !6658, !6659}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6655, file: !485, line: 57, baseType: !488, size: 32)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6655, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6655, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6652, file: !309, line: 5075, baseType: !6600, size: 64, offset: 96)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6652, file: !309, line: 5076, baseType: !6662, offset: 160)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6569, file: !392, line: 343, baseType: !6664, size: 64, offset: 928)
!6664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !6665)
!6665 = !{!6666, !6667}
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6664, file: !459, line: 63, baseType: !121, size: 32)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6664, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!6668 = !{!6669}
!6669 = !DILocalVariable(name: "thread", arg: 1, scope: !6563, file: !6564, line: 27, type: !6567)
!6670 = !DILocation(line: 0, scope: !6563)
!6671 = !DILocation(line: 29, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6563, file: !6564, line: 29, column: 6)
!6673 = !DILocation(line: 29, column: 15, scope: !6672)
!6674 = !DILocation(line: 29, column: 6, scope: !6563)
!6675 = !DILocation(line: 1031, column: 3, scope: !6676, inlinedAt: !6681)
!6676 = distinct !DISubprogram(name: "__get_IPSR", scope: !5927, file: !5927, line: 1027, type: !6677, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !6679)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!121}
!6679 = !{!6680}
!6680 = !DILocalVariable(name: "result", scope: !6676, file: !5927, line: 1029, type: !121)
!6681 = distinct !DILocation(line: 48, column: 10, scope: !6682, inlinedAt: !6686)
!6682 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6683, file: !6683, line: 46, type: !6684, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !330)
!6683 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!170}
!6686 = distinct !DILocation(line: 30, column: 7, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !6564, line: 30, column: 7)
!6688 = distinct !DILexicalBlock(scope: !6672, file: !6564, line: 29, column: 26)
!6689 = !{i64 2441287}
!6690 = !DILocation(line: 0, scope: !6676, inlinedAt: !6681)
!6691 = !DILocation(line: 48, column: 9, scope: !6682, inlinedAt: !6686)
!6692 = !DILocation(line: 30, column: 7, scope: !6688)
!6693 = !DILocation(line: 42, column: 14, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6687, file: !6564, line: 30, column: 25)
!6695 = !DILocation(line: 48, column: 15, scope: !6694)
!6696 = !DILocation(line: 49, column: 3, scope: !6694)
!6697 = !DILocation(line: 52, column: 2, scope: !6563)
!6698 = !DILocation(line: 53, column: 1, scope: !6563)
!6699 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !387, file: !387, line: 127, type: !3154, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !380, retainedNodes: !330)
!6700 = !DILocation(line: 134, column: 2, scope: !6699)
!6701 = !DILocation(line: 156, column: 1, scope: !6699)
!6702 = !DILocation(line: 0, scope: !386)
!6703 = !DILocation(line: 289, column: 36, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !386, file: !387, line: 285, column: 2)
!6705 = !DILocation(line: 289, column: 42, scope: !6704)
!6706 = !DILocation(line: 300, column: 36, scope: !386)
!6707 = !DILocation(line: 301, column: 35, scope: !386)
!6708 = !DILocation(line: 302, column: 37, scope: !386)
!6709 = !DILocation(line: 311, column: 2, scope: !386)
!6710 = !DILocation(line: 316, column: 1, scope: !386)
!6711 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !556, file: !556, line: 180, type: !3154, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !330)
!6712 = !DILocation(line: 188, column: 12, scope: !6711)
!6713 = !DILocation(line: 271, column: 3, scope: !6714, inlinedAt: !6715)
!6714 = distinct !DISubprogram(name: "__DSB", scope: !5927, file: !5927, line: 269, type: !3154, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !330)
!6715 = distinct !DILocation(line: 192, column: 2, scope: !6711)
!6716 = !{i64 2597138}
!6717 = !DILocation(line: 260, column: 3, scope: !6718, inlinedAt: !6719)
!6718 = distinct !DISubprogram(name: "__ISB", scope: !5927, file: !5927, line: 258, type: !3154, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !330)
!6719 = distinct !DILocation(line: 193, column: 2, scope: !6711)
!6720 = !{i64 2596855}
!6721 = !DILocation(line: 194, column: 1, scope: !6711)
!6722 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !556, file: !556, line: 199, type: !3154, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !330)
!6723 = !DILocation(line: 282, column: 3, scope: !6724, inlinedAt: !6725)
!6724 = distinct !DISubprogram(name: "__DMB", scope: !5927, file: !5927, line: 280, type: !3154, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !330)
!6725 = distinct !DILocation(line: 202, column: 2, scope: !6722)
!6726 = !{i64 2597414}
!6727 = !DILocation(line: 205, column: 12, scope: !6722)
!6728 = !DILocation(line: 206, column: 1, scope: !6722)
!6729 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !556, file: !556, line: 275, type: !6730, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6743)
!6730 = !DISubroutineType(types: !6731)
!6731 = !{null, !6732, !275, !6170, !6170}
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6734)
!6734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !6735)
!6735 = !{!6736, !6737, !6738}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6734, file: !507, line: 53, baseType: !22, size: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6734, file: !507, line: 54, baseType: !217, size: 32, offset: 32)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6734, file: !507, line: 55, baseType: !6739, size: 32, offset: 64)
!6739 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !6740)
!6740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !6741)
!6741 = !{!6742}
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6740, file: !513, line: 150, baseType: !121, size: 32)
!6743 = !{!6744, !6745, !6746, !6747}
!6744 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6729, file: !556, line: 276, type: !6732)
!6745 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6729, file: !556, line: 276, type: !275)
!6746 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6729, file: !556, line: 277, type: !6170)
!6747 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6729, file: !556, line: 277, type: !6170)
!6748 = !DILocation(line: 0, scope: !6729)
!6749 = !DILocation(line: 279, column: 6, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6729, file: !556, line: 279, column: 6)
!6751 = !DILocation(line: 285, column: 1, scope: !6729)
!6752 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6753, file: !6753, line: 220, type: !6754, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6756)
!6753 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6754 = !DISubroutineType(types: !6755)
!6755 = !{!103, !6732, !275, !6170, !6170}
!6756 = !{!6757, !6758, !6759, !6760, !6761}
!6757 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6752, file: !6753, line: 221, type: !6732)
!6758 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6752, file: !6753, line: 221, type: !275)
!6759 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6752, file: !6753, line: 222, type: !6170)
!6760 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6752, file: !6753, line: 223, type: !6170)
!6761 = !DILocalVariable(name: "mpu_reg_index", scope: !6752, file: !6753, line: 225, type: !103)
!6762 = !DILocation(line: 0, scope: !6752)
!6763 = !DILocation(line: 225, column: 22, scope: !6752)
!6764 = !DILocation(line: 233, column: 18, scope: !6752)
!6765 = !DILocation(line: 236, column: 23, scope: !6752)
!6766 = !DILocation(line: 236, column: 21, scope: !6752)
!6767 = !DILocation(line: 238, column: 2, scope: !6752)
!6768 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !556, file: !556, line: 105, type: !6769, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6771)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{!103, !6732, !167, !167, !170}
!6771 = !{!6772, !6773, !6774, !6775, !6776, !6777}
!6772 = !DILocalVariable(name: "regions", arg: 1, scope: !6768, file: !556, line: 106, type: !6732)
!6773 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6768, file: !556, line: 106, type: !167)
!6774 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6768, file: !556, line: 106, type: !167)
!6775 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6768, file: !556, line: 107, type: !170)
!6776 = !DILocalVariable(name: "i", scope: !6768, file: !556, line: 109, type: !103)
!6777 = !DILocalVariable(name: "reg_index", scope: !6768, file: !556, line: 110, type: !103)
!6778 = !DILocation(line: 0, scope: !6768)
!6779 = !DILocation(line: 110, column: 18, scope: !6768)
!6780 = !DILocation(line: 112, column: 16, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !556, line: 112, column: 2)
!6782 = distinct !DILexicalBlock(scope: !6768, file: !556, line: 112, column: 2)
!6783 = !DILocation(line: 112, column: 2, scope: !6782)
!6784 = !DILocation(line: 113, column: 7, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !556, line: 113, column: 7)
!6786 = distinct !DILexicalBlock(scope: !6781, file: !556, line: 112, column: 36)
!6787 = !DILocation(line: 113, column: 18, scope: !6785)
!6788 = !DILocation(line: 113, column: 23, scope: !6785)
!6789 = !DILocation(line: 113, column: 7, scope: !6786)
!6790 = !DILocation(line: 118, column: 23, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6786, file: !556, line: 118, column: 7)
!6792 = !DILocation(line: 119, column: 7, scope: !6791)
!6793 = !DILocation(line: 118, column: 7, scope: !6786)
!6794 = !DILocation(line: 124, column: 36, scope: !6786)
!6795 = !DILocation(line: 124, column: 15, scope: !6786)
!6796 = !DILocation(line: 126, column: 17, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6786, file: !556, line: 126, column: 7)
!6798 = !DILocation(line: 126, column: 7, scope: !6786)
!6799 = !DILocation(line: 131, column: 12, scope: !6786)
!6800 = !DILocation(line: 132, column: 2, scope: !6786)
!6801 = !DILocation(line: 112, column: 32, scope: !6781)
!6802 = distinct !{!6802, !6783, !6803}
!6803 = !DILocation(line: 132, column: 2, scope: !6782)
!6804 = !DILocation(line: 135, column: 1, scope: !6768)
!6805 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6753, file: !6753, line: 63, type: !6806, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6808)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{!103, !6732}
!6808 = !{!6809, !6810}
!6809 = !DILocalVariable(name: "part", arg: 1, scope: !6805, file: !6753, line: 63, type: !6732)
!6810 = !DILocalVariable(name: "partition_is_valid", scope: !6805, file: !6753, line: 70, type: !103)
!6811 = !DILocation(line: 0, scope: !6805)
!6812 = !DILocation(line: 71, column: 11, scope: !6805)
!6813 = !DILocation(line: 71, column: 37, scope: !6805)
!6814 = !DILocation(line: 72, column: 3, scope: !6805)
!6815 = !DILocation(line: 71, column: 30, scope: !6805)
!6816 = !DILocation(line: 75, column: 11, scope: !6805)
!6817 = !DILocation(line: 75, column: 17, scope: !6805)
!6818 = !DILocation(line: 75, column: 38, scope: !6805)
!6819 = !DILocation(line: 77, column: 2, scope: !6805)
!6820 = distinct !DISubprogram(name: "mpu_configure_region", scope: !556, file: !556, line: 79, type: !6821, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6823)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!103, !275, !6732}
!6823 = !{!6824, !6825, !6826}
!6824 = !DILocalVariable(name: "index", arg: 1, scope: !6820, file: !556, line: 79, type: !275)
!6825 = !DILocalVariable(name: "new_region", arg: 2, scope: !6820, file: !556, line: 80, type: !6732)
!6826 = !DILocalVariable(name: "region_conf", scope: !6820, file: !556, line: 82, type: !545)
!6827 = !DILocation(line: 0, scope: !6820)
!6828 = !DILocation(line: 82, column: 2, scope: !6820)
!6829 = !DILocation(line: 82, column: 24, scope: !6820)
!6830 = !DILocation(line: 87, column: 33, scope: !6820)
!6831 = !DILocation(line: 87, column: 14, scope: !6820)
!6832 = !DILocation(line: 87, column: 19, scope: !6820)
!6833 = !DILocation(line: 91, column: 55, scope: !6820)
!6834 = !DILocation(line: 92, column: 16, scope: !6820)
!6835 = !DILocation(line: 92, column: 53, scope: !6820)
!6836 = !DILocation(line: 91, column: 2, scope: !6820)
!6837 = !DILocation(line: 95, column: 9, scope: !6820)
!6838 = !DILocation(line: 97, column: 1, scope: !6820)
!6839 = !DILocation(line: 95, column: 2, scope: !6820)
!6840 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6753, file: !6753, line: 113, type: !6841, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6846)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{null, !6843, !6844, !121, !121}
!6843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6845, size: 32)
!6845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6739)
!6846 = !{!6847, !6848, !6849, !6850}
!6847 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6840, file: !6753, line: 114, type: !6843)
!6848 = !DILocalVariable(name: "attr", arg: 2, scope: !6840, file: !6753, line: 115, type: !6844)
!6849 = !DILocalVariable(name: "base", arg: 3, scope: !6840, file: !6753, line: 115, type: !121)
!6850 = !DILocalVariable(name: "size", arg: 4, scope: !6840, file: !6753, line: 115, type: !121)
!6851 = !DILocation(line: 0, scope: !6840)
!6852 = !DILocation(line: 127, column: 23, scope: !6840)
!6853 = !DILocation(line: 127, column: 35, scope: !6840)
!6854 = !DILocation(line: 127, column: 33, scope: !6840)
!6855 = !DILocation(line: 127, column: 10, scope: !6840)
!6856 = !DILocation(line: 127, column: 15, scope: !6840)
!6857 = !DILocation(line: 129, column: 1, scope: !6840)
!6858 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !556, file: !556, line: 57, type: !6859, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6861)
!6859 = !DISubroutineType(types: !6860)
!6860 = !{!103, !275, !543}
!6861 = !{!6862, !6863}
!6862 = !DILocalVariable(name: "index", arg: 1, scope: !6858, file: !556, line: 57, type: !275)
!6863 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6858, file: !556, line: 58, type: !543)
!6864 = !DILocation(line: 0, scope: !6858)
!6865 = !DILocation(line: 61, column: 6, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6858, file: !556, line: 61, column: 6)
!6867 = !DILocation(line: 61, column: 12, scope: !6866)
!6868 = !DILocation(line: 61, column: 6, scope: !6858)
!6869 = !DILocation(line: 71, column: 2, scope: !6858)
!6870 = !DILocation(line: 73, column: 2, scope: !6858)
!6871 = !DILocation(line: 74, column: 1, scope: !6858)
!6872 = distinct !DISubprogram(name: "region_init", scope: !6753, file: !6753, line: 29, type: !6873, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6875)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{null, !6170, !543}
!6875 = !{!6876, !6877}
!6876 = !DILocalVariable(name: "index", arg: 1, scope: !6872, file: !6753, line: 29, type: !6170)
!6877 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6872, file: !6753, line: 30, type: !543)
!6878 = !DILocation(line: 0, scope: !6872)
!6879 = !DILocation(line: 33, column: 2, scope: !6872)
!6880 = !DILocation(line: 47, column: 28, scope: !6872)
!6881 = !DILocation(line: 47, column: 33, scope: !6872)
!6882 = !DILocation(line: 48, column: 26, scope: !6872)
!6883 = !DILocation(line: 47, column: 12, scope: !6872)
!6884 = !DILocation(line: 49, column: 32, scope: !6872)
!6885 = !DILocation(line: 49, column: 37, scope: !6872)
!6886 = !DILocation(line: 49, column: 12, scope: !6872)
!6887 = !DILocation(line: 53, column: 1, scope: !6872)
!6888 = distinct !DISubprogram(name: "set_region_number", scope: !6889, file: !6889, line: 32, type: !5719, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6890)
!6889 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6890 = !{!6891}
!6891 = !DILocalVariable(name: "index", arg: 1, scope: !6888, file: !6889, line: 32, type: !121)
!6892 = !DILocation(line: 0, scope: !6888)
!6893 = !DILocation(line: 34, column: 11, scope: !6888)
!6894 = !DILocation(line: 35, column: 1, scope: !6888)
!6895 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6753, file: !6753, line: 88, type: !6896, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6898)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!121, !121}
!6898 = !{!6899}
!6899 = !DILocalVariable(name: "size", arg: 1, scope: !6895, file: !6753, line: 88, type: !121)
!6900 = !DILocation(line: 0, scope: !6895)
!6901 = !DILocation(line: 91, column: 11, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6895, file: !6753, line: 91, column: 6)
!6903 = !DILocation(line: 91, column: 6, scope: !6895)
!6904 = !DILocation(line: 100, column: 11, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6895, file: !6753, line: 100, column: 6)
!6906 = !DILocation(line: 100, column: 6, scope: !6895)
!6907 = !DILocation(line: 104, column: 35, scope: !6895)
!6908 = !DILocation(line: 104, column: 16, scope: !6895)
!6909 = !DILocation(line: 104, column: 50, scope: !6895)
!6910 = !DILocation(line: 104, column: 72, scope: !6895)
!6911 = !DILocation(line: 104, column: 2, scope: !6895)
!6912 = !DILocation(line: 106, column: 1, scope: !6895)
!6913 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !556, file: !556, line: 307, type: !6914, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6916)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{null, !6732, !167}
!6916 = !{!6917, !6918}
!6917 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6913, file: !556, line: 308, type: !6732)
!6918 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6913, file: !556, line: 308, type: !167)
!6919 = !DILocation(line: 0, scope: !6913)
!6920 = !DILocation(line: 310, column: 6, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6913, file: !556, line: 310, column: 6)
!6922 = !DILocation(line: 316, column: 1, scope: !6913)
!6923 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6753, file: !6753, line: 249, type: !6924, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6926)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{!103, !6732, !167}
!6926 = !{!6927, !6928, !6929, !6930}
!6927 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6923, file: !6753, line: 250, type: !6732)
!6928 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6923, file: !6753, line: 250, type: !167)
!6929 = !DILocalVariable(name: "mpu_reg_index", scope: !6923, file: !6753, line: 252, type: !103)
!6930 = !DILocalVariable(name: "i", scope: !6931, file: !6753, line: 264, type: !103)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6753, line: 264, column: 3)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6753, line: 261, column: 32)
!6933 = distinct !DILexicalBlock(scope: !6923, file: !6753, line: 261, column: 6)
!6934 = !DILocation(line: 0, scope: !6923)
!6935 = !DILocation(line: 252, column: 22, scope: !6923)
!6936 = !DILocation(line: 258, column: 18, scope: !6923)
!6937 = !DILocation(line: 261, column: 20, scope: !6933)
!6938 = !DILocation(line: 261, column: 6, scope: !6923)
!6939 = !DILocation(line: 0, scope: !6931)
!6940 = !DILocation(line: 265, column: 4, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6753, line: 264, column: 59)
!6942 = distinct !DILexicalBlock(scope: !6931, file: !6753, line: 264, column: 3)
!6943 = !DILocation(line: 264, column: 55, scope: !6942)
!6944 = !DILocation(line: 264, column: 33, scope: !6942)
!6945 = !DILocation(line: 264, column: 3, scope: !6931)
!6946 = distinct !{!6946, !6945, !6947}
!6947 = !DILocation(line: 266, column: 3, scope: !6931)
!6948 = !DILocation(line: 269, column: 2, scope: !6923)
!6949 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6950, file: !6950, line: 218, type: !5719, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6951)
!6950 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6951 = !{!6952}
!6952 = !DILocalVariable(name: "rnr", arg: 1, scope: !6949, file: !6950, line: 218, type: !121)
!6953 = !DILocation(line: 0, scope: !6949)
!6954 = !DILocation(line: 220, column: 12, scope: !6949)
!6955 = !DILocation(line: 221, column: 13, scope: !6949)
!6956 = !DILocation(line: 222, column: 1, scope: !6949)
!6957 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !556, file: !556, line: 326, type: !6958, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !523, retainedNodes: !6960)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!103}
!6960 = !{!6961}
!6961 = !DILocalVariable(name: "r_index", scope: !6957, file: !556, line: 328, type: !121)
!6962 = !DILocation(line: 330, column: 17, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6957, file: !556, line: 330, column: 6)
!6964 = !DILocation(line: 330, column: 29, scope: !6963)
!6965 = !DILocation(line: 330, column: 6, scope: !6957)
!6966 = !DILocation(line: 347, column: 2, scope: !6957)
!6967 = !DILocation(line: 0, scope: !6957)
!6968 = !DILocation(line: 364, column: 29, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !556, line: 364, column: 2)
!6970 = distinct !DILexicalBlock(scope: !6957, file: !556, line: 364, column: 2)
!6971 = !DILocation(line: 364, column: 2, scope: !6970)
!6972 = !DILocation(line: 365, column: 25, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6969, file: !556, line: 364, column: 66)
!6974 = !DILocation(line: 365, column: 3, scope: !6973)
!6975 = !DILocation(line: 364, column: 62, scope: !6969)
!6976 = distinct !{!6976, !6971, !6977}
!6977 = !DILocation(line: 366, column: 2, scope: !6970)
!6978 = !DILocation(line: 369, column: 23, scope: !6957)
!6979 = !DILocation(line: 369, column: 21, scope: !6957)
!6980 = !DILocation(line: 372, column: 2, scope: !6957)
!6981 = !DILocation(line: 443, column: 2, scope: !6957)
!6982 = !DILocation(line: 444, column: 1, scope: !6957)
!6983 = distinct !DISubprogram(name: "strcpy", scope: !6984, file: !6984, line: 20, type: !6985, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !6989)
!6984 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6985 = !DISubroutineType(types: !6986)
!6986 = !{!357, !6987, !6988}
!6987 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !357)
!6988 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!6989 = !{!6990, !6991, !6992}
!6990 = !DILocalVariable(name: "d", arg: 1, scope: !6983, file: !6984, line: 20, type: !6987)
!6991 = !DILocalVariable(name: "s", arg: 2, scope: !6983, file: !6984, line: 20, type: !6988)
!6992 = !DILocalVariable(name: "dest", scope: !6983, file: !6984, line: 22, type: !357)
!6993 = !DILocation(line: 0, scope: !6983)
!6994 = !DILocation(line: 24, column: 9, scope: !6983)
!6995 = !DILocation(line: 24, column: 12, scope: !6983)
!6996 = !DILocation(line: 24, column: 2, scope: !6983)
!6997 = !DILocation(line: 25, column: 6, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6983, file: !6984, line: 24, column: 21)
!6999 = !DILocation(line: 26, column: 4, scope: !6998)
!7000 = !DILocation(line: 27, column: 4, scope: !6998)
!7001 = distinct !{!7001, !6996, !7002}
!7002 = !DILocation(line: 28, column: 2, scope: !6983)
!7003 = !DILocation(line: 30, column: 5, scope: !6983)
!7004 = !DILocation(line: 32, column: 2, scope: !6983)
!7005 = distinct !DISubprogram(name: "strncpy", scope: !6984, file: !6984, line: 42, type: !7006, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7008)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{!357, !6987, !6988, !217}
!7008 = !{!7009, !7010, !7011, !7012}
!7009 = !DILocalVariable(name: "d", arg: 1, scope: !7005, file: !6984, line: 42, type: !6987)
!7010 = !DILocalVariable(name: "s", arg: 2, scope: !7005, file: !6984, line: 42, type: !6988)
!7011 = !DILocalVariable(name: "n", arg: 3, scope: !7005, file: !6984, line: 42, type: !217)
!7012 = !DILocalVariable(name: "dest", scope: !7005, file: !6984, line: 44, type: !357)
!7013 = !DILocation(line: 0, scope: !7005)
!7014 = !DILocation(line: 46, column: 12, scope: !7005)
!7015 = !DILocation(line: 46, column: 17, scope: !7005)
!7016 = !DILocation(line: 46, column: 20, scope: !7005)
!7017 = !DILocation(line: 46, column: 23, scope: !7005)
!7018 = !DILocation(line: 46, column: 2, scope: !7005)
!7019 = !DILocation(line: 47, column: 6, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7005, file: !6984, line: 46, column: 32)
!7021 = !DILocation(line: 48, column: 4, scope: !7020)
!7022 = !DILocation(line: 49, column: 4, scope: !7020)
!7023 = !DILocation(line: 50, column: 4, scope: !7020)
!7024 = distinct !{!7024, !7018, !7025}
!7025 = !DILocation(line: 51, column: 2, scope: !7005)
!7026 = !DILocation(line: 54, column: 6, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7005, file: !6984, line: 53, column: 16)
!7028 = !DILocation(line: 55, column: 4, scope: !7027)
!7029 = !DILocation(line: 56, column: 4, scope: !7027)
!7030 = !DILocation(line: 53, column: 11, scope: !7005)
!7031 = !DILocation(line: 53, column: 2, scope: !7005)
!7032 = distinct !{!7032, !7031, !7033}
!7033 = !DILocation(line: 57, column: 2, scope: !7005)
!7034 = !DILocation(line: 59, column: 2, scope: !7005)
!7035 = distinct !DISubprogram(name: "strchr", scope: !6984, file: !6984, line: 69, type: !7036, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7038)
!7036 = !DISubroutineType(types: !7037)
!7037 = !{!357, !157, !103}
!7038 = !{!7039, !7040, !7041}
!7039 = !DILocalVariable(name: "s", arg: 1, scope: !7035, file: !6984, line: 69, type: !157)
!7040 = !DILocalVariable(name: "c", arg: 2, scope: !7035, file: !6984, line: 69, type: !103)
!7041 = !DILocalVariable(name: "tmp", scope: !7035, file: !6984, line: 71, type: !159)
!7042 = !DILocation(line: 0, scope: !7035)
!7043 = !DILocation(line: 73, column: 2, scope: !7035)
!7044 = !DILocation(line: 73, column: 10, scope: !7035)
!7045 = !DILocation(line: 73, column: 13, scope: !7035)
!7046 = !DILocation(line: 73, column: 21, scope: !7035)
!7047 = !DILocation(line: 74, column: 4, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7035, file: !6984, line: 73, column: 38)
!7049 = distinct !{!7049, !7043, !7050}
!7050 = !DILocation(line: 75, column: 2, scope: !7035)
!7051 = !DILocation(line: 77, column: 9, scope: !7035)
!7052 = !DILocation(line: 77, column: 2, scope: !7035)
!7053 = distinct !DISubprogram(name: "strrchr", scope: !6984, file: !6984, line: 87, type: !7036, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7054)
!7054 = !{!7055, !7056, !7057}
!7055 = !DILocalVariable(name: "s", arg: 1, scope: !7053, file: !6984, line: 87, type: !157)
!7056 = !DILocalVariable(name: "c", arg: 2, scope: !7053, file: !6984, line: 87, type: !103)
!7057 = !DILocalVariable(name: "match", scope: !7053, file: !6984, line: 89, type: !357)
!7058 = !DILocation(line: 0, scope: !7053)
!7059 = !DILocation(line: 91, column: 2, scope: !7053)
!7060 = !DILocation(line: 92, column: 7, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6984, line: 92, column: 7)
!7062 = distinct !DILexicalBlock(scope: !7053, file: !6984, line: 91, column: 5)
!7063 = !DILocation(line: 92, column: 10, scope: !7061)
!7064 = !DILocation(line: 92, column: 7, scope: !7062)
!7065 = !DILocation(line: 95, column: 13, scope: !7053)
!7066 = !DILocation(line: 95, column: 2, scope: !7062)
!7067 = distinct !{!7067, !7059, !7068}
!7068 = !DILocation(line: 95, column: 15, scope: !7053)
!7069 = !DILocation(line: 97, column: 2, scope: !7053)
!7070 = distinct !DISubprogram(name: "strlen", scope: !6984, file: !6984, line: 107, type: !7071, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7073)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!217, !157}
!7073 = !{!7074, !7075}
!7074 = !DILocalVariable(name: "s", arg: 1, scope: !7070, file: !6984, line: 107, type: !157)
!7075 = !DILocalVariable(name: "n", scope: !7070, file: !6984, line: 109, type: !217)
!7076 = !DILocation(line: 0, scope: !7070)
!7077 = !DILocation(line: 111, column: 9, scope: !7070)
!7078 = !DILocation(line: 111, column: 12, scope: !7070)
!7079 = !DILocation(line: 111, column: 2, scope: !7070)
!7080 = !DILocation(line: 112, column: 4, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7070, file: !6984, line: 111, column: 21)
!7082 = !DILocation(line: 113, column: 4, scope: !7081)
!7083 = distinct !{!7083, !7079, !7084}
!7084 = !DILocation(line: 114, column: 2, scope: !7070)
!7085 = !DILocation(line: 116, column: 2, scope: !7070)
!7086 = distinct !DISubprogram(name: "strnlen", scope: !6984, file: !6984, line: 126, type: !7087, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7089)
!7087 = !DISubroutineType(types: !7088)
!7088 = !{!217, !157, !217}
!7089 = !{!7090, !7091, !7092}
!7090 = !DILocalVariable(name: "s", arg: 1, scope: !7086, file: !6984, line: 126, type: !157)
!7091 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7086, file: !6984, line: 126, type: !217)
!7092 = !DILocalVariable(name: "n", scope: !7086, file: !6984, line: 128, type: !217)
!7093 = !DILocation(line: 0, scope: !7086)
!7094 = !DILocation(line: 130, column: 9, scope: !7086)
!7095 = !DILocation(line: 130, column: 12, scope: !7086)
!7096 = !DILocation(line: 130, column: 20, scope: !7086)
!7097 = !DILocation(line: 130, column: 2, scope: !7086)
!7098 = !DILocation(line: 131, column: 4, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7086, file: !6984, line: 130, column: 35)
!7100 = !DILocation(line: 132, column: 4, scope: !7099)
!7101 = distinct !{!7101, !7097, !7102}
!7102 = !DILocation(line: 133, column: 2, scope: !7086)
!7103 = !DILocation(line: 135, column: 2, scope: !7086)
!7104 = distinct !DISubprogram(name: "strcmp", scope: !6984, file: !6984, line: 145, type: !7105, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7107)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{!103, !157, !157}
!7107 = !{!7108, !7109}
!7108 = !DILocalVariable(name: "s1", arg: 1, scope: !7104, file: !6984, line: 145, type: !157)
!7109 = !DILocalVariable(name: "s2", arg: 2, scope: !7104, file: !6984, line: 145, type: !157)
!7110 = !DILocation(line: 0, scope: !7104)
!7111 = !DILocation(line: 147, column: 10, scope: !7104)
!7112 = !DILocation(line: 147, column: 17, scope: !7104)
!7113 = !DILocation(line: 147, column: 14, scope: !7104)
!7114 = !DILocation(line: 147, column: 22, scope: !7104)
!7115 = !DILocation(line: 148, column: 5, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7104, file: !6984, line: 147, column: 40)
!7117 = !DILocation(line: 149, column: 5, scope: !7116)
!7118 = distinct !{!7118, !7119, !7120}
!7119 = !DILocation(line: 147, column: 2, scope: !7104)
!7120 = !DILocation(line: 150, column: 2, scope: !7104)
!7121 = !DILocation(line: 152, column: 9, scope: !7104)
!7122 = !DILocation(line: 152, column: 15, scope: !7104)
!7123 = !DILocation(line: 152, column: 13, scope: !7104)
!7124 = !DILocation(line: 152, column: 2, scope: !7104)
!7125 = distinct !DISubprogram(name: "strncmp", scope: !6984, file: !6984, line: 162, type: !7126, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7128)
!7126 = !DISubroutineType(types: !7127)
!7127 = !{!103, !157, !157, !217}
!7128 = !{!7129, !7130, !7131}
!7129 = !DILocalVariable(name: "s1", arg: 1, scope: !7125, file: !6984, line: 162, type: !157)
!7130 = !DILocalVariable(name: "s2", arg: 2, scope: !7125, file: !6984, line: 162, type: !157)
!7131 = !DILocalVariable(name: "n", arg: 3, scope: !7125, file: !6984, line: 162, type: !217)
!7132 = !DILocation(line: 0, scope: !7125)
!7133 = !DILocation(line: 164, column: 17, scope: !7125)
!7134 = !DILocation(line: 164, column: 21, scope: !7125)
!7135 = !DILocation(line: 164, column: 28, scope: !7125)
!7136 = !DILocation(line: 164, column: 25, scope: !7125)
!7137 = !DILocation(line: 164, column: 33, scope: !7125)
!7138 = !DILocation(line: 165, column: 5, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7125, file: !6984, line: 164, column: 51)
!7140 = !DILocation(line: 166, column: 5, scope: !7139)
!7141 = !DILocation(line: 167, column: 4, scope: !7139)
!7142 = distinct !{!7142, !7143, !7144}
!7143 = !DILocation(line: 164, column: 2, scope: !7125)
!7144 = !DILocation(line: 168, column: 2, scope: !7125)
!7145 = !DILocation(line: 170, column: 25, scope: !7125)
!7146 = !DILocation(line: 170, column: 31, scope: !7125)
!7147 = !DILocation(line: 170, column: 29, scope: !7125)
!7148 = !DILocation(line: 170, column: 9, scope: !7125)
!7149 = !DILocation(line: 170, column: 2, scope: !7125)
!7150 = distinct !DISubprogram(name: "strtok_r", scope: !6984, file: !6984, line: 180, type: !7151, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7154)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!357, !357, !157, !7153}
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!7154 = !{!7155, !7156, !7157, !7158, !7159}
!7155 = !DILocalVariable(name: "str", arg: 1, scope: !7150, file: !6984, line: 180, type: !357)
!7156 = !DILocalVariable(name: "sep", arg: 2, scope: !7150, file: !6984, line: 180, type: !157)
!7157 = !DILocalVariable(name: "state", arg: 3, scope: !7150, file: !6984, line: 180, type: !7153)
!7158 = !DILocalVariable(name: "start", scope: !7150, file: !6984, line: 182, type: !357)
!7159 = !DILocalVariable(name: "end", scope: !7150, file: !6984, line: 182, type: !357)
!7160 = !DILocation(line: 0, scope: !7150)
!7161 = !DILocation(line: 184, column: 10, scope: !7150)
!7162 = !DILocation(line: 184, column: 22, scope: !7150)
!7163 = !DILocation(line: 187, column: 9, scope: !7150)
!7164 = !DILocation(line: 187, column: 16, scope: !7150)
!7165 = !DILocation(line: 187, column: 19, scope: !7150)
!7166 = !DILocation(line: 187, column: 2, scope: !7150)
!7167 = !DILocation(line: 188, column: 8, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7150, file: !6984, line: 187, column: 40)
!7169 = distinct !{!7169, !7166, !7170}
!7170 = !DILocation(line: 189, column: 2, scope: !7150)
!7171 = !DILocation(line: 198, column: 9, scope: !7150)
!7172 = !DILocation(line: 198, column: 18, scope: !7150)
!7173 = !DILocation(line: 198, column: 17, scope: !7150)
!7174 = !DILocation(line: 198, column: 2, scope: !7150)
!7175 = !DILocation(line: 199, column: 6, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7150, file: !6984, line: 198, column: 37)
!7177 = !DILocation(line: 198, column: 14, scope: !7150)
!7178 = distinct !{!7178, !7174, !7179}
!7179 = !DILocation(line: 200, column: 2, scope: !7150)
!7180 = !DILocation(line: 203, column: 8, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6984, line: 202, column: 20)
!7182 = distinct !DILexicalBlock(scope: !7150, file: !6984, line: 202, column: 6)
!7183 = !DILocation(line: 204, column: 16, scope: !7181)
!7184 = !DILocation(line: 205, column: 2, scope: !7181)
!7185 = !DILocation(line: 210, column: 1, scope: !7150)
!7186 = distinct !DISubprogram(name: "strcat", scope: !6984, file: !6984, line: 212, type: !6985, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7187)
!7187 = !{!7188, !7189}
!7188 = !DILocalVariable(name: "dest", arg: 1, scope: !7186, file: !6984, line: 212, type: !6987)
!7189 = !DILocalVariable(name: "src", arg: 2, scope: !7186, file: !6984, line: 212, type: !6988)
!7190 = !DILocation(line: 0, scope: !7186)
!7191 = !DILocation(line: 214, column: 16, scope: !7186)
!7192 = !DILocation(line: 214, column: 14, scope: !7186)
!7193 = !DILocation(line: 214, column: 2, scope: !7186)
!7194 = !DILocation(line: 215, column: 2, scope: !7186)
!7195 = distinct !DISubprogram(name: "strncat", scope: !6984, file: !6984, line: 218, type: !7006, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7196)
!7196 = !{!7197, !7198, !7199, !7200, !7201}
!7197 = !DILocalVariable(name: "dest", arg: 1, scope: !7195, file: !6984, line: 218, type: !6987)
!7198 = !DILocalVariable(name: "src", arg: 2, scope: !7195, file: !6984, line: 218, type: !6988)
!7199 = !DILocalVariable(name: "n", arg: 3, scope: !7195, file: !6984, line: 219, type: !217)
!7200 = !DILocalVariable(name: "orig_dest", scope: !7195, file: !6984, line: 221, type: !357)
!7201 = !DILocalVariable(name: "len", scope: !7195, file: !6984, line: 222, type: !217)
!7202 = !DILocation(line: 0, scope: !7195)
!7203 = !DILocation(line: 222, column: 15, scope: !7195)
!7204 = !DILocation(line: 224, column: 7, scope: !7195)
!7205 = !DILocation(line: 225, column: 14, scope: !7195)
!7206 = !DILocation(line: 225, column: 19, scope: !7195)
!7207 = !DILocation(line: 225, column: 11, scope: !7195)
!7208 = !DILocation(line: 225, column: 23, scope: !7195)
!7209 = !DILocation(line: 225, column: 28, scope: !7195)
!7210 = !DILocation(line: 225, column: 2, scope: !7195)
!7211 = !DILocation(line: 226, column: 17, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7195, file: !6984, line: 225, column: 38)
!7213 = !DILocation(line: 226, column: 8, scope: !7212)
!7214 = !DILocation(line: 226, column: 11, scope: !7212)
!7215 = distinct !{!7215, !7210, !7216}
!7216 = !DILocation(line: 227, column: 2, scope: !7195)
!7217 = !DILocation(line: 228, column: 8, scope: !7195)
!7218 = !DILocation(line: 230, column: 2, scope: !7195)
!7219 = distinct !DISubprogram(name: "memcmp", scope: !6984, file: !6984, line: 239, type: !7220, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7222)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!103, !13, !13, !217}
!7222 = !{!7223, !7224, !7225, !7226, !7227}
!7223 = !DILocalVariable(name: "m1", arg: 1, scope: !7219, file: !6984, line: 239, type: !13)
!7224 = !DILocalVariable(name: "m2", arg: 2, scope: !7219, file: !6984, line: 239, type: !13)
!7225 = !DILocalVariable(name: "n", arg: 3, scope: !7219, file: !6984, line: 239, type: !217)
!7226 = !DILocalVariable(name: "c1", scope: !7219, file: !6984, line: 241, type: !157)
!7227 = !DILocalVariable(name: "c2", scope: !7219, file: !6984, line: 242, type: !157)
!7228 = !DILocation(line: 0, scope: !7219)
!7229 = !DILocation(line: 244, column: 7, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7219, file: !6984, line: 244, column: 6)
!7231 = !DILocation(line: 244, column: 6, scope: !7219)
!7232 = !DILocation(line: 248, column: 10, scope: !7219)
!7233 = !DILocation(line: 248, column: 14, scope: !7219)
!7234 = !DILocation(line: 248, column: 19, scope: !7219)
!7235 = !DILocation(line: 248, column: 2, scope: !7219)
!7236 = !DILocation(line: 248, column: 23, scope: !7219)
!7237 = !DILocation(line: 248, column: 30, scope: !7219)
!7238 = !DILocation(line: 248, column: 27, scope: !7219)
!7239 = !DILocation(line: 249, column: 5, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7219, file: !6984, line: 248, column: 36)
!7241 = !DILocation(line: 250, column: 5, scope: !7240)
!7242 = distinct !{!7242, !7235, !7243}
!7243 = !DILocation(line: 251, column: 2, scope: !7219)
!7244 = !DILocation(line: 253, column: 9, scope: !7219)
!7245 = !DILocation(line: 253, column: 15, scope: !7219)
!7246 = !DILocation(line: 253, column: 13, scope: !7219)
!7247 = !DILocation(line: 253, column: 2, scope: !7219)
!7248 = !DILocation(line: 254, column: 1, scope: !7219)
!7249 = distinct !DISubprogram(name: "memmove", scope: !6984, file: !6984, line: 263, type: !7250, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7252)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{!102, !102, !13, !217}
!7252 = !{!7253, !7254, !7255, !7256, !7257}
!7253 = !DILocalVariable(name: "d", arg: 1, scope: !7249, file: !6984, line: 263, type: !102)
!7254 = !DILocalVariable(name: "s", arg: 2, scope: !7249, file: !6984, line: 263, type: !13)
!7255 = !DILocalVariable(name: "n", arg: 3, scope: !7249, file: !6984, line: 263, type: !217)
!7256 = !DILocalVariable(name: "dest", scope: !7249, file: !6984, line: 265, type: !357)
!7257 = !DILocalVariable(name: "src", scope: !7249, file: !6984, line: 266, type: !157)
!7258 = !DILocation(line: 0, scope: !7249)
!7259 = !DILocation(line: 268, column: 21, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7249, file: !6984, line: 268, column: 6)
!7261 = !DILocation(line: 268, column: 28, scope: !7260)
!7262 = !DILocation(line: 268, column: 6, scope: !7249)
!7263 = !DILocation(line: 280, column: 12, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7260, file: !6984, line: 278, column: 9)
!7265 = !DILocation(line: 280, column: 3, scope: !7264)
!7266 = !DILocation(line: 275, column: 5, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !6984, line: 274, column: 17)
!7268 = distinct !DILexicalBlock(scope: !7260, file: !6984, line: 268, column: 33)
!7269 = !DILocation(line: 276, column: 14, scope: !7267)
!7270 = !DILocation(line: 276, column: 4, scope: !7267)
!7271 = !DILocation(line: 276, column: 12, scope: !7267)
!7272 = !DILocation(line: 274, column: 12, scope: !7268)
!7273 = !DILocation(line: 274, column: 3, scope: !7268)
!7274 = distinct !{!7274, !7273, !7275}
!7275 = !DILocation(line: 277, column: 3, scope: !7268)
!7276 = !DILocation(line: 281, column: 12, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7264, file: !6984, line: 280, column: 17)
!7278 = !DILocation(line: 281, column: 10, scope: !7277)
!7279 = !DILocation(line: 282, column: 8, scope: !7277)
!7280 = !DILocation(line: 283, column: 7, scope: !7277)
!7281 = !DILocation(line: 284, column: 5, scope: !7277)
!7282 = distinct !{!7282, !7265, !7283}
!7283 = !DILocation(line: 285, column: 3, scope: !7264)
!7284 = !DILocation(line: 288, column: 2, scope: !7249)
!7285 = distinct !DISubprogram(name: "memcpy", scope: !6984, file: !6984, line: 298, type: !7286, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7290)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{!102, !7288, !7289, !217}
!7288 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7289 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7290 = !{!7291, !7292, !7293, !7294, !7295}
!7291 = !DILocalVariable(name: "d", arg: 1, scope: !7285, file: !6984, line: 298, type: !7288)
!7292 = !DILocalVariable(name: "s", arg: 2, scope: !7285, file: !6984, line: 298, type: !7289)
!7293 = !DILocalVariable(name: "n", arg: 3, scope: !7285, file: !6984, line: 298, type: !217)
!7294 = !DILocalVariable(name: "d_byte", scope: !7285, file: !6984, line: 302, type: !243)
!7295 = !DILocalVariable(name: "s_byte", scope: !7285, file: !6984, line: 303, type: !2926)
!7296 = !DILocation(line: 0, scope: !7285)
!7297 = !DILocation(line: 337, column: 11, scope: !7285)
!7298 = !DILocation(line: 337, column: 2, scope: !7285)
!7299 = !DILocation(line: 338, column: 25, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7285, file: !6984, line: 337, column: 16)
!7301 = !DILocation(line: 338, column: 17, scope: !7300)
!7302 = !DILocation(line: 338, column: 11, scope: !7300)
!7303 = !DILocation(line: 338, column: 15, scope: !7300)
!7304 = !DILocation(line: 339, column: 4, scope: !7300)
!7305 = distinct !{!7305, !7298, !7306}
!7306 = !DILocation(line: 340, column: 2, scope: !7285)
!7307 = !DILocation(line: 342, column: 2, scope: !7285)
!7308 = distinct !DISubprogram(name: "memset", scope: !6984, file: !6984, line: 352, type: !7309, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7311)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!102, !102, !103, !217}
!7311 = !{!7312, !7313, !7314, !7315, !7316}
!7312 = !DILocalVariable(name: "buf", arg: 1, scope: !7308, file: !6984, line: 352, type: !102)
!7313 = !DILocalVariable(name: "c", arg: 2, scope: !7308, file: !6984, line: 352, type: !103)
!7314 = !DILocalVariable(name: "n", arg: 3, scope: !7308, file: !6984, line: 352, type: !217)
!7315 = !DILocalVariable(name: "d_byte", scope: !7308, file: !6984, line: 356, type: !243)
!7316 = !DILocalVariable(name: "c_byte", scope: !7308, file: !6984, line: 357, type: !168)
!7317 = !DILocation(line: 0, scope: !7308)
!7318 = !DILocation(line: 357, column: 25, scope: !7308)
!7319 = !DILocation(line: 389, column: 11, scope: !7308)
!7320 = !DILocation(line: 389, column: 2, scope: !7308)
!7321 = !DILocation(line: 390, column: 11, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7308, file: !6984, line: 389, column: 16)
!7323 = !DILocation(line: 390, column: 15, scope: !7322)
!7324 = !DILocation(line: 391, column: 4, scope: !7322)
!7325 = distinct !{!7325, !7320, !7326}
!7326 = !DILocation(line: 392, column: 2, scope: !7308)
!7327 = !DILocation(line: 394, column: 2, scope: !7308)
!7328 = distinct !DISubprogram(name: "memchr", scope: !6984, file: !6984, line: 404, type: !7329, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7331)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!102, !13, !103, !217}
!7331 = !{!7332, !7333, !7334, !7335}
!7332 = !DILocalVariable(name: "s", arg: 1, scope: !7328, file: !6984, line: 404, type: !13)
!7333 = !DILocalVariable(name: "c", arg: 2, scope: !7328, file: !6984, line: 404, type: !103)
!7334 = !DILocalVariable(name: "n", arg: 3, scope: !7328, file: !6984, line: 404, type: !217)
!7335 = !DILocalVariable(name: "p", scope: !7336, file: !6984, line: 407, type: !2926)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !6984, line: 406, column: 14)
!7337 = distinct !DILexicalBlock(scope: !7328, file: !6984, line: 406, column: 6)
!7338 = !DILocation(line: 0, scope: !7328)
!7339 = !DILocation(line: 406, column: 8, scope: !7337)
!7340 = !DILocation(line: 406, column: 6, scope: !7328)
!7341 = !DILocation(line: 409, column: 3, scope: !7336)
!7342 = !DILocation(line: 0, scope: !7336)
!7343 = !DILocation(line: 410, column: 8, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !6984, line: 410, column: 8)
!7345 = distinct !DILexicalBlock(scope: !7336, file: !6984, line: 409, column: 6)
!7346 = !DILocation(line: 410, column: 13, scope: !7344)
!7347 = !DILocation(line: 410, column: 8, scope: !7345)
!7348 = distinct !{!7348, !7341, !7349}
!7349 = !DILocation(line: 414, column: 20, scope: !7336)
!7350 = !DILocation(line: 417, column: 2, scope: !7328)
!7351 = !DILocation(line: 418, column: 1, scope: !7328)
!7352 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !566, file: !566, line: 23, type: !3288, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7353)
!7353 = !{!7354}
!7354 = !DILocalVariable(name: "hook", arg: 1, scope: !7352, file: !566, line: 23, type: !106)
!7355 = !DILocation(line: 0, scope: !7352)
!7356 = !DILocation(line: 25, column: 15, scope: !7352)
!7357 = !DILocation(line: 26, column: 1, scope: !7352)
!7358 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !566, file: !566, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7359)
!7359 = !{!7360}
!7360 = !DILocalVariable(name: "c", arg: 1, scope: !7358, file: !566, line: 14, type: !103)
!7361 = !DILocation(line: 0, scope: !7358)
!7362 = !DILocation(line: 18, column: 2, scope: !7358)
!7363 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !566, file: !566, line: 28, type: !7364, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7366)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!103, !103, !562}
!7366 = !{!7367, !7368}
!7367 = !DILocalVariable(name: "c", arg: 1, scope: !7363, file: !566, line: 28, type: !103)
!7368 = !DILocalVariable(name: "stream", arg: 2, scope: !7363, file: !566, line: 28, type: !562)
!7369 = !DILocation(line: 0, scope: !7363)
!7370 = !DILocation(line: 30, column: 27, scope: !7363)
!7371 = !DILocation(line: 30, column: 50, scope: !7363)
!7372 = !DILocation(line: 30, column: 9, scope: !7363)
!7373 = !DILocation(line: 30, column: 2, scope: !7363)
!7374 = distinct !DISubprogram(name: "fputc", scope: !566, file: !566, line: 41, type: !7364, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7375)
!7375 = !{!7376, !7377}
!7376 = !DILocalVariable(name: "c", arg: 1, scope: !7374, file: !566, line: 41, type: !103)
!7377 = !DILocalVariable(name: "stream", arg: 2, scope: !7374, file: !566, line: 41, type: !562)
!7378 = !DILocation(line: 0, scope: !7374)
!7379 = !DILocation(line: 43, column: 9, scope: !7374)
!7380 = !DILocation(line: 43, column: 2, scope: !7374)
!7381 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7382, file: !7382, line: 72, type: !7364, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7383)
!7382 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!7383 = !{!7384, !7385}
!7384 = !DILocalVariable(name: "c", arg: 1, scope: !7381, file: !7382, line: 72, type: !103)
!7385 = !DILocalVariable(name: "stream", arg: 2, scope: !7381, file: !7382, line: 72, type: !562)
!7386 = !DILocation(line: 0, scope: !7381)
!7387 = !DILocation(line: 81, column: 2, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7381, file: !7382, line: 81, column: 2)
!7389 = !{i64 2152277998}
!7390 = !DILocation(line: 82, column: 9, scope: !7381)
!7391 = !DILocation(line: 82, column: 2, scope: !7381)
!7392 = distinct !DISubprogram(name: "fputs", scope: !566, file: !566, line: 46, type: !7393, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7396)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!103, !6988, !7395}
!7395 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !562)
!7396 = !{!7397, !7398, !7399, !7400}
!7397 = !DILocalVariable(name: "s", arg: 1, scope: !7392, file: !566, line: 46, type: !6988)
!7398 = !DILocalVariable(name: "stream", arg: 2, scope: !7392, file: !566, line: 46, type: !7395)
!7399 = !DILocalVariable(name: "len", scope: !7392, file: !566, line: 48, type: !103)
!7400 = !DILocalVariable(name: "ret", scope: !7392, file: !566, line: 49, type: !103)
!7401 = !DILocation(line: 0, scope: !7392)
!7402 = !DILocation(line: 48, column: 12, scope: !7392)
!7403 = !DILocation(line: 51, column: 8, scope: !7392)
!7404 = !DILocation(line: 53, column: 13, scope: !7392)
!7405 = !DILocation(line: 53, column: 9, scope: !7392)
!7406 = !DILocation(line: 53, column: 2, scope: !7392)
!7407 = distinct !DISubprogram(name: "fwrite", scope: !566, file: !566, line: 99, type: !7408, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7410)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!217, !7289, !217, !217, !7395}
!7410 = !{!7411, !7412, !7413, !7414}
!7411 = !DILocalVariable(name: "ptr", arg: 1, scope: !7407, file: !566, line: 99, type: !7289)
!7412 = !DILocalVariable(name: "size", arg: 2, scope: !7407, file: !566, line: 99, type: !217)
!7413 = !DILocalVariable(name: "nitems", arg: 3, scope: !7407, file: !566, line: 99, type: !217)
!7414 = !DILocalVariable(name: "stream", arg: 4, scope: !7407, file: !566, line: 100, type: !7395)
!7415 = !DILocation(line: 0, scope: !7407)
!7416 = !DILocation(line: 102, column: 9, scope: !7407)
!7417 = !DILocation(line: 102, column: 2, scope: !7407)
!7418 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7382, file: !7382, line: 96, type: !7408, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7419)
!7419 = !{!7420, !7421, !7422, !7423}
!7420 = !DILocalVariable(name: "ptr", arg: 1, scope: !7418, file: !7382, line: 96, type: !7289)
!7421 = !DILocalVariable(name: "size", arg: 2, scope: !7418, file: !7382, line: 96, type: !217)
!7422 = !DILocalVariable(name: "nitems", arg: 3, scope: !7418, file: !7382, line: 96, type: !217)
!7423 = !DILocalVariable(name: "stream", arg: 4, scope: !7418, file: !7382, line: 96, type: !7395)
!7424 = !DILocation(line: 0, scope: !7418)
!7425 = !DILocation(line: 107, column: 2, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7418, file: !7382, line: 107, column: 2)
!7427 = !{i64 2152278102}
!7428 = !DILocation(line: 108, column: 9, scope: !7418)
!7429 = !DILocation(line: 108, column: 2, scope: !7418)
!7430 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !566, file: !566, line: 56, type: !7408, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7431)
!7431 = !{!7432, !7433, !7434, !7435, !7436, !7437, !7438, !7439}
!7432 = !DILocalVariable(name: "ptr", arg: 1, scope: !7430, file: !566, line: 56, type: !7289)
!7433 = !DILocalVariable(name: "size", arg: 2, scope: !7430, file: !566, line: 56, type: !217)
!7434 = !DILocalVariable(name: "nitems", arg: 3, scope: !7430, file: !566, line: 57, type: !217)
!7435 = !DILocalVariable(name: "stream", arg: 4, scope: !7430, file: !566, line: 57, type: !7395)
!7436 = !DILocalVariable(name: "i", scope: !7430, file: !566, line: 59, type: !217)
!7437 = !DILocalVariable(name: "j", scope: !7430, file: !566, line: 60, type: !217)
!7438 = !DILocalVariable(name: "p", scope: !7430, file: !566, line: 61, type: !2926)
!7439 = !DILabel(scope: !7430, name: "done", file: !566, line: 82)
!7440 = !DILocation(line: 0, scope: !7430)
!7441 = !DILocation(line: 63, column: 14, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7430, file: !566, line: 63, column: 6)
!7443 = !DILocation(line: 63, column: 24, scope: !7442)
!7444 = !DILocation(line: 72, column: 3, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7430, file: !566, line: 70, column: 5)
!7446 = !DILocation(line: 0, scope: !7445)
!7447 = !DILocation(line: 73, column: 8, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7449, file: !566, line: 73, column: 8)
!7449 = distinct !DILexicalBlock(scope: !7445, file: !566, line: 72, column: 6)
!7450 = !DILocation(line: 73, column: 29, scope: !7448)
!7451 = !DILocation(line: 73, column: 27, scope: !7448)
!7452 = !DILocation(line: 73, column: 21, scope: !7448)
!7453 = !DILocation(line: 73, column: 33, scope: !7448)
!7454 = !DILocation(line: 73, column: 8, scope: !7449)
!7455 = !DILocation(line: 76, column: 5, scope: !7449)
!7456 = !DILocation(line: 77, column: 14, scope: !7445)
!7457 = !DILocation(line: 77, column: 3, scope: !7449)
!7458 = distinct !{!7458, !7444, !7459}
!7459 = !DILocation(line: 77, column: 17, scope: !7445)
!7460 = !DILocation(line: 79, column: 4, scope: !7445)
!7461 = !DILocation(line: 80, column: 13, scope: !7430)
!7462 = !DILocation(line: 80, column: 2, scope: !7445)
!7463 = distinct !{!7463, !7464, !7465}
!7464 = !DILocation(line: 70, column: 2, scope: !7430)
!7465 = !DILocation(line: 80, column: 16, scope: !7430)
!7466 = !DILocation(line: 82, column: 1, scope: !7430)
!7467 = !DILocation(line: 83, column: 17, scope: !7430)
!7468 = !DILocation(line: 83, column: 2, scope: !7430)
!7469 = !DILocation(line: 84, column: 1, scope: !7430)
!7470 = distinct !DISubprogram(name: "puts", scope: !566, file: !566, line: 106, type: !7471, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7473)
!7471 = !DISubroutineType(types: !7472)
!7472 = !{!103, !157}
!7473 = !{!7474}
!7474 = !DILocalVariable(name: "s", arg: 1, scope: !7470, file: !566, line: 106, type: !157)
!7475 = !DILocation(line: 0, scope: !7470)
!7476 = !DILocation(line: 108, column: 6, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7470, file: !566, line: 108, column: 6)
!7478 = !DILocation(line: 108, column: 23, scope: !7477)
!7479 = !DILocation(line: 108, column: 6, scope: !7470)
!7480 = !DILocation(line: 112, column: 9, scope: !7470)
!7481 = !DILocation(line: 112, column: 29, scope: !7470)
!7482 = !DILocation(line: 112, column: 2, scope: !7470)
!7483 = !DILocation(line: 113, column: 1, scope: !7470)
!7484 = distinct !DISubprogram(name: "rf_init", scope: !691, file: !691, line: 10, type: !697, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !594, retainedNodes: !7485)
!7485 = !{!7486, !7487, !7495, !7496}
!7486 = !DILocalVariable(name: "dev", arg: 1, scope: !7484, file: !691, line: 10, type: !617)
!7487 = !DILocalVariable(name: "rf1", scope: !7484, file: !691, line: 12, type: !7488)
!7488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7489)
!7489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !598, line: 271, size: 64, elements: !7490)
!7490 = !{!7491, !7492, !7493}
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7489, file: !598, line: 273, baseType: !617, size: 32)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7489, file: !598, line: 275, baseType: !632, size: 8, offset: 32)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !7489, file: !598, line: 277, baseType: !7494, size: 16, offset: 48)
!7494 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !598, line: 249, baseType: !442)
!7495 = !DILocalVariable(name: "rf2", scope: !7484, file: !691, line: 14, type: !7488)
!7496 = !DILocalVariable(name: "rf3", scope: !7484, file: !691, line: 16, type: !7488)
!7497 = !DILocation(line: 0, scope: !7484)
!7498 = !DILocation(line: 12, column: 2, scope: !7484)
!7499 = !DILocation(line: 12, column: 28, scope: !7484)
!7500 = !DILocation(line: 14, column: 2, scope: !7484)
!7501 = !DILocation(line: 14, column: 28, scope: !7484)
!7502 = !DILocation(line: 16, column: 2, scope: !7484)
!7503 = !DILocation(line: 16, column: 28, scope: !7484)
!7504 = !DILocation(line: 22, column: 27, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7484, file: !691, line: 22, column: 6)
!7506 = !DILocation(line: 22, column: 7, scope: !7505)
!7507 = !DILocation(line: 22, column: 33, scope: !7505)
!7508 = !DILocation(line: 23, column: 7, scope: !7505)
!7509 = !DILocation(line: 23, column: 33, scope: !7505)
!7510 = !DILocation(line: 24, column: 7, scope: !7505)
!7511 = !DILocation(line: 22, column: 6, scope: !7484)
!7512 = !DILocation(line: 28, column: 8, scope: !7484)
!7513 = !DILocation(line: 29, column: 8, scope: !7484)
!7514 = !DILocation(line: 30, column: 8, scope: !7484)
!7515 = !DILocation(line: 32, column: 2, scope: !7484)
!7516 = !DILocation(line: 33, column: 1, scope: !7484)
!7517 = distinct !DISubprogram(name: "device_is_ready", scope: !7518, file: !7518, line: 47, type: !7519, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !594, retainedNodes: !7521)
!7518 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!7519 = !DISubroutineType(types: !7520)
!7520 = !{!170, !617}
!7521 = !{!7522}
!7522 = !DILocalVariable(name: "dev", arg: 1, scope: !7517, file: !7518, line: 47, type: !617)
!7523 = !DILocation(line: 0, scope: !7517)
!7524 = !DILocation(line: 55, column: 2, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7517, file: !7518, line: 55, column: 2)
!7526 = !{i64 2148925775}
!7527 = !DILocation(line: 56, column: 9, scope: !7517)
!7528 = !DILocation(line: 56, column: 2, scope: !7517)
!7529 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !598, file: !598, line: 731, type: !7530, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !594, retainedNodes: !7533)
!7530 = !DISubroutineType(types: !7531)
!7531 = !{!103, !7532, !633}
!7532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7488, size: 32)
!7533 = !{!7534, !7535}
!7534 = !DILocalVariable(name: "spec", arg: 1, scope: !7529, file: !598, line: 731, type: !7532)
!7535 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !7529, file: !598, line: 732, type: !633)
!7536 = !DILocation(line: 0, scope: !7529)
!7537 = !DILocation(line: 734, column: 34, scope: !7529)
!7538 = !DILocation(line: 735, column: 13, scope: !7529)
!7539 = !DILocation(line: 736, column: 13, scope: !7529)
!7540 = !DILocation(line: 736, column: 7, scope: !7529)
!7541 = !DILocation(line: 736, column: 22, scope: !7529)
!7542 = !DILocation(line: 734, column: 9, scope: !7529)
!7543 = !DILocation(line: 734, column: 2, scope: !7529)
!7544 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !7545, file: !7545, line: 49, type: !615, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !594, retainedNodes: !7546)
!7545 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!7546 = !{!7547, !7548, !7549}
!7547 = !DILocalVariable(name: "port", arg: 1, scope: !7544, file: !7545, line: 49, type: !617)
!7548 = !DILocalVariable(name: "pin", arg: 2, scope: !7544, file: !7545, line: 49, type: !632)
!7549 = !DILocalVariable(name: "flags", arg: 3, scope: !7544, file: !7545, line: 49, type: !633)
!7550 = !DILocation(line: 0, scope: !7544)
!7551 = !DILocation(line: 59, column: 2, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7544, file: !7545, line: 59, column: 2)
!7553 = !{i64 2148940145}
!7554 = !DILocation(line: 60, column: 9, scope: !7544)
!7555 = !DILocation(line: 60, column: 2, scope: !7544)
!7556 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !598, file: !598, line: 667, type: !615, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !594, retainedNodes: !7557)
!7557 = !{!7558, !7559, !7560, !7561, !7562, !7564}
!7558 = !DILocalVariable(name: "port", arg: 1, scope: !7556, file: !598, line: 667, type: !617)
!7559 = !DILocalVariable(name: "pin", arg: 2, scope: !7556, file: !598, line: 668, type: !632)
!7560 = !DILocalVariable(name: "flags", arg: 3, scope: !7556, file: !598, line: 669, type: !633)
!7561 = !DILocalVariable(name: "api", scope: !7556, file: !598, line: 671, type: !609)
!7562 = !DILocalVariable(name: "cfg", scope: !7556, file: !598, line: 673, type: !7563)
!7563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !679)
!7564 = !DILocalVariable(name: "data", scope: !7556, file: !598, line: 675, type: !689)
!7565 = !DILocation(line: 0, scope: !7556)
!7566 = !DILocation(line: 672, column: 41, scope: !7556)
!7567 = !DILocation(line: 676, column: 36, scope: !7556)
!7568 = !DILocation(line: 701, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7556, file: !598, line: 700, column: 6)
!7570 = !DILocation(line: 711, column: 13, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7556, file: !598, line: 711, column: 6)
!7572 = !DILocation(line: 711, column: 32, scope: !7571)
!7573 = !DILocation(line: 0, scope: !7571)
!7574 = !DILocation(line: 711, column: 6, scope: !7556)
!7575 = !DILocation(line: 712, column: 9, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7571, file: !598, line: 711, column: 38)
!7577 = !DILocation(line: 712, column: 16, scope: !7576)
!7578 = !DILocation(line: 713, column: 2, scope: !7576)
!7579 = !DILocation(line: 714, column: 19, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7571, file: !598, line: 713, column: 9)
!7581 = !DILocation(line: 714, column: 9, scope: !7580)
!7582 = !DILocation(line: 714, column: 16, scope: !7580)
!7583 = !DILocation(line: 706, column: 8, scope: !7556)
!7584 = !DILocation(line: 717, column: 14, scope: !7556)
!7585 = !DILocation(line: 717, column: 9, scope: !7556)
!7586 = !DILocation(line: 717, column: 2, scope: !7556)
!7587 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !7519, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !594, retainedNodes: !7588)
!7588 = !{!7589}
!7589 = !DILocalVariable(name: "dev", arg: 1, scope: !7587, file: !154, line: 730, type: !617)
!7590 = !DILocation(line: 0, scope: !7587)
!7591 = !DILocation(line: 732, column: 9, scope: !7587)
!7592 = !DILocation(line: 732, column: 2, scope: !7587)
!7593 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !774, file: !774, line: 368, type: !827, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7594)
!7594 = !{!7595}
!7595 = !DILocalVariable(name: "dev", arg: 1, scope: !7593, file: !774, line: 368, type: !803)
!7596 = !DILocation(line: 0, scope: !7593)
!7597 = !DILocation(line: 370, column: 2, scope: !7593)
!7598 = !DILocation(line: 371, column: 1, scope: !7593)
!7599 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !774, file: !774, line: 243, type: !7600, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{null, !103, !103, !803}
!7602 = !{!7603, !7604, !7605, !7606, !7608}
!7603 = !DILocalVariable(name: "min", arg: 1, scope: !7599, file: !774, line: 243, type: !103)
!7604 = !DILocalVariable(name: "max", arg: 2, scope: !7599, file: !774, line: 243, type: !103)
!7605 = !DILocalVariable(name: "dev", arg: 3, scope: !7599, file: !774, line: 243, type: !803)
!7606 = !DILocalVariable(name: "data", scope: !7599, file: !774, line: 245, type: !7607)
!7607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!7608 = !DILocalVariable(name: "line", scope: !7599, file: !774, line: 246, type: !103)
!7609 = !DILocation(line: 0, scope: !7599)
!7610 = !DILocation(line: 245, column: 38, scope: !7599)
!7611 = !DILocation(line: 249, column: 24, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !774, line: 249, column: 2)
!7613 = distinct !DILexicalBlock(scope: !7599, file: !774, line: 249, column: 2)
!7614 = !DILocation(line: 249, column: 2, scope: !7613)
!7615 = !DILocation(line: 251, column: 7, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !774, line: 251, column: 7)
!7617 = distinct !DILexicalBlock(scope: !7612, file: !774, line: 249, column: 39)
!7618 = !DILocation(line: 251, column: 7, scope: !7617)
!7619 = !DILocation(line: 253, column: 4, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7616, file: !774, line: 251, column: 36)
!7621 = !DILocation(line: 256, column: 24, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7620, file: !774, line: 256, column: 8)
!7623 = !DILocation(line: 256, column: 9, scope: !7622)
!7624 = !DILocation(line: 256, column: 8, scope: !7620)
!7625 = !DILocation(line: 260, column: 43, scope: !7620)
!7626 = !DILocation(line: 260, column: 4, scope: !7620)
!7627 = !DILocation(line: 261, column: 3, scope: !7620)
!7628 = !DILocation(line: 249, column: 35, scope: !7612)
!7629 = distinct !{!7629, !7614, !7630}
!7630 = !DILocation(line: 262, column: 2, scope: !7613)
!7631 = !DILocation(line: 263, column: 1, scope: !7599)
!7632 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !774, file: !774, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7633)
!7633 = !{!7634}
!7634 = !DILocalVariable(name: "line", arg: 1, scope: !7632, file: !774, line: 158, type: !103)
!7635 = !DILocation(line: 0, scope: !7632)
!7636 = !DILocation(line: 170, column: 38, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !774, line: 160, column: 17)
!7638 = distinct !DILexicalBlock(scope: !7632, file: !774, line: 160, column: 6)
!7639 = !DILocation(line: 170, column: 10, scope: !7637)
!7640 = !DILocation(line: 176, column: 1, scope: !7632)
!7641 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !774, file: !774, line: 183, type: !7642, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !103}
!7644 = !{!7645}
!7645 = !DILocalVariable(name: "line", arg: 1, scope: !7641, file: !774, line: 183, type: !103)
!7646 = !DILocation(line: 0, scope: !7641)
!7647 = !DILocation(line: 195, column: 28, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !774, line: 185, column: 17)
!7649 = distinct !DILexicalBlock(scope: !7641, file: !774, line: 185, column: 6)
!7650 = !DILocation(line: 195, column: 3, scope: !7648)
!7651 = !DILocation(line: 200, column: 1, scope: !7641)
!7652 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7653, file: !7653, line: 971, type: !5719, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7654)
!7653 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7654 = !{!7655}
!7655 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7652, file: !7653, line: 971, type: !121)
!7656 = !DILocation(line: 0, scope: !7652)
!7657 = !DILocation(line: 973, column: 3, scope: !7652)
!7658 = !DILocation(line: 974, column: 1, scope: !7652)
!7659 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7653, file: !7653, line: 891, type: !6896, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7660)
!7660 = !{!7661}
!7661 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7659, file: !7653, line: 891, type: !121)
!7662 = !DILocation(line: 0, scope: !7659)
!7663 = !DILocation(line: 893, column: 11, scope: !7659)
!7664 = !DILocation(line: 893, column: 40, scope: !7659)
!7665 = !DILocation(line: 893, column: 3, scope: !7659)
!7666 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !774, file: !774, line: 304, type: !827, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7667)
!7667 = !{!7668}
!7668 = !DILocalVariable(name: "dev", arg: 1, scope: !7666, file: !774, line: 304, type: !803)
!7669 = !DILocation(line: 0, scope: !7666)
!7670 = !DILocation(line: 306, column: 2, scope: !7666)
!7671 = !DILocation(line: 307, column: 1, scope: !7666)
!7672 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !774, file: !774, line: 299, type: !827, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7673)
!7673 = !{!7674}
!7674 = !DILocalVariable(name: "dev", arg: 1, scope: !7672, file: !774, line: 299, type: !803)
!7675 = !DILocation(line: 0, scope: !7672)
!7676 = !DILocation(line: 301, column: 2, scope: !7672)
!7677 = !DILocation(line: 302, column: 1, scope: !7672)
!7678 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !774, file: !774, line: 294, type: !827, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7679)
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "dev", arg: 1, scope: !7678, file: !774, line: 294, type: !803)
!7681 = !DILocation(line: 0, scope: !7678)
!7682 = !DILocation(line: 296, column: 2, scope: !7678)
!7683 = !DILocation(line: 297, column: 1, scope: !7678)
!7684 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !774, file: !774, line: 289, type: !827, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7685)
!7685 = !{!7686}
!7686 = !DILocalVariable(name: "dev", arg: 1, scope: !7684, file: !774, line: 289, type: !803)
!7687 = !DILocation(line: 0, scope: !7684)
!7688 = !DILocation(line: 291, column: 2, scope: !7684)
!7689 = !DILocation(line: 292, column: 1, scope: !7684)
!7690 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !774, file: !774, line: 373, type: !827, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7691)
!7691 = !{!7692}
!7692 = !DILocalVariable(name: "dev", arg: 1, scope: !7690, file: !774, line: 373, type: !803)
!7693 = !DILocation(line: 0, scope: !7690)
!7694 = !DILocation(line: 375, column: 2, scope: !7690)
!7695 = !DILocation(line: 376, column: 1, scope: !7690)
!7696 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !774, file: !774, line: 284, type: !827, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7697)
!7697 = !{!7698}
!7698 = !DILocalVariable(name: "dev", arg: 1, scope: !7696, file: !774, line: 284, type: !803)
!7699 = !DILocation(line: 0, scope: !7696)
!7700 = !DILocation(line: 286, column: 2, scope: !7696)
!7701 = !DILocation(line: 287, column: 1, scope: !7696)
!7702 = distinct !DISubprogram(name: "stm32_exti_init", scope: !774, file: !774, line: 416, type: !801, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7703)
!7703 = !{!7704}
!7704 = !DILocalVariable(name: "dev", arg: 1, scope: !7702, file: !774, line: 416, type: !803)
!7705 = !DILocation(line: 0, scope: !7702)
!7706 = !DILocation(line: 418, column: 2, scope: !7702)
!7707 = !DILocation(line: 420, column: 2, scope: !7702)
!7708 = !DILocation(line: 0, scope: !826)
!7709 = !DILocation(line: 493, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !826, file: !774, line: 493, column: 2)
!7711 = !DILocation(line: 497, column: 2, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !826, file: !774, line: 497, column: 2)
!7713 = !DILocation(line: 507, column: 2, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !826, file: !774, line: 507, column: 2)
!7715 = !DILocation(line: 512, column: 2, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !826, file: !774, line: 512, column: 2)
!7717 = !DILocation(line: 516, column: 2, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !826, file: !774, line: 516, column: 2)
!7719 = !DILocation(line: 523, column: 2, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !826, file: !774, line: 523, column: 2)
!7721 = !DILocation(line: 527, column: 2, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !826, file: !774, line: 527, column: 2)
!7723 = !DILocation(line: 607, column: 1, scope: !826)
!7724 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !774, file: !774, line: 112, type: !7642, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7725)
!7725 = !{!7726, !7727}
!7726 = !DILocalVariable(name: "line", arg: 1, scope: !7724, file: !774, line: 112, type: !103)
!7727 = !DILocalVariable(name: "irqnum", scope: !7724, file: !774, line: 114, type: !103)
!7728 = !DILocation(line: 0, scope: !7724)
!7729 = !DILocation(line: 121, column: 11, scope: !7724)
!7730 = !DILocation(line: 130, column: 26, scope: !7724)
!7731 = !DILocation(line: 130, column: 2, scope: !7724)
!7732 = !DILocation(line: 134, column: 2, scope: !7724)
!7733 = !DILocation(line: 135, column: 1, scope: !7724)
!7734 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7653, file: !7653, line: 274, type: !5719, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7735)
!7735 = !{!7736}
!7736 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7734, file: !7653, line: 274, type: !121)
!7737 = !DILocation(line: 0, scope: !7734)
!7738 = !DILocation(line: 276, column: 3, scope: !7734)
!7739 = !DILocation(line: 277, column: 1, scope: !7734)
!7740 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !774, file: !774, line: 137, type: !7642, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7741)
!7741 = !{!7742}
!7742 = !DILocalVariable(name: "line", arg: 1, scope: !7740, file: !774, line: 137, type: !103)
!7743 = !DILocation(line: 0, scope: !7740)
!7744 = !DILocation(line: 141, column: 11, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7740, file: !774, line: 141, column: 6)
!7746 = !DILocation(line: 141, column: 6, scope: !7740)
!7747 = !DILocation(line: 145, column: 28, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7745, file: !774, line: 141, column: 17)
!7749 = !DILocation(line: 145, column: 3, scope: !7748)
!7750 = !DILocation(line: 147, column: 2, scope: !7748)
!7751 = !DILocation(line: 151, column: 1, scope: !7740)
!7752 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7653, file: !7653, line: 322, type: !5719, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7753)
!7753 = !{!7754}
!7754 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7752, file: !7653, line: 322, type: !121)
!7755 = !DILocation(line: 0, scope: !7752)
!7756 = !DILocation(line: 324, column: 3, scope: !7752)
!7757 = !DILocation(line: 325, column: 1, scope: !7752)
!7758 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !774, file: !774, line: 202, type: !7759, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7761)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{null, !103, !103}
!7761 = !{!7762, !7763}
!7762 = !DILocalVariable(name: "line", arg: 1, scope: !7758, file: !774, line: 202, type: !103)
!7763 = !DILocalVariable(name: "trigger", arg: 2, scope: !7758, file: !774, line: 202, type: !103)
!7764 = !DILocation(line: 0, scope: !7758)
!7765 = !DILocation(line: 211, column: 2, scope: !7758)
!7766 = !DILocation(line: 213, column: 36, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7758, file: !774, line: 211, column: 19)
!7768 = !DILocation(line: 213, column: 3, scope: !7767)
!7769 = !DILocation(line: 214, column: 3, scope: !7767)
!7770 = !DILocation(line: 215, column: 3, scope: !7767)
!7771 = !DILocation(line: 217, column: 35, scope: !7767)
!7772 = !DILocation(line: 217, column: 3, scope: !7767)
!7773 = !DILocation(line: 218, column: 3, scope: !7767)
!7774 = !DILocation(line: 219, column: 3, scope: !7767)
!7775 = !DILocation(line: 221, column: 36, scope: !7767)
!7776 = !DILocation(line: 221, column: 3, scope: !7767)
!7777 = !DILocation(line: 222, column: 3, scope: !7767)
!7778 = !DILocation(line: 223, column: 3, scope: !7767)
!7779 = !DILocation(line: 225, column: 35, scope: !7767)
!7780 = !DILocation(line: 225, column: 3, scope: !7767)
!7781 = !DILocation(line: 226, column: 3, scope: !7767)
!7782 = !DILocation(line: 227, column: 3, scope: !7767)
!7783 = !DILocation(line: 232, column: 1, scope: !7758)
!7784 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7653, file: !7653, line: 618, type: !5719, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7785)
!7785 = !{!7786}
!7786 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7784, file: !7653, line: 618, type: !121)
!7787 = !DILocation(line: 0, scope: !7784)
!7788 = !DILocation(line: 620, column: 3, scope: !7784)
!7789 = !DILocation(line: 622, column: 1, scope: !7784)
!7790 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7653, file: !7653, line: 754, type: !5719, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7791)
!7791 = !{!7792}
!7792 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7790, file: !7653, line: 754, type: !121)
!7793 = !DILocation(line: 0, scope: !7790)
!7794 = !DILocation(line: 756, column: 3, scope: !7790)
!7795 = !DILocation(line: 757, column: 1, scope: !7790)
!7796 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7653, file: !7653, line: 572, type: !5719, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7797)
!7797 = !{!7798}
!7798 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7796, file: !7653, line: 572, type: !121)
!7799 = !DILocation(line: 0, scope: !7796)
!7800 = !DILocation(line: 574, column: 3, scope: !7796)
!7801 = !DILocation(line: 576, column: 1, scope: !7796)
!7802 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7653, file: !7653, line: 710, type: !5719, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7803)
!7803 = !{!7804}
!7804 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7802, file: !7653, line: 710, type: !121)
!7805 = !DILocation(line: 0, scope: !7802)
!7806 = !DILocation(line: 712, column: 3, scope: !7802)
!7807 = !DILocation(line: 713, column: 1, scope: !7802)
!7808 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !774, file: !774, line: 433, type: !7809, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7811)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{!103, !103, !814, !102}
!7811 = !{!7812, !7813, !7814, !7815, !7817}
!7812 = !DILocalVariable(name: "line", arg: 1, scope: !7808, file: !774, line: 433, type: !103)
!7813 = !DILocalVariable(name: "cb", arg: 2, scope: !7808, file: !774, line: 433, type: !814)
!7814 = !DILocalVariable(name: "arg", arg: 3, scope: !7808, file: !774, line: 433, type: !102)
!7815 = !DILocalVariable(name: "dev", scope: !7808, file: !774, line: 435, type: !7816)
!7816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !803)
!7817 = !DILocalVariable(name: "data", scope: !7808, file: !774, line: 436, type: !7607)
!7818 = !DILocation(line: 0, scope: !7808)
!7819 = !DILocation(line: 438, column: 21, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7808, file: !774, line: 438, column: 6)
!7821 = !DILocation(line: 438, column: 6, scope: !7820)
!7822 = !DILocation(line: 438, column: 6, scope: !7808)
!7823 = !DILocation(line: 442, column: 20, scope: !7808)
!7824 = !DILocation(line: 443, column: 17, scope: !7808)
!7825 = !DILocation(line: 443, column: 22, scope: !7808)
!7826 = !DILocation(line: 445, column: 2, scope: !7808)
!7827 = !DILocation(line: 446, column: 1, scope: !7808)
!7828 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !774, file: !774, line: 448, type: !7642, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !7829)
!7829 = !{!7830, !7831, !7832}
!7830 = !DILocalVariable(name: "line", arg: 1, scope: !7828, file: !774, line: 448, type: !103)
!7831 = !DILocalVariable(name: "dev", scope: !7828, file: !774, line: 450, type: !7816)
!7832 = !DILocalVariable(name: "data", scope: !7828, file: !774, line: 451, type: !7607)
!7833 = !DILocation(line: 0, scope: !7828)
!7834 = !DILocation(line: 453, column: 17, scope: !7828)
!7835 = !DILocation(line: 453, column: 20, scope: !7828)
!7836 = !DILocation(line: 454, column: 17, scope: !7828)
!7837 = !DILocation(line: 454, column: 22, scope: !7828)
!7838 = !DILocation(line: 455, column: 1, scope: !7828)
!7839 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !929, file: !929, line: 183, type: !967, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7840)
!7840 = !{!7841, !7842, !7843, !7844, !7845}
!7841 = !DILocalVariable(name: "dev", arg: 1, scope: !7839, file: !929, line: 183, type: !958)
!7842 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7839, file: !929, line: 184, type: !969)
!7843 = !DILocalVariable(name: "pclken", scope: !7839, file: !929, line: 186, type: !919)
!7844 = !DILocalVariable(name: "reg", scope: !7839, file: !929, line: 187, type: !2988)
!7845 = !DILocalVariable(name: "reg_val", scope: !7839, file: !929, line: 188, type: !121)
!7846 = !DILocation(line: 0, scope: !7839)
!7847 = !DILocation(line: 192, column: 6, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7839, file: !929, line: 192, column: 6)
!7849 = !DILocation(line: 192, column: 6, scope: !7839)
!7850 = !DILocation(line: 197, column: 52, scope: !7839)
!7851 = !DILocation(line: 197, column: 8, scope: !7839)
!7852 = !DILocation(line: 198, column: 12, scope: !7839)
!7853 = !DILocation(line: 199, column: 21, scope: !7839)
!7854 = !DILocation(line: 199, column: 10, scope: !7839)
!7855 = !DILocation(line: 200, column: 7, scope: !7839)
!7856 = !DILocation(line: 202, column: 2, scope: !7839)
!7857 = !DILocation(line: 203, column: 1, scope: !7839)
!7858 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !929, file: !929, line: 205, type: !967, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7859)
!7859 = !{!7860, !7861, !7862, !7863, !7864}
!7860 = !DILocalVariable(name: "dev", arg: 1, scope: !7858, file: !929, line: 205, type: !958)
!7861 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7858, file: !929, line: 206, type: !969)
!7862 = !DILocalVariable(name: "pclken", scope: !7858, file: !929, line: 208, type: !919)
!7863 = !DILocalVariable(name: "reg", scope: !7858, file: !929, line: 209, type: !2988)
!7864 = !DILocalVariable(name: "reg_val", scope: !7858, file: !929, line: 210, type: !121)
!7865 = !DILocation(line: 0, scope: !7858)
!7866 = !DILocation(line: 214, column: 6, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7858, file: !929, line: 214, column: 6)
!7868 = !DILocation(line: 214, column: 6, scope: !7858)
!7869 = !DILocation(line: 219, column: 52, scope: !7858)
!7870 = !DILocation(line: 219, column: 8, scope: !7858)
!7871 = !DILocation(line: 220, column: 12, scope: !7858)
!7872 = !DILocation(line: 221, column: 22, scope: !7858)
!7873 = !DILocation(line: 221, column: 13, scope: !7858)
!7874 = !DILocation(line: 221, column: 10, scope: !7858)
!7875 = !DILocation(line: 222, column: 7, scope: !7858)
!7876 = !DILocation(line: 224, column: 2, scope: !7858)
!7877 = !DILocation(line: 225, column: 1, scope: !7858)
!7878 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !929, file: !929, line: 262, type: !983, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7879)
!7879 = !{!7880, !7881, !7882, !7883, !7884, !7885, !7886}
!7880 = !DILocalVariable(name: "clock", arg: 1, scope: !7878, file: !929, line: 262, type: !958)
!7881 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7878, file: !929, line: 263, type: !969)
!7882 = !DILocalVariable(name: "rate", arg: 3, scope: !7878, file: !929, line: 264, type: !925)
!7883 = !DILocalVariable(name: "pclken", scope: !7878, file: !929, line: 266, type: !919)
!7884 = !DILocalVariable(name: "ahb_clock", scope: !7878, file: !929, line: 273, type: !121)
!7885 = !DILocalVariable(name: "apb1_clock", scope: !7878, file: !929, line: 274, type: !121)
!7886 = !DILocalVariable(name: "apb2_clock", scope: !7878, file: !929, line: 276, type: !121)
!7887 = !DILocation(line: 0, scope: !7878)
!7888 = !DILocation(line: 273, column: 23, scope: !7878)
!7889 = !DILocation(line: 299, column: 18, scope: !7878)
!7890 = !DILocation(line: 299, column: 2, scope: !7878)
!7891 = !DILocation(line: 374, column: 3, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7878, file: !929, line: 299, column: 23)
!7893 = !DILocation(line: 379, column: 3, scope: !7892)
!7894 = !DILocation(line: 389, column: 3, scope: !7892)
!7895 = !DILocation(line: 0, scope: !7892)
!7896 = !DILocation(line: 396, column: 1, scope: !7878)
!7897 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !929, file: !929, line: 227, type: !999, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7898)
!7898 = !{!7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906}
!7899 = !DILocalVariable(name: "dev", arg: 1, scope: !7897, file: !929, line: 227, type: !958)
!7900 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7897, file: !929, line: 228, type: !969)
!7901 = !DILocalVariable(name: "data", arg: 3, scope: !7897, file: !929, line: 229, type: !102)
!7902 = !DILocalVariable(name: "pclken", scope: !7897, file: !929, line: 233, type: !919)
!7903 = !DILocalVariable(name: "reg", scope: !7897, file: !929, line: 234, type: !2988)
!7904 = !DILocalVariable(name: "reg_val", scope: !7897, file: !929, line: 235, type: !121)
!7905 = !DILocalVariable(name: "dt_val", scope: !7897, file: !929, line: 235, type: !121)
!7906 = !DILocalVariable(name: "err", scope: !7897, file: !929, line: 236, type: !103)
!7907 = !DILocation(line: 0, scope: !7897)
!7908 = !DILocation(line: 241, column: 30, scope: !7897)
!7909 = !DILocation(line: 241, column: 8, scope: !7897)
!7910 = !DILocation(line: 242, column: 10, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7897, file: !929, line: 242, column: 6)
!7912 = !DILocation(line: 242, column: 6, scope: !7897)
!7913 = !DILocation(line: 247, column: 11, scope: !7897)
!7914 = !DILocation(line: 248, column: 6, scope: !7897)
!7915 = !DILocation(line: 247, column: 44, scope: !7897)
!7916 = !DILocation(line: 250, column: 6, scope: !7897)
!7917 = !DILocation(line: 249, column: 52, scope: !7897)
!7918 = !DILocation(line: 249, column: 8, scope: !7897)
!7919 = !DILocation(line: 251, column: 12, scope: !7897)
!7920 = !DILocation(line: 252, column: 10, scope: !7897)
!7921 = !DILocation(line: 253, column: 7, scope: !7897)
!7922 = !DILocation(line: 255, column: 2, scope: !7897)
!7923 = !DILocation(line: 260, column: 1, scope: !7897)
!7924 = distinct !DISubprogram(name: "enabled_clock", scope: !929, file: !929, line: 100, type: !7925, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7927)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!103, !121}
!7927 = !{!7928, !7929}
!7928 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7924, file: !929, line: 100, type: !121)
!7929 = !DILocalVariable(name: "r", scope: !7924, file: !929, line: 102, type: !103)
!7930 = !DILocation(line: 0, scope: !7924)
!7931 = !DILocation(line: 104, column: 2, scope: !7924)
!7932 = !DILocation(line: 180, column: 2, scope: !7924)
!7933 = !DILocation(line: 181, column: 1, scope: !7924)
!7934 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !929, file: !929, line: 641, type: !956, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !7935)
!7935 = !{!7936, !7937, !7938}
!7936 = !DILocalVariable(name: "dev", arg: 1, scope: !7934, file: !929, line: 641, type: !958)
!7937 = !DILocalVariable(name: "old_flash_freq", scope: !7934, file: !929, line: 664, type: !121)
!7938 = !DILocalVariable(name: "new_flash_freq", scope: !7934, file: !929, line: 665, type: !121)
!7939 = !DILocation(line: 0, scope: !7934)
!7940 = !DILocation(line: 646, column: 2, scope: !7934)
!7941 = !DILocation(line: 667, column: 19, scope: !7934)
!7942 = !DILocation(line: 674, column: 21, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7934, file: !929, line: 674, column: 6)
!7944 = !DILocation(line: 674, column: 6, scope: !7934)
!7945 = !DILocation(line: 675, column: 3, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7943, file: !929, line: 674, column: 59)
!7947 = !DILocation(line: 676, column: 2, scope: !7946)
!7948 = !DILocation(line: 680, column: 2, scope: !7934)
!7949 = !DILocation(line: 683, column: 2, scope: !7934)
!7950 = !DILocation(line: 690, column: 3, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7952, file: !929, line: 689, column: 9)
!7952 = distinct !DILexicalBlock(scope: !7934, file: !929, line: 685, column: 6)
!7953 = !DILocation(line: 695, column: 2, scope: !7934)
!7954 = !DILocation(line: 696, column: 2, scope: !7934)
!7955 = !DILocation(line: 696, column: 9, scope: !7934)
!7956 = !DILocation(line: 696, column: 34, scope: !7934)
!7957 = distinct !{!7957, !7954, !7958}
!7958 = !DILocation(line: 697, column: 2, scope: !7934)
!7959 = !DILocation(line: 720, column: 21, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7934, file: !929, line: 720, column: 6)
!7961 = !DILocation(line: 720, column: 6, scope: !7934)
!7962 = !DILocation(line: 721, column: 3, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7960, file: !929, line: 720, column: 60)
!7964 = !DILocation(line: 722, column: 2, scope: !7963)
!7965 = !DILocation(line: 725, column: 18, scope: !7934)
!7966 = !DILocation(line: 728, column: 2, scope: !7934)
!7967 = !DILocation(line: 730, column: 2, scope: !7934)
!7968 = !DILocation(line: 745, column: 2, scope: !7934)
!7969 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7970, file: !7970, line: 995, type: !6677, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!7970 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7971 = !DILocation(line: 997, column: 21, scope: !7969)
!7972 = !DILocation(line: 997, column: 3, scope: !7969)
!7973 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !929, file: !929, line: 507, type: !3154, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!7974 = !DILocation(line: 534, column: 7, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !929, line: 534, column: 7)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !929, line: 532, column: 37)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !929, line: 532, column: 6)
!7978 = !DILocation(line: 534, column: 28, scope: !7975)
!7979 = !DILocation(line: 534, column: 7, scope: !7976)
!7980 = !DILocation(line: 536, column: 4, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7975, file: !929, line: 534, column: 34)
!7982 = !DILocation(line: 537, column: 4, scope: !7981)
!7983 = !DILocation(line: 537, column: 11, scope: !7981)
!7984 = !DILocation(line: 537, column: 32, scope: !7981)
!7985 = distinct !{!7985, !7982, !7986}
!7986 = !DILocation(line: 539, column: 4, scope: !7981)
!7987 = !DILocation(line: 583, column: 3, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !929, line: 577, column: 37)
!7989 = distinct !DILexicalBlock(scope: !7973, file: !929, line: 577, column: 6)
!7990 = !DILocation(line: 584, column: 3, scope: !7988)
!7991 = !DILocation(line: 584, column: 10, scope: !7988)
!7992 = !DILocation(line: 584, column: 31, scope: !7988)
!7993 = distinct !{!7993, !7990, !7994}
!7994 = !DILocation(line: 585, column: 3, scope: !7988)
!7995 = !DILocation(line: 627, column: 1, scope: !7973)
!7996 = distinct !DISubprogram(name: "set_up_plls", scope: !929, file: !929, line: 448, type: !3154, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!7997 = !DILocation(line: 460, column: 6, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7996, file: !929, line: 460, column: 6)
!7999 = !DILocation(line: 460, column: 31, scope: !7998)
!8000 = !DILocation(line: 460, column: 6, scope: !7996)
!8001 = !DILocation(line: 461, column: 3, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7998, file: !929, line: 460, column: 67)
!8003 = !DILocation(line: 462, column: 3, scope: !8002)
!8004 = !DILocation(line: 463, column: 2, scope: !8002)
!8005 = !DILocation(line: 464, column: 2, scope: !7996)
!8006 = !DILocation(line: 496, column: 2, scope: !7996)
!8007 = !DILocation(line: 499, column: 2, scope: !7996)
!8008 = !DILocation(line: 500, column: 2, scope: !7996)
!8009 = !DILocation(line: 500, column: 9, scope: !7996)
!8010 = !DILocation(line: 500, column: 30, scope: !7996)
!8011 = distinct !{!8011, !8008, !8012}
!8012 = !DILocation(line: 502, column: 2, scope: !7996)
!8013 = !DILocation(line: 505, column: 1, scope: !7996)
!8014 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7970, file: !7970, line: 944, type: !5719, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !8015)
!8015 = !{!8016}
!8016 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8014, file: !7970, line: 944, type: !121)
!8017 = !DILocation(line: 0, scope: !8014)
!8018 = !DILocation(line: 946, column: 3, scope: !8014)
!8019 = !DILocation(line: 947, column: 1, scope: !8014)
!8020 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7970, file: !7970, line: 910, type: !5719, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !8021)
!8021 = !{!8022}
!8022 = !DILocalVariable(name: "Source", arg: 1, scope: !8020, file: !7970, line: 910, type: !121)
!8023 = !DILocation(line: 0, scope: !8020)
!8024 = !DILocation(line: 912, column: 3, scope: !8020)
!8025 = !DILocation(line: 913, column: 1, scope: !8020)
!8026 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7970, file: !7970, line: 924, type: !6677, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8027 = !DILocation(line: 926, column: 21, scope: !8026)
!8028 = !DILocation(line: 926, column: 3, scope: !8026)
!8029 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7970, file: !7970, line: 960, type: !5719, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !8030)
!8030 = !{!8031}
!8031 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8029, file: !7970, line: 960, type: !121)
!8032 = !DILocation(line: 0, scope: !8029)
!8033 = !DILocation(line: 962, column: 3, scope: !8029)
!8034 = !DILocation(line: 963, column: 1, scope: !8029)
!8035 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7970, file: !7970, line: 976, type: !5719, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !8036)
!8036 = !{!8037}
!8037 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8035, file: !7970, line: 976, type: !121)
!8038 = !DILocation(line: 0, scope: !8035)
!8039 = !DILocation(line: 978, column: 3, scope: !8035)
!8040 = !DILocation(line: 979, column: 1, scope: !8035)
!8041 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !929, file: !929, line: 409, type: !3154, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8042 = !DILocation(line: 412, column: 6, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8041, file: !929, line: 412, column: 6)
!8044 = !DILocation(line: 412, column: 27, scope: !8043)
!8045 = !DILocation(line: 412, column: 6, scope: !8041)
!8046 = !DILocation(line: 414, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8043, file: !929, line: 412, column: 33)
!8048 = !DILocation(line: 415, column: 3, scope: !8047)
!8049 = !DILocation(line: 415, column: 10, scope: !8047)
!8050 = !DILocation(line: 415, column: 31, scope: !8047)
!8051 = distinct !{!8051, !8048, !8052}
!8052 = !DILocation(line: 417, column: 3, scope: !8047)
!8053 = !DILocation(line: 421, column: 2, scope: !8041)
!8054 = !DILocation(line: 422, column: 2, scope: !8041)
!8055 = !DILocation(line: 422, column: 9, scope: !8041)
!8056 = !DILocation(line: 422, column: 34, scope: !8041)
!8057 = distinct !{!8057, !8054, !8058}
!8058 = !DILocation(line: 423, column: 2, scope: !8041)
!8059 = !DILocation(line: 424, column: 1, scope: !8041)
!8060 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7970, file: !7970, line: 1180, type: !3154, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8061 = !DILocation(line: 1182, column: 3, scope: !8060)
!8062 = !DILocation(line: 1183, column: 1, scope: !8060)
!8063 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7970, file: !7970, line: 1169, type: !3154, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8064 = !DILocation(line: 1171, column: 3, scope: !8063)
!8065 = !DILocation(line: 1172, column: 1, scope: !8063)
!8066 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7970, file: !7970, line: 1190, type: !6677, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8067 = !DILocation(line: 1192, column: 12, scope: !8066)
!8068 = !DILocation(line: 1192, column: 11, scope: !8066)
!8069 = !DILocation(line: 1192, column: 3, scope: !8066)
!8070 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7970, file: !7970, line: 612, type: !6677, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8071 = !DILocation(line: 614, column: 12, scope: !8070)
!8072 = !DILocation(line: 614, column: 11, scope: !8070)
!8073 = !DILocation(line: 614, column: 3, scope: !8070)
!8074 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7970, file: !7970, line: 592, type: !3154, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8075 = !DILocation(line: 594, column: 3, scope: !8074)
!8076 = !DILocation(line: 595, column: 1, scope: !8074)
!8077 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7970, file: !7970, line: 760, type: !3154, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8078 = !DILocation(line: 762, column: 3, scope: !8077)
!8079 = !DILocation(line: 763, column: 1, scope: !8077)
!8080 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7970, file: !7970, line: 780, type: !6677, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !330)
!8081 = !DILocation(line: 782, column: 12, scope: !8080)
!8082 = !DILocation(line: 782, column: 11, scope: !8080)
!8083 = !DILocation(line: 782, column: 3, scope: !8080)
!8084 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8085, file: !8085, line: 48, type: !6677, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !330)
!8085 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8086 = !DILocation(line: 51, column: 3, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !8085, line: 50, column: 37)
!8088 = distinct !DILexicalBlock(scope: !8084, file: !8085, line: 50, column: 6)
!8089 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8085, file: !8085, line: 64, type: !3154, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !330)
!8090 = !DILocation(line: 66, column: 2, scope: !8089)
!8091 = !DILocation(line: 69, column: 1, scope: !8089)
!8092 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7970, file: !7970, line: 1219, type: !8093, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !8095)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{null, !121, !121, !121}
!8095 = !{!8096, !8097, !8098}
!8096 = !DILocalVariable(name: "Source", arg: 1, scope: !8092, file: !7970, line: 1219, type: !121)
!8097 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8092, file: !7970, line: 1219, type: !121)
!8098 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8092, file: !7970, line: 1219, type: !121)
!8099 = !DILocation(line: 0, scope: !8092)
!8100 = !DILocation(line: 1221, column: 3, scope: !8092)
!8101 = !DILocation(line: 1222, column: 1, scope: !8092)
!8102 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8085, file: !8085, line: 75, type: !6677, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !330)
!8103 = !DILocation(line: 77, column: 9, scope: !8102)
!8104 = !DILocation(line: 77, column: 2, scope: !8102)
!8105 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8085, file: !8085, line: 87, type: !3154, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !330)
!8106 = !DILocation(line: 93, column: 2, scope: !8105)
!8107 = !DILocation(line: 95, column: 1, scope: !8105)
!8108 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5718, file: !5718, line: 895, type: !5719, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2928, retainedNodes: !8109)
!8109 = !{!8110, !8111}
!8110 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8108, file: !5718, line: 895, type: !121)
!8111 = !DILocalVariable(name: "tmpreg", scope: !8108, file: !5718, line: 897, type: !120)
!8112 = !DILocation(line: 0, scope: !8108)
!8113 = !DILocation(line: 897, column: 3, scope: !8108)
!8114 = !DILocation(line: 897, column: 17, scope: !8108)
!8115 = !DILocation(line: 898, column: 3, scope: !8108)
!8116 = !DILocation(line: 900, column: 12, scope: !8108)
!8117 = !DILocation(line: 900, column: 10, scope: !8108)
!8118 = !DILocation(line: 901, column: 9, scope: !8108)
!8119 = !DILocation(line: 902, column: 1, scope: !8108)
!8120 = distinct !DISubprogram(name: "uart_console_init", scope: !1007, file: !1007, line: 588, type: !1044, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8121)
!8121 = !{!8122}
!8122 = !DILocalVariable(name: "arg", arg: 1, scope: !8120, file: !1007, line: 588, type: !1023)
!8123 = !DILocation(line: 0, scope: !8120)
!8124 = !DILocation(line: 593, column: 7, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8120, file: !1007, line: 593, column: 6)
!8126 = !DILocation(line: 593, column: 6, scope: !8120)
!8127 = !DILocation(line: 597, column: 2, scope: !8120)
!8128 = !DILocation(line: 599, column: 2, scope: !8120)
!8129 = !DILocation(line: 600, column: 1, scope: !8120)
!8130 = distinct !DISubprogram(name: "device_is_ready", scope: !7518, file: !7518, line: 47, type: !8131, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8133)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!170, !1023}
!8133 = !{!8134}
!8134 = !DILocalVariable(name: "dev", arg: 1, scope: !8130, file: !7518, line: 47, type: !1023)
!8135 = !DILocation(line: 0, scope: !8130)
!8136 = !DILocation(line: 55, column: 2, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !7518, line: 55, column: 2)
!8138 = !{i64 2152409040}
!8139 = !DILocation(line: 56, column: 9, scope: !8130)
!8140 = !DILocation(line: 56, column: 2, scope: !8130)
!8141 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1007, file: !1007, line: 573, type: !3154, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !330)
!8142 = !DILocation(line: 576, column: 2, scope: !8141)
!8143 = !DILocation(line: 579, column: 2, scope: !8141)
!8144 = !DILocation(line: 581, column: 1, scope: !8141)
!8145 = distinct !DISubprogram(name: "console_out", scope: !1007, file: !1007, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8146)
!8146 = !{!8147}
!8147 = !DILocalVariable(name: "c", arg: 1, scope: !8145, file: !1007, line: 77, type: !103)
!8148 = !DILocation(line: 0, scope: !8145)
!8149 = !DILocation(line: 89, column: 11, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8145, file: !1007, line: 89, column: 6)
!8151 = !DILocation(line: 89, column: 6, scope: !8145)
!8152 = !DILocation(line: 90, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !1007, line: 89, column: 17)
!8154 = !DILocation(line: 91, column: 2, scope: !8153)
!8155 = !DILocation(line: 92, column: 34, scope: !8145)
!8156 = !DILocation(line: 92, column: 2, scope: !8145)
!8157 = !DILocation(line: 94, column: 2, scope: !8145)
!8158 = distinct !DISubprogram(name: "uart_poll_out", scope: !8159, file: !8159, line: 95, type: !1040, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8160)
!8159 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getline")
!8160 = !{!8161, !8162}
!8161 = !DILocalVariable(name: "dev", arg: 1, scope: !8158, file: !8159, line: 95, type: !1023)
!8162 = !DILocalVariable(name: "out_char", arg: 2, scope: !8158, file: !8159, line: 95, type: !168)
!8163 = !DILocation(line: 0, scope: !8158)
!8164 = !DILocation(line: 105, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8158, file: !8159, line: 105, column: 2)
!8166 = !{i64 2152492285}
!8167 = !DILocation(line: 106, column: 2, scope: !8158)
!8168 = !DILocation(line: 107, column: 1, scope: !8158)
!8169 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !222, file: !222, line: 574, type: !1040, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8170)
!8170 = !{!8171, !8172, !8173}
!8171 = !DILocalVariable(name: "dev", arg: 1, scope: !8169, file: !222, line: 574, type: !1023)
!8172 = !DILocalVariable(name: "out_char", arg: 2, scope: !8169, file: !222, line: 575, type: !168)
!8173 = !DILocalVariable(name: "api", scope: !8169, file: !222, line: 577, type: !1015)
!8174 = !DILocation(line: 0, scope: !8169)
!8175 = !DILocation(line: 578, column: 40, scope: !8169)
!8176 = !DILocation(line: 580, column: 7, scope: !8169)
!8177 = !DILocation(line: 580, column: 2, scope: !8169)
!8178 = !DILocation(line: 581, column: 1, scope: !8169)
!8179 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !8131, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8180)
!8180 = !{!8181}
!8181 = !DILocalVariable(name: "dev", arg: 1, scope: !8179, file: !154, line: 730, type: !1023)
!8182 = !DILocation(line: 0, scope: !8179)
!8183 = !DILocation(line: 732, column: 9, scope: !8179)
!8184 = !DILocation(line: 732, column: 2, scope: !8179)
!8185 = distinct !DISubprogram(name: "uart_register_input", scope: !1007, file: !1007, line: 549, type: !8186, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8188)
!8186 = !DISubroutineType(types: !8187)
!8187 = !{null, !1104, !1104, !1144}
!8188 = !{!8189, !8190, !8191}
!8189 = !DILocalVariable(name: "avail", arg: 1, scope: !8185, file: !1007, line: 549, type: !1104)
!8190 = !DILocalVariable(name: "lines", arg: 2, scope: !8185, file: !1007, line: 549, type: !1104)
!8191 = !DILocalVariable(name: "completion", arg: 3, scope: !8185, file: !1007, line: 550, type: !1144)
!8192 = !DILocation(line: 0, scope: !8185)
!8193 = !DILocation(line: 552, column: 14, scope: !8185)
!8194 = !DILocation(line: 553, column: 14, scope: !8185)
!8195 = !DILocation(line: 554, column: 16, scope: !8185)
!8196 = !DILocation(line: 556, column: 2, scope: !8185)
!8197 = !DILocation(line: 557, column: 1, scope: !8185)
!8198 = distinct !DISubprogram(name: "console_input_init", scope: !1007, file: !1007, line: 532, type: !3154, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8199)
!8199 = !{!8200}
!8200 = !DILocalVariable(name: "c", scope: !8198, file: !1007, line: 534, type: !167)
!8201 = !DILocation(line: 534, column: 2, scope: !8198)
!8202 = !DILocation(line: 536, column: 2, scope: !8198)
!8203 = !DILocation(line: 537, column: 2, scope: !8198)
!8204 = !DILocation(line: 539, column: 2, scope: !8198)
!8205 = !DILocation(line: 542, column: 9, scope: !8198)
!8206 = !DILocation(line: 542, column: 2, scope: !8198)
!8207 = !DILocation(line: 0, scope: !8198)
!8208 = !DILocation(line: 543, column: 3, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8198, file: !1007, line: 542, column: 46)
!8210 = distinct !{!8210, !8206, !8211}
!8211 = !DILocation(line: 544, column: 2, scope: !8198)
!8212 = !DILocation(line: 546, column: 2, scope: !8198)
!8213 = !DILocation(line: 547, column: 1, scope: !8198)
!8214 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8159, file: !8159, line: 265, type: !1074, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8215)
!8215 = !{!8216}
!8216 = !DILocalVariable(name: "dev", arg: 1, scope: !8214, file: !8159, line: 265, type: !1023)
!8217 = !DILocation(line: 0, scope: !8214)
!8218 = !DILocation(line: 274, column: 2, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8214, file: !8159, line: 274, column: 2)
!8220 = !{i64 2152492761}
!8221 = !DILocation(line: 275, column: 2, scope: !8214)
!8222 = !DILocation(line: 276, column: 1, scope: !8214)
!8223 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8159, file: !8159, line: 217, type: !1074, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8224)
!8224 = !{!8225}
!8225 = !DILocalVariable(name: "dev", arg: 1, scope: !8223, file: !8159, line: 217, type: !1023)
!8226 = !DILocation(line: 0, scope: !8223)
!8227 = !DILocation(line: 226, column: 2, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8223, file: !8159, line: 226, column: 2)
!8229 = !{i64 2152492625}
!8230 = !DILocation(line: 227, column: 2, scope: !8223)
!8231 = !DILocation(line: 228, column: 1, scope: !8223)
!8232 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !222, file: !222, line: 1190, type: !8233, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8235)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{null, !1023, !1090}
!8235 = !{!8236, !8237}
!8236 = !DILocalVariable(name: "dev", arg: 1, scope: !8232, file: !222, line: 1190, type: !1023)
!8237 = !DILocalVariable(name: "cb", arg: 2, scope: !8232, file: !222, line: 1191, type: !1090)
!8238 = !DILocation(line: 0, scope: !8232)
!8239 = !DILocation(line: 1193, column: 2, scope: !8232)
!8240 = !DILocation(line: 1194, column: 1, scope: !8232)
!8241 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !222, file: !222, line: 1024, type: !1044, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8242)
!8242 = !{!8243, !8244}
!8243 = !DILocalVariable(name: "dev", arg: 1, scope: !8241, file: !222, line: 1024, type: !1023)
!8244 = !DILocalVariable(name: "api", scope: !8241, file: !222, line: 1027, type: !1015)
!8245 = !DILocation(line: 0, scope: !8241)
!8246 = !DILocation(line: 1028, column: 40, scope: !8241)
!8247 = !DILocation(line: 1030, column: 11, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8241, file: !222, line: 1030, column: 6)
!8249 = !DILocation(line: 1030, column: 24, scope: !8248)
!8250 = !DILocation(line: 1030, column: 6, scope: !8241)
!8251 = !DILocation(line: 1033, column: 9, scope: !8241)
!8252 = !DILocation(line: 1033, column: 2, scope: !8241)
!8253 = !DILocation(line: 1038, column: 1, scope: !8241)
!8254 = distinct !DISubprogram(name: "uart_fifo_read", scope: !222, file: !222, line: 785, type: !1070, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8255)
!8255 = !{!8256, !8257, !8258, !8259}
!8256 = !DILocalVariable(name: "dev", arg: 1, scope: !8254, file: !222, line: 785, type: !1023)
!8257 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8254, file: !222, line: 785, type: !280)
!8258 = !DILocalVariable(name: "size", arg: 3, scope: !8254, file: !222, line: 786, type: !281)
!8259 = !DILocalVariable(name: "api", scope: !8254, file: !222, line: 789, type: !1015)
!8260 = !DILocation(line: 0, scope: !8254)
!8261 = !DILocation(line: 790, column: 40, scope: !8254)
!8262 = !DILocation(line: 792, column: 11, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8254, file: !222, line: 792, column: 6)
!8264 = !DILocation(line: 792, column: 21, scope: !8263)
!8265 = !DILocation(line: 792, column: 6, scope: !8254)
!8266 = !DILocation(line: 796, column: 9, scope: !8254)
!8267 = !DILocation(line: 796, column: 2, scope: !8254)
!8268 = !DILocation(line: 803, column: 1, scope: !8254)
!8269 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8159, file: !8159, line: 241, type: !1074, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8270)
!8270 = !{!8271}
!8271 = !DILocalVariable(name: "dev", arg: 1, scope: !8269, file: !8159, line: 241, type: !1023)
!8272 = !DILocation(line: 0, scope: !8269)
!8273 = !DILocation(line: 250, column: 2, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8269, file: !8159, line: 250, column: 2)
!8275 = !{i64 2152492693}
!8276 = !DILocation(line: 251, column: 2, scope: !8269)
!8277 = !DILocation(line: 252, column: 1, scope: !8269)
!8278 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !222, file: !222, line: 934, type: !1074, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8279)
!8279 = !{!8280, !8281}
!8280 = !DILocalVariable(name: "dev", arg: 1, scope: !8278, file: !222, line: 934, type: !1023)
!8281 = !DILocalVariable(name: "api", scope: !8278, file: !222, line: 937, type: !1015)
!8282 = !DILocation(line: 0, scope: !8278)
!8283 = !DILocation(line: 938, column: 40, scope: !8278)
!8284 = !DILocation(line: 940, column: 11, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8278, file: !222, line: 940, column: 6)
!8286 = !DILocation(line: 940, column: 25, scope: !8285)
!8287 = !DILocation(line: 940, column: 6, scope: !8278)
!8288 = !DILocation(line: 941, column: 3, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8285, file: !222, line: 940, column: 34)
!8290 = !DILocation(line: 942, column: 2, scope: !8289)
!8291 = !DILocation(line: 946, column: 1, scope: !8278)
!8292 = !DILocation(line: 0, scope: !1152)
!8293 = !DILocation(line: 433, column: 9, scope: !1152)
!8294 = !DILocation(line: 433, column: 43, scope: !1152)
!8295 = !DILocation(line: 434, column: 9, scope: !1152)
!8296 = !DILocation(line: 433, column: 2, scope: !1152)
!8297 = !DILocation(line: 436, column: 3, scope: !1157)
!8298 = !DILocation(line: 439, column: 8, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 439, column: 7)
!8300 = !DILocation(line: 439, column: 7, scope: !1157)
!8301 = distinct !{!8301, !8296, !8302}
!8302 = !DILocation(line: 529, column: 2, scope: !1152)
!8303 = !DILocation(line: 0, scope: !1157)
!8304 = !DILocation(line: 445, column: 8, scope: !1157)
!8305 = !DILocation(line: 446, column: 10, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 446, column: 7)
!8307 = !DILocation(line: 446, column: 7, scope: !1157)
!8308 = !DILocation(line: 460, column: 8, scope: !1162)
!8309 = !DILocation(line: 460, column: 7, scope: !1157)
!8310 = !DILocation(line: 461, column: 10, scope: !1160)
!8311 = !DILocation(line: 0, scope: !1160)
!8312 = !DILocation(line: 461, column: 8, scope: !1161)
!8313 = !DILocation(line: 462, column: 9, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !1161, file: !1007, line: 462, column: 8)
!8315 = !DILocation(line: 462, column: 8, scope: !1161)
!8316 = !DILocation(line: 477, column: 7, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 477, column: 7)
!8318 = !DILocation(line: 477, column: 7, scope: !1157)
!8319 = !DILocation(line: 478, column: 16, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8317, file: !1007, line: 477, column: 46)
!8321 = !DILocation(line: 478, column: 22, scope: !8320)
!8322 = !DILocation(line: 478, column: 4, scope: !8320)
!8323 = !DILocation(line: 479, column: 4, scope: !8320)
!8324 = !DILocation(line: 483, column: 7, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 483, column: 7)
!8326 = !DILocation(line: 483, column: 7, scope: !1157)
!8327 = !DILocation(line: 484, column: 13, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !1007, line: 484, column: 8)
!8329 = distinct !DILexicalBlock(scope: !8325, file: !1007, line: 483, column: 55)
!8330 = !DILocation(line: 484, column: 8, scope: !8329)
!8331 = !DILocation(line: 485, column: 5, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8328, file: !1007, line: 484, column: 26)
!8333 = !DILocation(line: 486, column: 5, scope: !8332)
!8334 = !DILocation(line: 487, column: 4, scope: !8332)
!8335 = !DILocation(line: 493, column: 16, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 493, column: 7)
!8337 = !DILocation(line: 493, column: 8, scope: !8336)
!8338 = !DILocation(line: 493, column: 7, scope: !1157)
!8339 = !DILocation(line: 494, column: 4, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8336, file: !1007, line: 493, column: 23)
!8341 = !DILocation(line: 497, column: 9, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !1007, line: 497, column: 9)
!8343 = distinct !DILexicalBlock(scope: !8340, file: !1007, line: 494, column: 18)
!8344 = !DILocation(line: 497, column: 13, scope: !8342)
!8345 = !DILocation(line: 497, column: 9, scope: !8343)
!8346 = !DILocation(line: 498, column: 16, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8342, file: !1007, line: 497, column: 18)
!8348 = !DILocation(line: 498, column: 26, scope: !8347)
!8349 = !DILocation(line: 498, column: 34, scope: !8347)
!8350 = !DILocation(line: 498, column: 6, scope: !8347)
!8351 = !DILocation(line: 499, column: 5, scope: !8347)
!8352 = !DILocation(line: 502, column: 5, scope: !8343)
!8353 = !DILocation(line: 503, column: 5, scope: !8343)
!8354 = !DILocation(line: 505, column: 5, scope: !8343)
!8355 = !DILocation(line: 505, column: 15, scope: !8343)
!8356 = !DILocation(line: 505, column: 21, scope: !8343)
!8357 = !DILocation(line: 505, column: 19, scope: !8343)
!8358 = !DILocation(line: 505, column: 26, scope: !8343)
!8359 = !DILocation(line: 506, column: 5, scope: !8343)
!8360 = !DILocation(line: 507, column: 5, scope: !8343)
!8361 = !DILocation(line: 508, column: 9, scope: !8343)
!8362 = !DILocation(line: 509, column: 9, scope: !8343)
!8363 = !DILocation(line: 510, column: 5, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8343, file: !1007, line: 510, column: 5)
!8365 = !DILocation(line: 511, column: 9, scope: !8343)
!8366 = !DILocation(line: 512, column: 5, scope: !8343)
!8367 = !DILocation(line: 514, column: 9, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8343, file: !1007, line: 514, column: 9)
!8369 = !DILocation(line: 514, column: 23, scope: !8368)
!8370 = !DILocation(line: 515, column: 27, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !1007, line: 514, column: 32)
!8372 = !DILocation(line: 515, column: 38, scope: !8371)
!8373 = !DILocation(line: 515, column: 13, scope: !8371)
!8374 = !DILocation(line: 515, column: 10, scope: !8371)
!8375 = !DILocation(line: 516, column: 5, scope: !8371)
!8376 = !DILocation(line: 526, column: 7, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !1157, file: !1007, line: 526, column: 7)
!8378 = !DILocation(line: 526, column: 13, scope: !8377)
!8379 = !DILocation(line: 526, column: 11, scope: !8377)
!8380 = !DILocation(line: 526, column: 17, scope: !8377)
!8381 = !DILocation(line: 526, column: 7, scope: !1157)
!8382 = !DILocation(line: 527, column: 17, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8377, file: !1007, line: 526, column: 42)
!8384 = !DILocation(line: 527, column: 30, scope: !8383)
!8385 = !DILocation(line: 527, column: 4, scope: !8383)
!8386 = !DILocation(line: 528, column: 3, scope: !8383)
!8387 = !DILocation(line: 530, column: 1, scope: !1152)
!8388 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !222, file: !222, line: 1163, type: !1088, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8389)
!8389 = !{!8390, !8391, !8392, !8393}
!8390 = !DILocalVariable(name: "dev", arg: 1, scope: !8388, file: !222, line: 1163, type: !1023)
!8391 = !DILocalVariable(name: "cb", arg: 2, scope: !8388, file: !222, line: 1164, type: !1090)
!8392 = !DILocalVariable(name: "user_data", arg: 3, scope: !8388, file: !222, line: 1165, type: !102)
!8393 = !DILocalVariable(name: "api", scope: !8388, file: !222, line: 1168, type: !1015)
!8394 = !DILocation(line: 0, scope: !8388)
!8395 = !DILocation(line: 1169, column: 40, scope: !8388)
!8396 = !DILocation(line: 1171, column: 11, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8388, file: !222, line: 1171, column: 6)
!8398 = !DILocation(line: 1171, column: 20, scope: !8397)
!8399 = !DILocation(line: 1171, column: 29, scope: !8397)
!8400 = !DILocation(line: 1171, column: 46, scope: !8397)
!8401 = !DILocation(line: 1171, column: 6, scope: !8388)
!8402 = !DILocation(line: 1172, column: 3, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8397, file: !222, line: 1171, column: 56)
!8404 = !DILocation(line: 1173, column: 2, scope: !8403)
!8405 = !DILocation(line: 1179, column: 1, scope: !8388)
!8406 = distinct !DISubprogram(name: "uart_irq_update", scope: !8159, file: !8159, line: 360, type: !1044, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8407)
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !8159, line: 360, type: !1023)
!8409 = !DILocation(line: 0, scope: !8406)
!8410 = !DILocation(line: 368, column: 2, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8406, file: !8159, line: 368, column: 2)
!8412 = !{i64 2152493033}
!8413 = !DILocation(line: 369, column: 9, scope: !8406)
!8414 = !DILocation(line: 369, column: 2, scope: !8406)
!8415 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8159, file: !8159, line: 337, type: !1044, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8416)
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "dev", arg: 1, scope: !8415, file: !8159, line: 337, type: !1023)
!8418 = !DILocation(line: 0, scope: !8415)
!8419 = !DILocation(line: 345, column: 2, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8415, file: !8159, line: 345, column: 2)
!8421 = !{i64 2152492965}
!8422 = !DILocation(line: 346, column: 9, scope: !8415)
!8423 = !DILocation(line: 346, column: 2, scope: !8415)
!8424 = distinct !DISubprogram(name: "read_uart", scope: !1007, file: !1007, line: 127, type: !8425, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8427)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{!103, !1023, !280, !32}
!8427 = !{!8428, !8429, !8430, !8431}
!8428 = !DILocalVariable(name: "uart", arg: 1, scope: !8424, file: !1007, line: 127, type: !1023)
!8429 = !DILocalVariable(name: "buf", arg: 2, scope: !8424, file: !1007, line: 127, type: !280)
!8430 = !DILocalVariable(name: "size", arg: 3, scope: !8424, file: !1007, line: 128, type: !32)
!8431 = !DILocalVariable(name: "rx", scope: !8424, file: !1007, line: 130, type: !103)
!8432 = !DILocation(line: 0, scope: !8424)
!8433 = !DILocation(line: 132, column: 7, scope: !8424)
!8434 = !DILocation(line: 133, column: 9, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8424, file: !1007, line: 133, column: 6)
!8436 = !DILocation(line: 133, column: 6, scope: !8424)
!8437 = !DILocation(line: 135, column: 3, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8435, file: !1007, line: 133, column: 14)
!8439 = !DILocation(line: 137, column: 3, scope: !8438)
!8440 = !DILocation(line: 141, column: 1, scope: !8424)
!8441 = distinct !DISubprogram(name: "k_queue_get", scope: !3590, file: !3590, line: 649, type: !8442, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8449)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!102, !8444, !8445}
!8444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!8445 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !8446)
!8446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !8447)
!8447 = !{!8448}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8446, file: !214, line: 66, baseType: !213, size: 64)
!8449 = !{!8450, !8451}
!8450 = !DILocalVariable(name: "queue", arg: 1, scope: !8441, file: !3590, line: 649, type: !8444)
!8451 = !DILocalVariable(name: "timeout", arg: 2, scope: !8441, file: !3590, line: 649, type: !8445)
!8452 = !DILocation(line: 0, scope: !8441)
!8453 = !DILocation(line: 658, column: 2, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8441, file: !3590, line: 658, column: 2)
!8455 = !{i64 2152225768}
!8456 = !DILocation(line: 659, column: 9, scope: !8441)
!8457 = !DILocation(line: 659, column: 2, scope: !8441)
!8458 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1172, file: !1172, line: 131, type: !8459, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8463)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!170, !8461, !103}
!8461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8462, size: 32)
!8462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!8463 = !{!8464, !8465, !8466}
!8464 = !DILocalVariable(name: "target", arg: 1, scope: !8458, file: !1172, line: 131, type: !8461)
!8465 = !DILocalVariable(name: "bit", arg: 2, scope: !8458, file: !1172, line: 131, type: !103)
!8466 = !DILocalVariable(name: "val", scope: !8458, file: !1172, line: 133, type: !8467)
!8467 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1172, line: 23, baseType: !1171)
!8468 = !DILocation(line: 0, scope: !8458)
!8469 = !DILocation(line: 133, column: 21, scope: !8458)
!8470 = !DILocation(line: 135, column: 27, scope: !8458)
!8471 = !DILocation(line: 135, column: 50, scope: !8458)
!8472 = !DILocation(line: 135, column: 2, scope: !8458)
!8473 = distinct !DISubprogram(name: "handle_ansi", scope: !1007, file: !1007, line: 232, type: !8474, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8476)
!8474 = !DISubroutineType(types: !8475)
!8475 = !{null, !167, !357}
!8476 = !{!8477, !8478, !8479}
!8477 = !DILocalVariable(name: "byte", arg: 1, scope: !8473, file: !1007, line: 232, type: !167)
!8478 = !DILocalVariable(name: "line", arg: 2, scope: !8473, file: !1007, line: 232, type: !357)
!8479 = !DILabel(scope: !8473, name: "ansi_cmd", file: !1007, line: 268)
!8480 = !DILocation(line: 0, scope: !8473)
!8481 = !DILocation(line: 234, column: 6, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8473, file: !1007, line: 234, column: 6)
!8483 = !DILocation(line: 234, column: 6, scope: !8473)
!8484 = !DILocation(line: 235, column: 16, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !1007, line: 235, column: 7)
!8486 = distinct !DILexicalBlock(scope: !8482, file: !1007, line: 234, column: 61)
!8487 = !DILocation(line: 235, column: 8, scope: !8485)
!8488 = !DILocation(line: 235, column: 7, scope: !8486)
!8489 = !DILocation(line: 236, column: 13, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8485, file: !1007, line: 235, column: 23)
!8491 = !DILocation(line: 237, column: 4, scope: !8490)
!8492 = !DILocation(line: 240, column: 3, scope: !8486)
!8493 = !DILocation(line: 241, column: 19, scope: !8486)
!8494 = !DILocation(line: 241, column: 12, scope: !8486)
!8495 = !DILocation(line: 242, column: 14, scope: !8486)
!8496 = !DILocation(line: 243, column: 3, scope: !8486)
!8497 = !DILocation(line: 246, column: 6, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8473, file: !1007, line: 246, column: 6)
!8499 = !DILocation(line: 246, column: 6, scope: !8473)
!8500 = !DILocation(line: 247, column: 15, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !1007, line: 247, column: 7)
!8502 = distinct !DILexicalBlock(scope: !8498, file: !1007, line: 246, column: 49)
!8503 = !DILocation(line: 247, column: 7, scope: !8501)
!8504 = !DILocation(line: 247, column: 7, scope: !8502)
!8505 = !DILocation(line: 248, column: 8, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !1007, line: 248, column: 8)
!8507 = distinct !DILexicalBlock(scope: !8501, file: !1007, line: 247, column: 22)
!8508 = !DILocation(line: 248, column: 8, scope: !8507)
!8509 = !DILocation(line: 249, column: 16, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8506, file: !1007, line: 248, column: 53)
!8511 = !DILocation(line: 250, column: 24, scope: !8510)
!8512 = !DILocation(line: 250, column: 16, scope: !8510)
!8513 = !DILocation(line: 251, column: 4, scope: !8510)
!8514 = !DILocation(line: 252, column: 14, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8506, file: !1007, line: 251, column: 11)
!8516 = !DILocation(line: 253, column: 22, scope: !8515)
!8517 = !DILocation(line: 253, column: 14, scope: !8515)
!8518 = !DILocation(line: 259, column: 12, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8502, file: !1007, line: 259, column: 7)
!8520 = !DILocation(line: 259, column: 19, scope: !8519)
!8521 = !DILocation(line: 260, column: 8, scope: !8519)
!8522 = !DILocation(line: 259, column: 7, scope: !8502)
!8523 = !DILocation(line: 264, column: 3, scope: !8502)
!8524 = !DILocation(line: 265, column: 3, scope: !8502)
!8525 = !DILocation(line: 266, column: 2, scope: !8502)
!8526 = !DILocation(line: 268, column: 1, scope: !8473)
!8527 = !DILocation(line: 269, column: 2, scope: !8473)
!8528 = !DILocation(line: 271, column: 7, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !1007, line: 271, column: 7)
!8530 = distinct !DILexicalBlock(scope: !8473, file: !1007, line: 269, column: 16)
!8531 = !DILocation(line: 271, column: 18, scope: !8529)
!8532 = !DILocation(line: 271, column: 16, scope: !8529)
!8533 = !DILocation(line: 271, column: 7, scope: !8530)
!8534 = !DILocation(line: 275, column: 7, scope: !8530)
!8535 = !DILocation(line: 276, column: 7, scope: !8530)
!8536 = !DILocation(line: 277, column: 3, scope: !8530)
!8537 = !DILocation(line: 278, column: 3, scope: !8530)
!8538 = !DILocation(line: 280, column: 7, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8530, file: !1007, line: 280, column: 7)
!8540 = !DILocation(line: 280, column: 18, scope: !8539)
!8541 = !DILocation(line: 280, column: 16, scope: !8539)
!8542 = !DILocation(line: 280, column: 7, scope: !8530)
!8543 = !DILocation(line: 284, column: 7, scope: !8530)
!8544 = !DILocation(line: 285, column: 7, scope: !8530)
!8545 = !DILocation(line: 286, column: 3, scope: !8530)
!8546 = !DILocation(line: 287, column: 3, scope: !8530)
!8547 = !DILocation(line: 289, column: 8, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8530, file: !1007, line: 289, column: 7)
!8549 = !DILocation(line: 289, column: 7, scope: !8530)
!8550 = !DILocation(line: 293, column: 19, scope: !8530)
!8551 = !DILocation(line: 293, column: 3, scope: !8530)
!8552 = !DILocation(line: 294, column: 10, scope: !8530)
!8553 = !DILocation(line: 294, column: 7, scope: !8530)
!8554 = !DILocation(line: 295, column: 7, scope: !8530)
!8555 = !DILocation(line: 296, column: 3, scope: !8530)
!8556 = !DILocation(line: 298, column: 8, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8530, file: !1007, line: 298, column: 7)
!8558 = !DILocation(line: 298, column: 7, scope: !8530)
!8559 = !DILocation(line: 302, column: 18, scope: !8530)
!8560 = !DILocation(line: 302, column: 3, scope: !8530)
!8561 = !DILocation(line: 303, column: 10, scope: !8530)
!8562 = !DILocation(line: 303, column: 7, scope: !8530)
!8563 = !DILocation(line: 304, column: 7, scope: !8530)
!8564 = !DILocation(line: 305, column: 3, scope: !8530)
!8565 = !DILocation(line: 307, column: 8, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8530, file: !1007, line: 307, column: 7)
!8567 = !DILocation(line: 307, column: 7, scope: !8530)
!8568 = !DILocation(line: 311, column: 3, scope: !8530)
!8569 = !DILocation(line: 312, column: 18, scope: !8530)
!8570 = !DILocation(line: 312, column: 13, scope: !8530)
!8571 = !DILocation(line: 312, column: 24, scope: !8530)
!8572 = !DILocation(line: 312, column: 3, scope: !8530)
!8573 = !DILocation(line: 313, column: 3, scope: !8530)
!8574 = !DILocation(line: 318, column: 2, scope: !8473)
!8575 = !DILocation(line: 319, column: 1, scope: !8473)
!8576 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1172, file: !1172, line: 152, type: !8577, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8580)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{!170, !8579, !103}
!8579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!8580 = !{!8581, !8582, !8583, !8584}
!8581 = !DILocalVariable(name: "target", arg: 1, scope: !8576, file: !1172, line: 152, type: !8579)
!8582 = !DILocalVariable(name: "bit", arg: 2, scope: !8576, file: !1172, line: 152, type: !103)
!8583 = !DILocalVariable(name: "mask", scope: !8576, file: !1172, line: 154, type: !8467)
!8584 = !DILocalVariable(name: "old", scope: !8576, file: !1172, line: 155, type: !8467)
!8585 = !DILocation(line: 0, scope: !8576)
!8586 = !DILocation(line: 154, column: 22, scope: !8576)
!8587 = !DILocation(line: 157, column: 45, scope: !8576)
!8588 = !DILocation(line: 157, column: 8, scope: !8576)
!8589 = !DILocation(line: 159, column: 14, scope: !8576)
!8590 = !DILocation(line: 159, column: 22, scope: !8576)
!8591 = !DILocation(line: 159, column: 2, scope: !8576)
!8592 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1172, file: !1172, line: 217, type: !8593, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{null, !8579, !103}
!8595 = !{!8596, !8597, !8598}
!8596 = !DILocalVariable(name: "target", arg: 1, scope: !8592, file: !1172, line: 217, type: !8579)
!8597 = !DILocalVariable(name: "bit", arg: 2, scope: !8592, file: !1172, line: 217, type: !103)
!8598 = !DILocalVariable(name: "mask", scope: !8592, file: !1172, line: 219, type: !8467)
!8599 = !DILocation(line: 0, scope: !8592)
!8600 = !DILocation(line: 219, column: 22, scope: !8592)
!8601 = !DILocation(line: 221, column: 8, scope: !8592)
!8602 = !DILocation(line: 222, column: 1, scope: !8592)
!8603 = distinct !DISubprogram(name: "isprint", scope: !4907, file: !4907, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8604)
!8604 = !{!8605}
!8605 = !DILocalVariable(name: "c", arg: 1, scope: !8603, file: !4907, line: 37, type: !103)
!8606 = !DILocation(line: 0, scope: !8603)
!8607 = !DILocation(line: 39, column: 38, scope: !8603)
!8608 = !DILocation(line: 39, column: 2, scope: !8603)
!8609 = distinct !DISubprogram(name: "del_char", scope: !1007, file: !1007, line: 191, type: !8610, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8612)
!8610 = !DISubroutineType(types: !8611)
!8611 = !{null, !357, !167}
!8612 = !{!8613, !8614}
!8613 = !DILocalVariable(name: "pos", arg: 1, scope: !8609, file: !1007, line: 191, type: !357)
!8614 = !DILocalVariable(name: "end", arg: 2, scope: !8609, file: !1007, line: 191, type: !167)
!8615 = !DILocation(line: 0, scope: !8609)
!8616 = !DILocation(line: 193, column: 2, scope: !8609)
!8617 = !DILocation(line: 195, column: 10, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8609, file: !1007, line: 195, column: 6)
!8619 = !DILocation(line: 195, column: 6, scope: !8609)
!8620 = !DILocation(line: 196, column: 3, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8618, file: !1007, line: 195, column: 17)
!8622 = !DILocation(line: 197, column: 3, scope: !8621)
!8623 = !DILocation(line: 198, column: 3, scope: !8621)
!8624 = !DILocation(line: 201, column: 2, scope: !8609)
!8625 = !DILocation(line: 203, column: 2, scope: !8609)
!8626 = !DILocation(line: 203, column: 12, scope: !8609)
!8627 = !DILocation(line: 204, column: 16, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8609, file: !1007, line: 203, column: 20)
!8629 = !DILocation(line: 204, column: 10, scope: !8628)
!8630 = !DILocation(line: 204, column: 8, scope: !8628)
!8631 = !DILocation(line: 205, column: 3, scope: !8628)
!8632 = !DILocation(line: 203, column: 15, scope: !8609)
!8633 = distinct !{!8633, !8625, !8634}
!8634 = !DILocation(line: 206, column: 2, scope: !8609)
!8635 = !DILocation(line: 208, column: 2, scope: !8609)
!8636 = !DILocation(line: 211, column: 2, scope: !8609)
!8637 = !DILocation(line: 212, column: 1, scope: !8609)
!8638 = distinct !DISubprogram(name: "insert_char", scope: !1007, file: !1007, line: 163, type: !8639, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8641)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{null, !357, !159, !167}
!8641 = !{!8642, !8643, !8644, !8645}
!8642 = !DILocalVariable(name: "pos", arg: 1, scope: !8638, file: !1007, line: 163, type: !357)
!8643 = !DILocalVariable(name: "c", arg: 2, scope: !8638, file: !1007, line: 163, type: !159)
!8644 = !DILocalVariable(name: "end", arg: 3, scope: !8638, file: !1007, line: 163, type: !167)
!8645 = !DILocalVariable(name: "tmp", scope: !8638, file: !1007, line: 165, type: !159)
!8646 = !DILocation(line: 0, scope: !8638)
!8647 = !DILocation(line: 168, column: 2, scope: !8638)
!8648 = !DILocation(line: 170, column: 10, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8638, file: !1007, line: 170, column: 6)
!8650 = !DILocation(line: 170, column: 6, scope: !8638)
!8651 = !DILocation(line: 171, column: 8, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !1007, line: 170, column: 17)
!8653 = !DILocation(line: 172, column: 3, scope: !8652)
!8654 = !DILocation(line: 175, column: 8, scope: !8638)
!8655 = !DILocation(line: 176, column: 11, scope: !8638)
!8656 = !DILocation(line: 178, column: 2, scope: !8638)
!8657 = !DILocation(line: 180, column: 2, scope: !8638)
!8658 = !DILocation(line: 180, column: 12, scope: !8638)
!8659 = !DILocation(line: 181, column: 3, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8638, file: !1007, line: 180, column: 20)
!8661 = !DILocation(line: 182, column: 7, scope: !8660)
!8662 = !DILocation(line: 183, column: 12, scope: !8660)
!8663 = !DILocation(line: 180, column: 15, scope: !8638)
!8664 = distinct !{!8664, !8657, !8665}
!8665 = !DILocation(line: 185, column: 2, scope: !8638)
!8666 = !DILocation(line: 188, column: 2, scope: !8638)
!8667 = !DILocation(line: 189, column: 1, scope: !8638)
!8668 = distinct !DISubprogram(name: "cursor_save", scope: !1007, file: !1007, line: 153, type: !3154, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !330)
!8669 = !DILocation(line: 155, column: 2, scope: !8668)
!8670 = !DILocation(line: 156, column: 1, scope: !8668)
!8671 = distinct !DISubprogram(name: "cursor_restore", scope: !1007, file: !1007, line: 158, type: !3154, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !330)
!8672 = !DILocation(line: 160, column: 2, scope: !8671)
!8673 = !DILocation(line: 161, column: 1, scope: !8671)
!8674 = distinct !DISubprogram(name: "atomic_or", scope: !8675, file: !8675, line: 279, type: !8676, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8678)
!8675 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8676 = !DISubroutineType(types: !8677)
!8677 = !{!8467, !8579, !8467}
!8678 = !{!8679, !8680}
!8679 = !DILocalVariable(name: "target", arg: 1, scope: !8674, file: !8675, line: 279, type: !8579)
!8680 = !DILocalVariable(name: "value", arg: 2, scope: !8674, file: !8675, line: 279, type: !8467)
!8681 = !DILocation(line: 0, scope: !8674)
!8682 = !DILocation(line: 281, column: 9, scope: !8674)
!8683 = !DILocation(line: 281, column: 2, scope: !8674)
!8684 = distinct !DISubprogram(name: "atomic_and", scope: !8675, file: !8675, line: 319, type: !8676, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8685)
!8685 = !{!8686, !8687}
!8686 = !DILocalVariable(name: "target", arg: 1, scope: !8684, file: !8675, line: 319, type: !8579)
!8687 = !DILocalVariable(name: "value", arg: 2, scope: !8684, file: !8675, line: 319, type: !8467)
!8688 = !DILocation(line: 0, scope: !8684)
!8689 = !DILocation(line: 321, column: 9, scope: !8684)
!8690 = !DILocation(line: 321, column: 2, scope: !8684)
!8691 = distinct !DISubprogram(name: "isdigit", scope: !4907, file: !4907, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8692)
!8692 = !{!8693}
!8693 = !DILocalVariable(name: "a", arg: 1, scope: !8691, file: !4907, line: 43, type: !103)
!8694 = !DILocation(line: 0, scope: !8691)
!8695 = !DILocation(line: 45, column: 29, scope: !8691)
!8696 = !DILocation(line: 45, column: 45, scope: !8691)
!8697 = !DILocation(line: 45, column: 2, scope: !8691)
!8698 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1172, file: !1172, line: 176, type: !8577, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8699)
!8699 = !{!8700, !8701, !8702, !8703}
!8700 = !DILocalVariable(name: "target", arg: 1, scope: !8698, file: !1172, line: 176, type: !8579)
!8701 = !DILocalVariable(name: "bit", arg: 2, scope: !8698, file: !1172, line: 176, type: !103)
!8702 = !DILocalVariable(name: "mask", scope: !8698, file: !1172, line: 178, type: !8467)
!8703 = !DILocalVariable(name: "old", scope: !8698, file: !1172, line: 179, type: !8467)
!8704 = !DILocation(line: 0, scope: !8698)
!8705 = !DILocation(line: 181, column: 8, scope: !8698)
!8706 = !DILocation(line: 183, column: 14, scope: !8698)
!8707 = !DILocation(line: 183, column: 22, scope: !8698)
!8708 = !DILocation(line: 183, column: 2, scope: !8698)
!8709 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1172, file: !1172, line: 198, type: !8593, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8710)
!8710 = !{!8711, !8712, !8713}
!8711 = !DILocalVariable(name: "target", arg: 1, scope: !8709, file: !1172, line: 198, type: !8579)
!8712 = !DILocalVariable(name: "bit", arg: 2, scope: !8709, file: !1172, line: 198, type: !103)
!8713 = !DILocalVariable(name: "mask", scope: !8709, file: !1172, line: 200, type: !8467)
!8714 = !DILocation(line: 0, scope: !8709)
!8715 = !DILocation(line: 200, column: 22, scope: !8709)
!8716 = !DILocation(line: 202, column: 45, scope: !8709)
!8717 = !DILocation(line: 202, column: 8, scope: !8709)
!8718 = !DILocation(line: 203, column: 1, scope: !8709)
!8719 = distinct !DISubprogram(name: "cursor_backward", scope: !1007, file: !1007, line: 148, type: !5706, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8720)
!8720 = !{!8721}
!8721 = !DILocalVariable(name: "count", arg: 1, scope: !8719, file: !1007, line: 148, type: !32)
!8722 = !DILocation(line: 0, scope: !8719)
!8723 = !DILocation(line: 150, column: 2, scope: !8719)
!8724 = !DILocation(line: 151, column: 1, scope: !8719)
!8725 = distinct !DISubprogram(name: "cursor_forward", scope: !1007, file: !1007, line: 143, type: !5706, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8726)
!8726 = !{!8727}
!8727 = !DILocalVariable(name: "count", arg: 1, scope: !8725, file: !1007, line: 143, type: !32)
!8728 = !DILocation(line: 0, scope: !8725)
!8729 = !DILocation(line: 145, column: 2, scope: !8725)
!8730 = !DILocation(line: 146, column: 1, scope: !8725)
!8731 = distinct !DISubprogram(name: "atomic_get", scope: !8675, file: !8675, line: 159, type: !8732, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8734)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!8467, !8461}
!8734 = !{!8735}
!8735 = !DILocalVariable(name: "target", arg: 1, scope: !8731, file: !8675, line: 159, type: !8461)
!8736 = !DILocation(line: 0, scope: !8731)
!8737 = !DILocation(line: 161, column: 9, scope: !8731)
!8738 = !DILocation(line: 161, column: 2, scope: !8731)
!8739 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !222, file: !222, line: 1093, type: !1044, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8740)
!8740 = !{!8741, !8742}
!8741 = !DILocalVariable(name: "dev", arg: 1, scope: !8739, file: !222, line: 1093, type: !1023)
!8742 = !DILocalVariable(name: "api", scope: !8739, file: !222, line: 1096, type: !1015)
!8743 = !DILocation(line: 0, scope: !8739)
!8744 = !DILocation(line: 1097, column: 40, scope: !8739)
!8745 = !DILocation(line: 1099, column: 11, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8739, file: !222, line: 1099, column: 6)
!8747 = !DILocation(line: 1099, column: 26, scope: !8746)
!8748 = !DILocation(line: 1099, column: 6, scope: !8739)
!8749 = !DILocation(line: 1102, column: 9, scope: !8739)
!8750 = !DILocation(line: 1102, column: 2, scope: !8739)
!8751 = !DILocation(line: 1107, column: 1, scope: !8739)
!8752 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !222, file: !222, line: 1136, type: !1044, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8753)
!8753 = !{!8754, !8755}
!8754 = !DILocalVariable(name: "dev", arg: 1, scope: !8752, file: !222, line: 1136, type: !1023)
!8755 = !DILocalVariable(name: "api", scope: !8752, file: !222, line: 1139, type: !1015)
!8756 = !DILocation(line: 0, scope: !8752)
!8757 = !DILocation(line: 1140, column: 40, scope: !8752)
!8758 = !DILocation(line: 1142, column: 11, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8752, file: !222, line: 1142, column: 6)
!8760 = !DILocation(line: 1142, column: 22, scope: !8759)
!8761 = !DILocation(line: 1142, column: 6, scope: !8752)
!8762 = !DILocation(line: 1145, column: 9, scope: !8752)
!8763 = !DILocation(line: 1145, column: 2, scope: !8752)
!8764 = !DILocation(line: 1150, column: 1, scope: !8752)
!8765 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !222, file: !222, line: 878, type: !1074, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8766)
!8766 = !{!8767, !8768}
!8767 = !DILocalVariable(name: "dev", arg: 1, scope: !8765, file: !222, line: 878, type: !1023)
!8768 = !DILocalVariable(name: "api", scope: !8765, file: !222, line: 881, type: !1015)
!8769 = !DILocation(line: 0, scope: !8765)
!8770 = !DILocation(line: 882, column: 40, scope: !8765)
!8771 = !DILocation(line: 884, column: 11, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8765, file: !222, line: 884, column: 6)
!8773 = !DILocation(line: 884, column: 26, scope: !8772)
!8774 = !DILocation(line: 884, column: 6, scope: !8765)
!8775 = !DILocation(line: 885, column: 3, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8772, file: !222, line: 884, column: 35)
!8777 = !DILocation(line: 886, column: 2, scope: !8776)
!8778 = !DILocation(line: 890, column: 1, scope: !8765)
!8779 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !222, file: !222, line: 955, type: !1074, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1003, retainedNodes: !8780)
!8780 = !{!8781, !8782}
!8781 = !DILocalVariable(name: "dev", arg: 1, scope: !8779, file: !222, line: 955, type: !1023)
!8782 = !DILocalVariable(name: "api", scope: !8779, file: !222, line: 958, type: !1015)
!8783 = !DILocation(line: 0, scope: !8779)
!8784 = !DILocation(line: 959, column: 40, scope: !8779)
!8785 = !DILocation(line: 961, column: 11, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8779, file: !222, line: 961, column: 6)
!8787 = !DILocation(line: 961, column: 26, scope: !8786)
!8788 = !DILocation(line: 961, column: 6, scope: !8779)
!8789 = !DILocation(line: 962, column: 3, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8786, file: !222, line: 961, column: 35)
!8791 = !DILocation(line: 963, column: 2, scope: !8790)
!8792 = !DILocation(line: 967, column: 1, scope: !8779)
!8793 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1333, file: !1333, line: 523, type: !1199, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8794)
!8794 = !{!8795, !8796, !8797, !8798, !8799}
!8795 = !DILocalVariable(name: "dev", arg: 1, scope: !8793, file: !1333, line: 523, type: !1201)
!8796 = !DILocalVariable(name: "pin", arg: 2, scope: !8793, file: !1333, line: 524, type: !632)
!8797 = !DILocalVariable(name: "flags", arg: 3, scope: !8793, file: !1333, line: 524, type: !633)
!8798 = !DILocalVariable(name: "err", scope: !8793, file: !1333, line: 526, type: !103)
!8799 = !DILocalVariable(name: "pincfg", scope: !8793, file: !1333, line: 527, type: !103)
!8800 = !DILocation(line: 0, scope: !8793)
!8801 = !DILocation(line: 527, column: 2, scope: !8793)
!8802 = !DILocation(line: 532, column: 8, scope: !8793)
!8803 = !DILocation(line: 533, column: 10, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8793, file: !1333, line: 533, column: 6)
!8805 = !DILocation(line: 533, column: 6, scope: !8793)
!8806 = !DILocation(line: 543, column: 13, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8793, file: !1333, line: 543, column: 6)
!8808 = !DILocation(line: 543, column: 28, scope: !8807)
!8809 = !DILocation(line: 543, column: 6, scope: !8793)
!8810 = !DILocation(line: 544, column: 14, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !1333, line: 544, column: 7)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !1333, line: 543, column: 34)
!8813 = !DILocation(line: 544, column: 39, scope: !8811)
!8814 = !DILocation(line: 544, column: 7, scope: !8812)
!8815 = !DILocation(line: 545, column: 38, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8811, file: !1333, line: 544, column: 45)
!8817 = !DILocation(line: 545, column: 4, scope: !8816)
!8818 = !DILocation(line: 546, column: 3, scope: !8816)
!8819 = !DILocation(line: 546, column: 21, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8811, file: !1333, line: 546, column: 14)
!8821 = !DILocation(line: 546, column: 45, scope: !8820)
!8822 = !DILocation(line: 546, column: 14, scope: !8811)
!8823 = !DILocation(line: 547, column: 40, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8820, file: !1333, line: 546, column: 51)
!8825 = !DILocation(line: 547, column: 4, scope: !8824)
!8826 = !DILocation(line: 548, column: 3, scope: !8824)
!8827 = !DILocation(line: 551, column: 32, scope: !8793)
!8828 = !DILocation(line: 551, column: 37, scope: !8793)
!8829 = !DILocation(line: 551, column: 2, scope: !8793)
!8830 = !DILocation(line: 554, column: 6, scope: !8793)
!8831 = !DILocation(line: 562, column: 1, scope: !8793)
!8832 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1333, file: !1333, line: 410, type: !8833, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8835)
!8833 = !DISubroutineType(types: !8834)
!8834 = !{!103, !1201, !925}
!8835 = !{!8836, !8837, !8838, !8840}
!8836 = !DILocalVariable(name: "dev", arg: 1, scope: !8832, file: !1333, line: 410, type: !1201)
!8837 = !DILocalVariable(name: "value", arg: 2, scope: !8832, file: !1333, line: 410, type: !925)
!8838 = !DILocalVariable(name: "cfg", scope: !8832, file: !1333, line: 412, type: !8839)
!8839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!8840 = !DILocalVariable(name: "gpio", scope: !8832, file: !1333, line: 413, type: !1268)
!8841 = !DILocation(line: 0, scope: !8832)
!8842 = !DILocation(line: 412, column: 45, scope: !8832)
!8843 = !DILocation(line: 413, column: 44, scope: !8832)
!8844 = !DILocation(line: 415, column: 11, scope: !8832)
!8845 = !DILocation(line: 415, column: 9, scope: !8832)
!8846 = !DILocation(line: 417, column: 2, scope: !8832)
!8847 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1333, file: !1333, line: 420, type: !1222, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8848)
!8848 = !{!8849, !8850, !8851, !8852, !8853, !8854}
!8849 = !DILocalVariable(name: "dev", arg: 1, scope: !8847, file: !1333, line: 420, type: !1201)
!8850 = !DILocalVariable(name: "mask", arg: 2, scope: !8847, file: !1333, line: 421, type: !644)
!8851 = !DILocalVariable(name: "value", arg: 3, scope: !8847, file: !1333, line: 422, type: !639)
!8852 = !DILocalVariable(name: "cfg", scope: !8847, file: !1333, line: 424, type: !8839)
!8853 = !DILocalVariable(name: "gpio", scope: !8847, file: !1333, line: 425, type: !1268)
!8854 = !DILocalVariable(name: "port_value", scope: !8847, file: !1333, line: 426, type: !121)
!8855 = !DILocation(line: 0, scope: !8847)
!8856 = !DILocation(line: 424, column: 45, scope: !8847)
!8857 = !DILocation(line: 425, column: 44, scope: !8847)
!8858 = !DILocation(line: 430, column: 15, scope: !8847)
!8859 = !DILocation(line: 431, column: 46, scope: !8847)
!8860 = !DILocation(line: 431, column: 44, scope: !8847)
!8861 = !DILocation(line: 431, column: 61, scope: !8847)
!8862 = !DILocation(line: 431, column: 53, scope: !8847)
!8863 = !DILocation(line: 431, column: 2, scope: !8847)
!8864 = !DILocation(line: 435, column: 2, scope: !8847)
!8865 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1333, file: !1333, line: 438, type: !1226, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8866)
!8866 = !{!8867, !8868, !8869, !8870}
!8867 = !DILocalVariable(name: "dev", arg: 1, scope: !8865, file: !1333, line: 438, type: !1201)
!8868 = !DILocalVariable(name: "pins", arg: 2, scope: !8865, file: !1333, line: 439, type: !644)
!8869 = !DILocalVariable(name: "cfg", scope: !8865, file: !1333, line: 441, type: !8839)
!8870 = !DILocalVariable(name: "gpio", scope: !8865, file: !1333, line: 442, type: !1268)
!8871 = !DILocation(line: 0, scope: !8865)
!8872 = !DILocation(line: 441, column: 45, scope: !8865)
!8873 = !DILocation(line: 442, column: 44, scope: !8865)
!8874 = !DILocation(line: 448, column: 2, scope: !8865)
!8875 = !DILocation(line: 450, column: 2, scope: !8865)
!8876 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1333, file: !1333, line: 453, type: !1226, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8877)
!8877 = !{!8878, !8879, !8880, !8881}
!8878 = !DILocalVariable(name: "dev", arg: 1, scope: !8876, file: !1333, line: 453, type: !1201)
!8879 = !DILocalVariable(name: "pins", arg: 2, scope: !8876, file: !1333, line: 454, type: !644)
!8880 = !DILocalVariable(name: "cfg", scope: !8876, file: !1333, line: 456, type: !8839)
!8881 = !DILocalVariable(name: "gpio", scope: !8876, file: !1333, line: 457, type: !1268)
!8882 = !DILocation(line: 0, scope: !8876)
!8883 = !DILocation(line: 456, column: 45, scope: !8876)
!8884 = !DILocation(line: 457, column: 44, scope: !8876)
!8885 = !DILocation(line: 467, column: 2, scope: !8876)
!8886 = !DILocation(line: 470, column: 2, scope: !8876)
!8887 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1333, file: !1333, line: 473, type: !1226, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8888)
!8888 = !{!8889, !8890, !8891, !8892}
!8889 = !DILocalVariable(name: "dev", arg: 1, scope: !8887, file: !1333, line: 473, type: !1201)
!8890 = !DILocalVariable(name: "pins", arg: 2, scope: !8887, file: !1333, line: 474, type: !644)
!8891 = !DILocalVariable(name: "cfg", scope: !8887, file: !1333, line: 476, type: !8839)
!8892 = !DILocalVariable(name: "gpio", scope: !8887, file: !1333, line: 477, type: !1268)
!8893 = !DILocation(line: 0, scope: !8887)
!8894 = !DILocation(line: 476, column: 45, scope: !8887)
!8895 = !DILocation(line: 477, column: 44, scope: !8887)
!8896 = !DILocation(line: 484, column: 2, scope: !8887)
!8897 = !DILocation(line: 487, column: 2, scope: !8887)
!8898 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1333, file: !1333, line: 594, type: !1232, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8899)
!8899 = !{!8900, !8901, !8902, !8903, !8904, !8905, !8907, !8908, !8909}
!8900 = !DILocalVariable(name: "dev", arg: 1, scope: !8898, file: !1333, line: 594, type: !1201)
!8901 = !DILocalVariable(name: "pin", arg: 2, scope: !8898, file: !1333, line: 595, type: !632)
!8902 = !DILocalVariable(name: "mode", arg: 3, scope: !8898, file: !1333, line: 596, type: !597)
!8903 = !DILocalVariable(name: "trig", arg: 4, scope: !8898, file: !1333, line: 597, type: !603)
!8904 = !DILocalVariable(name: "cfg", scope: !8898, file: !1333, line: 599, type: !8839)
!8905 = !DILocalVariable(name: "data", scope: !8898, file: !1333, line: 600, type: !8906)
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!8907 = !DILocalVariable(name: "edge", scope: !8898, file: !1333, line: 601, type: !103)
!8908 = !DILocalVariable(name: "err", scope: !8898, file: !1333, line: 602, type: !103)
!8909 = !DILabel(scope: !8898, name: "exit", file: !1333, line: 643)
!8910 = !DILocation(line: 0, scope: !8898)
!8911 = !DILocation(line: 599, column: 45, scope: !8898)
!8912 = !DILocation(line: 604, column: 6, scope: !8898)
!8913 = !DILocation(line: 605, column: 34, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !1333, line: 605, column: 7)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !1333, line: 604, column: 38)
!8916 = distinct !DILexicalBlock(scope: !8898, file: !1333, line: 604, column: 6)
!8917 = !DILocation(line: 605, column: 7, scope: !8914)
!8918 = !DILocation(line: 605, column: 47, scope: !8914)
!8919 = !DILocation(line: 605, column: 39, scope: !8914)
!8920 = !DILocation(line: 605, column: 7, scope: !8915)
!8921 = !DILocation(line: 606, column: 4, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8914, file: !1333, line: 605, column: 53)
!8923 = !DILocation(line: 607, column: 4, scope: !8922)
!8924 = !DILocation(line: 608, column: 4, scope: !8922)
!8925 = !DILocation(line: 609, column: 3, scope: !8922)
!8926 = !DILocation(line: 600, column: 38, scope: !8898)
!8927 = !DILocation(line: 620, column: 30, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8898, file: !1333, line: 620, column: 6)
!8929 = !DILocation(line: 620, column: 6, scope: !8928)
!8930 = !DILocation(line: 620, column: 57, scope: !8928)
!8931 = !DILocation(line: 620, column: 6, scope: !8898)
!8932 = !DILocation(line: 625, column: 29, scope: !8898)
!8933 = !DILocation(line: 625, column: 2, scope: !8898)
!8934 = !DILocation(line: 627, column: 2, scope: !8898)
!8935 = !DILocation(line: 630, column: 3, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8898, file: !1333, line: 627, column: 16)
!8937 = !DILocation(line: 633, column: 3, scope: !8936)
!8938 = !DILocation(line: 636, column: 3, scope: !8936)
!8939 = !DILocation(line: 639, column: 2, scope: !8898)
!8940 = !DILocation(line: 641, column: 2, scope: !8898)
!8941 = !DILocation(line: 643, column: 1, scope: !8898)
!8942 = !DILocation(line: 644, column: 2, scope: !8898)
!8943 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1333, file: !1333, line: 647, type: !1236, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8944)
!8944 = !{!8945, !8946, !8947, !8948}
!8945 = !DILocalVariable(name: "dev", arg: 1, scope: !8943, file: !1333, line: 647, type: !1201)
!8946 = !DILocalVariable(name: "callback", arg: 2, scope: !8943, file: !1333, line: 648, type: !1238)
!8947 = !DILocalVariable(name: "set", arg: 3, scope: !8943, file: !1333, line: 649, type: !170)
!8948 = !DILocalVariable(name: "data", scope: !8943, file: !1333, line: 651, type: !8906)
!8949 = !DILocation(line: 0, scope: !8943)
!8950 = !DILocation(line: 651, column: 38, scope: !8943)
!8951 = !DILocation(line: 653, column: 37, scope: !8943)
!8952 = !DILocation(line: 653, column: 9, scope: !8943)
!8953 = !DILocation(line: 653, column: 2, scope: !8943)
!8954 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8955, file: !8955, line: 38, type: !8956, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8959)
!8955 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8956 = !DISubroutineType(types: !8957)
!8957 = !{!103, !8958, !1238, !170}
!8958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!8959 = !{!8960, !8961, !8962}
!8960 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8954, file: !8955, line: 38, type: !8958)
!8961 = !DILocalVariable(name: "callback", arg: 2, scope: !8954, file: !8955, line: 39, type: !1238)
!8962 = !DILocalVariable(name: "set", arg: 3, scope: !8954, file: !8955, line: 40, type: !170)
!8963 = !DILocation(line: 0, scope: !8954)
!8964 = !DILocation(line: 45, column: 7, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8954, file: !8955, line: 45, column: 6)
!8966 = !DILocation(line: 45, column: 6, scope: !8954)
!8967 = !DILocation(line: 46, column: 56, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !8955, line: 46, column: 7)
!8969 = distinct !DILexicalBlock(scope: !8965, file: !8955, line: 45, column: 38)
!8970 = !DILocation(line: 46, column: 8, scope: !8968)
!8971 = !DILocation(line: 46, column: 7, scope: !8969)
!8972 = !DILocation(line: 51, column: 13, scope: !8965)
!8973 = !DILocation(line: 56, column: 43, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !8955, line: 55, column: 11)
!8975 = distinct !DILexicalBlock(scope: !8954, file: !8955, line: 55, column: 6)
!8976 = !DILocation(line: 56, column: 3, scope: !8974)
!8977 = !DILocation(line: 57, column: 2, scope: !8974)
!8978 = !DILocation(line: 60, column: 1, scope: !8954)
!8979 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !664, file: !664, line: 261, type: !8980, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!170, !8958}
!8982 = !{!8983}
!8983 = !DILocalVariable(name: "list", arg: 1, scope: !8979, file: !664, line: 261, type: !8958)
!8984 = !DILocation(line: 0, scope: !8979)
!8985 = !DILocation(line: 261, column: 1, scope: !8979)
!8986 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !664, file: !664, line: 417, type: !8987, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !8989)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!170, !8958, !1403}
!8989 = !{!8990, !8991, !8992, !8993}
!8990 = !DILocalVariable(name: "list", arg: 1, scope: !8986, file: !664, line: 417, type: !8958)
!8991 = !DILocalVariable(name: "node", arg: 2, scope: !8986, file: !664, line: 417, type: !1403)
!8992 = !DILocalVariable(name: "prev", scope: !8986, file: !664, line: 417, type: !1403)
!8993 = !DILocalVariable(name: "test", scope: !8986, file: !664, line: 417, type: !1403)
!8994 = !DILocation(line: 0, scope: !8986)
!8995 = !DILocation(line: 417, column: 1, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8986, file: !664, line: 417, column: 1)
!8997 = !DILocation(line: 417, column: 1, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8996, file: !664, line: 417, column: 1)
!8999 = !DILocation(line: 417, column: 1, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !664, line: 417, column: 1)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !664, line: 417, column: 1)
!9002 = !DILocation(line: 417, column: 1, scope: !9001)
!9003 = distinct !{!9003, !8995, !8995}
!9004 = !DILocation(line: 417, column: 1, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9000, file: !664, line: 417, column: 1)
!9006 = !DILocation(line: 417, column: 1, scope: !8986)
!9007 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !664, file: !664, line: 298, type: !9008, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9010)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{null, !8958, !1403}
!9010 = !{!9011, !9012}
!9011 = !DILocalVariable(name: "list", arg: 1, scope: !9007, file: !664, line: 298, type: !8958)
!9012 = !DILocalVariable(name: "node", arg: 2, scope: !9007, file: !664, line: 298, type: !1403)
!9013 = !DILocation(line: 0, scope: !9007)
!9014 = !DILocation(line: 298, column: 1, scope: !9007)
!9015 = !DILocation(line: 298, column: 1, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9007, file: !664, line: 298, column: 1)
!9017 = !DILocation(line: 298, column: 1, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9016, file: !664, line: 298, column: 1)
!9019 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !664, file: !664, line: 231, type: !9020, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9022)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!1403, !8958}
!9022 = !{!9023}
!9023 = !DILocalVariable(name: "list", arg: 1, scope: !9019, file: !664, line: 231, type: !8958)
!9024 = !DILocation(line: 0, scope: !9019)
!9025 = !DILocation(line: 233, column: 15, scope: !9019)
!9026 = !DILocation(line: 233, column: 2, scope: !9019)
!9027 = distinct !DISubprogram(name: "z_snode_next_set", scope: !664, file: !664, line: 209, type: !9028, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9030)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{null, !1403, !1403}
!9030 = !{!9031, !9032}
!9031 = !DILocalVariable(name: "parent", arg: 1, scope: !9027, file: !664, line: 209, type: !1403)
!9032 = !DILocalVariable(name: "child", arg: 2, scope: !9027, file: !664, line: 209, type: !1403)
!9033 = !DILocation(line: 0, scope: !9027)
!9034 = !DILocation(line: 211, column: 10, scope: !9027)
!9035 = !DILocation(line: 211, column: 15, scope: !9027)
!9036 = !DILocation(line: 212, column: 1, scope: !9027)
!9037 = distinct !DISubprogram(name: "z_slist_head_set", scope: !664, file: !664, line: 214, type: !9008, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9038)
!9038 = !{!9039, !9040}
!9039 = !DILocalVariable(name: "list", arg: 1, scope: !9037, file: !664, line: 214, type: !8958)
!9040 = !DILocalVariable(name: "node", arg: 2, scope: !9037, file: !664, line: 214, type: !1403)
!9041 = !DILocation(line: 0, scope: !9037)
!9042 = !DILocation(line: 216, column: 8, scope: !9037)
!9043 = !DILocation(line: 216, column: 13, scope: !9037)
!9044 = !DILocation(line: 217, column: 1, scope: !9037)
!9045 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !664, file: !664, line: 243, type: !9020, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9046)
!9046 = !{!9047}
!9047 = !DILocalVariable(name: "list", arg: 1, scope: !9045, file: !664, line: 243, type: !8958)
!9048 = !DILocation(line: 0, scope: !9045)
!9049 = !DILocation(line: 245, column: 15, scope: !9045)
!9050 = !DILocation(line: 245, column: 2, scope: !9045)
!9051 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !664, file: !664, line: 219, type: !9008, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9052)
!9052 = !{!9053, !9054}
!9053 = !DILocalVariable(name: "list", arg: 1, scope: !9051, file: !664, line: 219, type: !8958)
!9054 = !DILocalVariable(name: "node", arg: 2, scope: !9051, file: !664, line: 219, type: !1403)
!9055 = !DILocation(line: 0, scope: !9051)
!9056 = !DILocation(line: 221, column: 8, scope: !9051)
!9057 = !DILocation(line: 221, column: 13, scope: !9051)
!9058 = !DILocation(line: 222, column: 1, scope: !9051)
!9059 = distinct !DISubprogram(name: "sys_slist_remove", scope: !664, file: !664, line: 401, type: !9060, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9062)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !8958, !1403, !1403}
!9062 = !{!9063, !9064, !9065}
!9063 = !DILocalVariable(name: "list", arg: 1, scope: !9059, file: !664, line: 401, type: !8958)
!9064 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9059, file: !664, line: 401, type: !1403)
!9065 = !DILocalVariable(name: "node", arg: 3, scope: !9059, file: !664, line: 401, type: !1403)
!9066 = !DILocation(line: 0, scope: !9059)
!9067 = !DILocation(line: 401, column: 1, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9059, file: !664, line: 401, column: 1)
!9069 = !DILocation(line: 0, scope: !9068)
!9070 = !DILocation(line: 401, column: 1, scope: !9059)
!9071 = !DILocation(line: 401, column: 1, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9068, file: !664, line: 401, column: 1)
!9073 = !DILocation(line: 401, column: 1, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9072, file: !664, line: 401, column: 1)
!9075 = !DILocation(line: 401, column: 1, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9074, file: !664, line: 401, column: 1)
!9077 = !DILocation(line: 401, column: 1, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9068, file: !664, line: 401, column: 1)
!9079 = !DILocation(line: 401, column: 1, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9078, file: !664, line: 401, column: 1)
!9081 = !DILocation(line: 401, column: 1, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9080, file: !664, line: 401, column: 1)
!9083 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !664, file: !664, line: 285, type: !9084, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9086)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{!1403, !1403}
!9086 = !{!9087}
!9087 = !DILocalVariable(name: "node", arg: 1, scope: !9083, file: !664, line: 285, type: !1403)
!9088 = !DILocation(line: 0, scope: !9083)
!9089 = !DILocation(line: 285, column: 1, scope: !9083)
!9090 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !664, file: !664, line: 274, type: !9084, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9091)
!9091 = !{!9092}
!9092 = !DILocalVariable(name: "node", arg: 1, scope: !9090, file: !664, line: 274, type: !1403)
!9093 = !DILocation(line: 0, scope: !9090)
!9094 = !DILocation(line: 274, column: 1, scope: !9090)
!9095 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !664, file: !664, line: 204, type: !9084, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9096)
!9096 = !{!9097}
!9097 = !DILocalVariable(name: "node", arg: 1, scope: !9095, file: !664, line: 204, type: !1403)
!9098 = !DILocation(line: 0, scope: !9095)
!9099 = !DILocation(line: 206, column: 15, scope: !9095)
!9100 = !DILocation(line: 206, column: 2, scope: !9095)
!9101 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1333, file: !1333, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9102)
!9102 = !{!9103, !9104, !9105}
!9103 = !DILocalVariable(name: "pin", arg: 1, scope: !9101, file: !1333, line: 342, type: !103)
!9104 = !DILocalVariable(name: "line", scope: !9101, file: !1333, line: 344, type: !121)
!9105 = !DILocalVariable(name: "port", scope: !9101, file: !1333, line: 345, type: !103)
!9106 = !DILocation(line: 0, scope: !9101)
!9107 = !DILocation(line: 344, column: 18, scope: !9101)
!9108 = !{i32 983040, i32 0}
!9109 = !DILocation(line: 356, column: 9, scope: !9101)
!9110 = !DILocation(line: 370, column: 2, scope: !9101)
!9111 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1333, file: !1333, line: 37, type: !817, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9112)
!9112 = !{!9113, !9114, !9115}
!9113 = !DILocalVariable(name: "line", arg: 1, scope: !9111, file: !1333, line: 37, type: !103)
!9114 = !DILocalVariable(name: "arg", arg: 2, scope: !9111, file: !1333, line: 37, type: !102)
!9115 = !DILocalVariable(name: "data", scope: !9111, file: !1333, line: 39, type: !8906)
!9116 = !DILocation(line: 0, scope: !9111)
!9117 = !DILocation(line: 41, column: 29, scope: !9111)
!9118 = !DILocation(line: 41, column: 39, scope: !9111)
!9119 = !DILocation(line: 41, column: 44, scope: !9111)
!9120 = !DILocation(line: 41, column: 2, scope: !9111)
!9121 = !DILocation(line: 42, column: 1, scope: !9111)
!9122 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1333, file: !1333, line: 376, type: !9123, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9125)
!9123 = !DISubroutineType(types: !9124)
!9124 = !{!103, !103, !103}
!9125 = !{!9126, !9127, !9128, !9130, !9131}
!9126 = !DILocalVariable(name: "port", arg: 1, scope: !9122, file: !1333, line: 376, type: !103)
!9127 = !DILocalVariable(name: "pin", arg: 2, scope: !9122, file: !1333, line: 376, type: !103)
!9128 = !DILocalVariable(name: "clk", scope: !9122, file: !1333, line: 386, type: !9129)
!9129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1201)
!9130 = !DILocalVariable(name: "pclken", scope: !9122, file: !1333, line: 387, type: !1438)
!9131 = !DILocalVariable(name: "ret", scope: !9122, file: !1333, line: 396, type: !103)
!9132 = !DILocation(line: 0, scope: !9122)
!9133 = !DILocation(line: 387, column: 2, scope: !9122)
!9134 = !DILocation(line: 387, column: 22, scope: !9122)
!9135 = !DILocation(line: 399, column: 8, scope: !9122)
!9136 = !DILocation(line: 400, column: 10, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9122, file: !1333, line: 400, column: 6)
!9138 = !DILocation(line: 400, column: 6, scope: !9122)
!9139 = !DILocation(line: 405, column: 2, scope: !9122)
!9140 = !DILocation(line: 407, column: 2, scope: !9122)
!9141 = !DILocation(line: 408, column: 1, scope: !9122)
!9142 = distinct !DISubprogram(name: "clock_control_on", scope: !894, file: !894, line: 123, type: !1298, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9143)
!9143 = !{!9144, !9145, !9146}
!9144 = !DILocalVariable(name: "dev", arg: 1, scope: !9142, file: !894, line: 123, type: !1201)
!9145 = !DILocalVariable(name: "sys", arg: 2, scope: !9142, file: !894, line: 124, type: !969)
!9146 = !DILocalVariable(name: "api", scope: !9142, file: !894, line: 126, type: !1291)
!9147 = !DILocation(line: 0, scope: !9142)
!9148 = !DILocation(line: 127, column: 49, scope: !9142)
!9149 = !DILocation(line: 129, column: 14, scope: !9142)
!9150 = !DILocation(line: 129, column: 9, scope: !9142)
!9151 = !DILocation(line: 129, column: 2, scope: !9142)
!9152 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1333, file: !1333, line: 311, type: !7759, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9153)
!9153 = !{!9154, !9155, !9156}
!9154 = !DILocalVariable(name: "port", arg: 1, scope: !9152, file: !1333, line: 311, type: !103)
!9155 = !DILocalVariable(name: "pin", arg: 2, scope: !9152, file: !1333, line: 311, type: !103)
!9156 = !DILocalVariable(name: "line", scope: !9152, file: !1333, line: 313, type: !121)
!9157 = !DILocation(line: 0, scope: !9152)
!9158 = !DILocation(line: 313, column: 18, scope: !9152)
!9159 = !DILocation(line: 337, column: 2, scope: !9152)
!9160 = !DILocation(line: 340, column: 1, scope: !9152)
!9161 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1333, file: !1333, line: 295, type: !9162, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9164)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!121, !103}
!9164 = !{!9165}
!9165 = !DILocalVariable(name: "pin", arg: 1, scope: !9161, file: !1333, line: 295, type: !103)
!9166 = !DILocation(line: 0, scope: !9161)
!9167 = !DILocation(line: 307, column: 46, scope: !9161)
!9168 = !DILocation(line: 307, column: 27, scope: !9161)
!9169 = !DILocation(line: 307, column: 32, scope: !9161)
!9170 = !DILocation(line: 307, column: 14, scope: !9161)
!9171 = !DILocation(line: 307, column: 39, scope: !9161)
!9172 = !DILocation(line: 307, column: 2, scope: !9161)
!9173 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !9174, file: !9174, line: 621, type: !9175, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9177)
!9174 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9175 = !DISubroutineType(types: !9176)
!9176 = !{null, !121, !121}
!9177 = !{!9178, !9179}
!9178 = !DILocalVariable(name: "Port", arg: 1, scope: !9173, file: !9174, line: 621, type: !121)
!9179 = !DILocalVariable(name: "Line", arg: 2, scope: !9173, file: !9174, line: 621, type: !121)
!9180 = !DILocation(line: 0, scope: !9173)
!9181 = !DILocation(line: 623, column: 3, scope: !9173)
!9182 = !DILocalVariable(name: "value", arg: 1, scope: !9183, file: !5927, line: 373, type: !121)
!9183 = distinct !DISubprogram(name: "__RBIT", scope: !5927, file: !5927, line: 373, type: !6896, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9184)
!9184 = !{!9182, !9185}
!9185 = !DILocalVariable(name: "result", scope: !9183, file: !5927, line: 375, type: !121)
!9186 = !DILocation(line: 0, scope: !9183, inlinedAt: !9187)
!9187 = distinct !DILocation(line: 623, column: 3, scope: !9173)
!9188 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9187)
!9189 = !{i64 2448587}
!9190 = !DILocalVariable(name: "value", arg: 1, scope: !9191, file: !5927, line: 403, type: !121)
!9191 = distinct !DISubprogram(name: "__CLZ", scope: !5927, file: !5927, line: 403, type: !9192, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9194)
!9192 = !DISubroutineType(types: !9193)
!9193 = !{!167, !121}
!9194 = !{!9190}
!9195 = !DILocation(line: 0, scope: !9191, inlinedAt: !9196)
!9196 = distinct !DILocation(line: 623, column: 3, scope: !9173)
!9197 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9196)
!9198 = !DILocation(line: 624, column: 1, scope: !9173)
!9199 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8955, file: !8955, line: 69, type: !9200, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9202)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{null, !8958, !1201, !121}
!9202 = !{!9203, !9204, !9205, !9206, !9207}
!9203 = !DILocalVariable(name: "list", arg: 1, scope: !9199, file: !8955, line: 69, type: !8958)
!9204 = !DILocalVariable(name: "port", arg: 2, scope: !9199, file: !8955, line: 70, type: !1201)
!9205 = !DILocalVariable(name: "pins", arg: 3, scope: !9199, file: !8955, line: 71, type: !121)
!9206 = !DILocalVariable(name: "cb", scope: !9199, file: !8955, line: 73, type: !1238)
!9207 = !DILocalVariable(name: "tmp", scope: !9199, file: !8955, line: 73, type: !1238)
!9208 = !DILocation(line: 0, scope: !9199)
!9209 = !DILocation(line: 75, column: 2, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9199, file: !8955, line: 75, column: 2)
!9211 = !DILocation(line: 0, scope: !9210)
!9212 = !DILocation(line: 76, column: 11, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !8955, line: 76, column: 7)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !8955, line: 75, column: 57)
!9215 = distinct !DILexicalBlock(scope: !9210, file: !8955, line: 75, column: 2)
!9216 = !DILocation(line: 76, column: 20, scope: !9213)
!9217 = !DILocation(line: 76, column: 7, scope: !9214)
!9218 = !DILocation(line: 78, column: 8, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9213, file: !8955, line: 76, column: 28)
!9220 = !DILocation(line: 78, column: 4, scope: !9219)
!9221 = !DILocation(line: 79, column: 3, scope: !9219)
!9222 = !DILocation(line: 75, column: 2, scope: !9215)
!9223 = !DILocation(line: 81, column: 1, scope: !9199)
!9224 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !9174, file: !9174, line: 721, type: !6896, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9225)
!9225 = !{!9226}
!9226 = !DILocalVariable(name: "Line", arg: 1, scope: !9224, file: !9174, line: 721, type: !121)
!9227 = !DILocation(line: 0, scope: !9224)
!9228 = !DILocation(line: 723, column: 21, scope: !9224)
!9229 = !DILocation(line: 0, scope: !9183, inlinedAt: !9230)
!9230 = distinct !DILocation(line: 723, column: 76, scope: !9224)
!9231 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9230)
!9232 = !DILocation(line: 0, scope: !9191, inlinedAt: !9233)
!9233 = distinct !DILocation(line: 723, column: 76, scope: !9224)
!9234 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9233)
!9235 = !DILocation(line: 723, column: 73, scope: !9224)
!9236 = !DILocation(line: 723, column: 3, scope: !9224)
!9237 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9238, file: !9238, line: 913, type: !9239, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9241)
!9238 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9239 = !DISubroutineType(types: !9240)
!9240 = !{null, !1268, !121}
!9241 = !{!9242, !9243}
!9242 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9237, file: !9238, line: 913, type: !1268)
!9243 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9237, file: !9238, line: 913, type: !121)
!9244 = !DILocation(line: 0, scope: !9237)
!9245 = !DILocation(line: 918, column: 3, scope: !9237)
!9246 = !DILocation(line: 920, column: 1, scope: !9237)
!9247 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9238, file: !9238, line: 825, type: !9248, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9250)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!121, !1268}
!9250 = !{!9251}
!9251 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9247, file: !9238, line: 825, type: !1268)
!9252 = !DILocation(line: 0, scope: !9247)
!9253 = !DILocation(line: 827, column: 21, scope: !9247)
!9254 = !DILocation(line: 827, column: 3, scope: !9247)
!9255 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9238, file: !9238, line: 814, type: !9239, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9256)
!9256 = !{!9257, !9258}
!9257 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9255, file: !9238, line: 814, type: !1268)
!9258 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9255, file: !9238, line: 814, type: !121)
!9259 = !DILocation(line: 0, scope: !9255)
!9260 = !DILocation(line: 816, column: 3, scope: !9255)
!9261 = !DILocation(line: 817, column: 1, scope: !9255)
!9262 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9238, file: !9238, line: 773, type: !9248, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9263)
!9263 = !{!9264}
!9264 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9262, file: !9238, line: 773, type: !1268)
!9265 = !DILocation(line: 0, scope: !9262)
!9266 = !DILocation(line: 775, column: 21, scope: !9262)
!9267 = !DILocation(line: 775, column: 3, scope: !9262)
!9268 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1333, file: !1333, line: 47, type: !9269, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{!103, !633, !2610}
!9271 = !{!9272, !9273}
!9272 = !DILocalVariable(name: "flags", arg: 1, scope: !9268, file: !1333, line: 47, type: !633)
!9273 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9268, file: !1333, line: 47, type: !2610)
!9274 = !DILocation(line: 0, scope: !9268)
!9275 = !DILocation(line: 50, column: 13, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9268, file: !1333, line: 50, column: 6)
!9277 = !DILocation(line: 50, column: 28, scope: !9276)
!9278 = !DILocation(line: 50, column: 6, scope: !9268)
!9279 = !DILocation(line: 53, column: 11, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9276, file: !1333, line: 50, column: 34)
!9281 = !DILocation(line: 55, column: 14, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9280, file: !1333, line: 55, column: 7)
!9283 = !DILocation(line: 55, column: 35, scope: !9282)
!9284 = !DILocation(line: 55, column: 7, scope: !9280)
!9285 = !DILocation(line: 56, column: 14, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !1333, line: 56, column: 8)
!9287 = distinct !DILexicalBlock(scope: !9282, file: !1333, line: 55, column: 41)
!9288 = !DILocation(line: 56, column: 8, scope: !9287)
!9289 = !DILocation(line: 0, scope: !9282)
!9290 = !DILocation(line: 66, column: 14, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9280, file: !1333, line: 66, column: 7)
!9292 = !DILocation(line: 66, column: 30, scope: !9291)
!9293 = !DILocation(line: 66, column: 7, scope: !9280)
!9294 = !DILocation(line: 67, column: 12, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9291, file: !1333, line: 66, column: 36)
!9296 = !DILocation(line: 68, column: 3, scope: !9295)
!9297 = !DILocation(line: 68, column: 21, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9291, file: !1333, line: 68, column: 14)
!9299 = !DILocation(line: 68, column: 39, scope: !9298)
!9300 = !DILocation(line: 68, column: 14, scope: !9291)
!9301 = !DILocation(line: 69, column: 12, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9298, file: !1333, line: 68, column: 45)
!9303 = !DILocation(line: 70, column: 3, scope: !9302)
!9304 = !DILocation(line: 72, column: 21, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9276, file: !1333, line: 72, column: 14)
!9306 = !DILocation(line: 72, column: 35, scope: !9305)
!9307 = !DILocation(line: 72, column: 14, scope: !9276)
!9308 = !DILocation(line: 77, column: 14, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !1333, line: 77, column: 7)
!9310 = distinct !DILexicalBlock(scope: !9305, file: !1333, line: 72, column: 41)
!9311 = !DILocation(line: 77, column: 30, scope: !9309)
!9312 = !DILocation(line: 77, column: 7, scope: !9310)
!9313 = !DILocation(line: 0, scope: !9276)
!9314 = !DILocation(line: 90, column: 1, scope: !9268)
!9315 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1333, file: !1333, line: 157, type: !9316, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9318)
!9316 = !DISubroutineType(types: !9317)
!9317 = !{null, !1201, !103, !103, !103}
!9318 = !{!9319, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9327, !9328, !9329}
!9319 = !DILocalVariable(name: "dev", arg: 1, scope: !9315, file: !1333, line: 157, type: !1201)
!9320 = !DILocalVariable(name: "pin", arg: 2, scope: !9315, file: !1333, line: 157, type: !103)
!9321 = !DILocalVariable(name: "conf", arg: 3, scope: !9315, file: !1333, line: 158, type: !103)
!9322 = !DILocalVariable(name: "func", arg: 4, scope: !9315, file: !1333, line: 158, type: !103)
!9323 = !DILocalVariable(name: "cfg", scope: !9315, file: !1333, line: 160, type: !8839)
!9324 = !DILocalVariable(name: "gpio", scope: !9315, file: !1333, line: 161, type: !1268)
!9325 = !DILocalVariable(name: "pin_ll", scope: !9315, file: !1333, line: 163, type: !103)
!9326 = !DILocalVariable(name: "mode", scope: !9315, file: !1333, line: 227, type: !32)
!9327 = !DILocalVariable(name: "otype", scope: !9315, file: !1333, line: 227, type: !32)
!9328 = !DILocalVariable(name: "ospeed", scope: !9315, file: !1333, line: 227, type: !32)
!9329 = !DILocalVariable(name: "pupd", scope: !9315, file: !1333, line: 227, type: !32)
!9330 = !DILocation(line: 0, scope: !9315)
!9331 = !DILocation(line: 160, column: 45, scope: !9315)
!9332 = !DILocation(line: 161, column: 44, scope: !9315)
!9333 = !DILocation(line: 163, column: 15, scope: !9315)
!9334 = !DILocation(line: 229, column: 14, scope: !9315)
!9335 = !DILocation(line: 246, column: 47, scope: !9315)
!9336 = !DILocation(line: 246, column: 2, scope: !9315)
!9337 = !DILocation(line: 248, column: 43, scope: !9315)
!9338 = !DILocation(line: 248, column: 2, scope: !9315)
!9339 = !DILocation(line: 250, column: 40, scope: !9315)
!9340 = !DILocation(line: 250, column: 2, scope: !9315)
!9341 = !DILocation(line: 252, column: 11, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9315, file: !1333, line: 252, column: 6)
!9343 = !DILocation(line: 252, column: 6, scope: !9315)
!9344 = !DILocation(line: 253, column: 11, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !1333, line: 253, column: 7)
!9346 = distinct !DILexicalBlock(scope: !9342, file: !1333, line: 252, column: 36)
!9347 = !DILocation(line: 253, column: 7, scope: !9346)
!9348 = !DILocation(line: 254, column: 4, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9345, file: !1333, line: 253, column: 16)
!9350 = !DILocation(line: 255, column: 3, scope: !9349)
!9351 = !DILocation(line: 256, column: 4, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9345, file: !1333, line: 255, column: 10)
!9353 = !DILocation(line: 260, column: 40, scope: !9315)
!9354 = !DILocation(line: 260, column: 2, scope: !9315)
!9355 = !DILocation(line: 265, column: 1, scope: !9315)
!9356 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1333, file: !1333, line: 137, type: !9162, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9357)
!9357 = !{!9358, !9359}
!9358 = !DILocalVariable(name: "pin", arg: 1, scope: !9356, file: !1333, line: 137, type: !103)
!9359 = !DILocalVariable(name: "pinval", scope: !9356, file: !1333, line: 139, type: !121)
!9360 = !DILocation(line: 0, scope: !9356)
!9361 = !DILocation(line: 149, column: 13, scope: !9356)
!9362 = !DILocation(line: 151, column: 2, scope: !9356)
!9363 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9238, file: !9238, line: 343, type: !9364, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9366)
!9364 = !DISubroutineType(types: !9365)
!9365 = !{null, !1268, !121, !121}
!9366 = !{!9367, !9368, !9369}
!9367 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9363, file: !9238, line: 343, type: !1268)
!9368 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9363, file: !9238, line: 343, type: !121)
!9369 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9363, file: !9238, line: 343, type: !121)
!9370 = !DILocation(line: 0, scope: !9363)
!9371 = !DILocation(line: 345, column: 3, scope: !9363)
!9372 = !DILocation(line: 346, column: 1, scope: !9363)
!9373 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9238, file: !9238, line: 414, type: !9364, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9374)
!9374 = !{!9375, !9376, !9377}
!9375 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9373, file: !9238, line: 414, type: !1268)
!9376 = !DILocalVariable(name: "Pin", arg: 2, scope: !9373, file: !9238, line: 414, type: !121)
!9377 = !DILocalVariable(name: "Speed", arg: 3, scope: !9373, file: !9238, line: 414, type: !121)
!9378 = !DILocation(line: 0, scope: !9373)
!9379 = !DILocation(line: 416, column: 3, scope: !9373)
!9380 = !DILocation(line: 0, scope: !9183, inlinedAt: !9381)
!9381 = distinct !DILocation(line: 416, column: 3, scope: !9373)
!9382 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9381)
!9383 = !DILocation(line: 0, scope: !9191, inlinedAt: !9384)
!9384 = distinct !DILocation(line: 416, column: 3, scope: !9373)
!9385 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9384)
!9386 = !DILocation(line: 0, scope: !9183, inlinedAt: !9387)
!9387 = distinct !DILocation(line: 416, column: 3, scope: !9373)
!9388 = !DILocation(line: 0, scope: !9191, inlinedAt: !9389)
!9389 = distinct !DILocation(line: 416, column: 3, scope: !9373)
!9390 = !DILocation(line: 418, column: 1, scope: !9373)
!9391 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9238, file: !9238, line: 485, type: !9364, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9392)
!9392 = !{!9393, !9394, !9395}
!9393 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9391, file: !9238, line: 485, type: !1268)
!9394 = !DILocalVariable(name: "Pin", arg: 2, scope: !9391, file: !9238, line: 485, type: !121)
!9395 = !DILocalVariable(name: "Pull", arg: 3, scope: !9391, file: !9238, line: 485, type: !121)
!9396 = !DILocation(line: 0, scope: !9391)
!9397 = !DILocation(line: 487, column: 3, scope: !9391)
!9398 = !DILocation(line: 0, scope: !9183, inlinedAt: !9399)
!9399 = distinct !DILocation(line: 487, column: 3, scope: !9391)
!9400 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9399)
!9401 = !DILocation(line: 0, scope: !9191, inlinedAt: !9402)
!9402 = distinct !DILocation(line: 487, column: 3, scope: !9391)
!9403 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9402)
!9404 = !DILocation(line: 0, scope: !9183, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 487, column: 3, scope: !9391)
!9406 = !DILocation(line: 0, scope: !9191, inlinedAt: !9407)
!9407 = distinct !DILocation(line: 487, column: 3, scope: !9391)
!9408 = !DILocation(line: 488, column: 1, scope: !9391)
!9409 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9238, file: !9238, line: 557, type: !9364, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9409, file: !9238, line: 557, type: !1268)
!9412 = !DILocalVariable(name: "Pin", arg: 2, scope: !9409, file: !9238, line: 557, type: !121)
!9413 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9409, file: !9238, line: 557, type: !121)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 559, column: 3, scope: !9409)
!9416 = !DILocation(line: 0, scope: !9183, inlinedAt: !9417)
!9417 = distinct !DILocation(line: 559, column: 3, scope: !9409)
!9418 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9417)
!9419 = !DILocation(line: 0, scope: !9191, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 559, column: 3, scope: !9409)
!9421 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9420)
!9422 = !DILocation(line: 0, scope: !9183, inlinedAt: !9423)
!9423 = distinct !DILocation(line: 559, column: 3, scope: !9409)
!9424 = !DILocation(line: 0, scope: !9191, inlinedAt: !9425)
!9425 = distinct !DILocation(line: 559, column: 3, scope: !9409)
!9426 = !DILocation(line: 561, column: 1, scope: !9409)
!9427 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9238, file: !9238, line: 634, type: !9364, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9428)
!9428 = !{!9429, !9430, !9431}
!9429 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9427, file: !9238, line: 634, type: !1268)
!9430 = !DILocalVariable(name: "Pin", arg: 2, scope: !9427, file: !9238, line: 634, type: !121)
!9431 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9427, file: !9238, line: 634, type: !121)
!9432 = !DILocation(line: 0, scope: !9427)
!9433 = !DILocation(line: 636, column: 3, scope: !9427)
!9434 = !DILocation(line: 0, scope: !9183, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 636, column: 3, scope: !9427)
!9436 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9435)
!9437 = !DILocation(line: 0, scope: !9191, inlinedAt: !9438)
!9438 = distinct !DILocation(line: 636, column: 3, scope: !9427)
!9439 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9438)
!9440 = !DILocation(line: 0, scope: !9183, inlinedAt: !9441)
!9441 = distinct !DILocation(line: 636, column: 3, scope: !9427)
!9442 = !DILocation(line: 0, scope: !9191, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 636, column: 3, scope: !9427)
!9444 = !DILocation(line: 638, column: 1, scope: !9427)
!9445 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9238, file: !9238, line: 274, type: !9364, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9446)
!9446 = !{!9447, !9448, !9449}
!9447 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9445, file: !9238, line: 274, type: !1268)
!9448 = !DILocalVariable(name: "Pin", arg: 2, scope: !9445, file: !9238, line: 274, type: !121)
!9449 = !DILocalVariable(name: "Mode", arg: 3, scope: !9445, file: !9238, line: 274, type: !121)
!9450 = !DILocation(line: 0, scope: !9445)
!9451 = !DILocation(line: 276, column: 3, scope: !9445)
!9452 = !DILocation(line: 0, scope: !9183, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 276, column: 3, scope: !9445)
!9454 = !DILocation(line: 380, column: 4, scope: !9183, inlinedAt: !9453)
!9455 = !DILocation(line: 0, scope: !9191, inlinedAt: !9456)
!9456 = distinct !DILocation(line: 276, column: 3, scope: !9445)
!9457 = !DILocation(line: 414, column: 7, scope: !9191, inlinedAt: !9456)
!9458 = !DILocation(line: 0, scope: !9183, inlinedAt: !9459)
!9459 = distinct !DILocation(line: 276, column: 3, scope: !9445)
!9460 = !DILocation(line: 0, scope: !9191, inlinedAt: !9461)
!9461 = distinct !DILocation(line: 276, column: 3, scope: !9445)
!9462 = !DILocation(line: 277, column: 1, scope: !9445)
!9463 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1333, file: !1333, line: 698, type: !1346, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9464)
!9464 = !{!9465, !9466, !9467}
!9465 = !DILocalVariable(name: "dev", arg: 1, scope: !9463, file: !1333, line: 698, type: !1201)
!9466 = !DILocalVariable(name: "data", scope: !9463, file: !1333, line: 700, type: !8906)
!9467 = !DILocalVariable(name: "ret", scope: !9463, file: !1333, line: 701, type: !103)
!9468 = !DILocation(line: 0, scope: !9463)
!9469 = !DILocation(line: 700, column: 38, scope: !9463)
!9470 = !DILocation(line: 703, column: 8, scope: !9463)
!9471 = !DILocation(line: 703, column: 12, scope: !9463)
!9472 = !DILocation(line: 705, column: 7, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9463, file: !1333, line: 705, column: 6)
!9474 = !DILocation(line: 705, column: 6, scope: !9463)
!9475 = !DILocation(line: 722, column: 8, scope: !9463)
!9476 = !DILocation(line: 723, column: 10, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9463, file: !1333, line: 723, column: 6)
!9478 = !DILocation(line: 723, column: 6, scope: !9463)
!9479 = !DILocation(line: 731, column: 1, scope: !9463)
!9480 = distinct !DISubprogram(name: "device_is_ready", scope: !7518, file: !7518, line: 47, type: !9481, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9483)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{!170, !1201}
!9483 = !{!9484}
!9484 = !DILocalVariable(name: "dev", arg: 1, scope: !9480, file: !7518, line: 47, type: !1201)
!9485 = !DILocation(line: 0, scope: !9480)
!9486 = !DILocation(line: 55, column: 2, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9480, file: !7518, line: 55, column: 2)
!9488 = !{i64 2152400247}
!9489 = !DILocation(line: 56, column: 9, scope: !9480)
!9490 = !DILocation(line: 56, column: 2, scope: !9480)
!9491 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1333, file: !1333, line: 270, type: !9492, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9494)
!9492 = !DISubroutineType(types: !9493)
!9493 = !{!103, !1201, !170}
!9494 = !{!9495, !9496, !9497, !9498, !9499}
!9495 = !DILocalVariable(name: "dev", arg: 1, scope: !9491, file: !1333, line: 270, type: !1201)
!9496 = !DILocalVariable(name: "on", arg: 2, scope: !9491, file: !1333, line: 270, type: !170)
!9497 = !DILocalVariable(name: "cfg", scope: !9491, file: !1333, line: 272, type: !8839)
!9498 = !DILocalVariable(name: "ret", scope: !9491, file: !1333, line: 273, type: !103)
!9499 = !DILocalVariable(name: "clk", scope: !9491, file: !1333, line: 278, type: !9129)
!9500 = !DILocation(line: 0, scope: !9491)
!9501 = !DILocation(line: 272, column: 45, scope: !9491)
!9502 = !DILocation(line: 282, column: 38, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !1333, line: 280, column: 10)
!9504 = distinct !DILexicalBlock(scope: !9491, file: !1333, line: 280, column: 6)
!9505 = !DILocation(line: 282, column: 6, scope: !9503)
!9506 = !DILocation(line: 281, column: 9, scope: !9503)
!9507 = !DILocation(line: 293, column: 1, scope: !9491)
!9508 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !9481, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9509)
!9509 = !{!9510}
!9510 = !DILocalVariable(name: "dev", arg: 1, scope: !9508, file: !154, line: 730, type: !1201)
!9511 = !DILocation(line: 0, scope: !9508)
!9512 = !DILocation(line: 732, column: 9, scope: !9508)
!9513 = !DILocation(line: 732, column: 2, scope: !9508)
!9514 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1333, file: !1333, line: 496, type: !9515, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !9517)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{!103, !1201, !103, !103, !103}
!9517 = !{!9518, !9519, !9520, !9521, !9522, !9523}
!9518 = !DILocalVariable(name: "dev", arg: 1, scope: !9514, file: !1333, line: 496, type: !1201)
!9519 = !DILocalVariable(name: "pin", arg: 2, scope: !9514, file: !1333, line: 496, type: !103)
!9520 = !DILocalVariable(name: "conf", arg: 3, scope: !9514, file: !1333, line: 496, type: !103)
!9521 = !DILocalVariable(name: "func", arg: 4, scope: !9514, file: !1333, line: 496, type: !103)
!9522 = !DILocalVariable(name: "ret", scope: !9514, file: !1333, line: 498, type: !103)
!9523 = !DILocalVariable(name: "gpio_out", scope: !9524, file: !1333, line: 508, type: !121)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !1333, line: 507, column: 27)
!9525 = distinct !DILexicalBlock(scope: !9514, file: !1333, line: 507, column: 6)
!9526 = !DILocation(line: 0, scope: !9514)
!9527 = !DILocation(line: 505, column: 2, scope: !9514)
!9528 = !DILocation(line: 507, column: 11, scope: !9525)
!9529 = !DILocation(line: 507, column: 6, scope: !9514)
!9530 = !DILocation(line: 508, column: 28, scope: !9524)
!9531 = !DILocation(line: 0, scope: !9524)
!9532 = !DILocation(line: 510, column: 16, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9524, file: !1333, line: 510, column: 7)
!9534 = !DILocation(line: 0, scope: !9533)
!9535 = !DILocation(line: 510, column: 7, scope: !9524)
!9536 = !DILocation(line: 511, column: 4, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !1333, line: 510, column: 32)
!9538 = !DILocation(line: 512, column: 3, scope: !9537)
!9539 = !DILocation(line: 513, column: 4, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !1333, line: 512, column: 39)
!9541 = distinct !DILexicalBlock(scope: !9533, file: !1333, line: 512, column: 14)
!9542 = !DILocation(line: 514, column: 3, scope: !9540)
!9543 = !DILocation(line: 518, column: 1, scope: !9514)
!9544 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1620, file: !1620, line: 526, type: !1494, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9545)
!9545 = !{!9546, !9547, !9548}
!9546 = !DILocalVariable(name: "dev", arg: 1, scope: !9544, file: !1620, line: 526, type: !1496)
!9547 = !DILocalVariable(name: "c", arg: 2, scope: !9544, file: !1620, line: 526, type: !243)
!9548 = !DILocalVariable(name: "config", scope: !9544, file: !1620, line: 528, type: !9549)
!9549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!9550 = !DILocation(line: 0, scope: !9544)
!9551 = !DILocation(line: 528, column: 48, scope: !9544)
!9552 = !DILocation(line: 531, column: 40, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9544, file: !1620, line: 531, column: 6)
!9554 = !DILocation(line: 531, column: 6, scope: !9553)
!9555 = !DILocation(line: 531, column: 6, scope: !9544)
!9556 = !DILocation(line: 532, column: 34, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !1620, line: 531, column: 48)
!9558 = !DILocation(line: 532, column: 3, scope: !9557)
!9559 = !DILocation(line: 533, column: 2, scope: !9557)
!9560 = !DILocation(line: 539, column: 42, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9544, file: !1620, line: 539, column: 6)
!9562 = !DILocation(line: 539, column: 7, scope: !9561)
!9563 = !DILocation(line: 539, column: 6, scope: !9544)
!9564 = !DILocation(line: 543, column: 52, scope: !9544)
!9565 = !DILocation(line: 543, column: 22, scope: !9544)
!9566 = !DILocation(line: 543, column: 5, scope: !9544)
!9567 = !DILocation(line: 545, column: 2, scope: !9544)
!9568 = !DILocation(line: 546, column: 1, scope: !9544)
!9569 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1620, file: !1620, line: 548, type: !1513, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9570)
!9570 = !{!9571, !9572, !9573, !9574}
!9571 = !DILocalVariable(name: "dev", arg: 1, scope: !9569, file: !1620, line: 548, type: !1496)
!9572 = !DILocalVariable(name: "c", arg: 2, scope: !9569, file: !1620, line: 549, type: !168)
!9573 = !DILocalVariable(name: "config", scope: !9569, file: !1620, line: 551, type: !9549)
!9574 = !DILocalVariable(name: "key", scope: !9569, file: !1620, line: 555, type: !32)
!9575 = !DILocation(line: 0, scope: !9569)
!9576 = !DILocation(line: 551, column: 48, scope: !9569)
!9577 = !DILocation(line: 562, column: 2, scope: !9569)
!9578 = !DILocation(line: 563, column: 41, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !1620, line: 563, column: 7)
!9580 = distinct !DILexicalBlock(scope: !9569, file: !1620, line: 562, column: 12)
!9581 = !DILocation(line: 563, column: 7, scope: !9579)
!9582 = !DILocation(line: 563, column: 7, scope: !9580)
!9583 = !DILocation(line: 55, column: 2, scope: !9584, inlinedAt: !9588)
!9584 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9585)
!9585 = !{!9586, !9587}
!9586 = !DILocalVariable(name: "key", scope: !9584, file: !5695, line: 44, type: !32)
!9587 = !DILocalVariable(name: "tmp", scope: !9584, file: !5695, line: 53, type: !32)
!9588 = distinct !DILocation(line: 564, column: 10, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9579, file: !1620, line: 563, column: 49)
!9590 = !{i64 1697936}
!9591 = !DILocation(line: 0, scope: !9584, inlinedAt: !9588)
!9592 = !DILocation(line: 565, column: 42, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9589, file: !1620, line: 565, column: 8)
!9594 = !DILocation(line: 565, column: 8, scope: !9593)
!9595 = !DILocation(line: 565, column: 8, scope: !9589)
!9596 = !DILocalVariable(name: "key", arg: 1, scope: !9597, file: !5695, line: 84, type: !32)
!9597 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9598)
!9598 = !{!9596}
!9599 = !DILocation(line: 0, scope: !9597, inlinedAt: !9600)
!9600 = distinct !DILocation(line: 568, column: 4, scope: !9589)
!9601 = !DILocation(line: 95, column: 2, scope: !9597, inlinedAt: !9600)
!9602 = !{i64 1698753}
!9603 = !DILocation(line: 569, column: 3, scope: !9589)
!9604 = distinct !{!9604, !9577, !9605}
!9605 = !DILocation(line: 570, column: 2, scope: !9569)
!9606 = !DILocation(line: 592, column: 33, scope: !9569)
!9607 = !DILocation(line: 592, column: 2, scope: !9569)
!9608 = !DILocation(line: 0, scope: !9597, inlinedAt: !9609)
!9609 = distinct !DILocation(line: 593, column: 2, scope: !9569)
!9610 = !DILocation(line: 95, column: 2, scope: !9597, inlinedAt: !9609)
!9611 = !DILocation(line: 594, column: 1, scope: !9569)
!9612 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1620, file: !1620, line: 596, type: !1517, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9613)
!9613 = !{!9614, !9615, !9616}
!9614 = !DILocalVariable(name: "dev", arg: 1, scope: !9612, file: !1620, line: 596, type: !1496)
!9615 = !DILocalVariable(name: "config", scope: !9612, file: !1620, line: 598, type: !9549)
!9616 = !DILocalVariable(name: "err", scope: !9612, file: !1620, line: 599, type: !121)
!9617 = !DILocation(line: 0, scope: !9612)
!9618 = !DILocation(line: 598, column: 48, scope: !9612)
!9619 = !DILocation(line: 606, column: 40, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 606, column: 6)
!9621 = !DILocation(line: 606, column: 6, scope: !9620)
!9622 = !DILocation(line: 606, column: 6, scope: !9612)
!9623 = !DILocation(line: 610, column: 39, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 610, column: 6)
!9625 = !DILocation(line: 610, column: 6, scope: !9624)
!9626 = !DILocation(line: 610, column: 6, scope: !9612)
!9627 = !DILocation(line: 614, column: 39, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 614, column: 6)
!9629 = !DILocation(line: 614, column: 6, scope: !9628)
!9630 = !DILocation(line: 614, column: 6, scope: !9612)
!9631 = !DILocation(line: 619, column: 40, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 619, column: 6)
!9633 = !DILocation(line: 619, column: 6, scope: !9632)
!9634 = !DILocation(line: 619, column: 6, scope: !9612)
!9635 = !DILocation(line: 623, column: 10, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 623, column: 6)
!9637 = !DILocation(line: 623, column: 6, scope: !9612)
!9638 = !DILocation(line: 624, column: 34, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9636, file: !1620, line: 623, column: 24)
!9640 = !DILocation(line: 624, column: 3, scope: !9639)
!9641 = !DILocation(line: 625, column: 2, scope: !9639)
!9642 = !DILocation(line: 632, column: 10, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 632, column: 6)
!9644 = !DILocation(line: 632, column: 6, scope: !9612)
!9645 = !DILocation(line: 633, column: 34, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9643, file: !1620, line: 632, column: 32)
!9647 = !DILocation(line: 633, column: 3, scope: !9646)
!9648 = !DILocation(line: 634, column: 2, scope: !9646)
!9649 = !DILocation(line: 636, column: 10, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 636, column: 6)
!9651 = !DILocation(line: 636, column: 6, scope: !9612)
!9652 = !DILocation(line: 637, column: 33, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9650, file: !1620, line: 636, column: 31)
!9654 = !DILocation(line: 637, column: 3, scope: !9653)
!9655 = !DILocation(line: 638, column: 2, scope: !9653)
!9656 = !DILocation(line: 640, column: 10, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9612, file: !1620, line: 640, column: 6)
!9658 = !DILocation(line: 640, column: 6, scope: !9612)
!9659 = !DILocation(line: 641, column: 33, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9657, file: !1620, line: 640, column: 32)
!9661 = !DILocation(line: 641, column: 3, scope: !9660)
!9662 = !DILocation(line: 642, column: 2, scope: !9660)
!9663 = !DILocation(line: 646, column: 32, scope: !9612)
!9664 = !DILocation(line: 646, column: 2, scope: !9612)
!9665 = !DILocation(line: 648, column: 2, scope: !9612)
!9666 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1620, file: !1620, line: 419, type: !1521, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9667)
!9667 = !{!9668, !9669, !9670, !9671, !9673, !9674, !9675, !9676}
!9668 = !DILocalVariable(name: "dev", arg: 1, scope: !9666, file: !1620, line: 419, type: !1496)
!9669 = !DILocalVariable(name: "cfg", arg: 2, scope: !9666, file: !1620, line: 420, type: !1523)
!9670 = !DILocalVariable(name: "config", scope: !9666, file: !1620, line: 422, type: !9549)
!9671 = !DILocalVariable(name: "data", scope: !9666, file: !1620, line: 423, type: !9672)
!9672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!9673 = !DILocalVariable(name: "parity", scope: !9666, file: !1620, line: 424, type: !6170)
!9674 = !DILocalVariable(name: "stopbits", scope: !9666, file: !1620, line: 425, type: !6170)
!9675 = !DILocalVariable(name: "databits", scope: !9666, file: !1620, line: 426, type: !6170)
!9676 = !DILocalVariable(name: "flowctrl", scope: !9666, file: !1620, line: 428, type: !6170)
!9677 = !DILocation(line: 0, scope: !9666)
!9678 = !DILocation(line: 422, column: 48, scope: !9666)
!9679 = !DILocation(line: 423, column: 38, scope: !9666)
!9680 = !DILocation(line: 424, column: 56, scope: !9666)
!9681 = !DILocation(line: 424, column: 51, scope: !9666)
!9682 = !DILocation(line: 424, column: 26, scope: !9666)
!9683 = !DILocation(line: 425, column: 60, scope: !9666)
!9684 = !DILocation(line: 425, column: 55, scope: !9666)
!9685 = !DILocation(line: 425, column: 28, scope: !9666)
!9686 = !DILocation(line: 426, column: 60, scope: !9666)
!9687 = !DILocation(line: 426, column: 55, scope: !9666)
!9688 = !DILocation(line: 426, column: 28, scope: !9666)
!9689 = !DILocation(line: 428, column: 58, scope: !9666)
!9690 = !DILocation(line: 428, column: 53, scope: !9666)
!9691 = !DILocation(line: 428, column: 28, scope: !9666)
!9692 = !DILocation(line: 431, column: 44, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 431, column: 6)
!9694 = !DILocation(line: 438, column: 22, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 437, column: 6)
!9696 = !DILocation(line: 437, column: 6, scope: !9666)
!9697 = !DILocation(line: 448, column: 6, scope: !9666)
!9698 = !DILocation(line: 465, column: 47, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 465, column: 6)
!9700 = !DILocation(line: 475, column: 21, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 475, column: 6)
!9702 = !DILocation(line: 475, column: 6, scope: !9666)
!9703 = !DILocation(line: 476, column: 8, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !1620, line: 476, column: 7)
!9705 = distinct !DILexicalBlock(scope: !9701, file: !1620, line: 475, column: 49)
!9706 = !DILocation(line: 477, column: 34, scope: !9704)
!9707 = !DILocation(line: 476, column: 7, scope: !9705)
!9708 = !DILocation(line: 482, column: 27, scope: !9666)
!9709 = !DILocation(line: 482, column: 2, scope: !9666)
!9710 = !DILocation(line: 484, column: 16, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 484, column: 6)
!9712 = !DILocation(line: 484, column: 13, scope: !9711)
!9713 = !DILocation(line: 484, column: 6, scope: !9666)
!9714 = !DILocation(line: 485, column: 3, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9711, file: !1620, line: 484, column: 44)
!9716 = !DILocation(line: 486, column: 2, scope: !9715)
!9717 = !DILocation(line: 488, column: 18, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 488, column: 6)
!9719 = !DILocation(line: 488, column: 15, scope: !9718)
!9720 = !DILocation(line: 488, column: 6, scope: !9666)
!9721 = !DILocation(line: 489, column: 3, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9718, file: !1620, line: 488, column: 48)
!9723 = !DILocation(line: 490, column: 2, scope: !9722)
!9724 = !DILocation(line: 492, column: 18, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 492, column: 6)
!9726 = !DILocation(line: 492, column: 15, scope: !9725)
!9727 = !DILocation(line: 492, column: 6, scope: !9666)
!9728 = !DILocation(line: 493, column: 3, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !1620, line: 492, column: 48)
!9730 = !DILocation(line: 494, column: 2, scope: !9729)
!9731 = !DILocation(line: 496, column: 18, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 496, column: 6)
!9733 = !DILocation(line: 496, column: 15, scope: !9732)
!9734 = !DILocation(line: 496, column: 6, scope: !9666)
!9735 = !DILocation(line: 497, column: 3, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !1620, line: 496, column: 46)
!9737 = !DILocation(line: 498, column: 2, scope: !9736)
!9738 = !DILocation(line: 500, column: 11, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9666, file: !1620, line: 500, column: 6)
!9740 = !DILocation(line: 500, column: 29, scope: !9739)
!9741 = !DILocation(line: 500, column: 20, scope: !9739)
!9742 = !DILocation(line: 500, column: 6, scope: !9666)
!9743 = !DILocation(line: 501, column: 3, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !1620, line: 500, column: 40)
!9745 = !DILocation(line: 502, column: 26, scope: !9744)
!9746 = !DILocation(line: 502, column: 19, scope: !9744)
!9747 = !DILocation(line: 503, column: 2, scope: !9744)
!9748 = !DILocation(line: 505, column: 26, scope: !9666)
!9749 = !DILocation(line: 505, column: 2, scope: !9666)
!9750 = !DILocation(line: 506, column: 2, scope: !9666)
!9751 = !DILocation(line: 507, column: 1, scope: !9666)
!9752 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1620, file: !1620, line: 509, type: !1534, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9753)
!9753 = !{!9754, !9755, !9756}
!9754 = !DILocalVariable(name: "dev", arg: 1, scope: !9752, file: !1620, line: 509, type: !1496)
!9755 = !DILocalVariable(name: "cfg", arg: 2, scope: !9752, file: !1620, line: 510, type: !1536)
!9756 = !DILocalVariable(name: "data", scope: !9752, file: !1620, line: 512, type: !9672)
!9757 = !DILocation(line: 0, scope: !9752)
!9758 = !DILocation(line: 512, column: 38, scope: !9752)
!9759 = !DILocation(line: 514, column: 24, scope: !9752)
!9760 = !DILocation(line: 514, column: 7, scope: !9752)
!9761 = !DILocation(line: 514, column: 16, scope: !9752)
!9762 = !DILocation(line: 515, column: 41, scope: !9752)
!9763 = !{i32 0, i32 1537}
!9764 = !DILocation(line: 515, column: 16, scope: !9752)
!9765 = !DILocation(line: 515, column: 7, scope: !9752)
!9766 = !DILocation(line: 515, column: 14, scope: !9752)
!9767 = !DILocation(line: 517, column: 3, scope: !9752)
!9768 = !{i32 0, i32 12289}
!9769 = !DILocation(line: 516, column: 19, scope: !9752)
!9770 = !DILocation(line: 516, column: 7, scope: !9752)
!9771 = !DILocation(line: 516, column: 17, scope: !9752)
!9772 = !DILocation(line: 519, column: 3, scope: !9752)
!9773 = !DILocation(line: 519, column: 33, scope: !9752)
!9774 = !DILocation(line: 518, column: 19, scope: !9752)
!9775 = !DILocation(line: 518, column: 7, scope: !9752)
!9776 = !DILocation(line: 518, column: 17, scope: !9752)
!9777 = !DILocation(line: 521, column: 3, scope: !9752)
!9778 = !{i32 0, i32 769}
!9779 = !DILocation(line: 520, column: 19, scope: !9752)
!9780 = !DILocation(line: 520, column: 7, scope: !9752)
!9781 = !DILocation(line: 520, column: 17, scope: !9752)
!9782 = !DILocation(line: 522, column: 2, scope: !9752)
!9783 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1620, file: !1620, line: 661, type: !1539, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9784)
!9784 = !{!9785, !9786, !9787, !9788, !9789, !9790}
!9785 = !DILocalVariable(name: "dev", arg: 1, scope: !9783, file: !1620, line: 661, type: !1496)
!9786 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9783, file: !1620, line: 662, type: !274)
!9787 = !DILocalVariable(name: "size", arg: 3, scope: !9783, file: !1620, line: 663, type: !103)
!9788 = !DILocalVariable(name: "config", scope: !9783, file: !1620, line: 665, type: !9549)
!9789 = !DILocalVariable(name: "num_tx", scope: !9783, file: !1620, line: 666, type: !167)
!9790 = !DILocalVariable(name: "key", scope: !9783, file: !1620, line: 667, type: !32)
!9791 = !DILocation(line: 0, scope: !9783)
!9792 = !DILocation(line: 665, column: 48, scope: !9783)
!9793 = !DILocation(line: 669, column: 41, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9783, file: !1620, line: 669, column: 6)
!9795 = !DILocation(line: 669, column: 7, scope: !9794)
!9796 = !DILocation(line: 669, column: 6, scope: !9783)
!9797 = !DILocation(line: 55, column: 2, scope: !9584, inlinedAt: !9798)
!9798 = distinct !DILocation(line: 674, column: 8, scope: !9783)
!9799 = !DILocation(line: 0, scope: !9584, inlinedAt: !9798)
!9800 = !DILocation(line: 676, column: 24, scope: !9783)
!9801 = !DILocation(line: 676, column: 29, scope: !9783)
!9802 = !DILocation(line: 677, column: 43, scope: !9783)
!9803 = !DILocation(line: 677, column: 9, scope: !9783)
!9804 = !DILocation(line: 676, column: 2, scope: !9783)
!9805 = !DILocation(line: 681, column: 34, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9783, file: !1620, line: 677, column: 51)
!9807 = !DILocation(line: 681, column: 55, scope: !9806)
!9808 = !DILocation(line: 681, column: 41, scope: !9806)
!9809 = !DILocation(line: 681, column: 3, scope: !9806)
!9810 = !DILocation(line: 676, column: 17, scope: !9783)
!9811 = distinct !{!9811, !9804, !9812}
!9812 = !DILocation(line: 682, column: 2, scope: !9783)
!9813 = !DILocation(line: 0, scope: !9597, inlinedAt: !9814)
!9814 = distinct !DILocation(line: 684, column: 2, scope: !9783)
!9815 = !DILocation(line: 95, column: 2, scope: !9597, inlinedAt: !9814)
!9816 = !DILocation(line: 686, column: 2, scope: !9783)
!9817 = !DILocation(line: 687, column: 1, scope: !9783)
!9818 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1620, file: !1620, line: 689, type: !1543, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9819)
!9819 = !{!9820, !9821, !9822, !9823, !9824}
!9820 = !DILocalVariable(name: "dev", arg: 1, scope: !9818, file: !1620, line: 689, type: !1496)
!9821 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9818, file: !1620, line: 689, type: !280)
!9822 = !DILocalVariable(name: "size", arg: 3, scope: !9818, file: !1620, line: 690, type: !281)
!9823 = !DILocalVariable(name: "config", scope: !9818, file: !1620, line: 692, type: !9549)
!9824 = !DILocalVariable(name: "num_rx", scope: !9818, file: !1620, line: 693, type: !167)
!9825 = !DILocation(line: 0, scope: !9818)
!9826 = !DILocation(line: 692, column: 48, scope: !9818)
!9827 = !DILocation(line: 696, column: 44, scope: !9818)
!9828 = !DILocation(line: 695, column: 24, scope: !9818)
!9829 = !DILocation(line: 695, column: 29, scope: !9818)
!9830 = !DILocation(line: 696, column: 9, scope: !9818)
!9831 = !DILocation(line: 695, column: 2, scope: !9818)
!9832 = !DILocation(line: 700, column: 53, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9818, file: !1620, line: 696, column: 52)
!9834 = !DILocation(line: 700, column: 23, scope: !9833)
!9835 = !DILocation(line: 700, column: 17, scope: !9833)
!9836 = !DILocation(line: 700, column: 3, scope: !9833)
!9837 = !DILocation(line: 700, column: 21, scope: !9833)
!9838 = !DILocation(line: 703, column: 41, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9833, file: !1620, line: 703, column: 7)
!9840 = !DILocation(line: 703, column: 7, scope: !9839)
!9841 = !DILocation(line: 703, column: 7, scope: !9833)
!9842 = !DILocation(line: 704, column: 35, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9839, file: !1620, line: 703, column: 49)
!9844 = !DILocation(line: 704, column: 4, scope: !9843)
!9845 = !DILocation(line: 709, column: 3, scope: !9843)
!9846 = !DILocation(line: 695, column: 17, scope: !9818)
!9847 = distinct !{!9847, !9831, !9848}
!9848 = !DILocation(line: 710, column: 2, scope: !9818)
!9849 = !DILocation(line: 712, column: 2, scope: !9818)
!9850 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1620, file: !1620, line: 715, type: !1547, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9851)
!9851 = !{!9852, !9853}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !1620, line: 715, type: !1496)
!9853 = !DILocalVariable(name: "config", scope: !9850, file: !1620, line: 717, type: !9549)
!9854 = !DILocation(line: 0, scope: !9850)
!9855 = !DILocation(line: 717, column: 48, scope: !9850)
!9856 = !DILocation(line: 729, column: 31, scope: !9850)
!9857 = !DILocation(line: 729, column: 2, scope: !9850)
!9858 = !DILocation(line: 734, column: 1, scope: !9850)
!9859 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1620, file: !1620, line: 736, type: !1547, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9860)
!9860 = !{!9861, !9862}
!9861 = !DILocalVariable(name: "dev", arg: 1, scope: !9859, file: !1620, line: 736, type: !1496)
!9862 = !DILocalVariable(name: "config", scope: !9859, file: !1620, line: 738, type: !9549)
!9863 = !DILocation(line: 0, scope: !9859)
!9864 = !DILocation(line: 738, column: 48, scope: !9859)
!9865 = !DILocation(line: 746, column: 32, scope: !9859)
!9866 = !DILocation(line: 746, column: 2, scope: !9859)
!9867 = !DILocation(line: 756, column: 1, scope: !9859)
!9868 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1620, file: !1620, line: 758, type: !1517, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9869)
!9869 = !{!9870, !9871}
!9870 = !DILocalVariable(name: "dev", arg: 1, scope: !9868, file: !1620, line: 758, type: !1496)
!9871 = !DILocalVariable(name: "config", scope: !9868, file: !1620, line: 760, type: !9549)
!9872 = !DILocation(line: 0, scope: !9868)
!9873 = !DILocation(line: 760, column: 48, scope: !9868)
!9874 = !DILocation(line: 762, column: 43, scope: !9868)
!9875 = !DILocation(line: 762, column: 9, scope: !9868)
!9876 = !DILocation(line: 762, column: 50, scope: !9868)
!9877 = !DILocation(line: 763, column: 35, scope: !9868)
!9878 = !DILocation(line: 763, column: 3, scope: !9868)
!9879 = !DILocation(line: 762, column: 2, scope: !9868)
!9880 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1620, file: !1620, line: 773, type: !1547, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9881)
!9881 = !{!9882, !9883}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1620, line: 773, type: !1496)
!9883 = !DILocalVariable(name: "config", scope: !9880, file: !1620, line: 775, type: !9549)
!9884 = !DILocation(line: 0, scope: !9880)
!9885 = !DILocation(line: 775, column: 48, scope: !9880)
!9886 = !DILocation(line: 777, column: 33, scope: !9880)
!9887 = !DILocation(line: 777, column: 2, scope: !9880)
!9888 = !DILocation(line: 778, column: 1, scope: !9880)
!9889 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1620, file: !1620, line: 780, type: !1547, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9890)
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9889, file: !1620, line: 780, type: !1496)
!9892 = !DILocalVariable(name: "config", scope: !9889, file: !1620, line: 782, type: !9549)
!9893 = !DILocation(line: 0, scope: !9889)
!9894 = !DILocation(line: 782, column: 48, scope: !9889)
!9895 = !DILocation(line: 784, column: 34, scope: !9889)
!9896 = !DILocation(line: 784, column: 2, scope: !9889)
!9897 = !DILocation(line: 785, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1620, file: !1620, line: 766, type: !1517, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !1620, line: 766, type: !1496)
!9901 = !DILocalVariable(name: "config", scope: !9898, file: !1620, line: 768, type: !9549)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 768, column: 48, scope: !9898)
!9904 = !DILocation(line: 770, column: 42, scope: !9898)
!9905 = !DILocation(line: 770, column: 9, scope: !9898)
!9906 = !DILocation(line: 770, column: 2, scope: !9898)
!9907 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1620, file: !1620, line: 787, type: !1517, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9908)
!9908 = !{!9909, !9910}
!9909 = !DILocalVariable(name: "dev", arg: 1, scope: !9907, file: !1620, line: 787, type: !1496)
!9910 = !DILocalVariable(name: "config", scope: !9907, file: !1620, line: 789, type: !9549)
!9911 = !DILocation(line: 0, scope: !9907)
!9912 = !DILocation(line: 789, column: 48, scope: !9907)
!9913 = !DILocation(line: 794, column: 44, scope: !9907)
!9914 = !DILocation(line: 794, column: 9, scope: !9907)
!9915 = !DILocation(line: 794, column: 2, scope: !9907)
!9916 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1620, file: !1620, line: 797, type: !1547, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9917)
!9917 = !{!9918, !9919}
!9918 = !DILocalVariable(name: "dev", arg: 1, scope: !9916, file: !1620, line: 797, type: !1496)
!9919 = !DILocalVariable(name: "config", scope: !9916, file: !1620, line: 799, type: !9549)
!9920 = !DILocation(line: 0, scope: !9916)
!9921 = !DILocation(line: 799, column: 48, scope: !9916)
!9922 = !DILocation(line: 802, column: 34, scope: !9916)
!9923 = !DILocation(line: 802, column: 2, scope: !9916)
!9924 = !DILocation(line: 805, column: 6, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9916, file: !1620, line: 805, column: 6)
!9926 = !DILocation(line: 806, column: 3, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9925, file: !1620, line: 805, column: 43)
!9928 = !DILocation(line: 810, column: 31, scope: !9916)
!9929 = !DILocation(line: 807, column: 2, scope: !9927)
!9930 = !DILocation(line: 810, column: 2, scope: !9916)
!9931 = !DILocation(line: 811, column: 1, scope: !9916)
!9932 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1620, file: !1620, line: 813, type: !1547, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9933)
!9933 = !{!9934, !9935}
!9934 = !DILocalVariable(name: "dev", arg: 1, scope: !9932, file: !1620, line: 813, type: !1496)
!9935 = !DILocalVariable(name: "config", scope: !9932, file: !1620, line: 815, type: !9549)
!9936 = !DILocation(line: 0, scope: !9932)
!9937 = !DILocation(line: 815, column: 48, scope: !9932)
!9938 = !DILocation(line: 818, column: 35, scope: !9932)
!9939 = !DILocation(line: 818, column: 2, scope: !9932)
!9940 = !DILocation(line: 821, column: 6, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9932, file: !1620, line: 821, column: 6)
!9942 = !DILocation(line: 822, column: 3, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9941, file: !1620, line: 821, column: 43)
!9944 = !DILocation(line: 826, column: 32, scope: !9932)
!9945 = !DILocation(line: 823, column: 2, scope: !9943)
!9946 = !DILocation(line: 826, column: 2, scope: !9932)
!9947 = !DILocation(line: 827, column: 1, scope: !9932)
!9948 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1620, file: !1620, line: 829, type: !1517, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9949)
!9949 = !{!9950, !9951}
!9950 = !DILocalVariable(name: "dev", arg: 1, scope: !9948, file: !1620, line: 829, type: !1496)
!9951 = !DILocalVariable(name: "config", scope: !9948, file: !1620, line: 831, type: !9549)
!9952 = !DILocation(line: 0, scope: !9948)
!9953 = !DILocation(line: 831, column: 48, scope: !9948)
!9954 = !DILocation(line: 833, column: 46, scope: !9948)
!9955 = !DILocation(line: 833, column: 11, scope: !9948)
!9956 = !DILocation(line: 833, column: 53, scope: !9948)
!9957 = !DILocation(line: 834, column: 38, scope: !9948)
!9958 = !DILocation(line: 834, column: 4, scope: !9948)
!9959 = !DILocation(line: 834, column: 46, scope: !9948)
!9960 = !DILocation(line: 835, column: 37, scope: !9948)
!9961 = !DILocation(line: 835, column: 4, scope: !9948)
!9962 = !DILocation(line: 835, column: 44, scope: !9948)
!9963 = !DILocation(line: 836, column: 36, scope: !9948)
!9964 = !DILocation(line: 836, column: 4, scope: !9948)
!9965 = !DILocation(line: 833, column: 2, scope: !9948)
!9966 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1620, file: !1620, line: 839, type: !1517, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9967)
!9967 = !{!9968}
!9968 = !DILocalVariable(name: "dev", arg: 1, scope: !9966, file: !1620, line: 839, type: !1496)
!9969 = !DILocation(line: 0, scope: !9966)
!9970 = !DILocation(line: 841, column: 2, scope: !9966)
!9971 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1620, file: !1620, line: 844, type: !1561, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9972)
!9972 = !{!9973, !9974, !9975, !9976}
!9973 = !DILocalVariable(name: "dev", arg: 1, scope: !9971, file: !1620, line: 844, type: !1496)
!9974 = !DILocalVariable(name: "cb", arg: 2, scope: !9971, file: !1620, line: 845, type: !1563)
!9975 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9971, file: !1620, line: 846, type: !102)
!9976 = !DILocalVariable(name: "data", scope: !9971, file: !1620, line: 848, type: !9672)
!9977 = !DILocation(line: 0, scope: !9971)
!9978 = !DILocation(line: 848, column: 38, scope: !9971)
!9979 = !DILocation(line: 850, column: 8, scope: !9971)
!9980 = !DILocation(line: 850, column: 16, scope: !9971)
!9981 = !DILocation(line: 851, column: 8, scope: !9971)
!9982 = !DILocation(line: 851, column: 18, scope: !9971)
!9983 = !DILocation(line: 852, column: 1, scope: !9971)
!9984 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9985, file: !9985, line: 1791, type: !9986, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9988)
!9985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9986 = !DISubroutineType(types: !9987)
!9987 = !{!121, !1567}
!9988 = !{!9989}
!9989 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9984, file: !9985, line: 1791, type: !1567)
!9990 = !DILocation(line: 0, scope: !9984)
!9991 = !DILocation(line: 1793, column: 11, scope: !9984)
!9992 = !DILocation(line: 1793, column: 47, scope: !9984)
!9993 = !DILocation(line: 1793, column: 3, scope: !9984)
!9994 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9985, file: !9985, line: 2226, type: !9986, scopeLine: 2227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9995)
!9995 = !{!9996}
!9996 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9994, file: !9985, line: 2226, type: !1567)
!9997 = !DILocation(line: 0, scope: !9994)
!9998 = !DILocation(line: 2228, column: 11, scope: !9994)
!9999 = !DILocation(line: 2228, column: 51, scope: !9994)
!10000 = !DILocation(line: 2228, column: 3, scope: !9994)
!10001 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9985, file: !9985, line: 1802, type: !9986, scopeLine: 1803, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10002)
!10002 = !{!10003}
!10003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10001, file: !9985, line: 1802, type: !1567)
!10004 = !DILocation(line: 0, scope: !10001)
!10005 = !DILocation(line: 1804, column: 11, scope: !10001)
!10006 = !DILocation(line: 1804, column: 45, scope: !10001)
!10007 = !DILocation(line: 1804, column: 3, scope: !10001)
!10008 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9985, file: !9985, line: 2237, type: !9986, scopeLine: 2238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10009)
!10009 = !{!10010}
!10010 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10008, file: !9985, line: 2237, type: !1567)
!10011 = !DILocation(line: 0, scope: !10008)
!10012 = !DILocation(line: 2239, column: 11, scope: !10008)
!10013 = !DILocation(line: 2239, column: 49, scope: !10008)
!10014 = !DILocation(line: 2239, column: 3, scope: !10008)
!10015 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9985, file: !9985, line: 2191, type: !10016, scopeLine: 2192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10018)
!10016 = !DISubroutineType(types: !10017)
!10017 = !{null, !1567}
!10018 = !{!10019}
!10019 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10015, file: !9985, line: 2191, type: !1567)
!10020 = !DILocation(line: 0, scope: !10015)
!10021 = !DILocation(line: 2193, column: 3, scope: !10015)
!10022 = !DILocation(line: 2194, column: 1, scope: !10015)
!10023 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9985, file: !9985, line: 2176, type: !10016, scopeLine: 2177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10024)
!10024 = !{!10025}
!10025 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10023, file: !9985, line: 2176, type: !1567)
!10026 = !DILocation(line: 0, scope: !10023)
!10027 = !DILocation(line: 2178, column: 3, scope: !10023)
!10028 = !DILocation(line: 2179, column: 1, scope: !10023)
!10029 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9985, file: !9985, line: 2163, type: !10016, scopeLine: 2164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10030)
!10030 = !{!10031}
!10031 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10029, file: !9985, line: 2163, type: !1567)
!10032 = !DILocation(line: 0, scope: !10029)
!10033 = !DILocation(line: 2165, column: 3, scope: !10029)
!10034 = !DILocation(line: 2166, column: 1, scope: !10029)
!10035 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9985, file: !9985, line: 2095, type: !10016, scopeLine: 2096, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10036)
!10036 = !{!10037}
!10037 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10035, file: !9985, line: 2095, type: !1567)
!10038 = !DILocation(line: 0, scope: !10035)
!10039 = !DILocation(line: 2097, column: 3, scope: !10035)
!10040 = !DILocation(line: 2098, column: 1, scope: !10035)
!10041 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9985, file: !9985, line: 2080, type: !10016, scopeLine: 2081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10042)
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10041, file: !9985, line: 2080, type: !1567)
!10044 = !DILocation(line: 0, scope: !10041)
!10045 = !DILocation(line: 2082, column: 3, scope: !10041)
!10046 = !DILocation(line: 2083, column: 1, scope: !10041)
!10047 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9985, file: !9985, line: 2067, type: !10016, scopeLine: 2068, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10048)
!10048 = !{!10049}
!10049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10047, file: !9985, line: 2067, type: !1567)
!10050 = !DILocation(line: 0, scope: !10047)
!10051 = !DILocation(line: 2069, column: 3, scope: !10047)
!10052 = !DILocation(line: 2070, column: 1, scope: !10047)
!10053 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9985, file: !9985, line: 2130, type: !10016, scopeLine: 2131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10054)
!10054 = !{!10055}
!10055 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10053, file: !9985, line: 2130, type: !1567)
!10056 = !DILocation(line: 0, scope: !10053)
!10057 = !DILocation(line: 2132, column: 3, scope: !10053)
!10058 = !DILocation(line: 2133, column: 1, scope: !10053)
!10059 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9985, file: !9985, line: 2034, type: !10016, scopeLine: 2035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10060)
!10060 = !{!10061}
!10061 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10059, file: !9985, line: 2034, type: !1567)
!10062 = !DILocation(line: 0, scope: !10059)
!10063 = !DILocation(line: 2036, column: 3, scope: !10059)
!10064 = !DILocation(line: 2037, column: 1, scope: !10059)
!10065 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9985, file: !9985, line: 1813, type: !9986, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10066)
!10066 = !{!10067}
!10067 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10065, file: !9985, line: 1813, type: !1567)
!10068 = !DILocation(line: 0, scope: !10065)
!10069 = !DILocation(line: 1815, column: 11, scope: !10065)
!10070 = !DILocation(line: 1815, column: 46, scope: !10065)
!10071 = !DILocation(line: 1815, column: 3, scope: !10065)
!10072 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9985, file: !9985, line: 2141, type: !10016, scopeLine: 2142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10073)
!10073 = !{!10074}
!10074 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10072, file: !9985, line: 2141, type: !1567)
!10075 = !DILocation(line: 0, scope: !10072)
!10076 = !DILocation(line: 2143, column: 3, scope: !10072)
!10077 = !DILocation(line: 2144, column: 1, scope: !10072)
!10078 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9985, file: !9985, line: 2045, type: !10016, scopeLine: 2046, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10079)
!10079 = !{!10080}
!10080 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10078, file: !9985, line: 2045, type: !1567)
!10081 = !DILocation(line: 0, scope: !10078)
!10082 = !DILocation(line: 2047, column: 3, scope: !10078)
!10083 = !DILocation(line: 2048, column: 1, scope: !10078)
!10084 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9985, file: !9985, line: 2402, type: !10085, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10087)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{!167, !1567}
!10087 = !{!10088}
!10088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10084, file: !9985, line: 2402, type: !1567)
!10089 = !DILocation(line: 0, scope: !10084)
!10090 = !DILocation(line: 2404, column: 20, scope: !10084)
!10091 = !DILocation(line: 2404, column: 10, scope: !10084)
!10092 = !DILocation(line: 2404, column: 3, scope: !10084)
!10093 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9985, file: !9985, line: 1769, type: !9986, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10094)
!10094 = !{!10095}
!10095 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10093, file: !9985, line: 1769, type: !1567)
!10096 = !DILocation(line: 0, scope: !10093)
!10097 = !DILocation(line: 1771, column: 11, scope: !10093)
!10098 = !DILocation(line: 1771, column: 46, scope: !10093)
!10099 = !DILocation(line: 1771, column: 3, scope: !10093)
!10100 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9985, file: !9985, line: 1933, type: !10016, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10101)
!10101 = !{!10102, !10103}
!10102 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10100, file: !9985, line: 1933, type: !1567)
!10103 = !DILocalVariable(name: "tmpreg", scope: !10100, file: !9985, line: 1935, type: !120)
!10104 = !DILocation(line: 0, scope: !10100)
!10105 = !DILocation(line: 1935, column: 3, scope: !10100)
!10106 = !DILocation(line: 1935, column: 17, scope: !10100)
!10107 = !DILocation(line: 1936, column: 20, scope: !10100)
!10108 = !DILocation(line: 1936, column: 10, scope: !10100)
!10109 = !DILocation(line: 1937, column: 10, scope: !10100)
!10110 = !DILocation(line: 1938, column: 20, scope: !10100)
!10111 = !DILocation(line: 1938, column: 10, scope: !10100)
!10112 = !DILocation(line: 1939, column: 10, scope: !10100)
!10113 = !DILocation(line: 1940, column: 1, scope: !10100)
!10114 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9985, file: !9985, line: 2425, type: !10115, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10117)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{null, !1567, !167}
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10114, file: !9985, line: 2425, type: !1567)
!10119 = !DILocalVariable(name: "Value", arg: 2, scope: !10114, file: !9985, line: 2425, type: !167)
!10120 = !DILocation(line: 0, scope: !10114)
!10121 = !DILocation(line: 2427, column: 16, scope: !10114)
!10122 = !DILocation(line: 2427, column: 11, scope: !10114)
!10123 = !DILocation(line: 2427, column: 14, scope: !10114)
!10124 = !DILocation(line: 2428, column: 1, scope: !10114)
!10125 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1620, file: !1620, line: 205, type: !10126, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10128)
!10126 = !DISubroutineType(types: !10127)
!10127 = !{!121, !1496}
!10128 = !{!10129, !10130}
!10129 = !DILocalVariable(name: "dev", arg: 1, scope: !10125, file: !1620, line: 205, type: !1496)
!10130 = !DILocalVariable(name: "config", scope: !10125, file: !1620, line: 207, type: !9549)
!10131 = !DILocation(line: 0, scope: !10125)
!10132 = !DILocation(line: 207, column: 48, scope: !10125)
!10133 = !DILocation(line: 209, column: 36, scope: !10125)
!10134 = !DILocation(line: 209, column: 9, scope: !10125)
!10135 = !DILocation(line: 209, column: 2, scope: !10125)
!10136 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1620, file: !1620, line: 270, type: !10137, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10139)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!1462, !121}
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "parity", arg: 1, scope: !10136, file: !1620, line: 270, type: !121)
!10141 = !DILocation(line: 0, scope: !10136)
!10142 = !DILocation(line: 272, column: 2, scope: !10136)
!10143 = !DILocation(line: 281, column: 1, scope: !10136)
!10144 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1620, file: !1620, line: 220, type: !10126, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10145)
!10145 = !{!10146, !10147}
!10146 = !DILocalVariable(name: "dev", arg: 1, scope: !10144, file: !1620, line: 220, type: !1496)
!10147 = !DILocalVariable(name: "config", scope: !10144, file: !1620, line: 222, type: !9549)
!10148 = !DILocation(line: 0, scope: !10144)
!10149 = !DILocation(line: 222, column: 48, scope: !10144)
!10150 = !DILocation(line: 224, column: 44, scope: !10144)
!10151 = !DILocation(line: 224, column: 9, scope: !10144)
!10152 = !DILocation(line: 224, column: 2, scope: !10144)
!10153 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1620, file: !1620, line: 304, type: !10154, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!1476, !121}
!10156 = !{!10157}
!10157 = !DILocalVariable(name: "sb", arg: 1, scope: !10153, file: !1620, line: 304, type: !121)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 306, column: 2, scope: !10153)
!10160 = !DILocation(line: 0, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10153, file: !1620, line: 306, column: 14)
!10162 = !DILocation(line: 323, column: 1, scope: !10153)
!10163 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1620, file: !1620, line: 235, type: !10126, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10164)
!10164 = !{!10165, !10166}
!10165 = !DILocalVariable(name: "dev", arg: 1, scope: !10163, file: !1620, line: 235, type: !1496)
!10166 = !DILocalVariable(name: "config", scope: !10163, file: !1620, line: 237, type: !9549)
!10167 = !DILocation(line: 0, scope: !10163)
!10168 = !DILocation(line: 237, column: 48, scope: !10163)
!10169 = !DILocation(line: 239, column: 39, scope: !10163)
!10170 = !DILocation(line: 239, column: 9, scope: !10163)
!10171 = !DILocation(line: 239, column: 2, scope: !10163)
!10172 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1620, file: !1620, line: 355, type: !10173, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!1469, !121, !121}
!10175 = !{!10176, !10177}
!10176 = !DILocalVariable(name: "db", arg: 1, scope: !10172, file: !1620, line: 355, type: !121)
!10177 = !DILocalVariable(name: "p", arg: 2, scope: !10172, file: !1620, line: 356, type: !121)
!10178 = !DILocation(line: 0, scope: !10172)
!10179 = !DILocation(line: 358, column: 2, scope: !10172)
!10180 = !DILocation(line: 384, column: 1, scope: !10172)
!10181 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1620, file: !1620, line: 250, type: !10126, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10182)
!10182 = !{!10183, !10184}
!10183 = !DILocalVariable(name: "dev", arg: 1, scope: !10181, file: !1620, line: 250, type: !1496)
!10184 = !DILocalVariable(name: "config", scope: !10181, file: !1620, line: 252, type: !9549)
!10185 = !DILocation(line: 0, scope: !10181)
!10186 = !DILocation(line: 252, column: 48, scope: !10181)
!10187 = !DILocation(line: 254, column: 40, scope: !10181)
!10188 = !DILocation(line: 254, column: 9, scope: !10181)
!10189 = !DILocation(line: 254, column: 2, scope: !10181)
!10190 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1620, file: !1620, line: 409, type: !10191, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10193)
!10191 = !DISubroutineType(types: !10192)
!10192 = !{!1482, !121}
!10193 = !{!10194}
!10194 = !DILocalVariable(name: "fc", arg: 1, scope: !10190, file: !1620, line: 409, type: !121)
!10195 = !DILocation(line: 0, scope: !10190)
!10196 = !DILocation(line: 411, column: 9, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10190, file: !1620, line: 411, column: 6)
!10198 = !DILocation(line: 416, column: 1, scope: !10190)
!10199 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9985, file: !9985, line: 966, type: !9986, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10200)
!10200 = !{!10201}
!10201 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10199, file: !9985, line: 966, type: !1567)
!10202 = !DILocation(line: 0, scope: !10199)
!10203 = !DILocation(line: 968, column: 21, scope: !10199)
!10204 = !DILocation(line: 968, column: 3, scope: !10199)
!10205 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9985, file: !9985, line: 600, type: !9986, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10206)
!10206 = !{!10207}
!10207 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10205, file: !9985, line: 600, type: !1567)
!10208 = !DILocation(line: 0, scope: !10205)
!10209 = !DILocation(line: 602, column: 21, scope: !10205)
!10210 = !DILocation(line: 602, column: 3, scope: !10205)
!10211 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9985, file: !9985, line: 819, type: !9986, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10212)
!10212 = !{!10213}
!10213 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10211, file: !9985, line: 819, type: !1567)
!10214 = !DILocation(line: 0, scope: !10211)
!10215 = !DILocation(line: 821, column: 21, scope: !10211)
!10216 = !DILocation(line: 821, column: 3, scope: !10211)
!10217 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9985, file: !9985, line: 546, type: !9986, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10218)
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10217, file: !9985, line: 546, type: !1567)
!10220 = !DILocation(line: 0, scope: !10217)
!10221 = !DILocation(line: 548, column: 21, scope: !10217)
!10222 = !DILocation(line: 548, column: 3, scope: !10217)
!10223 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1620, file: !1620, line: 257, type: !10224, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10226)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{!121, !1462}
!10226 = !{!10227}
!10227 = !DILocalVariable(name: "parity", arg: 1, scope: !10223, file: !1620, line: 257, type: !1462)
!10228 = !DILocation(line: 0, scope: !10223)
!10229 = !DILocation(line: 259, column: 2, scope: !10223)
!10230 = !DILocation(line: 268, column: 1, scope: !10223)
!10231 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1620, file: !1620, line: 283, type: !10232, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10234)
!10232 = !DISubroutineType(types: !10233)
!10233 = !{!121, !1476}
!10234 = !{!10235}
!10235 = !DILocalVariable(name: "sb", arg: 1, scope: !10231, file: !1620, line: 283, type: !1476)
!10236 = !DILocation(line: 0, scope: !10231)
!10237 = !DILocation(line: 285, column: 2, scope: !10231)
!10238 = !DILocation(line: 0, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10231, file: !1620, line: 285, column: 14)
!10240 = !DILocation(line: 302, column: 1, scope: !10231)
!10241 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1620, file: !1620, line: 325, type: !10242, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10244)
!10242 = !DISubroutineType(types: !10243)
!10243 = !{!121, !1469, !1462}
!10244 = !{!10245, !10246}
!10245 = !DILocalVariable(name: "db", arg: 1, scope: !10241, file: !1620, line: 325, type: !1469)
!10246 = !DILocalVariable(name: "p", arg: 2, scope: !10241, file: !1620, line: 326, type: !1462)
!10247 = !DILocation(line: 0, scope: !10241)
!10248 = !DILocation(line: 328, column: 2, scope: !10241)
!10249 = !DILocation(line: 353, column: 1, scope: !10241)
!10250 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1620, file: !1620, line: 393, type: !10251, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10253)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!121, !1482}
!10253 = !{!10254}
!10254 = !DILocalVariable(name: "fc", arg: 1, scope: !10250, file: !1620, line: 393, type: !1482)
!10255 = !DILocation(line: 0, scope: !10250)
!10256 = !DILocation(line: 395, column: 9, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10250, file: !1620, line: 395, column: 6)
!10258 = !DILocation(line: 400, column: 1, scope: !10250)
!10259 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9985, file: !9985, line: 423, type: !10016, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10260)
!10260 = !{!10261}
!10261 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10259, file: !9985, line: 423, type: !1567)
!10262 = !DILocation(line: 0, scope: !10259)
!10263 = !DILocation(line: 425, column: 3, scope: !10259)
!10264 = !DILocation(line: 426, column: 1, scope: !10259)
!10265 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1620, file: !1620, line: 197, type: !10266, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10268)
!10266 = !DISubroutineType(types: !10267)
!10267 = !{null, !1496, !121}
!10268 = !{!10269, !10270, !10271}
!10269 = !DILocalVariable(name: "dev", arg: 1, scope: !10265, file: !1620, line: 197, type: !1496)
!10270 = !DILocalVariable(name: "parity", arg: 2, scope: !10265, file: !1620, line: 198, type: !121)
!10271 = !DILocalVariable(name: "config", scope: !10265, file: !1620, line: 200, type: !9549)
!10272 = !DILocation(line: 0, scope: !10265)
!10273 = !DILocation(line: 200, column: 48, scope: !10265)
!10274 = !DILocation(line: 202, column: 29, scope: !10265)
!10275 = !DILocation(line: 202, column: 2, scope: !10265)
!10276 = !DILocation(line: 203, column: 1, scope: !10265)
!10277 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1620, file: !1620, line: 212, type: !10266, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10278)
!10278 = !{!10279, !10280, !10281}
!10279 = !DILocalVariable(name: "dev", arg: 1, scope: !10277, file: !1620, line: 212, type: !1496)
!10280 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10277, file: !1620, line: 213, type: !121)
!10281 = !DILocalVariable(name: "config", scope: !10277, file: !1620, line: 215, type: !9549)
!10282 = !DILocation(line: 0, scope: !10277)
!10283 = !DILocation(line: 215, column: 48, scope: !10277)
!10284 = !DILocation(line: 217, column: 37, scope: !10277)
!10285 = !DILocation(line: 217, column: 2, scope: !10277)
!10286 = !DILocation(line: 218, column: 1, scope: !10277)
!10287 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1620, file: !1620, line: 227, type: !10266, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10288)
!10288 = !{!10289, !10290, !10291}
!10289 = !DILocalVariable(name: "dev", arg: 1, scope: !10287, file: !1620, line: 227, type: !1496)
!10290 = !DILocalVariable(name: "databits", arg: 2, scope: !10287, file: !1620, line: 228, type: !121)
!10291 = !DILocalVariable(name: "config", scope: !10287, file: !1620, line: 230, type: !9549)
!10292 = !DILocation(line: 0, scope: !10287)
!10293 = !DILocation(line: 230, column: 48, scope: !10287)
!10294 = !DILocation(line: 232, column: 32, scope: !10287)
!10295 = !DILocation(line: 232, column: 2, scope: !10287)
!10296 = !DILocation(line: 233, column: 1, scope: !10287)
!10297 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1620, file: !1620, line: 242, type: !10266, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10298)
!10298 = !{!10299, !10300, !10301}
!10299 = !DILocalVariable(name: "dev", arg: 1, scope: !10297, file: !1620, line: 242, type: !1496)
!10300 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10297, file: !1620, line: 243, type: !121)
!10301 = !DILocalVariable(name: "config", scope: !10297, file: !1620, line: 245, type: !9549)
!10302 = !DILocation(line: 0, scope: !10297)
!10303 = !DILocation(line: 245, column: 48, scope: !10297)
!10304 = !DILocation(line: 247, column: 33, scope: !10297)
!10305 = !DILocation(line: 247, column: 2, scope: !10297)
!10306 = !DILocation(line: 248, column: 1, scope: !10297)
!10307 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1620, file: !1620, line: 107, type: !10266, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10308)
!10308 = !{!10309, !10310, !10311, !10312, !10313}
!10309 = !DILocalVariable(name: "dev", arg: 1, scope: !10307, file: !1620, line: 107, type: !1496)
!10310 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10307, file: !1620, line: 107, type: !121)
!10311 = !DILocalVariable(name: "config", scope: !10307, file: !1620, line: 109, type: !9549)
!10312 = !DILocalVariable(name: "data", scope: !10307, file: !1620, line: 110, type: !9672)
!10313 = !DILocalVariable(name: "clock_rate", scope: !10307, file: !1620, line: 112, type: !121)
!10314 = !DILocation(line: 0, scope: !10307)
!10315 = !DILocation(line: 109, column: 48, scope: !10307)
!10316 = !DILocation(line: 110, column: 38, scope: !10307)
!10317 = !DILocation(line: 112, column: 2, scope: !10307)
!10318 = !DILocation(line: 123, column: 36, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !1620, line: 123, column: 7)
!10320 = distinct !DILexicalBlock(scope: !10321, file: !1620, line: 122, column: 9)
!10321 = distinct !DILexicalBlock(scope: !10307, file: !1620, line: 115, column: 6)
!10322 = !DILocation(line: 124, column: 42, scope: !10319)
!10323 = !DILocation(line: 123, column: 7, scope: !10319)
!10324 = !DILocation(line: 125, column: 22, scope: !10319)
!10325 = !DILocation(line: 123, column: 7, scope: !10320)
!10326 = !DILocation(line: 176, column: 36, scope: !10307)
!10327 = !DILocation(line: 176, column: 3, scope: !10307)
!10328 = !DILocation(line: 179, column: 32, scope: !10307)
!10329 = !DILocation(line: 180, column: 10, scope: !10307)
!10330 = !DILocation(line: 179, column: 3, scope: !10307)
!10331 = !DILocation(line: 195, column: 1, scope: !10307)
!10332 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9985, file: !9985, line: 409, type: !10016, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10333)
!10333 = !{!10334}
!10334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10332, file: !9985, line: 409, type: !1567)
!10335 = !DILocation(line: 0, scope: !10332)
!10336 = !DILocation(line: 411, column: 3, scope: !10332)
!10337 = !DILocation(line: 412, column: 1, scope: !10332)
!10338 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !894, file: !894, line: 216, type: !1600, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10343}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !894, line: 216, type: !1496)
!10341 = !DILocalVariable(name: "sys", arg: 2, scope: !10338, file: !894, line: 217, type: !969)
!10342 = !DILocalVariable(name: "rate", arg: 3, scope: !10338, file: !894, line: 218, type: !925)
!10343 = !DILocalVariable(name: "api", scope: !10338, file: !894, line: 220, type: !1578)
!10344 = !DILocation(line: 0, scope: !10338)
!10345 = !DILocation(line: 221, column: 49, scope: !10338)
!10346 = !DILocation(line: 223, column: 11, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10338, file: !894, line: 223, column: 6)
!10348 = !DILocation(line: 223, column: 20, scope: !10347)
!10349 = !DILocation(line: 223, column: 6, scope: !10338)
!10350 = !DILocation(line: 227, column: 9, scope: !10338)
!10351 = !DILocation(line: 227, column: 2, scope: !10338)
!10352 = !DILocation(line: 228, column: 1, scope: !10338)
!10353 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9985, file: !9985, line: 614, type: !10354, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{null, !1567, !121}
!10356 = !{!10357, !10358}
!10357 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10353, file: !9985, line: 614, type: !1567)
!10358 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10353, file: !9985, line: 614, type: !121)
!10359 = !DILocation(line: 0, scope: !10353)
!10360 = !DILocation(line: 616, column: 3, scope: !10353)
!10361 = !DILocation(line: 617, column: 1, scope: !10353)
!10362 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9985, file: !9985, line: 1019, type: !10363, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10365)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{null, !1567, !121, !121, !121}
!10365 = !{!10366, !10367, !10368, !10369}
!10366 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !9985, line: 1019, type: !1567)
!10367 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10362, file: !9985, line: 1019, type: !121)
!10368 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10362, file: !9985, line: 1019, type: !121)
!10369 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10362, file: !9985, line: 1020, type: !121)
!10370 = !DILocation(line: 0, scope: !10362)
!10371 = !DILocation(line: 1028, column: 30, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !9985, line: 1027, column: 3)
!10373 = distinct !DILexicalBlock(scope: !10362, file: !9985, line: 1022, column: 7)
!10374 = !DILocation(line: 1028, column: 19, scope: !10372)
!10375 = !DILocation(line: 1028, column: 13, scope: !10372)
!10376 = !DILocation(line: 1028, column: 17, scope: !10372)
!10377 = !DILocation(line: 1030, column: 1, scope: !10362)
!10378 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9985, file: !9985, line: 948, type: !10354, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10379)
!10379 = !{!10380, !10381}
!10380 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10378, file: !9985, line: 948, type: !1567)
!10381 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10378, file: !9985, line: 948, type: !121)
!10382 = !DILocation(line: 0, scope: !10378)
!10383 = !DILocation(line: 950, column: 3, scope: !10378)
!10384 = !DILocation(line: 951, column: 1, scope: !10378)
!10385 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9985, file: !9985, line: 587, type: !10354, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10386)
!10386 = !{!10387, !10388}
!10387 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10385, file: !9985, line: 587, type: !1567)
!10388 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10385, file: !9985, line: 587, type: !121)
!10389 = !DILocation(line: 0, scope: !10385)
!10390 = !DILocation(line: 589, column: 3, scope: !10385)
!10391 = !DILocation(line: 590, column: 1, scope: !10385)
!10392 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9985, file: !9985, line: 804, type: !10354, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10393)
!10393 = !{!10394, !10395}
!10394 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10392, file: !9985, line: 804, type: !1567)
!10395 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10392, file: !9985, line: 804, type: !121)
!10396 = !DILocation(line: 0, scope: !10392)
!10397 = !DILocation(line: 806, column: 3, scope: !10392)
!10398 = !DILocation(line: 807, column: 1, scope: !10392)
!10399 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9985, file: !9985, line: 531, type: !10354, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10400)
!10400 = !{!10401, !10402}
!10401 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10399, file: !9985, line: 531, type: !1567)
!10402 = !DILocalVariable(name: "Parity", arg: 2, scope: !10399, file: !9985, line: 531, type: !121)
!10403 = !DILocation(line: 0, scope: !10399)
!10404 = !DILocation(line: 533, column: 3, scope: !10399)
!10405 = !DILocation(line: 534, column: 1, scope: !10399)
!10406 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9985, file: !9985, line: 1736, type: !9986, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10407)
!10407 = !{!10408}
!10408 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10406, file: !9985, line: 1736, type: !1567)
!10409 = !DILocation(line: 0, scope: !10406)
!10410 = !DILocation(line: 1738, column: 11, scope: !10406)
!10411 = !DILocation(line: 1738, column: 3, scope: !10406)
!10412 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9985, file: !9985, line: 1747, type: !9986, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10413)
!10413 = !{!10414}
!10414 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10412, file: !9985, line: 1747, type: !1567)
!10415 = !DILocation(line: 0, scope: !10412)
!10416 = !DILocation(line: 1749, column: 11, scope: !10412)
!10417 = !DILocation(line: 1749, column: 45, scope: !10412)
!10418 = !DILocation(line: 1749, column: 3, scope: !10412)
!10419 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9985, file: !9985, line: 1826, type: !9986, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10420)
!10420 = !{!10421}
!10421 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10419, file: !9985, line: 1826, type: !1567)
!10422 = !DILocation(line: 0, scope: !10419)
!10423 = !DILocation(line: 1828, column: 11, scope: !10419)
!10424 = !DILocation(line: 1828, column: 46, scope: !10419)
!10425 = !DILocation(line: 1828, column: 3, scope: !10419)
!10426 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9985, file: !9985, line: 1991, type: !10016, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10427)
!10427 = !{!10428}
!10428 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10426, file: !9985, line: 1991, type: !1567)
!10429 = !DILocation(line: 0, scope: !10426)
!10430 = !DILocation(line: 1993, column: 3, scope: !10426)
!10431 = !DILocation(line: 1994, column: 1, scope: !10426)
!10432 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9985, file: !9985, line: 1876, type: !10016, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10433)
!10433 = !{!10434, !10435}
!10434 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10432, file: !9985, line: 1876, type: !1567)
!10435 = !DILocalVariable(name: "tmpreg", scope: !10432, file: !9985, line: 1878, type: !120)
!10436 = !DILocation(line: 0, scope: !10432)
!10437 = !DILocation(line: 1878, column: 3, scope: !10432)
!10438 = !DILocation(line: 1878, column: 17, scope: !10432)
!10439 = !DILocation(line: 1879, column: 20, scope: !10432)
!10440 = !DILocation(line: 1879, column: 10, scope: !10432)
!10441 = !DILocation(line: 1880, column: 10, scope: !10432)
!10442 = !DILocation(line: 1881, column: 20, scope: !10432)
!10443 = !DILocation(line: 1881, column: 10, scope: !10432)
!10444 = !DILocation(line: 1882, column: 10, scope: !10432)
!10445 = !DILocation(line: 1883, column: 1, scope: !10432)
!10446 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9985, file: !9985, line: 1895, type: !10016, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10447)
!10447 = !{!10448, !10449}
!10448 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10446, file: !9985, line: 1895, type: !1567)
!10449 = !DILocalVariable(name: "tmpreg", scope: !10446, file: !9985, line: 1897, type: !120)
!10450 = !DILocation(line: 0, scope: !10446)
!10451 = !DILocation(line: 1897, column: 3, scope: !10446)
!10452 = !DILocation(line: 1897, column: 17, scope: !10446)
!10453 = !DILocation(line: 1898, column: 20, scope: !10446)
!10454 = !DILocation(line: 1898, column: 10, scope: !10446)
!10455 = !DILocation(line: 1899, column: 10, scope: !10446)
!10456 = !DILocation(line: 1900, column: 20, scope: !10446)
!10457 = !DILocation(line: 1900, column: 10, scope: !10446)
!10458 = !DILocation(line: 1901, column: 10, scope: !10446)
!10459 = !DILocation(line: 1902, column: 1, scope: !10446)
!10460 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9985, file: !9985, line: 1914, type: !10016, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10461)
!10461 = !{!10462, !10463}
!10462 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10460, file: !9985, line: 1914, type: !1567)
!10463 = !DILocalVariable(name: "tmpreg", scope: !10460, file: !9985, line: 1916, type: !120)
!10464 = !DILocation(line: 0, scope: !10460)
!10465 = !DILocation(line: 1916, column: 3, scope: !10460)
!10466 = !DILocation(line: 1916, column: 17, scope: !10460)
!10467 = !DILocation(line: 1917, column: 20, scope: !10460)
!10468 = !DILocation(line: 1917, column: 10, scope: !10460)
!10469 = !DILocation(line: 1918, column: 10, scope: !10460)
!10470 = !DILocation(line: 1919, column: 20, scope: !10460)
!10471 = !DILocation(line: 1919, column: 10, scope: !10460)
!10472 = !DILocation(line: 1920, column: 10, scope: !10460)
!10473 = !DILocation(line: 1921, column: 1, scope: !10460)
!10474 = !DILocation(line: 0, scope: !1679)
!10475 = !DILocation(line: 1914, column: 1, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !1679, file: !1620, line: 1914, column: 1)
!10477 = !DILocation(line: 1914, column: 1, scope: !1679)
!10478 = !DILocation(line: 0, scope: !1728)
!10479 = !DILocation(line: 1914, column: 1, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !1728, file: !1620, line: 1914, column: 1)
!10481 = !DILocation(line: 1914, column: 1, scope: !1728)
!10482 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1620, file: !1620, line: 987, type: !1547, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10483)
!10483 = !{!10484, !10485}
!10484 = !DILocalVariable(name: "dev", arg: 1, scope: !10482, file: !1620, line: 987, type: !1496)
!10485 = !DILocalVariable(name: "data", scope: !10482, file: !1620, line: 989, type: !9672)
!10486 = !DILocation(line: 0, scope: !10482)
!10487 = !DILocation(line: 989, column: 38, scope: !10482)
!10488 = !DILocation(line: 1014, column: 12, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10482, file: !1620, line: 1014, column: 6)
!10490 = !DILocation(line: 1014, column: 6, scope: !10489)
!10491 = !DILocation(line: 1014, column: 6, scope: !10482)
!10492 = !DILocation(line: 1015, column: 28, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10489, file: !1620, line: 1014, column: 21)
!10494 = !DILocation(line: 1015, column: 3, scope: !10493)
!10495 = !DILocation(line: 1016, column: 2, scope: !10493)
!10496 = !DILocation(line: 1059, column: 1, scope: !10482)
!10497 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1620, file: !1620, line: 1583, type: !1517, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10498)
!10498 = !{!10499, !10500, !10501, !10502, !10503, !10504}
!10499 = !DILocalVariable(name: "dev", arg: 1, scope: !10497, file: !1620, line: 1583, type: !1496)
!10500 = !DILocalVariable(name: "config", scope: !10497, file: !1620, line: 1585, type: !9549)
!10501 = !DILocalVariable(name: "data", scope: !10497, file: !1620, line: 1586, type: !9672)
!10502 = !DILocalVariable(name: "ll_parity", scope: !10497, file: !1620, line: 1587, type: !121)
!10503 = !DILocalVariable(name: "ll_datawidth", scope: !10497, file: !1620, line: 1588, type: !121)
!10504 = !DILocalVariable(name: "err", scope: !10497, file: !1620, line: 1589, type: !103)
!10505 = !DILocation(line: 0, scope: !10497)
!10506 = !DILocation(line: 1585, column: 48, scope: !10497)
!10507 = !DILocation(line: 1586, column: 38, scope: !10497)
!10508 = !DILocation(line: 1591, column: 2, scope: !10497)
!10509 = !DILocation(line: 1593, column: 29, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10497, file: !1620, line: 1593, column: 6)
!10511 = !DILocation(line: 1593, column: 7, scope: !10510)
!10512 = !DILocation(line: 1593, column: 6, scope: !10497)
!10513 = !DILocation(line: 1599, column: 31, scope: !10497)
!10514 = !DILocation(line: 1599, column: 71, scope: !10497)
!10515 = !DILocation(line: 1599, column: 8, scope: !10497)
!10516 = !DILocation(line: 1600, column: 10, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10497, file: !1620, line: 1600, column: 6)
!10518 = !DILocation(line: 1600, column: 6, scope: !10497)
!10519 = !DILocation(line: 1616, column: 36, scope: !10497)
!10520 = !DILocation(line: 1616, column: 8, scope: !10497)
!10521 = !DILocation(line: 1617, column: 10, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10497, file: !1620, line: 1617, column: 6)
!10523 = !DILocation(line: 1617, column: 6, scope: !10497)
!10524 = !DILocation(line: 1621, column: 27, scope: !10497)
!10525 = !DILocation(line: 1621, column: 2, scope: !10497)
!10526 = !DILocation(line: 1624, column: 40, scope: !10497)
!10527 = !DILocation(line: 1624, column: 2, scope: !10497)
!10528 = !DILocation(line: 1630, column: 14, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10497, file: !1620, line: 1630, column: 6)
!10530 = !DILocation(line: 1630, column: 6, scope: !10497)
!10531 = !DILocation(line: 1638, column: 2, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !1620, line: 1634, column: 34)
!10533 = distinct !DILexicalBlock(scope: !10529, file: !1620, line: 1634, column: 13)
!10534 = !DILocation(line: 0, scope: !10529)
!10535 = !DILocation(line: 1649, column: 35, scope: !10497)
!10536 = !DILocation(line: 1649, column: 2, scope: !10497)
!10537 = !DILocation(line: 1654, column: 14, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10497, file: !1620, line: 1654, column: 6)
!10539 = !DILocation(line: 1654, column: 6, scope: !10497)
!10540 = !DILocation(line: 1655, column: 3, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10538, file: !1620, line: 1654, column: 31)
!10542 = !DILocation(line: 1656, column: 2, scope: !10541)
!10543 = !DILocation(line: 1659, column: 37, scope: !10497)
!10544 = !DILocation(line: 1659, column: 2, scope: !10497)
!10545 = !DILocation(line: 1662, column: 14, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10497, file: !1620, line: 1662, column: 6)
!10547 = !DILocation(line: 1662, column: 6, scope: !10497)
!10548 = !DILocation(line: 1663, column: 37, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10546, file: !1620, line: 1662, column: 27)
!10550 = !DILocation(line: 1663, column: 3, scope: !10549)
!10551 = !DILocation(line: 1664, column: 2, scope: !10549)
!10552 = !DILocation(line: 1684, column: 26, scope: !10497)
!10553 = !DILocation(line: 1684, column: 2, scope: !10497)
!10554 = !DILocation(line: 1701, column: 10, scope: !10497)
!10555 = !DILocation(line: 1701, column: 2, scope: !10497)
!10556 = !DILocation(line: 1722, column: 2, scope: !10497)
!10557 = !DILocation(line: 1724, column: 1, scope: !10497)
!10558 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1620, file: !1620, line: 651, type: !1547, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10559)
!10559 = !{!10560, !10561, !10562}
!10560 = !DILocalVariable(name: "dev", arg: 1, scope: !10558, file: !1620, line: 651, type: !1496)
!10561 = !DILocalVariable(name: "data", scope: !10558, file: !1620, line: 653, type: !9672)
!10562 = !DILocalVariable(name: "clk", scope: !10558, file: !1620, line: 654, type: !10563)
!10563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!10564 = !DILocation(line: 0, scope: !10558)
!10565 = !DILocation(line: 653, column: 38, scope: !10558)
!10566 = !DILocation(line: 656, column: 8, scope: !10558)
!10567 = !DILocation(line: 656, column: 14, scope: !10558)
!10568 = !DILocation(line: 657, column: 1, scope: !10558)
!10569 = distinct !DISubprogram(name: "device_is_ready", scope: !7518, file: !7518, line: 47, type: !10570, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10572)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{!170, !1496}
!10572 = !{!10573}
!10573 = !DILocalVariable(name: "dev", arg: 1, scope: !10569, file: !7518, line: 47, type: !1496)
!10574 = !DILocation(line: 0, scope: !10569)
!10575 = !DILocation(line: 55, column: 2, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10569, file: !7518, line: 55, column: 2)
!10577 = !{i64 2152491410}
!10578 = !DILocation(line: 56, column: 9, scope: !10569)
!10579 = !DILocation(line: 56, column: 2, scope: !10569)
!10580 = distinct !DISubprogram(name: "clock_control_on", scope: !894, file: !894, line: 123, type: !1585, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10581)
!10581 = !{!10582, !10583, !10584}
!10582 = !DILocalVariable(name: "dev", arg: 1, scope: !10580, file: !894, line: 123, type: !1496)
!10583 = !DILocalVariable(name: "sys", arg: 2, scope: !10580, file: !894, line: 124, type: !969)
!10584 = !DILocalVariable(name: "api", scope: !10580, file: !894, line: 126, type: !1578)
!10585 = !DILocation(line: 0, scope: !10580)
!10586 = !DILocation(line: 127, column: 49, scope: !10580)
!10587 = !DILocation(line: 129, column: 14, scope: !10580)
!10588 = !DILocation(line: 129, column: 9, scope: !10580)
!10589 = !DILocation(line: 129, column: 2, scope: !10580)
!10590 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1652, file: !1652, line: 342, type: !10591, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10593)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!103, !1715, !167}
!10593 = !{!10594, !10595, !10596, !10597}
!10594 = !DILocalVariable(name: "config", arg: 1, scope: !10590, file: !1652, line: 342, type: !1715)
!10595 = !DILocalVariable(name: "id", arg: 2, scope: !10590, file: !1652, line: 343, type: !167)
!10596 = !DILocalVariable(name: "ret", scope: !10590, file: !1652, line: 345, type: !103)
!10597 = !DILocalVariable(name: "state", scope: !10590, file: !1652, line: 346, type: !1655)
!10598 = !DILocation(line: 0, scope: !10590)
!10599 = !DILocation(line: 346, column: 2, scope: !10590)
!10600 = !DILocation(line: 348, column: 8, scope: !10590)
!10601 = !DILocation(line: 349, column: 10, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10590, file: !1652, line: 349, column: 6)
!10603 = !DILocation(line: 349, column: 6, scope: !10590)
!10604 = !DILocation(line: 353, column: 44, scope: !10590)
!10605 = !DILocation(line: 353, column: 9, scope: !10590)
!10606 = !DILocation(line: 353, column: 2, scope: !10590)
!10607 = !DILocation(line: 354, column: 1, scope: !10590)
!10608 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9985, file: !9985, line: 496, type: !10354, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10609)
!10609 = !{!10610, !10611}
!10610 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10608, file: !9985, line: 496, type: !1567)
!10611 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10608, file: !9985, line: 496, type: !121)
!10612 = !DILocation(line: 0, scope: !10608)
!10613 = !DILocation(line: 498, column: 3, scope: !10608)
!10614 = !DILocation(line: 499, column: 1, scope: !10608)
!10615 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9985, file: !9985, line: 849, type: !10363, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10616)
!10616 = !{!10617, !10618, !10619, !10620}
!10617 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10615, file: !9985, line: 849, type: !1567)
!10618 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10615, file: !9985, line: 849, type: !121)
!10619 = !DILocalVariable(name: "Parity", arg: 3, scope: !10615, file: !9985, line: 849, type: !121)
!10620 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10615, file: !9985, line: 850, type: !121)
!10621 = !DILocation(line: 0, scope: !10615)
!10622 = !DILocation(line: 852, column: 3, scope: !10615)
!10623 = !DILocation(line: 853, column: 3, scope: !10615)
!10624 = !DILocation(line: 854, column: 1, scope: !10615)
!10625 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9985, file: !9985, line: 1336, type: !10016, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10626)
!10626 = !{!10627}
!10627 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10625, file: !9985, line: 1336, type: !1567)
!10628 = !DILocation(line: 0, scope: !10625)
!10629 = !DILocation(line: 1338, column: 3, scope: !10625)
!10630 = !DILocation(line: 1339, column: 1, scope: !10625)
!10631 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1652, file: !1652, line: 316, type: !10632, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10634)
!10632 = !DISubroutineType(types: !10633)
!10633 = !{!103, !1715, !1655}
!10634 = !{!10635, !10636, !10637}
!10635 = !DILocalVariable(name: "config", arg: 1, scope: !10631, file: !1652, line: 317, type: !1715)
!10636 = !DILocalVariable(name: "state", arg: 2, scope: !10631, file: !1652, line: 318, type: !1655)
!10637 = !DILocalVariable(name: "reg", scope: !10631, file: !1652, line: 320, type: !22)
!10638 = !DILocation(line: 0, scope: !10631)
!10639 = !DILocation(line: 329, column: 39, scope: !10631)
!10640 = !DILocation(line: 329, column: 52, scope: !10631)
!10641 = !DILocation(line: 329, column: 9, scope: !10631)
!10642 = !DILocation(line: 329, column: 2, scope: !10631)
!10643 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !10570, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !10644)
!10644 = !{!10645}
!10645 = !DILocalVariable(name: "dev", arg: 1, scope: !10643, file: !154, line: 730, type: !1496)
!10646 = !DILocation(line: 0, scope: !10643)
!10647 = !DILocation(line: 732, column: 9, scope: !10643)
!10648 = !DILocation(line: 732, column: 2, scope: !10643)
!10649 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1813, file: !1813, line: 270, type: !1819, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10650)
!10650 = !{!10651}
!10651 = !DILocalVariable(name: "dev", arg: 1, scope: !10649, file: !1813, line: 270, type: !1821)
!10652 = !DILocation(line: 0, scope: !10649)
!10653 = !DILocation(line: 274, column: 2, scope: !10649)
!10654 = !DILocation(line: 275, column: 12, scope: !10649)
!10655 = !DILocation(line: 276, column: 15, scope: !10649)
!10656 = !DILocation(line: 277, column: 16, scope: !10649)
!10657 = !DILocation(line: 278, column: 15, scope: !10649)
!10658 = !DILocation(line: 279, column: 16, scope: !10649)
!10659 = !DILocation(line: 282, column: 2, scope: !10649)
!10660 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !528, file: !528, line: 1638, type: !5961, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10661)
!10661 = !{!10662, !10663}
!10662 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10660, file: !528, line: 1638, type: !852)
!10663 = !DILocalVariable(name: "priority", arg: 2, scope: !10660, file: !528, line: 1638, type: !121)
!10664 = !DILocation(line: 0, scope: !10660)
!10665 = !DILocation(line: 1646, column: 46, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !528, line: 1645, column: 3)
!10667 = distinct !DILexicalBlock(scope: !10660, file: !528, line: 1640, column: 7)
!10668 = !DILocation(line: 1648, column: 1, scope: !10660)
!10669 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1813, file: !1813, line: 118, type: !5864, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10670)
!10670 = !{!10671, !10672}
!10671 = !DILocalVariable(name: "arg", arg: 1, scope: !10669, file: !1813, line: 118, type: !102)
!10672 = !DILocalVariable(name: "dticks", scope: !10669, file: !1813, line: 121, type: !121)
!10673 = !DILocation(line: 0, scope: !10669)
!10674 = !DILocation(line: 124, column: 2, scope: !10669)
!10675 = !DILocation(line: 129, column: 17, scope: !10669)
!10676 = !DILocation(line: 129, column: 14, scope: !10669)
!10677 = !DILocation(line: 130, column: 15, scope: !10669)
!10678 = !DILocation(line: 145, column: 27, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10680, file: !1813, line: 132, column: 16)
!10680 = distinct !DILexicalBlock(scope: !10669, file: !1813, line: 132, column: 6)
!10681 = !DILocation(line: 145, column: 25, scope: !10679)
!10682 = !DILocation(line: 145, column: 45, scope: !10679)
!10683 = !DILocation(line: 146, column: 30, scope: !10679)
!10684 = !DILocation(line: 146, column: 20, scope: !10679)
!10685 = !DILocation(line: 147, column: 3, scope: !10679)
!10686 = !DILocation(line: 151, column: 2, scope: !10669)
!10687 = !DILocation(line: 152, column: 1, scope: !10669)
!10688 = distinct !DISubprogram(name: "elapsed", scope: !1813, file: !1813, line: 85, type: !6677, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10689)
!10689 = !{!10690, !10691, !10692}
!10690 = !DILocalVariable(name: "val1", scope: !10688, file: !1813, line: 87, type: !121)
!10691 = !DILocalVariable(name: "ctrl", scope: !10688, file: !1813, line: 88, type: !121)
!10692 = !DILocalVariable(name: "val2", scope: !10688, file: !1813, line: 89, type: !121)
!10693 = !DILocation(line: 87, column: 27, scope: !10688)
!10694 = !DILocation(line: 0, scope: !10688)
!10695 = !DILocation(line: 88, column: 27, scope: !10688)
!10696 = !DILocation(line: 89, column: 27, scope: !10688)
!10697 = !DILocation(line: 105, column: 12, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10688, file: !1813, line: 105, column: 6)
!10699 = !DILocation(line: 106, column: 6, scope: !10698)
!10700 = !DILocation(line: 107, column: 16, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10698, file: !1813, line: 106, column: 24)
!10702 = !DILocation(line: 111, column: 18, scope: !10701)
!10703 = !DILocation(line: 112, column: 2, scope: !10701)
!10704 = !DILocation(line: 114, column: 20, scope: !10688)
!10705 = !DILocation(line: 114, column: 30, scope: !10688)
!10706 = !DILocation(line: 114, column: 28, scope: !10688)
!10707 = !DILocation(line: 114, column: 2, scope: !10688)
!10708 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1813, file: !1813, line: 154, type: !10709, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10711)
!10709 = !DISubroutineType(types: !10710)
!10710 = !{null, !834, !170}
!10711 = !{!10712, !10713, !10714, !10715, !10716, !10717, !10718, !10723, !10724}
!10712 = !DILocalVariable(name: "ticks", arg: 1, scope: !10708, file: !1813, line: 154, type: !834)
!10713 = !DILocalVariable(name: "idle", arg: 2, scope: !10708, file: !1813, line: 154, type: !170)
!10714 = !DILocalVariable(name: "delay", scope: !10708, file: !1813, line: 169, type: !121)
!10715 = !DILocalVariable(name: "val1", scope: !10708, file: !1813, line: 170, type: !121)
!10716 = !DILocalVariable(name: "val2", scope: !10708, file: !1813, line: 170, type: !121)
!10717 = !DILocalVariable(name: "last_load_", scope: !10708, file: !1813, line: 171, type: !121)
!10718 = !DILocalVariable(name: "key", scope: !10708, file: !1813, line: 176, type: !10719)
!10719 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !329, line: 106, baseType: !10720)
!10720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !329, line: 32, size: 32, elements: !10721)
!10721 = !{!10722}
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10720, file: !329, line: 33, baseType: !103, size: 32)
!10723 = !DILocalVariable(name: "pending", scope: !10708, file: !1813, line: 178, type: !121)
!10724 = !DILocalVariable(name: "unannounced", scope: !10708, file: !1813, line: 185, type: !121)
!10725 = !DILocation(line: 0, scope: !10708)
!10726 = !DILocation(line: 162, column: 49, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10708, file: !1813, line: 162, column: 6)
!10728 = !DILocation(line: 163, column: 17, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10727, file: !1813, line: 162, column: 78)
!10730 = !DILocation(line: 164, column: 13, scope: !10729)
!10731 = !DILocation(line: 165, column: 3, scope: !10729)
!10732 = !DILocation(line: 171, column: 24, scope: !10708)
!10733 = !DILocation(line: 173, column: 10, scope: !10708)
!10734 = !DILocation(line: 174, column: 10, scope: !10708)
!10735 = !DILocalVariable(name: "l", arg: 1, scope: !10736, file: !329, line: 136, type: !10739)
!10736 = distinct !DISubprogram(name: "k_spin_lock", scope: !329, file: !329, line: 136, type: !10737, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10740)
!10737 = !DISubroutineType(types: !10738)
!10738 = !{!10719, !10739}
!10739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!10740 = !{!10735, !10741}
!10741 = !DILocalVariable(name: "k", scope: !10736, file: !329, line: 139, type: !10719)
!10742 = !DILocation(line: 0, scope: !10736, inlinedAt: !10743)
!10743 = distinct !DILocation(line: 176, column: 25, scope: !10708)
!10744 = !DILocation(line: 55, column: 2, scope: !10745, inlinedAt: !10749)
!10745 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10746)
!10746 = !{!10747, !10748}
!10747 = !DILocalVariable(name: "key", scope: !10745, file: !5695, line: 44, type: !32)
!10748 = !DILocalVariable(name: "tmp", scope: !10745, file: !5695, line: 53, type: !32)
!10749 = distinct !DILocation(line: 145, column: 10, scope: !10736, inlinedAt: !10743)
!10750 = !{i64 1617494}
!10751 = !DILocation(line: 0, scope: !10745, inlinedAt: !10749)
!10752 = !DILocation(line: 178, column: 21, scope: !10708)
!10753 = !DILocation(line: 180, column: 18, scope: !10708)
!10754 = !DILocation(line: 182, column: 14, scope: !10708)
!10755 = !DILocation(line: 183, column: 15, scope: !10708)
!10756 = !DILocation(line: 185, column: 39, scope: !10708)
!10757 = !DILocation(line: 185, column: 37, scope: !10708)
!10758 = !DILocation(line: 187, column: 27, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10708, file: !1813, line: 187, column: 6)
!10760 = !DILocation(line: 187, column: 6, scope: !10708)
!10761 = !DILocation(line: 202, column: 27, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10759, file: !1813, line: 195, column: 9)
!10763 = !DILocation(line: 202, column: 48, scope: !10762)
!10764 = !DILocation(line: 203, column: 9, scope: !10762)
!10765 = !DILocation(line: 204, column: 11, scope: !10762)
!10766 = !DILocation(line: 205, column: 13, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10762, file: !1813, line: 205, column: 7)
!10768 = !DILocation(line: 205, column: 7, scope: !10762)
!10769 = !DILocation(line: 0, scope: !10759)
!10770 = !DILocation(line: 212, column: 18, scope: !10708)
!10771 = !DILocation(line: 214, column: 28, scope: !10708)
!10772 = !DILocation(line: 214, column: 16, scope: !10708)
!10773 = !DILocation(line: 215, column: 15, scope: !10708)
!10774 = !DILocation(line: 227, column: 11, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10708, file: !1813, line: 227, column: 6)
!10776 = !DILocation(line: 227, column: 6, scope: !10708)
!10777 = !DILocation(line: 228, column: 15, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10775, file: !1813, line: 227, column: 19)
!10779 = !DILocation(line: 228, column: 38, scope: !10778)
!10780 = !DILocation(line: 228, column: 24, scope: !10778)
!10781 = !DILocation(line: 229, column: 2, scope: !10778)
!10782 = !DILocation(line: 230, column: 24, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10775, file: !1813, line: 229, column: 9)
!10784 = !DILocation(line: 230, column: 15, scope: !10783)
!10785 = !DILocation(line: 0, scope: !10775)
!10786 = !DILocalVariable(name: "key", arg: 2, scope: !10787, file: !329, line: 190, type: !10719)
!10787 = distinct !DISubprogram(name: "k_spin_unlock", scope: !329, file: !329, line: 189, type: !10788, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10790)
!10788 = !DISubroutineType(types: !10789)
!10789 = !{null, !10739, !10719}
!10790 = !{!10791, !10786}
!10791 = !DILocalVariable(name: "l", arg: 1, scope: !10787, file: !329, line: 189, type: !10739)
!10792 = !DILocation(line: 0, scope: !10787, inlinedAt: !10793)
!10793 = distinct !DILocation(line: 232, column: 2, scope: !10708)
!10794 = !DILocalVariable(name: "key", arg: 1, scope: !10795, file: !5695, line: 84, type: !32)
!10795 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10796)
!10796 = !{!10794}
!10797 = !DILocation(line: 0, scope: !10795, inlinedAt: !10798)
!10798 = distinct !DILocation(line: 215, column: 2, scope: !10787, inlinedAt: !10793)
!10799 = !DILocation(line: 95, column: 2, scope: !10795, inlinedAt: !10798)
!10800 = !{i64 1618311}
!10801 = !DILocation(line: 234, column: 1, scope: !10708)
!10802 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1813, file: !1813, line: 236, type: !6677, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10803)
!10803 = !{!10804, !10805}
!10804 = !DILocalVariable(name: "key", scope: !10802, file: !1813, line: 242, type: !10719)
!10805 = !DILocalVariable(name: "cyc", scope: !10802, file: !1813, line: 243, type: !121)
!10806 = !DILocation(line: 0, scope: !10736, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 242, column: 25, scope: !10802)
!10808 = !DILocation(line: 55, column: 2, scope: !10745, inlinedAt: !10809)
!10809 = distinct !DILocation(line: 145, column: 10, scope: !10736, inlinedAt: !10807)
!10810 = !DILocation(line: 0, scope: !10745, inlinedAt: !10809)
!10811 = !DILocation(line: 0, scope: !10802)
!10812 = !DILocation(line: 243, column: 17, scope: !10802)
!10813 = !DILocation(line: 243, column: 29, scope: !10802)
!10814 = !DILocation(line: 243, column: 27, scope: !10802)
!10815 = !DILocation(line: 243, column: 43, scope: !10802)
!10816 = !DILocation(line: 243, column: 41, scope: !10802)
!10817 = !DILocation(line: 0, scope: !10787, inlinedAt: !10818)
!10818 = distinct !DILocation(line: 245, column: 2, scope: !10802)
!10819 = !DILocation(line: 0, scope: !10795, inlinedAt: !10820)
!10820 = distinct !DILocation(line: 215, column: 2, scope: !10787, inlinedAt: !10818)
!10821 = !DILocation(line: 95, column: 2, scope: !10795, inlinedAt: !10820)
!10822 = !DILocation(line: 246, column: 13, scope: !10802)
!10823 = !DILocation(line: 246, column: 2, scope: !10802)
!10824 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1813, file: !1813, line: 249, type: !6677, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10825)
!10825 = !{!10826, !10827}
!10826 = !DILocalVariable(name: "key", scope: !10824, file: !1813, line: 251, type: !10719)
!10827 = !DILocalVariable(name: "ret", scope: !10824, file: !1813, line: 252, type: !121)
!10828 = !DILocation(line: 0, scope: !10736, inlinedAt: !10829)
!10829 = distinct !DILocation(line: 251, column: 25, scope: !10824)
!10830 = !DILocation(line: 55, column: 2, scope: !10745, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 145, column: 10, scope: !10736, inlinedAt: !10829)
!10832 = !DILocation(line: 0, scope: !10745, inlinedAt: !10831)
!10833 = !DILocation(line: 0, scope: !10824)
!10834 = !DILocation(line: 252, column: 17, scope: !10824)
!10835 = !DILocation(line: 252, column: 29, scope: !10824)
!10836 = !DILocation(line: 252, column: 27, scope: !10824)
!10837 = !DILocation(line: 0, scope: !10787, inlinedAt: !10838)
!10838 = distinct !DILocation(line: 254, column: 2, scope: !10824)
!10839 = !DILocation(line: 0, scope: !10795, inlinedAt: !10840)
!10840 = distinct !DILocation(line: 215, column: 2, scope: !10787, inlinedAt: !10838)
!10841 = !DILocation(line: 95, column: 2, scope: !10795, inlinedAt: !10840)
!10842 = !DILocation(line: 255, column: 2, scope: !10824)
!10843 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1813, file: !1813, line: 258, type: !3154, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !330)
!10844 = !DILocation(line: 260, column: 6, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10843, file: !1813, line: 260, column: 6)
!10846 = !DILocation(line: 260, column: 16, scope: !10845)
!10847 = !DILocation(line: 260, column: 6, scope: !10843)
!10848 = !DILocation(line: 261, column: 17, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !1813, line: 260, column: 34)
!10850 = !DILocation(line: 262, column: 2, scope: !10849)
!10851 = !DILocation(line: 263, column: 1, scope: !10843)
!10852 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1813, file: !1813, line: 265, type: !3154, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !330)
!10853 = !DILocation(line: 267, column: 16, scope: !10852)
!10854 = !DILocation(line: 268, column: 1, scope: !10852)
!10855 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10856, file: !10856, line: 9, type: !10857, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2949, retainedNodes: !10880)
!10856 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10857 = !DISubroutineType(types: !10858)
!10858 = !{!103, !10859, !167, !10879}
!10859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10860, size: 32)
!10860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10861)
!10861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1652, line: 60, size: 64, elements: !10862)
!10862 = !{!10863, !10878}
!10863 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10861, file: !1652, line: 69, baseType: !10864, size: 32)
!10864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10865, size: 32)
!10865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10866)
!10866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1652, line: 50, size: 64, elements: !10867)
!10867 = !{!10868, !10876, !10877}
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10866, file: !1652, line: 52, baseType: !10869, size: 32)
!10869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10870, size: 32)
!10870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10871)
!10871 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1663, line: 37, baseType: !10872)
!10872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1663, line: 32, size: 64, elements: !10873)
!10873 = !{!10874, !10875}
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10872, file: !1663, line: 34, baseType: !121, size: 32)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10872, file: !1663, line: 36, baseType: !121, size: 32, offset: 32)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10866, file: !1652, line: 54, baseType: !167, size: 8, offset: 32)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10866, file: !1652, line: 56, baseType: !167, size: 8, offset: 40)
!10878 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10861, file: !1652, line: 71, baseType: !167, size: 8, offset: 32)
!10879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10864, size: 32)
!10880 = !{!10881, !10882, !10883}
!10881 = !DILocalVariable(name: "config", arg: 1, scope: !10855, file: !10856, line: 9, type: !10859)
!10882 = !DILocalVariable(name: "id", arg: 2, scope: !10855, file: !10856, line: 9, type: !167)
!10883 = !DILocalVariable(name: "state", arg: 3, scope: !10855, file: !10856, line: 10, type: !10879)
!10884 = !DILocation(line: 0, scope: !10855)
!10885 = !DILocation(line: 12, column: 20, scope: !10855)
!10886 = !DILocation(line: 13, column: 27, scope: !10855)
!10887 = !DILocation(line: 13, column: 42, scope: !10855)
!10888 = !DILocation(line: 13, column: 19, scope: !10855)
!10889 = !DILocation(line: 13, column: 16, scope: !10855)
!10890 = !DILocation(line: 13, column: 2, scope: !10855)
!10891 = distinct !{!10891, !10890, !10892}
!10892 = !DILocation(line: 19, column: 2, scope: !10855)
!10893 = !DILocation(line: 14, column: 23, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !10856, line: 14, column: 7)
!10895 = distinct !DILexicalBlock(scope: !10855, file: !10856, line: 13, column: 54)
!10896 = !DILocation(line: 14, column: 10, scope: !10894)
!10897 = !DILocation(line: 18, column: 11, scope: !10895)
!10898 = !DILocation(line: 14, column: 7, scope: !10895)
!10899 = !DILocation(line: 22, column: 1, scope: !10855)
!10900 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1929, file: !1929, line: 193, type: !10901, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1848, retainedNodes: !10910)
!10901 = !DISubroutineType(types: !10902)
!10902 = !{!103, !10903, !167, !22}
!10903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10904, size: 32)
!10904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10905)
!10905 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1663, line: 37, baseType: !10906)
!10906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1663, line: 32, size: 64, elements: !10907)
!10907 = !{!10908, !10909}
!10908 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10906, file: !1663, line: 34, baseType: !121, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10906, file: !1663, line: 36, baseType: !121, size: 32, offset: 32)
!10910 = !{!10911, !10912, !10913, !10914, !10915, !10916, !10917, !10918, !10920}
!10911 = !DILocalVariable(name: "pins", arg: 1, scope: !10900, file: !1929, line: 193, type: !10903)
!10912 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10900, file: !1929, line: 193, type: !167)
!10913 = !DILocalVariable(name: "reg", arg: 3, scope: !10900, file: !1929, line: 194, type: !22)
!10914 = !DILocalVariable(name: "pin", scope: !10900, file: !1929, line: 196, type: !121)
!10915 = !DILocalVariable(name: "mux", scope: !10900, file: !1929, line: 196, type: !121)
!10916 = !DILocalVariable(name: "pin_cgf", scope: !10900, file: !1929, line: 197, type: !121)
!10917 = !DILocalVariable(name: "ret", scope: !10900, file: !1929, line: 198, type: !103)
!10918 = !DILocalVariable(name: "i", scope: !10919, file: !1929, line: 209, type: !167)
!10919 = distinct !DILexicalBlock(scope: !10900, file: !1929, line: 209, column: 2)
!10920 = !DILocalVariable(name: "gpio_out", scope: !10921, file: !1929, line: 239, type: !121)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !1929, line: 238, column: 55)
!10922 = distinct !DILexicalBlock(scope: !10923, file: !1929, line: 238, column: 14)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !1929, line: 236, column: 14)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !1929, line: 234, column: 7)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1929, line: 209, column: 41)
!10926 = distinct !DILexicalBlock(scope: !10919, file: !1929, line: 209, column: 2)
!10927 = !DILocation(line: 0, scope: !10900)
!10928 = !DILocation(line: 0, scope: !10919)
!10929 = !DILocation(line: 209, column: 25, scope: !10926)
!10930 = !DILocation(line: 209, column: 2, scope: !10919)
!10931 = distinct !{!10931, !10930, !10932}
!10932 = !DILocation(line: 259, column: 2, scope: !10919)
!10933 = !DILocation(line: 210, column: 17, scope: !10925)
!10934 = !DILocation(line: 234, column: 7, scope: !10924)
!10935 = !DILocation(line: 234, column: 33, scope: !10924)
!10936 = !DILocation(line: 234, column: 7, scope: !10925)
!10937 = !DILocation(line: 235, column: 22, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10924, file: !1929, line: 234, column: 49)
!10939 = !DILocation(line: 235, column: 29, scope: !10938)
!10940 = !DILocation(line: 236, column: 3, scope: !10938)
!10941 = !DILocation(line: 236, column: 14, scope: !10924)
!10942 = !DILocation(line: 239, column: 32, scope: !10921)
!10943 = !DILocation(line: 0, scope: !10921)
!10944 = !DILocation(line: 241, column: 8, scope: !10921)
!10945 = !DILocation(line: 246, column: 3, scope: !10921)
!10946 = !DILocation(line: 252, column: 9, scope: !10925)
!10947 = !DILocation(line: 255, column: 9, scope: !10925)
!10948 = !DILocation(line: 256, column: 11, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10925, file: !1929, line: 256, column: 7)
!10950 = !DILocation(line: 209, column: 37, scope: !10926)
!10951 = !DILocation(line: 256, column: 7, scope: !10925)
!10952 = !DILocation(line: 262, column: 1, scope: !10900)
!10953 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1929, file: !1929, line: 176, type: !10954, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1848, retainedNodes: !10956)
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!103, !121, !121, !121}
!10956 = !{!10957, !10958, !10959, !10960}
!10957 = !DILocalVariable(name: "pin", arg: 1, scope: !10953, file: !1929, line: 176, type: !121)
!10958 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10953, file: !1929, line: 176, type: !121)
!10959 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10953, file: !1929, line: 176, type: !121)
!10960 = !DILocalVariable(name: "port_device", scope: !10953, file: !1929, line: 178, type: !1859)
!10961 = !DILocation(line: 0, scope: !10953)
!10962 = !DILocation(line: 180, column: 22, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10953, file: !1929, line: 180, column: 6)
!10964 = !DILocation(line: 180, column: 6, scope: !10953)
!10965 = !DILocation(line: 180, column: 6, scope: !10963)
!10966 = !DILocation(line: 184, column: 16, scope: !10953)
!10967 = !DILocation(line: 186, column: 19, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10953, file: !1929, line: 186, column: 6)
!10969 = !DILocation(line: 186, column: 28, scope: !10968)
!10970 = !DILocation(line: 186, column: 33, scope: !10968)
!10971 = !DILocation(line: 186, column: 6, scope: !10953)
!10972 = !DILocation(line: 190, column: 43, scope: !10953)
!10973 = !DILocation(line: 190, column: 9, scope: !10953)
!10974 = !DILocation(line: 190, column: 2, scope: !10953)
!10975 = !DILocation(line: 191, column: 1, scope: !10953)
!10976 = distinct !DISubprogram(name: "device_is_ready", scope: !7518, file: !7518, line: 47, type: !10977, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1848, retainedNodes: !10979)
!10977 = !DISubroutineType(types: !10978)
!10978 = !{!170, !1859}
!10979 = !{!10980}
!10980 = !DILocalVariable(name: "dev", arg: 1, scope: !10976, file: !7518, line: 47, type: !1859)
!10981 = !DILocation(line: 0, scope: !10976)
!10982 = !DILocation(line: 55, column: 2, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10976, file: !7518, line: 55, column: 2)
!10984 = !{i64 2148851503}
!10985 = !DILocation(line: 56, column: 9, scope: !10976)
!10986 = !DILocation(line: 56, column: 2, scope: !10976)
!10987 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !10977, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1848, retainedNodes: !10988)
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "dev", arg: 1, scope: !10987, file: !154, line: 730, type: !1859)
!10990 = !DILocation(line: 0, scope: !10987)
!10991 = !DILocation(line: 732, column: 9, scope: !10987)
!10992 = !DILocation(line: 732, column: 2, scope: !10987)
!10993 = distinct !DISubprogram(name: "SystemInit", scope: !1959, file: !1959, line: 160, type: !3154, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !330)
!10994 = !DILocation(line: 170, column: 1, scope: !10993)
!10995 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1959, file: !1959, line: 210, type: !3154, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10996)
!10996 = !{!10997, !10998, !10999, !11000, !11001}
!10997 = !DILocalVariable(name: "tmp", scope: !10995, file: !1959, line: 212, type: !121)
!10998 = !DILocalVariable(name: "pllmul", scope: !10995, file: !1959, line: 212, type: !121)
!10999 = !DILocalVariable(name: "plldiv", scope: !10995, file: !1959, line: 212, type: !121)
!11000 = !DILocalVariable(name: "pllsource", scope: !10995, file: !1959, line: 212, type: !121)
!11001 = !DILocalVariable(name: "msirange", scope: !10995, file: !1959, line: 212, type: !121)
!11002 = !DILocation(line: 0, scope: !10995)
!11003 = !DILocation(line: 215, column: 14, scope: !10995)
!11004 = !DILocation(line: 217, column: 3, scope: !10995)
!11005 = !DILocation(line: 220, column: 24, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10995, file: !1959, line: 218, column: 3)
!11007 = !DILocation(line: 220, column: 52, scope: !11006)
!11008 = !DILocation(line: 221, column: 32, scope: !11006)
!11009 = !DILocation(line: 222, column: 7, scope: !11006)
!11010 = !DILocation(line: 228, column: 7, scope: !11006)
!11011 = !DILocation(line: 231, column: 21, scope: !11006)
!11012 = !DILocation(line: 232, column: 21, scope: !11006)
!11013 = !DILocation(line: 233, column: 36, scope: !11006)
!11014 = !DILocation(line: 233, column: 16, scope: !11006)
!11015 = !DILocation(line: 234, column: 24, scope: !11006)
!11016 = !DILocation(line: 234, column: 31, scope: !11006)
!11017 = !DILocation(line: 236, column: 24, scope: !11006)
!11018 = !DILocation(line: 236, column: 29, scope: !11006)
!11019 = !DILocation(line: 238, column: 21, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11006, file: !1959, line: 238, column: 11)
!11021 = !DILocation(line: 238, column: 11, scope: !11006)
!11022 = !DILocation(line: 241, column: 41, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11020, file: !1959, line: 239, column: 7)
!11024 = !DILocation(line: 241, column: 51, scope: !11023)
!11025 = !DILocation(line: 242, column: 7, scope: !11023)
!11026 = !DILocation(line: 246, column: 41, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11020, file: !1959, line: 244, column: 7)
!11028 = !DILocation(line: 246, column: 51, scope: !11027)
!11029 = !DILocation(line: 0, scope: !11006)
!11030 = !DILocation(line: 256, column: 30, scope: !10995)
!11031 = !DILocation(line: 256, column: 52, scope: !10995)
!11032 = !DILocation(line: 256, column: 9, scope: !10995)
!11033 = !DILocation(line: 258, column: 19, scope: !10995)
!11034 = !DILocation(line: 259, column: 1, scope: !10995)
!11035 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11036, file: !11036, line: 228, type: !11037, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11040)
!11036 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11037 = !DISubroutineType(types: !11038)
!11038 = !{!11039}
!11039 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2955, line: 45, baseType: !2954)
!11040 = !{!11041, !11042}
!11041 = !DILocalVariable(name: "tickstart", scope: !11035, file: !11036, line: 230, type: !121)
!11042 = !DILocalVariable(name: "status", scope: !11035, file: !11036, line: 231, type: !11039)
!11043 = !DILocation(line: 234, column: 3, scope: !11035)
!11044 = !DILocation(line: 238, column: 3, scope: !11035)
!11045 = !DILocation(line: 241, column: 15, scope: !11035)
!11046 = !DILocation(line: 0, scope: !11035)
!11047 = !DILocation(line: 244, column: 3, scope: !11035)
!11048 = !DILocation(line: 244, column: 10, scope: !11035)
!11049 = !DILocation(line: 244, column: 43, scope: !11035)
!11050 = !DILocation(line: 246, column: 10, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !11036, line: 246, column: 9)
!11052 = distinct !DILexicalBlock(scope: !11035, file: !11036, line: 245, column: 3)
!11053 = !DILocation(line: 246, column: 24, scope: !11051)
!11054 = !DILocation(line: 246, column: 37, scope: !11051)
!11055 = !DILocation(line: 246, column: 9, scope: !11052)
!11056 = distinct !{!11056, !11047, !11057}
!11057 = !DILocation(line: 250, column: 3, scope: !11035)
!11058 = !DILocation(line: 253, column: 3, scope: !11035)
!11059 = !DILocation(line: 256, column: 3, scope: !11035)
!11060 = !DILocation(line: 256, column: 10, scope: !11035)
!11061 = !DILocation(line: 256, column: 44, scope: !11035)
!11062 = !DILocation(line: 258, column: 10, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !11036, line: 258, column: 9)
!11064 = distinct !DILexicalBlock(scope: !11035, file: !11036, line: 257, column: 3)
!11065 = !DILocation(line: 258, column: 24, scope: !11063)
!11066 = !DILocation(line: 258, column: 37, scope: !11063)
!11067 = !DILocation(line: 258, column: 9, scope: !11064)
!11068 = distinct !{!11068, !11059, !11069}
!11069 = !DILocation(line: 262, column: 3, scope: !11035)
!11070 = !DILocation(line: 265, column: 19, scope: !11035)
!11071 = !DILocation(line: 268, column: 25, scope: !11035)
!11072 = !DILocation(line: 268, column: 12, scope: !11035)
!11073 = !DILocation(line: 269, column: 13, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11035, file: !11036, line: 269, column: 6)
!11075 = !DILocation(line: 269, column: 6, scope: !11035)
!11076 = !DILocation(line: 275, column: 3, scope: !11035)
!11077 = !DILocation(line: 277, column: 3, scope: !11035)
!11078 = !DILocation(line: 280, column: 15, scope: !11035)
!11079 = !DILocation(line: 283, column: 3, scope: !11035)
!11080 = !DILocation(line: 283, column: 10, scope: !11035)
!11081 = !DILocation(line: 283, column: 43, scope: !11035)
!11082 = !DILocation(line: 285, column: 10, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !11036, line: 285, column: 9)
!11084 = distinct !DILexicalBlock(scope: !11035, file: !11036, line: 284, column: 3)
!11085 = !DILocation(line: 285, column: 24, scope: !11083)
!11086 = !DILocation(line: 285, column: 37, scope: !11083)
!11087 = !DILocation(line: 285, column: 9, scope: !11084)
!11088 = distinct !{!11088, !11079, !11089}
!11089 = !DILocation(line: 289, column: 3, scope: !11035)
!11090 = !DILocation(line: 292, column: 3, scope: !11035)
!11091 = !DILocation(line: 295, column: 3, scope: !11035)
!11092 = !DILocation(line: 299, column: 3, scope: !11035)
!11093 = !DILocation(line: 305, column: 3, scope: !11035)
!11094 = !DILocation(line: 307, column: 3, scope: !11035)
!11095 = !DILocation(line: 308, column: 1, scope: !11035)
!11096 = !DISubprogram(name: "HAL_GetTick", scope: !11097, file: !11097, line: 945, type: !6677, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!11097 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11098 = !DISubprogram(name: "HAL_InitTick", scope: !11097, file: !11097, line: 932, type: !11099, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!11039, !121}
!11101 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11036, file: !11036, line: 324, type: !11102, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11126)
!11102 = !DISubroutineType(types: !11103)
!11103 = !{!11039, !11104}
!11104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11105, size: 32)
!11105 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11106, line: 283, baseType: !11107)
!11106 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11106, line: 252, size: 416, elements: !11108)
!11108 = !{!11109, !11110, !11111, !11112, !11113, !11114, !11115, !11116, !11117, !11118}
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11107, file: !11106, line: 254, baseType: !121, size: 32)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11107, file: !11106, line: 257, baseType: !121, size: 32, offset: 32)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11107, file: !11106, line: 260, baseType: !121, size: 32, offset: 64)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11107, file: !11106, line: 263, baseType: !121, size: 32, offset: 96)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11107, file: !11106, line: 266, baseType: !121, size: 32, offset: 128)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11107, file: !11106, line: 269, baseType: !121, size: 32, offset: 160)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !11107, file: !11106, line: 272, baseType: !121, size: 32, offset: 192)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !11107, file: !11106, line: 275, baseType: !121, size: 32, offset: 224)
!11117 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !11107, file: !11106, line: 278, baseType: !121, size: 32, offset: 256)
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11107, file: !11106, line: 281, baseType: !11119, size: 128, offset: 288)
!11119 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11106, line: 247, baseType: !11120)
!11120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11106, line: 234, size: 128, elements: !11121)
!11121 = !{!11122, !11123, !11124, !11125}
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11120, file: !11106, line: 236, baseType: !121, size: 32)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11120, file: !11106, line: 239, baseType: !121, size: 32, offset: 32)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !11120, file: !11106, line: 242, baseType: !121, size: 32, offset: 64)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !11120, file: !11106, line: 245, baseType: !121, size: 32, offset: 96)
!11126 = !{!11127, !11128, !11129, !11130, !11131, !11132, !11136}
!11127 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11101, file: !11036, line: 324, type: !11104)
!11128 = !DILocalVariable(name: "tickstart", scope: !11101, file: !11036, line: 326, type: !121)
!11129 = !DILocalVariable(name: "status", scope: !11101, file: !11036, line: 327, type: !11039)
!11130 = !DILocalVariable(name: "sysclk_source", scope: !11101, file: !11036, line: 328, type: !121)
!11131 = !DILocalVariable(name: "pll_config", scope: !11101, file: !11036, line: 328, type: !121)
!11132 = !DILocalVariable(name: "pwrclkchanged", scope: !11133, file: !11036, line: 613, type: !11135)
!11133 = distinct !DILexicalBlock(scope: !11134, file: !11036, line: 612, column: 3)
!11134 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 611, column: 6)
!11135 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !889, line: 181, baseType: !2965)
!11136 = !DILocalVariable(name: "tmpreg", scope: !11137, file: !11036, line: 622, type: !120)
!11137 = distinct !DILexicalBlock(scope: !11138, file: !11036, line: 622, column: 7)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !11036, line: 621, column: 5)
!11139 = distinct !DILexicalBlock(scope: !11133, file: !11036, line: 620, column: 8)
!11140 = !DILocation(line: 0, scope: !11101)
!11141 = !DILocation(line: 331, column: 24, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 331, column: 6)
!11143 = !DILocation(line: 331, column: 6, scope: !11101)
!11144 = !DILocation(line: 338, column: 19, scope: !11101)
!11145 = !DILocation(line: 339, column: 16, scope: !11101)
!11146 = !DILocation(line: 342, column: 27, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 342, column: 6)
!11148 = !DILocation(line: 342, column: 43, scope: !11147)
!11149 = !DILocation(line: 342, column: 69, scope: !11147)
!11150 = !DILocation(line: 342, column: 6, scope: !11101)
!11151 = !DILocation(line: 348, column: 23, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11153, file: !11036, line: 348, column: 8)
!11153 = distinct !DILexicalBlock(scope: !11147, file: !11036, line: 343, column: 3)
!11154 = !DILocation(line: 349, column: 8, scope: !11152)
!11155 = !DILocation(line: 349, column: 27, scope: !11152)
!11156 = !DILocation(line: 349, column: 62, scope: !11152)
!11157 = !DILocation(line: 351, column: 11, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !11036, line: 351, column: 10)
!11159 = distinct !DILexicalBlock(scope: !11152, file: !11036, line: 350, column: 5)
!11160 = !DILocation(line: 351, column: 47, scope: !11158)
!11161 = !DILocation(line: 351, column: 54, scope: !11158)
!11162 = !DILocation(line: 351, column: 77, scope: !11158)
!11163 = !DILocation(line: 351, column: 86, scope: !11158)
!11164 = !DILocation(line: 351, column: 10, scope: !11159)
!11165 = !DILocation(line: 359, column: 7, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !11036, line: 359, column: 7)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !11036, line: 359, column: 7)
!11168 = distinct !DILexicalBlock(scope: !11152, file: !11036, line: 357, column: 5)
!11169 = !DILocation(line: 359, column: 7, scope: !11167)
!11170 = !DILocation(line: 359, column: 7, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11166, file: !11036, line: 359, column: 7)
!11172 = !DILocation(line: 359, column: 7, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !11036, line: 359, column: 7)
!11174 = distinct !DILexicalBlock(scope: !11166, file: !11036, line: 359, column: 7)
!11175 = !DILocation(line: 359, column: 7, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !11036, line: 359, column: 7)
!11177 = distinct !DILexicalBlock(scope: !11174, file: !11036, line: 359, column: 7)
!11178 = !DILocation(line: 359, column: 7, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11177, file: !11036, line: 359, column: 7)
!11180 = !DILocation(line: 0, scope: !11166)
!11181 = !DILocation(line: 362, column: 29, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11168, file: !11036, line: 362, column: 10)
!11183 = !DILocation(line: 362, column: 38, scope: !11182)
!11184 = !DILocation(line: 0, scope: !11182)
!11185 = !DILocation(line: 362, column: 10, scope: !11168)
!11186 = !DILocation(line: 368, column: 15, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11182, file: !11036, line: 363, column: 7)
!11188 = !DILocation(line: 368, column: 51, scope: !11187)
!11189 = !DILocation(line: 368, column: 9, scope: !11187)
!11190 = !DILocation(line: 370, column: 15, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !11036, line: 370, column: 14)
!11192 = distinct !DILexicalBlock(scope: !11187, file: !11036, line: 369, column: 9)
!11193 = !DILocation(line: 370, column: 29, scope: !11191)
!11194 = !DILocation(line: 370, column: 43, scope: !11191)
!11195 = !DILocation(line: 370, column: 14, scope: !11192)
!11196 = distinct !{!11196, !11189, !11197}
!11197 = !DILocation(line: 374, column: 9, scope: !11187)
!11198 = !DILocation(line: 382, column: 15, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11182, file: !11036, line: 377, column: 7)
!11200 = !DILocation(line: 382, column: 51, scope: !11199)
!11201 = !DILocation(line: 382, column: 9, scope: !11199)
!11202 = !DILocation(line: 384, column: 16, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !11036, line: 384, column: 15)
!11204 = distinct !DILexicalBlock(scope: !11199, file: !11036, line: 383, column: 9)
!11205 = !DILocation(line: 384, column: 30, scope: !11203)
!11206 = !DILocation(line: 384, column: 44, scope: !11203)
!11207 = !DILocation(line: 384, column: 15, scope: !11204)
!11208 = distinct !{!11208, !11201, !11209}
!11209 = !DILocation(line: 388, column: 9, scope: !11199)
!11210 = !DILocation(line: 393, column: 27, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 393, column: 6)
!11212 = !DILocation(line: 393, column: 43, scope: !11211)
!11213 = !DILocation(line: 393, column: 69, scope: !11211)
!11214 = !DILocation(line: 393, column: 6, scope: !11101)
!11215 = !DILocation(line: 400, column: 23, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !11036, line: 400, column: 8)
!11217 = distinct !DILexicalBlock(scope: !11211, file: !11036, line: 394, column: 3)
!11218 = !DILocation(line: 401, column: 8, scope: !11216)
!11219 = !DILocation(line: 401, column: 27, scope: !11216)
!11220 = !DILocation(line: 401, column: 62, scope: !11216)
!11221 = !DILocation(line: 404, column: 11, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !11036, line: 404, column: 10)
!11223 = distinct !DILexicalBlock(scope: !11216, file: !11036, line: 402, column: 5)
!11224 = !DILocation(line: 404, column: 47, scope: !11222)
!11225 = !DILocation(line: 404, column: 54, scope: !11222)
!11226 = !DILocation(line: 404, column: 77, scope: !11222)
!11227 = !DILocation(line: 404, column: 86, scope: !11222)
!11228 = !DILocation(line: 404, column: 10, scope: !11223)
!11229 = !DILocation(line: 418, column: 29, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !11036, line: 418, column: 10)
!11231 = distinct !DILexicalBlock(scope: !11216, file: !11036, line: 416, column: 5)
!11232 = !DILocation(line: 418, column: 38, scope: !11230)
!11233 = !DILocation(line: 418, column: 10, scope: !11231)
!11234 = !DILocation(line: 421, column: 9, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11230, file: !11036, line: 419, column: 7)
!11236 = !DILocation(line: 424, column: 21, scope: !11235)
!11237 = !DILocation(line: 427, column: 9, scope: !11235)
!11238 = !DILocation(line: 427, column: 15, scope: !11235)
!11239 = !DILocation(line: 427, column: 51, scope: !11235)
!11240 = !DILocation(line: 429, column: 15, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11242, file: !11036, line: 429, column: 14)
!11242 = distinct !DILexicalBlock(scope: !11235, file: !11036, line: 428, column: 9)
!11243 = !DILocation(line: 429, column: 29, scope: !11241)
!11244 = !DILocation(line: 429, column: 43, scope: !11241)
!11245 = !DILocation(line: 429, column: 14, scope: !11242)
!11246 = distinct !{!11246, !11237, !11247}
!11247 = !DILocation(line: 433, column: 9, scope: !11235)
!11248 = !DILocation(line: 441, column: 9, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11230, file: !11036, line: 439, column: 7)
!11250 = !DILocation(line: 444, column: 21, scope: !11249)
!11251 = !DILocation(line: 447, column: 9, scope: !11249)
!11252 = !DILocation(line: 447, column: 15, scope: !11249)
!11253 = !DILocation(line: 447, column: 51, scope: !11249)
!11254 = !DILocation(line: 449, column: 15, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !11036, line: 449, column: 14)
!11256 = distinct !DILexicalBlock(scope: !11249, file: !11036, line: 448, column: 9)
!11257 = !DILocation(line: 449, column: 29, scope: !11255)
!11258 = !DILocation(line: 449, column: 43, scope: !11255)
!11259 = !DILocation(line: 449, column: 14, scope: !11256)
!11260 = distinct !{!11260, !11251, !11261}
!11261 = !DILocation(line: 453, column: 9, scope: !11249)
!11262 = !DILocation(line: 0, scope: !11216)
!11263 = !DILocation(line: 458, column: 27, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 458, column: 6)
!11265 = !DILocation(line: 458, column: 43, scope: !11264)
!11266 = !DILocation(line: 458, column: 69, scope: !11264)
!11267 = !DILocation(line: 458, column: 6, scope: !11101)
!11268 = !DILocation(line: 461, column: 22, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11270, file: !11036, line: 461, column: 8)
!11270 = distinct !DILexicalBlock(scope: !11264, file: !11036, line: 459, column: 3)
!11271 = !DILocation(line: 461, column: 8, scope: !11270)
!11272 = !DILocation(line: 463, column: 11, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11274, file: !11036, line: 463, column: 10)
!11274 = distinct !DILexicalBlock(scope: !11269, file: !11036, line: 462, column: 5)
!11275 = !DILocation(line: 463, column: 47, scope: !11273)
!11276 = !DILocation(line: 463, column: 54, scope: !11273)
!11277 = !DILocation(line: 463, column: 77, scope: !11273)
!11278 = !DILocation(line: 463, column: 86, scope: !11273)
!11279 = !DILocation(line: 463, column: 10, scope: !11274)
!11280 = !DILocation(line: 477, column: 31, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !11036, line: 477, column: 12)
!11282 = distinct !DILexicalBlock(scope: !11273, file: !11036, line: 469, column: 7)
!11283 = !DILocation(line: 477, column: 47, scope: !11281)
!11284 = !DILocation(line: 477, column: 45, scope: !11281)
!11285 = !DILocation(line: 477, column: 12, scope: !11282)
!11286 = !DILocation(line: 480, column: 14, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !11036, line: 480, column: 14)
!11288 = distinct !DILexicalBlock(scope: !11281, file: !11036, line: 478, column: 9)
!11289 = !DILocation(line: 480, column: 80, scope: !11287)
!11290 = !DILocation(line: 480, column: 14, scope: !11288)
!11291 = !DILocation(line: 486, column: 11, scope: !11288)
!11292 = !DILocation(line: 488, column: 11, scope: !11288)
!11293 = !DILocation(line: 489, column: 9, scope: !11288)
!11294 = !DILocation(line: 494, column: 11, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11281, file: !11036, line: 491, column: 9)
!11296 = !DILocation(line: 496, column: 11, scope: !11295)
!11297 = !DILocation(line: 499, column: 65, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11295, file: !11036, line: 499, column: 14)
!11299 = !DILocation(line: 499, column: 14, scope: !11298)
!11300 = !DILocation(line: 499, column: 80, scope: !11298)
!11301 = !DILocation(line: 499, column: 14, scope: !11295)
!11302 = !DILocation(line: 506, column: 67, scope: !11282)
!11303 = !DILocation(line: 506, column: 81, scope: !11282)
!11304 = !DILocation(line: 506, column: 36, scope: !11282)
!11305 = !DILocation(line: 507, column: 52, scope: !11282)
!11306 = !DILocation(line: 507, column: 74, scope: !11282)
!11307 = !DILocation(line: 507, column: 31, scope: !11282)
!11308 = !DILocation(line: 507, column: 28, scope: !11282)
!11309 = !DILocation(line: 506, column: 25, scope: !11282)
!11310 = !DILocation(line: 510, column: 31, scope: !11282)
!11311 = !DILocation(line: 510, column: 18, scope: !11282)
!11312 = !DILocation(line: 511, column: 19, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11282, file: !11036, line: 511, column: 12)
!11314 = !DILocation(line: 511, column: 12, scope: !11282)
!11315 = !DILocation(line: 523, column: 29, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !11036, line: 523, column: 10)
!11317 = distinct !DILexicalBlock(scope: !11269, file: !11036, line: 518, column: 5)
!11318 = !DILocation(line: 523, column: 38, scope: !11316)
!11319 = !DILocation(line: 523, column: 10, scope: !11317)
!11320 = !DILocation(line: 526, column: 9, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11316, file: !11036, line: 524, column: 7)
!11322 = !DILocation(line: 529, column: 21, scope: !11321)
!11323 = !DILocation(line: 532, column: 9, scope: !11321)
!11324 = !DILocation(line: 532, column: 15, scope: !11321)
!11325 = !DILocation(line: 532, column: 51, scope: !11321)
!11326 = !DILocation(line: 534, column: 15, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !11036, line: 534, column: 14)
!11328 = distinct !DILexicalBlock(scope: !11321, file: !11036, line: 533, column: 9)
!11329 = !DILocation(line: 534, column: 29, scope: !11327)
!11330 = !DILocation(line: 534, column: 42, scope: !11327)
!11331 = !DILocation(line: 534, column: 14, scope: !11328)
!11332 = distinct !{!11332, !11323, !11333}
!11333 = !DILocation(line: 538, column: 9, scope: !11321)
!11334 = !DILocation(line: 544, column: 9, scope: !11321)
!11335 = !DILocation(line: 546, column: 9, scope: !11321)
!11336 = !DILocation(line: 548, column: 7, scope: !11321)
!11337 = !DILocation(line: 552, column: 9, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11316, file: !11036, line: 550, column: 7)
!11339 = !DILocation(line: 555, column: 21, scope: !11338)
!11340 = !DILocation(line: 558, column: 9, scope: !11338)
!11341 = !DILocation(line: 558, column: 15, scope: !11338)
!11342 = !DILocation(line: 558, column: 51, scope: !11338)
!11343 = !DILocation(line: 560, column: 15, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11345, file: !11036, line: 560, column: 14)
!11345 = distinct !DILexicalBlock(scope: !11338, file: !11036, line: 559, column: 9)
!11346 = !DILocation(line: 560, column: 29, scope: !11344)
!11347 = !DILocation(line: 560, column: 42, scope: !11344)
!11348 = !DILocation(line: 560, column: 14, scope: !11345)
!11349 = distinct !{!11349, !11340, !11350}
!11350 = !DILocation(line: 564, column: 9, scope: !11338)
!11351 = !DILocation(line: 569, column: 27, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 569, column: 6)
!11353 = !DILocation(line: 569, column: 43, scope: !11352)
!11354 = !DILocation(line: 569, column: 69, scope: !11352)
!11355 = !DILocation(line: 569, column: 6, scope: !11101)
!11356 = !DILocation(line: 575, column: 27, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11036, line: 575, column: 8)
!11358 = distinct !DILexicalBlock(scope: !11352, file: !11036, line: 570, column: 3)
!11359 = !DILocation(line: 575, column: 36, scope: !11357)
!11360 = !DILocation(line: 575, column: 8, scope: !11358)
!11361 = !DILocation(line: 578, column: 7, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11357, file: !11036, line: 576, column: 5)
!11363 = !DILocation(line: 581, column: 19, scope: !11362)
!11364 = !DILocation(line: 584, column: 7, scope: !11362)
!11365 = !DILocation(line: 584, column: 13, scope: !11362)
!11366 = !DILocation(line: 584, column: 49, scope: !11362)
!11367 = !DILocation(line: 586, column: 13, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !11036, line: 586, column: 12)
!11369 = distinct !DILexicalBlock(scope: !11362, file: !11036, line: 585, column: 7)
!11370 = !DILocation(line: 586, column: 27, scope: !11368)
!11371 = !DILocation(line: 586, column: 41, scope: !11368)
!11372 = !DILocation(line: 586, column: 12, scope: !11369)
!11373 = distinct !{!11373, !11364, !11374}
!11374 = !DILocation(line: 590, column: 7, scope: !11362)
!11375 = !DILocation(line: 595, column: 7, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11357, file: !11036, line: 593, column: 5)
!11377 = !DILocation(line: 598, column: 19, scope: !11376)
!11378 = !DILocation(line: 601, column: 7, scope: !11376)
!11379 = !DILocation(line: 601, column: 13, scope: !11376)
!11380 = !DILocation(line: 601, column: 49, scope: !11376)
!11381 = !DILocation(line: 603, column: 13, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !11036, line: 603, column: 12)
!11383 = distinct !DILexicalBlock(scope: !11376, file: !11036, line: 602, column: 7)
!11384 = !DILocation(line: 603, column: 27, scope: !11382)
!11385 = !DILocation(line: 603, column: 41, scope: !11382)
!11386 = !DILocation(line: 603, column: 12, scope: !11383)
!11387 = distinct !{!11387, !11378, !11388}
!11388 = !DILocation(line: 607, column: 7, scope: !11376)
!11389 = !DILocation(line: 611, column: 27, scope: !11134)
!11390 = !DILocation(line: 611, column: 43, scope: !11134)
!11391 = !DILocation(line: 611, column: 69, scope: !11134)
!11392 = !DILocation(line: 611, column: 6, scope: !11101)
!11393 = !DILocation(line: 0, scope: !11133)
!11394 = !DILocation(line: 620, column: 8, scope: !11139)
!11395 = !DILocation(line: 620, column: 8, scope: !11133)
!11396 = !DILocation(line: 622, column: 7, scope: !11137)
!11397 = !DILocation(line: 622, column: 7, scope: !11138)
!11398 = !DILocation(line: 624, column: 5, scope: !11138)
!11399 = !DILocation(line: 626, column: 8, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11133, file: !11036, line: 626, column: 8)
!11401 = !DILocation(line: 626, column: 8, scope: !11133)
!11402 = !DILocation(line: 629, column: 7, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11400, file: !11036, line: 627, column: 5)
!11404 = !DILocation(line: 632, column: 19, scope: !11403)
!11405 = !DILocation(line: 634, column: 7, scope: !11403)
!11406 = !DILocation(line: 634, column: 13, scope: !11403)
!11407 = !DILocation(line: 636, column: 13, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !11036, line: 636, column: 12)
!11409 = distinct !DILexicalBlock(scope: !11403, file: !11036, line: 635, column: 7)
!11410 = !DILocation(line: 636, column: 27, scope: !11408)
!11411 = !DILocation(line: 636, column: 40, scope: !11408)
!11412 = !DILocation(line: 636, column: 12, scope: !11409)
!11413 = distinct !{!11413, !11405, !11414}
!11414 = !DILocation(line: 640, column: 7, scope: !11403)
!11415 = !DILocation(line: 644, column: 5, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !11036, line: 644, column: 5)
!11417 = distinct !DILexicalBlock(scope: !11133, file: !11036, line: 644, column: 5)
!11418 = !DILocation(line: 644, column: 5, scope: !11417)
!11419 = !DILocation(line: 644, column: 5, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11416, file: !11036, line: 644, column: 5)
!11421 = !DILocation(line: 644, column: 5, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !11036, line: 644, column: 5)
!11423 = distinct !DILexicalBlock(scope: !11416, file: !11036, line: 644, column: 5)
!11424 = !DILocation(line: 644, column: 5, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !11036, line: 644, column: 5)
!11426 = distinct !DILexicalBlock(scope: !11423, file: !11036, line: 644, column: 5)
!11427 = !DILocation(line: 644, column: 5, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11426, file: !11036, line: 644, column: 5)
!11429 = !DILocation(line: 0, scope: !11416)
!11430 = !DILocation(line: 646, column: 27, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11133, file: !11036, line: 646, column: 8)
!11432 = !DILocation(line: 646, column: 36, scope: !11431)
!11433 = !DILocation(line: 0, scope: !11431)
!11434 = !DILocation(line: 646, column: 8, scope: !11133)
!11435 = !DILocation(line: 652, column: 13, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11431, file: !11036, line: 647, column: 5)
!11437 = !DILocation(line: 652, column: 49, scope: !11436)
!11438 = !DILocation(line: 652, column: 7, scope: !11436)
!11439 = !DILocation(line: 654, column: 13, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !11036, line: 654, column: 12)
!11441 = distinct !DILexicalBlock(scope: !11436, file: !11036, line: 653, column: 7)
!11442 = !DILocation(line: 654, column: 27, scope: !11440)
!11443 = !DILocation(line: 654, column: 41, scope: !11440)
!11444 = !DILocation(line: 654, column: 12, scope: !11441)
!11445 = distinct !{!11445, !11438, !11446}
!11446 = !DILocation(line: 658, column: 7, scope: !11436)
!11447 = !DILocation(line: 666, column: 13, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11431, file: !11036, line: 661, column: 5)
!11449 = !DILocation(line: 666, column: 49, scope: !11448)
!11450 = !DILocation(line: 666, column: 7, scope: !11448)
!11451 = !DILocation(line: 668, column: 13, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !11036, line: 668, column: 12)
!11453 = distinct !DILexicalBlock(scope: !11448, file: !11036, line: 667, column: 7)
!11454 = !DILocation(line: 668, column: 27, scope: !11452)
!11455 = !DILocation(line: 668, column: 41, scope: !11452)
!11456 = !DILocation(line: 668, column: 12, scope: !11453)
!11457 = distinct !{!11457, !11450, !11458}
!11458 = !DILocation(line: 672, column: 7, scope: !11448)
!11459 = !DILocation(line: 676, column: 8, scope: !11133)
!11460 = !DILocation(line: 678, column: 7, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !11036, line: 677, column: 5)
!11462 = distinct !DILexicalBlock(scope: !11133, file: !11036, line: 676, column: 8)
!11463 = !DILocation(line: 679, column: 5, scope: !11461)
!11464 = !DILocation(line: 685, column: 31, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11101, file: !11036, line: 685, column: 7)
!11466 = !DILocation(line: 685, column: 41, scope: !11465)
!11467 = !DILocation(line: 685, column: 7, scope: !11101)
!11468 = !DILocation(line: 688, column: 22, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !11036, line: 688, column: 8)
!11470 = distinct !DILexicalBlock(scope: !11465, file: !11036, line: 686, column: 3)
!11471 = !DILocation(line: 688, column: 8, scope: !11470)
!11472 = !DILocation(line: 690, column: 44, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !11036, line: 690, column: 10)
!11474 = distinct !DILexicalBlock(scope: !11469, file: !11036, line: 689, column: 5)
!11475 = !DILocation(line: 0, scope: !11473)
!11476 = !DILocation(line: 690, column: 10, scope: !11474)
!11477 = !DILocation(line: 704, column: 15, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11473, file: !11036, line: 691, column: 7)
!11479 = !DILocation(line: 704, column: 51, scope: !11478)
!11480 = !DILocation(line: 704, column: 9, scope: !11478)
!11481 = !DILocation(line: 706, column: 15, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !11036, line: 706, column: 14)
!11483 = distinct !DILexicalBlock(scope: !11478, file: !11036, line: 705, column: 9)
!11484 = !DILocation(line: 706, column: 29, scope: !11482)
!11485 = !DILocation(line: 706, column: 43, scope: !11482)
!11486 = !DILocation(line: 706, column: 14, scope: !11483)
!11487 = distinct !{!11487, !11480, !11488}
!11488 = !DILocation(line: 710, column: 9, scope: !11478)
!11489 = !DILocation(line: 713, column: 9, scope: !11478)
!11490 = !DILocation(line: 717, column: 9, scope: !11478)
!11491 = !DILocation(line: 720, column: 21, scope: !11478)
!11492 = !DILocation(line: 723, column: 9, scope: !11478)
!11493 = !DILocation(line: 723, column: 15, scope: !11478)
!11494 = !DILocation(line: 723, column: 51, scope: !11478)
!11495 = !DILocation(line: 725, column: 15, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !11036, line: 725, column: 14)
!11497 = distinct !DILexicalBlock(scope: !11478, file: !11036, line: 724, column: 9)
!11498 = !DILocation(line: 725, column: 29, scope: !11496)
!11499 = !DILocation(line: 725, column: 43, scope: !11496)
!11500 = !DILocation(line: 725, column: 14, scope: !11497)
!11501 = distinct !{!11501, !11492, !11502}
!11502 = !DILocation(line: 729, column: 9, scope: !11478)
!11503 = !DILocation(line: 740, column: 15, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11473, file: !11036, line: 732, column: 7)
!11505 = !DILocation(line: 740, column: 51, scope: !11504)
!11506 = !DILocation(line: 740, column: 9, scope: !11504)
!11507 = !DILocation(line: 742, column: 15, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !11036, line: 742, column: 14)
!11509 = distinct !DILexicalBlock(scope: !11504, file: !11036, line: 741, column: 9)
!11510 = !DILocation(line: 742, column: 29, scope: !11508)
!11511 = !DILocation(line: 742, column: 43, scope: !11508)
!11512 = !DILocation(line: 742, column: 14, scope: !11509)
!11513 = distinct !{!11513, !11506, !11514}
!11514 = !DILocation(line: 746, column: 9, scope: !11504)
!11515 = !DILocation(line: 752, column: 44, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11517, file: !11036, line: 752, column: 10)
!11517 = distinct !DILexicalBlock(scope: !11469, file: !11036, line: 750, column: 5)
!11518 = !DILocation(line: 752, column: 10, scope: !11517)
!11519 = !DILocation(line: 759, column: 27, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11516, file: !11036, line: 757, column: 7)
!11521 = !DILocation(line: 760, column: 13, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11520, file: !11036, line: 760, column: 12)
!11523 = !DILocation(line: 760, column: 77, scope: !11522)
!11524 = !DILocation(line: 760, column: 51, scope: !11522)
!11525 = !DILocation(line: 760, column: 88, scope: !11522)
!11526 = !DILocation(line: 761, column: 13, scope: !11522)
!11527 = !DILocation(line: 761, column: 77, scope: !11522)
!11528 = !DILocation(line: 761, column: 51, scope: !11522)
!11529 = !DILocation(line: 761, column: 85, scope: !11522)
!11530 = !DILocation(line: 762, column: 13, scope: !11522)
!11531 = !DILocation(line: 762, column: 77, scope: !11522)
!11532 = !DILocation(line: 762, column: 51, scope: !11522)
!11533 = !DILocation(line: 760, column: 12, scope: !11520)
!11534 = !DILocation(line: 770, column: 3, scope: !11101)
!11535 = !DILocation(line: 771, column: 1, scope: !11101)
!11536 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11036, file: !11036, line: 1343, type: !11099, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11537)
!11537 = !{!11538, !11539, !11540, !11541}
!11538 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !11536, file: !11036, line: 1343, type: !121)
!11539 = !DILocalVariable(name: "vos", scope: !11536, file: !11036, line: 1345, type: !121)
!11540 = !DILocalVariable(name: "latency", scope: !11536, file: !11036, line: 1346, type: !121)
!11541 = !DILocalVariable(name: "tmpreg", scope: !11542, file: !11036, line: 1357, type: !120)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !11036, line: 1357, column: 7)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !11036, line: 1356, column: 5)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !11036, line: 1351, column: 8)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !11036, line: 1350, column: 3)
!11546 = distinct !DILexicalBlock(scope: !11536, file: !11036, line: 1349, column: 7)
!11547 = !DILocation(line: 0, scope: !11536)
!11548 = !DILocation(line: 1349, column: 7, scope: !11546)
!11549 = !DILocation(line: 1349, column: 42, scope: !11546)
!11550 = !DILocation(line: 1349, column: 7, scope: !11536)
!11551 = !DILocation(line: 1351, column: 8, scope: !11544)
!11552 = !DILocation(line: 1351, column: 8, scope: !11545)
!11553 = !DILocation(line: 1353, column: 13, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11544, file: !11036, line: 1352, column: 5)
!11555 = !DILocation(line: 1354, column: 5, scope: !11554)
!11556 = !DILocation(line: 1357, column: 7, scope: !11542)
!11557 = !DILocation(line: 1357, column: 7, scope: !11543)
!11558 = !DILocation(line: 1358, column: 13, scope: !11543)
!11559 = !DILocation(line: 1359, column: 7, scope: !11543)
!11560 = !DILocation(line: 0, scope: !11544)
!11561 = !DILocation(line: 1363, column: 13, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11545, file: !11036, line: 1363, column: 8)
!11563 = !DILocation(line: 1363, column: 46, scope: !11562)
!11564 = !DILocation(line: 1369, column: 3, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11536, file: !11036, line: 1369, column: 3)
!11566 = !DILocation(line: 1369, column: 3, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !11036, line: 1369, column: 3)
!11568 = distinct !DILexicalBlock(scope: !11565, file: !11036, line: 1369, column: 3)
!11569 = !DILocation(line: 1373, column: 6, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11536, file: !11036, line: 1373, column: 6)
!11571 = !DILocation(line: 1379, column: 1, scope: !11536)
!11572 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11036, file: !11036, line: 799, type: !11573, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11584)
!11573 = !DISubroutineType(types: !11574)
!11574 = !{!11039, !11575, !121}
!11575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11576, size: 32)
!11576 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11106, line: 304, baseType: !11577)
!11577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11106, line: 288, size: 160, elements: !11578)
!11578 = !{!11579, !11580, !11581, !11582, !11583}
!11579 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11577, file: !11106, line: 290, baseType: !121, size: 32)
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11577, file: !11106, line: 293, baseType: !121, size: 32, offset: 32)
!11581 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11577, file: !11106, line: 296, baseType: !121, size: 32, offset: 64)
!11582 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11577, file: !11106, line: 299, baseType: !121, size: 32, offset: 96)
!11583 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11577, file: !11106, line: 302, baseType: !121, size: 32, offset: 128)
!11584 = !{!11585, !11586, !11587, !11588}
!11585 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11572, file: !11036, line: 799, type: !11575)
!11586 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11572, file: !11036, line: 799, type: !121)
!11587 = !DILocalVariable(name: "tickstart", scope: !11572, file: !11036, line: 801, type: !121)
!11588 = !DILocalVariable(name: "status", scope: !11572, file: !11036, line: 802, type: !11039)
!11589 = !DILocation(line: 0, scope: !11572)
!11590 = !DILocation(line: 805, column: 24, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 805, column: 6)
!11592 = !DILocation(line: 805, column: 6, scope: !11572)
!11593 = !DILocation(line: 817, column: 17, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 817, column: 6)
!11595 = !DILocation(line: 817, column: 15, scope: !11594)
!11596 = !DILocation(line: 817, column: 6, scope: !11572)
!11597 = !DILocation(line: 820, column: 5, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11599, file: !11036, line: 820, column: 5)
!11599 = distinct !DILexicalBlock(scope: !11600, file: !11036, line: 820, column: 5)
!11600 = distinct !DILexicalBlock(scope: !11594, file: !11036, line: 818, column: 3)
!11601 = !DILocation(line: 820, column: 5, scope: !11599)
!11602 = !DILocation(line: 820, column: 5, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11598, file: !11036, line: 820, column: 5)
!11604 = !DILocation(line: 824, column: 8, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11600, file: !11036, line: 824, column: 8)
!11606 = !DILocation(line: 824, column: 34, scope: !11605)
!11607 = !DILocation(line: 824, column: 8, scope: !11600)
!11608 = !DILocation(line: 831, column: 27, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 831, column: 6)
!11610 = !DILocation(line: 831, column: 38, scope: !11609)
!11611 = !DILocation(line: 831, column: 60, scope: !11609)
!11612 = !DILocation(line: 831, column: 6, scope: !11572)
!11613 = !DILocation(line: 834, column: 5, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11609, file: !11036, line: 832, column: 3)
!11615 = !DILocation(line: 838, column: 27, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 838, column: 6)
!11617 = !DILocation(line: 835, column: 3, scope: !11614)
!11618 = !DILocation(line: 838, column: 38, scope: !11616)
!11619 = !DILocation(line: 838, column: 62, scope: !11616)
!11620 = !DILocation(line: 838, column: 6, scope: !11572)
!11621 = !DILocation(line: 843, column: 27, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11623, file: !11036, line: 843, column: 8)
!11623 = distinct !DILexicalBlock(scope: !11616, file: !11036, line: 839, column: 3)
!11624 = !DILocation(line: 843, column: 8, scope: !11623)
!11625 = !DILocation(line: 846, column: 10, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11627, file: !11036, line: 846, column: 10)
!11627 = distinct !DILexicalBlock(scope: !11622, file: !11036, line: 844, column: 5)
!11628 = !DILocation(line: 846, column: 46, scope: !11626)
!11629 = !DILocation(line: 846, column: 10, scope: !11627)
!11630 = !DILocation(line: 855, column: 10, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !11036, line: 855, column: 10)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !11036, line: 853, column: 5)
!11633 = distinct !DILexicalBlock(scope: !11622, file: !11036, line: 852, column: 13)
!11634 = !DILocation(line: 855, column: 46, scope: !11631)
!11635 = !DILocation(line: 855, column: 10, scope: !11632)
!11636 = !DILocation(line: 864, column: 10, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !11036, line: 864, column: 10)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !11036, line: 862, column: 5)
!11639 = distinct !DILexicalBlock(scope: !11633, file: !11036, line: 861, column: 13)
!11640 = !DILocation(line: 864, column: 46, scope: !11637)
!11641 = !DILocation(line: 864, column: 10, scope: !11638)
!11642 = !DILocation(line: 873, column: 10, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11644, file: !11036, line: 873, column: 10)
!11644 = distinct !DILexicalBlock(scope: !11639, file: !11036, line: 871, column: 5)
!11645 = !DILocation(line: 873, column: 46, scope: !11643)
!11646 = !DILocation(line: 873, column: 10, scope: !11644)
!11647 = !DILocation(line: 878, column: 5, scope: !11623)
!11648 = !DILocation(line: 881, column: 17, scope: !11623)
!11649 = !DILocation(line: 883, column: 27, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11623, file: !11036, line: 883, column: 8)
!11651 = !DILocation(line: 883, column: 8, scope: !11623)
!11652 = !DILocation(line: 885, column: 14, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11650, file: !11036, line: 884, column: 5)
!11654 = !DILocation(line: 885, column: 44, scope: !11653)
!11655 = !DILocation(line: 885, column: 7, scope: !11653)
!11656 = !DILocation(line: 887, column: 13, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11658, file: !11036, line: 887, column: 12)
!11658 = distinct !DILexicalBlock(scope: !11653, file: !11036, line: 886, column: 7)
!11659 = !DILocation(line: 887, column: 27, scope: !11657)
!11660 = !DILocation(line: 887, column: 41, scope: !11657)
!11661 = !DILocation(line: 887, column: 12, scope: !11658)
!11662 = distinct !{!11662, !11655, !11663}
!11663 = !DILocation(line: 891, column: 7, scope: !11653)
!11664 = !DILocation(line: 895, column: 14, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !11036, line: 894, column: 5)
!11666 = distinct !DILexicalBlock(scope: !11650, file: !11036, line: 893, column: 13)
!11667 = !DILocation(line: 895, column: 44, scope: !11665)
!11668 = !DILocation(line: 895, column: 7, scope: !11665)
!11669 = !DILocation(line: 897, column: 13, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !11036, line: 897, column: 12)
!11671 = distinct !DILexicalBlock(scope: !11665, file: !11036, line: 896, column: 7)
!11672 = !DILocation(line: 897, column: 27, scope: !11670)
!11673 = !DILocation(line: 897, column: 41, scope: !11670)
!11674 = !DILocation(line: 897, column: 12, scope: !11671)
!11675 = distinct !{!11675, !11668, !11676}
!11676 = !DILocation(line: 901, column: 7, scope: !11665)
!11677 = !DILocation(line: 905, column: 14, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !11036, line: 904, column: 5)
!11679 = distinct !DILexicalBlock(scope: !11666, file: !11036, line: 903, column: 13)
!11680 = !DILocation(line: 905, column: 44, scope: !11678)
!11681 = !DILocation(line: 905, column: 7, scope: !11678)
!11682 = !DILocation(line: 907, column: 13, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !11036, line: 907, column: 12)
!11684 = distinct !DILexicalBlock(scope: !11678, file: !11036, line: 906, column: 7)
!11685 = !DILocation(line: 907, column: 27, scope: !11683)
!11686 = !DILocation(line: 907, column: 41, scope: !11683)
!11687 = !DILocation(line: 907, column: 12, scope: !11684)
!11688 = distinct !{!11688, !11681, !11689}
!11689 = !DILocation(line: 911, column: 7, scope: !11678)
!11690 = !DILocation(line: 915, column: 13, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11679, file: !11036, line: 914, column: 5)
!11692 = !DILocation(line: 915, column: 43, scope: !11691)
!11693 = !DILocation(line: 915, column: 7, scope: !11691)
!11694 = !DILocation(line: 917, column: 13, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11696, file: !11036, line: 917, column: 12)
!11696 = distinct !DILexicalBlock(scope: !11691, file: !11036, line: 916, column: 7)
!11697 = !DILocation(line: 917, column: 27, scope: !11695)
!11698 = !DILocation(line: 917, column: 41, scope: !11695)
!11699 = !DILocation(line: 917, column: 12, scope: !11696)
!11700 = distinct !{!11700, !11693, !11701}
!11701 = !DILocation(line: 921, column: 7, scope: !11691)
!11702 = !DILocation(line: 925, column: 17, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 925, column: 6)
!11704 = !DILocation(line: 925, column: 15, scope: !11703)
!11705 = !DILocation(line: 925, column: 6, scope: !11572)
!11706 = !DILocation(line: 928, column: 5, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !11036, line: 928, column: 5)
!11708 = distinct !DILexicalBlock(scope: !11703, file: !11036, line: 926, column: 3)
!11709 = !DILocation(line: 932, column: 8, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11708, file: !11036, line: 932, column: 8)
!11711 = !DILocation(line: 932, column: 34, scope: !11710)
!11712 = !DILocation(line: 932, column: 8, scope: !11708)
!11713 = !DILocation(line: 939, column: 27, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 939, column: 6)
!11715 = !DILocation(line: 939, column: 38, scope: !11714)
!11716 = !DILocation(line: 939, column: 61, scope: !11714)
!11717 = !DILocation(line: 939, column: 6, scope: !11572)
!11718 = !DILocation(line: 942, column: 5, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11714, file: !11036, line: 940, column: 3)
!11720 = !DILocation(line: 946, column: 27, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11572, file: !11036, line: 946, column: 6)
!11722 = !DILocation(line: 943, column: 3, scope: !11719)
!11723 = !DILocation(line: 946, column: 38, scope: !11721)
!11724 = !DILocation(line: 946, column: 61, scope: !11721)
!11725 = !DILocation(line: 946, column: 6, scope: !11572)
!11726 = !DILocation(line: 949, column: 5, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !11036, line: 947, column: 3)
!11728 = !DILocation(line: 950, column: 3, scope: !11727)
!11729 = !DILocation(line: 953, column: 21, scope: !11572)
!11730 = !DILocation(line: 953, column: 70, scope: !11572)
!11731 = !DILocation(line: 953, column: 91, scope: !11572)
!11732 = !DILocation(line: 953, column: 50, scope: !11572)
!11733 = !DILocation(line: 953, column: 47, scope: !11572)
!11734 = !DILocation(line: 953, column: 19, scope: !11572)
!11735 = !DILocation(line: 956, column: 25, scope: !11572)
!11736 = !DILocation(line: 956, column: 12, scope: !11572)
!11737 = !DILocation(line: 958, column: 3, scope: !11572)
!11738 = !DILocation(line: 959, column: 1, scope: !11572)
!11739 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11036, file: !11036, line: 1083, type: !6677, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11740)
!11740 = !{!11741, !11742, !11743, !11744, !11745, !11746}
!11741 = !DILocalVariable(name: "tmpreg", scope: !11739, file: !11036, line: 1085, type: !121)
!11742 = !DILocalVariable(name: "pllm", scope: !11739, file: !11036, line: 1085, type: !121)
!11743 = !DILocalVariable(name: "plld", scope: !11739, file: !11036, line: 1085, type: !121)
!11744 = !DILocalVariable(name: "pllvco", scope: !11739, file: !11036, line: 1085, type: !121)
!11745 = !DILocalVariable(name: "msiclkrange", scope: !11739, file: !11036, line: 1085, type: !121)
!11746 = !DILocalVariable(name: "sysclockfreq", scope: !11739, file: !11036, line: 1085, type: !121)
!11747 = !DILocation(line: 1087, column: 17, scope: !11739)
!11748 = !DILocation(line: 0, scope: !11739)
!11749 = !DILocation(line: 1090, column: 3, scope: !11739)
!11750 = !DILocation(line: 1100, column: 7, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11752, file: !11036, line: 1098, column: 5)
!11752 = distinct !DILexicalBlock(scope: !11739, file: !11036, line: 1091, column: 3)
!11753 = !DILocation(line: 1104, column: 63, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11752, file: !11036, line: 1103, column: 5)
!11755 = !DILocation(line: 1104, column: 14, scope: !11754)
!11756 = !DILocation(line: 1105, column: 52, scope: !11754)
!11757 = !DILocation(line: 1105, column: 76, scope: !11754)
!11758 = !DILocation(line: 1106, column: 11, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11754, file: !11036, line: 1106, column: 11)
!11760 = !DILocation(line: 1106, column: 41, scope: !11759)
!11761 = !DILocation(line: 1106, column: 11, scope: !11754)
!11762 = !DILocation(line: 0, scope: !11759)
!11763 = !DILocation(line: 1117, column: 7, scope: !11754)
!11764 = !DILocation(line: 1122, column: 27, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11752, file: !11036, line: 1121, column: 5)
!11766 = !DILocation(line: 1122, column: 56, scope: !11765)
!11767 = !DILocation(line: 1123, column: 30, scope: !11765)
!11768 = !DILocation(line: 1124, column: 7, scope: !11765)
!11769 = !DILocation(line: 0, scope: !11752)
!11770 = !DILocation(line: 1127, column: 3, scope: !11739)
!11771 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11036, file: !11036, line: 1005, type: !8093, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11772)
!11772 = !{!11773, !11774, !11775, !11776, !11786}
!11773 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11771, file: !11036, line: 1005, type: !121)
!11774 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11771, file: !11036, line: 1005, type: !121)
!11775 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11771, file: !11036, line: 1005, type: !121)
!11776 = !DILocalVariable(name: "gpio", scope: !11771, file: !11036, line: 1007, type: !11777)
!11777 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11778, line: 64, baseType: !11779)
!11778 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11778, line: 48, size: 160, elements: !11780)
!11780 = !{!11781, !11782, !11783, !11784, !11785}
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11779, file: !11778, line: 50, baseType: !121, size: 32)
!11782 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11779, file: !11778, line: 53, baseType: !121, size: 32, offset: 32)
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11779, file: !11778, line: 56, baseType: !121, size: 32, offset: 64)
!11784 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11779, file: !11778, line: 59, baseType: !121, size: 32, offset: 96)
!11785 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11779, file: !11778, line: 62, baseType: !121, size: 32, offset: 128)
!11786 = !DILocalVariable(name: "tmpreg", scope: !11787, file: !11036, line: 1022, type: !120)
!11787 = distinct !DILexicalBlock(scope: !11771, file: !11036, line: 1022, column: 3)
!11788 = !DILocation(line: 0, scope: !11771)
!11789 = !DILocation(line: 1007, column: 3, scope: !11771)
!11790 = !DILocation(line: 1007, column: 20, scope: !11771)
!11791 = !DILocation(line: 1015, column: 8, scope: !11771)
!11792 = !DILocation(line: 1015, column: 18, scope: !11771)
!11793 = !DILocation(line: 1016, column: 8, scope: !11771)
!11794 = !DILocation(line: 1016, column: 18, scope: !11771)
!11795 = !DILocation(line: 1017, column: 8, scope: !11771)
!11796 = !DILocation(line: 1017, column: 18, scope: !11771)
!11797 = !DILocation(line: 1018, column: 8, scope: !11771)
!11798 = !DILocation(line: 1018, column: 18, scope: !11771)
!11799 = !DILocation(line: 1019, column: 8, scope: !11771)
!11800 = !DILocation(line: 1019, column: 18, scope: !11771)
!11801 = !DILocation(line: 1022, column: 3, scope: !11787)
!11802 = !DILocation(line: 1022, column: 3, scope: !11771)
!11803 = !DILocation(line: 1024, column: 3, scope: !11771)
!11804 = !DILocation(line: 1027, column: 3, scope: !11771)
!11805 = !DILocation(line: 1028, column: 1, scope: !11771)
!11806 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11778, file: !11778, line: 293, type: !11807, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{null, !3008, !11809}
!11809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11777, size: 32)
!11810 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11036, file: !11036, line: 1039, type: !3154, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11811 = !DILocation(line: 1041, column: 38, scope: !11810)
!11812 = !DILocation(line: 1042, column: 1, scope: !11810)
!11813 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11036, file: !11036, line: 1048, type: !3154, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11814 = !DILocation(line: 1050, column: 38, scope: !11813)
!11815 = !DILocation(line: 1051, column: 1, scope: !11813)
!11816 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11036, file: !11036, line: 1139, type: !6677, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11817 = !DILocation(line: 1141, column: 10, scope: !11816)
!11818 = !DILocation(line: 1141, column: 3, scope: !11816)
!11819 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11036, file: !11036, line: 1150, type: !6677, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11820 = !DILocation(line: 1153, column: 11, scope: !11819)
!11821 = !DILocation(line: 1153, column: 56, scope: !11819)
!11822 = !DILocation(line: 1153, column: 79, scope: !11819)
!11823 = !DILocation(line: 1153, column: 36, scope: !11819)
!11824 = !DILocation(line: 1153, column: 33, scope: !11819)
!11825 = !DILocation(line: 1153, column: 3, scope: !11819)
!11826 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11036, file: !11036, line: 1162, type: !6677, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11827 = !DILocation(line: 1165, column: 11, scope: !11826)
!11828 = !DILocation(line: 1165, column: 55, scope: !11826)
!11829 = !DILocation(line: 1165, column: 78, scope: !11826)
!11830 = !DILocation(line: 1165, column: 35, scope: !11826)
!11831 = !DILocation(line: 1165, column: 32, scope: !11826)
!11832 = !DILocation(line: 1165, column: 3, scope: !11826)
!11833 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11036, file: !11036, line: 1175, type: !11834, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11836)
!11834 = !DISubroutineType(types: !11835)
!11835 = !{null, !11104}
!11836 = !{!11837}
!11837 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11833, file: !11036, line: 1175, type: !11104)
!11838 = !DILocation(line: 0, scope: !11833)
!11839 = !DILocation(line: 1181, column: 22, scope: !11833)
!11840 = !DILocation(line: 1181, column: 37, scope: !11833)
!11841 = !DILocation(line: 1186, column: 12, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11833, file: !11036, line: 1186, column: 6)
!11843 = !DILocation(line: 1186, column: 15, scope: !11842)
!11844 = !DILocation(line: 1186, column: 31, scope: !11842)
!11845 = !DILocation(line: 1186, column: 6, scope: !11833)
!11846 = !DILocation(line: 1188, column: 24, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11842, file: !11036, line: 1187, column: 3)
!11848 = !DILocation(line: 1188, column: 33, scope: !11847)
!11849 = !DILocation(line: 1189, column: 3, scope: !11847)
!11850 = !DILocation(line: 1190, column: 17, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11842, file: !11036, line: 1190, column: 11)
!11852 = !DILocation(line: 1190, column: 20, scope: !11851)
!11853 = !DILocation(line: 1190, column: 35, scope: !11851)
!11854 = !DILocation(line: 0, scope: !11851)
!11855 = !DILocation(line: 1190, column: 11, scope: !11842)
!11856 = !DILocation(line: 1192, column: 33, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11851, file: !11036, line: 1191, column: 3)
!11858 = !DILocation(line: 1193, column: 3, scope: !11857)
!11859 = !DILocation(line: 1196, column: 33, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11851, file: !11036, line: 1195, column: 3)
!11861 = !DILocation(line: 1200, column: 12, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11833, file: !11036, line: 1200, column: 6)
!11863 = !DILocation(line: 1200, column: 15, scope: !11862)
!11864 = !DILocation(line: 1206, column: 24, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11862, file: !11036, line: 1205, column: 3)
!11866 = !DILocation(line: 1206, column: 33, scope: !11865)
!11867 = !DILocation(line: 1209, column: 61, scope: !11833)
!11868 = !DILocation(line: 1209, column: 88, scope: !11833)
!11869 = !DILocation(line: 1209, column: 22, scope: !11833)
!11870 = !DILocation(line: 1209, column: 42, scope: !11833)
!11871 = !DILocation(line: 1212, column: 12, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11833, file: !11036, line: 1212, column: 6)
!11873 = !DILocation(line: 1212, column: 6, scope: !11833)
!11874 = !DILocation(line: 1218, column: 24, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !11036, line: 1217, column: 3)
!11876 = !DILocation(line: 1218, column: 33, scope: !11875)
!11877 = !DILocation(line: 1221, column: 61, scope: !11833)
!11878 = !DILocation(line: 1221, column: 88, scope: !11833)
!11879 = !DILocation(line: 1221, column: 22, scope: !11833)
!11880 = !DILocation(line: 1221, column: 42, scope: !11833)
!11881 = !DILocation(line: 1222, column: 55, scope: !11833)
!11882 = !DILocation(line: 1222, column: 61, scope: !11833)
!11883 = !DILocation(line: 1222, column: 22, scope: !11833)
!11884 = !DILocation(line: 1222, column: 36, scope: !11833)
!11885 = !DILocation(line: 1225, column: 12, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11833, file: !11036, line: 1225, column: 6)
!11887 = !DILocation(line: 1225, column: 16, scope: !11886)
!11888 = !DILocation(line: 1225, column: 33, scope: !11886)
!11889 = !DILocation(line: 1225, column: 6, scope: !11833)
!11890 = !DILocation(line: 1227, column: 24, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11886, file: !11036, line: 1226, column: 3)
!11892 = !DILocation(line: 1227, column: 33, scope: !11891)
!11893 = !DILocation(line: 1228, column: 3, scope: !11891)
!11894 = !DILocation(line: 1229, column: 17, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11886, file: !11036, line: 1229, column: 11)
!11896 = !DILocation(line: 1229, column: 21, scope: !11895)
!11897 = !DILocation(line: 1229, column: 37, scope: !11895)
!11898 = !DILocation(line: 0, scope: !11895)
!11899 = !DILocation(line: 1229, column: 11, scope: !11886)
!11900 = !DILocation(line: 1231, column: 33, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11895, file: !11036, line: 1230, column: 3)
!11902 = !DILocation(line: 1232, column: 3, scope: !11901)
!11903 = !DILocation(line: 1235, column: 33, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11895, file: !11036, line: 1234, column: 3)
!11905 = !DILocation(line: 1239, column: 12, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11833, file: !11036, line: 1239, column: 6)
!11907 = !DILocation(line: 1239, column: 16, scope: !11906)
!11908 = !DILocation(line: 1245, column: 24, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11906, file: !11036, line: 1244, column: 3)
!11910 = !DILocation(line: 1245, column: 33, scope: !11909)
!11911 = !DILocation(line: 1250, column: 12, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11833, file: !11036, line: 1250, column: 6)
!11913 = !DILocation(line: 1250, column: 15, scope: !11912)
!11914 = !DILocation(line: 1250, column: 30, scope: !11912)
!11915 = !DILocation(line: 1250, column: 6, scope: !11833)
!11916 = !DILocation(line: 1256, column: 28, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11912, file: !11036, line: 1255, column: 3)
!11918 = !DILocation(line: 1256, column: 37, scope: !11917)
!11919 = !DILocation(line: 1258, column: 54, scope: !11833)
!11920 = !DILocation(line: 1258, column: 59, scope: !11833)
!11921 = !DILocation(line: 1258, column: 26, scope: !11833)
!11922 = !DILocation(line: 1258, column: 36, scope: !11833)
!11923 = !DILocation(line: 1259, column: 51, scope: !11833)
!11924 = !DILocation(line: 1259, column: 56, scope: !11833)
!11925 = !DILocation(line: 1259, column: 26, scope: !11833)
!11926 = !DILocation(line: 1259, column: 33, scope: !11833)
!11927 = !DILocation(line: 1260, column: 51, scope: !11833)
!11928 = !DILocation(line: 1260, column: 56, scope: !11833)
!11929 = !DILocation(line: 1260, column: 26, scope: !11833)
!11930 = !DILocation(line: 1260, column: 33, scope: !11833)
!11931 = !DILocation(line: 1261, column: 1, scope: !11833)
!11932 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11036, file: !11036, line: 1271, type: !11933, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !11935)
!11933 = !DISubroutineType(types: !11934)
!11934 = !{null, !11575, !925}
!11935 = !{!11936, !11937}
!11936 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11932, file: !11036, line: 1271, type: !11575)
!11937 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11932, file: !11036, line: 1271, type: !925)
!11938 = !DILocation(line: 0, scope: !11932)
!11939 = !DILocation(line: 1278, column: 22, scope: !11932)
!11940 = !DILocation(line: 1278, column: 32, scope: !11932)
!11941 = !DILocation(line: 1281, column: 53, scope: !11932)
!11942 = !DILocation(line: 1281, column: 58, scope: !11932)
!11943 = !DILocation(line: 1281, column: 22, scope: !11932)
!11944 = !DILocation(line: 1281, column: 35, scope: !11932)
!11945 = !DILocation(line: 1284, column: 54, scope: !11932)
!11946 = !DILocation(line: 1284, column: 59, scope: !11932)
!11947 = !DILocation(line: 1284, column: 22, scope: !11932)
!11948 = !DILocation(line: 1284, column: 36, scope: !11932)
!11949 = !DILocation(line: 1287, column: 55, scope: !11932)
!11950 = !DILocation(line: 1287, column: 60, scope: !11932)
!11951 = !DILocation(line: 1287, column: 22, scope: !11932)
!11952 = !DILocation(line: 1287, column: 37, scope: !11932)
!11953 = !DILocation(line: 1290, column: 56, scope: !11932)
!11954 = !DILocation(line: 1290, column: 79, scope: !11932)
!11955 = !DILocation(line: 1290, column: 22, scope: !11932)
!11956 = !DILocation(line: 1290, column: 37, scope: !11932)
!11957 = !DILocation(line: 1293, column: 16, scope: !11932)
!11958 = !DILocation(line: 1293, column: 14, scope: !11932)
!11959 = !DILocation(line: 1294, column: 1, scope: !11932)
!11960 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11036, file: !11036, line: 1301, type: !3154, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11961 = !DILocation(line: 1304, column: 6, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11960, file: !11036, line: 1304, column: 6)
!11963 = !DILocation(line: 1304, column: 6, scope: !11960)
!11964 = !DILocation(line: 1307, column: 5, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11962, file: !11036, line: 1305, column: 3)
!11966 = !DILocation(line: 1310, column: 5, scope: !11965)
!11967 = !DILocation(line: 1311, column: 3, scope: !11965)
!11968 = !DILocation(line: 1312, column: 1, scope: !11960)
!11969 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11036, file: !11036, line: 1318, type: !3154, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !330)
!11970 = !DILocation(line: 1323, column: 1, scope: !11969)
!11971 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11972, file: !11972, line: 147, type: !5719, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !11973)
!11972 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11973 = !{!11974}
!11974 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11971, file: !11972, line: 147, type: !121)
!11975 = !DILocation(line: 0, scope: !11971)
!11976 = !DILocation(line: 150, column: 3, scope: !11971)
!11977 = !DILocation(line: 151, column: 1, scope: !11971)
!11978 = distinct !DISubprogram(name: "LL_InitTick", scope: !11979, file: !11979, line: 222, type: !9175, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !11980)
!11979 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11980 = !{!11981, !11982}
!11981 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11978, file: !11979, line: 222, type: !121)
!11982 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11978, file: !11979, line: 222, type: !121)
!11983 = !DILocation(line: 0, scope: !11978)
!11984 = !DILocation(line: 225, column: 46, scope: !11978)
!11985 = !DILocation(line: 225, column: 55, scope: !11978)
!11986 = !DILocation(line: 225, column: 18, scope: !11978)
!11987 = !DILocation(line: 226, column: 18, scope: !11978)
!11988 = !DILocation(line: 227, column: 18, scope: !11978)
!11989 = !DILocation(line: 229, column: 1, scope: !11978)
!11990 = distinct !DISubprogram(name: "LL_mDelay", scope: !11972, file: !11972, line: 163, type: !5719, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !11991)
!11991 = !{!11992, !11993, !11994}
!11992 = !DILocalVariable(name: "Delay", arg: 1, scope: !11990, file: !11972, line: 163, type: !121)
!11993 = !DILocalVariable(name: "tmp", scope: !11990, file: !11972, line: 165, type: !120)
!11994 = !DILocalVariable(name: "tmpDelay", scope: !11990, file: !11972, line: 166, type: !121)
!11995 = !DILocation(line: 0, scope: !11990)
!11996 = !DILocation(line: 165, column: 3, scope: !11990)
!11997 = !DILocation(line: 165, column: 18, scope: !11990)
!11998 = !DILocation(line: 165, column: 33, scope: !11990)
!11999 = !DILocation(line: 169, column: 10, scope: !11990)
!12000 = !DILocation(line: 172, column: 15, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11990, file: !11972, line: 172, column: 6)
!12002 = !DILocation(line: 177, column: 3, scope: !11990)
!12003 = !DILocation(line: 179, column: 18, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !12005, file: !11972, line: 179, column: 8)
!12005 = distinct !DILexicalBlock(scope: !11990, file: !11972, line: 178, column: 3)
!12006 = !DILocation(line: 177, column: 19, scope: !11990)
!12007 = !DILocation(line: 184, column: 1, scope: !11990)
!12008 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11972, file: !11972, line: 227, type: !5719, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12009)
!12009 = !{!12010}
!12010 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12008, file: !11972, line: 227, type: !121)
!12011 = !DILocation(line: 0, scope: !12008)
!12012 = !DILocation(line: 230, column: 19, scope: !12008)
!12013 = !DILocation(line: 231, column: 1, scope: !12008)
!12014 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11972, file: !11972, line: 242, type: !12015, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12018)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{!12017, !121}
!12017 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !889, line: 194, baseType: !888)
!12018 = !{!12019, !12020, !12021}
!12019 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12014, file: !11972, line: 242, type: !121)
!12020 = !DILocalVariable(name: "status", scope: !12014, file: !11972, line: 244, type: !12017)
!12021 = !DILocalVariable(name: "latency", scope: !12014, file: !11972, line: 246, type: !121)
!12022 = !DILocation(line: 0, scope: !12014)
!12023 = !DILocation(line: 249, column: 25, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12014, file: !11972, line: 249, column: 7)
!12025 = !DILocation(line: 255, column: 9, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12027, file: !11972, line: 255, column: 9)
!12027 = distinct !DILexicalBlock(scope: !12024, file: !11972, line: 254, column: 3)
!12028 = !DILocation(line: 255, column: 41, scope: !12026)
!12029 = !DILocation(line: 255, column: 9, scope: !12027)
!12030 = !DILocation(line: 257, column: 21, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !11972, line: 257, column: 11)
!12032 = distinct !DILexicalBlock(scope: !12026, file: !11972, line: 256, column: 5)
!12033 = !DILocation(line: 284, column: 9, scope: !12027)
!12034 = !DILocation(line: 264, column: 14, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12026, file: !11972, line: 264, column: 14)
!12036 = !DILocation(line: 264, column: 46, scope: !12035)
!12037 = !DILocation(line: 264, column: 14, scope: !12026)
!12038 = !DILocation(line: 266, column: 21, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !11972, line: 266, column: 11)
!12040 = distinct !DILexicalBlock(scope: !12035, file: !11972, line: 265, column: 5)
!12041 = !DILocation(line: 275, column: 21, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !11972, line: 275, column: 11)
!12043 = distinct !DILexicalBlock(scope: !12035, file: !11972, line: 274, column: 5)
!12044 = !DILocation(line: 286, column: 7, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12046, file: !11972, line: 285, column: 5)
!12046 = distinct !DILexicalBlock(scope: !12027, file: !11972, line: 284, column: 9)
!12047 = !DILocation(line: 287, column: 5, scope: !12045)
!12048 = !DILocation(line: 289, column: 5, scope: !12027)
!12049 = !DILocation(line: 293, column: 9, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12027, file: !11972, line: 293, column: 9)
!12051 = !DILocation(line: 293, column: 31, scope: !12050)
!12052 = !DILocation(line: 293, column: 9, scope: !12027)
!12053 = !DILocation(line: 298, column: 3, scope: !12014)
!12054 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5733, file: !5733, line: 285, type: !6677, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12055 = !DILocation(line: 287, column: 21, scope: !12054)
!12056 = !DILocation(line: 287, column: 3, scope: !12054)
!12057 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !9174, file: !9174, line: 1897, type: !3154, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12058 = !DILocation(line: 1899, column: 3, scope: !12057)
!12059 = !DILocation(line: 1900, column: 1, scope: !12057)
!12060 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !9174, file: !9174, line: 1843, type: !5719, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12061)
!12061 = !{!12062}
!12062 = !DILocalVariable(name: "Latency", arg: 1, scope: !12060, file: !9174, line: 1843, type: !121)
!12063 = !DILocation(line: 0, scope: !12060)
!12064 = !DILocation(line: 1845, column: 3, scope: !12060)
!12065 = !DILocation(line: 1846, column: 1, scope: !12060)
!12066 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !9174, file: !9174, line: 1855, type: !6677, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12067 = !DILocation(line: 1857, column: 21, scope: !12066)
!12068 = !DILocation(line: 1857, column: 3, scope: !12066)
!12069 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11972, file: !11972, line: 323, type: !12070, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12085)
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!12017, !12072, !12078}
!12072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12073, size: 32)
!12073 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11979, line: 103, baseType: !12074)
!12074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11979, line: 90, size: 64, elements: !12075)
!12075 = !{!12076, !12077}
!12076 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12074, file: !11979, line: 92, baseType: !121, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12074, file: !11979, line: 98, baseType: !121, size: 32, offset: 32)
!12078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12079, size: 32)
!12079 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11979, line: 128, baseType: !12080)
!12080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11979, line: 108, size: 96, elements: !12081)
!12081 = !{!12082, !12083, !12084}
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12080, file: !11979, line: 110, baseType: !121, size: 32)
!12083 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12080, file: !11979, line: 116, baseType: !121, size: 32, offset: 32)
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12080, file: !11979, line: 122, baseType: !121, size: 32, offset: 64)
!12085 = !{!12086, !12087, !12088, !12089}
!12086 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12069, file: !11972, line: 323, type: !12072)
!12087 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12069, file: !11972, line: 324, type: !12078)
!12088 = !DILocalVariable(name: "status", scope: !12069, file: !11972, line: 326, type: !12017)
!12089 = !DILocalVariable(name: "pllfreq", scope: !12069, file: !11972, line: 327, type: !121)
!12090 = !DILocation(line: 0, scope: !12069)
!12091 = !DILocation(line: 330, column: 7, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12069, file: !11972, line: 330, column: 7)
!12093 = !DILocation(line: 330, column: 26, scope: !12092)
!12094 = !DILocation(line: 330, column: 7, scope: !12069)
!12095 = !DILocation(line: 333, column: 15, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !11972, line: 331, column: 3)
!12097 = !DILocation(line: 336, column: 9, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12096, file: !11972, line: 336, column: 9)
!12099 = !DILocation(line: 336, column: 30, scope: !12098)
!12100 = !DILocation(line: 336, column: 9, scope: !12096)
!12101 = !DILocation(line: 338, column: 7, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12098, file: !11972, line: 337, column: 5)
!12103 = !DILocation(line: 339, column: 7, scope: !12102)
!12104 = !DILocation(line: 339, column: 14, scope: !12102)
!12105 = !DILocation(line: 339, column: 35, scope: !12102)
!12106 = distinct !{!12106, !12103, !12107}
!12107 = !DILocation(line: 342, column: 7, scope: !12102)
!12108 = !DILocation(line: 346, column: 76, scope: !12096)
!12109 = !DILocation(line: 346, column: 105, scope: !12096)
!12110 = !DILocation(line: 346, column: 5, scope: !12096)
!12111 = !DILocation(line: 349, column: 14, scope: !12096)
!12112 = !DILocation(line: 350, column: 3, scope: !12096)
!12113 = !DILocation(line: 0, scope: !12092)
!12114 = !DILocation(line: 357, column: 3, scope: !12069)
!12115 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11972, file: !11972, line: 487, type: !12116, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12118)
!12116 = !DISubroutineType(types: !12117)
!12117 = !{!12017}
!12118 = !{!12119}
!12119 = !DILocalVariable(name: "status", scope: !12115, file: !11972, line: 489, type: !12017)
!12120 = !DILocation(line: 0, scope: !12115)
!12121 = !DILocation(line: 492, column: 7, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12115, file: !11972, line: 492, column: 7)
!12123 = !DILocation(line: 492, column: 28, scope: !12122)
!12124 = !DILocation(line: 492, column: 7, scope: !12115)
!12125 = !DILocation(line: 498, column: 3, scope: !12115)
!12126 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11972, file: !11972, line: 457, type: !12127, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12129)
!12127 = !DISubroutineType(types: !12128)
!12128 = !{!121, !121, !12072}
!12129 = !{!12130, !12131, !12132}
!12130 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12126, file: !11972, line: 457, type: !121)
!12131 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12126, file: !11972, line: 457, type: !12072)
!12132 = !DILocalVariable(name: "pllfreq", scope: !12126, file: !11972, line: 459, type: !121)
!12133 = !DILocation(line: 0, scope: !12126)
!12134 = !DILocation(line: 470, column: 68, scope: !12126)
!12135 = !DILocation(line: 470, column: 75, scope: !12126)
!12136 = !DILocation(line: 470, column: 35, scope: !12126)
!12137 = !DILocation(line: 470, column: 34, scope: !12126)
!12138 = !DILocation(line: 470, column: 32, scope: !12126)
!12139 = !DILocation(line: 475, column: 46, scope: !12126)
!12140 = !DILocation(line: 475, column: 53, scope: !12126)
!12141 = !DILocation(line: 475, column: 76, scope: !12126)
!12142 = !DILocation(line: 475, column: 21, scope: !12126)
!12143 = !DILocation(line: 478, column: 3, scope: !12126)
!12144 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7970, file: !7970, line: 612, type: !6677, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12145 = !DILocation(line: 614, column: 12, scope: !12144)
!12146 = !DILocation(line: 614, column: 11, scope: !12144)
!12147 = !DILocation(line: 614, column: 3, scope: !12144)
!12148 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7970, file: !7970, line: 592, type: !3154, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12149 = !DILocation(line: 594, column: 3, scope: !12148)
!12150 = !DILocation(line: 595, column: 1, scope: !12148)
!12151 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7970, file: !7970, line: 1219, type: !8093, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12152)
!12152 = !{!12153, !12154, !12155}
!12153 = !DILocalVariable(name: "Source", arg: 1, scope: !12151, file: !7970, line: 1219, type: !121)
!12154 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !12151, file: !7970, line: 1219, type: !121)
!12155 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !12151, file: !7970, line: 1219, type: !121)
!12156 = !DILocation(line: 0, scope: !12151)
!12157 = !DILocation(line: 1221, column: 3, scope: !12151)
!12158 = !DILocation(line: 1222, column: 1, scope: !12151)
!12159 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11972, file: !11972, line: 510, type: !12160, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12162)
!12160 = !DISubroutineType(types: !12161)
!12161 = !{!12017, !121, !12078}
!12162 = !{!12163, !12164, !12165, !12166}
!12163 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12159, file: !11972, line: 510, type: !121)
!12164 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12159, file: !11972, line: 510, type: !12078)
!12165 = !DILocalVariable(name: "status", scope: !12159, file: !11972, line: 512, type: !12017)
!12166 = !DILocalVariable(name: "hclk_frequency", scope: !12159, file: !11972, line: 513, type: !121)
!12167 = !DILocation(line: 0, scope: !12159)
!12168 = !DILocation(line: 520, column: 20, scope: !12159)
!12169 = !DILocation(line: 523, column: 7, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12159, file: !11972, line: 523, column: 7)
!12171 = !DILocation(line: 523, column: 23, scope: !12170)
!12172 = !DILocation(line: 523, column: 7, scope: !12159)
!12173 = !DILocation(line: 526, column: 14, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12170, file: !11972, line: 524, column: 3)
!12175 = !DILocation(line: 530, column: 14, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12159, file: !11972, line: 530, column: 7)
!12177 = !DILocation(line: 530, column: 7, scope: !12159)
!12178 = !DILocation(line: 533, column: 5, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12176, file: !11972, line: 531, column: 3)
!12180 = !DILocation(line: 534, column: 5, scope: !12179)
!12181 = !DILocation(line: 534, column: 12, scope: !12179)
!12182 = !DILocation(line: 534, column: 33, scope: !12179)
!12183 = distinct !{!12183, !12180, !12184}
!12184 = !DILocation(line: 537, column: 5, scope: !12179)
!12185 = !DILocation(line: 540, column: 49, scope: !12179)
!12186 = !DILocation(line: 540, column: 5, scope: !12179)
!12187 = !DILocation(line: 541, column: 5, scope: !12179)
!12188 = !DILocation(line: 542, column: 5, scope: !12179)
!12189 = !DILocation(line: 542, column: 12, scope: !12179)
!12190 = !DILocation(line: 542, column: 37, scope: !12179)
!12191 = distinct !{!12191, !12188, !12192}
!12192 = !DILocation(line: 545, column: 5, scope: !12179)
!12193 = !DILocation(line: 548, column: 50, scope: !12179)
!12194 = !DILocation(line: 548, column: 5, scope: !12179)
!12195 = !DILocation(line: 549, column: 50, scope: !12179)
!12196 = !DILocation(line: 549, column: 5, scope: !12179)
!12197 = !DILocation(line: 550, column: 3, scope: !12179)
!12198 = !DILocation(line: 553, column: 7, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12159, file: !11972, line: 553, column: 7)
!12200 = !DILocation(line: 553, column: 23, scope: !12199)
!12201 = !DILocation(line: 553, column: 7, scope: !12159)
!12202 = !DILocation(line: 556, column: 14, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12199, file: !11972, line: 554, column: 3)
!12204 = !DILocation(line: 557, column: 3, scope: !12203)
!12205 = !DILocation(line: 560, column: 14, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12159, file: !11972, line: 560, column: 7)
!12207 = !DILocation(line: 560, column: 7, scope: !12159)
!12208 = !DILocation(line: 562, column: 5, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12206, file: !11972, line: 561, column: 3)
!12210 = !DILocation(line: 563, column: 3, scope: !12209)
!12211 = !DILocation(line: 565, column: 3, scope: !12159)
!12212 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7970, file: !7970, line: 1169, type: !3154, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12213 = !DILocation(line: 1171, column: 3, scope: !12212)
!12214 = !DILocation(line: 1172, column: 1, scope: !12212)
!12215 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7970, file: !7970, line: 1190, type: !6677, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12216 = !DILocation(line: 1192, column: 12, scope: !12215)
!12217 = !DILocation(line: 1192, column: 11, scope: !12215)
!12218 = !DILocation(line: 1192, column: 3, scope: !12215)
!12219 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7970, file: !7970, line: 944, type: !5719, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12220)
!12220 = !{!12221}
!12221 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12219, file: !7970, line: 944, type: !121)
!12222 = !DILocation(line: 0, scope: !12219)
!12223 = !DILocation(line: 946, column: 3, scope: !12219)
!12224 = !DILocation(line: 947, column: 1, scope: !12219)
!12225 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7970, file: !7970, line: 910, type: !5719, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12226)
!12226 = !{!12227}
!12227 = !DILocalVariable(name: "Source", arg: 1, scope: !12225, file: !7970, line: 910, type: !121)
!12228 = !DILocation(line: 0, scope: !12225)
!12229 = !DILocation(line: 912, column: 3, scope: !12225)
!12230 = !DILocation(line: 913, column: 1, scope: !12225)
!12231 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7970, file: !7970, line: 924, type: !6677, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12232 = !DILocation(line: 926, column: 21, scope: !12231)
!12233 = !DILocation(line: 926, column: 3, scope: !12231)
!12234 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7970, file: !7970, line: 960, type: !5719, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12235)
!12235 = !{!12236}
!12236 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12234, file: !7970, line: 960, type: !121)
!12237 = !DILocation(line: 0, scope: !12234)
!12238 = !DILocation(line: 962, column: 3, scope: !12234)
!12239 = !DILocation(line: 963, column: 1, scope: !12234)
!12240 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7970, file: !7970, line: 976, type: !5719, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12241)
!12241 = !{!12242}
!12242 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12240, file: !7970, line: 976, type: !121)
!12243 = !DILocation(line: 0, scope: !12240)
!12244 = !DILocation(line: 978, column: 3, scope: !12240)
!12245 = !DILocation(line: 979, column: 1, scope: !12240)
!12246 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11972, file: !11972, line: 385, type: !12247, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !12249)
!12247 = !DISubroutineType(types: !12248)
!12248 = !{!12017, !121, !121, !12072, !12078}
!12249 = !{!12250, !12251, !12252, !12253, !12254, !12255}
!12250 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12246, file: !11972, line: 385, type: !121)
!12251 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12246, file: !11972, line: 385, type: !121)
!12252 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12246, file: !11972, line: 386, type: !12072)
!12253 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12246, file: !11972, line: 386, type: !12078)
!12254 = !DILocalVariable(name: "status", scope: !12246, file: !11972, line: 388, type: !12017)
!12255 = !DILocalVariable(name: "pllfreq", scope: !12246, file: !11972, line: 389, type: !121)
!12256 = !DILocation(line: 0, scope: !12246)
!12257 = !DILocation(line: 396, column: 7, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12246, file: !11972, line: 396, column: 7)
!12259 = !DILocation(line: 396, column: 26, scope: !12258)
!12260 = !DILocation(line: 396, column: 7, scope: !12246)
!12261 = !DILocation(line: 400, column: 15, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12258, file: !11972, line: 397, column: 3)
!12263 = !DILocation(line: 403, column: 9, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12262, file: !11972, line: 403, column: 9)
!12265 = !DILocation(line: 403, column: 30, scope: !12264)
!12266 = !DILocation(line: 403, column: 9, scope: !12262)
!12267 = !DILocation(line: 406, column: 21, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !11972, line: 406, column: 11)
!12269 = distinct !DILexicalBlock(scope: !12264, file: !11972, line: 404, column: 5)
!12270 = !DILocation(line: 406, column: 11, scope: !12269)
!12271 = !DILocation(line: 408, column: 9, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12268, file: !11972, line: 407, column: 7)
!12273 = !DILocation(line: 409, column: 7, scope: !12272)
!12274 = !DILocation(line: 412, column: 9, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12268, file: !11972, line: 411, column: 7)
!12276 = !DILocation(line: 416, column: 7, scope: !12269)
!12277 = !DILocation(line: 417, column: 7, scope: !12269)
!12278 = !DILocation(line: 417, column: 14, scope: !12269)
!12279 = !DILocation(line: 417, column: 35, scope: !12269)
!12280 = distinct !{!12280, !12277, !12281}
!12281 = !DILocation(line: 420, column: 7, scope: !12269)
!12282 = !DILocation(line: 424, column: 78, scope: !12262)
!12283 = !DILocation(line: 424, column: 107, scope: !12262)
!12284 = !DILocation(line: 424, column: 7, scope: !12262)
!12285 = !DILocation(line: 427, column: 14, scope: !12262)
!12286 = !DILocation(line: 428, column: 3, scope: !12262)
!12287 = !DILocation(line: 0, scope: !12258)
!12288 = !DILocation(line: 435, column: 3, scope: !12246)
!12289 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7970, file: !7970, line: 545, type: !6677, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12290 = !DILocation(line: 547, column: 12, scope: !12289)
!12291 = !DILocation(line: 547, column: 11, scope: !12289)
!12292 = !DILocation(line: 547, column: 3, scope: !12289)
!12293 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7970, file: !7970, line: 505, type: !3154, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12294 = !DILocation(line: 507, column: 3, scope: !12293)
!12295 = !DILocation(line: 508, column: 1, scope: !12293)
!12296 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7970, file: !7970, line: 515, type: !3154, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12297 = !DILocation(line: 517, column: 3, scope: !12296)
!12298 = !DILocation(line: 518, column: 1, scope: !12296)
!12299 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7970, file: !7970, line: 525, type: !3154, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !330)
!12300 = !DILocation(line: 527, column: 3, scope: !12299)
!12301 = !DILocation(line: 528, column: 1, scope: !12299)
!12302 = distinct !DISubprogram(name: "z_device_state_init", scope: !12303, file: !12303, line: 23, type: !3154, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12304)
!12303 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12304 = !{!12305}
!12305 = !DILocalVariable(name: "dev", scope: !12302, file: !12303, line: 25, type: !12306)
!12306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12307, size: 32)
!12307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12308)
!12308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !12309)
!12309 = !{!12310, !12311, !12312, !12313, !12319, !12320}
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12308, file: !154, line: 380, baseType: !157, size: 32)
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12308, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!12312 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12308, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!12313 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12308, file: !154, line: 386, baseType: !12314, size: 32, offset: 96)
!12314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12315, size: 32)
!12315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !12316)
!12316 = !{!12317, !12318}
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12315, file: !154, line: 359, baseType: !167, size: 8)
!12318 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12315, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12308, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12308, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!12321 = !DILocation(line: 0, scope: !12302)
!12322 = !DILocation(line: 31, column: 1, scope: !12302)
!12323 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12303, file: !12303, line: 33, type: !12324, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12326)
!12324 = !DISubroutineType(types: !12325)
!12325 = !{!12306, !157}
!12326 = !{!12327, !12328}
!12327 = !DILocalVariable(name: "name", arg: 1, scope: !12323, file: !12303, line: 33, type: !157)
!12328 = !DILocalVariable(name: "dev", scope: !12323, file: !12303, line: 35, type: !12306)
!12329 = !DILocation(line: 0, scope: !12323)
!12330 = !DILocation(line: 40, column: 12, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12323, file: !12303, line: 40, column: 6)
!12332 = !DILocation(line: 40, column: 21, scope: !12331)
!12333 = !DILocation(line: 40, column: 25, scope: !12331)
!12334 = !DILocation(line: 40, column: 33, scope: !12331)
!12335 = !DILocation(line: 40, column: 6, scope: !12323)
!12336 = !DILocation(line: 55, column: 2, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12323, file: !12303, line: 55, column: 2)
!12338 = !DILocation(line: 50, column: 7, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !12303, line: 50, column: 7)
!12340 = distinct !DILexicalBlock(scope: !12341, file: !12303, line: 49, column: 57)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !12303, line: 49, column: 2)
!12342 = distinct !DILexicalBlock(scope: !12323, file: !12303, line: 49, column: 2)
!12343 = !DILocation(line: 50, column: 30, scope: !12339)
!12344 = !DILocation(line: 50, column: 39, scope: !12339)
!12345 = !DILocation(line: 50, column: 44, scope: !12339)
!12346 = !DILocation(line: 50, column: 7, scope: !12340)
!12347 = !DILocation(line: 49, column: 53, scope: !12341)
!12348 = !DILocation(line: 49, column: 33, scope: !12341)
!12349 = !DILocation(line: 49, column: 2, scope: !12342)
!12350 = distinct !{!12350, !12349, !12351}
!12351 = !DILocation(line: 53, column: 2, scope: !12342)
!12352 = !DILocation(line: 56, column: 7, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !12303, line: 56, column: 7)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !12303, line: 55, column: 57)
!12355 = distinct !DILexicalBlock(scope: !12337, file: !12303, line: 55, column: 2)
!12356 = !DILocation(line: 56, column: 30, scope: !12353)
!12357 = !DILocation(line: 56, column: 52, scope: !12353)
!12358 = !DILocation(line: 56, column: 34, scope: !12353)
!12359 = !DILocation(line: 56, column: 58, scope: !12353)
!12360 = !DILocation(line: 56, column: 7, scope: !12354)
!12361 = !DILocation(line: 55, column: 53, scope: !12355)
!12362 = !DILocation(line: 55, column: 33, scope: !12355)
!12363 = distinct !{!12363, !12336, !12364}
!12364 = !DILocation(line: 59, column: 2, scope: !12337)
!12365 = !DILocation(line: 62, column: 1, scope: !12323)
!12366 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12303, file: !12303, line: 93, type: !12367, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12369)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!170, !12306}
!12369 = !{!12370}
!12370 = !DILocalVariable(name: "dev", arg: 1, scope: !12366, file: !12303, line: 93, type: !12306)
!12371 = !DILocation(line: 0, scope: !12366)
!12372 = !DILocation(line: 99, column: 10, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12366, file: !12303, line: 99, column: 6)
!12374 = !DILocation(line: 99, column: 6, scope: !12366)
!12375 = !DILocation(line: 103, column: 14, scope: !12366)
!12376 = !DILocation(line: 103, column: 21, scope: !12366)
!12377 = !DILocation(line: 103, column: 33, scope: !12366)
!12378 = !DILocation(line: 103, column: 49, scope: !12366)
!12379 = !DILocation(line: 103, column: 58, scope: !12366)
!12380 = !DILocation(line: 104, column: 1, scope: !12366)
!12381 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12303, file: !12303, line: 87, type: !12382, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12385)
!12382 = !DISubroutineType(types: !12383)
!12383 = !{!217, !12384}
!12384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12306, size: 32)
!12385 = !{!12386}
!12386 = !DILocalVariable(name: "devices", arg: 1, scope: !12381, file: !12303, line: 87, type: !12384)
!12387 = !DILocation(line: 0, scope: !12381)
!12388 = !DILocation(line: 89, column: 11, scope: !12381)
!12389 = !DILocation(line: 90, column: 2, scope: !12381)
!12390 = distinct !DISubprogram(name: "device_required_foreach", scope: !12303, file: !12303, line: 125, type: !12391, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12397)
!12391 = !DISubroutineType(types: !12392)
!12392 = !{!103, !12306, !12393, !102}
!12393 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !154, line: 471, baseType: !12394)
!12394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12395, size: 32)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{!103, !12306, !102}
!12397 = !{!12398, !12399, !12400, !12401, !12402}
!12398 = !DILocalVariable(name: "dev", arg: 1, scope: !12390, file: !12303, line: 125, type: !12306)
!12399 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12390, file: !12303, line: 126, type: !12393)
!12400 = !DILocalVariable(name: "context", arg: 3, scope: !12390, file: !12303, line: 127, type: !102)
!12401 = !DILocalVariable(name: "handle_count", scope: !12390, file: !12303, line: 129, type: !217)
!12402 = !DILocalVariable(name: "handles", scope: !12390, file: !12303, line: 130, type: !173)
!12403 = !DILocation(line: 0, scope: !12390)
!12404 = !DILocation(line: 129, column: 2, scope: !12390)
!12405 = !DILocation(line: 129, column: 9, scope: !12390)
!12406 = !DILocation(line: 130, column: 35, scope: !12390)
!12407 = !DILocation(line: 132, column: 33, scope: !12390)
!12408 = !DILocation(line: 132, column: 9, scope: !12390)
!12409 = !DILocation(line: 133, column: 1, scope: !12390)
!12410 = !DILocation(line: 132, column: 2, scope: !12390)
!12411 = distinct !DISubprogram(name: "device_required_handles_get", scope: !154, file: !154, line: 493, type: !12412, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12414)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!173, !12306, !2616}
!12414 = !{!12415, !12416, !12417, !12418}
!12415 = !DILocalVariable(name: "dev", arg: 1, scope: !12411, file: !154, line: 493, type: !12306)
!12416 = !DILocalVariable(name: "count", arg: 2, scope: !12411, file: !154, line: 493, type: !2616)
!12417 = !DILocalVariable(name: "rv", scope: !12411, file: !154, line: 495, type: !173)
!12418 = !DILocalVariable(name: "i", scope: !12419, file: !154, line: 498, type: !217)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !154, line: 497, column: 18)
!12420 = distinct !DILexicalBlock(scope: !12411, file: !154, line: 497, column: 6)
!12421 = !DILocation(line: 0, scope: !12411)
!12422 = !DILocation(line: 495, column: 35, scope: !12411)
!12423 = !DILocation(line: 497, column: 9, scope: !12420)
!12424 = !DILocation(line: 497, column: 6, scope: !12411)
!12425 = !DILocation(line: 0, scope: !12419)
!12426 = !DILocation(line: 500, column: 11, scope: !12419)
!12427 = !DILocation(line: 500, column: 40, scope: !12419)
!12428 = !DILocation(line: 502, column: 4, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12419, file: !154, line: 501, column: 40)
!12430 = distinct !{!12430, !12431, !12432}
!12431 = !DILocation(line: 500, column: 3, scope: !12419)
!12432 = !DILocation(line: 503, column: 3, scope: !12419)
!12433 = !DILocation(line: 504, column: 10, scope: !12419)
!12434 = !DILocation(line: 505, column: 2, scope: !12419)
!12435 = !DILocation(line: 507, column: 2, scope: !12411)
!12436 = distinct !DISubprogram(name: "device_visitor", scope: !12303, file: !12303, line: 106, type: !12437, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12439)
!12437 = !DISubroutineType(types: !12438)
!12438 = !{!103, !173, !217, !12393, !102}
!12439 = !{!12440, !12441, !12442, !12443, !12444, !12446, !12449, !12450}
!12440 = !DILocalVariable(name: "handles", arg: 1, scope: !12436, file: !12303, line: 106, type: !173)
!12441 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12436, file: !12303, line: 107, type: !217)
!12442 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12436, file: !12303, line: 108, type: !12393)
!12443 = !DILocalVariable(name: "context", arg: 4, scope: !12436, file: !12303, line: 109, type: !102)
!12444 = !DILocalVariable(name: "i", scope: !12445, file: !12303, line: 112, type: !217)
!12445 = distinct !DILexicalBlock(scope: !12436, file: !12303, line: 112, column: 2)
!12446 = !DILocalVariable(name: "dh", scope: !12447, file: !12303, line: 113, type: !175)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !12303, line: 112, column: 44)
!12448 = distinct !DILexicalBlock(scope: !12445, file: !12303, line: 112, column: 2)
!12449 = !DILocalVariable(name: "rdev", scope: !12447, file: !12303, line: 114, type: !12306)
!12450 = !DILocalVariable(name: "rc", scope: !12447, file: !12303, line: 115, type: !103)
!12451 = !DILocation(line: 0, scope: !12436)
!12452 = !DILocation(line: 0, scope: !12445)
!12453 = !DILocation(line: 112, column: 23, scope: !12448)
!12454 = !DILocation(line: 112, column: 2, scope: !12445)
!12455 = distinct !{!12455, !12454, !12456}
!12456 = !DILocation(line: 120, column: 2, scope: !12445)
!12457 = !DILocation(line: 113, column: 24, scope: !12447)
!12458 = !DILocation(line: 0, scope: !12447)
!12459 = !DILocation(line: 114, column: 31, scope: !12447)
!12460 = !DILocation(line: 115, column: 12, scope: !12447)
!12461 = !DILocation(line: 117, column: 10, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12447, file: !12303, line: 117, column: 7)
!12463 = !DILocation(line: 112, column: 39, scope: !12448)
!12464 = !DILocation(line: 123, column: 1, scope: !12436)
!12465 = distinct !DISubprogram(name: "device_from_handle", scope: !154, file: !154, line: 439, type: !12466, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12468)
!12466 = !DISubroutineType(types: !12467)
!12467 = !{!12306, !175}
!12468 = !{!12469, !12470, !12471}
!12469 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12465, file: !154, line: 439, type: !175)
!12470 = !DILocalVariable(name: "dev", scope: !12465, file: !154, line: 443, type: !12306)
!12471 = !DILocalVariable(name: "numdev", scope: !12465, file: !154, line: 444, type: !217)
!12472 = !DILocation(line: 0, scope: !12465)
!12473 = !DILocation(line: 446, column: 7, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12465, file: !154, line: 446, column: 6)
!12475 = !DILocation(line: 446, column: 18, scope: !12474)
!12476 = !DILocation(line: 446, column: 23, scope: !12474)
!12477 = !DILocation(line: 450, column: 2, scope: !12465)
!12478 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12303, file: !12303, line: 135, type: !12391, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12479)
!12479 = !{!12480, !12481, !12482, !12483, !12484}
!12480 = !DILocalVariable(name: "dev", arg: 1, scope: !12478, file: !12303, line: 135, type: !12306)
!12481 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12478, file: !12303, line: 136, type: !12393)
!12482 = !DILocalVariable(name: "context", arg: 3, scope: !12478, file: !12303, line: 137, type: !102)
!12483 = !DILocalVariable(name: "handle_count", scope: !12478, file: !12303, line: 139, type: !217)
!12484 = !DILocalVariable(name: "handles", scope: !12478, file: !12303, line: 140, type: !173)
!12485 = !DILocation(line: 0, scope: !12478)
!12486 = !DILocation(line: 139, column: 2, scope: !12478)
!12487 = !DILocation(line: 139, column: 9, scope: !12478)
!12488 = !DILocation(line: 140, column: 35, scope: !12478)
!12489 = !DILocation(line: 142, column: 33, scope: !12478)
!12490 = !DILocation(line: 142, column: 9, scope: !12478)
!12491 = !DILocation(line: 143, column: 1, scope: !12478)
!12492 = !DILocation(line: 142, column: 2, scope: !12478)
!12493 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !154, file: !154, line: 573, type: !12412, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !12494)
!12494 = !{!12495, !12496, !12497, !12498, !12499}
!12495 = !DILocalVariable(name: "dev", arg: 1, scope: !12493, file: !154, line: 573, type: !12306)
!12496 = !DILocalVariable(name: "count", arg: 2, scope: !12493, file: !154, line: 573, type: !2616)
!12497 = !DILocalVariable(name: "rv", scope: !12493, file: !154, line: 575, type: !173)
!12498 = !DILocalVariable(name: "region", scope: !12493, file: !154, line: 576, type: !217)
!12499 = !DILocalVariable(name: "i", scope: !12493, file: !154, line: 577, type: !217)
!12500 = !DILocation(line: 0, scope: !12493)
!12501 = !DILocation(line: 575, column: 35, scope: !12493)
!12502 = !DILocation(line: 579, column: 9, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12493, file: !154, line: 579, column: 6)
!12504 = !DILocation(line: 579, column: 6, scope: !12493)
!12505 = !DILocation(line: 582, column: 8, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !154, line: 582, column: 8)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !154, line: 581, column: 23)
!12508 = distinct !DILexicalBlock(scope: !12503, file: !154, line: 579, column: 18)
!12509 = !DILocation(line: 582, column: 12, scope: !12506)
!12510 = !DILocation(line: 585, column: 6, scope: !12507)
!12511 = !DILocation(line: 0, scope: !12508)
!12512 = !DILocation(line: 581, column: 17, scope: !12508)
!12513 = !DILocation(line: 581, column: 3, scope: !12508)
!12514 = !DILocation(line: 588, column: 10, scope: !12508)
!12515 = !DILocation(line: 588, column: 16, scope: !12508)
!12516 = !DILocation(line: 589, column: 4, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12508, file: !154, line: 588, column: 39)
!12518 = !DILocation(line: 588, column: 3, scope: !12508)
!12519 = distinct !{!12519, !12518, !12520}
!12520 = !DILocation(line: 590, column: 3, scope: !12508)
!12521 = !DILocation(line: 591, column: 10, scope: !12508)
!12522 = !DILocation(line: 592, column: 2, scope: !12508)
!12523 = !DILocation(line: 575, column: 25, scope: !12493)
!12524 = !DILocation(line: 594, column: 2, scope: !12493)
!12525 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1972, file: !1972, line: 49, type: !12526, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1969, retainedNodes: !330)
!12526 = !DISubroutineType(types: !12527)
!12527 = !{!2610}
!12528 = !DILocation(line: 51, column: 10, scope: !12525)
!12529 = !DILocation(line: 51, column: 20, scope: !12525)
!12530 = !DILocation(line: 51, column: 2, scope: !12525)
!12531 = distinct !DISubprogram(name: "coredump", scope: !3078, file: !3078, line: 209, type: !12532, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12678)
!12532 = !DISubroutineType(types: !12533)
!12533 = !{null, !32, !12534, !12578}
!12534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12535, size: 32)
!12535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12536)
!12536 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2741, line: 141, baseType: !12537)
!12537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2741, line: 97, size: 256, elements: !12538)
!12538 = !{!12539}
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12537, file: !2741, line: 107, baseType: !12540, size: 256)
!12540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2741, line: 98, size: 256, elements: !12541)
!12541 = !{!12542, !12547, !12552, !12557, !12562, !12567, !12572, !12577}
!12542 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 99, baseType: !12543, size: 32)
!12543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 99, size: 32, elements: !12544)
!12544 = !{!12545, !12546}
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12543, file: !2741, line: 99, baseType: !121, size: 32)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12543, file: !2741, line: 99, baseType: !121, size: 32)
!12547 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 100, baseType: !12548, size: 32, offset: 32)
!12548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 100, size: 32, elements: !12549)
!12549 = !{!12550, !12551}
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12548, file: !2741, line: 100, baseType: !121, size: 32)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12548, file: !2741, line: 100, baseType: !121, size: 32)
!12552 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 101, baseType: !12553, size: 32, offset: 64)
!12553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 101, size: 32, elements: !12554)
!12554 = !{!12555, !12556}
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12553, file: !2741, line: 101, baseType: !121, size: 32)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12553, file: !2741, line: 101, baseType: !121, size: 32)
!12557 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 102, baseType: !12558, size: 32, offset: 96)
!12558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 102, size: 32, elements: !12559)
!12559 = !{!12560, !12561}
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12558, file: !2741, line: 102, baseType: !121, size: 32)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12558, file: !2741, line: 102, baseType: !121, size: 32)
!12562 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 103, baseType: !12563, size: 32, offset: 128)
!12563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 103, size: 32, elements: !12564)
!12564 = !{!12565, !12566}
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12563, file: !2741, line: 103, baseType: !121, size: 32)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12563, file: !2741, line: 103, baseType: !121, size: 32)
!12567 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 104, baseType: !12568, size: 32, offset: 160)
!12568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 104, size: 32, elements: !12569)
!12569 = !{!12570, !12571}
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12568, file: !2741, line: 104, baseType: !121, size: 32)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12568, file: !2741, line: 104, baseType: !121, size: 32)
!12572 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !2741, line: 105, baseType: !12573, size: 32, offset: 192)
!12573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !2741, line: 105, size: 32, elements: !12574)
!12574 = !{!12575, !12576}
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12573, file: !2741, line: 105, baseType: !121, size: 32)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12573, file: !2741, line: 105, baseType: !121, size: 32)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12540, file: !2741, line: 106, baseType: !121, size: 32, offset: 224)
!12578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12579, size: 32)
!12579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !12580)
!12580 = !{!12581, !12639, !12651, !12652, !12653, !12654, !12660, !12673}
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12579, file: !392, line: 247, baseType: !12582, size: 384)
!12582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !12583)
!12583 = !{!12584, !12608, !12615, !12616, !12617, !12626, !12627, !12628}
!12584 = !DIDerivedType(tag: DW_TAG_member, scope: !12582, file: !392, line: 60, baseType: !12585, size: 64)
!12585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12582, file: !392, line: 60, size: 64, elements: !12586)
!12586 = !{!12587, !12602}
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12585, file: !392, line: 61, baseType: !12588, size: 64)
!12588 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !338, line: 49, baseType: !12589)
!12589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !12590)
!12590 = !{!12591, !12597}
!12591 = !DIDerivedType(tag: DW_TAG_member, scope: !12589, file: !338, line: 38, baseType: !12592, size: 32)
!12592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12589, file: !338, line: 38, size: 32, elements: !12593)
!12593 = !{!12594, !12596}
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12592, file: !338, line: 39, baseType: !12595, size: 32)
!12595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12589, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12592, file: !338, line: 40, baseType: !12595, size: 32)
!12597 = !DIDerivedType(tag: DW_TAG_member, scope: !12589, file: !338, line: 42, baseType: !12598, size: 32, offset: 32)
!12598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12589, file: !338, line: 42, size: 32, elements: !12599)
!12599 = !{!12600, !12601}
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12598, file: !338, line: 43, baseType: !12595, size: 32)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12598, file: !338, line: 44, baseType: !12595, size: 32)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12585, file: !392, line: 62, baseType: !12603, size: 64)
!12603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !12604)
!12604 = !{!12605}
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12603, file: !417, line: 50, baseType: !12606, size: 64)
!12606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12607, size: 64, elements: !376)
!12607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12603, size: 32)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12582, file: !392, line: 68, baseType: !12609, size: 32, offset: 64)
!12609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12610, size: 32)
!12610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !12611)
!12611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !12612)
!12612 = !{!12613}
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12611, file: !333, line: 232, baseType: !12614, size: 64)
!12614 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !12589)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12582, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!12616 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12582, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!12617 = !DIDerivedType(tag: DW_TAG_member, scope: !12582, file: !392, line: 90, baseType: !12618, size: 16, offset: 112)
!12618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12582, file: !392, line: 90, size: 16, elements: !12619)
!12619 = !{!12620, !12625}
!12620 = !DIDerivedType(tag: DW_TAG_member, scope: !12618, file: !392, line: 91, baseType: !12621, size: 16)
!12621 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12618, file: !392, line: 91, size: 16, elements: !12622)
!12622 = !{!12623, !12624}
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12621, file: !392, line: 96, baseType: !438, size: 8)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12621, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12618, file: !392, line: 100, baseType: !442, size: 16)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12582, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12582, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12582, file: !392, line: 131, baseType: !12629, size: 192, offset: 192)
!12629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !12630)
!12630 = !{!12631, !12632, !12638}
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12629, file: !333, line: 245, baseType: !12588, size: 64)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12629, file: !333, line: 246, baseType: !12633, size: 32, offset: 64)
!12633 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !12634)
!12634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12635, size: 32)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{null, !12637}
!12637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12629, size: 32)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12629, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12579, file: !392, line: 250, baseType: !12640, size: 288, offset: 384)
!12640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !12641)
!12641 = !{!12642, !12643, !12644, !12645, !12646, !12647, !12648, !12649, !12650}
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12640, file: !459, line: 26, baseType: !121, size: 32)
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12640, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12640, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!12645 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12640, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!12646 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12640, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!12647 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12640, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12640, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12640, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!12650 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12640, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12579, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12579, file: !392, line: 256, baseType: !12610, size: 64, offset: 704)
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12579, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!12654 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12579, file: !392, line: 300, baseType: !12655, size: 96, offset: 800)
!12655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !12656)
!12656 = !{!12657, !12658, !12659}
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12655, file: !392, line: 153, baseType: !22, size: 32)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12655, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12655, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12579, file: !392, line: 325, baseType: !12661, size: 32, offset: 896)
!12661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12662, size: 32)
!12662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !12663)
!12663 = !{!12664, !12670, !12671}
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12662, file: !309, line: 5074, baseType: !12665, size: 96)
!12665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !12666)
!12666 = !{!12667, !12668, !12669}
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12665, file: !485, line: 57, baseType: !488, size: 32)
!12668 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12665, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!12669 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12665, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12662, file: !309, line: 5075, baseType: !12610, size: 64, offset: 96)
!12671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12662, file: !309, line: 5076, baseType: !12672, offset: 160)
!12672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!12673 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12579, file: !392, line: 343, baseType: !12674, size: 64, offset: 928)
!12674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !12675)
!12675 = !{!12676, !12677}
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12674, file: !459, line: 63, baseType: !121, size: 32)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12674, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!12678 = !{!12679, !12680, !12681}
!12679 = !DILocalVariable(name: "reason", arg: 1, scope: !12531, file: !3078, line: 209, type: !32)
!12680 = !DILocalVariable(name: "esf", arg: 2, scope: !12531, file: !3078, line: 209, type: !12534)
!12681 = !DILocalVariable(name: "thread", arg: 3, scope: !12531, file: !3078, line: 210, type: !12578)
!12682 = !DILocation(line: 0, scope: !12531)
!12683 = !DILocation(line: 212, column: 1, scope: !12531)
!12684 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3078, file: !3078, line: 214, type: !12685, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12687)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{null, !22, !22}
!12687 = !{!12688, !12689}
!12688 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12684, file: !3078, line: 214, type: !22)
!12689 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12684, file: !3078, line: 214, type: !22)
!12690 = !DILocation(line: 0, scope: !12684)
!12691 = !DILocation(line: 216, column: 1, scope: !12684)
!12692 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3078, file: !3078, line: 218, type: !12693, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12695)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{null, !280, !217}
!12695 = !{!12696, !12697}
!12696 = !DILocalVariable(name: "buf", arg: 1, scope: !12692, file: !3078, line: 218, type: !280)
!12697 = !DILocalVariable(name: "buflen", arg: 2, scope: !12692, file: !3078, line: 218, type: !217)
!12698 = !DILocation(line: 0, scope: !12692)
!12699 = !DILocation(line: 220, column: 1, scope: !12692)
!12700 = distinct !DISubprogram(name: "coredump_query", scope: !3078, file: !3078, line: 222, type: !12701, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!103, !3077, !102}
!12703 = !{!12704, !12705}
!12704 = !DILocalVariable(name: "query_id", arg: 1, scope: !12700, file: !3078, line: 222, type: !3077)
!12705 = !DILocalVariable(name: "arg", arg: 2, scope: !12700, file: !3078, line: 222, type: !102)
!12706 = !DILocation(line: 0, scope: !12700)
!12707 = !DILocation(line: 224, column: 2, scope: !12700)
!12708 = distinct !DISubprogram(name: "coredump_cmd", scope: !3078, file: !3078, line: 227, type: !12709, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12711)
!12709 = !DISubroutineType(types: !12710)
!12710 = !{!103, !3084, !102}
!12711 = !{!12712, !12713}
!12712 = !DILocalVariable(name: "query_id", arg: 1, scope: !12708, file: !3078, line: 227, type: !3084)
!12713 = !DILocalVariable(name: "arg", arg: 2, scope: !12708, file: !3078, line: 227, type: !102)
!12714 = !DILocation(line: 0, scope: !12708)
!12715 = !DILocation(line: 229, column: 2, scope: !12708)
!12716 = distinct !DISubprogram(name: "arch_system_halt", scope: !12717, file: !12717, line: 23, type: !5706, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12718)
!12717 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12718 = !{!12719}
!12719 = !DILocalVariable(name: "reason", arg: 1, scope: !12716, file: !12717, line: 23, type: !32)
!12720 = !DILocation(line: 0, scope: !12716)
!12721 = !DILocation(line: 55, column: 2, scope: !12722, inlinedAt: !12726)
!12722 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12723)
!12723 = !{!12724, !12725}
!12724 = !DILocalVariable(name: "key", scope: !12722, file: !5695, line: 44, type: !32)
!12725 = !DILocalVariable(name: "tmp", scope: !12722, file: !5695, line: 53, type: !32)
!12726 = distinct !DILocation(line: 31, column: 8, scope: !12716)
!12727 = !{i64 1650496}
!12728 = !DILocation(line: 0, scope: !12722, inlinedAt: !12726)
!12729 = !DILocation(line: 32, column: 2, scope: !12716)
!12730 = !DILocation(line: 32, column: 2, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12732, file: !12717, line: 32, column: 2)
!12732 = distinct !DILexicalBlock(scope: !12716, file: !12717, line: 32, column: 2)
!12733 = distinct !{!12733, !12734, !12735}
!12734 = !DILocation(line: 32, column: 2, scope: !12732)
!12735 = !DILocation(line: 34, column: 2, scope: !12732)
!12736 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12717, file: !12717, line: 39, type: !12737, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12739)
!12737 = !DISubroutineType(types: !12738)
!12738 = !{null, !32, !12534}
!12739 = !{!12740, !12741}
!12740 = !DILocalVariable(name: "reason", arg: 1, scope: !12736, file: !12717, line: 39, type: !32)
!12741 = !DILocalVariable(name: "esf", arg: 2, scope: !12736, file: !12717, line: 40, type: !12534)
!12742 = !DILocation(line: 0, scope: !12736)
!12743 = !DILocation(line: 46, column: 2, scope: !12736)
!12744 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12717, file: !12717, line: 81, type: !5706, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12745)
!12745 = !{!12746}
!12746 = !DILocalVariable(name: "reason", arg: 1, scope: !12744, file: !12717, line: 81, type: !32)
!12747 = !DILocation(line: 0, scope: !12744)
!12748 = !DILocation(line: 83, column: 2, scope: !12744)
!12749 = distinct !DISubprogram(name: "z_fatal_error", scope: !12717, file: !12717, line: 96, type: !12737, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12750)
!12750 = !{!12751, !12752, !12753, !12754}
!12751 = !DILocalVariable(name: "reason", arg: 1, scope: !12749, file: !12717, line: 96, type: !32)
!12752 = !DILocalVariable(name: "esf", arg: 2, scope: !12749, file: !12717, line: 96, type: !12534)
!12753 = !DILocalVariable(name: "key", scope: !12749, file: !12717, line: 102, type: !32)
!12754 = !DILocalVariable(name: "thread", scope: !12749, file: !12717, line: 103, type: !12578)
!12755 = !DILocation(line: 0, scope: !12749)
!12756 = !DILocation(line: 55, column: 2, scope: !12722, inlinedAt: !12757)
!12757 = distinct !DILocation(line: 102, column: 21, scope: !12749)
!12758 = !DILocation(line: 0, scope: !12722, inlinedAt: !12757)
!12759 = !DILocation(line: 119, column: 11, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12749, file: !12717, line: 119, column: 6)
!12761 = !DILocation(line: 119, column: 20, scope: !12760)
!12762 = !DILocation(line: 131, column: 2, scope: !12749)
!12763 = !DILocation(line: 151, column: 7, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !12717, line: 146, column: 32)
!12765 = distinct !DILexicalBlock(scope: !12749, file: !12717, line: 146, column: 6)
!12766 = !DILocation(line: 151, column: 21, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12764, file: !12717, line: 151, column: 7)
!12768 = !DILocation(line: 104, column: 4, scope: !12749)
!12769 = !DILocalVariable(name: "key", arg: 1, scope: !12770, file: !5695, line: 84, type: !32)
!12770 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12771)
!12771 = !{!12769}
!12772 = !DILocation(line: 0, scope: !12770, inlinedAt: !12773)
!12773 = distinct !DILocation(line: 186, column: 2, scope: !12749)
!12774 = !DILocation(line: 95, column: 2, scope: !12770, inlinedAt: !12773)
!12775 = !{i64 1651313}
!12776 = !DILocation(line: 189, column: 3, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !12717, line: 188, column: 41)
!12778 = distinct !DILexicalBlock(scope: !12749, file: !12717, line: 188, column: 6)
!12779 = !DILocation(line: 191, column: 1, scope: !12749)
!12780 = distinct !DISubprogram(name: "k_current_get", scope: !309, file: !309, line: 530, type: !12781, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !330)
!12781 = !DISubroutineType(types: !12782)
!12782 = !{!12783}
!12783 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !392, line: 347, baseType: !12578)
!12784 = !DILocation(line: 535, column: 9, scope: !12780)
!12785 = !DILocation(line: 535, column: 2, scope: !12780)
!12786 = distinct !DISubprogram(name: "k_thread_abort", scope: !3590, file: !3590, line: 188, type: !12787, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !12789)
!12787 = !DISubroutineType(types: !12788)
!12788 = !{null, !12783}
!12789 = !{!12790}
!12790 = !DILocalVariable(name: "thread", arg: 1, scope: !12786, file: !3590, line: 188, type: !12783)
!12791 = !DILocation(line: 0, scope: !12786)
!12792 = !DILocation(line: 197, column: 2, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12786, file: !3590, line: 197, column: 2)
!12794 = !{i64 2152216154}
!12795 = !DILocation(line: 198, column: 2, scope: !12786)
!12796 = !DILocation(line: 199, column: 1, scope: !12786)
!12797 = distinct !DISubprogram(name: "z_current_get", scope: !3590, file: !3590, line: 173, type: !12781, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3074, retainedNodes: !330)
!12798 = !DILocation(line: 180, column: 2, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12797, file: !3590, line: 180, column: 2)
!12800 = !{i64 2152216086}
!12801 = !DILocation(line: 181, column: 9, scope: !12797)
!12802 = !DILocation(line: 181, column: 2, scope: !12797)
!12803 = distinct !DISubprogram(name: "z_early_memset", scope: !1979, file: !1979, line: 108, type: !12804, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12806)
!12804 = !DISubroutineType(types: !12805)
!12805 = !{null, !102, !103, !217}
!12806 = !{!12807, !12808, !12809}
!12807 = !DILocalVariable(name: "dst", arg: 1, scope: !12803, file: !1979, line: 108, type: !102)
!12808 = !DILocalVariable(name: "c", arg: 2, scope: !12803, file: !1979, line: 108, type: !103)
!12809 = !DILocalVariable(name: "n", arg: 3, scope: !12803, file: !1979, line: 108, type: !217)
!12810 = !DILocation(line: 0, scope: !12803)
!12811 = !DILocation(line: 110, column: 9, scope: !12803)
!12812 = !DILocation(line: 111, column: 1, scope: !12803)
!12813 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1979, file: !1979, line: 121, type: !12814, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12816)
!12814 = !DISubroutineType(types: !12815)
!12815 = !{null, !102, !13, !217}
!12816 = !{!12817, !12818, !12819}
!12817 = !DILocalVariable(name: "dst", arg: 1, scope: !12813, file: !1979, line: 121, type: !102)
!12818 = !DILocalVariable(name: "src", arg: 2, scope: !12813, file: !1979, line: 121, type: !13)
!12819 = !DILocalVariable(name: "n", arg: 3, scope: !12813, file: !1979, line: 121, type: !217)
!12820 = !DILocation(line: 0, scope: !12813)
!12821 = !DILocation(line: 123, column: 9, scope: !12813)
!12822 = !DILocation(line: 124, column: 1, scope: !12813)
!12823 = distinct !DISubprogram(name: "z_bss_zero", scope: !1979, file: !1979, line: 132, type: !3154, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !330)
!12824 = !DILocation(line: 143, column: 2, scope: !12823)
!12825 = !DILocation(line: 168, column: 1, scope: !12823)
!12826 = distinct !DISubprogram(name: "z_init_cpu", scope: !1979, file: !1979, line: 372, type: !7642, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12827)
!12827 = !{!12828}
!12828 = !DILocalVariable(name: "id", arg: 1, scope: !12826, file: !1979, line: 372, type: !103)
!12829 = !DILocation(line: 0, scope: !12826)
!12830 = !DILocation(line: 374, column: 2, scope: !12826)
!12831 = !DILocation(line: 375, column: 34, scope: !12826)
!12832 = !DILocation(line: 375, column: 19, scope: !12826)
!12833 = !DILocation(line: 375, column: 31, scope: !12826)
!12834 = !DILocation(line: 376, column: 24, scope: !12826)
!12835 = !DILocation(line: 376, column: 19, scope: !12826)
!12836 = !DILocation(line: 376, column: 22, scope: !12826)
!12837 = !DILocation(line: 378, column: 26, scope: !12826)
!12838 = !DILocation(line: 378, column: 4, scope: !12826)
!12839 = !DILocation(line: 378, column: 50, scope: !12826)
!12840 = !DILocation(line: 377, column: 19, scope: !12826)
!12841 = !DILocation(line: 377, column: 29, scope: !12826)
!12842 = !DILocation(line: 384, column: 1, scope: !12826)
!12843 = distinct !DISubprogram(name: "init_idle_thread", scope: !1979, file: !1979, line: 343, type: !7642, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12844)
!12844 = !{!12845, !12846, !12847, !12850}
!12845 = !DILocalVariable(name: "i", arg: 1, scope: !12843, file: !1979, line: 343, type: !103)
!12846 = !DILocalVariable(name: "thread", scope: !12843, file: !1979, line: 345, type: !2071)
!12847 = !DILocalVariable(name: "stack", scope: !12843, file: !1979, line: 346, type: !12848)
!12848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12849, size: 32)
!12849 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3469, line: 44, baseType: !2185)
!12850 = !DILocalVariable(name: "tname", scope: !12843, file: !1979, line: 358, type: !357)
!12851 = !DILocation(line: 0, scope: !12843)
!12852 = !DILocation(line: 345, column: 29, scope: !12843)
!12853 = !DILocation(line: 346, column: 28, scope: !12843)
!12854 = !DILocation(line: 362, column: 37, scope: !12843)
!12855 = !DILocation(line: 362, column: 36, scope: !12843)
!12856 = !DILocation(line: 361, column: 2, scope: !12843)
!12857 = !DILocation(line: 365, column: 2, scope: !12843)
!12858 = !DILocation(line: 370, column: 1, scope: !12843)
!12859 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2186, file: !2186, line: 331, type: !12860, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12862)
!12860 = !DISubroutineType(types: !12861)
!12861 = !{!357, !12848}
!12862 = !{!12863}
!12863 = !DILocalVariable(name: "sym", arg: 1, scope: !12859, file: !2186, line: 331, type: !12848)
!12864 = !DILocation(line: 0, scope: !12859)
!12865 = !DILocation(line: 333, column: 21, scope: !12859)
!12866 = !DILocation(line: 333, column: 2, scope: !12859)
!12867 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12868, file: !12868, line: 155, type: !12869, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12871)
!12868 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12869 = !DISubroutineType(types: !12870)
!12870 = !{null, !2071}
!12871 = !{!12872}
!12872 = !DILocalVariable(name: "thread", arg: 1, scope: !12867, file: !12868, line: 155, type: !2071)
!12873 = !DILocation(line: 0, scope: !12867)
!12874 = !DILocation(line: 157, column: 15, scope: !12867)
!12875 = !DILocation(line: 157, column: 28, scope: !12867)
!12876 = !DILocation(line: 158, column: 1, scope: !12867)
!12877 = distinct !DISubprogram(name: "z_cstart", scope: !1979, file: !1979, line: 501, type: !3154, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12878)
!12878 = !{!12879}
!12879 = !DILocalVariable(name: "dummy_thread", scope: !12877, file: !1979, line: 518, type: !2072)
!12880 = !DILocation(line: 507, column: 2, scope: !12877)
!12881 = !DILocation(line: 43, column: 14, scope: !12882, inlinedAt: !12886)
!12882 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12883, file: !12883, line: 40, type: !3154, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12884)
!12883 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12884 = !{!12885}
!12885 = !DILocalVariable(name: "msp", scope: !12882, file: !12883, line: 42, type: !121)
!12886 = distinct !DILocation(line: 44, column: 2, scope: !12887, inlinedAt: !12889)
!12887 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12888, file: !12888, line: 42, type: !3154, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !330)
!12888 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12889 = distinct !DILocation(line: 510, column: 2, scope: !12877)
!12890 = !DILocation(line: 43, column: 3, scope: !12882, inlinedAt: !12886)
!12891 = !DILocation(line: 43, column: 60, scope: !12882, inlinedAt: !12886)
!12892 = !DILocation(line: 0, scope: !12882, inlinedAt: !12886)
!12893 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12894, file: !5927, line: 1153, type: !121)
!12894 = distinct !DISubprogram(name: "__set_MSP", scope: !5927, file: !5927, line: 1153, type: !5719, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12895)
!12895 = !{!12893}
!12896 = !DILocation(line: 0, scope: !12894, inlinedAt: !12897)
!12897 = distinct !DILocation(line: 46, column: 2, scope: !12882, inlinedAt: !12886)
!12898 = !DILocation(line: 1155, column: 3, scope: !12894, inlinedAt: !12897)
!12899 = !{i64 2463936}
!12900 = !DILocation(line: 62, column: 11, scope: !12882, inlinedAt: !12886)
!12901 = !DILocation(line: 102, column: 2, scope: !12902, inlinedAt: !12903)
!12902 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6683, file: !6683, line: 97, type: !3154, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !330)
!12903 = distinct !DILocation(line: 45, column: 2, scope: !12887, inlinedAt: !12889)
!12904 = !DILocation(line: 108, column: 2, scope: !12902, inlinedAt: !12903)
!12905 = !DILocation(line: 112, column: 2, scope: !12902, inlinedAt: !12903)
!12906 = !DILocation(line: 113, column: 2, scope: !12902, inlinedAt: !12903)
!12907 = !DILocation(line: 114, column: 2, scope: !12902, inlinedAt: !12903)
!12908 = !DILocation(line: 116, column: 2, scope: !12902, inlinedAt: !12903)
!12909 = !DILocation(line: 123, column: 13, scope: !12902, inlinedAt: !12903)
!12910 = !DILocation(line: 46, column: 2, scope: !12887, inlinedAt: !12889)
!12911 = !DILocation(line: 47, column: 2, scope: !12887, inlinedAt: !12889)
!12912 = !DILocation(line: 174, column: 12, scope: !12913, inlinedAt: !12914)
!12913 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6683, file: !6683, line: 169, type: !3154, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !330)
!12914 = distinct !DILocation(line: 48, column: 2, scope: !12887, inlinedAt: !12889)
!12915 = !DILocation(line: 179, column: 12, scope: !12913, inlinedAt: !12914)
!12916 = !DILocation(line: 50, column: 2, scope: !12887, inlinedAt: !12889)
!12917 = !DILocation(line: 57, column: 2, scope: !12887, inlinedAt: !12889)
!12918 = !DILocation(line: 518, column: 2, scope: !12877)
!12919 = !DILocation(line: 518, column: 18, scope: !12877)
!12920 = !DILocation(line: 520, column: 2, scope: !12877)
!12921 = !DILocation(line: 523, column: 2, scope: !12877)
!12922 = !DILocation(line: 526, column: 2, scope: !12877)
!12923 = !DILocation(line: 527, column: 2, scope: !12877)
!12924 = !DILocation(line: 543, column: 24, scope: !12877)
!12925 = !DILocation(line: 543, column: 2, scope: !12877)
!12926 = !DILocation(line: 0, scope: !2205)
!12927 = !DILocation(line: 246, column: 15, scope: !2223)
!12928 = !DILocation(line: 246, column: 36, scope: !2222)
!12929 = !DILocation(line: 246, column: 2, scope: !2223)
!12930 = !DILocation(line: 247, column: 37, scope: !2221)
!12931 = !DILocation(line: 0, scope: !2221)
!12932 = !DILocation(line: 248, column: 19, scope: !2221)
!12933 = !DILocation(line: 248, column: 12, scope: !2221)
!12934 = !DILocation(line: 250, column: 11, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !2221, file: !1979, line: 250, column: 7)
!12936 = !DILocation(line: 250, column: 7, scope: !2221)
!12937 = !DILocation(line: 254, column: 11, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !1979, line: 254, column: 8)
!12939 = distinct !DILexicalBlock(scope: !12935, file: !1979, line: 250, column: 20)
!12940 = !DILocation(line: 254, column: 8, scope: !12939)
!12941 = !DILocation(line: 255, column: 9, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !1979, line: 254, column: 17)
!12943 = !DILocation(line: 258, column: 9, scope: !12942)
!12944 = !DILocation(line: 261, column: 28, scope: !12942)
!12945 = !DILocation(line: 261, column: 10, scope: !12942)
!12946 = !DILocation(line: 261, column: 17, scope: !12942)
!12947 = !DILocation(line: 261, column: 26, scope: !12942)
!12948 = !DILocation(line: 262, column: 4, scope: !12942)
!12949 = !DILocation(line: 263, column: 9, scope: !12939)
!12950 = !DILocation(line: 263, column: 16, scope: !12939)
!12951 = !DILocation(line: 263, column: 28, scope: !12939)
!12952 = !DILocation(line: 264, column: 3, scope: !12939)
!12953 = !DILocation(line: 246, column: 60, scope: !2222)
!12954 = distinct !{!12954, !12929, !12955}
!12955 = !DILocation(line: 265, column: 2, scope: !2223)
!12956 = !DILocation(line: 266, column: 1, scope: !2205)
!12957 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !528, file: !528, line: 1638, type: !5961, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12958)
!12958 = !{!12959, !12960}
!12959 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12957, file: !528, line: 1638, type: !852)
!12960 = !DILocalVariable(name: "priority", arg: 2, scope: !12957, file: !528, line: 1638, type: !121)
!12961 = !DILocation(line: 0, scope: !12957)
!12962 = !DILocation(line: 1646, column: 48, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12964, file: !528, line: 1645, column: 3)
!12964 = distinct !DILexicalBlock(scope: !12957, file: !528, line: 1640, column: 7)
!12965 = !DILocation(line: 1646, column: 32, scope: !12963)
!12966 = !DILocation(line: 1646, column: 40, scope: !12963)
!12967 = !DILocation(line: 1646, column: 5, scope: !12963)
!12968 = !DILocation(line: 1646, column: 46, scope: !12963)
!12969 = !DILocation(line: 1648, column: 1, scope: !12957)
!12970 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12888, file: !12888, line: 32, type: !3154, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!12971 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12972, file: !12972, line: 215, type: !12869, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12973)
!12972 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12973 = !{!12974}
!12974 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12971, file: !12972, line: 215, type: !2071)
!12975 = !DILocation(line: 0, scope: !12971)
!12976 = !DILocation(line: 217, column: 21, scope: !12971)
!12977 = !DILocation(line: 217, column: 34, scope: !12971)
!12978 = !DILocation(line: 221, column: 21, scope: !12971)
!12979 = !DILocation(line: 221, column: 34, scope: !12971)
!12980 = !DILocation(line: 223, column: 27, scope: !12971)
!12981 = !DILocation(line: 223, column: 33, scope: !12971)
!12982 = !DILocation(line: 224, column: 27, scope: !12971)
!12983 = !DILocation(line: 224, column: 32, scope: !12971)
!12984 = !DILocation(line: 232, column: 16, scope: !12971)
!12985 = !DILocation(line: 232, column: 30, scope: !12971)
!12986 = !DILocation(line: 239, column: 24, scope: !12971)
!12987 = !DILocation(line: 240, column: 1, scope: !12971)
!12988 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1979, file: !1979, line: 399, type: !355, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !12989)
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "stack_ptr", scope: !12988, file: !1979, line: 401, type: !357)
!12991 = !DILocation(line: 404, column: 2, scope: !12988)
!12992 = !DILocation(line: 416, column: 24, scope: !12988)
!12993 = !DILocation(line: 418, column: 14, scope: !12988)
!12994 = !DILocation(line: 0, scope: !12988)
!12995 = !DILocation(line: 423, column: 2, scope: !12988)
!12996 = !DILocation(line: 424, column: 2, scope: !12988)
!12997 = !DILocation(line: 426, column: 2, scope: !12988)
!12998 = !DILocation(line: 428, column: 2, scope: !12988)
!12999 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1979, file: !1979, line: 432, type: !13000, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !13002)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{null, !357}
!13002 = !{!13003}
!13003 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12999, file: !1979, line: 432, type: !357)
!13004 = !DILocation(line: 0, scope: !12999)
!13005 = !DILocation(line: 435, column: 2, scope: !12999)
!13006 = !DILocation(line: 445, column: 2, scope: !12999)
!13007 = distinct !DISubprogram(name: "bg_thread_main", scope: !1979, file: !1979, line: 277, type: !3471, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !13008)
!13008 = !{!13009, !13010, !13011}
!13009 = !DILocalVariable(name: "unused1", arg: 1, scope: !13007, file: !1979, line: 277, type: !102)
!13010 = !DILocalVariable(name: "unused2", arg: 2, scope: !13007, file: !1979, line: 277, type: !102)
!13011 = !DILocalVariable(name: "unused3", arg: 3, scope: !13007, file: !1979, line: 277, type: !102)
!13012 = !DILocation(line: 0, scope: !13007)
!13013 = !DILocation(line: 291, column: 20, scope: !13007)
!13014 = !DILocation(line: 293, column: 2, scope: !13007)
!13015 = !DILocation(line: 297, column: 2, scope: !13007)
!13016 = !DILocation(line: 305, column: 2, scope: !13007)
!13017 = !DILocation(line: 307, column: 2, scope: !13007)
!13018 = !DILocation(line: 330, column: 8, scope: !13007)
!13019 = !DILocation(line: 333, column: 34, scope: !13007)
!13020 = !DILocation(line: 339, column: 1, scope: !13007)
!13021 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2232, file: !2232, line: 45, type: !13022, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13030)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{null, !13024, !102}
!13024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !309, line: 103, baseType: !13025)
!13025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13026, size: 32)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{null, !13028, !102}
!13028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13029, size: 32)
!13029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2237)
!13030 = !{!13031, !13032}
!13031 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13021, file: !2232, line: 45, type: !13024)
!13032 = !DILocalVariable(name: "user_data", arg: 2, scope: !13021, file: !2232, line: 45, type: !102)
!13033 = !DILocation(line: 0, scope: !13021)
!13034 = !DILocation(line: 71, column: 1, scope: !13021)
!13035 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2232, file: !2232, line: 73, type: !13022, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13036)
!13036 = !{!13037, !13038}
!13037 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13035, file: !2232, line: 73, type: !13024)
!13038 = !DILocalVariable(name: "user_data", arg: 2, scope: !13035, file: !2232, line: 73, type: !102)
!13039 = !DILocation(line: 0, scope: !13035)
!13040 = !DILocation(line: 95, column: 1, scope: !13035)
!13041 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2232, file: !2232, line: 97, type: !6684, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !330)
!13042 = !DILocation(line: 1031, column: 3, scope: !13043, inlinedAt: !13046)
!13043 = distinct !DISubprogram(name: "__get_IPSR", scope: !5927, file: !5927, line: 1027, type: !6677, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13044)
!13044 = !{!13045}
!13045 = !DILocalVariable(name: "result", scope: !13043, file: !5927, line: 1029, type: !121)
!13046 = distinct !DILocation(line: 48, column: 10, scope: !13047, inlinedAt: !13048)
!13047 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6683, file: !6683, line: 46, type: !6684, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !330)
!13048 = distinct !DILocation(line: 99, column: 9, scope: !13041)
!13049 = !{i64 2469587}
!13050 = !DILocation(line: 0, scope: !13043, inlinedAt: !13046)
!13051 = !DILocation(line: 48, column: 9, scope: !13047, inlinedAt: !13048)
!13052 = !DILocation(line: 99, column: 2, scope: !13041)
!13053 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2232, file: !2232, line: 106, type: !3154, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !330)
!13054 = !DILocation(line: 108, column: 2, scope: !13053)
!13055 = !DILocation(line: 108, column: 17, scope: !13053)
!13056 = !DILocation(line: 108, column: 30, scope: !13053)
!13057 = !DILocation(line: 109, column: 1, scope: !13053)
!13058 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2232, file: !2232, line: 116, type: !3154, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !330)
!13059 = !DILocation(line: 118, column: 2, scope: !13058)
!13060 = !DILocation(line: 118, column: 17, scope: !13058)
!13061 = !DILocation(line: 118, column: 30, scope: !13058)
!13062 = !DILocation(line: 119, column: 1, scope: !13058)
!13063 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2232, file: !2232, line: 126, type: !6684, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !330)
!13064 = !DILocation(line: 128, column: 10, scope: !13063)
!13065 = !DILocation(line: 128, column: 25, scope: !13063)
!13066 = !DILocation(line: 128, column: 38, scope: !13063)
!13067 = !DILocation(line: 128, column: 53, scope: !13063)
!13068 = !DILocation(line: 128, column: 2, scope: !13063)
!13069 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2232, file: !2232, line: 187, type: !13070, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13072)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{!103, !2236, !157}
!13072 = !{!13073, !13074}
!13073 = !DILocalVariable(name: "thread", arg: 1, scope: !13069, file: !2232, line: 187, type: !2236)
!13074 = !DILocalVariable(name: "value", arg: 2, scope: !13069, file: !2232, line: 187, type: !157)
!13075 = !DILocation(line: 0, scope: !13069)
!13076 = !DILocation(line: 206, column: 2, scope: !13069)
!13077 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2232, file: !2232, line: 238, type: !13078, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13080)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{!157, !2236}
!13080 = !{!13081}
!13081 = !DILocalVariable(name: "thread", arg: 1, scope: !13077, file: !2232, line: 238, type: !2236)
!13082 = !DILocation(line: 0, scope: !13077)
!13083 = !DILocation(line: 244, column: 2, scope: !13077)
!13084 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2232, file: !2232, line: 248, type: !13085, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13087)
!13085 = !DISubroutineType(types: !13086)
!13086 = !{!103, !2235, !357, !217}
!13087 = !{!13088, !13089, !13090}
!13088 = !DILocalVariable(name: "thread", arg: 1, scope: !13084, file: !2232, line: 248, type: !2235)
!13089 = !DILocalVariable(name: "buf", arg: 2, scope: !13084, file: !2232, line: 248, type: !357)
!13090 = !DILocalVariable(name: "size", arg: 3, scope: !13084, file: !2232, line: 248, type: !217)
!13091 = !DILocation(line: 0, scope: !13084)
!13092 = !DILocation(line: 257, column: 2, scope: !13084)
!13093 = !DILocation(line: 0, scope: !2231)
!13094 = !DILocation(line: 281, column: 11, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !2231, file: !2232, line: 281, column: 6)
!13096 = !DILocation(line: 281, column: 20, scope: !13095)
!13097 = !DILocation(line: 275, column: 45, scope: !2231)
!13098 = !DILocation(line: 285, column: 10, scope: !2231)
!13099 = !DILocation(line: 0, scope: !2354)
!13100 = !DILocation(line: 293, column: 39, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !2354, file: !2232, line: 293, column: 2)
!13102 = !DILocation(line: 293, column: 2, scope: !2354)
!13103 = !DILocation(line: 273, column: 14, scope: !2231)
!13104 = !DILocation(line: 309, column: 2, scope: !2231)
!13105 = !DILocation(line: 309, column: 11, scope: !2231)
!13106 = !DILocation(line: 311, column: 2, scope: !2231)
!13107 = !DILocation(line: 293, column: 26, scope: !13101)
!13108 = !DILocation(line: 294, column: 9, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13101, file: !2232, line: 293, column: 54)
!13110 = !DILocation(line: 295, column: 21, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13109, file: !2232, line: 295, column: 7)
!13112 = !DILocation(line: 295, column: 28, scope: !13111)
!13113 = !DILocation(line: 295, column: 7, scope: !13109)
!13114 = !DILocation(line: 299, column: 25, scope: !13109)
!13115 = !DILocation(line: 299, column: 41, scope: !13109)
!13116 = !DILocation(line: 300, column: 7, scope: !13109)
!13117 = !DILocation(line: 300, column: 26, scope: !13109)
!13118 = !DILocation(line: 299, column: 10, scope: !13109)
!13119 = !DILocation(line: 299, column: 7, scope: !13109)
!13120 = !DILocation(line: 302, column: 16, scope: !13109)
!13121 = !DILocation(line: 304, column: 20, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13109, file: !2232, line: 304, column: 7)
!13123 = !DILocation(line: 304, column: 7, scope: !13109)
!13124 = !DILocation(line: 305, column: 26, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13122, file: !2232, line: 304, column: 26)
!13126 = !DILocation(line: 305, column: 42, scope: !13125)
!13127 = !DILocation(line: 305, column: 11, scope: !13125)
!13128 = !DILocation(line: 305, column: 8, scope: !13125)
!13129 = !DILocation(line: 306, column: 3, scope: !13125)
!13130 = !DILocation(line: 293, column: 50, scope: !13101)
!13131 = !DILocation(line: 312, column: 1, scope: !2231)
!13132 = distinct !DISubprogram(name: "copy_bytes", scope: !2232, file: !2232, line: 261, type: !13133, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13135)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{!217, !357, !217, !157, !217}
!13135 = !{!13136, !13137, !13138, !13139, !13140}
!13136 = !DILocalVariable(name: "dest", arg: 1, scope: !13132, file: !2232, line: 261, type: !357)
!13137 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13132, file: !2232, line: 261, type: !217)
!13138 = !DILocalVariable(name: "src", arg: 3, scope: !13132, file: !2232, line: 261, type: !157)
!13139 = !DILocalVariable(name: "src_size", arg: 4, scope: !13132, file: !2232, line: 261, type: !217)
!13140 = !DILocalVariable(name: "bytes_to_copy", scope: !13132, file: !2232, line: 263, type: !217)
!13141 = !DILocation(line: 0, scope: !13132)
!13142 = !DILocation(line: 265, column: 18, scope: !13132)
!13143 = !DILocation(line: 266, column: 2, scope: !13132)
!13144 = !DILocation(line: 268, column: 2, scope: !13132)
!13145 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2232, file: !2232, line: 383, type: !13146, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13148)
!13146 = !DISubroutineType(types: !13147)
!13147 = !{null, !2236}
!13148 = !{!13149}
!13149 = !DILocalVariable(name: "thread", arg: 1, scope: !13145, file: !2232, line: 383, type: !2236)
!13150 = !DILocation(line: 0, scope: !13145)
!13151 = !DILocation(line: 387, column: 2, scope: !13145)
!13152 = !DILocation(line: 388, column: 1, scope: !13145)
!13153 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2232, file: !2232, line: 528, type: !13154, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13161)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{!357, !2236, !13156, !217, !3468, !102, !102, !102, !103, !121, !157}
!13156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13157, size: 32)
!13157 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3469, line: 44, baseType: !13158)
!13158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2186, line: 47, size: 8, elements: !13159)
!13159 = !{!13160}
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13158, file: !2186, line: 48, baseType: !159, size: 8)
!13161 = !{!13162, !13163, !13164, !13165, !13166, !13167, !13168, !13169, !13170, !13171, !13172}
!13162 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13153, file: !2232, line: 528, type: !2236)
!13163 = !DILocalVariable(name: "stack", arg: 2, scope: !13153, file: !2232, line: 529, type: !13156)
!13164 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13153, file: !2232, line: 529, type: !217)
!13165 = !DILocalVariable(name: "entry", arg: 4, scope: !13153, file: !2232, line: 530, type: !3468)
!13166 = !DILocalVariable(name: "p1", arg: 5, scope: !13153, file: !2232, line: 531, type: !102)
!13167 = !DILocalVariable(name: "p2", arg: 6, scope: !13153, file: !2232, line: 531, type: !102)
!13168 = !DILocalVariable(name: "p3", arg: 7, scope: !13153, file: !2232, line: 531, type: !102)
!13169 = !DILocalVariable(name: "prio", arg: 8, scope: !13153, file: !2232, line: 532, type: !103)
!13170 = !DILocalVariable(name: "options", arg: 9, scope: !13153, file: !2232, line: 532, type: !121)
!13171 = !DILocalVariable(name: "name", arg: 10, scope: !13153, file: !2232, line: 532, type: !157)
!13172 = !DILocalVariable(name: "stack_ptr", scope: !13153, file: !2232, line: 534, type: !357)
!13173 = !DILocation(line: 0, scope: !13153)
!13174 = !DILocation(line: 550, column: 28, scope: !13153)
!13175 = !DILocation(line: 550, column: 2, scope: !13153)
!13176 = !DILocation(line: 553, column: 34, scope: !13153)
!13177 = !DILocation(line: 553, column: 2, scope: !13153)
!13178 = !DILocation(line: 554, column: 14, scope: !13153)
!13179 = !DILocation(line: 564, column: 2, scope: !13153)
!13180 = !DILocation(line: 567, column: 14, scope: !13153)
!13181 = !DILocation(line: 567, column: 24, scope: !13153)
!13182 = !DILocation(line: 612, column: 7, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13153, file: !2232, line: 612, column: 6)
!13184 = !DILocation(line: 612, column: 6, scope: !13153)
!13185 = !DILocation(line: 627, column: 40, scope: !13153)
!13186 = !DILocation(line: 637, column: 2, scope: !13153)
!13187 = !DILocation(line: 613, column: 15, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13183, file: !2232, line: 612, column: 17)
!13189 = !DILocation(line: 613, column: 29, scope: !13188)
!13190 = !DILocation(line: 638, column: 1, scope: !13153)
!13191 = distinct !DISubprogram(name: "z_waitq_init", scope: !13192, file: !13192, line: 47, type: !13193, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13195)
!13192 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13193 = !DISubroutineType(types: !13194)
!13194 = !{null, !2267}
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "w", arg: 1, scope: !13191, file: !13192, line: 47, type: !2267)
!13197 = !DILocation(line: 0, scope: !13191)
!13198 = !DILocation(line: 49, column: 21, scope: !13191)
!13199 = !DILocation(line: 49, column: 2, scope: !13191)
!13200 = !DILocation(line: 50, column: 1, scope: !13191)
!13201 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2232, file: !2232, line: 791, type: !13202, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13205)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{null, !13204, !103, !121, !32}
!13204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!13205 = !{!13206, !13207, !13208, !13209}
!13206 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13201, file: !2232, line: 791, type: !13204)
!13207 = !DILocalVariable(name: "priority", arg: 2, scope: !13201, file: !2232, line: 791, type: !103)
!13208 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13201, file: !2232, line: 792, type: !121)
!13209 = !DILocalVariable(name: "options", arg: 4, scope: !13201, file: !2232, line: 792, type: !32)
!13210 = !DILocation(line: 0, scope: !13201)
!13211 = !DILocation(line: 795, column: 15, scope: !13201)
!13212 = !DILocation(line: 795, column: 25, scope: !13201)
!13213 = !DILocation(line: 796, column: 30, scope: !13201)
!13214 = !DILocation(line: 796, column: 15, scope: !13201)
!13215 = !DILocation(line: 796, column: 28, scope: !13201)
!13216 = !DILocation(line: 797, column: 30, scope: !13201)
!13217 = !DILocation(line: 797, column: 15, scope: !13201)
!13218 = !DILocation(line: 797, column: 28, scope: !13201)
!13219 = !DILocation(line: 799, column: 22, scope: !13201)
!13220 = !DILocation(line: 799, column: 15, scope: !13201)
!13221 = !DILocation(line: 799, column: 20, scope: !13201)
!13222 = !DILocation(line: 801, column: 15, scope: !13201)
!13223 = !DILocation(line: 801, column: 28, scope: !13201)
!13224 = !DILocation(line: 814, column: 2, scope: !13201)
!13225 = !DILocation(line: 815, column: 1, scope: !13201)
!13226 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2232, file: !2232, line: 449, type: !13227, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13229)
!13227 = !DISubroutineType(types: !13228)
!13228 = !{!357, !2236, !13156, !217}
!13229 = !{!13230, !13231, !13232, !13233, !13234, !13235, !13236, !13237}
!13230 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13226, file: !2232, line: 449, type: !2236)
!13231 = !DILocalVariable(name: "stack", arg: 2, scope: !13226, file: !2232, line: 450, type: !13156)
!13232 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13226, file: !2232, line: 450, type: !217)
!13233 = !DILocalVariable(name: "stack_obj_size", scope: !13226, file: !2232, line: 452, type: !217)
!13234 = !DILocalVariable(name: "stack_buf_size", scope: !13226, file: !2232, line: 452, type: !217)
!13235 = !DILocalVariable(name: "stack_ptr", scope: !13226, file: !2232, line: 453, type: !357)
!13236 = !DILocalVariable(name: "stack_buf_start", scope: !13226, file: !2232, line: 453, type: !357)
!13237 = !DILocalVariable(name: "delta", scope: !13226, file: !2232, line: 454, type: !217)
!13238 = !DILocation(line: 0, scope: !13226)
!13239 = !DILocation(line: 465, column: 20, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13226, file: !2232, line: 463, column: 2)
!13241 = !DILocation(line: 466, column: 21, scope: !13240)
!13242 = !DILocation(line: 473, column: 28, scope: !13226)
!13243 = !DILocation(line: 514, column: 33, scope: !13226)
!13244 = !DILocation(line: 514, column: 25, scope: !13226)
!13245 = !DILocation(line: 514, column: 31, scope: !13226)
!13246 = !DILocation(line: 515, column: 25, scope: !13226)
!13247 = !DILocation(line: 515, column: 30, scope: !13226)
!13248 = !DILocation(line: 516, column: 25, scope: !13226)
!13249 = !DILocation(line: 516, column: 31, scope: !13226)
!13250 = !DILocation(line: 520, column: 2, scope: !13226)
!13251 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2186, file: !2186, line: 331, type: !13252, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13254)
!13252 = !DISubroutineType(types: !13253)
!13253 = !{!357, !13156}
!13254 = !{!13255}
!13255 = !DILocalVariable(name: "sym", arg: 1, scope: !13251, file: !2186, line: 331, type: !13156)
!13256 = !DILocation(line: 0, scope: !13251)
!13257 = !DILocation(line: 333, column: 21, scope: !13251)
!13258 = !DILocation(line: 333, column: 2, scope: !13251)
!13259 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13260, file: !13260, line: 40, type: !13261, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13263)
!13260 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13261 = !DISubroutineType(types: !13262)
!13262 = !{null, !13204}
!13263 = !{!13264}
!13264 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13259, file: !13260, line: 40, type: !13204)
!13265 = !DILocation(line: 0, scope: !13259)
!13266 = !DILocation(line: 42, column: 31, scope: !13259)
!13267 = !DILocation(line: 42, column: 2, scope: !13259)
!13268 = !DILocation(line: 43, column: 1, scope: !13259)
!13269 = distinct !DISubprogram(name: "z_init_timeout", scope: !13260, file: !13260, line: 25, type: !2293, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13270)
!13270 = !{!13271}
!13271 = !DILocalVariable(name: "to", arg: 1, scope: !13269, file: !13260, line: 25, type: !2295)
!13272 = !DILocation(line: 0, scope: !13269)
!13273 = !DILocation(line: 27, column: 22, scope: !13269)
!13274 = !DILocation(line: 27, column: 2, scope: !13269)
!13275 = !DILocation(line: 28, column: 1, scope: !13269)
!13276 = distinct !DISubprogram(name: "sys_dnode_init", scope: !338, file: !338, line: 211, type: !13277, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13279)
!13277 = !DISubroutineType(types: !13278)
!13278 = !{null, !2339}
!13279 = !{!13280}
!13280 = !DILocalVariable(name: "node", arg: 1, scope: !13276, file: !338, line: 211, type: !2339)
!13281 = !DILocation(line: 0, scope: !13276)
!13282 = !DILocation(line: 213, column: 8, scope: !13276)
!13283 = !DILocation(line: 213, column: 13, scope: !13276)
!13284 = !DILocation(line: 214, column: 8, scope: !13276)
!13285 = !DILocation(line: 214, column: 13, scope: !13276)
!13286 = !DILocation(line: 215, column: 1, scope: !13276)
!13287 = distinct !DISubprogram(name: "sys_dlist_init", scope: !338, file: !338, line: 197, type: !13288, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13291)
!13288 = !DISubroutineType(types: !13289)
!13289 = !{null, !13290}
!13290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!13291 = !{!13292}
!13292 = !DILocalVariable(name: "list", arg: 1, scope: !13287, file: !338, line: 197, type: !13290)
!13293 = !DILocation(line: 0, scope: !13287)
!13294 = !DILocation(line: 199, column: 8, scope: !13287)
!13295 = !DILocation(line: 199, column: 13, scope: !13287)
!13296 = !DILocation(line: 200, column: 8, scope: !13287)
!13297 = !DILocation(line: 200, column: 13, scope: !13287)
!13298 = !DILocation(line: 201, column: 1, scope: !13287)
!13299 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2232, file: !2232, line: 641, type: !13300, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13306)
!13300 = !DISubroutineType(types: !13301)
!13301 = !{!2235, !2236, !13156, !217, !3468, !102, !102, !102, !103, !121, !13302}
!13302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !13303)
!13303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !13304)
!13304 = !{!13305}
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13303, file: !214, line: 66, baseType: !213, size: 64)
!13306 = !{!13307, !13308, !13309, !13310, !13311, !13312, !13313, !13314, !13315, !13316}
!13307 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13299, file: !2232, line: 641, type: !2236)
!13308 = !DILocalVariable(name: "stack", arg: 2, scope: !13299, file: !2232, line: 642, type: !13156)
!13309 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13299, file: !2232, line: 643, type: !217)
!13310 = !DILocalVariable(name: "entry", arg: 4, scope: !13299, file: !2232, line: 643, type: !3468)
!13311 = !DILocalVariable(name: "p1", arg: 5, scope: !13299, file: !2232, line: 644, type: !102)
!13312 = !DILocalVariable(name: "p2", arg: 6, scope: !13299, file: !2232, line: 644, type: !102)
!13313 = !DILocalVariable(name: "p3", arg: 7, scope: !13299, file: !2232, line: 644, type: !102)
!13314 = !DILocalVariable(name: "prio", arg: 8, scope: !13299, file: !2232, line: 645, type: !103)
!13315 = !DILocalVariable(name: "options", arg: 9, scope: !13299, file: !2232, line: 645, type: !121)
!13316 = !DILocalVariable(name: "delay", arg: 10, scope: !13299, file: !2232, line: 645, type: !13302)
!13317 = !DILocation(line: 0, scope: !13299)
!13318 = !DILocation(line: 649, column: 2, scope: !13299)
!13319 = !DILocation(line: 652, column: 7, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13299, file: !2232, line: 652, column: 6)
!13321 = !DILocation(line: 652, column: 6, scope: !13299)
!13322 = !DILocation(line: 653, column: 3, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13320, file: !2232, line: 652, column: 39)
!13324 = !DILocation(line: 654, column: 2, scope: !13323)
!13325 = !DILocation(line: 656, column: 2, scope: !13299)
!13326 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2232, file: !2232, line: 401, type: !13327, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13329)
!13327 = !DISubroutineType(types: !13328)
!13328 = !{null, !2236, !13302}
!13329 = !{!13330, !13331}
!13330 = !DILocalVariable(name: "thread", arg: 1, scope: !13326, file: !2232, line: 401, type: !2236)
!13331 = !DILocalVariable(name: "delay", arg: 2, scope: !13326, file: !2232, line: 401, type: !13302)
!13332 = !DILocation(line: 0, scope: !13326)
!13333 = !DILocation(line: 404, column: 6, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13326, file: !2232, line: 404, column: 6)
!13335 = !DILocation(line: 404, column: 6, scope: !13326)
!13336 = !DILocation(line: 405, column: 3, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13334, file: !2232, line: 404, column: 38)
!13338 = !DILocation(line: 406, column: 2, scope: !13337)
!13339 = !DILocation(line: 407, column: 3, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13334, file: !2232, line: 406, column: 9)
!13341 = !DILocation(line: 413, column: 1, scope: !13326)
!13342 = distinct !DISubprogram(name: "k_thread_start", scope: !3590, file: !3590, line: 205, type: !13343, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13345)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{null, !2235}
!13345 = !{!13346}
!13346 = !DILocalVariable(name: "thread", arg: 1, scope: !13342, file: !3590, line: 205, type: !2235)
!13347 = !DILocation(line: 0, scope: !13342)
!13348 = !DILocation(line: 214, column: 2, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13342, file: !3590, line: 214, column: 2)
!13350 = !{i64 2152241378}
!13351 = !DILocation(line: 215, column: 2, scope: !13342)
!13352 = !DILocation(line: 216, column: 1, scope: !13342)
!13353 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13260, file: !13260, line: 47, type: !13327, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13354)
!13354 = !{!13355, !13356}
!13355 = !DILocalVariable(name: "thread", arg: 1, scope: !13353, file: !13260, line: 47, type: !2236)
!13356 = !DILocalVariable(name: "ticks", arg: 2, scope: !13353, file: !13260, line: 47, type: !13302)
!13357 = !DILocation(line: 0, scope: !13353)
!13358 = !DILocation(line: 49, column: 30, scope: !13353)
!13359 = !DILocation(line: 49, column: 2, scope: !13353)
!13360 = !DILocation(line: 50, column: 1, scope: !13353)
!13361 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2232, file: !2232, line: 748, type: !3154, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13362)
!13362 = !{!13363, !13381}
!13363 = !DILocalVariable(name: "thread_data", scope: !13364, file: !2232, line: 750, type: !13365)
!13364 = distinct !DILexicalBlock(scope: !13361, file: !2232, line: 750, column: 2)
!13365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13366, size: 32)
!13366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !309, line: 620, size: 384, elements: !13367)
!13367 = !{!13368, !13369, !13370, !13371, !13372, !13373, !13374, !13375, !13376, !13377, !13378, !13380}
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13366, file: !309, line: 621, baseType: !2236, size: 32)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13366, file: !309, line: 622, baseType: !13156, size: 32, offset: 32)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13366, file: !309, line: 623, baseType: !32, size: 32, offset: 64)
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13366, file: !309, line: 624, baseType: !3468, size: 32, offset: 96)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13366, file: !309, line: 625, baseType: !102, size: 32, offset: 128)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13366, file: !309, line: 626, baseType: !102, size: 32, offset: 160)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13366, file: !309, line: 627, baseType: !102, size: 32, offset: 192)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13366, file: !309, line: 628, baseType: !103, size: 32, offset: 224)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13366, file: !309, line: 629, baseType: !121, size: 32, offset: 256)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13366, file: !309, line: 630, baseType: !834, size: 32, offset: 288)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13366, file: !309, line: 631, baseType: !13379, size: 32, offset: 320)
!13379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 32)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13366, file: !309, line: 632, baseType: !157, size: 32, offset: 352)
!13381 = !DILocalVariable(name: "thread_data", scope: !13382, file: !2232, line: 781, type: !13365)
!13382 = distinct !DILexicalBlock(scope: !13361, file: !2232, line: 781, column: 2)
!13383 = !DILocation(line: 0, scope: !13364)
!13384 = !DILocation(line: 750, column: 2, scope: !13364)
!13385 = !DILocation(line: 780, column: 2, scope: !13361)
!13386 = !DILocation(line: 0, scope: !13382)
!13387 = !DILocation(line: 781, column: 2, scope: !13382)
!13388 = !DILocation(line: 752, column: 17, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2232, line: 750, column: 38)
!13390 = distinct !DILexicalBlock(scope: !13364, file: !2232, line: 750, column: 2)
!13391 = !DILocation(line: 753, column: 17, scope: !13389)
!13392 = !DILocation(line: 754, column: 17, scope: !13389)
!13393 = !DILocation(line: 755, column: 17, scope: !13389)
!13394 = !DILocation(line: 756, column: 17, scope: !13389)
!13395 = !DILocation(line: 757, column: 17, scope: !13389)
!13396 = !DILocation(line: 758, column: 17, scope: !13389)
!13397 = !DILocation(line: 759, column: 17, scope: !13389)
!13398 = !DILocation(line: 760, column: 17, scope: !13389)
!13399 = !DILocation(line: 751, column: 3, scope: !13389)
!13400 = !DILocation(line: 763, column: 16, scope: !13389)
!13401 = !DILocation(line: 763, column: 29, scope: !13389)
!13402 = !DILocation(line: 763, column: 39, scope: !13389)
!13403 = !DILocation(line: 750, column: 2, scope: !13390)
!13404 = !DILocation(line: 750, column: 2, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13390, file: !2232, line: 750, column: 2)
!13406 = distinct !{!13406, !13384, !13407}
!13407 = !DILocation(line: 764, column: 2, scope: !13364)
!13408 = !DILocation(line: 787, column: 2, scope: !13361)
!13409 = !DILocation(line: 788, column: 1, scope: !13361)
!13410 = !DILocation(line: 782, column: 20, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !2232, line: 782, column: 7)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !2232, line: 781, column: 38)
!13413 = distinct !DILexicalBlock(scope: !13382, file: !2232, line: 781, column: 2)
!13414 = !DILocation(line: 782, column: 31, scope: !13411)
!13415 = !DILocation(line: 782, column: 7, scope: !13412)
!13416 = !DILocation(line: 783, column: 37, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13411, file: !2232, line: 782, column: 51)
!13418 = !DILocation(line: 784, column: 10, scope: !13417)
!13419 = !DILocation(line: 783, column: 4, scope: !13417)
!13420 = !DILocation(line: 785, column: 3, scope: !13417)
!13421 = !DILocation(line: 781, column: 2, scope: !13413)
!13422 = !DILocation(line: 781, column: 2, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13413, file: !2232, line: 781, column: 2)
!13424 = distinct !{!13424, !13387, !13425}
!13425 = !DILocation(line: 786, column: 2, scope: !13382)
!13426 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13427, file: !13427, line: 403, type: !13428, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13430)
!13427 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13428 = !DISubroutineType(types: !13429)
!13429 = !{!2340, !2340}
!13430 = !{!13431}
!13431 = !DILocalVariable(name: "t", arg: 1, scope: !13426, file: !13427, line: 403, type: !2340)
!13432 = !DILocation(line: 0, scope: !13426)
!13433 = !DILocalVariable(name: "t", arg: 1, scope: !13434, file: !13427, line: 102, type: !2340)
!13434 = distinct !DISubprogram(name: "z_tmcvt", scope: !13427, file: !13427, line: 102, type: !13435, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13437)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!2340, !2340, !121, !121, !170, !170, !170, !170}
!13437 = !{!13433, !13438, !13439, !13440, !13441, !13442, !13443, !13444, !13445, !13446, !13447}
!13438 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13434, file: !13427, line: 102, type: !121)
!13439 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13434, file: !13427, line: 103, type: !121)
!13440 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13434, file: !13427, line: 103, type: !170)
!13441 = !DILocalVariable(name: "result32", arg: 5, scope: !13434, file: !13427, line: 104, type: !170)
!13442 = !DILocalVariable(name: "round_up", arg: 6, scope: !13434, file: !13427, line: 104, type: !170)
!13443 = !DILocalVariable(name: "round_off", arg: 7, scope: !13434, file: !13427, line: 105, type: !170)
!13444 = !DILocalVariable(name: "mul_ratio", scope: !13434, file: !13427, line: 107, type: !170)
!13445 = !DILocalVariable(name: "div_ratio", scope: !13434, file: !13427, line: 109, type: !170)
!13446 = !DILocalVariable(name: "off", scope: !13434, file: !13427, line: 116, type: !2340)
!13447 = !DILocalVariable(name: "rdivisor", scope: !13448, file: !13427, line: 119, type: !121)
!13448 = distinct !DILexicalBlock(scope: !13449, file: !13427, line: 118, column: 18)
!13449 = distinct !DILexicalBlock(scope: !13434, file: !13427, line: 118, column: 6)
!13450 = !DILocation(line: 0, scope: !13434, inlinedAt: !13451)
!13451 = distinct !DILocation(line: 406, column: 9, scope: !13426)
!13452 = !DILocation(line: 145, column: 13, scope: !13453, inlinedAt: !13451)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !13427, line: 144, column: 10)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !13427, line: 142, column: 7)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !13427, line: 141, column: 24)
!13456 = distinct !DILexicalBlock(scope: !13457, file: !13427, line: 141, column: 13)
!13457 = distinct !DILexicalBlock(scope: !13434, file: !13427, line: 134, column: 6)
!13458 = !DILocation(line: 406, column: 2, scope: !13426)
!13459 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2232, file: !2232, line: 817, type: !3466, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13460)
!13460 = !{!13461, !13462, !13463, !13464}
!13461 = !DILocalVariable(name: "entry", arg: 1, scope: !13459, file: !2232, line: 817, type: !3468)
!13462 = !DILocalVariable(name: "p1", arg: 2, scope: !13459, file: !2232, line: 818, type: !102)
!13463 = !DILocalVariable(name: "p2", arg: 3, scope: !13459, file: !2232, line: 818, type: !102)
!13464 = !DILocalVariable(name: "p3", arg: 4, scope: !13459, file: !2232, line: 818, type: !102)
!13465 = !DILocation(line: 0, scope: !13459)
!13466 = !DILocation(line: 822, column: 2, scope: !13459)
!13467 = !DILocation(line: 822, column: 17, scope: !13459)
!13468 = !DILocation(line: 822, column: 30, scope: !13459)
!13469 = !DILocation(line: 823, column: 2, scope: !13459)
!13470 = !DILocation(line: 845, column: 2, scope: !13459)
!13471 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2232, file: !2232, line: 888, type: !13472, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13474)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{!103, !2236}
!13474 = !{!13475}
!13475 = !DILocalVariable(name: "thread", arg: 1, scope: !13471, file: !2232, line: 888, type: !2236)
!13476 = !DILocation(line: 0, scope: !13471)
!13477 = !DILocation(line: 893, column: 2, scope: !13471)
!13478 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2232, file: !2232, line: 897, type: !13479, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13481)
!13479 = !DISubroutineType(types: !13480)
!13480 = !{!103, !2236, !32}
!13481 = !{!13482, !13483}
!13482 = !DILocalVariable(name: "thread", arg: 1, scope: !13478, file: !2232, line: 897, type: !2236)
!13483 = !DILocalVariable(name: "options", arg: 2, scope: !13478, file: !2232, line: 897, type: !32)
!13484 = !DILocation(line: 0, scope: !13478)
!13485 = !DILocation(line: 902, column: 2, scope: !13478)
!13486 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2232, file: !2232, line: 1072, type: !13487, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13492)
!13487 = !DISubroutineType(types: !13488)
!13488 = !{!103, !2235, !13489}
!13489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13490, size: 32)
!13490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !392, line: 234, baseType: !13491)
!13491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !392, line: 192, elements: !330)
!13492 = !{!13493, !13494}
!13493 = !DILocalVariable(name: "thread", arg: 1, scope: !13486, file: !2232, line: 1072, type: !2235)
!13494 = !DILocalVariable(name: "stats", arg: 2, scope: !13486, file: !2232, line: 1073, type: !13489)
!13495 = !DILocation(line: 0, scope: !13486)
!13496 = !DILocation(line: 1075, column: 14, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13486, file: !2232, line: 1075, column: 6)
!13498 = !DILocation(line: 1075, column: 23, scope: !13497)
!13499 = !DILocation(line: 1086, column: 1, scope: !13486)
!13500 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2232, file: !2232, line: 1088, type: !13501, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2336, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!103, !13489}
!13503 = !{!13504}
!13504 = !DILocalVariable(name: "stats", arg: 1, scope: !13500, file: !2232, line: 1088, type: !13489)
!13505 = !DILocation(line: 0, scope: !13500)
!13506 = !DILocation(line: 1094, column: 12, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13500, file: !2232, line: 1094, column: 6)
!13508 = !DILocation(line: 1120, column: 1, scope: !13500)
!13509 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13510, file: !13510, line: 20, type: !3154, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !330)
!13510 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13511 = !DILocation(line: 30, column: 2, scope: !13509)
!13512 = !DILocation(line: 31, column: 1, scope: !13509)
!13513 = distinct !DISubprogram(name: "idle", scope: !13510, file: !13510, line: 33, type: !3471, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !13514)
!13514 = !{!13515, !13516, !13517}
!13515 = !DILocalVariable(name: "unused1", arg: 1, scope: !13513, file: !13510, line: 33, type: !102)
!13516 = !DILocalVariable(name: "unused2", arg: 2, scope: !13513, file: !13510, line: 33, type: !102)
!13517 = !DILocalVariable(name: "unused3", arg: 3, scope: !13513, file: !13510, line: 33, type: !102)
!13518 = !DILocation(line: 0, scope: !13513)
!13519 = !DILocation(line: 41, column: 2, scope: !13513)
!13520 = !DILocation(line: 55, column: 2, scope: !13521, inlinedAt: !13525)
!13521 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !13522)
!13522 = !{!13523, !13524}
!13523 = !DILocalVariable(name: "key", scope: !13521, file: !5695, line: 44, type: !32)
!13524 = !DILocalVariable(name: "tmp", scope: !13521, file: !5695, line: 53, type: !32)
!13525 = distinct !DILocation(line: 62, column: 10, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13513, file: !13510, line: 41, column: 15)
!13527 = !{i64 1648838}
!13528 = !DILocation(line: 0, scope: !13521, inlinedAt: !13525)
!13529 = !DILocation(line: 86, column: 3, scope: !13526)
!13530 = distinct !{!13530, !13519, !13531}
!13531 = !DILocation(line: 105, column: 2, scope: !13513)
!13532 = distinct !DISubprogram(name: "k_cpu_idle", scope: !309, file: !309, line: 5627, type: !3154, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !330)
!13533 = !DILocation(line: 5629, column: 2, scope: !13532)
!13534 = !DILocation(line: 5630, column: 1, scope: !13532)
!13535 = !DISubprogram(name: "arch_cpu_idle", scope: !3469, file: !3469, line: 167, type: !3154, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!13536 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3110, file: !3110, line: 30, type: !13537, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13539)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!102, !3119, !170}
!13539 = !{!13540, !13541, !13542, !13543}
!13540 = !DILocalVariable(name: "node", arg: 1, scope: !13536, file: !3110, line: 30, type: !3119)
!13541 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13536, file: !3110, line: 30, type: !170)
!13542 = !DILocalVariable(name: "ret", scope: !13536, file: !3110, line: 32, type: !102)
!13543 = !DILocalVariable(name: "anode", scope: !13544, file: !3110, line: 40, type: !3108)
!13544 = distinct !DILexicalBlock(scope: !13545, file: !3110, line: 34, column: 68)
!13545 = distinct !DILexicalBlock(scope: !13536, file: !3110, line: 34, column: 6)
!13546 = !DILocation(line: 0, scope: !13536)
!13547 = !DILocation(line: 34, column: 12, scope: !13545)
!13548 = !DILocation(line: 34, column: 21, scope: !13545)
!13549 = !DILocation(line: 34, column: 25, scope: !13545)
!13550 = !DILocation(line: 34, column: 52, scope: !13545)
!13551 = !DILocation(line: 34, column: 6, scope: !13536)
!13552 = !DILocation(line: 0, scope: !13544)
!13553 = !DILocation(line: 43, column: 16, scope: !13544)
!13554 = !DILocation(line: 44, column: 7, scope: !13544)
!13555 = !DILocation(line: 42, column: 11, scope: !13544)
!13556 = !DILocation(line: 45, column: 4, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13558, file: !3110, line: 44, column: 19)
!13558 = distinct !DILexicalBlock(scope: !13544, file: !3110, line: 44, column: 7)
!13559 = !DILocation(line: 46, column: 3, scope: !13557)
!13560 = !DILocation(line: 52, column: 9, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13545, file: !3110, line: 47, column: 9)
!13562 = !DILocation(line: 0, scope: !13545)
!13563 = !DILocation(line: 55, column: 2, scope: !13536)
!13564 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !316, file: !316, line: 270, type: !13565, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13567)
!13565 = !DISubroutineType(types: !13566)
!13566 = !{!167, !3119}
!13567 = !{!13568}
!13568 = !DILocalVariable(name: "node", arg: 1, scope: !13564, file: !316, line: 270, type: !3119)
!13569 = !DILocation(line: 0, scope: !13564)
!13570 = !DILocation(line: 272, column: 15, scope: !13564)
!13571 = !DILocation(line: 272, column: 9, scope: !13564)
!13572 = !DILocation(line: 272, column: 2, scope: !13564)
!13573 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3110, file: !3110, line: 58, type: !13574, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13593)
!13574 = !DISubroutineType(types: !13575)
!13575 = !{null, !13576}
!13576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13577, size: 32)
!13577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !309, line: 1709, size: 128, elements: !13578)
!13578 = !{!13579, !13585, !13587}
!13579 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13577, file: !309, line: 1710, baseType: !13580, size: 64)
!13580 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !316, line: 46, baseType: !13581)
!13581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !316, line: 41, size: 64, elements: !13582)
!13582 = !{!13583, !13584}
!13583 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13581, file: !316, line: 42, baseType: !3119, size: 32)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13581, file: !316, line: 43, baseType: !3119, size: 32, offset: 32)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13577, file: !309, line: 1711, baseType: !13586, offset: 64)
!13586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!13587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13577, file: !309, line: 1712, baseType: !13588, size: 64, offset: 64)
!13588 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !13589)
!13589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !13590)
!13590 = !{!13591}
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13589, file: !333, line: 232, baseType: !13592, size: 64)
!13592 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !3122)
!13593 = !{!13594}
!13594 = !DILocalVariable(name: "queue", arg: 1, scope: !13573, file: !3110, line: 58, type: !13576)
!13595 = !DILocation(line: 0, scope: !13573)
!13596 = !DILocation(line: 60, column: 26, scope: !13573)
!13597 = !DILocation(line: 60, column: 2, scope: !13573)
!13598 = !DILocation(line: 62, column: 23, scope: !13573)
!13599 = !DILocation(line: 62, column: 2, scope: !13573)
!13600 = !DILocation(line: 70, column: 1, scope: !13573)
!13601 = distinct !DISubprogram(name: "sys_sflist_init", scope: !316, file: !316, line: 202, type: !13602, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13605)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{null, !13604}
!13604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13580, size: 32)
!13605 = !{!13606}
!13606 = !DILocalVariable(name: "list", arg: 1, scope: !13601, file: !316, line: 202, type: !13604)
!13607 = !DILocation(line: 0, scope: !13601)
!13608 = !DILocation(line: 204, column: 8, scope: !13601)
!13609 = !DILocation(line: 204, column: 13, scope: !13601)
!13610 = !DILocation(line: 205, column: 8, scope: !13601)
!13611 = !DILocation(line: 205, column: 13, scope: !13601)
!13612 = !DILocation(line: 206, column: 1, scope: !13601)
!13613 = distinct !DISubprogram(name: "z_waitq_init", scope: !13192, file: !13192, line: 47, type: !13614, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13617)
!13614 = !DISubroutineType(types: !13615)
!13615 = !{null, !13616}
!13616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13588, size: 32)
!13617 = !{!13618}
!13618 = !DILocalVariable(name: "w", arg: 1, scope: !13613, file: !13192, line: 47, type: !13616)
!13619 = !DILocation(line: 0, scope: !13613)
!13620 = !DILocation(line: 49, column: 21, scope: !13613)
!13621 = !DILocation(line: 49, column: 2, scope: !13613)
!13622 = !DILocation(line: 50, column: 1, scope: !13613)
!13623 = distinct !DISubprogram(name: "sys_dlist_init", scope: !338, file: !338, line: 197, type: !13624, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13627)
!13624 = !DISubroutineType(types: !13625)
!13625 = !{null, !13626}
!13626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13592, size: 32)
!13627 = !{!13628}
!13628 = !DILocalVariable(name: "list", arg: 1, scope: !13623, file: !338, line: 197, type: !13626)
!13629 = !DILocation(line: 0, scope: !13623)
!13630 = !DILocation(line: 199, column: 8, scope: !13623)
!13631 = !DILocation(line: 199, column: 13, scope: !13623)
!13632 = !DILocation(line: 200, column: 8, scope: !13623)
!13633 = !DILocation(line: 200, column: 13, scope: !13623)
!13634 = !DILocation(line: 201, column: 1, scope: !13623)
!13635 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3110, file: !3110, line: 94, type: !13574, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13636)
!13636 = !{!13637, !13638, !13643}
!13637 = !DILocalVariable(name: "queue", arg: 1, scope: !13635, file: !3110, line: 94, type: !13576)
!13638 = !DILocalVariable(name: "key", scope: !13635, file: !3110, line: 98, type: !13639)
!13639 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !329, line: 106, baseType: !13640)
!13640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !329, line: 32, size: 32, elements: !13641)
!13641 = !{!13642}
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13640, file: !329, line: 33, baseType: !103, size: 32)
!13643 = !DILocalVariable(name: "first_pending_thread", scope: !13635, file: !3110, line: 99, type: !13644)
!13644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13645, size: 32)
!13645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !392, line: 245, size: 1024, elements: !13646)
!13646 = !{!13647, !13685, !13697, !13698, !13699, !13700, !13706, !13718}
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13645, file: !392, line: 247, baseType: !13648, size: 384)
!13648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !392, line: 57, size: 384, elements: !13649)
!13649 = !{!13650, !13660, !13661, !13662, !13663, !13672, !13673, !13674}
!13650 = !DIDerivedType(tag: DW_TAG_member, scope: !13648, file: !392, line: 60, baseType: !13651, size: 64)
!13651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13648, file: !392, line: 60, size: 64, elements: !13652)
!13652 = !{!13653, !13654}
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13651, file: !392, line: 61, baseType: !3121, size: 64)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13651, file: !392, line: 62, baseType: !13655, size: 64)
!13655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !417, line: 49, size: 64, elements: !13656)
!13656 = !{!13657}
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13655, file: !417, line: 50, baseType: !13658, size: 64)
!13658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13659, size: 64, elements: !376)
!13659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13655, size: 32)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13648, file: !392, line: 68, baseType: !13616, size: 32, offset: 64)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13648, file: !392, line: 71, baseType: !167, size: 8, offset: 96)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13648, file: !392, line: 74, baseType: !167, size: 8, offset: 104)
!13663 = !DIDerivedType(tag: DW_TAG_member, scope: !13648, file: !392, line: 90, baseType: !13664, size: 16, offset: 112)
!13664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13648, file: !392, line: 90, size: 16, elements: !13665)
!13665 = !{!13666, !13671}
!13666 = !DIDerivedType(tag: DW_TAG_member, scope: !13664, file: !392, line: 91, baseType: !13667, size: 16)
!13667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13664, file: !392, line: 91, size: 16, elements: !13668)
!13668 = !{!13669, !13670}
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13667, file: !392, line: 96, baseType: !438, size: 8)
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13667, file: !392, line: 97, baseType: !167, size: 8, offset: 8)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13664, file: !392, line: 100, baseType: !442, size: 16)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13648, file: !392, line: 107, baseType: !121, size: 32, offset: 128)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13648, file: !392, line: 127, baseType: !102, size: 32, offset: 160)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13648, file: !392, line: 131, baseType: !13675, size: 192, offset: 192)
!13675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !333, line: 244, size: 192, elements: !13676)
!13676 = !{!13677, !13678, !13684}
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13675, file: !333, line: 245, baseType: !3121, size: 64)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13675, file: !333, line: 246, baseType: !13679, size: 32, offset: 64)
!13679 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !333, line: 242, baseType: !13680)
!13680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13681, size: 32)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{null, !13683}
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13675, size: 32)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13675, file: !333, line: 249, baseType: !215, size: 64, offset: 128)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13645, file: !392, line: 250, baseType: !13686, size: 288, offset: 384)
!13686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !459, line: 25, size: 288, elements: !13687)
!13687 = !{!13688, !13689, !13690, !13691, !13692, !13693, !13694, !13695, !13696}
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13686, file: !459, line: 26, baseType: !121, size: 32)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13686, file: !459, line: 27, baseType: !121, size: 32, offset: 32)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13686, file: !459, line: 28, baseType: !121, size: 32, offset: 64)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13686, file: !459, line: 29, baseType: !121, size: 32, offset: 96)
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13686, file: !459, line: 30, baseType: !121, size: 32, offset: 128)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13686, file: !459, line: 31, baseType: !121, size: 32, offset: 160)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13686, file: !459, line: 32, baseType: !121, size: 32, offset: 192)
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13686, file: !459, line: 33, baseType: !121, size: 32, offset: 224)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13686, file: !459, line: 34, baseType: !121, size: 32, offset: 256)
!13697 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13645, file: !392, line: 253, baseType: !102, size: 32, offset: 672)
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13645, file: !392, line: 256, baseType: !13588, size: 64, offset: 704)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13645, file: !392, line: 294, baseType: !103, size: 32, offset: 768)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13645, file: !392, line: 300, baseType: !13701, size: 96, offset: 800)
!13701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !392, line: 149, size: 96, elements: !13702)
!13702 = !{!13703, !13704, !13705}
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13701, file: !392, line: 153, baseType: !22, size: 32)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13701, file: !392, line: 162, baseType: !217, size: 32, offset: 32)
!13705 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13701, file: !392, line: 168, baseType: !217, size: 32, offset: 64)
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13645, file: !392, line: 325, baseType: !13707, size: 32, offset: 896)
!13707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13708, size: 32)
!13708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !13709)
!13709 = !{!13710, !13716, !13717}
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13708, file: !309, line: 5074, baseType: !13711, size: 96)
!13711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !13712)
!13712 = !{!13713, !13714, !13715}
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13711, file: !485, line: 57, baseType: !488, size: 32)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13711, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13711, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13708, file: !309, line: 5075, baseType: !13588, size: 64, offset: 96)
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13708, file: !309, line: 5076, baseType: !13586, offset: 160)
!13718 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13645, file: !392, line: 343, baseType: !13719, size: 64, offset: 928)
!13719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !459, line: 60, size: 64, elements: !13720)
!13720 = !{!13721, !13722}
!13721 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13719, file: !459, line: 63, baseType: !121, size: 32)
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13719, file: !459, line: 66, baseType: !121, size: 32, offset: 32)
!13723 = !DILocation(line: 0, scope: !13635)
!13724 = !DILocalVariable(name: "l", arg: 1, scope: !13725, file: !329, line: 136, type: !13728)
!13725 = distinct !DISubprogram(name: "k_spin_lock", scope: !329, file: !329, line: 136, type: !13726, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13729)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!13639, !13728}
!13728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13586, size: 32)
!13729 = !{!13724, !13730}
!13730 = !DILocalVariable(name: "k", scope: !13725, file: !329, line: 139, type: !13639)
!13731 = !DILocation(line: 0, scope: !13725, inlinedAt: !13732)
!13732 = distinct !DILocation(line: 98, column: 25, scope: !13635)
!13733 = !DILocation(line: 55, column: 2, scope: !13734, inlinedAt: !13738)
!13734 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13735)
!13735 = !{!13736, !13737}
!13736 = !DILocalVariable(name: "key", scope: !13734, file: !5695, line: 44, type: !32)
!13737 = !DILocalVariable(name: "tmp", scope: !13734, file: !5695, line: 53, type: !32)
!13738 = distinct !DILocation(line: 145, column: 10, scope: !13725, inlinedAt: !13732)
!13739 = !{i64 1656579}
!13740 = !DILocation(line: 0, scope: !13734, inlinedAt: !13738)
!13741 = !DILocation(line: 101, column: 55, scope: !13635)
!13742 = !DILocation(line: 101, column: 25, scope: !13635)
!13743 = !DILocation(line: 103, column: 27, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13635, file: !3110, line: 103, column: 6)
!13745 = !DILocation(line: 103, column: 6, scope: !13635)
!13746 = !DILocation(line: 104, column: 3, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13744, file: !3110, line: 103, column: 36)
!13748 = !DILocation(line: 105, column: 2, scope: !13747)
!13749 = !DILocation(line: 98, column: 45, scope: !13635)
!13750 = !DILocation(line: 108, column: 2, scope: !13635)
!13751 = !DILocation(line: 109, column: 1, scope: !13635)
!13752 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3110, file: !3110, line: 81, type: !13753, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13755)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{null, !13644, !102}
!13755 = !{!13756, !13757}
!13756 = !DILocalVariable(name: "thread", arg: 1, scope: !13752, file: !3110, line: 81, type: !13644)
!13757 = !DILocalVariable(name: "data", arg: 2, scope: !13752, file: !3110, line: 81, type: !102)
!13758 = !DILocation(line: 0, scope: !13752)
!13759 = !DILocalVariable(name: "thread", arg: 1, scope: !13760, file: !13761, line: 134, type: !13644)
!13760 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13761, file: !13761, line: 134, type: !13762, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13764)
!13761 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13762 = !DISubroutineType(types: !13763)
!13763 = !{null, !13644, !32, !102}
!13764 = !{!13759, !13765, !13766}
!13765 = !DILocalVariable(name: "value", arg: 2, scope: !13760, file: !13761, line: 135, type: !32)
!13766 = !DILocalVariable(name: "data", arg: 3, scope: !13760, file: !13761, line: 136, type: !102)
!13767 = !DILocation(line: 0, scope: !13760, inlinedAt: !13768)
!13768 = distinct !DILocation(line: 83, column: 2, scope: !13752)
!13769 = !DILocalVariable(name: "thread", arg: 1, scope: !13770, file: !12888, line: 65, type: !13644)
!13770 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12888, file: !12888, line: 65, type: !13771, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13773)
!13771 = !DISubroutineType(types: !13772)
!13772 = !{null, !13644, !32}
!13773 = !{!13769, !13774}
!13774 = !DILocalVariable(name: "value", arg: 2, scope: !13770, file: !12888, line: 65, type: !32)
!13775 = !DILocation(line: 0, scope: !13770, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 138, column: 2, scope: !13760, inlinedAt: !13768)
!13777 = !DILocation(line: 67, column: 15, scope: !13770, inlinedAt: !13776)
!13778 = !DILocation(line: 67, column: 33, scope: !13770, inlinedAt: !13776)
!13779 = !DILocation(line: 139, column: 15, scope: !13760, inlinedAt: !13768)
!13780 = !DILocation(line: 139, column: 25, scope: !13760, inlinedAt: !13768)
!13781 = !DILocation(line: 84, column: 2, scope: !13752)
!13782 = !DILocation(line: 85, column: 1, scope: !13752)
!13783 = distinct !DISubprogram(name: "k_queue_insert", scope: !3110, file: !3110, line: 175, type: !13784, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13786)
!13784 = !DISubroutineType(types: !13785)
!13785 = !{null, !13576, !102, !102}
!13786 = !{!13787, !13788, !13789}
!13787 = !DILocalVariable(name: "queue", arg: 1, scope: !13783, file: !3110, line: 175, type: !13576)
!13788 = !DILocalVariable(name: "prev", arg: 2, scope: !13783, file: !3110, line: 175, type: !102)
!13789 = !DILocalVariable(name: "data", arg: 3, scope: !13783, file: !3110, line: 175, type: !102)
!13790 = !DILocation(line: 0, scope: !13783)
!13791 = !DILocation(line: 179, column: 8, scope: !13783)
!13792 = !DILocation(line: 182, column: 1, scope: !13783)
!13793 = distinct !DISubprogram(name: "queue_insert", scope: !3110, file: !3110, line: 120, type: !13794, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13796)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{!834, !13576, !102, !102, !170, !170}
!13796 = !{!13797, !13798, !13799, !13800, !13801, !13802, !13803, !13804}
!13797 = !DILocalVariable(name: "queue", arg: 1, scope: !13793, file: !3110, line: 120, type: !13576)
!13798 = !DILocalVariable(name: "prev", arg: 2, scope: !13793, file: !3110, line: 120, type: !102)
!13799 = !DILocalVariable(name: "data", arg: 3, scope: !13793, file: !3110, line: 120, type: !102)
!13800 = !DILocalVariable(name: "alloc", arg: 4, scope: !13793, file: !3110, line: 121, type: !170)
!13801 = !DILocalVariable(name: "is_append", arg: 5, scope: !13793, file: !3110, line: 121, type: !170)
!13802 = !DILocalVariable(name: "first_pending_thread", scope: !13793, file: !3110, line: 123, type: !13644)
!13803 = !DILocalVariable(name: "key", scope: !13793, file: !3110, line: 124, type: !13639)
!13804 = !DILocalVariable(name: "anode", scope: !13805, file: !3110, line: 146, type: !3108)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !3110, line: 145, column: 13)
!13806 = distinct !DILexicalBlock(scope: !13793, file: !3110, line: 145, column: 6)
!13807 = !DILocation(line: 0, scope: !13793)
!13808 = !DILocation(line: 124, column: 45, scope: !13793)
!13809 = !DILocation(line: 0, scope: !13725, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 124, column: 25, scope: !13793)
!13811 = !DILocation(line: 55, column: 2, scope: !13734, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 145, column: 10, scope: !13725, inlinedAt: !13810)
!13813 = !DILocation(line: 0, scope: !13734, inlinedAt: !13812)
!13814 = !DILocation(line: 128, column: 6, scope: !13793)
!13815 = !DILocation(line: 129, column: 39, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13817, file: !3110, line: 128, column: 17)
!13817 = distinct !DILexicalBlock(scope: !13793, file: !3110, line: 128, column: 6)
!13818 = !DILocation(line: 129, column: 10, scope: !13816)
!13819 = !DILocation(line: 130, column: 2, scope: !13816)
!13820 = !DILocation(line: 131, column: 55, scope: !13793)
!13821 = !DILocation(line: 131, column: 25, scope: !13793)
!13822 = !DILocation(line: 133, column: 27, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13793, file: !3110, line: 133, column: 6)
!13824 = !DILocation(line: 133, column: 6, scope: !13793)
!13825 = !DILocation(line: 136, column: 3, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13823, file: !3110, line: 133, column: 36)
!13827 = !DILocation(line: 137, column: 3, scope: !13826)
!13828 = !DILocation(line: 141, column: 3, scope: !13826)
!13829 = !DILocation(line: 145, column: 6, scope: !13793)
!13830 = !DILocation(line: 148, column: 11, scope: !13805)
!13831 = !DILocation(line: 0, scope: !13805)
!13832 = !DILocation(line: 149, column: 13, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13805, file: !3110, line: 149, column: 7)
!13834 = !DILocation(line: 149, column: 7, scope: !13805)
!13835 = !DILocalVariable(name: "key", arg: 2, scope: !13836, file: !329, line: 190, type: !13639)
!13836 = distinct !DISubprogram(name: "k_spin_unlock", scope: !329, file: !329, line: 189, type: !13837, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13839)
!13837 = !DISubroutineType(types: !13838)
!13838 = !{null, !13728, !13639}
!13839 = !{!13840, !13835}
!13840 = !DILocalVariable(name: "l", arg: 1, scope: !13836, file: !329, line: 189, type: !13728)
!13841 = !DILocation(line: 0, scope: !13836, inlinedAt: !13842)
!13842 = distinct !DILocation(line: 150, column: 4, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13833, file: !3110, line: 149, column: 22)
!13844 = !DILocalVariable(name: "key", arg: 1, scope: !13845, file: !5695, line: 84, type: !32)
!13845 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13846)
!13846 = !{!13844}
!13847 = !DILocation(line: 0, scope: !13845, inlinedAt: !13848)
!13848 = distinct !DILocation(line: 215, column: 2, scope: !13836, inlinedAt: !13842)
!13849 = !DILocation(line: 95, column: 2, scope: !13845, inlinedAt: !13848)
!13850 = !{i64 1657396}
!13851 = !DILocation(line: 157, column: 10, scope: !13805)
!13852 = !DILocation(line: 157, column: 15, scope: !13805)
!13853 = !DILocation(line: 158, column: 27, scope: !13805)
!13854 = !DILocation(line: 158, column: 3, scope: !13805)
!13855 = !DILocation(line: 161, column: 19, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13806, file: !3110, line: 160, column: 9)
!13857 = !DILocation(line: 161, column: 3, scope: !13856)
!13858 = !DILocation(line: 166, column: 42, scope: !13793)
!13859 = !DILocation(line: 166, column: 28, scope: !13793)
!13860 = !DILocation(line: 166, column: 36, scope: !13793)
!13861 = !DILocation(line: 166, column: 2, scope: !13793)
!13862 = !DILocation(line: 168, column: 2, scope: !13793)
!13863 = !DILocation(line: 172, column: 2, scope: !13793)
!13864 = !DILocation(line: 173, column: 1, scope: !13793)
!13865 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !316, file: !316, line: 255, type: !13866, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13868)
!13866 = !DISubroutineType(types: !13867)
!13867 = !{!3119, !13604}
!13868 = !{!13869}
!13869 = !DILocalVariable(name: "list", arg: 1, scope: !13865, file: !316, line: 255, type: !13604)
!13870 = !DILocation(line: 0, scope: !13865)
!13871 = !DILocation(line: 257, column: 15, scope: !13865)
!13872 = !DILocation(line: 257, column: 2, scope: !13865)
!13873 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13761, file: !13761, line: 102, type: !13874, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13875)
!13874 = !DISubroutineType(types: !3073)
!13875 = !{!13876}
!13876 = !DILocalVariable(name: "size", arg: 1, scope: !13873, file: !13761, line: 102, type: !217)
!13877 = !DILocation(line: 0, scope: !13873)
!13878 = !DILocation(line: 104, column: 9, scope: !13873)
!13879 = !DILocation(line: 104, column: 2, scope: !13873)
!13880 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !316, file: !316, line: 288, type: !13881, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13883)
!13881 = !DISubroutineType(types: !13882)
!13882 = !{null, !3119, !167}
!13883 = !{!13884, !13885}
!13884 = !DILocalVariable(name: "node", arg: 1, scope: !13880, file: !316, line: 288, type: !3119)
!13885 = !DILocalVariable(name: "flags", arg: 2, scope: !13880, file: !316, line: 288, type: !167)
!13886 = !DILocation(line: 0, scope: !13880)
!13887 = !DILocation(line: 291, column: 25, scope: !13880)
!13888 = !DILocation(line: 291, column: 8, scope: !13880)
!13889 = !DILocation(line: 291, column: 23, scope: !13880)
!13890 = !DILocation(line: 292, column: 1, scope: !13880)
!13891 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !316, file: !316, line: 420, type: !13892, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13894)
!13892 = !DISubroutineType(types: !13893)
!13893 = !{null, !13604, !3119, !3119}
!13894 = !{!13895, !13896, !13897}
!13895 = !DILocalVariable(name: "list", arg: 1, scope: !13891, file: !316, line: 420, type: !13604)
!13896 = !DILocalVariable(name: "prev", arg: 2, scope: !13891, file: !316, line: 420, type: !3119)
!13897 = !DILocalVariable(name: "node", arg: 3, scope: !13891, file: !316, line: 420, type: !3119)
!13898 = !DILocation(line: 0, scope: !13891)
!13899 = !DILocation(line: 420, column: 1, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13891, file: !316, line: 420, column: 1)
!13901 = !DILocation(line: 420, column: 1, scope: !13891)
!13902 = !DILocation(line: 420, column: 1, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13900, file: !316, line: 420, column: 1)
!13904 = !DILocation(line: 420, column: 1, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13900, file: !316, line: 420, column: 1)
!13906 = !DILocation(line: 420, column: 1, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13905, file: !316, line: 420, column: 1)
!13908 = !DILocation(line: 420, column: 1, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13905, file: !316, line: 420, column: 1)
!13910 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !316, file: !316, line: 360, type: !13911, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{null, !13604, !3119}
!13913 = !{!13914, !13915}
!13914 = !DILocalVariable(name: "list", arg: 1, scope: !13910, file: !316, line: 360, type: !13604)
!13915 = !DILocalVariable(name: "node", arg: 2, scope: !13910, file: !316, line: 360, type: !3119)
!13916 = !DILocation(line: 0, scope: !13910)
!13917 = !DILocation(line: 360, column: 1, scope: !13910)
!13918 = !DILocation(line: 360, column: 1, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13910, file: !316, line: 360, column: 1)
!13920 = !DILocation(line: 360, column: 1, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13919, file: !316, line: 360, column: 1)
!13922 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !316, file: !316, line: 211, type: !13923, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13925)
!13923 = !DISubroutineType(types: !13924)
!13924 = !{!3119, !3119}
!13925 = !{!13926}
!13926 = !DILocalVariable(name: "node", arg: 1, scope: !13922, file: !316, line: 211, type: !3119)
!13927 = !DILocation(line: 0, scope: !13922)
!13928 = !DILocation(line: 213, column: 32, scope: !13922)
!13929 = !DILocation(line: 213, column: 47, scope: !13922)
!13930 = !DILocation(line: 213, column: 9, scope: !13922)
!13931 = !DILocation(line: 213, column: 2, scope: !13922)
!13932 = distinct !DISubprogram(name: "sys_sflist_append", scope: !316, file: !316, line: 373, type: !13911, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13933)
!13933 = !{!13934, !13935}
!13934 = !DILocalVariable(name: "list", arg: 1, scope: !13932, file: !316, line: 373, type: !13604)
!13935 = !DILocalVariable(name: "node", arg: 2, scope: !13932, file: !316, line: 373, type: !3119)
!13936 = !DILocation(line: 0, scope: !13932)
!13937 = !DILocation(line: 373, column: 1, scope: !13932)
!13938 = !DILocation(line: 373, column: 1, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13932, file: !316, line: 373, column: 1)
!13940 = !DILocation(line: 373, column: 1, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13939, file: !316, line: 373, column: 1)
!13942 = !DILocation(line: 373, column: 1, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13939, file: !316, line: 373, column: 1)
!13944 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !316, file: !316, line: 218, type: !13945, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13947)
!13945 = !DISubroutineType(types: !13946)
!13946 = !{null, !3119, !3119}
!13947 = !{!13948, !13949, !13950}
!13948 = !DILocalVariable(name: "parent", arg: 1, scope: !13944, file: !316, line: 218, type: !3119)
!13949 = !DILocalVariable(name: "child", arg: 2, scope: !13944, file: !316, line: 219, type: !3119)
!13950 = !DILocalVariable(name: "cur_flags", scope: !13944, file: !316, line: 221, type: !167)
!13951 = !DILocation(line: 0, scope: !13944)
!13952 = !DILocation(line: 221, column: 22, scope: !13944)
!13953 = !DILocation(line: 223, column: 27, scope: !13944)
!13954 = !DILocation(line: 223, column: 39, scope: !13944)
!13955 = !DILocation(line: 223, column: 37, scope: !13944)
!13956 = !DILocation(line: 223, column: 10, scope: !13944)
!13957 = !DILocation(line: 223, column: 25, scope: !13944)
!13958 = !DILocation(line: 224, column: 1, scope: !13944)
!13959 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !316, file: !316, line: 231, type: !13911, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13960)
!13960 = !{!13961, !13962}
!13961 = !DILocalVariable(name: "list", arg: 1, scope: !13959, file: !316, line: 231, type: !13604)
!13962 = !DILocalVariable(name: "node", arg: 2, scope: !13959, file: !316, line: 231, type: !3119)
!13963 = !DILocation(line: 0, scope: !13959)
!13964 = !DILocation(line: 233, column: 8, scope: !13959)
!13965 = !DILocation(line: 233, column: 13, scope: !13959)
!13966 = !DILocation(line: 234, column: 1, scope: !13959)
!13967 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !316, file: !316, line: 226, type: !13911, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13968)
!13968 = !{!13969, !13970}
!13969 = !DILocalVariable(name: "list", arg: 1, scope: !13967, file: !316, line: 226, type: !13604)
!13970 = !DILocalVariable(name: "node", arg: 2, scope: !13967, file: !316, line: 226, type: !3119)
!13971 = !DILocation(line: 0, scope: !13967)
!13972 = !DILocation(line: 228, column: 8, scope: !13967)
!13973 = !DILocation(line: 228, column: 13, scope: !13967)
!13974 = !DILocation(line: 229, column: 1, scope: !13967)
!13975 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !316, file: !316, line: 243, type: !13866, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13976)
!13976 = !{!13977}
!13977 = !DILocalVariable(name: "list", arg: 1, scope: !13975, file: !316, line: 243, type: !13604)
!13978 = !DILocation(line: 0, scope: !13975)
!13979 = !DILocation(line: 245, column: 15, scope: !13975)
!13980 = !DILocation(line: 245, column: 2, scope: !13975)
!13981 = distinct !DISubprogram(name: "k_queue_append", scope: !3110, file: !3110, line: 184, type: !13982, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13984)
!13982 = !DISubroutineType(types: !13983)
!13983 = !{null, !13576, !102}
!13984 = !{!13985, !13986}
!13985 = !DILocalVariable(name: "queue", arg: 1, scope: !13981, file: !3110, line: 184, type: !13576)
!13986 = !DILocalVariable(name: "data", arg: 2, scope: !13981, file: !3110, line: 184, type: !102)
!13987 = !DILocation(line: 0, scope: !13981)
!13988 = !DILocation(line: 188, column: 8, scope: !13981)
!13989 = !DILocation(line: 191, column: 1, scope: !13981)
!13990 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3110, file: !3110, line: 193, type: !13982, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !13991)
!13991 = !{!13992, !13993}
!13992 = !DILocalVariable(name: "queue", arg: 1, scope: !13990, file: !3110, line: 193, type: !13576)
!13993 = !DILocalVariable(name: "data", arg: 2, scope: !13990, file: !3110, line: 193, type: !102)
!13994 = !DILocation(line: 0, scope: !13990)
!13995 = !DILocation(line: 197, column: 8, scope: !13990)
!13996 = !DILocation(line: 200, column: 1, scope: !13990)
!13997 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3110, file: !3110, line: 202, type: !13998, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14000)
!13998 = !DISubroutineType(types: !13999)
!13999 = !{!834, !13576, !102}
!14000 = !{!14001, !14002, !14003}
!14001 = !DILocalVariable(name: "queue", arg: 1, scope: !13997, file: !3110, line: 202, type: !13576)
!14002 = !DILocalVariable(name: "data", arg: 2, scope: !13997, file: !3110, line: 202, type: !102)
!14003 = !DILocalVariable(name: "ret", scope: !13997, file: !3110, line: 206, type: !834)
!14004 = !DILocation(line: 0, scope: !13997)
!14005 = !DILocation(line: 206, column: 16, scope: !13997)
!14006 = !DILocation(line: 210, column: 2, scope: !13997)
!14007 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3110, file: !3110, line: 223, type: !13998, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14008)
!14008 = !{!14009, !14010, !14011}
!14009 = !DILocalVariable(name: "queue", arg: 1, scope: !14007, file: !3110, line: 223, type: !13576)
!14010 = !DILocalVariable(name: "data", arg: 2, scope: !14007, file: !3110, line: 223, type: !102)
!14011 = !DILocalVariable(name: "ret", scope: !14007, file: !3110, line: 227, type: !834)
!14012 = !DILocation(line: 0, scope: !14007)
!14013 = !DILocation(line: 227, column: 16, scope: !14007)
!14014 = !DILocation(line: 231, column: 2, scope: !14007)
!14015 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3110, file: !3110, line: 244, type: !14016, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14018)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{!103, !13576, !102, !102}
!14018 = !{!14019, !14020, !14021, !14022, !14023}
!14019 = !DILocalVariable(name: "queue", arg: 1, scope: !14015, file: !3110, line: 244, type: !13576)
!14020 = !DILocalVariable(name: "head", arg: 2, scope: !14015, file: !3110, line: 244, type: !102)
!14021 = !DILocalVariable(name: "tail", arg: 3, scope: !14015, file: !3110, line: 244, type: !102)
!14022 = !DILocalVariable(name: "key", scope: !14015, file: !3110, line: 255, type: !13639)
!14023 = !DILocalVariable(name: "thread", scope: !14015, file: !3110, line: 256, type: !13644)
!14024 = !DILocation(line: 0, scope: !14015)
!14025 = !DILocation(line: 249, column: 2, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14015, file: !3110, line: 249, column: 2)
!14027 = !DILocation(line: 255, column: 45, scope: !14015)
!14028 = !DILocation(line: 0, scope: !13725, inlinedAt: !14029)
!14029 = distinct !DILocation(line: 255, column: 25, scope: !14015)
!14030 = !DILocation(line: 55, column: 2, scope: !13734, inlinedAt: !14031)
!14031 = distinct !DILocation(line: 145, column: 10, scope: !13725, inlinedAt: !14029)
!14032 = !DILocation(line: 0, scope: !13734, inlinedAt: !14031)
!14033 = !DILocation(line: 259, column: 42, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !3110, line: 258, column: 20)
!14035 = distinct !DILexicalBlock(scope: !14015, file: !3110, line: 258, column: 6)
!14036 = !DILocation(line: 259, column: 12, scope: !14034)
!14037 = !DILocation(line: 262, column: 24, scope: !14015)
!14038 = !DILocation(line: 262, column: 2, scope: !14015)
!14039 = !DILocation(line: 263, column: 3, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14015, file: !3110, line: 262, column: 45)
!14041 = !DILocation(line: 264, column: 11, scope: !14040)
!14042 = !DILocation(line: 264, column: 10, scope: !14040)
!14043 = !DILocation(line: 265, column: 12, scope: !14040)
!14044 = !DILocation(line: 262, column: 15, scope: !14015)
!14045 = distinct !{!14045, !14038, !14046}
!14046 = !DILocation(line: 266, column: 2, scope: !14015)
!14047 = !DILocation(line: 268, column: 6, scope: !14015)
!14048 = !DILocation(line: 269, column: 34, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14050, file: !3110, line: 268, column: 20)
!14050 = distinct !DILexicalBlock(scope: !14015, file: !3110, line: 268, column: 6)
!14051 = !DILocation(line: 269, column: 3, scope: !14049)
!14052 = !DILocation(line: 270, column: 2, scope: !14049)
!14053 = !DILocation(line: 275, column: 2, scope: !14015)
!14054 = !DILocation(line: 277, column: 1, scope: !14015)
!14055 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !316, file: !316, line: 391, type: !14056, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{null, !13604, !102, !102}
!14058 = !{!14059, !14060, !14061}
!14059 = !DILocalVariable(name: "list", arg: 1, scope: !14055, file: !316, line: 391, type: !13604)
!14060 = !DILocalVariable(name: "head", arg: 2, scope: !14055, file: !316, line: 391, type: !102)
!14061 = !DILocalVariable(name: "tail", arg: 3, scope: !14055, file: !316, line: 391, type: !102)
!14062 = !DILocation(line: 0, scope: !14055)
!14063 = !DILocation(line: 391, column: 1, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14055, file: !316, line: 391, column: 1)
!14065 = !DILocation(line: 391, column: 1, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14067, file: !316, line: 391, column: 1)
!14067 = distinct !DILexicalBlock(scope: !14064, file: !316, line: 391, column: 1)
!14068 = !DILocation(line: 0, scope: !14066)
!14069 = !DILocation(line: 391, column: 1, scope: !14067)
!14070 = !DILocation(line: 391, column: 1, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14066, file: !316, line: 391, column: 1)
!14072 = !DILocation(line: 391, column: 1, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14066, file: !316, line: 391, column: 1)
!14074 = !DILocation(line: 391, column: 1, scope: !14055)
!14075 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3110, file: !3110, line: 279, type: !14076, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14090)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{!103, !13576, !14078}
!14078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14079, size: 32)
!14079 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !664, line: 40, baseType: !14080)
!14080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !664, line: 35, size: 64, elements: !14081)
!14081 = !{!14082, !14089}
!14082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14080, file: !664, line: 36, baseType: !14083, size: 32)
!14083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14084, size: 32)
!14084 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !664, line: 33, baseType: !14085)
!14085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !664, line: 29, size: 32, elements: !14086)
!14086 = !{!14087}
!14087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14085, file: !664, line: 30, baseType: !14088, size: 32)
!14088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14085, size: 32)
!14089 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14080, file: !664, line: 37, baseType: !14083, size: 32, offset: 32)
!14090 = !{!14091, !14092, !14093}
!14091 = !DILocalVariable(name: "queue", arg: 1, scope: !14075, file: !3110, line: 279, type: !13576)
!14092 = !DILocalVariable(name: "list", arg: 2, scope: !14075, file: !3110, line: 279, type: !14078)
!14093 = !DILocalVariable(name: "ret", scope: !14075, file: !3110, line: 281, type: !103)
!14094 = !DILocation(line: 0, scope: !14075)
!14095 = !DILocation(line: 286, column: 2, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14075, file: !3110, line: 286, column: 2)
!14097 = !DILocation(line: 286, column: 2, scope: !14075)
!14098 = !DILocation(line: 301, column: 41, scope: !14075)
!14099 = !DILocation(line: 301, column: 53, scope: !14075)
!14100 = !DILocation(line: 301, column: 8, scope: !14075)
!14101 = !DILocation(line: 302, column: 2, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14075, file: !3110, line: 302, column: 2)
!14103 = !DILocation(line: 302, column: 2, scope: !14075)
!14104 = !DILocation(line: 307, column: 2, scope: !14075)
!14105 = !DILocation(line: 311, column: 2, scope: !14075)
!14106 = !DILocation(line: 312, column: 1, scope: !14075)
!14107 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !664, file: !664, line: 261, type: !14108, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14110)
!14108 = !DISubroutineType(types: !14109)
!14109 = !{!170, !14078}
!14110 = !{!14111}
!14111 = !DILocalVariable(name: "list", arg: 1, scope: !14107, file: !664, line: 261, type: !14078)
!14112 = !DILocation(line: 0, scope: !14107)
!14113 = !DILocation(line: 261, column: 1, scope: !14107)
!14114 = distinct !DISubprogram(name: "sys_slist_init", scope: !664, file: !664, line: 196, type: !14115, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14117)
!14115 = !DISubroutineType(types: !14116)
!14116 = !{null, !14078}
!14117 = !{!14118}
!14118 = !DILocalVariable(name: "list", arg: 1, scope: !14114, file: !664, line: 196, type: !14078)
!14119 = !DILocation(line: 0, scope: !14114)
!14120 = !DILocation(line: 198, column: 8, scope: !14114)
!14121 = !DILocation(line: 198, column: 13, scope: !14114)
!14122 = !DILocation(line: 199, column: 8, scope: !14114)
!14123 = !DILocation(line: 199, column: 13, scope: !14114)
!14124 = !DILocation(line: 200, column: 1, scope: !14114)
!14125 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !664, file: !664, line: 231, type: !14126, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14128)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!14083, !14078}
!14128 = !{!14129}
!14129 = !DILocalVariable(name: "list", arg: 1, scope: !14125, file: !664, line: 231, type: !14078)
!14130 = !DILocation(line: 0, scope: !14125)
!14131 = !DILocation(line: 233, column: 15, scope: !14125)
!14132 = !DILocation(line: 233, column: 2, scope: !14125)
!14133 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3110, file: !3110, line: 314, type: !14134, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14140)
!14134 = !DISubroutineType(types: !14135)
!14135 = !{!102, !13576, !14136}
!14136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !14137)
!14137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !14138)
!14138 = !{!14139}
!14139 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14137, file: !214, line: 66, baseType: !213, size: 64)
!14140 = !{!14141, !14142, !14143, !14144, !14145, !14148}
!14141 = !DILocalVariable(name: "queue", arg: 1, scope: !14133, file: !3110, line: 314, type: !13576)
!14142 = !DILocalVariable(name: "timeout", arg: 2, scope: !14133, file: !3110, line: 314, type: !14136)
!14143 = !DILocalVariable(name: "key", scope: !14133, file: !3110, line: 316, type: !13639)
!14144 = !DILocalVariable(name: "data", scope: !14133, file: !3110, line: 317, type: !102)
!14145 = !DILocalVariable(name: "node", scope: !14146, file: !3110, line: 322, type: !3119)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !3110, line: 321, column: 52)
!14147 = distinct !DILexicalBlock(scope: !14133, file: !3110, line: 321, column: 6)
!14148 = !DILocalVariable(name: "ret", scope: !14133, file: !3110, line: 343, type: !103)
!14149 = !DILocation(line: 0, scope: !14133)
!14150 = !DILocation(line: 316, column: 45, scope: !14133)
!14151 = !DILocation(line: 0, scope: !13725, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 316, column: 25, scope: !14133)
!14153 = !DILocation(line: 55, column: 2, scope: !13734, inlinedAt: !14154)
!14154 = distinct !DILocation(line: 145, column: 10, scope: !13725, inlinedAt: !14152)
!14155 = !DILocation(line: 0, scope: !13734, inlinedAt: !14154)
!14156 = !DILocation(line: 321, column: 6, scope: !14147)
!14157 = !DILocation(line: 321, column: 6, scope: !14133)
!14158 = !{!"branch_weights", i32 1, i32 2000}
!14159 = !DILocation(line: 324, column: 10, scope: !14146)
!14160 = !DILocation(line: 0, scope: !14146)
!14161 = !DILocation(line: 325, column: 10, scope: !14146)
!14162 = !DILocation(line: 0, scope: !13836, inlinedAt: !14163)
!14163 = distinct !DILocation(line: 326, column: 3, scope: !14146)
!14164 = !DILocation(line: 0, scope: !13845, inlinedAt: !14165)
!14165 = distinct !DILocation(line: 215, column: 2, scope: !13836, inlinedAt: !14163)
!14166 = !DILocation(line: 95, column: 2, scope: !13845, inlinedAt: !14165)
!14167 = !DILocation(line: 335, column: 6, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14133, file: !3110, line: 335, column: 6)
!14169 = !DILocation(line: 335, column: 6, scope: !14133)
!14170 = !DILocation(line: 0, scope: !13836, inlinedAt: !14171)
!14171 = distinct !DILocation(line: 336, column: 3, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14168, file: !3110, line: 335, column: 40)
!14173 = !DILocation(line: 0, scope: !13845, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 215, column: 2, scope: !13836, inlinedAt: !14171)
!14175 = !DILocation(line: 95, column: 2, scope: !13845, inlinedAt: !14174)
!14176 = !DILocation(line: 340, column: 3, scope: !14172)
!14177 = !DILocation(line: 343, column: 51, scope: !14133)
!14178 = !DILocation(line: 343, column: 12, scope: !14133)
!14179 = !DILocation(line: 348, column: 14, scope: !14133)
!14180 = !DILocation(line: 348, column: 9, scope: !14133)
!14181 = !DILocation(line: 348, column: 29, scope: !14133)
!14182 = !DILocation(line: 348, column: 44, scope: !14133)
!14183 = !DILocation(line: 349, column: 1, scope: !14133)
!14184 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !316, file: !316, line: 323, type: !14185, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14187)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!170, !13604}
!14187 = !{!14188}
!14188 = !DILocalVariable(name: "list", arg: 1, scope: !14184, file: !316, line: 323, type: !13604)
!14189 = !DILocation(line: 0, scope: !14184)
!14190 = !DILocation(line: 323, column: 1, scope: !14184)
!14191 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !316, file: !316, line: 434, type: !13866, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14192)
!14192 = !{!14193, !14194}
!14193 = !DILocalVariable(name: "list", arg: 1, scope: !14191, file: !316, line: 434, type: !13604)
!14194 = !DILocalVariable(name: "node", scope: !14191, file: !316, line: 434, type: !3119)
!14195 = !DILocation(line: 0, scope: !14191)
!14196 = !DILocation(line: 434, column: 1, scope: !14191)
!14197 = !DILocation(line: 434, column: 1, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14191, file: !316, line: 434, column: 1)
!14199 = !DILocation(line: 434, column: 1, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14198, file: !316, line: 434, column: 1)
!14201 = distinct !DISubprogram(name: "k_queue_remove", scope: !3110, file: !3110, line: 351, type: !14202, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14204)
!14202 = !DISubroutineType(types: !14203)
!14203 = !{!170, !13576, !102}
!14204 = !{!14205, !14206, !14207}
!14205 = !DILocalVariable(name: "queue", arg: 1, scope: !14201, file: !3110, line: 351, type: !13576)
!14206 = !DILocalVariable(name: "data", arg: 2, scope: !14201, file: !3110, line: 351, type: !102)
!14207 = !DILocalVariable(name: "ret", scope: !14201, file: !3110, line: 355, type: !170)
!14208 = !DILocation(line: 0, scope: !14201)
!14209 = !DILocation(line: 355, column: 48, scope: !14201)
!14210 = !DILocation(line: 355, column: 56, scope: !14201)
!14211 = !DILocation(line: 355, column: 13, scope: !14201)
!14212 = !DILocation(line: 359, column: 2, scope: !14201)
!14213 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !316, file: !316, line: 478, type: !14214, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14216)
!14214 = !DISubroutineType(types: !14215)
!14215 = !{!170, !13604, !3119}
!14216 = !{!14217, !14218, !14219, !14220}
!14217 = !DILocalVariable(name: "list", arg: 1, scope: !14213, file: !316, line: 478, type: !13604)
!14218 = !DILocalVariable(name: "node", arg: 2, scope: !14213, file: !316, line: 478, type: !3119)
!14219 = !DILocalVariable(name: "prev", scope: !14213, file: !316, line: 478, type: !3119)
!14220 = !DILocalVariable(name: "test", scope: !14213, file: !316, line: 478, type: !3119)
!14221 = !DILocation(line: 0, scope: !14213)
!14222 = !DILocation(line: 478, column: 1, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14213, file: !316, line: 478, column: 1)
!14224 = !DILocation(line: 478, column: 1, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14223, file: !316, line: 478, column: 1)
!14226 = !DILocation(line: 478, column: 1, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !316, line: 478, column: 1)
!14228 = distinct !DILexicalBlock(scope: !14225, file: !316, line: 478, column: 1)
!14229 = !DILocation(line: 478, column: 1, scope: !14228)
!14230 = distinct !{!14230, !14222, !14222}
!14231 = !DILocation(line: 478, column: 1, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14227, file: !316, line: 478, column: 1)
!14233 = !DILocation(line: 478, column: 1, scope: !14213)
!14234 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !316, file: !316, line: 463, type: !13892, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14235)
!14235 = !{!14236, !14237, !14238}
!14236 = !DILocalVariable(name: "list", arg: 1, scope: !14234, file: !316, line: 463, type: !13604)
!14237 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14234, file: !316, line: 463, type: !3119)
!14238 = !DILocalVariable(name: "node", arg: 3, scope: !14234, file: !316, line: 463, type: !3119)
!14239 = !DILocation(line: 0, scope: !14234)
!14240 = !DILocation(line: 463, column: 1, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14234, file: !316, line: 463, column: 1)
!14242 = !DILocation(line: 0, scope: !14241)
!14243 = !DILocation(line: 463, column: 1, scope: !14234)
!14244 = !DILocation(line: 463, column: 1, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14241, file: !316, line: 463, column: 1)
!14246 = !DILocation(line: 463, column: 1, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14245, file: !316, line: 463, column: 1)
!14248 = !DILocation(line: 463, column: 1, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14247, file: !316, line: 463, column: 1)
!14250 = !DILocation(line: 463, column: 1, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14241, file: !316, line: 463, column: 1)
!14252 = !DILocation(line: 463, column: 1, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14251, file: !316, line: 463, column: 1)
!14254 = !DILocation(line: 463, column: 1, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14253, file: !316, line: 463, column: 1)
!14256 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !316, file: !316, line: 347, type: !13923, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14257)
!14257 = !{!14258}
!14258 = !DILocalVariable(name: "node", arg: 1, scope: !14256, file: !316, line: 347, type: !3119)
!14259 = !DILocation(line: 0, scope: !14256)
!14260 = !DILocation(line: 347, column: 1, scope: !14256)
!14261 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !316, file: !316, line: 336, type: !13923, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14262)
!14262 = !{!14263}
!14263 = !DILocalVariable(name: "node", arg: 1, scope: !14261, file: !316, line: 336, type: !3119)
!14264 = !DILocation(line: 0, scope: !14261)
!14265 = !DILocation(line: 336, column: 1, scope: !14261)
!14266 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3110, file: !3110, line: 362, type: !14202, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14267)
!14267 = !{!14268, !14269, !14270}
!14268 = !DILocalVariable(name: "queue", arg: 1, scope: !14266, file: !3110, line: 362, type: !13576)
!14269 = !DILocalVariable(name: "data", arg: 2, scope: !14266, file: !3110, line: 362, type: !102)
!14270 = !DILocalVariable(name: "test", scope: !14266, file: !3110, line: 366, type: !3119)
!14271 = !DILocation(line: 0, scope: !14266)
!14272 = !DILocation(line: 368, column: 2, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14266, file: !3110, line: 368, column: 2)
!14274 = !DILocation(line: 368, column: 2, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14273, file: !3110, line: 368, column: 2)
!14276 = !DILocation(line: 369, column: 12, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !3110, line: 369, column: 7)
!14278 = distinct !DILexicalBlock(scope: !14275, file: !3110, line: 368, column: 49)
!14279 = !DILocation(line: 369, column: 7, scope: !14278)
!14280 = distinct !{!14280, !14272, !14281}
!14281 = !DILocation(line: 374, column: 2, scope: !14273)
!14282 = !DILocation(line: 376, column: 2, scope: !14266)
!14283 = !DILocation(line: 380, column: 2, scope: !14266)
!14284 = !DILocation(line: 381, column: 1, scope: !14266)
!14285 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3110, file: !3110, line: 383, type: !14286, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14288)
!14286 = !DISubroutineType(types: !14287)
!14287 = !{!102, !13576}
!14288 = !{!14289, !14290}
!14289 = !DILocalVariable(name: "queue", arg: 1, scope: !14285, file: !3110, line: 383, type: !13576)
!14290 = !DILocalVariable(name: "ret", scope: !14285, file: !3110, line: 385, type: !102)
!14291 = !DILocation(line: 0, scope: !14285)
!14292 = !DILocation(line: 385, column: 61, scope: !14285)
!14293 = !DILocation(line: 385, column: 32, scope: !14285)
!14294 = !DILocation(line: 385, column: 14, scope: !14285)
!14295 = !DILocation(line: 389, column: 2, scope: !14285)
!14296 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3110, file: !3110, line: 392, type: !14286, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !14297)
!14297 = !{!14298, !14299}
!14298 = !DILocalVariable(name: "queue", arg: 1, scope: !14296, file: !3110, line: 392, type: !13576)
!14299 = !DILocalVariable(name: "ret", scope: !14296, file: !3110, line: 394, type: !102)
!14300 = !DILocation(line: 0, scope: !14296)
!14301 = !DILocation(line: 394, column: 61, scope: !14296)
!14302 = !DILocation(line: 394, column: 32, scope: !14296)
!14303 = !DILocation(line: 394, column: 14, scope: !14296)
!14304 = !DILocation(line: 398, column: 2, scope: !14296)
!14305 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2466, file: !2466, line: 93, type: !14306, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14308)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{!834, !2361, !2361}
!14308 = !{!14309, !14310, !14311, !14312}
!14309 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14305, file: !2466, line: 93, type: !2361)
!14310 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14305, file: !2466, line: 94, type: !2361)
!14311 = !DILocalVariable(name: "b1", scope: !14305, file: !2466, line: 97, type: !834)
!14312 = !DILocalVariable(name: "b2", scope: !14305, file: !2466, line: 98, type: !834)
!14313 = !DILocation(line: 0, scope: !14305)
!14314 = !DILocation(line: 97, column: 30, scope: !14305)
!14315 = !DILocation(line: 98, column: 30, scope: !14305)
!14316 = !DILocation(line: 100, column: 9, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14305, file: !2466, line: 100, column: 6)
!14318 = !DILocation(line: 100, column: 6, scope: !14305)
!14319 = !DILocation(line: 125, column: 1, scope: !14305)
!14320 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2466, file: !2466, line: 428, type: !14321, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14323)
!14321 = !DISubroutineType(types: !14322)
!14322 = !{null, !2361}
!14323 = !{!14324}
!14324 = !DILocalVariable(name: "curr", arg: 1, scope: !14320, file: !2466, line: 428, type: !2361)
!14325 = !DILocation(line: 0, scope: !14320)
!14326 = !DILocation(line: 434, column: 6, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14320, file: !2466, line: 434, column: 6)
!14328 = !DILocation(line: 434, column: 23, scope: !14327)
!14329 = !DILocation(line: 434, column: 6, scope: !14320)
!14330 = !DILocation(line: 435, column: 50, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14327, file: !2466, line: 434, column: 29)
!14332 = !DILocation(line: 435, column: 48, scope: !14331)
!14333 = !DILocation(line: 435, column: 29, scope: !14331)
!14334 = !DILocation(line: 436, column: 24, scope: !14331)
!14335 = !DILocation(line: 436, column: 3, scope: !14331)
!14336 = !DILocation(line: 437, column: 2, scope: !14331)
!14337 = !DILocation(line: 438, column: 1, scope: !14320)
!14338 = distinct !DISubprogram(name: "slice_time", scope: !2466, file: !2466, line: 407, type: !14339, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14341)
!14339 = !DISubroutineType(types: !14340)
!14340 = !{!103, !2361}
!14341 = !{!14342, !14343}
!14342 = !DILocalVariable(name: "curr", arg: 1, scope: !14338, file: !2466, line: 407, type: !2361)
!14343 = !DILocalVariable(name: "ret", scope: !14338, file: !2466, line: 409, type: !103)
!14344 = !DILocation(line: 0, scope: !14338)
!14345 = !DILocation(line: 409, column: 12, scope: !14338)
!14346 = !DILocation(line: 416, column: 2, scope: !14338)
!14347 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2466, file: !2466, line: 440, type: !14348, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14350)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{null, !834, !103}
!14350 = !{!14351, !14352, !14353, !14359}
!14351 = !DILocalVariable(name: "slice", arg: 1, scope: !14347, file: !2466, line: 440, type: !834)
!14352 = !DILocalVariable(name: "prio", arg: 2, scope: !14347, file: !2466, line: 440, type: !103)
!14353 = !DILocalVariable(name: "__i", scope: !14354, file: !2466, line: 442, type: !14355)
!14354 = distinct !DILexicalBlock(scope: !14347, file: !2466, line: 442, column: 2)
!14355 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !329, line: 106, baseType: !14356)
!14356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !329, line: 32, size: 32, elements: !14357)
!14357 = !{!14358}
!14358 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14356, file: !329, line: 33, baseType: !103, size: 32)
!14359 = !DILocalVariable(name: "__key", scope: !14354, file: !2466, line: 442, type: !14355)
!14360 = !DILocation(line: 0, scope: !14347)
!14361 = !DILocation(line: 0, scope: !14354)
!14362 = !DILocalVariable(name: "l", arg: 1, scope: !14363, file: !329, line: 136, type: !14366)
!14363 = distinct !DISubprogram(name: "k_spin_lock", scope: !329, file: !329, line: 136, type: !14364, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14367)
!14364 = !DISubroutineType(types: !14365)
!14365 = !{!14355, !14366}
!14366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!14367 = !{!14362, !14368}
!14368 = !DILocalVariable(name: "k", scope: !14363, file: !329, line: 139, type: !14355)
!14369 = !DILocation(line: 0, scope: !14363, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 442, column: 2, scope: !14354)
!14371 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !14376)
!14372 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14373)
!14373 = !{!14374, !14375}
!14374 = !DILocalVariable(name: "key", scope: !14372, file: !5695, line: 44, type: !32)
!14375 = !DILocalVariable(name: "tmp", scope: !14372, file: !5695, line: 53, type: !32)
!14376 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !14370)
!14377 = !{i64 1692809}
!14378 = !DILocation(line: 0, scope: !14372, inlinedAt: !14376)
!14379 = !DILocation(line: 443, column: 29, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14381, file: !2466, line: 442, column: 26)
!14381 = distinct !DILexicalBlock(scope: !14354, file: !2466, line: 442, column: 2)
!14382 = !DILocation(line: 444, column: 17, scope: !14380)
!14383 = !DILocation(line: 445, column: 51, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14380, file: !2466, line: 445, column: 7)
!14385 = !DILocation(line: 445, column: 7, scope: !14380)
!14386 = !DILocation(line: 0, scope: !14380)
!14387 = !DILocation(line: 451, column: 18, scope: !14380)
!14388 = !DILocation(line: 452, column: 3, scope: !14380)
!14389 = !DILocalVariable(name: "key", arg: 2, scope: !14390, file: !329, line: 190, type: !14355)
!14390 = distinct !DISubprogram(name: "k_spin_unlock", scope: !329, file: !329, line: 189, type: !14391, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14393)
!14391 = !DISubroutineType(types: !14392)
!14392 = !{null, !14366, !14355}
!14393 = !{!14394, !14389}
!14394 = !DILocalVariable(name: "l", arg: 1, scope: !14390, file: !329, line: 189, type: !14366)
!14395 = !DILocation(line: 0, scope: !14390, inlinedAt: !14396)
!14396 = distinct !DILocation(line: 442, column: 2, scope: !14381)
!14397 = !DILocalVariable(name: "key", arg: 1, scope: !14398, file: !5695, line: 84, type: !32)
!14398 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14399)
!14399 = !{!14397}
!14400 = !DILocation(line: 0, scope: !14398, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14396)
!14402 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14401)
!14403 = !{i64 1693626}
!14404 = !DILocation(line: 454, column: 1, scope: !14347)
!14405 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13427, file: !13427, line: 389, type: !6896, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14406)
!14406 = !{!14407}
!14407 = !DILocalVariable(name: "t", arg: 1, scope: !14405, file: !13427, line: 389, type: !121)
!14408 = !DILocation(line: 0, scope: !14405)
!14409 = !DILocalVariable(name: "t", arg: 1, scope: !14410, file: !13427, line: 102, type: !2340)
!14410 = distinct !DISubprogram(name: "z_tmcvt", scope: !13427, file: !13427, line: 102, type: !13435, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14411)
!14411 = !{!14409, !14412, !14413, !14414, !14415, !14416, !14417, !14418, !14419, !14420, !14421}
!14412 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14410, file: !13427, line: 102, type: !121)
!14413 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14410, file: !13427, line: 103, type: !121)
!14414 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14410, file: !13427, line: 103, type: !170)
!14415 = !DILocalVariable(name: "result32", arg: 5, scope: !14410, file: !13427, line: 104, type: !170)
!14416 = !DILocalVariable(name: "round_up", arg: 6, scope: !14410, file: !13427, line: 104, type: !170)
!14417 = !DILocalVariable(name: "round_off", arg: 7, scope: !14410, file: !13427, line: 105, type: !170)
!14418 = !DILocalVariable(name: "mul_ratio", scope: !14410, file: !13427, line: 107, type: !170)
!14419 = !DILocalVariable(name: "div_ratio", scope: !14410, file: !13427, line: 109, type: !170)
!14420 = !DILocalVariable(name: "off", scope: !14410, file: !13427, line: 116, type: !2340)
!14421 = !DILocalVariable(name: "rdivisor", scope: !14422, file: !13427, line: 119, type: !121)
!14422 = distinct !DILexicalBlock(scope: !14423, file: !13427, line: 118, column: 18)
!14423 = distinct !DILexicalBlock(scope: !14410, file: !13427, line: 118, column: 6)
!14424 = !DILocation(line: 0, scope: !14410, inlinedAt: !14425)
!14425 = distinct !DILocation(line: 392, column: 9, scope: !14405)
!14426 = !DILocation(line: 143, column: 25, scope: !14427, inlinedAt: !14425)
!14427 = distinct !DILexicalBlock(scope: !14428, file: !13427, line: 142, column: 17)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !13427, line: 142, column: 7)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !13427, line: 141, column: 24)
!14430 = distinct !DILexicalBlock(scope: !14431, file: !13427, line: 141, column: 13)
!14431 = distinct !DILexicalBlock(scope: !14410, file: !13427, line: 134, column: 6)
!14432 = !DILocation(line: 392, column: 2, scope: !14405)
!14433 = distinct !DISubprogram(name: "z_time_slice", scope: !2466, file: !2466, line: 502, type: !7642, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14434)
!14434 = !{!14435, !14436}
!14435 = !DILocalVariable(name: "ticks", arg: 1, scope: !14433, file: !2466, line: 502, type: !103)
!14436 = !DILocalVariable(name: "key", scope: !14433, file: !2466, line: 511, type: !14355)
!14437 = !DILocation(line: 0, scope: !14433)
!14438 = !DILocation(line: 0, scope: !14363, inlinedAt: !14439)
!14439 = distinct !DILocation(line: 511, column: 25, scope: !14433)
!14440 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !14441)
!14441 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !14439)
!14442 = !DILocation(line: 0, scope: !14372, inlinedAt: !14441)
!14443 = !DILocation(line: 514, column: 6, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14433, file: !2466, line: 514, column: 6)
!14445 = !DILocation(line: 514, column: 25, scope: !14444)
!14446 = !DILocation(line: 514, column: 22, scope: !14444)
!14447 = !DILocation(line: 514, column: 6, scope: !14433)
!14448 = !DILocation(line: 515, column: 3, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14444, file: !2466, line: 514, column: 35)
!14450 = !DILocation(line: 0, scope: !14390, inlinedAt: !14451)
!14451 = distinct !DILocation(line: 516, column: 3, scope: !14449)
!14452 = !DILocation(line: 0, scope: !14398, inlinedAt: !14453)
!14453 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14451)
!14454 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14453)
!14455 = !DILocation(line: 517, column: 3, scope: !14449)
!14456 = !DILocation(line: 519, column: 18, scope: !14433)
!14457 = !DILocation(line: 522, column: 6, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14433, file: !2466, line: 522, column: 6)
!14459 = !DILocation(line: 522, column: 27, scope: !14458)
!14460 = !DILocation(line: 522, column: 30, scope: !14458)
!14461 = !DILocation(line: 522, column: 6, scope: !14433)
!14462 = !DILocation(line: 523, column: 30, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14464, file: !2466, line: 523, column: 7)
!14464 = distinct !DILexicalBlock(scope: !14458, file: !2466, line: 522, column: 51)
!14465 = !DILocation(line: 523, column: 13, scope: !14463)
!14466 = !DILocation(line: 523, column: 7, scope: !14464)
!14467 = !DILocation(line: 530, column: 10, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14463, file: !2466, line: 523, column: 43)
!14469 = !DILocation(line: 531, column: 3, scope: !14468)
!14470 = !DILocation(line: 532, column: 30, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14463, file: !2466, line: 531, column: 10)
!14472 = !DILocation(line: 535, column: 29, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14458, file: !2466, line: 534, column: 9)
!14474 = !DILocation(line: 0, scope: !14390, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 537, column: 2, scope: !14433)
!14476 = !DILocation(line: 0, scope: !14398, inlinedAt: !14477)
!14477 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14475)
!14478 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14477)
!14479 = !DILocation(line: 538, column: 1, scope: !14433)
!14480 = distinct !DISubprogram(name: "sliceable", scope: !2466, file: !2466, line: 468, type: !14481, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14483)
!14481 = !DISubroutineType(types: !14482)
!14482 = !{!170, !2361}
!14483 = !{!14484, !14485}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14480, file: !2466, line: 468, type: !2361)
!14485 = !DILocalVariable(name: "ret", scope: !14480, file: !2466, line: 470, type: !170)
!14486 = !DILocation(line: 0, scope: !14480)
!14487 = !DILocation(line: 470, column: 13, scope: !14480)
!14488 = !DILocation(line: 471, column: 3, scope: !14480)
!14489 = !DILocation(line: 471, column: 7, scope: !14480)
!14490 = !DILocation(line: 472, column: 3, scope: !14480)
!14491 = !DILocation(line: 472, column: 37, scope: !14480)
!14492 = !DILocation(line: 472, column: 24, scope: !14480)
!14493 = !DILocation(line: 472, column: 43, scope: !14480)
!14494 = !DILocation(line: 472, column: 7, scope: !14480)
!14495 = !DILocation(line: 473, column: 3, scope: !14480)
!14496 = !DILocation(line: 473, column: 7, scope: !14480)
!14497 = !DILocation(line: 473, column: 6, scope: !14480)
!14498 = !DILocation(line: 479, column: 2, scope: !14480)
!14499 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2466, file: !2466, line: 482, type: !14500, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!14355, !14355}
!14502 = !{!14503, !14504}
!14503 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14499, file: !2466, line: 482, type: !14355)
!14504 = !DILocalVariable(name: "curr", scope: !14499, file: !2466, line: 484, type: !2361)
!14505 = !DILocation(line: 0, scope: !14499)
!14506 = !DILocation(line: 484, column: 26, scope: !14499)
!14507 = !DILocation(line: 493, column: 7, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14499, file: !2466, line: 493, column: 6)
!14509 = !DILocation(line: 493, column: 6, scope: !14499)
!14510 = !DILocation(line: 494, column: 3, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14508, file: !2466, line: 493, column: 49)
!14512 = !DILocation(line: 495, column: 2, scope: !14511)
!14513 = !DILocation(line: 496, column: 2, scope: !14499)
!14514 = !DILocation(line: 499, column: 1, scope: !14499)
!14515 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12868, file: !12868, line: 106, type: !14481, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14516)
!14516 = !{!14517, !14518}
!14517 = !DILocalVariable(name: "thread", arg: 1, scope: !14515, file: !12868, line: 106, type: !2361)
!14518 = !DILocalVariable(name: "state", scope: !14515, file: !12868, line: 108, type: !167)
!14519 = !DILocation(line: 0, scope: !14515)
!14520 = !DILocation(line: 108, column: 31, scope: !14515)
!14521 = !DILocation(line: 110, column: 16, scope: !14515)
!14522 = !DILocation(line: 111, column: 41, scope: !14515)
!14523 = !DILocation(line: 110, column: 2, scope: !14515)
!14524 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2466, file: !2466, line: 393, type: !14321, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14525)
!14525 = !{!14526}
!14526 = !DILocalVariable(name: "thread", arg: 1, scope: !14524, file: !2466, line: 393, type: !2361)
!14527 = !DILocation(line: 0, scope: !14524)
!14528 = !DILocation(line: 395, column: 6, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14524, file: !2466, line: 395, column: 6)
!14530 = !DILocation(line: 395, column: 6, scope: !14524)
!14531 = !DILocalVariable(name: "thread", arg: 1, scope: !14532, file: !2466, line: 264, type: !2361)
!14532 = distinct !DISubprogram(name: "dequeue_thread", scope: !2466, file: !2466, line: 264, type: !14321, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14533)
!14533 = !{!14531}
!14534 = !DILocation(line: 0, scope: !14532, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 396, column: 3, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14529, file: !2466, line: 395, column: 34)
!14537 = !DILocation(line: 266, column: 15, scope: !14532, inlinedAt: !14535)
!14538 = !DILocation(line: 266, column: 28, scope: !14532, inlinedAt: !14535)
!14539 = !DILocalVariable(name: "thread", arg: 1, scope: !14540, file: !2466, line: 232, type: !2361)
!14540 = distinct !DISubprogram(name: "runq_remove", scope: !2466, file: !2466, line: 232, type: !14321, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14541)
!14541 = !{!14539}
!14542 = !DILocation(line: 0, scope: !14540, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 268, column: 3, scope: !14544, inlinedAt: !14535)
!14544 = distinct !DILexicalBlock(scope: !14545, file: !2466, line: 267, column: 35)
!14545 = distinct !DILexicalBlock(scope: !14532, file: !2466, line: 267, column: 6)
!14546 = !DILocation(line: 234, column: 2, scope: !14540, inlinedAt: !14543)
!14547 = !DILocation(line: 397, column: 2, scope: !14536)
!14548 = !DILocalVariable(name: "thread", arg: 1, scope: !14549, file: !2466, line: 250, type: !2361)
!14549 = distinct !DISubprogram(name: "queue_thread", scope: !2466, file: !2466, line: 250, type: !14321, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14550)
!14550 = !{!14548}
!14551 = !DILocation(line: 0, scope: !14549, inlinedAt: !14552)
!14552 = distinct !DILocation(line: 398, column: 2, scope: !14524)
!14553 = !DILocation(line: 252, column: 15, scope: !14549, inlinedAt: !14552)
!14554 = !DILocation(line: 252, column: 28, scope: !14549, inlinedAt: !14552)
!14555 = !DILocalVariable(name: "thread", arg: 1, scope: !14556, file: !2466, line: 227, type: !2361)
!14556 = distinct !DISubprogram(name: "runq_add", scope: !2466, file: !2466, line: 227, type: !14321, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14557)
!14557 = !{!14555}
!14558 = !DILocation(line: 0, scope: !14556, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 254, column: 3, scope: !14560, inlinedAt: !14552)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !2466, line: 253, column: 35)
!14561 = distinct !DILexicalBlock(scope: !14549, file: !2466, line: 253, column: 6)
!14562 = !DILocalVariable(name: "pq", arg: 1, scope: !14563, file: !2466, line: 181, type: !14566)
!14563 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2466, file: !2466, line: 181, type: !14564, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14567)
!14564 = !DISubroutineType(types: !14565)
!14565 = !{null, !14566, !2361}
!14566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!14567 = !{!14562, !14568, !14569}
!14568 = !DILocalVariable(name: "thread", arg: 2, scope: !14563, file: !2466, line: 182, type: !2361)
!14569 = !DILocalVariable(name: "t", scope: !14563, file: !2466, line: 184, type: !2361)
!14570 = !DILocation(line: 0, scope: !14563, inlinedAt: !14571)
!14571 = distinct !DILocation(line: 229, column: 2, scope: !14556, inlinedAt: !14559)
!14572 = !DILocation(line: 188, column: 2, scope: !14573, inlinedAt: !14571)
!14573 = distinct !DILexicalBlock(scope: !14563, file: !2466, line: 188, column: 2)
!14574 = !DILocation(line: 188, column: 2, scope: !14575, inlinedAt: !14571)
!14575 = distinct !DILexicalBlock(scope: !14573, file: !2466, line: 188, column: 2)
!14576 = !DILocation(line: 0, scope: !14573, inlinedAt: !14571)
!14577 = !DILocation(line: 189, column: 7, scope: !14578, inlinedAt: !14571)
!14578 = distinct !DILexicalBlock(scope: !14579, file: !2466, line: 189, column: 7)
!14579 = distinct !DILexicalBlock(scope: !14575, file: !2466, line: 188, column: 56)
!14580 = !DILocation(line: 189, column: 35, scope: !14578, inlinedAt: !14571)
!14581 = !DILocation(line: 189, column: 7, scope: !14579, inlinedAt: !14571)
!14582 = !DILocation(line: 191, column: 21, scope: !14583, inlinedAt: !14571)
!14583 = distinct !DILexicalBlock(scope: !14578, file: !2466, line: 189, column: 40)
!14584 = !DILocation(line: 190, column: 4, scope: !14583, inlinedAt: !14571)
!14585 = !DILocation(line: 192, column: 4, scope: !14583, inlinedAt: !14571)
!14586 = distinct !{!14586, !14572, !14587}
!14587 = !DILocation(line: 194, column: 2, scope: !14573, inlinedAt: !14571)
!14588 = !DILocation(line: 196, column: 37, scope: !14563, inlinedAt: !14571)
!14589 = !DILocation(line: 196, column: 2, scope: !14563, inlinedAt: !14571)
!14590 = !DILocation(line: 197, column: 1, scope: !14563, inlinedAt: !14571)
!14591 = !DILocation(line: 399, column: 25, scope: !14524)
!14592 = !DILocation(line: 399, column: 22, scope: !14524)
!14593 = !DILocation(line: 399, column: 2, scope: !14524)
!14594 = !DILocation(line: 400, column: 1, scope: !14524)
!14595 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12868, file: !12868, line: 136, type: !14481, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14596)
!14596 = !{!14597}
!14597 = !DILocalVariable(name: "thread", arg: 1, scope: !14595, file: !12868, line: 136, type: !2361)
!14598 = !DILocation(line: 0, scope: !14595)
!14599 = !DILocation(line: 138, column: 9, scope: !14595)
!14600 = !DILocation(line: 138, column: 2, scope: !14595)
!14601 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2466, file: !2466, line: 1137, type: !14564, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14602)
!14602 = !{!14603, !14604}
!14603 = !DILocalVariable(name: "pq", arg: 1, scope: !14601, file: !2466, line: 1137, type: !14566)
!14604 = !DILocalVariable(name: "thread", arg: 2, scope: !14601, file: !2466, line: 1137, type: !2361)
!14605 = !DILocation(line: 0, scope: !14601)
!14606 = !DILocation(line: 1141, column: 33, scope: !14601)
!14607 = !DILocation(line: 1141, column: 2, scope: !14601)
!14608 = !DILocation(line: 1142, column: 1, scope: !14601)
!14609 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !338, file: !338, line: 294, type: !14610, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14612)
!14610 = !DISubroutineType(types: !14611)
!14611 = !{!2462, !14566}
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "list", arg: 1, scope: !14609, file: !338, line: 294, type: !14566)
!14614 = !DILocation(line: 0, scope: !14609)
!14615 = !DILocation(line: 296, column: 9, scope: !14609)
!14616 = !DILocation(line: 296, column: 49, scope: !14609)
!14617 = !DILocation(line: 296, column: 2, scope: !14609)
!14618 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !338, file: !338, line: 443, type: !14619, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14621)
!14619 = !DISubroutineType(types: !14620)
!14620 = !{null, !2462, !2462}
!14621 = !{!14622, !14623, !14624}
!14622 = !DILocalVariable(name: "successor", arg: 1, scope: !14618, file: !338, line: 443, type: !2462)
!14623 = !DILocalVariable(name: "node", arg: 2, scope: !14618, file: !338, line: 443, type: !2462)
!14624 = !DILocalVariable(name: "prev", scope: !14618, file: !338, line: 445, type: !14625)
!14625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2462)
!14626 = !DILocation(line: 0, scope: !14618)
!14627 = !DILocation(line: 445, column: 39, scope: !14618)
!14628 = !DILocation(line: 447, column: 8, scope: !14618)
!14629 = !DILocation(line: 447, column: 13, scope: !14618)
!14630 = !DILocation(line: 448, column: 8, scope: !14618)
!14631 = !DILocation(line: 448, column: 13, scope: !14618)
!14632 = !DILocation(line: 449, column: 8, scope: !14618)
!14633 = !DILocation(line: 449, column: 13, scope: !14618)
!14634 = !DILocation(line: 450, column: 18, scope: !14618)
!14635 = !DILocation(line: 451, column: 1, scope: !14618)
!14636 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !338, file: !338, line: 341, type: !14637, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14639)
!14637 = !DISubroutineType(types: !14638)
!14638 = !{!2462, !14566, !2462}
!14639 = !{!14640, !14641}
!14640 = !DILocalVariable(name: "list", arg: 1, scope: !14636, file: !338, line: 341, type: !14566)
!14641 = !DILocalVariable(name: "node", arg: 2, scope: !14636, file: !338, line: 342, type: !2462)
!14642 = !DILocation(line: 0, scope: !14636)
!14643 = !DILocation(line: 344, column: 15, scope: !14636)
!14644 = !DILocation(line: 344, column: 9, scope: !14636)
!14645 = !DILocation(line: 344, column: 26, scope: !14636)
!14646 = !DILocation(line: 344, column: 2, scope: !14636)
!14647 = distinct !DISubprogram(name: "sys_dlist_append", scope: !338, file: !338, line: 404, type: !14648, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14650)
!14648 = !DISubroutineType(types: !14649)
!14649 = !{null, !14566, !2462}
!14650 = !{!14651, !14652, !14653}
!14651 = !DILocalVariable(name: "list", arg: 1, scope: !14647, file: !338, line: 404, type: !14566)
!14652 = !DILocalVariable(name: "node", arg: 2, scope: !14647, file: !338, line: 404, type: !2462)
!14653 = !DILocalVariable(name: "tail", scope: !14647, file: !338, line: 406, type: !14625)
!14654 = !DILocation(line: 0, scope: !14647)
!14655 = !DILocation(line: 406, column: 34, scope: !14647)
!14656 = !DILocation(line: 408, column: 8, scope: !14647)
!14657 = !DILocation(line: 408, column: 13, scope: !14647)
!14658 = !DILocation(line: 409, column: 8, scope: !14647)
!14659 = !DILocation(line: 409, column: 13, scope: !14647)
!14660 = !DILocation(line: 411, column: 8, scope: !14647)
!14661 = !DILocation(line: 411, column: 13, scope: !14647)
!14662 = !DILocation(line: 412, column: 13, scope: !14647)
!14663 = !DILocation(line: 413, column: 1, scope: !14647)
!14664 = distinct !DISubprogram(name: "update_cache", scope: !2466, file: !2466, line: 559, type: !7642, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14665)
!14665 = !{!14666, !14667}
!14666 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14664, file: !2466, line: 559, type: !103)
!14667 = !DILocalVariable(name: "thread", scope: !14664, file: !2466, line: 562, type: !2361)
!14668 = !DILocation(line: 0, scope: !14664)
!14669 = !DILocation(line: 239, column: 9, scope: !14670, inlinedAt: !14673)
!14670 = distinct !DISubprogram(name: "runq_best", scope: !2466, file: !2466, line: 237, type: !14671, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!14671 = !DISubroutineType(types: !14672)
!14672 = !{!2361}
!14673 = distinct !DILocation(line: 314, column: 28, scope: !14674, inlinedAt: !14677)
!14674 = distinct !DISubprogram(name: "next_up", scope: !2466, file: !2466, line: 312, type: !14671, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14675)
!14675 = !{!14676}
!14676 = !DILocalVariable(name: "thread", scope: !14674, file: !2466, line: 314, type: !2361)
!14677 = distinct !DILocation(line: 562, column: 28, scope: !14664)
!14678 = !DILocation(line: 0, scope: !14674, inlinedAt: !14677)
!14679 = !DILocation(line: 340, column: 17, scope: !14674, inlinedAt: !14677)
!14680 = !DILocation(line: 340, column: 9, scope: !14674, inlinedAt: !14677)
!14681 = !DILocalVariable(name: "thread", arg: 1, scope: !14682, file: !2466, line: 127, type: !2361)
!14682 = distinct !DISubprogram(name: "should_preempt", scope: !2466, file: !2466, line: 127, type: !14683, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14685)
!14683 = !DISubroutineType(types: !14684)
!14684 = !{!170, !2361, !103}
!14685 = !{!14681, !14686}
!14686 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14682, file: !2466, line: 128, type: !103)
!14687 = !DILocation(line: 0, scope: !14682, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 564, column: 6, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14664, file: !2466, line: 564, column: 6)
!14690 = !DILocation(line: 133, column: 17, scope: !14691, inlinedAt: !14688)
!14691 = distinct !DILexicalBlock(scope: !14682, file: !2466, line: 133, column: 6)
!14692 = !DILocation(line: 0, scope: !14689)
!14693 = !DILocation(line: 133, column: 6, scope: !14682, inlinedAt: !14688)
!14694 = !DILocation(line: 140, column: 6, scope: !14695, inlinedAt: !14688)
!14695 = distinct !DILexicalBlock(scope: !14682, file: !2466, line: 140, column: 6)
!14696 = !DILocation(line: 140, column: 6, scope: !14682, inlinedAt: !14688)
!14697 = !DILocation(line: 150, column: 9, scope: !14698, inlinedAt: !14688)
!14698 = distinct !DILexicalBlock(scope: !14682, file: !2466, line: 149, column: 6)
!14699 = !DILocation(line: 149, column: 6, scope: !14682, inlinedAt: !14688)
!14700 = !DILocation(line: 157, column: 6, scope: !14701, inlinedAt: !14688)
!14701 = distinct !DILexicalBlock(scope: !14682, file: !2466, line: 157, column: 6)
!14702 = !DILocation(line: 564, column: 6, scope: !14664)
!14703 = !DILocation(line: 566, column: 14, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14705, file: !2466, line: 566, column: 7)
!14705 = distinct !DILexicalBlock(scope: !14689, file: !2466, line: 564, column: 42)
!14706 = !DILocation(line: 566, column: 7, scope: !14705)
!14707 = !DILocation(line: 567, column: 4, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14704, file: !2466, line: 566, column: 27)
!14709 = !DILocation(line: 568, column: 3, scope: !14708)
!14710 = !DILocation(line: 585, column: 1, scope: !14664)
!14711 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2466, file: !2466, line: 1144, type: !14712, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14714)
!14712 = !DISubroutineType(types: !14713)
!14713 = !{!2361, !14566}
!14714 = !{!14715, !14716, !14717}
!14715 = !DILocalVariable(name: "pq", arg: 1, scope: !14711, file: !2466, line: 1144, type: !14566)
!14716 = !DILocalVariable(name: "thread", scope: !14711, file: !2466, line: 1146, type: !2361)
!14717 = !DILocalVariable(name: "n", scope: !14711, file: !2466, line: 1147, type: !2462)
!14718 = !DILocation(line: 0, scope: !14711)
!14719 = !DILocation(line: 1147, column: 19, scope: !14711)
!14720 = !DILocation(line: 1152, column: 2, scope: !14711)
!14721 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12868, file: !12868, line: 115, type: !14481, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14722)
!14722 = !{!14723}
!14723 = !DILocalVariable(name: "thread", arg: 1, scope: !14721, file: !12868, line: 115, type: !2361)
!14724 = !DILocation(line: 0, scope: !14721)
!14725 = !DILocation(line: 117, column: 46, scope: !14721)
!14726 = !DILocation(line: 117, column: 10, scope: !14721)
!14727 = !DILocation(line: 117, column: 9, scope: !14721)
!14728 = !DILocation(line: 117, column: 2, scope: !14721)
!14729 = distinct !DISubprogram(name: "is_preempt", scope: !2466, file: !2466, line: 62, type: !14339, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14730)
!14730 = !{!14731}
!14731 = !DILocalVariable(name: "thread", arg: 1, scope: !14729, file: !2466, line: 62, type: !2361)
!14732 = !DILocation(line: 0, scope: !14729)
!14733 = !DILocation(line: 65, column: 22, scope: !14729)
!14734 = !DILocation(line: 65, column: 30, scope: !14729)
!14735 = !DILocation(line: 65, column: 2, scope: !14729)
!14736 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13260, file: !13260, line: 35, type: !14737, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14741)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{!170, !14739}
!14739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14740, size: 32)
!14740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2412)
!14741 = !{!14742}
!14742 = !DILocalVariable(name: "to", arg: 1, scope: !14736, file: !13260, line: 35, type: !14739)
!14743 = !DILocation(line: 0, scope: !14736)
!14744 = !DILocation(line: 37, column: 35, scope: !14736)
!14745 = !DILocation(line: 37, column: 10, scope: !14736)
!14746 = !DILocation(line: 37, column: 9, scope: !14736)
!14747 = !DILocation(line: 37, column: 2, scope: !14736)
!14748 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !338, file: !338, line: 225, type: !14749, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14753)
!14749 = !DISubroutineType(types: !14750)
!14750 = !{!170, !14751}
!14751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14752, size: 32)
!14752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2371)
!14753 = !{!14754}
!14754 = !DILocalVariable(name: "node", arg: 1, scope: !14748, file: !338, line: 225, type: !14751)
!14755 = !DILocation(line: 0, scope: !14748)
!14756 = !DILocation(line: 227, column: 15, scope: !14748)
!14757 = !DILocation(line: 227, column: 20, scope: !14748)
!14758 = !DILocation(line: 227, column: 2, scope: !14748)
!14759 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !338, file: !338, line: 325, type: !14637, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14760)
!14760 = !{!14761, !14762}
!14761 = !DILocalVariable(name: "list", arg: 1, scope: !14759, file: !338, line: 325, type: !14566)
!14762 = !DILocalVariable(name: "node", arg: 2, scope: !14759, file: !338, line: 326, type: !2462)
!14763 = !DILocation(line: 0, scope: !14759)
!14764 = !DILocation(line: 328, column: 24, scope: !14759)
!14765 = !DILocation(line: 328, column: 15, scope: !14759)
!14766 = !DILocation(line: 328, column: 9, scope: !14759)
!14767 = !DILocation(line: 328, column: 45, scope: !14759)
!14768 = !DILocation(line: 328, column: 2, scope: !14759)
!14769 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !338, file: !338, line: 266, type: !14770, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14772)
!14770 = !DISubroutineType(types: !14771)
!14771 = !{!170, !14566}
!14772 = !{!14773}
!14773 = !DILocalVariable(name: "list", arg: 1, scope: !14769, file: !338, line: 266, type: !14566)
!14774 = !DILocation(line: 0, scope: !14769)
!14775 = !DILocation(line: 268, column: 15, scope: !14769)
!14776 = !DILocation(line: 268, column: 20, scope: !14769)
!14777 = !DILocation(line: 268, column: 2, scope: !14769)
!14778 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !338, file: !338, line: 496, type: !14779, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14781)
!14779 = !DISubroutineType(types: !14780)
!14780 = !{null, !2462}
!14781 = !{!14782, !14783, !14784}
!14782 = !DILocalVariable(name: "node", arg: 1, scope: !14778, file: !338, line: 496, type: !2462)
!14783 = !DILocalVariable(name: "prev", scope: !14778, file: !338, line: 498, type: !14625)
!14784 = !DILocalVariable(name: "next", scope: !14778, file: !338, line: 499, type: !14625)
!14785 = !DILocation(line: 0, scope: !14778)
!14786 = !DILocation(line: 498, column: 34, scope: !14778)
!14787 = !DILocation(line: 499, column: 34, scope: !14778)
!14788 = !DILocation(line: 501, column: 8, scope: !14778)
!14789 = !DILocation(line: 501, column: 13, scope: !14778)
!14790 = !DILocation(line: 502, column: 8, scope: !14778)
!14791 = !DILocation(line: 502, column: 13, scope: !14778)
!14792 = !DILocation(line: 503, column: 2, scope: !14778)
!14793 = !DILocation(line: 504, column: 1, scope: !14778)
!14794 = distinct !DISubprogram(name: "sys_dnode_init", scope: !338, file: !338, line: 211, type: !14779, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14795)
!14795 = !{!14796}
!14796 = !DILocalVariable(name: "node", arg: 1, scope: !14794, file: !338, line: 211, type: !2462)
!14797 = !DILocation(line: 0, scope: !14794)
!14798 = !DILocation(line: 213, column: 8, scope: !14794)
!14799 = !DILocation(line: 213, column: 13, scope: !14794)
!14800 = !DILocation(line: 214, column: 8, scope: !14794)
!14801 = !DILocation(line: 214, column: 13, scope: !14794)
!14802 = !DILocation(line: 215, column: 1, scope: !14794)
!14803 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12868, file: !12868, line: 131, type: !14804, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14806)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{!170, !2361, !121}
!14806 = !{!14807, !14808}
!14807 = !DILocalVariable(name: "thread", arg: 1, scope: !14803, file: !12868, line: 131, type: !2361)
!14808 = !DILocalVariable(name: "state", arg: 2, scope: !14803, file: !12868, line: 131, type: !121)
!14809 = !DILocation(line: 0, scope: !14803)
!14810 = !DILocation(line: 133, column: 23, scope: !14803)
!14811 = !DILocation(line: 133, column: 45, scope: !14803)
!14812 = !DILocation(line: 133, column: 2, scope: !14803)
!14813 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12868, file: !12868, line: 211, type: !14814, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14816)
!14814 = !DISubroutineType(types: !14815)
!14815 = !{!170, !103, !103}
!14816 = !{!14817, !14818}
!14817 = !DILocalVariable(name: "prio", arg: 1, scope: !14813, file: !12868, line: 211, type: !103)
!14818 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14813, file: !12868, line: 211, type: !103)
!14819 = !DILocation(line: 0, scope: !14813)
!14820 = !DILocation(line: 213, column: 9, scope: !14813)
!14821 = !DILocation(line: 213, column: 2, scope: !14813)
!14822 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12868, file: !12868, line: 83, type: !14481, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14823)
!14823 = !{!14824}
!14824 = !DILocalVariable(name: "thread", arg: 1, scope: !14822, file: !12868, line: 83, type: !2361)
!14825 = !DILocation(line: 0, scope: !14822)
!14826 = !DILocation(line: 89, column: 16, scope: !14822)
!14827 = !DILocation(line: 89, column: 2, scope: !14822)
!14828 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12868, file: !12868, line: 206, type: !14814, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14829)
!14829 = !{!14830, !14831}
!14830 = !DILocalVariable(name: "prio1", arg: 1, scope: !14828, file: !12868, line: 206, type: !103)
!14831 = !DILocalVariable(name: "prio2", arg: 2, scope: !14828, file: !12868, line: 206, type: !103)
!14832 = !DILocation(line: 0, scope: !14828)
!14833 = !DILocation(line: 208, column: 15, scope: !14828)
!14834 = !DILocation(line: 208, column: 2, scope: !14828)
!14835 = distinct !DISubprogram(name: "z_ready_thread", scope: !2466, file: !2466, line: 635, type: !14321, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14836)
!14836 = !{!14837, !14838, !14840}
!14837 = !DILocalVariable(name: "thread", arg: 1, scope: !14835, file: !2466, line: 635, type: !2361)
!14838 = !DILocalVariable(name: "__i", scope: !14839, file: !2466, line: 637, type: !14355)
!14839 = distinct !DILexicalBlock(scope: !14835, file: !2466, line: 637, column: 2)
!14840 = !DILocalVariable(name: "__key", scope: !14839, file: !2466, line: 637, type: !14355)
!14841 = !DILocation(line: 0, scope: !14835)
!14842 = !DILocation(line: 0, scope: !14839)
!14843 = !DILocation(line: 0, scope: !14363, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 637, column: 2, scope: !14839)
!14845 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !14844)
!14847 = !DILocation(line: 0, scope: !14372, inlinedAt: !14846)
!14848 = !DILocation(line: 639, column: 4, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14850, file: !2466, line: 638, column: 41)
!14850 = distinct !DILexicalBlock(scope: !14851, file: !2466, line: 638, column: 7)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !2466, line: 637, column: 26)
!14852 = distinct !DILexicalBlock(scope: !14839, file: !2466, line: 637, column: 2)
!14853 = !DILocation(line: 0, scope: !14390, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 637, column: 2, scope: !14852)
!14855 = !DILocation(line: 0, scope: !14398, inlinedAt: !14856)
!14856 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14854)
!14857 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14856)
!14858 = !DILocation(line: 642, column: 1, scope: !14835)
!14859 = distinct !DISubprogram(name: "ready_thread", scope: !2466, file: !2466, line: 617, type: !14321, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14860)
!14860 = !{!14861}
!14861 = !DILocalVariable(name: "thread", arg: 1, scope: !14859, file: !2466, line: 617, type: !2361)
!14862 = !DILocation(line: 0, scope: !14859)
!14863 = !DILocation(line: 626, column: 7, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14859, file: !2466, line: 626, column: 6)
!14865 = !DILocation(line: 626, column: 34, scope: !14864)
!14866 = !DILocation(line: 626, column: 37, scope: !14864)
!14867 = !DILocation(line: 626, column: 6, scope: !14859)
!14868 = !DILocation(line: 0, scope: !14549, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 629, column: 3, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14864, file: !2466, line: 626, column: 64)
!14871 = !DILocation(line: 252, column: 15, scope: !14549, inlinedAt: !14869)
!14872 = !DILocation(line: 252, column: 28, scope: !14549, inlinedAt: !14869)
!14873 = !DILocation(line: 0, scope: !14556, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 254, column: 3, scope: !14560, inlinedAt: !14869)
!14875 = !DILocation(line: 0, scope: !14563, inlinedAt: !14876)
!14876 = distinct !DILocation(line: 229, column: 2, scope: !14556, inlinedAt: !14874)
!14877 = !DILocation(line: 188, column: 2, scope: !14573, inlinedAt: !14876)
!14878 = !DILocation(line: 188, column: 2, scope: !14575, inlinedAt: !14876)
!14879 = !DILocation(line: 0, scope: !14573, inlinedAt: !14876)
!14880 = !DILocation(line: 189, column: 7, scope: !14578, inlinedAt: !14876)
!14881 = !DILocation(line: 189, column: 35, scope: !14578, inlinedAt: !14876)
!14882 = !DILocation(line: 189, column: 7, scope: !14579, inlinedAt: !14876)
!14883 = !DILocation(line: 191, column: 21, scope: !14583, inlinedAt: !14876)
!14884 = !DILocation(line: 190, column: 4, scope: !14583, inlinedAt: !14876)
!14885 = !DILocation(line: 192, column: 4, scope: !14583, inlinedAt: !14876)
!14886 = distinct !{!14886, !14877, !14887}
!14887 = !DILocation(line: 194, column: 2, scope: !14573, inlinedAt: !14876)
!14888 = !DILocation(line: 196, column: 37, scope: !14563, inlinedAt: !14876)
!14889 = !DILocation(line: 196, column: 2, scope: !14563, inlinedAt: !14876)
!14890 = !DILocation(line: 197, column: 1, scope: !14563, inlinedAt: !14876)
!14891 = !DILocation(line: 630, column: 3, scope: !14870)
!14892 = !DILocation(line: 632, column: 2, scope: !14870)
!14893 = !DILocation(line: 633, column: 1, scope: !14859)
!14894 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12868, file: !12868, line: 120, type: !14481, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14895)
!14895 = !{!14896}
!14896 = !DILocalVariable(name: "thread", arg: 1, scope: !14894, file: !12868, line: 120, type: !2361)
!14897 = !DILocation(line: 0, scope: !14894)
!14898 = !DILocation(line: 122, column: 12, scope: !14894)
!14899 = !DILocation(line: 122, column: 62, scope: !14894)
!14900 = !DILocation(line: 123, column: 4, scope: !14894)
!14901 = !DILocation(line: 122, column: 2, scope: !14894)
!14902 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2466, file: !2466, line: 644, type: !14321, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14903)
!14903 = !{!14904, !14905, !14907}
!14904 = !DILocalVariable(name: "thread", arg: 1, scope: !14902, file: !2466, line: 644, type: !2361)
!14905 = !DILocalVariable(name: "__i", scope: !14906, file: !2466, line: 646, type: !14355)
!14906 = distinct !DILexicalBlock(scope: !14902, file: !2466, line: 646, column: 2)
!14907 = !DILocalVariable(name: "__key", scope: !14906, file: !2466, line: 646, type: !14355)
!14908 = !DILocation(line: 0, scope: !14902)
!14909 = !DILocation(line: 0, scope: !14906)
!14910 = !DILocation(line: 0, scope: !14363, inlinedAt: !14911)
!14911 = distinct !DILocation(line: 646, column: 2, scope: !14906)
!14912 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !14913)
!14913 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !14911)
!14914 = !DILocation(line: 0, scope: !14372, inlinedAt: !14913)
!14915 = !DILocation(line: 647, column: 3, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !2466, line: 646, column: 26)
!14917 = distinct !DILexicalBlock(scope: !14906, file: !2466, line: 646, column: 2)
!14918 = !DILocation(line: 0, scope: !14390, inlinedAt: !14919)
!14919 = distinct !DILocation(line: 646, column: 2, scope: !14917)
!14920 = !DILocation(line: 0, scope: !14398, inlinedAt: !14921)
!14921 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14919)
!14922 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14921)
!14923 = !DILocation(line: 649, column: 1, scope: !14902)
!14924 = distinct !DISubprogram(name: "z_sched_start", scope: !2466, file: !2466, line: 651, type: !14321, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14925)
!14925 = !{!14926, !14927}
!14926 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !2466, line: 651, type: !2361)
!14927 = !DILocalVariable(name: "key", scope: !14924, file: !2466, line: 653, type: !14355)
!14928 = !DILocation(line: 0, scope: !14924)
!14929 = !DILocation(line: 0, scope: !14363, inlinedAt: !14930)
!14930 = distinct !DILocation(line: 653, column: 25, scope: !14924)
!14931 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !14932)
!14932 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !14930)
!14933 = !DILocation(line: 0, scope: !14372, inlinedAt: !14932)
!14934 = !DILocation(line: 655, column: 6, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14924, file: !2466, line: 655, column: 6)
!14936 = !DILocation(line: 655, column: 6, scope: !14924)
!14937 = !DILocation(line: 0, scope: !14390, inlinedAt: !14938)
!14938 = distinct !DILocation(line: 656, column: 3, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14935, file: !2466, line: 655, column: 36)
!14940 = !DILocation(line: 0, scope: !14398, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14938)
!14942 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14941)
!14943 = !DILocation(line: 657, column: 3, scope: !14939)
!14944 = !DILocation(line: 660, column: 2, scope: !14924)
!14945 = !DILocation(line: 661, column: 2, scope: !14924)
!14946 = !DILocation(line: 662, column: 2, scope: !14924)
!14947 = !DILocation(line: 663, column: 1, scope: !14924)
!14948 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12868, file: !12868, line: 126, type: !14481, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14949)
!14949 = !{!14950}
!14950 = !DILocalVariable(name: "thread", arg: 1, scope: !14948, file: !12868, line: 126, type: !2361)
!14951 = !DILocation(line: 0, scope: !14948)
!14952 = !DILocation(line: 128, column: 23, scope: !14948)
!14953 = !DILocation(line: 128, column: 36, scope: !14948)
!14954 = !DILocation(line: 128, column: 56, scope: !14948)
!14955 = !DILocation(line: 128, column: 2, scope: !14948)
!14956 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12868, file: !12868, line: 155, type: !14321, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14957)
!14957 = !{!14958}
!14958 = !DILocalVariable(name: "thread", arg: 1, scope: !14956, file: !12868, line: 155, type: !2361)
!14959 = !DILocation(line: 0, scope: !14956)
!14960 = !DILocation(line: 157, column: 15, scope: !14956)
!14961 = !DILocation(line: 157, column: 28, scope: !14956)
!14962 = !DILocation(line: 158, column: 1, scope: !14956)
!14963 = distinct !DISubprogram(name: "z_reschedule", scope: !2466, file: !2466, line: 967, type: !14391, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14964)
!14964 = !{!14965, !14966}
!14965 = !DILocalVariable(name: "lock", arg: 1, scope: !14963, file: !2466, line: 967, type: !14366)
!14966 = !DILocalVariable(name: "key", arg: 2, scope: !14963, file: !2466, line: 967, type: !14355)
!14967 = !DILocation(line: 0, scope: !14963)
!14968 = !DILocation(line: 969, column: 6, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14963, file: !2466, line: 969, column: 6)
!14970 = !DILocation(line: 969, column: 23, scope: !14969)
!14971 = !DILocation(line: 969, column: 26, scope: !14969)
!14972 = !DILocation(line: 969, column: 6, scope: !14963)
!14973 = !DILocalVariable(name: "key", arg: 2, scope: !14974, file: !12972, line: 193, type: !14355)
!14974 = distinct !DISubprogram(name: "z_swap", scope: !12972, file: !12972, line: 193, type: !14975, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{!103, !14366, !14355}
!14977 = !{!14978, !14973}
!14978 = !DILocalVariable(name: "lock", arg: 1, scope: !14974, file: !12972, line: 193, type: !14366)
!14979 = !DILocation(line: 0, scope: !14974, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 970, column: 3, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14969, file: !2466, line: 969, column: 39)
!14982 = !DILocation(line: 196, column: 9, scope: !14974, inlinedAt: !14980)
!14983 = !DILocation(line: 971, column: 2, scope: !14981)
!14984 = !DILocation(line: 0, scope: !14390, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 972, column: 3, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14969, file: !2466, line: 971, column: 9)
!14987 = !DILocation(line: 0, scope: !14398, inlinedAt: !14988)
!14988 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !14985)
!14989 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !14988)
!14990 = !DILocation(line: 975, column: 1, scope: !14963)
!14991 = distinct !DISubprogram(name: "resched", scope: !2466, file: !2466, line: 940, type: !14992, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !14994)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{!170, !121}
!14994 = !{!14995}
!14995 = !DILocalVariable(name: "key", arg: 1, scope: !14991, file: !2466, line: 940, type: !121)
!14996 = !DILocation(line: 0, scope: !14991)
!14997 = !DILocalVariable(name: "key", arg: 1, scope: !14998, file: !5695, line: 112, type: !32)
!14998 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5695, file: !5695, line: 112, type: !14999, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15001)
!14999 = !DISubroutineType(types: !15000)
!15000 = !{!170, !32}
!15001 = !{!14997}
!15002 = !DILocation(line: 0, scope: !14998, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 946, column: 9, scope: !14991)
!15004 = !DILocation(line: 115, column: 13, scope: !14998, inlinedAt: !15003)
!15005 = !DILocation(line: 946, column: 32, scope: !14991)
!15006 = !DILocation(line: 1031, column: 3, scope: !15007, inlinedAt: !15010)
!15007 = distinct !DISubprogram(name: "__get_IPSR", scope: !5927, file: !5927, line: 1027, type: !6677, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15008)
!15008 = !{!15009}
!15009 = !DILocalVariable(name: "result", scope: !15007, file: !5927, line: 1029, type: !121)
!15010 = distinct !DILocation(line: 48, column: 10, scope: !15011, inlinedAt: !15012)
!15011 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6683, file: !6683, line: 46, type: !6684, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15012 = distinct !DILocation(line: 946, column: 36, scope: !14991)
!15013 = !{i64 2486744}
!15014 = !DILocation(line: 0, scope: !15007, inlinedAt: !15010)
!15015 = !DILocation(line: 48, column: 9, scope: !15011, inlinedAt: !15012)
!15016 = !DILocation(line: 946, column: 2, scope: !14991)
!15017 = distinct !DISubprogram(name: "need_swap", scope: !2466, file: !2466, line: 953, type: !6684, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15018)
!15018 = !{!15019}
!15019 = !DILocalVariable(name: "new_thread", scope: !15017, file: !2466, line: 959, type: !2361)
!15020 = !DILocation(line: 962, column: 31, scope: !15017)
!15021 = !DILocation(line: 0, scope: !15017)
!15022 = !DILocation(line: 963, column: 23, scope: !15017)
!15023 = !DILocation(line: 963, column: 20, scope: !15017)
!15024 = !DILocation(line: 963, column: 2, scope: !15017)
!15025 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12972, file: !12972, line: 181, type: !5937, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15026)
!15026 = !{!15027, !15028}
!15027 = !DILocalVariable(name: "key", arg: 1, scope: !15025, file: !12972, line: 181, type: !32)
!15028 = !DILocalVariable(name: "ret", scope: !15025, file: !12972, line: 183, type: !103)
!15029 = !DILocation(line: 0, scope: !15025)
!15030 = !DILocation(line: 185, column: 8, scope: !15025)
!15031 = !DILocation(line: 186, column: 2, scope: !15025)
!15032 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2466, file: !2466, line: 665, type: !14321, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15033)
!15033 = !{!15034, !15035, !15037}
!15034 = !DILocalVariable(name: "thread", arg: 1, scope: !15032, file: !2466, line: 665, type: !2361)
!15035 = !DILocalVariable(name: "__i", scope: !15036, file: !2466, line: 671, type: !14355)
!15036 = distinct !DILexicalBlock(scope: !15032, file: !2466, line: 671, column: 2)
!15037 = !DILocalVariable(name: "__key", scope: !15036, file: !2466, line: 671, type: !14355)
!15038 = !DILocation(line: 0, scope: !15032)
!15039 = !DILocation(line: 669, column: 8, scope: !15032)
!15040 = !DILocation(line: 0, scope: !15036)
!15041 = !DILocation(line: 0, scope: !14363, inlinedAt: !15042)
!15042 = distinct !DILocation(line: 671, column: 2, scope: !15036)
!15043 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15042)
!15045 = !DILocation(line: 0, scope: !14372, inlinedAt: !15044)
!15046 = !DILocation(line: 672, column: 7, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15048, file: !2466, line: 672, column: 7)
!15048 = distinct !DILexicalBlock(scope: !15049, file: !2466, line: 671, column: 26)
!15049 = distinct !DILexicalBlock(scope: !15036, file: !2466, line: 671, column: 2)
!15050 = !DILocation(line: 672, column: 7, scope: !15048)
!15051 = !DILocation(line: 0, scope: !14532, inlinedAt: !15052)
!15052 = distinct !DILocation(line: 673, column: 4, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15047, file: !2466, line: 672, column: 35)
!15054 = !DILocation(line: 266, column: 15, scope: !14532, inlinedAt: !15052)
!15055 = !DILocation(line: 266, column: 28, scope: !14532, inlinedAt: !15052)
!15056 = !DILocation(line: 0, scope: !14540, inlinedAt: !15057)
!15057 = distinct !DILocation(line: 268, column: 3, scope: !14544, inlinedAt: !15052)
!15058 = !DILocation(line: 234, column: 2, scope: !14540, inlinedAt: !15057)
!15059 = !DILocation(line: 674, column: 3, scope: !15053)
!15060 = !DILocation(line: 675, column: 3, scope: !15048)
!15061 = !DILocation(line: 676, column: 26, scope: !15048)
!15062 = !DILocation(line: 676, column: 23, scope: !15048)
!15063 = !DILocation(line: 676, column: 3, scope: !15048)
!15064 = !DILocation(line: 0, scope: !14390, inlinedAt: !15065)
!15065 = distinct !DILocation(line: 671, column: 2, scope: !15049)
!15066 = !DILocation(line: 0, scope: !14398, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15065)
!15068 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15067)
!15069 = !DILocation(line: 679, column: 16, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15032, file: !2466, line: 679, column: 6)
!15071 = !DILocation(line: 679, column: 13, scope: !15070)
!15072 = !DILocation(line: 679, column: 6, scope: !15032)
!15073 = !DILocation(line: 680, column: 3, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15070, file: !2466, line: 679, column: 26)
!15075 = !DILocation(line: 681, column: 2, scope: !15074)
!15076 = !DILocation(line: 684, column: 1, scope: !15032)
!15077 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13260, file: !13260, line: 52, type: !14339, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15078)
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "thread", arg: 1, scope: !15077, file: !13260, line: 52, type: !2361)
!15080 = !DILocation(line: 0, scope: !15077)
!15081 = !DILocation(line: 54, column: 39, scope: !15077)
!15082 = !DILocation(line: 54, column: 9, scope: !15077)
!15083 = !DILocation(line: 54, column: 2, scope: !15077)
!15084 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12868, file: !12868, line: 141, type: !14321, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15085)
!15085 = !{!15086}
!15086 = !DILocalVariable(name: "thread", arg: 1, scope: !15084, file: !12868, line: 141, type: !2361)
!15087 = !DILocation(line: 0, scope: !15084)
!15088 = !DILocation(line: 143, column: 15, scope: !15084)
!15089 = !DILocation(line: 143, column: 28, scope: !15084)
!15090 = !DILocation(line: 146, column: 1, scope: !15084)
!15091 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12868, file: !12868, line: 73, type: !3154, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15092 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15093)
!15093 = distinct !DILocation(line: 75, column: 30, scope: !15091)
!15094 = !DILocation(line: 0, scope: !14372, inlinedAt: !15093)
!15095 = !DILocation(line: 75, column: 9, scope: !15091)
!15096 = !DILocation(line: 76, column: 1, scope: !15091)
!15097 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2466, file: !2466, line: 977, type: !5719, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15098)
!15098 = !{!15099}
!15099 = !DILocalVariable(name: "key", arg: 1, scope: !15097, file: !2466, line: 977, type: !121)
!15100 = !DILocation(line: 0, scope: !15097)
!15101 = !DILocation(line: 979, column: 6, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15097, file: !2466, line: 979, column: 6)
!15103 = !DILocation(line: 979, column: 6, scope: !15097)
!15104 = !DILocation(line: 980, column: 3, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15102, file: !2466, line: 979, column: 20)
!15106 = !DILocation(line: 981, column: 2, scope: !15105)
!15107 = !DILocation(line: 0, scope: !14398, inlinedAt: !15108)
!15108 = distinct !DILocation(line: 982, column: 3, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15102, file: !2466, line: 981, column: 9)
!15110 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15108)
!15111 = !DILocation(line: 985, column: 1, scope: !15097)
!15112 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2466, file: !2466, line: 695, type: !14321, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15113)
!15113 = !{!15114, !15115}
!15114 = !DILocalVariable(name: "thread", arg: 1, scope: !15112, file: !2466, line: 695, type: !2361)
!15115 = !DILocalVariable(name: "key", scope: !15112, file: !2466, line: 699, type: !14355)
!15116 = !DILocation(line: 0, scope: !15112)
!15117 = !DILocation(line: 0, scope: !14363, inlinedAt: !15118)
!15118 = distinct !DILocation(line: 699, column: 25, scope: !15112)
!15119 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15118)
!15121 = !DILocation(line: 0, scope: !14372, inlinedAt: !15120)
!15122 = !DILocation(line: 702, column: 7, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15112, file: !2466, line: 702, column: 6)
!15124 = !DILocation(line: 702, column: 6, scope: !15112)
!15125 = !DILocation(line: 0, scope: !14390, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 703, column: 3, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15123, file: !2466, line: 702, column: 38)
!15128 = !DILocation(line: 0, scope: !14398, inlinedAt: !15129)
!15129 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15126)
!15130 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15129)
!15131 = !DILocation(line: 704, column: 3, scope: !15127)
!15132 = !DILocation(line: 707, column: 2, scope: !15112)
!15133 = !DILocation(line: 708, column: 2, scope: !15112)
!15134 = !DILocation(line: 710, column: 2, scope: !15112)
!15135 = !DILocation(line: 713, column: 1, scope: !15112)
!15136 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12868, file: !12868, line: 96, type: !14481, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15137)
!15137 = !{!15138}
!15138 = !DILocalVariable(name: "thread", arg: 1, scope: !15136, file: !12868, line: 96, type: !2361)
!15139 = !DILocation(line: 0, scope: !15136)
!15140 = !DILocation(line: 98, column: 23, scope: !15136)
!15141 = !DILocation(line: 98, column: 36, scope: !15136)
!15142 = !DILocation(line: 98, column: 57, scope: !15136)
!15143 = !DILocation(line: 98, column: 2, scope: !15136)
!15144 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12868, file: !12868, line: 148, type: !14321, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15145)
!15145 = !{!15146}
!15146 = !DILocalVariable(name: "thread", arg: 1, scope: !15144, file: !12868, line: 148, type: !2361)
!15147 = !DILocation(line: 0, scope: !15144)
!15148 = !DILocation(line: 150, column: 15, scope: !15144)
!15149 = !DILocation(line: 150, column: 28, scope: !15144)
!15150 = !DILocation(line: 153, column: 1, scope: !15144)
!15151 = distinct !DISubprogram(name: "z_pend_thread", scope: !2466, file: !2466, line: 770, type: !15152, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15158)
!15152 = !DISubroutineType(types: !15153)
!15153 = !{null, !2361, !2392, !15154}
!15154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !15155)
!15155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !15156)
!15156 = !{!15157}
!15157 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15155, file: !214, line: 66, baseType: !213, size: 64)
!15158 = !{!15159, !15160, !15161, !15162, !15164}
!15159 = !DILocalVariable(name: "thread", arg: 1, scope: !15151, file: !2466, line: 770, type: !2361)
!15160 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15151, file: !2466, line: 770, type: !2392)
!15161 = !DILocalVariable(name: "timeout", arg: 3, scope: !15151, file: !2466, line: 771, type: !15154)
!15162 = !DILocalVariable(name: "__i", scope: !15163, file: !2466, line: 774, type: !14355)
!15163 = distinct !DILexicalBlock(scope: !15151, file: !2466, line: 774, column: 2)
!15164 = !DILocalVariable(name: "__key", scope: !15163, file: !2466, line: 774, type: !14355)
!15165 = !DILocation(line: 0, scope: !15151)
!15166 = !DILocation(line: 0, scope: !15163)
!15167 = !DILocation(line: 0, scope: !14363, inlinedAt: !15168)
!15168 = distinct !DILocation(line: 774, column: 2, scope: !15163)
!15169 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15168)
!15171 = !DILocation(line: 0, scope: !14372, inlinedAt: !15170)
!15172 = !DILocation(line: 775, column: 3, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15174, file: !2466, line: 774, column: 26)
!15174 = distinct !DILexicalBlock(scope: !15163, file: !2466, line: 774, column: 2)
!15175 = !DILocation(line: 0, scope: !14390, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 774, column: 2, scope: !15174)
!15177 = !DILocation(line: 0, scope: !14398, inlinedAt: !15178)
!15178 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15176)
!15179 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15178)
!15180 = !DILocation(line: 777, column: 1, scope: !15151)
!15181 = distinct !DISubprogram(name: "pend_locked", scope: !2466, file: !2466, line: 760, type: !15152, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15182)
!15182 = !{!15183, !15184, !15185}
!15183 = !DILocalVariable(name: "thread", arg: 1, scope: !15181, file: !2466, line: 760, type: !2361)
!15184 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15181, file: !2466, line: 760, type: !2392)
!15185 = !DILocalVariable(name: "timeout", arg: 3, scope: !15181, file: !2466, line: 761, type: !15154)
!15186 = !DILocation(line: 0, scope: !15181)
!15187 = !DILocation(line: 766, column: 2, scope: !15181)
!15188 = !DILocation(line: 767, column: 2, scope: !15181)
!15189 = !DILocation(line: 768, column: 1, scope: !15181)
!15190 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2466, file: !2466, line: 740, type: !15191, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15193)
!15191 = !DISubroutineType(types: !15192)
!15192 = !{null, !2361, !2392}
!15193 = !{!15194, !15195}
!15194 = !DILocalVariable(name: "thread", arg: 1, scope: !15190, file: !2466, line: 740, type: !2361)
!15195 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15190, file: !2466, line: 740, type: !2392)
!15196 = !DILocation(line: 0, scope: !15190)
!15197 = !DILocation(line: 742, column: 2, scope: !15190)
!15198 = !DILocation(line: 743, column: 2, scope: !15190)
!15199 = !DILocation(line: 747, column: 13, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15190, file: !2466, line: 747, column: 6)
!15201 = !DILocation(line: 747, column: 6, scope: !15190)
!15202 = !DILocation(line: 748, column: 16, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15200, file: !2466, line: 747, column: 22)
!15204 = !DILocation(line: 748, column: 26, scope: !15203)
!15205 = !DILocation(line: 749, column: 28, scope: !15203)
!15206 = !DILocation(line: 0, scope: !14563, inlinedAt: !15207)
!15207 = distinct !DILocation(line: 749, column: 3, scope: !15203)
!15208 = !DILocation(line: 188, column: 2, scope: !14573, inlinedAt: !15207)
!15209 = !DILocation(line: 188, column: 2, scope: !14575, inlinedAt: !15207)
!15210 = !DILocation(line: 0, scope: !14573, inlinedAt: !15207)
!15211 = !DILocation(line: 189, column: 7, scope: !14578, inlinedAt: !15207)
!15212 = !DILocation(line: 189, column: 35, scope: !14578, inlinedAt: !15207)
!15213 = !DILocation(line: 189, column: 7, scope: !14579, inlinedAt: !15207)
!15214 = !DILocation(line: 191, column: 21, scope: !14583, inlinedAt: !15207)
!15215 = !DILocation(line: 190, column: 4, scope: !14583, inlinedAt: !15207)
!15216 = !DILocation(line: 192, column: 4, scope: !14583, inlinedAt: !15207)
!15217 = distinct !{!15217, !15208, !15218}
!15218 = !DILocation(line: 194, column: 2, scope: !14573, inlinedAt: !15207)
!15219 = !DILocation(line: 196, column: 37, scope: !14563, inlinedAt: !15207)
!15220 = !DILocation(line: 196, column: 2, scope: !14563, inlinedAt: !15207)
!15221 = !DILocation(line: 197, column: 1, scope: !14563, inlinedAt: !15207)
!15222 = !DILocation(line: 751, column: 1, scope: !15190)
!15223 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2466, file: !2466, line: 753, type: !15224, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15226)
!15224 = !DISubroutineType(types: !15225)
!15225 = !{null, !2361, !15154}
!15226 = !{!15227, !15228}
!15227 = !DILocalVariable(name: "thread", arg: 1, scope: !15223, file: !2466, line: 753, type: !2361)
!15228 = !DILocalVariable(name: "timeout", arg: 2, scope: !15223, file: !2466, line: 753, type: !15154)
!15229 = !DILocation(line: 0, scope: !15223)
!15230 = !DILocation(line: 755, column: 7, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15223, file: !2466, line: 755, column: 6)
!15232 = !DILocation(line: 755, column: 6, scope: !15223)
!15233 = !DILocation(line: 756, column: 3, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15231, file: !2466, line: 755, column: 41)
!15235 = !DILocation(line: 757, column: 2, scope: !15234)
!15236 = !DILocation(line: 758, column: 1, scope: !15223)
!15237 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13260, file: !13260, line: 47, type: !15224, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15238)
!15238 = !{!15239, !15240}
!15239 = !DILocalVariable(name: "thread", arg: 1, scope: !15237, file: !13260, line: 47, type: !2361)
!15240 = !DILocalVariable(name: "ticks", arg: 2, scope: !15237, file: !13260, line: 47, type: !15154)
!15241 = !DILocation(line: 0, scope: !15237)
!15242 = !DILocation(line: 49, column: 30, scope: !15237)
!15243 = !DILocation(line: 49, column: 2, scope: !15237)
!15244 = !DILocation(line: 50, column: 1, scope: !15237)
!15245 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2466, file: !2466, line: 795, type: !2418, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15246)
!15246 = !{!15247, !15248, !15249, !15251, !15252}
!15247 = !DILocalVariable(name: "timeout", arg: 1, scope: !15245, file: !2466, line: 795, type: !2420)
!15248 = !DILocalVariable(name: "thread", scope: !15245, file: !2466, line: 797, type: !2361)
!15249 = !DILocalVariable(name: "__i", scope: !15250, file: !2466, line: 800, type: !14355)
!15250 = distinct !DILexicalBlock(scope: !15245, file: !2466, line: 800, column: 2)
!15251 = !DILocalVariable(name: "__key", scope: !15250, file: !2466, line: 800, type: !14355)
!15252 = !DILocalVariable(name: "killed", scope: !15253, file: !2466, line: 801, type: !170)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !2466, line: 800, column: 26)
!15254 = distinct !DILexicalBlock(scope: !15250, file: !2466, line: 800, column: 2)
!15255 = !DILocation(line: 0, scope: !15245)
!15256 = !DILocation(line: 797, column: 28, scope: !15245)
!15257 = !DILocation(line: 0, scope: !15250)
!15258 = !DILocation(line: 0, scope: !14363, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 800, column: 2, scope: !15250)
!15260 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15261)
!15261 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15259)
!15262 = !DILocation(line: 0, scope: !14372, inlinedAt: !15261)
!15263 = !DILocation(line: 801, column: 27, scope: !15253)
!15264 = !DILocation(line: 801, column: 32, scope: !15253)
!15265 = !DILocation(line: 801, column: 61, scope: !15253)
!15266 = !DILocation(line: 0, scope: !15253)
!15267 = !DILocation(line: 804, column: 7, scope: !15253)
!15268 = !DILocation(line: 805, column: 21, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15270, file: !2466, line: 805, column: 8)
!15270 = distinct !DILexicalBlock(scope: !15271, file: !2466, line: 804, column: 16)
!15271 = distinct !DILexicalBlock(scope: !15253, file: !2466, line: 804, column: 7)
!15272 = !DILocation(line: 805, column: 31, scope: !15269)
!15273 = !DILocation(line: 805, column: 8, scope: !15270)
!15274 = !DILocation(line: 806, column: 5, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15269, file: !2466, line: 805, column: 40)
!15276 = !DILocation(line: 807, column: 4, scope: !15275)
!15277 = !DILocation(line: 808, column: 4, scope: !15270)
!15278 = !DILocation(line: 809, column: 4, scope: !15270)
!15279 = !DILocation(line: 810, column: 4, scope: !15270)
!15280 = !DILocation(line: 811, column: 3, scope: !15270)
!15281 = !DILocation(line: 0, scope: !14390, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 800, column: 2, scope: !15254)
!15283 = !DILocation(line: 0, scope: !14398, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15282)
!15285 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15284)
!15286 = !DILocation(line: 813, column: 1, scope: !15245)
!15287 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2466, file: !2466, line: 779, type: !14321, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15288)
!15288 = !{!15289}
!15289 = !DILocalVariable(name: "thread", arg: 1, scope: !15287, file: !2466, line: 779, type: !2361)
!15290 = !DILocation(line: 0, scope: !15287)
!15291 = !DILocation(line: 781, column: 2, scope: !15287)
!15292 = !DILocation(line: 782, column: 2, scope: !15287)
!15293 = !DILocation(line: 783, column: 15, scope: !15287)
!15294 = !DILocation(line: 783, column: 25, scope: !15287)
!15295 = !DILocation(line: 784, column: 1, scope: !15287)
!15296 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12868, file: !12868, line: 165, type: !14321, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15297)
!15297 = !{!15298}
!15298 = !DILocalVariable(name: "thread", arg: 1, scope: !15296, file: !12868, line: 165, type: !2361)
!15299 = !DILocation(line: 0, scope: !15296)
!15300 = !DILocation(line: 167, column: 15, scope: !15296)
!15301 = !DILocation(line: 167, column: 28, scope: !15296)
!15302 = !DILocation(line: 168, column: 1, scope: !15296)
!15303 = distinct !DISubprogram(name: "unready_thread", scope: !2466, file: !2466, line: 731, type: !14321, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15304)
!15304 = !{!15305}
!15305 = !DILocalVariable(name: "thread", arg: 1, scope: !15303, file: !2466, line: 731, type: !2361)
!15306 = !DILocation(line: 0, scope: !15303)
!15307 = !DILocation(line: 733, column: 6, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15303, file: !2466, line: 733, column: 6)
!15309 = !DILocation(line: 733, column: 6, scope: !15303)
!15310 = !DILocation(line: 0, scope: !14532, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 734, column: 3, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15308, file: !2466, line: 733, column: 34)
!15313 = !DILocation(line: 266, column: 15, scope: !14532, inlinedAt: !15311)
!15314 = !DILocation(line: 266, column: 28, scope: !14532, inlinedAt: !15311)
!15315 = !DILocation(line: 0, scope: !14540, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 268, column: 3, scope: !14544, inlinedAt: !15311)
!15317 = !DILocation(line: 234, column: 2, scope: !14540, inlinedAt: !15316)
!15318 = !DILocation(line: 735, column: 2, scope: !15312)
!15319 = !DILocation(line: 736, column: 25, scope: !15303)
!15320 = !DILocation(line: 736, column: 22, scope: !15303)
!15321 = !DILocation(line: 736, column: 2, scope: !15303)
!15322 = !DILocation(line: 737, column: 1, scope: !15303)
!15323 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12868, file: !12868, line: 160, type: !14321, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15324)
!15324 = !{!15325}
!15325 = !DILocalVariable(name: "thread", arg: 1, scope: !15323, file: !12868, line: 160, type: !2361)
!15326 = !DILocation(line: 0, scope: !15323)
!15327 = !DILocation(line: 162, column: 15, scope: !15323)
!15328 = !DILocation(line: 162, column: 28, scope: !15323)
!15329 = !DILocation(line: 163, column: 1, scope: !15323)
!15330 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2466, file: !2466, line: 786, type: !14321, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15331)
!15331 = !{!15332, !15333, !15335}
!15332 = !DILocalVariable(name: "thread", arg: 1, scope: !15330, file: !2466, line: 786, type: !2361)
!15333 = !DILocalVariable(name: "__i", scope: !15334, file: !2466, line: 788, type: !14355)
!15334 = distinct !DILexicalBlock(scope: !15330, file: !2466, line: 788, column: 2)
!15335 = !DILocalVariable(name: "__key", scope: !15334, file: !2466, line: 788, type: !14355)
!15336 = !DILocation(line: 0, scope: !15330)
!15337 = !DILocation(line: 0, scope: !15334)
!15338 = !DILocation(line: 0, scope: !14363, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 788, column: 2, scope: !15334)
!15340 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15339)
!15342 = !DILocation(line: 0, scope: !14372, inlinedAt: !15341)
!15343 = !DILocation(line: 789, column: 3, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15345, file: !2466, line: 788, column: 26)
!15345 = distinct !DILexicalBlock(scope: !15334, file: !2466, line: 788, column: 2)
!15346 = !DILocation(line: 0, scope: !14390, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 788, column: 2, scope: !15345)
!15348 = !DILocation(line: 0, scope: !14398, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15347)
!15350 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15349)
!15351 = !DILocation(line: 791, column: 1, scope: !15330)
!15352 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2466, file: !2466, line: 816, type: !15353, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15355)
!15353 = !DISubroutineType(types: !15354)
!15354 = !{!103, !121, !2392, !15154}
!15355 = !{!15356, !15357, !15358, !15359, !15360, !15362}
!15356 = !DILocalVariable(name: "key", arg: 1, scope: !15352, file: !2466, line: 816, type: !121)
!15357 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15352, file: !2466, line: 816, type: !2392)
!15358 = !DILocalVariable(name: "timeout", arg: 3, scope: !15352, file: !2466, line: 816, type: !15154)
!15359 = !DILocalVariable(name: "ret", scope: !15352, file: !2466, line: 828, type: !103)
!15360 = !DILocalVariable(name: "__i", scope: !15361, file: !2466, line: 829, type: !14355)
!15361 = distinct !DILexicalBlock(scope: !15352, file: !2466, line: 829, column: 2)
!15362 = !DILocalVariable(name: "__key", scope: !15361, file: !2466, line: 829, type: !14355)
!15363 = !DILocation(line: 0, scope: !15352)
!15364 = !DILocation(line: 823, column: 14, scope: !15352)
!15365 = !DILocation(line: 823, column: 2, scope: !15352)
!15366 = !DILocation(line: 826, column: 20, scope: !15352)
!15367 = !DILocation(line: 826, column: 18, scope: !15352)
!15368 = !DILocation(line: 828, column: 12, scope: !15352)
!15369 = !DILocation(line: 0, scope: !15361)
!15370 = !DILocation(line: 0, scope: !14363, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 829, column: 2, scope: !15361)
!15372 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15373)
!15373 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15371)
!15374 = !DILocation(line: 0, scope: !14372, inlinedAt: !15373)
!15375 = !DILocation(line: 830, column: 7, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15377, file: !2466, line: 830, column: 7)
!15377 = distinct !DILexicalBlock(scope: !15378, file: !2466, line: 829, column: 26)
!15378 = distinct !DILexicalBlock(scope: !15361, file: !2466, line: 829, column: 2)
!15379 = !DILocation(line: 830, column: 26, scope: !15376)
!15380 = !DILocation(line: 830, column: 23, scope: !15376)
!15381 = !DILocation(line: 830, column: 7, scope: !15377)
!15382 = !DILocation(line: 831, column: 20, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15376, file: !2466, line: 830, column: 36)
!15384 = !DILocation(line: 832, column: 3, scope: !15383)
!15385 = !DILocation(line: 0, scope: !14390, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 829, column: 2, scope: !15378)
!15387 = !DILocation(line: 0, scope: !14398, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15386)
!15389 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15388)
!15390 = !DILocation(line: 834, column: 2, scope: !15352)
!15391 = distinct !DISubprogram(name: "z_pend_curr", scope: !2466, file: !2466, line: 840, type: !15392, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15394)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{!103, !14366, !14355, !2392, !15154}
!15394 = !{!15395, !15396, !15397, !15398}
!15395 = !DILocalVariable(name: "lock", arg: 1, scope: !15391, file: !2466, line: 840, type: !14366)
!15396 = !DILocalVariable(name: "key", arg: 2, scope: !15391, file: !2466, line: 840, type: !14355)
!15397 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15391, file: !2466, line: 841, type: !2392)
!15398 = !DILocalVariable(name: "timeout", arg: 4, scope: !15391, file: !2466, line: 841, type: !15154)
!15399 = !DILocation(line: 0, scope: !15391)
!15400 = !DILocation(line: 844, column: 20, scope: !15391)
!15401 = !DILocation(line: 844, column: 18, scope: !15391)
!15402 = !DILocation(line: 0, scope: !14363, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 856, column: 9, scope: !15391)
!15404 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15403)
!15406 = !DILocation(line: 0, scope: !14372, inlinedAt: !15405)
!15407 = !DILocation(line: 857, column: 14, scope: !15391)
!15408 = !DILocation(line: 857, column: 2, scope: !15391)
!15409 = !DILocation(line: 0, scope: !14974, inlinedAt: !15410)
!15410 = distinct !DILocation(line: 859, column: 9, scope: !15391)
!15411 = !DILocation(line: 196, column: 9, scope: !14974, inlinedAt: !15410)
!15412 = !DILocation(line: 859, column: 2, scope: !15391)
!15413 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2466, file: !2466, line: 862, type: !15414, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15416)
!15414 = !DISubroutineType(types: !15415)
!15415 = !{!2361, !2392}
!15416 = !{!15417, !15418, !15419, !15421}
!15417 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15413, file: !2466, line: 862, type: !2392)
!15418 = !DILocalVariable(name: "thread", scope: !15413, file: !2466, line: 864, type: !2361)
!15419 = !DILocalVariable(name: "__i", scope: !15420, file: !2466, line: 866, type: !14355)
!15420 = distinct !DILexicalBlock(scope: !15413, file: !2466, line: 866, column: 2)
!15421 = !DILocalVariable(name: "__key", scope: !15420, file: !2466, line: 866, type: !14355)
!15422 = !DILocation(line: 0, scope: !15413)
!15423 = !DILocation(line: 0, scope: !15420)
!15424 = !DILocation(line: 0, scope: !14363, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 866, column: 2, scope: !15420)
!15426 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15425)
!15428 = !DILocation(line: 0, scope: !14372, inlinedAt: !15427)
!15429 = !DILocation(line: 867, column: 12, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15431, file: !2466, line: 866, column: 26)
!15431 = distinct !DILexicalBlock(scope: !15420, file: !2466, line: 866, column: 2)
!15432 = !DILocation(line: 869, column: 14, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15430, file: !2466, line: 869, column: 7)
!15434 = !DILocation(line: 869, column: 7, scope: !15430)
!15435 = !DILocation(line: 870, column: 4, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15433, file: !2466, line: 869, column: 23)
!15437 = !DILocation(line: 871, column: 3, scope: !15436)
!15438 = !DILocation(line: 0, scope: !14390, inlinedAt: !15439)
!15439 = distinct !DILocation(line: 866, column: 2, scope: !15431)
!15440 = !DILocation(line: 0, scope: !14398, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15439)
!15442 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15441)
!15443 = !DILocation(line: 874, column: 2, scope: !15413)
!15444 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2466, file: !2466, line: 877, type: !15414, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15445)
!15445 = !{!15446, !15447, !15448, !15450}
!15446 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15444, file: !2466, line: 877, type: !2392)
!15447 = !DILocalVariable(name: "thread", scope: !15444, file: !2466, line: 879, type: !2361)
!15448 = !DILocalVariable(name: "__i", scope: !15449, file: !2466, line: 881, type: !14355)
!15449 = distinct !DILexicalBlock(scope: !15444, file: !2466, line: 881, column: 2)
!15450 = !DILocalVariable(name: "__key", scope: !15449, file: !2466, line: 881, type: !14355)
!15451 = !DILocation(line: 0, scope: !15444)
!15452 = !DILocation(line: 0, scope: !15449)
!15453 = !DILocation(line: 0, scope: !14363, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 881, column: 2, scope: !15449)
!15455 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15454)
!15457 = !DILocation(line: 0, scope: !14372, inlinedAt: !15456)
!15458 = !DILocation(line: 882, column: 12, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !2466, line: 881, column: 26)
!15460 = distinct !DILexicalBlock(scope: !15449, file: !2466, line: 881, column: 2)
!15461 = !DILocation(line: 884, column: 14, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15459, file: !2466, line: 884, column: 7)
!15463 = !DILocation(line: 884, column: 7, scope: !15459)
!15464 = !DILocation(line: 885, column: 4, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15462, file: !2466, line: 884, column: 23)
!15466 = !DILocation(line: 886, column: 10, scope: !15465)
!15467 = !DILocation(line: 887, column: 3, scope: !15465)
!15468 = !DILocation(line: 0, scope: !14390, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 881, column: 2, scope: !15460)
!15470 = !DILocation(line: 0, scope: !14398, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15469)
!15472 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15471)
!15473 = !DILocation(line: 890, column: 2, scope: !15444)
!15474 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2466, file: !2466, line: 893, type: !14321, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15475)
!15475 = !{!15476}
!15476 = !DILocalVariable(name: "thread", arg: 1, scope: !15474, file: !2466, line: 893, type: !2361)
!15477 = !DILocation(line: 0, scope: !15474)
!15478 = !DILocation(line: 0, scope: !15330, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 895, column: 2, scope: !15474)
!15480 = !DILocation(line: 0, scope: !15334, inlinedAt: !15479)
!15481 = !DILocation(line: 0, scope: !14363, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 788, column: 2, scope: !15334, inlinedAt: !15479)
!15483 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15482)
!15485 = !DILocation(line: 0, scope: !14372, inlinedAt: !15484)
!15486 = !DILocation(line: 789, column: 3, scope: !15344, inlinedAt: !15479)
!15487 = !DILocation(line: 0, scope: !14390, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 788, column: 2, scope: !15345, inlinedAt: !15479)
!15489 = !DILocation(line: 0, scope: !14398, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15488)
!15491 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15490)
!15492 = !DILocation(line: 896, column: 8, scope: !15474)
!15493 = !DILocation(line: 897, column: 1, scope: !15474)
!15494 = distinct !DISubprogram(name: "z_set_prio", scope: !2466, file: !2466, line: 902, type: !14683, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15495)
!15495 = !{!15496, !15497, !15498, !15499, !15501}
!15496 = !DILocalVariable(name: "thread", arg: 1, scope: !15494, file: !2466, line: 902, type: !2361)
!15497 = !DILocalVariable(name: "prio", arg: 2, scope: !15494, file: !2466, line: 902, type: !103)
!15498 = !DILocalVariable(name: "need_sched", scope: !15494, file: !2466, line: 904, type: !170)
!15499 = !DILocalVariable(name: "__i", scope: !15500, file: !2466, line: 906, type: !14355)
!15500 = distinct !DILexicalBlock(scope: !15494, file: !2466, line: 906, column: 2)
!15501 = !DILocalVariable(name: "__key", scope: !15500, file: !2466, line: 906, type: !14355)
!15502 = !DILocation(line: 0, scope: !15494)
!15503 = !DILocation(line: 0, scope: !15500)
!15504 = !DILocation(line: 0, scope: !14363, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 906, column: 2, scope: !15500)
!15506 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15505)
!15508 = !DILocation(line: 0, scope: !14372, inlinedAt: !15507)
!15509 = !DILocation(line: 907, column: 16, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !2466, line: 906, column: 26)
!15511 = distinct !DILexicalBlock(scope: !15500, file: !2466, line: 906, column: 2)
!15512 = !DILocation(line: 909, column: 7, scope: !15510)
!15513 = !DILocation(line: 0, scope: !14532, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 912, column: 5, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15516, file: !2466, line: 911, column: 63)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !2466, line: 911, column: 8)
!15517 = distinct !DILexicalBlock(scope: !15518, file: !2466, line: 909, column: 19)
!15518 = distinct !DILexicalBlock(scope: !15510, file: !2466, line: 909, column: 7)
!15519 = !DILocation(line: 266, column: 28, scope: !14532, inlinedAt: !15514)
!15520 = !DILocation(line: 0, scope: !14540, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 268, column: 3, scope: !14544, inlinedAt: !15514)
!15522 = !DILocation(line: 234, column: 2, scope: !14540, inlinedAt: !15521)
!15523 = !DILocation(line: 913, column: 23, scope: !15515)
!15524 = !DILocation(line: 0, scope: !14549, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 914, column: 5, scope: !15515)
!15526 = !DILocation(line: 252, column: 28, scope: !14549, inlinedAt: !15525)
!15527 = !DILocation(line: 0, scope: !14556, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 254, column: 3, scope: !14560, inlinedAt: !15525)
!15529 = !DILocation(line: 0, scope: !14563, inlinedAt: !15530)
!15530 = distinct !DILocation(line: 229, column: 2, scope: !14556, inlinedAt: !15528)
!15531 = !DILocation(line: 188, column: 2, scope: !14573, inlinedAt: !15530)
!15532 = !DILocation(line: 188, column: 2, scope: !14575, inlinedAt: !15530)
!15533 = !DILocation(line: 0, scope: !14573, inlinedAt: !15530)
!15534 = !DILocation(line: 189, column: 7, scope: !14578, inlinedAt: !15530)
!15535 = !DILocation(line: 189, column: 35, scope: !14578, inlinedAt: !15530)
!15536 = !DILocation(line: 189, column: 7, scope: !14579, inlinedAt: !15530)
!15537 = !DILocation(line: 190, column: 4, scope: !14583, inlinedAt: !15530)
!15538 = !DILocation(line: 192, column: 4, scope: !14583, inlinedAt: !15530)
!15539 = distinct !{!15539, !15531, !15540}
!15540 = !DILocation(line: 194, column: 2, scope: !14573, inlinedAt: !15530)
!15541 = !DILocation(line: 196, column: 2, scope: !14563, inlinedAt: !15530)
!15542 = !DILocation(line: 197, column: 1, scope: !14563, inlinedAt: !15530)
!15543 = !DILocation(line: 918, column: 4, scope: !15517)
!15544 = !DILocation(line: 919, column: 3, scope: !15517)
!15545 = !DILocation(line: 920, column: 22, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15518, file: !2466, line: 919, column: 10)
!15547 = !DILocation(line: 0, scope: !14390, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 906, column: 2, scope: !15511)
!15549 = !DILocation(line: 0, scope: !14398, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15548)
!15551 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15550)
!15552 = !DILocation(line: 926, column: 2, scope: !15494)
!15553 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2466, file: !2466, line: 929, type: !15554, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15556)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{null, !2361, !103}
!15556 = !{!15557, !15558, !15559}
!15557 = !DILocalVariable(name: "thread", arg: 1, scope: !15553, file: !2466, line: 929, type: !2361)
!15558 = !DILocalVariable(name: "prio", arg: 2, scope: !15553, file: !2466, line: 929, type: !103)
!15559 = !DILocalVariable(name: "need_sched", scope: !15553, file: !2466, line: 931, type: !170)
!15560 = !DILocation(line: 0, scope: !15553)
!15561 = !DILocation(line: 931, column: 20, scope: !15553)
!15562 = !DILocation(line: 935, column: 17, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15553, file: !2466, line: 935, column: 6)
!15564 = !DILocation(line: 935, column: 20, scope: !15563)
!15565 = !DILocation(line: 935, column: 35, scope: !15563)
!15566 = !DILocation(line: 935, column: 48, scope: !15563)
!15567 = !DILocation(line: 935, column: 6, scope: !15553)
!15568 = !DILocation(line: 936, column: 3, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15563, file: !2466, line: 935, column: 55)
!15570 = !DILocation(line: 937, column: 2, scope: !15569)
!15571 = !DILocation(line: 938, column: 1, scope: !15553)
!15572 = distinct !DISubprogram(name: "k_sched_lock", scope: !2466, file: !2466, line: 987, type: !3154, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15573)
!15573 = !{!15574, !15576}
!15574 = !DILocalVariable(name: "__i", scope: !15575, file: !2466, line: 989, type: !14355)
!15575 = distinct !DILexicalBlock(scope: !15572, file: !2466, line: 989, column: 2)
!15576 = !DILocalVariable(name: "__key", scope: !15575, file: !2466, line: 989, type: !14355)
!15577 = !DILocation(line: 0, scope: !15575)
!15578 = !DILocation(line: 0, scope: !14363, inlinedAt: !15579)
!15579 = distinct !DILocation(line: 989, column: 2, scope: !15575)
!15580 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15581)
!15581 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15579)
!15582 = !DILocation(line: 0, scope: !14372, inlinedAt: !15581)
!15583 = !DILocation(line: 992, column: 3, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !2466, line: 989, column: 26)
!15585 = distinct !DILexicalBlock(scope: !15575, file: !2466, line: 989, column: 2)
!15586 = !DILocation(line: 0, scope: !14390, inlinedAt: !15587)
!15587 = distinct !DILocation(line: 989, column: 2, scope: !15585)
!15588 = !DILocation(line: 0, scope: !14398, inlinedAt: !15589)
!15589 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15587)
!15590 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15589)
!15591 = !DILocation(line: 994, column: 1, scope: !15572)
!15592 = distinct !DISubprogram(name: "z_sched_lock", scope: !12868, file: !12868, line: 251, type: !3154, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15593 = !DILocation(line: 256, column: 4, scope: !15592)
!15594 = !DILocation(line: 256, column: 19, scope: !15592)
!15595 = !DILocation(line: 256, column: 2, scope: !15592)
!15596 = !DILocation(line: 258, column: 2, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15592, file: !12868, line: 258, column: 2)
!15598 = !{i64 2152340554}
!15599 = !DILocation(line: 259, column: 1, scope: !15592)
!15600 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2466, file: !2466, line: 996, type: !3154, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15601)
!15601 = !{!15602, !15604}
!15602 = !DILocalVariable(name: "__i", scope: !15603, file: !2466, line: 998, type: !14355)
!15603 = distinct !DILexicalBlock(scope: !15600, file: !2466, line: 998, column: 2)
!15604 = !DILocalVariable(name: "__key", scope: !15603, file: !2466, line: 998, type: !14355)
!15605 = !DILocation(line: 0, scope: !15603)
!15606 = !DILocation(line: 0, scope: !14363, inlinedAt: !15607)
!15607 = distinct !DILocation(line: 998, column: 2, scope: !15603)
!15608 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15609)
!15609 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15607)
!15610 = !DILocation(line: 0, scope: !14372, inlinedAt: !15609)
!15611 = !DILocation(line: 1002, column: 5, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15613, file: !2466, line: 998, column: 26)
!15613 = distinct !DILexicalBlock(scope: !15603, file: !2466, line: 998, column: 2)
!15614 = !DILocation(line: 1002, column: 20, scope: !15612)
!15615 = !DILocation(line: 1002, column: 3, scope: !15612)
!15616 = !DILocation(line: 1003, column: 3, scope: !15612)
!15617 = !DILocation(line: 0, scope: !14390, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 998, column: 2, scope: !15613)
!15619 = !DILocation(line: 0, scope: !14398, inlinedAt: !15620)
!15620 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !15618)
!15621 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !15620)
!15622 = !DILocation(line: 1011, column: 2, scope: !15600)
!15623 = !DILocation(line: 1012, column: 1, scope: !15600)
!15624 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2466, file: !2466, line: 1014, type: !14671, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15625 = !DILocation(line: 1028, column: 25, scope: !15624)
!15626 = !DILocation(line: 1028, column: 2, scope: !15624)
!15627 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2466, file: !2466, line: 1155, type: !15628, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15630)
!15628 = !DISubroutineType(types: !15629)
!15629 = !{!170, !2390, !2390}
!15630 = !{!15631, !15632, !15633, !15634, !15635}
!15631 = !DILocalVariable(name: "a", arg: 1, scope: !15627, file: !2466, line: 1155, type: !2390)
!15632 = !DILocalVariable(name: "b", arg: 2, scope: !15627, file: !2466, line: 1155, type: !2390)
!15633 = !DILocalVariable(name: "thread_a", scope: !15627, file: !2466, line: 1157, type: !2361)
!15634 = !DILocalVariable(name: "thread_b", scope: !15627, file: !2466, line: 1157, type: !2361)
!15635 = !DILocalVariable(name: "cmp", scope: !15627, file: !2466, line: 1158, type: !834)
!15636 = !DILocation(line: 0, scope: !15627)
!15637 = !DILocation(line: 1160, column: 13, scope: !15627)
!15638 = !DILocation(line: 1161, column: 13, scope: !15627)
!15639 = !DILocation(line: 1163, column: 8, scope: !15627)
!15640 = !DILocation(line: 1165, column: 10, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15627, file: !2466, line: 1165, column: 6)
!15642 = !DILocation(line: 1165, column: 6, scope: !15627)
!15643 = !DILocation(line: 1167, column: 17, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15641, file: !2466, line: 1167, column: 13)
!15645 = !DILocation(line: 1167, column: 13, scope: !15641)
!15646 = !DILocation(line: 1170, column: 25, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15644, file: !2466, line: 1169, column: 9)
!15648 = !DILocation(line: 1170, column: 52, scope: !15647)
!15649 = !DILocation(line: 1170, column: 35, scope: !15647)
!15650 = !DILocation(line: 1170, column: 3, scope: !15647)
!15651 = !DILocation(line: 0, scope: !15641)
!15652 = !DILocation(line: 1173, column: 1, scope: !15627)
!15653 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2466, file: !2466, line: 1175, type: !15654, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15669)
!15654 = !DISubroutineType(types: !15655)
!15655 = !{null, !15656, !2361}
!15656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15657, size: 32)
!15657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15658, line: 37, size: 128, elements: !15659)
!15658 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15659 = !{!15660, !15668}
!15660 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15657, file: !15658, line: 38, baseType: !15661, size: 96)
!15661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !417, line: 83, size: 96, elements: !15662)
!15662 = !{!15663, !15664, !15667}
!15663 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15661, file: !417, line: 84, baseType: !2390, size: 32)
!15664 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15661, file: !417, line: 85, baseType: !15665, size: 32, offset: 32)
!15665 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !417, line: 81, baseType: !15666)
!15666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15628, size: 32)
!15667 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15661, file: !417, line: 86, baseType: !103, size: 32, offset: 64)
!15668 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15657, file: !15658, line: 39, baseType: !103, size: 32, offset: 96)
!15669 = !{!15670, !15671, !15672, !15673, !15682}
!15670 = !DILocalVariable(name: "pq", arg: 1, scope: !15653, file: !2466, line: 1175, type: !15656)
!15671 = !DILocalVariable(name: "thread", arg: 2, scope: !15653, file: !2466, line: 1175, type: !2361)
!15672 = !DILocalVariable(name: "t", scope: !15653, file: !2466, line: 1177, type: !2361)
!15673 = !DILocalVariable(name: "__f", scope: !15674, file: !2466, line: 1190, type: !15677)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !2466, line: 1190, column: 3)
!15675 = distinct !DILexicalBlock(scope: !15676, file: !2466, line: 1189, column: 27)
!15676 = distinct !DILexicalBlock(scope: !15653, file: !2466, line: 1189, column: 6)
!15677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !417, line: 155, size: 96, elements: !15678)
!15678 = !{!15679, !15680, !15681}
!15679 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15677, file: !417, line: 156, baseType: !2461, size: 32)
!15680 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15677, file: !417, line: 157, baseType: !280, size: 32, offset: 32)
!15681 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15677, file: !417, line: 158, baseType: !834, size: 32, offset: 64)
!15682 = !DILocalVariable(name: "n", scope: !15683, file: !2466, line: 1190, type: !2390)
!15683 = distinct !DILexicalBlock(scope: !15684, file: !2466, line: 1190, column: 3)
!15684 = distinct !DILexicalBlock(scope: !15674, file: !2466, line: 1190, column: 3)
!15685 = !DILocation(line: 0, scope: !15653)
!15686 = !DILocation(line: 1181, column: 31, scope: !15653)
!15687 = !DILocation(line: 1181, column: 45, scope: !15653)
!15688 = !DILocation(line: 1181, column: 15, scope: !15653)
!15689 = !DILocation(line: 1181, column: 25, scope: !15653)
!15690 = !DILocation(line: 1189, column: 11, scope: !15676)
!15691 = !DILocation(line: 1189, column: 7, scope: !15676)
!15692 = !DILocation(line: 1189, column: 6, scope: !15653)
!15693 = !DILocation(line: 1190, column: 3, scope: !15674)
!15694 = !DILocation(line: 1190, column: 3, scope: !15683)
!15695 = !DILocation(line: 0, scope: !15683)
!15696 = !DILocation(line: 1190, column: 3, scope: !15684)
!15697 = !DILocation(line: 1193, column: 2, scope: !15675)
!15698 = !DILocation(line: 1191, column: 42, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15684, file: !2466, line: 1190, column: 54)
!15700 = !DILocation(line: 1191, column: 12, scope: !15699)
!15701 = !DILocation(line: 1191, column: 22, scope: !15699)
!15702 = distinct !{!15702, !15693, !15703}
!15703 = !DILocation(line: 1192, column: 3, scope: !15674)
!15704 = !DILocation(line: 1195, column: 17, scope: !15653)
!15705 = !DILocation(line: 1195, column: 37, scope: !15653)
!15706 = !DILocation(line: 1195, column: 2, scope: !15653)
!15707 = !DILocation(line: 1196, column: 1, scope: !15653)
!15708 = !DISubprogram(name: "z_rb_foreach_next", scope: !417, file: !417, line: 176, type: !15709, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!15709 = !DISubroutineType(types: !15710)
!15710 = !{!2390, !15711, !15712}
!15711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15661, size: 32)
!15712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15677, size: 32)
!15713 = !DISubprogram(name: "rb_insert", scope: !417, file: !417, line: 105, type: !15714, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{null, !15711, !2390}
!15716 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2466, file: !2466, line: 1198, type: !15654, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15717)
!15717 = !{!15718, !15719}
!15718 = !DILocalVariable(name: "pq", arg: 1, scope: !15716, file: !2466, line: 1198, type: !15656)
!15719 = !DILocalVariable(name: "thread", arg: 2, scope: !15716, file: !2466, line: 1198, type: !2361)
!15720 = !DILocation(line: 0, scope: !15716)
!15721 = !DILocation(line: 1202, column: 17, scope: !15716)
!15722 = !DILocation(line: 1202, column: 37, scope: !15716)
!15723 = !DILocation(line: 1202, column: 2, scope: !15716)
!15724 = !DILocation(line: 1204, column: 16, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15716, file: !2466, line: 1204, column: 6)
!15726 = !DILocation(line: 1204, column: 7, scope: !15725)
!15727 = !DILocation(line: 1204, column: 6, scope: !15716)
!15728 = !DILocation(line: 1205, column: 7, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15725, file: !2466, line: 1204, column: 22)
!15730 = !DILocation(line: 1205, column: 22, scope: !15729)
!15731 = !DILocation(line: 1206, column: 2, scope: !15729)
!15732 = !DILocation(line: 1207, column: 1, scope: !15716)
!15733 = !DISubprogram(name: "rb_remove", scope: !417, file: !417, line: 110, type: !15714, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!15734 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2466, file: !2466, line: 1209, type: !15735, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15737)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{!2361, !15656}
!15737 = !{!15738, !15739, !15740}
!15738 = !DILocalVariable(name: "pq", arg: 1, scope: !15734, file: !2466, line: 1209, type: !15656)
!15739 = !DILocalVariable(name: "thread", scope: !15734, file: !2466, line: 1211, type: !2361)
!15740 = !DILocalVariable(name: "n", scope: !15734, file: !2466, line: 1212, type: !2390)
!15741 = !DILocation(line: 0, scope: !15734)
!15742 = !DILocation(line: 1212, column: 37, scope: !15734)
!15743 = !DILocation(line: 1212, column: 21, scope: !15734)
!15744 = !DILocation(line: 1217, column: 2, scope: !15734)
!15745 = distinct !DISubprogram(name: "rb_get_min", scope: !417, file: !417, line: 115, type: !15746, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15748)
!15746 = !DISubroutineType(types: !15747)
!15747 = !{!2390, !15711}
!15748 = !{!15749}
!15749 = !DILocalVariable(name: "tree", arg: 1, scope: !15745, file: !417, line: 115, type: !15711)
!15750 = !DILocation(line: 0, scope: !15745)
!15751 = !DILocation(line: 117, column: 9, scope: !15745)
!15752 = !DILocation(line: 117, column: 2, scope: !15745)
!15753 = !DISubprogram(name: "z_rb_get_minmax", scope: !417, file: !417, line: 100, type: !15754, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !330)
!15754 = !DISubroutineType(types: !15755)
!15755 = !{!2390, !15711, !167}
!15756 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2466, file: !2466, line: 1246, type: !15757, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15765)
!15757 = !DISubroutineType(types: !15758)
!15758 = !{!2361, !15759}
!15759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15760, size: 32)
!15760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15658, line: 53, size: 2080, elements: !15761)
!15761 = !{!15762, !15764}
!15762 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15760, file: !15658, line: 54, baseType: !15763, size: 2048)
!15763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2397, size: 2048, elements: !931)
!15764 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15760, file: !15658, line: 55, baseType: !32, size: 32, offset: 2048)
!15765 = !{!15766, !15767, !15768, !15769}
!15766 = !DILocalVariable(name: "pq", arg: 1, scope: !15756, file: !2466, line: 1246, type: !15759)
!15767 = !DILocalVariable(name: "thread", scope: !15756, file: !2466, line: 1252, type: !2361)
!15768 = !DILocalVariable(name: "l", scope: !15756, file: !2466, line: 1253, type: !14566)
!15769 = !DILocalVariable(name: "n", scope: !15756, file: !2466, line: 1254, type: !2462)
!15770 = !DILocation(line: 0, scope: !15756)
!15771 = !DILocation(line: 1248, column: 11, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15756, file: !2466, line: 1248, column: 6)
!15773 = !DILocation(line: 1248, column: 7, scope: !15772)
!15774 = !DILocation(line: 1248, column: 6, scope: !15756)
!15775 = !DILocation(line: 1253, column: 31, scope: !15756)
!15776 = !DILocation(line: 1253, column: 20, scope: !15756)
!15777 = !DILocation(line: 1254, column: 19, scope: !15756)
!15778 = !DILocation(line: 1260, column: 1, scope: !15756)
!15779 = distinct !DISubprogram(name: "z_unpend_all", scope: !2466, file: !2466, line: 1262, type: !15780, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15782)
!15780 = !DISubroutineType(types: !15781)
!15781 = !{!103, !2392}
!15782 = !{!15783, !15784, !15785}
!15783 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15779, file: !2466, line: 1262, type: !2392)
!15784 = !DILocalVariable(name: "need_sched", scope: !15779, file: !2466, line: 1264, type: !103)
!15785 = !DILocalVariable(name: "thread", scope: !15779, file: !2466, line: 1265, type: !2361)
!15786 = !DILocation(line: 0, scope: !15779)
!15787 = !DILocation(line: 1267, column: 19, scope: !15779)
!15788 = !DILocation(line: 1267, column: 41, scope: !15779)
!15789 = !DILocation(line: 1267, column: 2, scope: !15779)
!15790 = !DILocation(line: 1268, column: 3, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15779, file: !2466, line: 1267, column: 50)
!15792 = !DILocation(line: 1269, column: 3, scope: !15791)
!15793 = distinct !{!15793, !15789, !15794}
!15794 = !DILocation(line: 1271, column: 2, scope: !15779)
!15795 = !DILocation(line: 1273, column: 2, scope: !15779)
!15796 = distinct !DISubprogram(name: "z_waitq_head", scope: !13192, file: !13192, line: 52, type: !15414, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15797)
!15797 = !{!15798}
!15798 = !DILocalVariable(name: "w", arg: 1, scope: !15796, file: !13192, line: 52, type: !2392)
!15799 = !DILocation(line: 0, scope: !15796)
!15800 = !DILocation(line: 54, column: 52, scope: !15796)
!15801 = !DILocation(line: 54, column: 28, scope: !15796)
!15802 = !DILocation(line: 54, column: 9, scope: !15796)
!15803 = !DILocation(line: 54, column: 2, scope: !15796)
!15804 = distinct !DISubprogram(name: "init_ready_q", scope: !2466, file: !2466, line: 1276, type: !15805, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15812)
!15805 = !DISubroutineType(types: !15806)
!15806 = !{null, !15807}
!15807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15808, size: 32)
!15808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !333, line: 83, size: 96, elements: !15809)
!15809 = !{!15810, !15811}
!15810 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15808, file: !333, line: 86, baseType: !2361, size: 32)
!15811 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15808, file: !333, line: 90, baseType: !2397, size: 64, offset: 32)
!15812 = !{!15813}
!15813 = !DILocalVariable(name: "rq", arg: 1, scope: !15804, file: !2466, line: 1276, type: !15807)
!15814 = !DILocation(line: 0, scope: !15804)
!15815 = !DILocation(line: 1289, column: 22, scope: !15804)
!15816 = !DILocation(line: 1289, column: 2, scope: !15804)
!15817 = !DILocation(line: 1291, column: 1, scope: !15804)
!15818 = distinct !DISubprogram(name: "sys_dlist_init", scope: !338, file: !338, line: 197, type: !15819, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15821)
!15819 = !DISubroutineType(types: !15820)
!15820 = !{null, !14566}
!15821 = !{!15822}
!15822 = !DILocalVariable(name: "list", arg: 1, scope: !15818, file: !338, line: 197, type: !14566)
!15823 = !DILocation(line: 0, scope: !15818)
!15824 = !DILocation(line: 199, column: 8, scope: !15818)
!15825 = !DILocation(line: 199, column: 13, scope: !15818)
!15826 = !DILocation(line: 200, column: 8, scope: !15818)
!15827 = !DILocation(line: 200, column: 13, scope: !15818)
!15828 = !DILocation(line: 201, column: 1, scope: !15818)
!15829 = distinct !DISubprogram(name: "z_sched_init", scope: !2466, file: !2466, line: 1293, type: !3154, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15830 = !DILocation(line: 1302, column: 2, scope: !15829)
!15831 = !DILocation(line: 1306, column: 2, scope: !15829)
!15832 = !DILocation(line: 1309, column: 1, scope: !15829)
!15833 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2466, file: !2466, line: 1311, type: !15834, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15837)
!15834 = !DISubroutineType(types: !15835)
!15835 = !{!103, !15836}
!15836 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !392, line: 347, baseType: !2361)
!15837 = !{!15838}
!15838 = !DILocalVariable(name: "thread", arg: 1, scope: !15833, file: !2466, line: 1311, type: !15836)
!15839 = !DILocation(line: 0, scope: !15833)
!15840 = !DILocation(line: 1313, column: 22, scope: !15833)
!15841 = !DILocation(line: 1313, column: 9, scope: !15833)
!15842 = !DILocation(line: 1313, column: 2, scope: !15833)
!15843 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2466, file: !2466, line: 1325, type: !15844, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15846)
!15844 = !DISubroutineType(types: !15845)
!15845 = !{null, !15836, !103}
!15846 = !{!15847, !15848, !15849}
!15847 = !DILocalVariable(name: "thread", arg: 1, scope: !15843, file: !2466, line: 1325, type: !15836)
!15848 = !DILocalVariable(name: "prio", arg: 2, scope: !15843, file: !2466, line: 1325, type: !103)
!15849 = !DILocalVariable(name: "th", scope: !15843, file: !2466, line: 1334, type: !2361)
!15850 = !DILocation(line: 0, scope: !15843)
!15851 = !DILocation(line: 1336, column: 2, scope: !15843)
!15852 = !DILocation(line: 1337, column: 1, scope: !15843)
!15853 = distinct !DISubprogram(name: "k_can_yield", scope: !2466, file: !2466, line: 1384, type: !6684, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15854 = !DILocation(line: 1386, column: 11, scope: !15853)
!15855 = !DILocation(line: 1386, column: 29, scope: !15853)
!15856 = !DILocation(line: 1386, column: 32, scope: !15853)
!15857 = !DILocation(line: 1386, column: 46, scope: !15853)
!15858 = !DILocation(line: 1387, column: 28, scope: !15853)
!15859 = !DILocation(line: 1387, column: 4, scope: !15853)
!15860 = !DILocation(line: 1386, column: 2, scope: !15853)
!15861 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !309, file: !309, line: 989, type: !6684, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15862 = !DILocation(line: 993, column: 10, scope: !15861)
!15863 = !DILocation(line: 993, column: 2, scope: !15861)
!15864 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2466, file: !2466, line: 1390, type: !3154, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15865)
!15865 = !{!15866}
!15866 = !DILocalVariable(name: "key", scope: !15864, file: !2466, line: 1396, type: !14355)
!15867 = !DILocation(line: 0, scope: !14363, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 1396, column: 25, scope: !15864)
!15869 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15868)
!15871 = !DILocation(line: 0, scope: !14372, inlinedAt: !15870)
!15872 = !DILocation(line: 0, scope: !15864)
!15873 = !DILocation(line: 1400, column: 18, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15875, file: !2466, line: 1399, column: 36)
!15875 = distinct !DILexicalBlock(scope: !15864, file: !2466, line: 1398, column: 6)
!15876 = !DILocation(line: 0, scope: !14532, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 1400, column: 3, scope: !15874)
!15878 = !DILocation(line: 266, column: 15, scope: !14532, inlinedAt: !15877)
!15879 = !DILocation(line: 266, column: 28, scope: !14532, inlinedAt: !15877)
!15880 = !DILocation(line: 0, scope: !14540, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 268, column: 3, scope: !14544, inlinedAt: !15877)
!15882 = !DILocation(line: 234, column: 2, scope: !14540, inlinedAt: !15881)
!15883 = !DILocation(line: 1402, column: 15, scope: !15864)
!15884 = !DILocation(line: 0, scope: !14549, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 1402, column: 2, scope: !15864)
!15886 = !DILocation(line: 252, column: 15, scope: !14549, inlinedAt: !15885)
!15887 = !DILocation(line: 252, column: 28, scope: !14549, inlinedAt: !15885)
!15888 = !DILocation(line: 0, scope: !14556, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 254, column: 3, scope: !14560, inlinedAt: !15885)
!15890 = !DILocation(line: 0, scope: !14563, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 229, column: 2, scope: !14556, inlinedAt: !15889)
!15892 = !DILocation(line: 188, column: 2, scope: !14573, inlinedAt: !15891)
!15893 = !DILocation(line: 188, column: 2, scope: !14575, inlinedAt: !15891)
!15894 = !DILocation(line: 0, scope: !14573, inlinedAt: !15891)
!15895 = !DILocation(line: 189, column: 7, scope: !14578, inlinedAt: !15891)
!15896 = !DILocation(line: 189, column: 35, scope: !14578, inlinedAt: !15891)
!15897 = !DILocation(line: 189, column: 7, scope: !14579, inlinedAt: !15891)
!15898 = !DILocation(line: 191, column: 21, scope: !14583, inlinedAt: !15891)
!15899 = !DILocation(line: 190, column: 4, scope: !14583, inlinedAt: !15891)
!15900 = !DILocation(line: 192, column: 4, scope: !14583, inlinedAt: !15891)
!15901 = distinct !{!15901, !15892, !15902}
!15902 = !DILocation(line: 194, column: 2, scope: !14573, inlinedAt: !15891)
!15903 = !DILocation(line: 196, column: 37, scope: !14563, inlinedAt: !15891)
!15904 = !DILocation(line: 196, column: 2, scope: !14563, inlinedAt: !15891)
!15905 = !DILocation(line: 197, column: 1, scope: !14563, inlinedAt: !15891)
!15906 = !DILocation(line: 1403, column: 2, scope: !15864)
!15907 = !DILocation(line: 0, scope: !14974, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 1404, column: 2, scope: !15864)
!15909 = !DILocation(line: 196, column: 9, scope: !14974, inlinedAt: !15908)
!15910 = !DILocation(line: 1405, column: 1, scope: !15864)
!15911 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2466, file: !2466, line: 1459, type: !15912, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15914)
!15912 = !DISubroutineType(types: !15913)
!15913 = !{!834, !15154}
!15914 = !{!15915, !15916, !15917}
!15915 = !DILocalVariable(name: "timeout", arg: 1, scope: !15911, file: !2466, line: 1459, type: !15154)
!15916 = !DILocalVariable(name: "ticks", scope: !15911, file: !2466, line: 1461, type: !213)
!15917 = !DILocalVariable(name: "ret", scope: !15911, file: !2466, line: 1480, type: !834)
!15918 = !DILocation(line: 0, scope: !15911)
!15919 = !DILocation(line: 1468, column: 6, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15911, file: !2466, line: 1468, column: 6)
!15921 = !DILocation(line: 1468, column: 6, scope: !15911)
!15922 = !DILocation(line: 1469, column: 20, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15920, file: !2466, line: 1468, column: 40)
!15924 = !DILocation(line: 1469, column: 3, scope: !15923)
!15925 = !DILocation(line: 1473, column: 3, scope: !15923)
!15926 = !DILocation(line: 1478, column: 10, scope: !15911)
!15927 = !DILocation(line: 1480, column: 16, scope: !15911)
!15928 = !DILocation(line: 1485, column: 1, scope: !15911)
!15929 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3590, file: !3590, line: 310, type: !15930, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15932)
!15930 = !DISubroutineType(types: !15931)
!15931 = !{null, !15836}
!15932 = !{!15933}
!15933 = !DILocalVariable(name: "thread", arg: 1, scope: !15929, file: !3590, line: 310, type: !15836)
!15934 = !DILocation(line: 0, scope: !15929)
!15935 = !DILocation(line: 319, column: 2, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15929, file: !3590, line: 319, column: 2)
!15937 = !{i64 2152258943}
!15938 = !DILocation(line: 320, column: 2, scope: !15929)
!15939 = !DILocation(line: 321, column: 1, scope: !15929)
!15940 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2466, file: !2466, line: 1415, type: !15941, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15943)
!15941 = !DISubroutineType(types: !15942)
!15942 = !{!834, !213}
!15943 = !{!15944, !15945, !15946, !15947}
!15944 = !DILocalVariable(name: "ticks", arg: 1, scope: !15940, file: !2466, line: 1415, type: !213)
!15945 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15940, file: !2466, line: 1418, type: !121)
!15946 = !DILocalVariable(name: "timeout", scope: !15940, file: !2466, line: 1430, type: !15154)
!15947 = !DILocalVariable(name: "key", scope: !15940, file: !2466, line: 1437, type: !14355)
!15948 = !DILocation(line: 0, scope: !15940)
!15949 = !DILocation(line: 1425, column: 12, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15940, file: !2466, line: 1425, column: 6)
!15951 = !DILocation(line: 1425, column: 6, scope: !15940)
!15952 = !DILocation(line: 1426, column: 3, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15950, file: !2466, line: 1425, column: 18)
!15954 = !DILocation(line: 1427, column: 3, scope: !15953)
!15955 = !DILocation(line: 1431, column: 24, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15940, file: !2466, line: 1431, column: 6)
!15957 = !DILocation(line: 1431, column: 6, scope: !15940)
!15958 = !DILocation(line: 1432, column: 35, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15956, file: !2466, line: 1431, column: 30)
!15960 = !DILocation(line: 1432, column: 27, scope: !15959)
!15961 = !DILocation(line: 1433, column: 2, scope: !15959)
!15962 = !DILocation(line: 1434, column: 27, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15956, file: !2466, line: 1433, column: 9)
!15964 = !DILocation(line: 0, scope: !15956)
!15965 = !DILocation(line: 0, scope: !14363, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 1437, column: 25, scope: !15940)
!15967 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !15966)
!15969 = !DILocation(line: 0, scope: !14372, inlinedAt: !15968)
!15970 = !DILocation(line: 1440, column: 20, scope: !15940)
!15971 = !DILocation(line: 1440, column: 18, scope: !15940)
!15972 = !DILocation(line: 1442, column: 2, scope: !15940)
!15973 = !DILocation(line: 1443, column: 23, scope: !15940)
!15974 = !DILocation(line: 1443, column: 2, scope: !15940)
!15975 = !DILocation(line: 1444, column: 29, scope: !15940)
!15976 = !DILocation(line: 1444, column: 2, scope: !15940)
!15977 = !DILocation(line: 0, scope: !14974, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 1446, column: 8, scope: !15940)
!15979 = !DILocation(line: 196, column: 9, scope: !14974, inlinedAt: !15978)
!15980 = !DILocation(line: 1450, column: 10, scope: !15940)
!15981 = !DILocation(line: 1450, column: 45, scope: !15940)
!15982 = !DILocation(line: 1450, column: 43, scope: !15940)
!15983 = !DILocation(line: 1451, column: 6, scope: !15940)
!15984 = !DILocation(line: 1457, column: 1, scope: !15940)
!15985 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13427, file: !13427, line: 1103, type: !13428, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !15986)
!15986 = !{!15987}
!15987 = !DILocalVariable(name: "t", arg: 1, scope: !15985, file: !13427, line: 1103, type: !2340)
!15988 = !DILocation(line: 0, scope: !15985)
!15989 = !DILocation(line: 0, scope: !14410, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 1106, column: 9, scope: !15985)
!15991 = !DILocation(line: 139, column: 13, scope: !15992, inlinedAt: !15990)
!15992 = distinct !DILexicalBlock(scope: !15993, file: !13427, line: 138, column: 10)
!15993 = distinct !DILexicalBlock(scope: !15994, file: !13427, line: 136, column: 7)
!15994 = distinct !DILexicalBlock(scope: !14431, file: !13427, line: 134, column: 17)
!15995 = !DILocation(line: 1106, column: 2, scope: !15985)
!15996 = distinct !DISubprogram(name: "k_yield", scope: !3590, file: !3590, line: 140, type: !3154, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!15997 = !DILocation(line: 148, column: 2, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15996, file: !3590, line: 148, column: 2)
!15999 = !{i64 2152258263}
!16000 = !DILocation(line: 149, column: 2, scope: !15996)
!16001 = !DILocation(line: 150, column: 1, scope: !15996)
!16002 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2466, file: !2466, line: 1495, type: !16003, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16005)
!16003 = !DISubroutineType(types: !16004)
!16004 = !{!834, !103}
!16005 = !{!16006, !16007}
!16006 = !DILocalVariable(name: "us", arg: 1, scope: !16002, file: !2466, line: 1495, type: !103)
!16007 = !DILocalVariable(name: "ticks", scope: !16002, file: !2466, line: 1497, type: !834)
!16008 = !DILocation(line: 0, scope: !16002)
!16009 = !DILocation(line: 1501, column: 31, scope: !16002)
!16010 = !DILocation(line: 1501, column: 10, scope: !16002)
!16011 = !DILocation(line: 1502, column: 23, scope: !16002)
!16012 = !DILocation(line: 1502, column: 10, scope: !16002)
!16013 = !DILocation(line: 1506, column: 31, scope: !16002)
!16014 = !DILocation(line: 1506, column: 9, scope: !16002)
!16015 = !DILocation(line: 1506, column: 2, scope: !16002)
!16016 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13427, file: !13427, line: 571, type: !13428, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16017)
!16017 = !{!16018}
!16018 = !DILocalVariable(name: "t", arg: 1, scope: !16016, file: !13427, line: 571, type: !2340)
!16019 = !DILocation(line: 0, scope: !16016)
!16020 = !DILocation(line: 0, scope: !14410, inlinedAt: !16021)
!16021 = distinct !DILocation(line: 574, column: 9, scope: !16016)
!16022 = !DILocation(line: 135, column: 5, scope: !15994, inlinedAt: !16021)
!16023 = !DILocation(line: 139, column: 13, scope: !15992, inlinedAt: !16021)
!16024 = !DILocation(line: 574, column: 2, scope: !16016)
!16025 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13427, file: !13427, line: 1187, type: !13428, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16026)
!16026 = !{!16027}
!16027 = !DILocalVariable(name: "t", arg: 1, scope: !16025, file: !13427, line: 1187, type: !2340)
!16028 = !DILocation(line: 0, scope: !16025)
!16029 = !DILocation(line: 0, scope: !14410, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 1190, column: 9, scope: !16025)
!16031 = !DILocation(line: 145, column: 13, scope: !16032, inlinedAt: !16030)
!16032 = distinct !DILexicalBlock(scope: !14428, file: !13427, line: 144, column: 10)
!16033 = !DILocation(line: 1190, column: 2, scope: !16025)
!16034 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2466, file: !2466, line: 1517, type: !15930, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16035)
!16035 = !{!16036}
!16036 = !DILocalVariable(name: "thread", arg: 1, scope: !16034, file: !2466, line: 1517, type: !15836)
!16037 = !DILocation(line: 0, scope: !16034)
!16038 = !DILocation(line: 1521, column: 6, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16034, file: !2466, line: 1521, column: 6)
!16040 = !DILocation(line: 1521, column: 6, scope: !16034)
!16041 = !DILocation(line: 1525, column: 6, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16034, file: !2466, line: 1525, column: 6)
!16043 = !DILocation(line: 1525, column: 37, scope: !16042)
!16044 = !DILocation(line: 1525, column: 6, scope: !16034)
!16045 = !DILocation(line: 1527, column: 20, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !16047, file: !2466, line: 1527, column: 7)
!16047 = distinct !DILexicalBlock(scope: !16042, file: !2466, line: 1525, column: 42)
!16048 = !DILocation(line: 1527, column: 33, scope: !16046)
!16049 = !DILocation(line: 1527, column: 7, scope: !16047)
!16050 = !DILocation(line: 1532, column: 2, scope: !16034)
!16051 = !DILocation(line: 1533, column: 2, scope: !16034)
!16052 = !DILocation(line: 1031, column: 3, scope: !15007, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 48, column: 10, scope: !15011, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 1537, column: 7, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16034, file: !2466, line: 1537, column: 6)
!16056 = !DILocation(line: 0, scope: !15007, inlinedAt: !16053)
!16057 = !DILocation(line: 48, column: 9, scope: !15011, inlinedAt: !16054)
!16058 = !DILocation(line: 1537, column: 6, scope: !16034)
!16059 = !DILocation(line: 1538, column: 3, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16055, file: !2466, line: 1537, column: 25)
!16061 = !DILocation(line: 1539, column: 2, scope: !16060)
!16062 = !DILocation(line: 1540, column: 1, scope: !16034)
!16063 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12868, file: !12868, line: 101, type: !14481, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16064)
!16064 = !{!16065}
!16065 = !DILocalVariable(name: "thread", arg: 1, scope: !16063, file: !12868, line: 101, type: !2361)
!16066 = !DILocation(line: 0, scope: !16063)
!16067 = !DILocation(line: 103, column: 23, scope: !16063)
!16068 = !DILocation(line: 103, column: 36, scope: !16063)
!16069 = !DILocation(line: 103, column: 55, scope: !16063)
!16070 = !DILocation(line: 103, column: 2, scope: !16063)
!16071 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2466, file: !2466, line: 1567, type: !16072, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16074)
!16072 = !DISubroutineType(types: !16073)
!16073 = !{!15836}
!16074 = !{!16075}
!16075 = !DILocalVariable(name: "ret", scope: !16071, file: !2466, line: 1577, type: !15836)
!16076 = !DILocation(line: 1577, column: 30, scope: !16071)
!16077 = !DILocation(line: 0, scope: !16071)
!16078 = !DILocation(line: 1582, column: 2, scope: !16071)
!16079 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2466, file: !2466, line: 1593, type: !6958, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !330)
!16080 = !DILocation(line: 1031, column: 3, scope: !15007, inlinedAt: !16081)
!16081 = distinct !DILocation(line: 48, column: 10, scope: !15011, inlinedAt: !16082)
!16082 = distinct !DILocation(line: 1595, column: 10, scope: !16079)
!16083 = !DILocation(line: 0, scope: !15007, inlinedAt: !16081)
!16084 = !DILocation(line: 48, column: 9, scope: !15011, inlinedAt: !16082)
!16085 = !DILocation(line: 1595, column: 27, scope: !16079)
!16086 = !DILocation(line: 1595, column: 41, scope: !16079)
!16087 = !DILocation(line: 1595, column: 30, scope: !16079)
!16088 = !DILocation(line: 1595, column: 2, scope: !16079)
!16089 = distinct !DISubprogram(name: "z_thread_abort", scope: !2466, file: !2466, line: 1725, type: !14321, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16090)
!16090 = !{!16091, !16092}
!16091 = !DILocalVariable(name: "thread", arg: 1, scope: !16089, file: !2466, line: 1725, type: !2361)
!16092 = !DILocalVariable(name: "key", scope: !16089, file: !2466, line: 1727, type: !14355)
!16093 = !DILocation(line: 0, scope: !16089)
!16094 = !DILocation(line: 0, scope: !14363, inlinedAt: !16095)
!16095 = distinct !DILocation(line: 1727, column: 25, scope: !16089)
!16096 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !16097)
!16097 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !16095)
!16098 = !DILocation(line: 0, scope: !14372, inlinedAt: !16097)
!16099 = !DILocation(line: 1729, column: 20, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16089, file: !2466, line: 1729, column: 6)
!16101 = !DILocation(line: 1729, column: 33, scope: !16100)
!16102 = !DILocation(line: 1729, column: 48, scope: !16100)
!16103 = !DILocation(line: 1729, column: 6, scope: !16089)
!16104 = !DILocation(line: 0, scope: !14390, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 1730, column: 3, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16100, file: !2466, line: 1729, column: 54)
!16107 = !DILocation(line: 0, scope: !14398, inlinedAt: !16108)
!16108 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !16105)
!16109 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !16108)
!16110 = !DILocation(line: 1732, column: 3, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16106, file: !2466, line: 1732, column: 3)
!16112 = !{i64 2152995673, i64 2152995689, i64 2152995715, i64 2152995743, i64 2152995763}
!16113 = !DILocation(line: 1733, column: 3, scope: !16106)
!16114 = !DILocation(line: 1736, column: 20, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16089, file: !2466, line: 1736, column: 6)
!16116 = !DILocation(line: 1736, column: 33, scope: !16115)
!16117 = !DILocation(line: 1736, column: 49, scope: !16115)
!16118 = !DILocation(line: 1736, column: 6, scope: !16089)
!16119 = !DILocation(line: 0, scope: !14390, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 1737, column: 3, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16115, file: !2466, line: 1736, column: 56)
!16122 = !DILocation(line: 0, scope: !14398, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !16120)
!16124 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !16123)
!16125 = !DILocation(line: 1738, column: 3, scope: !16121)
!16126 = !DILocation(line: 1775, column: 2, scope: !16089)
!16127 = !DILocation(line: 1776, column: 16, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16089, file: !2466, line: 1776, column: 6)
!16129 = !DILocation(line: 1776, column: 13, scope: !16128)
!16130 = !DILocation(line: 1776, column: 25, scope: !16128)
!16131 = !DILocation(line: 1031, column: 3, scope: !15007, inlinedAt: !16132)
!16132 = distinct !DILocation(line: 48, column: 10, scope: !15011, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 1776, column: 29, scope: !16128)
!16134 = !DILocation(line: 0, scope: !15007, inlinedAt: !16132)
!16135 = !DILocation(line: 48, column: 9, scope: !15011, inlinedAt: !16133)
!16136 = !DILocation(line: 1776, column: 6, scope: !16089)
!16137 = !DILocation(line: 0, scope: !14974, inlinedAt: !16138)
!16138 = distinct !DILocation(line: 1777, column: 3, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16128, file: !2466, line: 1776, column: 47)
!16140 = !DILocation(line: 196, column: 9, scope: !14974, inlinedAt: !16138)
!16141 = !DILocation(line: 1779, column: 2, scope: !16139)
!16142 = !DILocation(line: 0, scope: !14390, inlinedAt: !16143)
!16143 = distinct !DILocation(line: 1780, column: 2, scope: !16089)
!16144 = !DILocation(line: 0, scope: !14398, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !16143)
!16146 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !16145)
!16147 = !DILocation(line: 1781, column: 1, scope: !16089)
!16148 = distinct !DISubprogram(name: "end_thread", scope: !2466, file: !2466, line: 1690, type: !14321, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16149)
!16149 = !{!16150}
!16150 = !DILocalVariable(name: "thread", arg: 1, scope: !16148, file: !2466, line: 1690, type: !2361)
!16151 = !DILocation(line: 0, scope: !16148)
!16152 = !DILocation(line: 1695, column: 20, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16148, file: !2466, line: 1695, column: 6)
!16154 = !DILocation(line: 1695, column: 33, scope: !16153)
!16155 = !DILocation(line: 1695, column: 49, scope: !16153)
!16156 = !DILocation(line: 1695, column: 6, scope: !16148)
!16157 = !DILocation(line: 1697, column: 29, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16153, file: !2466, line: 1695, column: 56)
!16159 = !DILocation(line: 1698, column: 7, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16158, file: !2466, line: 1698, column: 7)
!16161 = !DILocation(line: 1698, column: 7, scope: !16158)
!16162 = !DILocation(line: 0, scope: !14532, inlinedAt: !16163)
!16163 = distinct !DILocation(line: 1699, column: 4, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16160, file: !2466, line: 1698, column: 35)
!16165 = !DILocation(line: 266, column: 28, scope: !14532, inlinedAt: !16163)
!16166 = !DILocation(line: 0, scope: !14540, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 268, column: 3, scope: !14544, inlinedAt: !16163)
!16168 = !DILocation(line: 234, column: 2, scope: !14540, inlinedAt: !16167)
!16169 = !DILocation(line: 1700, column: 3, scope: !16164)
!16170 = !DILocation(line: 1701, column: 20, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16158, file: !2466, line: 1701, column: 7)
!16172 = !DILocation(line: 1701, column: 30, scope: !16171)
!16173 = !DILocation(line: 1701, column: 7, scope: !16158)
!16174 = !DILocation(line: 1702, column: 4, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16171, file: !2466, line: 1701, column: 39)
!16176 = !DILocation(line: 1703, column: 3, scope: !16175)
!16177 = !DILocation(line: 1704, column: 9, scope: !16158)
!16178 = !DILocation(line: 1705, column: 23, scope: !16158)
!16179 = !DILocation(line: 1705, column: 3, scope: !16158)
!16180 = !DILocation(line: 1706, column: 3, scope: !16158)
!16181 = !DILocation(line: 1722, column: 2, scope: !16158)
!16182 = !DILocation(line: 1723, column: 1, scope: !16148)
!16183 = distinct !DISubprogram(name: "unpend_all", scope: !2466, file: !2466, line: 1674, type: !16184, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16186)
!16184 = !DISubroutineType(types: !16185)
!16185 = !{null, !2392}
!16186 = !{!16187, !16188}
!16187 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16183, file: !2466, line: 1674, type: !2392)
!16188 = !DILocalVariable(name: "thread", scope: !16183, file: !2466, line: 1676, type: !2361)
!16189 = !DILocation(line: 0, scope: !16183)
!16190 = !DILocation(line: 1678, column: 19, scope: !16183)
!16191 = !DILocation(line: 1678, column: 41, scope: !16183)
!16192 = !DILocation(line: 1678, column: 2, scope: !16183)
!16193 = !DILocation(line: 1679, column: 3, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16183, file: !2466, line: 1678, column: 50)
!16195 = !DILocation(line: 1680, column: 9, scope: !16194)
!16196 = !DILocalVariable(name: "thread", arg: 1, scope: !16197, file: !12888, line: 65, type: !2361)
!16197 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12888, file: !12888, line: 65, type: !16198, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16200)
!16198 = !DISubroutineType(types: !16199)
!16199 = !{null, !2361, !32}
!16200 = !{!16196, !16201}
!16201 = !DILocalVariable(name: "value", arg: 2, scope: !16197, file: !12888, line: 65, type: !32)
!16202 = !DILocation(line: 0, scope: !16197, inlinedAt: !16203)
!16203 = distinct !DILocation(line: 1681, column: 3, scope: !16194)
!16204 = !DILocation(line: 67, column: 15, scope: !16197, inlinedAt: !16203)
!16205 = !DILocation(line: 67, column: 33, scope: !16197, inlinedAt: !16203)
!16206 = !DILocation(line: 1682, column: 3, scope: !16194)
!16207 = distinct !{!16207, !16192, !16208}
!16208 = !DILocation(line: 1683, column: 2, scope: !16183)
!16209 = !DILocation(line: 1684, column: 1, scope: !16183)
!16210 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2466, file: !2466, line: 1794, type: !16211, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16213)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{!103, !2361, !15154}
!16213 = !{!16214, !16215, !16216, !16217}
!16214 = !DILocalVariable(name: "thread", arg: 1, scope: !16210, file: !2466, line: 1794, type: !2361)
!16215 = !DILocalVariable(name: "timeout", arg: 2, scope: !16210, file: !2466, line: 1794, type: !15154)
!16216 = !DILocalVariable(name: "key", scope: !16210, file: !2466, line: 1796, type: !14355)
!16217 = !DILocalVariable(name: "ret", scope: !16210, file: !2466, line: 1797, type: !103)
!16218 = !DILocation(line: 0, scope: !16210)
!16219 = !DILocation(line: 0, scope: !14363, inlinedAt: !16220)
!16220 = distinct !DILocation(line: 1796, column: 25, scope: !16210)
!16221 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !16220)
!16223 = !DILocation(line: 0, scope: !14372, inlinedAt: !16222)
!16224 = !DILocation(line: 1801, column: 20, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16210, file: !2466, line: 1801, column: 6)
!16226 = !DILocation(line: 1801, column: 33, scope: !16225)
!16227 = !DILocation(line: 1801, column: 49, scope: !16225)
!16228 = !DILocation(line: 1801, column: 6, scope: !16210)
!16229 = !DILocation(line: 1803, column: 13, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16225, file: !2466, line: 1803, column: 13)
!16231 = !DILocation(line: 1803, column: 13, scope: !16225)
!16232 = !DILocation(line: 1805, column: 24, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16230, file: !2466, line: 1805, column: 13)
!16234 = !DILocation(line: 1805, column: 21, scope: !16233)
!16235 = !DILocation(line: 1805, column: 34, scope: !16233)
!16236 = !DILocation(line: 1806, column: 20, scope: !16233)
!16237 = !DILocation(line: 1806, column: 44, scope: !16233)
!16238 = !DILocation(line: 1806, column: 30, scope: !16233)
!16239 = !DILocation(line: 1805, column: 13, scope: !16230)
!16240 = !DILocation(line: 1810, column: 42, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16233, file: !2466, line: 1808, column: 9)
!16242 = !DILocation(line: 1810, column: 3, scope: !16241)
!16243 = !DILocation(line: 1811, column: 22, scope: !16241)
!16244 = !DILocation(line: 1811, column: 3, scope: !16241)
!16245 = !DILocation(line: 0, scope: !14974, inlinedAt: !16246)
!16246 = distinct !DILocation(line: 1814, column: 9, scope: !16241)
!16247 = !DILocation(line: 196, column: 9, scope: !14974, inlinedAt: !16246)
!16248 = !DILocation(line: 1817, column: 3, scope: !16241)
!16249 = !DILocation(line: 0, scope: !16225)
!16250 = !DILocation(line: 0, scope: !14390, inlinedAt: !16251)
!16251 = distinct !DILocation(line: 1822, column: 2, scope: !16210)
!16252 = !DILocation(line: 0, scope: !14398, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !16251)
!16254 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !16253)
!16255 = !DILocation(line: 1823, column: 2, scope: !16210)
!16256 = !DILocation(line: 1824, column: 1, scope: !16210)
!16257 = distinct !DISubprogram(name: "z_sched_wake", scope: !2466, file: !2466, line: 1882, type: !16258, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16260)
!16258 = !DISubroutineType(types: !16259)
!16259 = !{!170, !2392, !103, !102}
!16260 = !{!16261, !16262, !16263, !16264, !16265, !16266, !16268}
!16261 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16257, file: !2466, line: 1882, type: !2392)
!16262 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16257, file: !2466, line: 1882, type: !103)
!16263 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16257, file: !2466, line: 1882, type: !102)
!16264 = !DILocalVariable(name: "thread", scope: !16257, file: !2466, line: 1884, type: !2361)
!16265 = !DILocalVariable(name: "ret", scope: !16257, file: !2466, line: 1885, type: !170)
!16266 = !DILocalVariable(name: "__i", scope: !16267, file: !2466, line: 1887, type: !14355)
!16267 = distinct !DILexicalBlock(scope: !16257, file: !2466, line: 1887, column: 2)
!16268 = !DILocalVariable(name: "__key", scope: !16267, file: !2466, line: 1887, type: !14355)
!16269 = !DILocation(line: 0, scope: !16257)
!16270 = !DILocation(line: 0, scope: !16267)
!16271 = !DILocation(line: 0, scope: !14363, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1887, column: 2, scope: !16267)
!16273 = !DILocation(line: 55, column: 2, scope: !14372, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 145, column: 10, scope: !14363, inlinedAt: !16272)
!16275 = !DILocation(line: 0, scope: !14372, inlinedAt: !16274)
!16276 = !DILocation(line: 1888, column: 12, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !2466, line: 1887, column: 26)
!16278 = distinct !DILexicalBlock(scope: !16267, file: !2466, line: 1887, column: 2)
!16279 = !DILocation(line: 1890, column: 14, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16277, file: !2466, line: 1890, column: 7)
!16281 = !DILocation(line: 1890, column: 7, scope: !16277)
!16282 = !DILocalVariable(name: "thread", arg: 1, scope: !16283, file: !13761, line: 134, type: !2361)
!16283 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13761, file: !13761, line: 134, type: !16284, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16286)
!16284 = !DISubroutineType(types: !16285)
!16285 = !{null, !2361, !32, !102}
!16286 = !{!16282, !16287, !16288}
!16287 = !DILocalVariable(name: "value", arg: 2, scope: !16283, file: !13761, line: 135, type: !32)
!16288 = !DILocalVariable(name: "data", arg: 3, scope: !16283, file: !13761, line: 136, type: !102)
!16289 = !DILocation(line: 0, scope: !16283, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 1891, column: 4, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16280, file: !2466, line: 1890, column: 23)
!16292 = !DILocation(line: 0, scope: !16197, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 138, column: 2, scope: !16283, inlinedAt: !16290)
!16294 = !DILocation(line: 67, column: 15, scope: !16197, inlinedAt: !16293)
!16295 = !DILocation(line: 67, column: 33, scope: !16197, inlinedAt: !16293)
!16296 = !DILocation(line: 139, column: 15, scope: !16283, inlinedAt: !16290)
!16297 = !DILocation(line: 139, column: 25, scope: !16283, inlinedAt: !16290)
!16298 = !DILocation(line: 1894, column: 4, scope: !16291)
!16299 = !DILocation(line: 1895, column: 10, scope: !16291)
!16300 = !DILocation(line: 1896, column: 4, scope: !16291)
!16301 = !DILocation(line: 1898, column: 3, scope: !16291)
!16302 = !DILocation(line: 0, scope: !14390, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 1887, column: 2, scope: !16278)
!16304 = !DILocation(line: 0, scope: !14398, inlinedAt: !16305)
!16305 = distinct !DILocation(line: 215, column: 2, scope: !14390, inlinedAt: !16303)
!16306 = !DILocation(line: 95, column: 2, scope: !14398, inlinedAt: !16305)
!16307 = !DILocation(line: 1901, column: 2, scope: !16257)
!16308 = distinct !DISubprogram(name: "z_sched_wait", scope: !2466, file: !2466, line: 1904, type: !16309, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2358, retainedNodes: !16311)
!16309 = !DISubroutineType(types: !16310)
!16310 = !{!103, !14366, !14355, !2392, !15154, !3118}
!16311 = !{!16312, !16313, !16314, !16315, !16316, !16317}
!16312 = !DILocalVariable(name: "lock", arg: 1, scope: !16308, file: !2466, line: 1904, type: !14366)
!16313 = !DILocalVariable(name: "key", arg: 2, scope: !16308, file: !2466, line: 1904, type: !14355)
!16314 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16308, file: !2466, line: 1905, type: !2392)
!16315 = !DILocalVariable(name: "timeout", arg: 4, scope: !16308, file: !2466, line: 1905, type: !15154)
!16316 = !DILocalVariable(name: "data", arg: 5, scope: !16308, file: !2466, line: 1905, type: !3118)
!16317 = !DILocalVariable(name: "ret", scope: !16308, file: !2466, line: 1907, type: !103)
!16318 = !DILocation(line: 0, scope: !16308)
!16319 = !DILocation(line: 1907, column: 12, scope: !16308)
!16320 = !DILocation(line: 1909, column: 11, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16308, file: !2466, line: 1909, column: 6)
!16322 = !DILocation(line: 1909, column: 6, scope: !16308)
!16323 = !DILocation(line: 1910, column: 11, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16321, file: !2466, line: 1909, column: 20)
!16325 = !DILocation(line: 1910, column: 26, scope: !16324)
!16326 = !DILocation(line: 1910, column: 9, scope: !16324)
!16327 = !DILocation(line: 1911, column: 2, scope: !16324)
!16328 = !DILocation(line: 1912, column: 2, scope: !16308)
!16329 = distinct !DISubprogram(name: "z_data_copy", scope: !16330, file: !16330, line: 22, type: !3154, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3135, retainedNodes: !330)
!16330 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16331 = !DILocation(line: 24, column: 2, scope: !16329)
!16332 = !DILocation(line: 27, column: 2, scope: !16329)
!16333 = !DILocation(line: 71, column: 1, scope: !16329)
!16334 = distinct !DISubprogram(name: "z_add_timeout", scope: !2503, file: !2503, line: 88, type: !16335, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16341)
!16335 = !DISubroutineType(types: !16336)
!16336 = !{null, !2476, !2495, !16337}
!16337 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !16338)
!16338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !16339)
!16339 = !{!16340}
!16340 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16338, file: !214, line: 66, baseType: !213, size: 64)
!16341 = !{!16342, !16343, !16344, !16345, !16351, !16352, !16355, !16358}
!16342 = !DILocalVariable(name: "to", arg: 1, scope: !16334, file: !2503, line: 88, type: !2476)
!16343 = !DILocalVariable(name: "fn", arg: 2, scope: !16334, file: !2503, line: 88, type: !2495)
!16344 = !DILocalVariable(name: "timeout", arg: 3, scope: !16334, file: !2503, line: 89, type: !16337)
!16345 = !DILocalVariable(name: "__i", scope: !16346, file: !2503, line: 102, type: !16347)
!16346 = distinct !DILexicalBlock(scope: !16334, file: !2503, line: 102, column: 2)
!16347 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !329, line: 106, baseType: !16348)
!16348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !329, line: 32, size: 32, elements: !16349)
!16349 = !{!16350}
!16350 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16348, file: !329, line: 33, baseType: !103, size: 32)
!16351 = !DILocalVariable(name: "__key", scope: !16346, file: !2503, line: 102, type: !16347)
!16352 = !DILocalVariable(name: "t", scope: !16353, file: !2503, line: 103, type: !2476)
!16353 = distinct !DILexicalBlock(scope: !16354, file: !2503, line: 102, column: 24)
!16354 = distinct !DILexicalBlock(scope: !16346, file: !2503, line: 102, column: 2)
!16355 = !DILocalVariable(name: "ticks", scope: !16356, file: !2503, line: 107, type: !213)
!16356 = distinct !DILexicalBlock(scope: !16357, file: !2503, line: 106, column: 39)
!16357 = distinct !DILexicalBlock(scope: !16353, file: !2503, line: 105, column: 7)
!16358 = !DILocalVariable(name: "next_time", scope: !16359, file: !2503, line: 137, type: !834)
!16359 = distinct !DILexicalBlock(scope: !16360, file: !2503, line: 127, column: 22)
!16360 = distinct !DILexicalBlock(scope: !16353, file: !2503, line: 127, column: 7)
!16361 = !DILocation(line: 0, scope: !16334)
!16362 = !DILocation(line: 91, column: 6, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16334, file: !2503, line: 91, column: 6)
!16364 = !DILocation(line: 91, column: 6, scope: !16334)
!16365 = !DILocation(line: 100, column: 6, scope: !16334)
!16366 = !DILocation(line: 100, column: 9, scope: !16334)
!16367 = !DILocation(line: 0, scope: !16346)
!16368 = !DILocalVariable(name: "l", arg: 1, scope: !16369, file: !329, line: 136, type: !16372)
!16369 = distinct !DISubprogram(name: "k_spin_lock", scope: !329, file: !329, line: 136, type: !16370, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16373)
!16370 = !DISubroutineType(types: !16371)
!16371 = !{!16347, !16372}
!16372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!16373 = !{!16368, !16374}
!16374 = !DILocalVariable(name: "k", scope: !16369, file: !329, line: 139, type: !16347)
!16375 = !DILocation(line: 0, scope: !16369, inlinedAt: !16376)
!16376 = distinct !DILocation(line: 102, column: 2, scope: !16346)
!16377 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16382)
!16378 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16379)
!16379 = !{!16380, !16381}
!16380 = !DILocalVariable(name: "key", scope: !16378, file: !5695, line: 44, type: !32)
!16381 = !DILocalVariable(name: "tmp", scope: !16378, file: !5695, line: 53, type: !32)
!16382 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16376)
!16383 = !{i64 1654351}
!16384 = !DILocation(line: 0, scope: !16378, inlinedAt: !16382)
!16385 = !DILocation(line: 106, column: 33, scope: !16357)
!16386 = !DILocation(line: 105, column: 7, scope: !16353)
!16387 = !DILocation(line: 107, column: 50, scope: !16356)
!16388 = !DILocation(line: 107, column: 48, scope: !16356)
!16389 = !DILocation(line: 0, scope: !16356)
!16390 = !DILocation(line: 109, column: 17, scope: !16356)
!16391 = !DILocation(line: 110, column: 3, scope: !16356)
!16392 = !DILocation(line: 111, column: 31, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16357, file: !2503, line: 110, column: 10)
!16394 = !DILocation(line: 111, column: 37, scope: !16393)
!16395 = !DILocation(line: 111, column: 35, scope: !16393)
!16396 = !DILocation(line: 0, scope: !16357)
!16397 = !DILocation(line: 109, column: 8, scope: !16356)
!16398 = !DILocation(line: 109, column: 15, scope: !16356)
!16399 = !DILocation(line: 114, column: 12, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16353, file: !2503, line: 114, column: 3)
!16401 = !DILocation(line: 0, scope: !16353)
!16402 = !DILocation(line: 114, column: 3, scope: !16400)
!16403 = !DILocation(line: 115, column: 24, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !2503, line: 115, column: 8)
!16405 = distinct !DILexicalBlock(scope: !16406, file: !2503, line: 114, column: 45)
!16406 = distinct !DILexicalBlock(scope: !16400, file: !2503, line: 114, column: 3)
!16407 = !DILocation(line: 115, column: 11, scope: !16404)
!16408 = !DILocation(line: 115, column: 18, scope: !16404)
!16409 = !DILocation(line: 115, column: 8, scope: !16405)
!16410 = !DILocation(line: 116, column: 15, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16404, file: !2503, line: 115, column: 32)
!16412 = !DILocation(line: 117, column: 26, scope: !16411)
!16413 = !DILocation(line: 117, column: 37, scope: !16411)
!16414 = !DILocation(line: 117, column: 5, scope: !16411)
!16415 = !DILocation(line: 123, column: 7, scope: !16353)
!16416 = !DILocation(line: 120, column: 15, scope: !16405)
!16417 = !DILocation(line: 114, column: 36, scope: !16406)
!16418 = distinct !{!16418, !16402, !16419}
!16419 = !DILocation(line: 121, column: 3, scope: !16400)
!16420 = !DILocation(line: 124, column: 41, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16422, file: !2503, line: 123, column: 18)
!16422 = distinct !DILexicalBlock(scope: !16353, file: !2503, line: 123, column: 7)
!16423 = !DILocation(line: 124, column: 4, scope: !16421)
!16424 = !DILocation(line: 125, column: 3, scope: !16421)
!16425 = !DILocation(line: 127, column: 13, scope: !16360)
!16426 = !DILocation(line: 127, column: 10, scope: !16360)
!16427 = !DILocation(line: 127, column: 7, scope: !16353)
!16428 = !DILocation(line: 137, column: 24, scope: !16359)
!16429 = !DILocation(line: 0, scope: !16359)
!16430 = !DILocation(line: 139, column: 18, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16359, file: !2503, line: 139, column: 8)
!16432 = !DILocation(line: 139, column: 23, scope: !16431)
!16433 = !DILocation(line: 141, column: 5, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16431, file: !2503, line: 140, column: 48)
!16435 = !DILocation(line: 142, column: 4, scope: !16434)
!16436 = !DILocalVariable(name: "key", arg: 2, scope: !16437, file: !329, line: 190, type: !16347)
!16437 = distinct !DISubprogram(name: "k_spin_unlock", scope: !329, file: !329, line: 189, type: !16438, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16440)
!16438 = !DISubroutineType(types: !16439)
!16439 = !{null, !16372, !16347}
!16440 = !{!16441, !16436}
!16441 = !DILocalVariable(name: "l", arg: 1, scope: !16437, file: !329, line: 189, type: !16372)
!16442 = !DILocation(line: 0, scope: !16437, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 102, column: 2, scope: !16354)
!16444 = !DILocalVariable(name: "key", arg: 1, scope: !16445, file: !5695, line: 84, type: !32)
!16445 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16446)
!16446 = !{!16444}
!16447 = !DILocation(line: 0, scope: !16445, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16443)
!16449 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16448)
!16450 = !{i64 1655168}
!16451 = !DILocation(line: 148, column: 1, scope: !16334)
!16452 = distinct !DISubprogram(name: "elapsed", scope: !2503, file: !2503, line: 62, type: !16453, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !330)
!16453 = !DISubroutineType(types: !16454)
!16454 = !{!834}
!16455 = !DILocation(line: 64, column: 9, scope: !16452)
!16456 = !DILocation(line: 64, column: 28, scope: !16452)
!16457 = !DILocation(line: 64, column: 35, scope: !16452)
!16458 = !DILocation(line: 64, column: 2, scope: !16452)
!16459 = distinct !DISubprogram(name: "first", scope: !2503, file: !2503, line: 39, type: !16460, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16462)
!16460 = !DISubroutineType(types: !16461)
!16461 = !{!2476}
!16462 = !{!16463}
!16463 = !DILocalVariable(name: "t", scope: !16459, file: !2503, line: 41, type: !16464)
!16464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!16465 = !DILocation(line: 41, column: 19, scope: !16459)
!16466 = !DILocation(line: 0, scope: !16459)
!16467 = !DILocation(line: 43, column: 9, scope: !16459)
!16468 = !DILocation(line: 43, column: 2, scope: !16459)
!16469 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !338, file: !338, line: 443, type: !16470, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16472)
!16470 = !DISubroutineType(types: !16471)
!16471 = !{null, !16464, !16464}
!16472 = !{!16473, !16474, !16475}
!16473 = !DILocalVariable(name: "successor", arg: 1, scope: !16469, file: !338, line: 443, type: !16464)
!16474 = !DILocalVariable(name: "node", arg: 2, scope: !16469, file: !338, line: 443, type: !16464)
!16475 = !DILocalVariable(name: "prev", scope: !16469, file: !338, line: 445, type: !16476)
!16476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16464)
!16477 = !DILocation(line: 0, scope: !16469)
!16478 = !DILocation(line: 445, column: 39, scope: !16469)
!16479 = !DILocation(line: 447, column: 8, scope: !16469)
!16480 = !DILocation(line: 447, column: 13, scope: !16469)
!16481 = !DILocation(line: 448, column: 8, scope: !16469)
!16482 = !DILocation(line: 448, column: 13, scope: !16469)
!16483 = !DILocation(line: 449, column: 8, scope: !16469)
!16484 = !DILocation(line: 449, column: 13, scope: !16469)
!16485 = !DILocation(line: 450, column: 18, scope: !16469)
!16486 = !DILocation(line: 451, column: 1, scope: !16469)
!16487 = distinct !DISubprogram(name: "next", scope: !2503, file: !2503, line: 46, type: !16488, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16490)
!16488 = !DISubroutineType(types: !16489)
!16489 = !{!2476, !2476}
!16490 = !{!16491, !16492}
!16491 = !DILocalVariable(name: "t", arg: 1, scope: !16487, file: !2503, line: 46, type: !2476)
!16492 = !DILocalVariable(name: "n", scope: !16487, file: !2503, line: 48, type: !16464)
!16493 = !DILocation(line: 0, scope: !16487)
!16494 = !DILocation(line: 48, column: 58, scope: !16487)
!16495 = !DILocation(line: 48, column: 19, scope: !16487)
!16496 = !DILocation(line: 50, column: 9, scope: !16487)
!16497 = !DILocation(line: 50, column: 2, scope: !16487)
!16498 = distinct !DISubprogram(name: "sys_dlist_append", scope: !338, file: !338, line: 404, type: !16499, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16502)
!16499 = !DISubroutineType(types: !16500)
!16500 = !{null, !16501, !16464}
!16501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!16502 = !{!16503, !16504, !16505}
!16503 = !DILocalVariable(name: "list", arg: 1, scope: !16498, file: !338, line: 404, type: !16501)
!16504 = !DILocalVariable(name: "node", arg: 2, scope: !16498, file: !338, line: 404, type: !16464)
!16505 = !DILocalVariable(name: "tail", scope: !16498, file: !338, line: 406, type: !16476)
!16506 = !DILocation(line: 0, scope: !16498)
!16507 = !DILocation(line: 406, column: 34, scope: !16498)
!16508 = !DILocation(line: 408, column: 8, scope: !16498)
!16509 = !DILocation(line: 408, column: 13, scope: !16498)
!16510 = !DILocation(line: 409, column: 8, scope: !16498)
!16511 = !DILocation(line: 409, column: 13, scope: !16498)
!16512 = !DILocation(line: 411, column: 8, scope: !16498)
!16513 = !DILocation(line: 411, column: 13, scope: !16498)
!16514 = !DILocation(line: 412, column: 13, scope: !16498)
!16515 = !DILocation(line: 413, column: 1, scope: !16498)
!16516 = distinct !DISubprogram(name: "next_timeout", scope: !2503, file: !2503, line: 67, type: !16453, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16517)
!16517 = !{!16518, !16519, !16520}
!16518 = !DILocalVariable(name: "to", scope: !16516, file: !2503, line: 69, type: !2476)
!16519 = !DILocalVariable(name: "ticks_elapsed", scope: !16516, file: !2503, line: 70, type: !834)
!16520 = !DILocalVariable(name: "ret", scope: !16516, file: !2503, line: 71, type: !834)
!16521 = !DILocation(line: 69, column: 24, scope: !16516)
!16522 = !DILocation(line: 0, scope: !16516)
!16523 = !DILocation(line: 70, column: 26, scope: !16516)
!16524 = !DILocation(line: 73, column: 10, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16516, file: !2503, line: 73, column: 6)
!16526 = !DILocation(line: 73, column: 19, scope: !16525)
!16527 = !DILocation(line: 74, column: 21, scope: !16525)
!16528 = !DILocation(line: 74, column: 30, scope: !16525)
!16529 = !DILocation(line: 74, column: 28, scope: !16525)
!16530 = !DILocation(line: 74, column: 45, scope: !16525)
!16531 = !DILocation(line: 73, column: 6, scope: !16516)
!16532 = !DILocation(line: 77, column: 9, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16525, file: !2503, line: 76, column: 9)
!16534 = !DILocation(line: 0, scope: !16525)
!16535 = !DILocation(line: 81, column: 20, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16516, file: !2503, line: 81, column: 6)
!16537 = !DILocation(line: 81, column: 6, scope: !16536)
!16538 = !DILocation(line: 81, column: 32, scope: !16536)
!16539 = !DILocation(line: 85, column: 2, scope: !16516)
!16540 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !338, file: !338, line: 341, type: !16541, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16543)
!16541 = !DISubroutineType(types: !16542)
!16542 = !{!16464, !16501, !16464}
!16543 = !{!16544, !16545}
!16544 = !DILocalVariable(name: "list", arg: 1, scope: !16540, file: !338, line: 341, type: !16501)
!16545 = !DILocalVariable(name: "node", arg: 2, scope: !16540, file: !338, line: 342, type: !16464)
!16546 = !DILocation(line: 0, scope: !16540)
!16547 = !DILocation(line: 344, column: 15, scope: !16540)
!16548 = !DILocation(line: 344, column: 9, scope: !16540)
!16549 = !DILocation(line: 344, column: 26, scope: !16540)
!16550 = !DILocation(line: 344, column: 2, scope: !16540)
!16551 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !338, file: !338, line: 325, type: !16541, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16552)
!16552 = !{!16553, !16554}
!16553 = !DILocalVariable(name: "list", arg: 1, scope: !16551, file: !338, line: 325, type: !16501)
!16554 = !DILocalVariable(name: "node", arg: 2, scope: !16551, file: !338, line: 326, type: !16464)
!16555 = !DILocation(line: 0, scope: !16551)
!16556 = !DILocation(line: 328, column: 24, scope: !16551)
!16557 = !DILocation(line: 328, column: 15, scope: !16551)
!16558 = !DILocation(line: 328, column: 9, scope: !16551)
!16559 = !DILocation(line: 328, column: 45, scope: !16551)
!16560 = !DILocation(line: 328, column: 2, scope: !16551)
!16561 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !338, file: !338, line: 294, type: !16562, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16564)
!16562 = !DISubroutineType(types: !16563)
!16563 = !{!16464, !16501}
!16564 = !{!16565}
!16565 = !DILocalVariable(name: "list", arg: 1, scope: !16561, file: !338, line: 294, type: !16501)
!16566 = !DILocation(line: 0, scope: !16561)
!16567 = !DILocation(line: 296, column: 9, scope: !16561)
!16568 = !DILocation(line: 296, column: 2, scope: !16561)
!16569 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !338, file: !338, line: 266, type: !16570, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16572)
!16570 = !DISubroutineType(types: !16571)
!16571 = !{!170, !16501}
!16572 = !{!16573}
!16573 = !DILocalVariable(name: "list", arg: 1, scope: !16569, file: !338, line: 266, type: !16501)
!16574 = !DILocation(line: 0, scope: !16569)
!16575 = !DILocation(line: 268, column: 15, scope: !16569)
!16576 = !DILocation(line: 268, column: 20, scope: !16569)
!16577 = !DILocation(line: 268, column: 2, scope: !16569)
!16578 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2503, file: !2503, line: 150, type: !16579, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16581)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{!103, !2476}
!16581 = !{!16582, !16583, !16584, !16586}
!16582 = !DILocalVariable(name: "to", arg: 1, scope: !16578, file: !2503, line: 150, type: !2476)
!16583 = !DILocalVariable(name: "ret", scope: !16578, file: !2503, line: 152, type: !103)
!16584 = !DILocalVariable(name: "__i", scope: !16585, file: !2503, line: 154, type: !16347)
!16585 = distinct !DILexicalBlock(scope: !16578, file: !2503, line: 154, column: 2)
!16586 = !DILocalVariable(name: "__key", scope: !16585, file: !2503, line: 154, type: !16347)
!16587 = !DILocation(line: 0, scope: !16578)
!16588 = !DILocation(line: 0, scope: !16585)
!16589 = !DILocation(line: 0, scope: !16369, inlinedAt: !16590)
!16590 = distinct !DILocation(line: 154, column: 2, scope: !16585)
!16591 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16590)
!16593 = !DILocation(line: 0, scope: !16378, inlinedAt: !16592)
!16594 = !DILocation(line: 155, column: 7, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16596, file: !2503, line: 155, column: 7)
!16596 = distinct !DILexicalBlock(scope: !16597, file: !2503, line: 154, column: 24)
!16597 = distinct !DILexicalBlock(scope: !16585, file: !2503, line: 154, column: 2)
!16598 = !DILocation(line: 155, column: 7, scope: !16596)
!16599 = !DILocation(line: 156, column: 4, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16595, file: !2503, line: 155, column: 39)
!16601 = !DILocation(line: 158, column: 3, scope: !16600)
!16602 = !DILocation(line: 0, scope: !16437, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 154, column: 2, scope: !16597)
!16604 = !DILocation(line: 0, scope: !16445, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16603)
!16606 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16605)
!16607 = !DILocation(line: 161, column: 2, scope: !16578)
!16608 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !338, file: !338, line: 225, type: !16609, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16613)
!16609 = !DISubroutineType(types: !16610)
!16610 = !{!170, !16611}
!16611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16612, size: 32)
!16612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2480)
!16613 = !{!16614}
!16614 = !DILocalVariable(name: "node", arg: 1, scope: !16608, file: !338, line: 225, type: !16611)
!16615 = !DILocation(line: 0, scope: !16608)
!16616 = !DILocation(line: 227, column: 15, scope: !16608)
!16617 = !DILocation(line: 227, column: 20, scope: !16608)
!16618 = !DILocation(line: 227, column: 2, scope: !16608)
!16619 = distinct !DISubprogram(name: "remove_timeout", scope: !2503, file: !2503, line: 53, type: !2497, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16620)
!16620 = !{!16621}
!16621 = !DILocalVariable(name: "t", arg: 1, scope: !16619, file: !2503, line: 53, type: !2476)
!16622 = !DILocation(line: 0, scope: !16619)
!16623 = !DILocation(line: 55, column: 6, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16619, file: !2503, line: 55, column: 6)
!16625 = !DILocation(line: 55, column: 14, scope: !16624)
!16626 = !DILocation(line: 55, column: 6, scope: !16619)
!16627 = !DILocation(line: 56, column: 25, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16624, file: !2503, line: 55, column: 23)
!16629 = !DILocation(line: 56, column: 12, scope: !16628)
!16630 = !DILocation(line: 56, column: 19, scope: !16628)
!16631 = !DILocation(line: 57, column: 2, scope: !16628)
!16632 = !DILocation(line: 59, column: 23, scope: !16619)
!16633 = !DILocation(line: 59, column: 2, scope: !16619)
!16634 = !DILocation(line: 60, column: 1, scope: !16619)
!16635 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !338, file: !338, line: 496, type: !16636, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16638)
!16636 = !DISubroutineType(types: !16637)
!16637 = !{null, !16464}
!16638 = !{!16639, !16640, !16641}
!16639 = !DILocalVariable(name: "node", arg: 1, scope: !16635, file: !338, line: 496, type: !16464)
!16640 = !DILocalVariable(name: "prev", scope: !16635, file: !338, line: 498, type: !16476)
!16641 = !DILocalVariable(name: "next", scope: !16635, file: !338, line: 499, type: !16476)
!16642 = !DILocation(line: 0, scope: !16635)
!16643 = !DILocation(line: 498, column: 34, scope: !16635)
!16644 = !DILocation(line: 499, column: 34, scope: !16635)
!16645 = !DILocation(line: 501, column: 8, scope: !16635)
!16646 = !DILocation(line: 501, column: 13, scope: !16635)
!16647 = !DILocation(line: 502, column: 8, scope: !16635)
!16648 = !DILocation(line: 502, column: 13, scope: !16635)
!16649 = !DILocation(line: 503, column: 2, scope: !16635)
!16650 = !DILocation(line: 504, column: 1, scope: !16635)
!16651 = distinct !DISubprogram(name: "sys_dnode_init", scope: !338, file: !338, line: 211, type: !16636, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16652)
!16652 = !{!16653}
!16653 = !DILocalVariable(name: "node", arg: 1, scope: !16651, file: !338, line: 211, type: !16464)
!16654 = !DILocation(line: 0, scope: !16651)
!16655 = !DILocation(line: 213, column: 8, scope: !16651)
!16656 = !DILocation(line: 213, column: 13, scope: !16651)
!16657 = !DILocation(line: 214, column: 8, scope: !16651)
!16658 = !DILocation(line: 214, column: 13, scope: !16651)
!16659 = !DILocation(line: 215, column: 1, scope: !16651)
!16660 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2503, file: !2503, line: 183, type: !16661, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16665)
!16661 = !DISubroutineType(types: !16662)
!16662 = !{!213, !16663}
!16663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16664, size: 32)
!16664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2477)
!16665 = !{!16666, !16667, !16668, !16670}
!16666 = !DILocalVariable(name: "timeout", arg: 1, scope: !16660, file: !2503, line: 183, type: !16663)
!16667 = !DILocalVariable(name: "ticks", scope: !16660, file: !2503, line: 185, type: !213)
!16668 = !DILocalVariable(name: "__i", scope: !16669, file: !2503, line: 187, type: !16347)
!16669 = distinct !DILexicalBlock(scope: !16660, file: !2503, line: 187, column: 2)
!16670 = !DILocalVariable(name: "__key", scope: !16669, file: !2503, line: 187, type: !16347)
!16671 = !DILocation(line: 0, scope: !16660)
!16672 = !DILocation(line: 0, scope: !16669)
!16673 = !DILocation(line: 0, scope: !16369, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 187, column: 2, scope: !16669)
!16675 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16674)
!16677 = !DILocation(line: 0, scope: !16378, inlinedAt: !16676)
!16678 = !DILocation(line: 188, column: 11, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16680, file: !2503, line: 187, column: 24)
!16680 = distinct !DILexicalBlock(scope: !16669, file: !2503, line: 187, column: 2)
!16681 = !DILocation(line: 0, scope: !16437, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 187, column: 2, scope: !16680)
!16683 = !DILocation(line: 0, scope: !16445, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16682)
!16685 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16684)
!16686 = !DILocation(line: 191, column: 2, scope: !16660)
!16687 = distinct !DISubprogram(name: "timeout_rem", scope: !2503, file: !2503, line: 165, type: !16661, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16688)
!16688 = !{!16689, !16690, !16691}
!16689 = !DILocalVariable(name: "timeout", arg: 1, scope: !16687, file: !2503, line: 165, type: !16663)
!16690 = !DILocalVariable(name: "ticks", scope: !16687, file: !2503, line: 167, type: !213)
!16691 = !DILocalVariable(name: "t", scope: !16692, file: !2503, line: 173, type: !2476)
!16692 = distinct !DILexicalBlock(scope: !16687, file: !2503, line: 173, column: 2)
!16693 = !DILocation(line: 0, scope: !16687)
!16694 = !DILocation(line: 169, column: 6, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16687, file: !2503, line: 169, column: 6)
!16696 = !DILocation(line: 169, column: 6, scope: !16687)
!16697 = !DILocation(line: 173, column: 28, scope: !16692)
!16698 = !DILocation(line: 0, scope: !16692)
!16699 = !DILocation(line: 173, column: 39, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16692, file: !2503, line: 173, column: 2)
!16701 = !DILocation(line: 173, column: 2, scope: !16692)
!16702 = !DILocation(line: 174, column: 15, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16700, file: !2503, line: 173, column: 61)
!16704 = !DILocation(line: 174, column: 9, scope: !16703)
!16705 = !DILocation(line: 175, column: 15, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16703, file: !2503, line: 175, column: 7)
!16707 = !DILocation(line: 175, column: 7, scope: !16703)
!16708 = !DILocation(line: 173, column: 52, scope: !16700)
!16709 = distinct !{!16709, !16701, !16710}
!16710 = !DILocation(line: 178, column: 2, scope: !16692)
!16711 = !DILocation(line: 180, column: 17, scope: !16687)
!16712 = !DILocation(line: 180, column: 15, scope: !16687)
!16713 = !DILocation(line: 180, column: 2, scope: !16687)
!16714 = !DILocation(line: 181, column: 1, scope: !16687)
!16715 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13260, file: !13260, line: 35, type: !16716, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16718)
!16716 = !DISubroutineType(types: !16717)
!16717 = !{!170, !16663}
!16718 = !{!16719}
!16719 = !DILocalVariable(name: "to", arg: 1, scope: !16715, file: !13260, line: 35, type: !16663)
!16720 = !DILocation(line: 0, scope: !16715)
!16721 = !DILocation(line: 37, column: 35, scope: !16715)
!16722 = !DILocation(line: 37, column: 10, scope: !16715)
!16723 = !DILocation(line: 37, column: 9, scope: !16715)
!16724 = !DILocation(line: 37, column: 2, scope: !16715)
!16725 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2503, file: !2503, line: 194, type: !16661, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16726)
!16726 = !{!16727, !16728, !16729, !16731}
!16727 = !DILocalVariable(name: "timeout", arg: 1, scope: !16725, file: !2503, line: 194, type: !16663)
!16728 = !DILocalVariable(name: "ticks", scope: !16725, file: !2503, line: 196, type: !213)
!16729 = !DILocalVariable(name: "__i", scope: !16730, file: !2503, line: 198, type: !16347)
!16730 = distinct !DILexicalBlock(scope: !16725, file: !2503, line: 198, column: 2)
!16731 = !DILocalVariable(name: "__key", scope: !16730, file: !2503, line: 198, type: !16347)
!16732 = !DILocation(line: 0, scope: !16725)
!16733 = !DILocation(line: 0, scope: !16730)
!16734 = !DILocation(line: 0, scope: !16369, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 198, column: 2, scope: !16730)
!16736 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16737)
!16737 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16735)
!16738 = !DILocation(line: 0, scope: !16378, inlinedAt: !16737)
!16739 = !DILocation(line: 199, column: 11, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !2503, line: 198, column: 24)
!16741 = distinct !DILexicalBlock(scope: !16730, file: !2503, line: 198, column: 2)
!16742 = !DILocation(line: 199, column: 23, scope: !16740)
!16743 = !DILocation(line: 0, scope: !16437, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 198, column: 2, scope: !16741)
!16745 = !DILocation(line: 0, scope: !16445, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16744)
!16747 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16746)
!16748 = !DILocation(line: 199, column: 21, scope: !16740)
!16749 = !DILocation(line: 202, column: 2, scope: !16725)
!16750 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2503, file: !2503, line: 205, type: !16453, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16751)
!16751 = !{!16752, !16753, !16755}
!16752 = !DILocalVariable(name: "ret", scope: !16750, file: !2503, line: 207, type: !834)
!16753 = !DILocalVariable(name: "__i", scope: !16754, file: !2503, line: 209, type: !16347)
!16754 = distinct !DILexicalBlock(scope: !16750, file: !2503, line: 209, column: 2)
!16755 = !DILocalVariable(name: "__key", scope: !16754, file: !2503, line: 209, type: !16347)
!16756 = !DILocation(line: 0, scope: !16750)
!16757 = !DILocation(line: 0, scope: !16754)
!16758 = !DILocation(line: 0, scope: !16369, inlinedAt: !16759)
!16759 = distinct !DILocation(line: 209, column: 2, scope: !16754)
!16760 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16761)
!16761 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16759)
!16762 = !DILocation(line: 0, scope: !16378, inlinedAt: !16761)
!16763 = !DILocation(line: 210, column: 9, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !2503, line: 209, column: 24)
!16765 = distinct !DILexicalBlock(scope: !16754, file: !2503, line: 209, column: 2)
!16766 = !DILocation(line: 0, scope: !16437, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 209, column: 2, scope: !16765)
!16768 = !DILocation(line: 0, scope: !16445, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16767)
!16770 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16769)
!16771 = !DILocation(line: 212, column: 2, scope: !16750)
!16772 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2503, file: !2503, line: 215, type: !10709, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16773)
!16773 = !{!16774, !16775, !16776, !16778, !16779, !16782, !16783}
!16774 = !DILocalVariable(name: "ticks", arg: 1, scope: !16772, file: !2503, line: 215, type: !834)
!16775 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16772, file: !2503, line: 215, type: !170)
!16776 = !DILocalVariable(name: "__i", scope: !16777, file: !2503, line: 217, type: !16347)
!16777 = distinct !DILexicalBlock(scope: !16772, file: !2503, line: 217, column: 2)
!16778 = !DILocalVariable(name: "__key", scope: !16777, file: !2503, line: 217, type: !16347)
!16779 = !DILocalVariable(name: "next_to", scope: !16780, file: !2503, line: 218, type: !103)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !2503, line: 217, column: 24)
!16781 = distinct !DILexicalBlock(scope: !16777, file: !2503, line: 217, column: 2)
!16782 = !DILocalVariable(name: "sooner", scope: !16780, file: !2503, line: 219, type: !170)
!16783 = !DILocalVariable(name: "imminent", scope: !16780, file: !2503, line: 221, type: !170)
!16784 = !DILocation(line: 0, scope: !16772)
!16785 = !DILocation(line: 0, scope: !16777)
!16786 = !DILocation(line: 0, scope: !16369, inlinedAt: !16787)
!16787 = distinct !DILocation(line: 217, column: 2, scope: !16777)
!16788 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16789)
!16789 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16787)
!16790 = !DILocation(line: 0, scope: !16378, inlinedAt: !16789)
!16791 = !DILocation(line: 218, column: 17, scope: !16780)
!16792 = !DILocation(line: 0, scope: !16780)
!16793 = !DILocation(line: 221, column: 27, scope: !16780)
!16794 = !DILocation(line: 233, column: 17, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16780, file: !2503, line: 233, column: 7)
!16796 = !DILocation(line: 234, column: 26, scope: !16797)
!16797 = distinct !DILexicalBlock(scope: !16795, file: !2503, line: 233, column: 56)
!16798 = !DILocation(line: 234, column: 4, scope: !16797)
!16799 = !DILocation(line: 235, column: 3, scope: !16797)
!16800 = !DILocation(line: 0, scope: !16437, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 217, column: 2, scope: !16781)
!16802 = !DILocation(line: 0, scope: !16445, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16801)
!16804 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16803)
!16805 = !DILocation(line: 237, column: 1, scope: !16772)
!16806 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2503, file: !2503, line: 239, type: !16807, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16809)
!16807 = !DISubroutineType(types: !16808)
!16808 = !{null, !834}
!16809 = !{!16810, !16811, !16812, !16814}
!16810 = !DILocalVariable(name: "ticks", arg: 1, scope: !16806, file: !2503, line: 239, type: !834)
!16811 = !DILocalVariable(name: "key", scope: !16806, file: !2503, line: 245, type: !16347)
!16812 = !DILocalVariable(name: "t", scope: !16813, file: !2503, line: 262, type: !2476)
!16813 = distinct !DILexicalBlock(scope: !16806, file: !2503, line: 261, column: 67)
!16814 = !DILocalVariable(name: "dt", scope: !16813, file: !2503, line: 263, type: !103)
!16815 = !DILocation(line: 0, scope: !16806)
!16816 = !DILocation(line: 242, column: 2, scope: !16806)
!16817 = !DILocation(line: 0, scope: !16369, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 245, column: 25, scope: !16806)
!16819 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16820)
!16820 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16818)
!16821 = !DILocation(line: 0, scope: !16378, inlinedAt: !16820)
!16822 = !DILocation(line: 261, column: 9, scope: !16806)
!16823 = !DILocation(line: 261, column: 17, scope: !16806)
!16824 = !DILocation(line: 261, column: 25, scope: !16806)
!16825 = !DILocation(line: 261, column: 37, scope: !16806)
!16826 = !DILocation(line: 261, column: 47, scope: !16806)
!16827 = !DILocation(line: 261, column: 44, scope: !16806)
!16828 = !DILocation(line: 261, column: 2, scope: !16806)
!16829 = !DILocation(line: 0, scope: !16813)
!16830 = !DILocation(line: 263, column: 12, scope: !16813)
!16831 = !DILocation(line: 265, column: 16, scope: !16813)
!16832 = !DILocation(line: 265, column: 13, scope: !16813)
!16833 = !DILocation(line: 266, column: 13, scope: !16813)
!16834 = !DILocation(line: 267, column: 3, scope: !16813)
!16835 = !DILocation(line: 0, scope: !16437, inlinedAt: !16836)
!16836 = distinct !DILocation(line: 269, column: 3, scope: !16813)
!16837 = !DILocation(line: 0, scope: !16445, inlinedAt: !16838)
!16838 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16836)
!16839 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16838)
!16840 = !DILocation(line: 270, column: 6, scope: !16813)
!16841 = !DILocation(line: 270, column: 3, scope: !16813)
!16842 = !DILocation(line: 0, scope: !16369, inlinedAt: !16843)
!16843 = distinct !DILocation(line: 271, column: 9, scope: !16813)
!16844 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16843)
!16846 = !DILocation(line: 0, scope: !16378, inlinedAt: !16845)
!16847 = !DILocation(line: 272, column: 22, scope: !16813)
!16848 = distinct !{!16848, !16828, !16849}
!16849 = !DILocation(line: 273, column: 2, scope: !16806)
!16850 = !DILocation(line: 276, column: 19, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16852, file: !2503, line: 275, column: 23)
!16852 = distinct !DILexicalBlock(scope: !16806, file: !2503, line: 275, column: 6)
!16853 = !DILocation(line: 277, column: 2, scope: !16851)
!16854 = !DILocation(line: 279, column: 15, scope: !16806)
!16855 = !DILocation(line: 279, column: 12, scope: !16806)
!16856 = !DILocation(line: 280, column: 21, scope: !16806)
!16857 = !DILocation(line: 282, column: 24, scope: !16806)
!16858 = !DILocation(line: 282, column: 2, scope: !16806)
!16859 = !DILocation(line: 0, scope: !16437, inlinedAt: !16860)
!16860 = distinct !DILocation(line: 284, column: 2, scope: !16806)
!16861 = !DILocation(line: 0, scope: !16445, inlinedAt: !16862)
!16862 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16860)
!16863 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16862)
!16864 = !DILocation(line: 285, column: 1, scope: !16806)
!16865 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2503, file: !2503, line: 287, type: !16866, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16868)
!16866 = !DISubroutineType(types: !16867)
!16867 = !{!215}
!16868 = !{!16869, !16870, !16872}
!16869 = !DILocalVariable(name: "t", scope: !16865, file: !2503, line: 289, type: !2340)
!16870 = !DILocalVariable(name: "__i", scope: !16871, file: !2503, line: 291, type: !16347)
!16871 = distinct !DILexicalBlock(scope: !16865, file: !2503, line: 291, column: 2)
!16872 = !DILocalVariable(name: "__key", scope: !16871, file: !2503, line: 291, type: !16347)
!16873 = !DILocation(line: 0, scope: !16865)
!16874 = !DILocation(line: 0, scope: !16871)
!16875 = !DILocation(line: 0, scope: !16369, inlinedAt: !16876)
!16876 = distinct !DILocation(line: 291, column: 2, scope: !16871)
!16877 = !DILocation(line: 55, column: 2, scope: !16378, inlinedAt: !16878)
!16878 = distinct !DILocation(line: 145, column: 10, scope: !16369, inlinedAt: !16876)
!16879 = !DILocation(line: 0, scope: !16378, inlinedAt: !16878)
!16880 = !DILocation(line: 292, column: 7, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16882, file: !2503, line: 291, column: 24)
!16882 = distinct !DILexicalBlock(scope: !16871, file: !2503, line: 291, column: 2)
!16883 = !DILocation(line: 292, column: 19, scope: !16881)
!16884 = !DILocation(line: 0, scope: !16437, inlinedAt: !16885)
!16885 = distinct !DILocation(line: 291, column: 2, scope: !16882)
!16886 = !DILocation(line: 0, scope: !16445, inlinedAt: !16887)
!16887 = distinct !DILocation(line: 215, column: 2, scope: !16437, inlinedAt: !16885)
!16888 = !DILocation(line: 95, column: 2, scope: !16445, inlinedAt: !16887)
!16889 = !DILocation(line: 292, column: 17, scope: !16881)
!16890 = !DILocation(line: 294, column: 2, scope: !16865)
!16891 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2503, file: !2503, line: 297, type: !6677, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !330)
!16892 = !DILocation(line: 300, column: 19, scope: !16891)
!16893 = !DILocation(line: 300, column: 9, scope: !16891)
!16894 = !DILocation(line: 300, column: 2, scope: !16891)
!16895 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2503, file: !2503, line: 306, type: !16866, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !330)
!16896 = !DILocation(line: 308, column: 9, scope: !16895)
!16897 = !DILocation(line: 308, column: 2, scope: !16895)
!16898 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2503, file: !2503, line: 319, type: !5719, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16899)
!16899 = !{!16900, !16901, !16902, !16903}
!16900 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16898, file: !2503, line: 319, type: !121)
!16901 = !DILocalVariable(name: "start_cycles", scope: !16898, file: !2503, line: 328, type: !121)
!16902 = !DILocalVariable(name: "cycles_to_wait", scope: !16898, file: !2503, line: 331, type: !121)
!16903 = !DILocalVariable(name: "current_cycles", scope: !16904, file: !2503, line: 338, type: !121)
!16904 = distinct !DILexicalBlock(scope: !16905, file: !2503, line: 337, column: 11)
!16905 = distinct !DILexicalBlock(scope: !16906, file: !2503, line: 337, column: 2)
!16906 = distinct !DILexicalBlock(scope: !16898, file: !2503, line: 337, column: 2)
!16907 = !DILocation(line: 0, scope: !16898)
!16908 = !DILocation(line: 322, column: 19, scope: !16909)
!16909 = distinct !DILexicalBlock(scope: !16898, file: !2503, line: 322, column: 6)
!16910 = !DILocation(line: 322, column: 6, scope: !16898)
!16911 = !DILocation(line: 328, column: 26, scope: !16898)
!16912 = !DILocation(line: 333, column: 43, scope: !16898)
!16913 = !DILocation(line: 337, column: 2, scope: !16898)
!16914 = !DILocation(line: 338, column: 29, scope: !16904)
!16915 = !DILocation(line: 0, scope: !16904)
!16916 = !DILocation(line: 341, column: 23, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16904, file: !2503, line: 341, column: 7)
!16918 = !DILocation(line: 341, column: 39, scope: !16917)
!16919 = !DILocation(line: 349, column: 1, scope: !16898)
!16920 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !309, file: !309, line: 1675, type: !6677, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !330)
!16921 = !DILocation(line: 1677, column: 9, scope: !16920)
!16922 = !DILocation(line: 1677, column: 2, scope: !16920)
!16923 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16924, file: !16924, line: 24, type: !6677, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !330)
!16924 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16925 = !DILocation(line: 26, column: 9, scope: !16923)
!16926 = !DILocation(line: 26, column: 2, scope: !16923)
!16927 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2503, file: !2503, line: 364, type: !16928, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !16930)
!16928 = !DISubroutineType(types: !16929)
!16929 = !{!2340, !16337}
!16930 = !{!16931, !16932}
!16931 = !DILocalVariable(name: "timeout", arg: 1, scope: !16927, file: !2503, line: 364, type: !16337)
!16932 = !DILocalVariable(name: "dt", scope: !16927, file: !2503, line: 366, type: !213)
!16933 = !DILocation(line: 0, scope: !16927)
!16934 = !DILocation(line: 368, column: 6, scope: !16927)
!16935 = !DILocation(line: 371, column: 10, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !16937, file: !2503, line: 370, column: 47)
!16937 = distinct !DILexicalBlock(scope: !16938, file: !2503, line: 370, column: 13)
!16938 = distinct !DILexicalBlock(scope: !16927, file: !2503, line: 368, column: 6)
!16939 = !DILocation(line: 371, column: 3, scope: !16936)
!16940 = !DILocation(line: 376, column: 58, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16942, file: !2503, line: 376, column: 7)
!16942 = distinct !DILexicalBlock(scope: !16937, file: !2503, line: 372, column: 9)
!16943 = !DILocation(line: 376, column: 7, scope: !16942)
!16944 = !DILocation(line: 376, column: 43, scope: !16941)
!16945 = !DILocation(line: 377, column: 4, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16941, file: !2503, line: 376, column: 64)
!16947 = !DILocation(line: 379, column: 10, scope: !16942)
!16948 = !DILocation(line: 379, column: 33, scope: !16942)
!16949 = !DILocation(line: 379, column: 31, scope: !16942)
!16950 = !DILocation(line: 379, column: 3, scope: !16942)
!16951 = !DILocation(line: 0, scope: !16938)
!16952 = !DILocation(line: 381, column: 1, scope: !16927)
!16953 = distinct !DISubprogram(name: "k_free", scope: !16954, file: !16954, line: 43, type: !5864, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !16955)
!16954 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16955 = !{!16956, !16957}
!16956 = !DILocalVariable(name: "ptr", arg: 1, scope: !16953, file: !16954, line: 43, type: !102)
!16957 = !DILocalVariable(name: "heap_ref", scope: !16953, file: !16954, line: 45, type: !16958)
!16958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16959, size: 32)
!16959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16960, size: 32)
!16960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !16961)
!16961 = !{!16962, !16968, !16987}
!16962 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16960, file: !309, line: 5074, baseType: !16963, size: 96)
!16963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !16964)
!16964 = !{!16965, !16966, !16967}
!16965 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16963, file: !485, line: 57, baseType: !488, size: 32)
!16966 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16963, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!16967 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16963, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!16968 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16960, file: !309, line: 5075, baseType: !16969, size: 64, offset: 96)
!16969 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !16970)
!16970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !16971)
!16971 = !{!16972}
!16972 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16970, file: !333, line: 232, baseType: !16973, size: 64)
!16973 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !16974)
!16974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !338, line: 37, size: 64, elements: !16975)
!16975 = !{!16976, !16982}
!16976 = !DIDerivedType(tag: DW_TAG_member, scope: !16974, file: !338, line: 38, baseType: !16977, size: 32)
!16977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16974, file: !338, line: 38, size: 32, elements: !16978)
!16978 = !{!16979, !16981}
!16979 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !16977, file: !338, line: 39, baseType: !16980, size: 32)
!16980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16974, size: 32)
!16981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16977, file: !338, line: 40, baseType: !16980, size: 32)
!16982 = !DIDerivedType(tag: DW_TAG_member, scope: !16974, file: !338, line: 42, baseType: !16983, size: 32, offset: 32)
!16983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16974, file: !338, line: 42, size: 32, elements: !16984)
!16984 = !{!16985, !16986}
!16985 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !16983, file: !338, line: 43, baseType: !16980, size: 32)
!16986 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16983, file: !338, line: 44, baseType: !16980, size: 32)
!16987 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16960, file: !309, line: 5076, baseType: !16988, offset: 160)
!16988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!16989 = !DILocation(line: 0, scope: !16953)
!16990 = !DILocation(line: 47, column: 10, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16953, file: !16954, line: 47, column: 6)
!16992 = !DILocation(line: 47, column: 6, scope: !16953)
!16993 = !DILocation(line: 49, column: 9, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16991, file: !16954, line: 47, column: 19)
!16995 = !DILocation(line: 53, column: 15, scope: !16994)
!16996 = !DILocation(line: 53, column: 3, scope: !16994)
!16997 = !DILocation(line: 56, column: 2, scope: !16994)
!16998 = !DILocation(line: 57, column: 1, scope: !16953)
!16999 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !16954, file: !16954, line: 124, type: !17000, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !17002)
!17000 = !DISubroutineType(types: !17001)
!17001 = !{!102, !217, !217}
!17002 = !{!17003, !17004, !17005, !17006}
!17003 = !DILocalVariable(name: "align", arg: 1, scope: !16999, file: !16954, line: 124, type: !217)
!17004 = !DILocalVariable(name: "size", arg: 2, scope: !16999, file: !16954, line: 124, type: !217)
!17005 = !DILocalVariable(name: "ret", scope: !16999, file: !16954, line: 126, type: !102)
!17006 = !DILocalVariable(name: "heap", scope: !16999, file: !16954, line: 127, type: !16959)
!17007 = !DILocation(line: 0, scope: !16999)
!17008 = !DILocation(line: 129, column: 6, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !16999, file: !16954, line: 129, column: 6)
!17010 = !DILocation(line: 129, column: 6, scope: !16999)
!17011 = !DILocation(line: 132, column: 10, scope: !17012)
!17012 = distinct !DILexicalBlock(scope: !17009, file: !16954, line: 131, column: 9)
!17013 = !DILocation(line: 132, column: 20, scope: !17012)
!17014 = !DILocation(line: 135, column: 11, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !16999, file: !16954, line: 135, column: 6)
!17016 = !DILocation(line: 135, column: 6, scope: !16999)
!17017 = !DILocation(line: 136, column: 9, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !17015, file: !16954, line: 135, column: 20)
!17019 = !DILocation(line: 137, column: 2, scope: !17018)
!17020 = !DILocation(line: 0, scope: !17015)
!17021 = !DILocation(line: 141, column: 2, scope: !16999)
!17022 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !16954, file: !16954, line: 12, type: !17023, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !17025)
!17023 = !DISubroutineType(types: !17024)
!17024 = !{!102, !16959, !217, !217}
!17025 = !{!17026, !17027, !17028, !17029, !17030, !17031}
!17026 = !DILocalVariable(name: "heap", arg: 1, scope: !17022, file: !16954, line: 12, type: !16959)
!17027 = !DILocalVariable(name: "align", arg: 2, scope: !17022, file: !16954, line: 12, type: !217)
!17028 = !DILocalVariable(name: "size", arg: 3, scope: !17022, file: !16954, line: 12, type: !217)
!17029 = !DILocalVariable(name: "mem", scope: !17022, file: !16954, line: 14, type: !102)
!17030 = !DILocalVariable(name: "heap_ref", scope: !17022, file: !16954, line: 15, type: !16958)
!17031 = !DILocalVariable(name: "__align", scope: !17022, file: !16954, line: 16, type: !217)
!17032 = !DILocation(line: 0, scope: !17022)
!17033 = !DILocation(line: 24, column: 6, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17022, file: !16954, line: 24, column: 6)
!17035 = !DILocation(line: 24, column: 6, scope: !17022)
!17036 = !DILocation(line: 27, column: 18, scope: !17022)
!17037 = !DILocation(line: 29, column: 44, scope: !17022)
!17038 = !DILocation(line: 29, column: 8, scope: !17022)
!17039 = !DILocation(line: 30, column: 10, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17022, file: !16954, line: 30, column: 6)
!17041 = !DILocation(line: 30, column: 6, scope: !17022)
!17042 = !DILocation(line: 34, column: 13, scope: !17022)
!17043 = !DILocation(line: 35, column: 12, scope: !17022)
!17044 = !DILocation(line: 36, column: 8, scope: !17022)
!17045 = !DILocation(line: 40, column: 2, scope: !17022)
!17046 = !DILocation(line: 41, column: 1, scope: !17022)
!17047 = distinct !DISubprogram(name: "size_add_overflow", scope: !17048, file: !17048, line: 47, type: !17049, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !17051)
!17048 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17049 = !DISubroutineType(types: !17050)
!17050 = !{!170, !217, !217, !2616}
!17051 = !{!17052, !17053, !17054}
!17052 = !DILocalVariable(name: "a", arg: 1, scope: !17047, file: !17048, line: 47, type: !217)
!17053 = !DILocalVariable(name: "b", arg: 2, scope: !17047, file: !17048, line: 47, type: !217)
!17054 = !DILocalVariable(name: "result", arg: 3, scope: !17047, file: !17048, line: 47, type: !2616)
!17055 = !DILocation(line: 0, scope: !17047)
!17056 = !DILocation(line: 49, column: 9, scope: !17047)
!17057 = !DILocation(line: 49, column: 2, scope: !17047)
!17058 = distinct !DISubprogram(name: "boot_banner", scope: !17059, file: !17059, line: 26, type: !3154, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3140, retainedNodes: !330)
!17059 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17060 = !DILocation(line: 34, column: 2, scope: !17058)
!17061 = !DILocation(line: 36, column: 1, scope: !17058)
!17062 = distinct !DISubprogram(name: "statics_init", scope: !2531, file: !2531, line: 21, type: !2537, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17063)
!17063 = !{!17064, !17065}
!17064 = !DILocalVariable(name: "unused", arg: 1, scope: !17062, file: !2531, line: 21, type: !2539)
!17065 = !DILocalVariable(name: "h", scope: !17066, file: !2531, line: 24, type: !17067)
!17066 = distinct !DILexicalBlock(scope: !17062, file: !2531, line: 24, column: 2)
!17067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17068, size: 32)
!17068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !309, line: 5073, size: 160, elements: !17069)
!17069 = !{!17070, !17076, !17082}
!17070 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17068, file: !309, line: 5074, baseType: !17071, size: 96)
!17071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !485, line: 56, size: 96, elements: !17072)
!17072 = !{!17073, !17074, !17075}
!17073 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17071, file: !485, line: 57, baseType: !488, size: 32)
!17074 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17071, file: !485, line: 58, baseType: !102, size: 32, offset: 32)
!17075 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17071, file: !485, line: 59, baseType: !217, size: 32, offset: 64)
!17076 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17068, file: !309, line: 5075, baseType: !17077, size: 64, offset: 96)
!17077 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !333, line: 233, baseType: !17078)
!17078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 231, size: 64, elements: !17079)
!17079 = !{!17080}
!17080 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17078, file: !333, line: 232, baseType: !17081, size: 64)
!17081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !338, line: 48, baseType: !2517)
!17082 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17068, file: !309, line: 5076, baseType: !17083, offset: 160)
!17083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !329, line: 43, elements: !330)
!17084 = !DILocation(line: 0, scope: !17062)
!17085 = !DILocation(line: 0, scope: !17066)
!17086 = !DILocation(line: 24, column: 2, scope: !17066)
!17087 = !DILocation(line: 52, column: 2, scope: !17062)
!17088 = !DILocation(line: 49, column: 27, scope: !17089)
!17089 = distinct !DILexicalBlock(scope: !17090, file: !2531, line: 48, column: 3)
!17090 = distinct !DILexicalBlock(scope: !17091, file: !2531, line: 24, column: 36)
!17091 = distinct !DILexicalBlock(scope: !17066, file: !2531, line: 24, column: 2)
!17092 = !DILocation(line: 49, column: 45, scope: !17089)
!17093 = !DILocation(line: 49, column: 4, scope: !17089)
!17094 = !DILocation(line: 24, column: 2, scope: !17091)
!17095 = !DILocation(line: 24, column: 2, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17091, file: !2531, line: 24, column: 2)
!17097 = distinct !{!17097, !17086, !17098}
!17098 = !DILocation(line: 51, column: 2, scope: !17066)
!17099 = distinct !DISubprogram(name: "k_heap_init", scope: !2531, file: !2531, line: 13, type: !17100, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17102)
!17100 = !DISubroutineType(types: !17101)
!17101 = !{null, !17067, !102, !217}
!17102 = !{!17103, !17104, !17105}
!17103 = !DILocalVariable(name: "h", arg: 1, scope: !17099, file: !2531, line: 13, type: !17067)
!17104 = !DILocalVariable(name: "mem", arg: 2, scope: !17099, file: !2531, line: 13, type: !102)
!17105 = !DILocalVariable(name: "bytes", arg: 3, scope: !17099, file: !2531, line: 13, type: !217)
!17106 = !DILocation(line: 0, scope: !17099)
!17107 = !DILocation(line: 15, column: 19, scope: !17099)
!17108 = !DILocation(line: 15, column: 2, scope: !17099)
!17109 = !DILocation(line: 16, column: 20, scope: !17099)
!17110 = !DILocation(line: 16, column: 2, scope: !17099)
!17111 = !DILocation(line: 19, column: 1, scope: !17099)
!17112 = distinct !DISubprogram(name: "z_waitq_init", scope: !13192, file: !13192, line: 47, type: !17113, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17116)
!17113 = !DISubroutineType(types: !17114)
!17114 = !{null, !17115}
!17115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17077, size: 32)
!17116 = !{!17117}
!17117 = !DILocalVariable(name: "w", arg: 1, scope: !17112, file: !13192, line: 47, type: !17115)
!17118 = !DILocation(line: 0, scope: !17112)
!17119 = !DILocation(line: 49, column: 21, scope: !17112)
!17120 = !DILocation(line: 49, column: 2, scope: !17112)
!17121 = !DILocation(line: 50, column: 1, scope: !17112)
!17122 = distinct !DISubprogram(name: "sys_dlist_init", scope: !338, file: !338, line: 197, type: !17123, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17126)
!17123 = !DISubroutineType(types: !17124)
!17124 = !{null, !17125}
!17125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17081, size: 32)
!17126 = !{!17127}
!17127 = !DILocalVariable(name: "list", arg: 1, scope: !17122, file: !338, line: 197, type: !17125)
!17128 = !DILocation(line: 0, scope: !17122)
!17129 = !DILocation(line: 199, column: 8, scope: !17122)
!17130 = !DILocation(line: 199, column: 13, scope: !17122)
!17131 = !DILocation(line: 200, column: 8, scope: !17122)
!17132 = !DILocation(line: 200, column: 13, scope: !17122)
!17133 = !DILocation(line: 201, column: 1, scope: !17122)
!17134 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2531, file: !2531, line: 64, type: !17135, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17141)
!17135 = !DISubroutineType(types: !17136)
!17136 = !{!102, !17067, !217, !217, !17137}
!17137 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !214, line: 67, baseType: !17138)
!17138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !214, line: 65, size: 64, elements: !17139)
!17139 = !{!17140}
!17140 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17138, file: !214, line: 66, baseType: !213, size: 64)
!17141 = !{!17142, !17143, !17144, !17145, !17146, !17147, !17148, !17149, !17154}
!17142 = !DILocalVariable(name: "h", arg: 1, scope: !17134, file: !2531, line: 64, type: !17067)
!17143 = !DILocalVariable(name: "align", arg: 2, scope: !17134, file: !2531, line: 64, type: !217)
!17144 = !DILocalVariable(name: "bytes", arg: 3, scope: !17134, file: !2531, line: 64, type: !217)
!17145 = !DILocalVariable(name: "timeout", arg: 4, scope: !17134, file: !2531, line: 65, type: !17137)
!17146 = !DILocalVariable(name: "now", scope: !17134, file: !2531, line: 67, type: !215)
!17147 = !DILocalVariable(name: "end", scope: !17134, file: !2531, line: 67, type: !215)
!17148 = !DILocalVariable(name: "ret", scope: !17134, file: !2531, line: 68, type: !102)
!17149 = !DILocalVariable(name: "key", scope: !17134, file: !2531, line: 72, type: !17150)
!17150 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !329, line: 106, baseType: !17151)
!17151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !329, line: 32, size: 32, elements: !17152)
!17152 = !{!17153}
!17153 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17151, file: !329, line: 33, baseType: !103, size: 32)
!17154 = !DILocalVariable(name: "blocked_alloc", scope: !17134, file: !2531, line: 78, type: !170)
!17155 = !DILocation(line: 0, scope: !17134)
!17156 = !DILocation(line: 67, column: 21, scope: !17134)
!17157 = !DILocation(line: 70, column: 8, scope: !17134)
!17158 = !DILocation(line: 72, column: 41, scope: !17134)
!17159 = !DILocalVariable(name: "l", arg: 1, scope: !17160, file: !329, line: 136, type: !17163)
!17160 = distinct !DISubprogram(name: "k_spin_lock", scope: !329, file: !329, line: 136, type: !17161, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17164)
!17161 = !DISubroutineType(types: !17162)
!17162 = !{!17150, !17163}
!17163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17083, size: 32)
!17164 = !{!17159, !17165}
!17165 = !DILocalVariable(name: "k", scope: !17160, file: !329, line: 139, type: !17150)
!17166 = !DILocation(line: 0, scope: !17160, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 72, column: 25, scope: !17134)
!17168 = !DILocation(line: 55, column: 2, scope: !17169, inlinedAt: !17173)
!17169 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5695, file: !5695, line: 42, type: !5696, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17170)
!17170 = !{!17171, !17172}
!17171 = !DILocalVariable(name: "key", scope: !17169, file: !5695, line: 44, type: !32)
!17172 = !DILocalVariable(name: "tmp", scope: !17169, file: !5695, line: 53, type: !32)
!17173 = distinct !DILocation(line: 145, column: 10, scope: !17160, inlinedAt: !17167)
!17174 = !{i64 1649405}
!17175 = !DILocation(line: 0, scope: !17169, inlinedAt: !17173)
!17176 = !DILocation(line: 81, column: 9, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17134, file: !2531, line: 80, column: 22)
!17178 = !DILocation(line: 83, column: 9, scope: !17177)
!17179 = !DILocation(line: 85, column: 12, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17177, file: !2531, line: 84, column: 7)
!17181 = !DILocation(line: 85, column: 21, scope: !17180)
!17182 = !DILocation(line: 85, column: 30, scope: !17180)
!17183 = !DILocation(line: 85, column: 37, scope: !17180)
!17184 = !DILocation(line: 84, column: 7, scope: !17177)
!17185 = !DILocation(line: 99, column: 10, scope: !17177)
!17186 = !DILocation(line: 0, scope: !17160, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 101, column: 9, scope: !17177)
!17188 = !DILocation(line: 55, column: 2, scope: !17169, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 145, column: 10, scope: !17160, inlinedAt: !17187)
!17190 = !DILocation(line: 0, scope: !17169, inlinedAt: !17189)
!17191 = distinct !{!17191, !17192, !17193}
!17192 = !DILocation(line: 80, column: 2, scope: !17134)
!17193 = !DILocation(line: 102, column: 2, scope: !17134)
!17194 = !DILocalVariable(name: "key", arg: 2, scope: !17195, file: !329, line: 190, type: !17150)
!17195 = distinct !DISubprogram(name: "k_spin_unlock", scope: !329, file: !329, line: 189, type: !17196, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17198)
!17196 = !DISubroutineType(types: !17197)
!17197 = !{null, !17163, !17150}
!17198 = !{!17199, !17194}
!17199 = !DILocalVariable(name: "l", arg: 1, scope: !17195, file: !329, line: 189, type: !17163)
!17200 = !DILocation(line: 0, scope: !17195, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 106, column: 2, scope: !17134)
!17202 = !DILocalVariable(name: "key", arg: 1, scope: !17203, file: !5695, line: 84, type: !32)
!17203 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5695, file: !5695, line: 84, type: !5706, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17204)
!17204 = !{!17202}
!17205 = !DILocation(line: 0, scope: !17203, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 215, column: 2, scope: !17195, inlinedAt: !17201)
!17207 = !DILocation(line: 95, column: 2, scope: !17203, inlinedAt: !17206)
!17208 = !{i64 1650222}
!17209 = !DILocation(line: 107, column: 2, scope: !17134)
!17210 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2531, file: !2531, line: 110, type: !17211, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17213)
!17211 = !DISubroutineType(types: !17212)
!17212 = !{!102, !17067, !217, !17137}
!17213 = !{!17214, !17215, !17216, !17217}
!17214 = !DILocalVariable(name: "h", arg: 1, scope: !17210, file: !2531, line: 110, type: !17067)
!17215 = !DILocalVariable(name: "bytes", arg: 2, scope: !17210, file: !2531, line: 110, type: !217)
!17216 = !DILocalVariable(name: "timeout", arg: 3, scope: !17210, file: !2531, line: 110, type: !17137)
!17217 = !DILocalVariable(name: "ret", scope: !17210, file: !2531, line: 114, type: !102)
!17218 = !DILocation(line: 0, scope: !17210)
!17219 = !DILocation(line: 114, column: 14, scope: !17210)
!17220 = !DILocation(line: 118, column: 2, scope: !17210)
!17221 = distinct !DISubprogram(name: "k_heap_free", scope: !2531, file: !2531, line: 121, type: !17222, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17224)
!17222 = !DISubroutineType(types: !17223)
!17223 = !{null, !17067, !102}
!17224 = !{!17225, !17226, !17227}
!17225 = !DILocalVariable(name: "h", arg: 1, scope: !17221, file: !2531, line: 121, type: !17067)
!17226 = !DILocalVariable(name: "mem", arg: 2, scope: !17221, file: !2531, line: 121, type: !102)
!17227 = !DILocalVariable(name: "key", scope: !17221, file: !2531, line: 123, type: !17150)
!17228 = !DILocation(line: 0, scope: !17221)
!17229 = !DILocation(line: 0, scope: !17160, inlinedAt: !17230)
!17230 = distinct !DILocation(line: 123, column: 25, scope: !17221)
!17231 = !DILocation(line: 55, column: 2, scope: !17169, inlinedAt: !17232)
!17232 = distinct !DILocation(line: 145, column: 10, scope: !17160, inlinedAt: !17230)
!17233 = !DILocation(line: 0, scope: !17169, inlinedAt: !17232)
!17234 = !DILocation(line: 125, column: 20, scope: !17221)
!17235 = !DILocation(line: 125, column: 2, scope: !17221)
!17236 = !DILocation(line: 128, column: 60, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17221, file: !2531, line: 128, column: 6)
!17238 = !DILocation(line: 128, column: 43, scope: !17237)
!17239 = !DILocation(line: 128, column: 68, scope: !17237)
!17240 = !DILocation(line: 128, column: 6, scope: !17221)
!17241 = !DILocation(line: 123, column: 41, scope: !17221)
!17242 = !DILocation(line: 129, column: 3, scope: !17243)
!17243 = distinct !DILexicalBlock(scope: !17237, file: !2531, line: 128, column: 74)
!17244 = !DILocation(line: 130, column: 2, scope: !17243)
!17245 = !DILocation(line: 0, scope: !17195, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 131, column: 3, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17237, file: !2531, line: 130, column: 9)
!17248 = !DILocation(line: 0, scope: !17203, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 215, column: 2, scope: !17195, inlinedAt: !17246)
!17250 = !DILocation(line: 95, column: 2, scope: !17203, inlinedAt: !17249)
!17251 = !DILocation(line: 133, column: 1, scope: !17221)
