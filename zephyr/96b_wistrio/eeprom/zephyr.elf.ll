; ModuleID = 'build/96b_wistrio/eeprom/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct.perisistant_values }
%struct.perisistant_values = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.k_mutex = type { %union.anon, %struct.k_thread*, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.perisistant_values }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct.eeprom_driver_api = type { i32 (%struct.device*, i32, i8*, i32)*, i32 (%struct.device*, i32, i8*, i32)*, i32 (%struct.device*)* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.perisistant_values*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.perisistant_values*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.FLASH_ProcessTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.FLASH_OBProgramInitTypeDef = type { i32, i32, i32, i8, i8, i8 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229279 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229269 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229259 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229249 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229239 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229229 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231220 to i8*), void (i8*)* inttoptr (i32 134229219 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [33 x i8] c"Using eeprom with size of: %zu.\0A\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Error: Couldn't read eeprom: err: %d.\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Device booted %d times.\0A\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"Error: Couldn't write eeprom: err:%d.\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"Reset the MCU to see the increasing boot counter.\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [84 x i8] c"\0AError: Device \22%s\22 is not ready; check the driver initialization logs for errors.\0A\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Found EEPROM device \22%s\22\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.7 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [35 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_30 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_30 to i8*), i8* bitcast (%struct.k_mutex* @lock to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !179
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !208
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !216
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !362
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !398
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0), %union.anon.1 { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.31, i32 0, i32 0), %union.anon.1 { i32 285933596 } }], align 4, !dbg !408
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !413
@.str.30 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.31 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !433
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !541
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !694
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !663
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !646
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !619
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !635
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !665
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !679
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !681
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !683
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !685
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !687
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !689
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !699
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !726
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !803
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !792
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !844
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !715
@.str.48 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.perisistant_values { i32 28, i32 1 } }, align 4, !dbg !910
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1157
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1135
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1121
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1069
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !713
@.str.1.51 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.perisistant_values { i32 28, i32 2 } }, align 4, !dbg !1159
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1139
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1137
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !711
@.str.2.52 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.perisistant_values { i32 28, i32 4 } }, align 4, !dbg !1172
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1143
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1141
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1095
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !709
@.str.3.53 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.perisistant_values { i32 28, i32 8 } }, align 4, !dbg !1174
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1147
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1145
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1104
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !707
@.str.4.54 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.perisistant_values { i32 28, i32 16 } }, align 4, !dbg !1176
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1151
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1149
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1110
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !705
@.str.5.55 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct.perisistant_values { i32 28, i32 32 } }, align 4, !dbg !1178
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1155
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1153
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1119
@lock = dso_local global %struct.k_mutex { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @lock, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @lock, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.lock", align 4, !dbg !1180
@__devicehdl_dts_ord_30 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !721
@.str.61 = private unnamed_addr constant [15 x i8] c"eeprom@8080000\00", align 1
@eeprom_config = internal constant %struct.perisistant_values { i32 134742016, i32 4096 }, align 4, !dbg !1253
@eeprom_stm32_api = internal constant %struct.eeprom_driver_api { i32 (%struct.device*, i32, i8*, i32)* @eeprom_stm32_read, i32 (%struct.device*, i32, i8*, i32)* @eeprom_stm32_write, i32 (%struct.device*)* @eeprom_stm32_size }, align 4, !dbg !1260
@__devstate_dts_ord_30 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1251
@__device_dts_ord_30 = dso_local constant %struct.device { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i8* bitcast (%struct.perisistant_values* @eeprom_config to i8*), i8* bitcast (%struct.eeprom_driver_api* @eeprom_stm32_api to i8*), %struct.device_state* @__devstate_dts_ord_30, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_30, i32 0, i32 0) }, section ".z_device_POST_KERNEL50_", align 4, !dbg !1239
@__init___device_dts_ord_30 = internal constant %struct.init_entry { i32 (%struct.device*)* @eeprom_stm32_init, %struct.device* @__device_dts_ord_30 }, section ".z_init_POST_KERNEL50_", align 4, !dbg !1241
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !719
@.str.63 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.perisistant_values* getelementptr inbounds ([1 x %struct.perisistant_values], [1 x %struct.perisistant_values]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1368
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1565
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1524
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1567
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1509
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1511
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !717
@.str.1.66 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct.perisistant_values* getelementptr inbounds ([1 x %struct.perisistant_values], [1 x %struct.perisistant_values]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1574
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1526
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1599
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.66, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1520
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1522
@pclken_0 = internal constant [1 x %struct.perisistant_values] [%struct.perisistant_values { i32 36, i32 131072 }], align 4, !dbg !1528
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1536
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.perisistant_values* getelementptr inbounds ([2 x %struct.perisistant_values], [2 x %struct.perisistant_values]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1559
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct.perisistant_values] [%struct.perisistant_values { i32 71, i32 512 }, %struct.perisistant_values { i32 103, i32 0 }], align 4, !dbg !1562
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !776
@pclken_1 = internal constant [1 x %struct.perisistant_values] [%struct.perisistant_values { i32 32, i32 16384 }], align 4, !dbg !1591
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1593
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.perisistant_values* getelementptr inbounds ([2 x %struct.perisistant_values], [2 x %struct.perisistant_values]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1595
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct.perisistant_values] [%struct.perisistant_values { i32 295, i32 512 }, %struct.perisistant_values { i32 327, i32 0 }], align 4, !dbg !1597
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1601
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1709
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1711
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1707
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1678
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1713
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1067
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1084
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.52, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1093
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1102
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1108
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1117
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1800
@pFlash = dso_local global %struct.FLASH_ProcessTypeDef zeroinitializer, align 4, !dbg !1835
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1824
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1827
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1831
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1879
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1886
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2096
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2105
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2112
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2117
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.123 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.126, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.127, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.128, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.129, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.130, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.124, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.131, i32 0, i32 0)], align 4, !dbg !2143
@.str.125 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.126 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.127 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.128 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.129 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.130 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.124 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.131 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2257
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock.144 = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2270
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2378
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2486
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2489
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2491
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2110
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2107
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2493
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2529
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1974
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2527
@.str.210 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3122 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3180, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3204, !srcloc !3205
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3206, !srcloc !3207
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3230, !srcloc !3231
  ret void, !dbg !3232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3235 {
  %1 = alloca %struct.perisistant_values, align 4
  %2 = tail call fastcc %struct.device* @get_eeprom_device() #24, !dbg !3246
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !3238, metadata !DIExpression()), !dbg !3247
  %3 = bitcast %struct.perisistant_values* %1 to i8*, !dbg !3248
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #23, !dbg !3248
  call void @llvm.dbg.declare(metadata %struct.perisistant_values* %1, metadata !3240, metadata !DIExpression()), !dbg !3249
  %4 = icmp eq %struct.device* %2, null, !dbg !3250
  br i1 %4, label %26, label %5, !dbg !3252

5:                                                ; preds = %0
  %6 = tail call fastcc i32 @eeprom_get_size(%struct.device* noundef nonnull %2) #24, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %6, metadata !3239, metadata !DIExpression()), !dbg !3247
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i32 0, i32 0), i32 noundef %6) #25, !dbg !3254
  %7 = call fastcc i32 @eeprom_read(%struct.device* noundef nonnull %2, i8* noundef nonnull %3) #24, !dbg !3255
  call void @llvm.dbg.value(metadata i32 %7, metadata !3245, metadata !DIExpression()), !dbg !3247
  %8 = icmp slt i32 %7, 0, !dbg !3256
  br i1 %8, label %9, label %10, !dbg !3258

9:                                                ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #25, !dbg !3259
  br label %26, !dbg !3261

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %1, i32 0, i32 0, !dbg !3262
  %12 = load i32, i32* %11, align 4, !dbg !3262
  %13 = icmp eq i32 %12, 15636227, !dbg !3264
  br i1 %13, label %14, label %18, !dbg !3265

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !3266
  %17 = add i32 %16, 1, !dbg !3265
  br label %19, !dbg !3265

18:                                               ; preds = %10
  store i32 15636227, i32* %11, align 4, !dbg !3267
  br label %19, !dbg !3269

19:                                               ; preds = %14, %18
  %20 = phi i32 [ %17, %14 ], [ 1, %18 ]
  %21 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %1, i32 0, i32 1, !dbg !3270
  store i32 %20, i32* %21, align 4, !dbg !3266
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20) #25, !dbg !3271
  %22 = call fastcc i32 @eeprom_write(%struct.device* noundef nonnull %2, i8* noundef nonnull %3) #24, !dbg !3272
  call void @llvm.dbg.value(metadata i32 %22, metadata !3245, metadata !DIExpression()), !dbg !3247
  %23 = icmp slt i32 %22, 0, !dbg !3273
  br i1 %23, label %24, label %25, !dbg !3275

24:                                               ; preds = %19
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef %22) #25, !dbg !3276
  br label %26, !dbg !3278

25:                                               ; preds = %19
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3279
  br label %26, !dbg !3280

26:                                               ; preds = %0, %25, %24, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #23, !dbg !3280
  ret void, !dbg !3280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @get_eeprom_device() unnamed_addr #1 !dbg !3281 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_30, metadata !3285, metadata !DIExpression()), !dbg !3287
  %1 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !3288
  %2 = load i8*, i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_30, i32 0, i32 0), align 4, !dbg !3287
  %3 = select i1 %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.5, i32 0, i32 0), !dbg !3287
  %4 = select i1 %1, %struct.device* @__device_dts_ord_30, %struct.device* null, !dbg !3287
  tail call void (i8*, ...) @printk(i8* noundef %3, i8* noundef %2) #25, !dbg !3287
  ret %struct.device* %4, !dbg !3290
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @eeprom_get_size(%struct.device* noundef %0) unnamed_addr #1 !dbg !3291 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3294, metadata !DIExpression()), !dbg !3295
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3296, !srcloc !3298
  %2 = tail call fastcc i32 @z_impl_eeprom_get_size(%struct.device* noundef %0) #24, !dbg !3299
  ret i32 %2, !dbg !3300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @eeprom_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3303, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i32 0, metadata !3304, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i8* %1, metadata !3305, metadata !DIExpression()), !dbg !3307
  call void @llvm.dbg.value(metadata i32 8, metadata !3306, metadata !DIExpression()), !dbg !3307
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3308, !srcloc !3310
  %3 = tail call fastcc i32 @z_impl_eeprom_read(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !3311
  ret i32 %3, !dbg !3312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @eeprom_write(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3313 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3315, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i32 0, metadata !3316, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i8* %1, metadata !3317, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i32 8, metadata !3318, metadata !DIExpression()), !dbg !3319
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3320, !srcloc !3322
  %3 = tail call fastcc i32 @z_impl_eeprom_write(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !3323
  ret i32 %3, !dbg !3324
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_eeprom_write(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3327, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i32 0, metadata !3328, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i8* %1, metadata !3329, metadata !DIExpression()), !dbg !3332
  call void @llvm.dbg.value(metadata i32 8, metadata !3330, metadata !DIExpression()), !dbg !3332
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3333
  %4 = bitcast i8** %3 to %struct.eeprom_driver_api**, !dbg !3333
  %5 = load %struct.eeprom_driver_api*, %struct.eeprom_driver_api** %4, align 4, !dbg !3333
  call void @llvm.dbg.value(metadata %struct.eeprom_driver_api* %5, metadata !3331, metadata !DIExpression()), !dbg !3332
  %6 = getelementptr inbounds %struct.eeprom_driver_api, %struct.eeprom_driver_api* %5, i32 0, i32 1, !dbg !3334
  %7 = load i32 (%struct.device*, i32, i8*, i32)*, i32 (%struct.device*, i32, i8*, i32)** %6, align 4, !dbg !3334
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef 0, i8* noundef %1, i32 noundef 8) #25, !dbg !3335
  ret i32 %8, !dbg !3336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_eeprom_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3337 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3339, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 0, metadata !3340, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i8* %1, metadata !3341, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 8, metadata !3342, metadata !DIExpression()), !dbg !3344
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3345
  %4 = bitcast i8** %3 to %struct.eeprom_driver_api**, !dbg !3345
  %5 = load %struct.eeprom_driver_api*, %struct.eeprom_driver_api** %4, align 4, !dbg !3345
  call void @llvm.dbg.value(metadata %struct.eeprom_driver_api* %5, metadata !3343, metadata !DIExpression()), !dbg !3344
  %6 = getelementptr inbounds %struct.eeprom_driver_api, %struct.eeprom_driver_api* %5, i32 0, i32 0, !dbg !3346
  %7 = load i32 (%struct.device*, i32, i8*, i32)*, i32 (%struct.device*, i32, i8*, i32)** %6, align 4, !dbg !3346
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef 0, i8* noundef %1, i32 noundef 8) #25, !dbg !3347
  ret i32 %8, !dbg !3348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_eeprom_get_size(%struct.device* noundef %0) unnamed_addr #1 !dbg !3349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3351, metadata !DIExpression()), !dbg !3353
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3354
  %3 = bitcast i8** %2 to %struct.eeprom_driver_api**, !dbg !3354
  %4 = load %struct.eeprom_driver_api*, %struct.eeprom_driver_api** %3, align 4, !dbg !3354
  call void @llvm.dbg.value(metadata %struct.eeprom_driver_api* %4, metadata !3352, metadata !DIExpression()), !dbg !3353
  %5 = getelementptr inbounds %struct.eeprom_driver_api, %struct.eeprom_driver_api* %4, i32 0, i32 2, !dbg !3355
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3355
  %7 = tail call i32 %6(%struct.device* noundef %0) #25, !dbg !3356
  ret i32 %7, !dbg !3357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3358 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_30, metadata !3363, metadata !DIExpression()), !dbg !3364
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3365, !srcloc !3367
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !3368
  ret i1 %1, !dbg !3369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3370 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_30, metadata !3372, metadata !DIExpression()), !dbg !3373
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_30) #25, !dbg !3374
  ret i1 %1, !dbg !3375
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3378, metadata !DIExpression()), !dbg !3379
  ret i32 0, !dbg !3380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3381 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3385, metadata !DIExpression()), !dbg !3386
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3387
  ret void, !dbg !3388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3389 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3392
  ret i8* %1, !dbg !3393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3394 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3406, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i8* %0, metadata !3405, metadata !DIExpression()), !dbg !3417
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3418
  ret void, !dbg !3420
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3425, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %1, metadata !3426, metadata !DIExpression()), !dbg !3427
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3428
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3428
  ret i32 %4, !dbg !3429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3430 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3442, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3439, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i8* %1, metadata !3440, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i8* %2, metadata !3441, metadata !DIExpression()), !dbg !3443
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3444
  ret void, !dbg !3445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3450, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i32 %1, metadata !3451, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i32 0, metadata !3452, metadata !DIExpression()), !dbg !3453
  %3 = icmp eq i32 %1, 0, !dbg !3454
  br i1 %3, label %13, label %4, !dbg !3457

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3452, metadata !DIExpression()), !dbg !3453
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3458
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3460
  %8 = load i8, i8* %7, align 1, !dbg !3460
  %9 = zext i8 %8 to i32, !dbg !3460
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3458
  %11 = add nuw i32 %5, 1, !dbg !3461
  call void @llvm.dbg.value(metadata i32 %11, metadata !3452, metadata !DIExpression()), !dbg !3453
  %12 = icmp eq i32 %11, %1, !dbg !3454
  br i1 %12, label %13, label %4, !dbg !3457, !llvm.loop !3462

13:                                               ; preds = %4, %2
  ret void, !dbg !3464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3465 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3469, metadata !DIExpression()), !dbg !3471
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3472
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3472
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3470, metadata !DIExpression()), !dbg !3473
  call void @llvm.va_start(i8* nonnull %3), !dbg !3474
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3475
  %5 = load i32, i32* %4, align 4, !dbg !3475
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3475
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3475
  call void @llvm.va_end(i8* nonnull %3), !dbg !3476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3477
  ret void, !dbg !3477
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3478 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3482, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.value(metadata i32 %1, metadata !3483, metadata !DIExpression()), !dbg !3487
  call void @llvm.dbg.value(metadata i8* %2, metadata !3484, metadata !DIExpression()), !dbg !3487
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3488
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3485, metadata !DIExpression()), !dbg !3489
  call void @llvm.va_start(i8* nonnull %5), !dbg !3490
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3491
  %7 = load i32, i32* %6, align 4, !dbg !3491
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3491
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %9, metadata !3486, metadata !DIExpression()), !dbg !3487
  call void @llvm.va_end(i8* nonnull %5), !dbg !3492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3493
  ret i32 %9, !dbg !3494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3495 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3502, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8* %0, metadata !3499, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 %1, metadata !3500, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i8* %2, metadata !3501, metadata !DIExpression()), !dbg !3509
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3510
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3510
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3503, metadata !DIExpression()), !dbg !3511
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3512
  store i8* %0, i8** %7, align 4, !dbg !3512
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3512
  store i32 %1, i32* %8, align 4, !dbg !3512
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3512
  store i32 0, i32* %9, align 4, !dbg !3512
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3513
  %10 = load i32, i32* %9, align 4, !dbg !3514
  %11 = load i32, i32* %8, align 4, !dbg !3516
  %12 = icmp slt i32 %10, %11, !dbg !3517
  br i1 %12, label %13, label %15, !dbg !3518

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3519
  store i8 0, i8* %14, align 1, !dbg !3521
  br label %15, !dbg !3522

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3523
  ret i32 %10, !dbg !3524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3530, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3531, metadata !DIExpression()), !dbg !3532
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3533
  %4 = load i8*, i8** %3, align 4, !dbg !3533
  %5 = icmp eq i8* %4, null, !dbg !3535
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3536
  br i1 %5, label %12, label %8, !dbg !3537

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3538
  %10 = load i32, i32* %9, align 4, !dbg !3538
  %11 = icmp slt i32 %7, %10, !dbg !3539
  br i1 %11, label %15, label %12, !dbg !3540

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3541
  %14 = add nsw i32 %7, 1, !dbg !3543
  store i32 %14, i32* %13, align 4, !dbg !3543
  br label %25, !dbg !3544

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3545
  %17 = icmp eq i32 %7, %16, !dbg !3547
  br i1 %17, label %18, label %21, !dbg !3548

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3549
  store i32 %19, i32* %6, align 4, !dbg !3549
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3551
  store i8 0, i8* %20, align 1, !dbg !3552
  br label %25, !dbg !3553

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3554
  %23 = add nsw i32 %7, 1, !dbg !3556
  store i32 %23, i32* %6, align 4, !dbg !3556
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3557
  store i8 %22, i8* %24, align 1, !dbg !3558
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3559
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3560 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3570, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i8* %1, metadata !3571, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i8* %2, metadata !3572, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.value(metadata i8* %3, metadata !3573, metadata !DIExpression()), !dbg !3574
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3575
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3576
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3577
  unreachable, !dbg !3578
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3579 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3683
  ret %struct.k_thread* %1, !dbg !3684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3690, metadata !DIExpression()), !dbg !3691
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3692, !srcloc !3694
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3695
  ret void, !dbg !3696
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3697 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3698, !srcloc !3700
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3701
  ret %struct.k_thread* %1, !dbg !3702
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3703 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3716, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3713, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %1, metadata !3714, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %2, metadata !3715, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %4, metadata !3717, metadata !DIExpression()), !dbg !3844
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3845
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3845
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3718, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 0, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i1 undef, metadata !3724, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3844
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3847

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3847

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3848
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3716, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %30, metadata !3715, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %29, metadata !3722, metadata !DIExpression()), !dbg !3844
  %31 = load i8, i8* %30, align 1, !dbg !3849
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3847

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3849
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %34, metadata !3715, metadata !DIExpression()), !dbg !3844
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %35, metadata !3726, metadata !DIExpression()), !dbg !3851
  %36 = icmp slt i32 %35, 0, !dbg !3852
  %37 = add i32 %29, 1, !dbg !3850
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %36, label %365, label %28, !llvm.loop !3854

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3856
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3731, metadata !DIExpression()), !dbg !3857
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3857
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3776, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3779, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8* %30, metadata !3782, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 -1, metadata !3783, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 -1, metadata !3784, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8* null, metadata !3785, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8* %14, metadata !3786, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 0, metadata !3787, metadata !DIExpression()), !dbg !3858
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !3859
  call void @llvm.dbg.value(metadata i8* %39, metadata !3715, metadata !DIExpression()), !dbg !3844
  %40 = load i24, i24* %15, align 8, !dbg !3860
  %41 = and i24 %40, 256, !dbg !3860
  %42 = icmp eq i24 %41, 0, !dbg !3860
  br i1 %42, label %51, label %43, !dbg !3862

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3863
  call void @llvm.dbg.value(metadata i8* %44, metadata !3716, metadata !DIExpression()), !dbg !3844
  %45 = bitcast i8* %27 to i32*, !dbg !3863
  %46 = load i32, i32* %45, align 4, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %46, metadata !3783, metadata !DIExpression()), !dbg !3858
  %47 = icmp slt i32 %46, 0, !dbg !3865
  br i1 %47, label %48, label %56, !dbg !3867

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3868
  store i24 %49, i24* %15, align 8, !dbg !3868
  %50 = sub nsw i32 0, %46, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %50, metadata !3783, metadata !DIExpression()), !dbg !3858
  br label %56, !dbg !3871

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3872
  %53 = icmp eq i24 %52, 0, !dbg !3872
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3874
  br label %56, !dbg !3874

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3875
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3858
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3716, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %58, metadata !3783, metadata !DIExpression()), !dbg !3858
  %60 = and i24 %57, 1024, !dbg !3875
  %61 = icmp eq i24 %60, 0, !dbg !3875
  br i1 %61, label %69, label %62, !dbg !3876

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3877
  call void @llvm.dbg.value(metadata i8* %63, metadata !3716, metadata !DIExpression()), !dbg !3844
  %64 = bitcast i8* %59 to i32*, !dbg !3877
  %65 = load i32, i32* %64, align 4, !dbg !3877
  call void @llvm.dbg.value(metadata i32 %65, metadata !3788, metadata !DIExpression()), !dbg !3878
  %66 = icmp slt i32 %65, 0, !dbg !3879
  br i1 %66, label %67, label %74, !dbg !3881

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3882
  store i24 %68, i24* %15, align 8, !dbg !3882
  br label %74, !dbg !3884

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3885
  %71 = icmp eq i24 %70, 0, !dbg !3885
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3887
  br label %74, !dbg !3887

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3888
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3858
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3858
  call void @llvm.dbg.value(metadata i8* %77, metadata !3716, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %76, metadata !3784, metadata !DIExpression()), !dbg !3858
  store i32 0, i32* %16, align 4, !dbg !3889
  store i32 0, i32* %17, align 8, !dbg !3890
  %78 = lshr i24 %75, 16, !dbg !3888
  call void @llvm.dbg.value(metadata i24 %78, metadata !3791, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3858
  %79 = lshr i24 %75, 11, !dbg !3891
  %80 = and i24 %79, 15, !dbg !3891
  %81 = zext i24 %80 to i32, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %81, metadata !3792, metadata !DIExpression()), !dbg !3858
  %82 = trunc i24 %78 to i3, !dbg !3892
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3892

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3893

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3896
  call void @llvm.dbg.value(metadata i8* %85, metadata !3716, metadata !DIExpression()), !dbg !3844
  %86 = bitcast i8* %77 to i32*, !dbg !3896
  %87 = load i32, i32* %86, align 4, !dbg !3896
  %88 = sext i32 %87 to i64, !dbg !3896
  store i64 %88, i64* %20, align 8, !dbg !3898
  br label %115, !dbg !3899

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3900
  call void @llvm.dbg.value(metadata i8* %90, metadata !3716, metadata !DIExpression()), !dbg !3844
  %91 = bitcast i8* %77 to i32*, !dbg !3900
  %92 = load i32, i32* %91, align 4, !dbg !3900
  %93 = sext i32 %92 to i64, !dbg !3900
  store i64 %93, i64* %20, align 8, !dbg !3903
  br label %115, !dbg !3904

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3905
  %96 = add i32 %95, 7, !dbg !3905
  %97 = and i32 %96, -8, !dbg !3905
  %98 = inttoptr i32 %97 to i8*, !dbg !3905
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3905
  call void @llvm.dbg.value(metadata i8* %99, metadata !3716, metadata !DIExpression()), !dbg !3844
  %100 = inttoptr i32 %97 to i64*, !dbg !3905
  %101 = load i64, i64* %100, align 8, !dbg !3905
  store i64 %101, i64* %20, align 8, !dbg !3906
  br label %115, !dbg !3907

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3908
  %104 = add i32 %103, 7, !dbg !3908
  %105 = and i32 %104, -8, !dbg !3908
  %106 = inttoptr i32 %105 to i8*, !dbg !3908
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3908
  call void @llvm.dbg.value(metadata i8* %107, metadata !3716, metadata !DIExpression()), !dbg !3844
  %108 = inttoptr i32 %105 to i64*, !dbg !3908
  %109 = load i64, i64* %108, align 8, !dbg !3908
  store i64 %109, i64* %20, align 8, !dbg !3909
  br label %115, !dbg !3910

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3911
  call void @llvm.dbg.value(metadata i8* %111, metadata !3716, metadata !DIExpression()), !dbg !3844
  %112 = bitcast i8* %77 to i32*, !dbg !3911
  %113 = load i32, i32* %112, align 4, !dbg !3911
  %114 = sext i32 %113 to i64, !dbg !3912
  store i64 %114, i64* %20, align 8, !dbg !3913
  br label %115, !dbg !3914

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3915
  call void @llvm.dbg.value(metadata i8* %117, metadata !3716, metadata !DIExpression()), !dbg !3844
  %118 = trunc i24 %79 to i4, !dbg !3916
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3916

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3917
  %121 = ashr exact i64 %120, 56, !dbg !3917
  store i64 %121, i64* %20, align 8, !dbg !3920
  br label %177, !dbg !3921

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3922
  %124 = ashr exact i64 %123, 48, !dbg !3922
  store i64 %124, i64* %20, align 8, !dbg !3925
  br label %177, !dbg !3926

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3927

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %127, metadata !3716, metadata !DIExpression()), !dbg !3844
  %128 = bitcast i8* %77 to i32*, !dbg !3930
  %129 = load i32, i32* %128, align 4, !dbg !3930
  %130 = zext i32 %129 to i64, !dbg !3930
  store i64 %130, i64* %20, align 8, !dbg !3932
  br label %157, !dbg !3933

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3934
  call void @llvm.dbg.value(metadata i8* %132, metadata !3716, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %132, metadata !3716, metadata !DIExpression()), !dbg !3844
  %133 = bitcast i8* %77 to i32*, !dbg !3934
  %134 = load i32, i32* %133, align 4, !dbg !3934
  %135 = zext i32 %134 to i64, !dbg !3934
  store i64 %135, i64* %20, align 8, !dbg !3934
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3936
  %138 = add i32 %137, 7, !dbg !3936
  %139 = and i32 %138, -8, !dbg !3936
  %140 = inttoptr i32 %139 to i8*, !dbg !3936
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %141, metadata !3716, metadata !DIExpression()), !dbg !3844
  %142 = inttoptr i32 %139 to i64*, !dbg !3936
  %143 = load i64, i64* %142, align 8, !dbg !3936
  store i64 %143, i64* %20, align 8, !dbg !3937
  br label %157, !dbg !3938

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3939
  %146 = add i32 %145, 7, !dbg !3939
  %147 = and i32 %146, -8, !dbg !3939
  %148 = inttoptr i32 %147 to i8*, !dbg !3939
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3939
  call void @llvm.dbg.value(metadata i8* %149, metadata !3716, metadata !DIExpression()), !dbg !3844
  %150 = inttoptr i32 %147 to i64*, !dbg !3939
  %151 = load i64, i64* %150, align 8, !dbg !3939
  store i64 %151, i64* %20, align 8, !dbg !3940
  br label %157, !dbg !3941

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3942
  call void @llvm.dbg.value(metadata i8* %153, metadata !3716, metadata !DIExpression()), !dbg !3844
  %154 = bitcast i8* %77 to i32*, !dbg !3942
  %155 = load i32, i32* %154, align 4, !dbg !3942
  %156 = zext i32 %155 to i64, !dbg !3943
  store i64 %156, i64* %20, align 8, !dbg !3944
  br label %157, !dbg !3945

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3946
  call void @llvm.dbg.value(metadata i8* %159, metadata !3716, metadata !DIExpression()), !dbg !3844
  %160 = trunc i24 %79 to i4, !dbg !3947
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3947

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3948
  store i64 %162, i64* %20, align 8, !dbg !3951
  br label %177, !dbg !3952

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3953
  store i64 %164, i64* %20, align 8, !dbg !3956
  br label %177, !dbg !3957

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3958
  %167 = add i32 %166, 7, !dbg !3958
  %168 = and i32 %167, -8, !dbg !3958
  %169 = inttoptr i32 %168 to i8*, !dbg !3958
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %170, metadata !3716, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %170, metadata !3716, metadata !DIExpression()), !dbg !3844
  %171 = inttoptr i32 %168 to double*, !dbg !3958
  %172 = load double, double* %171, align 8, !dbg !3958
  store double %172, double* %19, align 8, !dbg !3958
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3962
  call void @llvm.dbg.value(metadata i8* %174, metadata !3716, metadata !DIExpression()), !dbg !3844
  %175 = bitcast i8* %77 to i8**, !dbg !3962
  %176 = load i8*, i8** %175, align 4, !dbg !3962
  store i8* %176, i8** %18, align 8, !dbg !3965
  br label %177, !dbg !3966

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3858
  call void @llvm.dbg.value(metadata i8* %178, metadata !3716, metadata !DIExpression()), !dbg !3844
  %179 = and i24 %75, 3, !dbg !3967
  %180 = icmp eq i24 %179, 0, !dbg !3967
  br i1 %180, label %185, label %181, !dbg !3967

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %182, metadata !3793, metadata !DIExpression()), !dbg !3969
  %183 = icmp slt i32 %182, 0, !dbg !3970
  %184 = add i32 %182, %29, !dbg !3968
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3972
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3973

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !3974
  call void @llvm.dbg.value(metadata i32 %188, metadata !3797, metadata !DIExpression()), !dbg !3975
  %189 = icmp slt i32 %188, 0, !dbg !3976
  %190 = add i32 %29, 1, !dbg !3974
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3978
  call void @llvm.dbg.value(metadata i8* %192, metadata !3785, metadata !DIExpression()), !dbg !3858
  %193 = icmp sgt i32 %76, -1, !dbg !3979
  br i1 %193, label %194, label %196, !dbg !3981

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %195, metadata !3800, metadata !DIExpression()), !dbg !3984
  br label %241, !dbg !3985

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %197, metadata !3800, metadata !DIExpression()), !dbg !3984
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3785, metadata !DIExpression()), !dbg !3858
  %199 = load i64, i64* %20, align 8, !dbg !3988
  %200 = trunc i64 %199 to i8, !dbg !3989
  store i8 %200, i8* %10, align 1, !dbg !3990
  call void @llvm.dbg.value(metadata i8* %23, metadata !3786, metadata !DIExpression()), !dbg !3858
  br label %245, !dbg !3991

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3992
  %203 = icmp eq i24 %202, 0, !dbg !3992
  %204 = trunc i24 %75 to i8, !dbg !3994
  %205 = shl i8 %204, 1, !dbg !3994
  %206 = and i8 %205, 32, !dbg !3994
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3994
  call void @llvm.dbg.value(metadata i8 %207, metadata !3787, metadata !DIExpression()), !dbg !3858
  %208 = load i64, i64* %20, align 8, !dbg !3995
  call void @llvm.dbg.value(metadata i64 %208, metadata !3723, metadata !DIExpression()), !dbg !3844
  %209 = icmp slt i64 %208, 0, !dbg !3996
  br i1 %209, label %210, label %212, !dbg !3998

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3787, metadata !DIExpression()), !dbg !3858
  %211 = sub nsw i64 0, %208, !dbg !3999
  store i64 %211, i64* %20, align 8, !dbg !4001
  br label %212, !dbg !4002

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3858
  call void @llvm.dbg.value(metadata i8 %213, metadata !3787, metadata !DIExpression()), !dbg !3858
  %214 = load i64, i64* %20, align 8, !dbg !4003
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4004
  call void @llvm.dbg.value(metadata i8* %215, metadata !3785, metadata !DIExpression()), !dbg !3858
  br label %216, !dbg !4005

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4006
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4007
  call void @llvm.dbg.value(metadata i8* %218, metadata !3785, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 %217, metadata !3787, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.label(metadata !3843), !dbg !4008
  %219 = icmp sgt i32 %76, -1, !dbg !4009
  br i1 %219, label %222, label %220, !dbg !4010

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4011
  br label %245, !dbg !4010

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4013
  %224 = sub i32 %22, %223, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %224, metadata !3802, metadata !DIExpression()), !dbg !4014
  %225 = load i24, i24* %15, align 8, !dbg !4015
  %226 = and i24 %225, -65, !dbg !4015
  store i24 %226, i24* %15, align 8, !dbg !4015
  %227 = icmp ugt i32 %76, %224, !dbg !4016
  br i1 %227, label %228, label %245, !dbg !4018

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4019
  store i32 %229, i32* %16, align 4, !dbg !4021
  br label %245, !dbg !4022

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4023
  %232 = icmp eq i8* %231, null, !dbg !4025
  br i1 %232, label %245, label %233, !dbg !4026

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4027
  %235 = zext i32 %234 to i64, !dbg !4027
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4029
  call void @llvm.dbg.value(metadata i8* %236, metadata !3785, metadata !DIExpression()), !dbg !3858
  %237 = load i24, i24* %15, align 8, !dbg !4030
  %238 = or i24 %237, 1048576, !dbg !4030
  store i24 %238, i24* %15, align 8, !dbg !4030
  store i8 120, i8* %21, align 1, !dbg !4031
  br label %216, !dbg !4032

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4033
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4036
  br label %363, !dbg !4037

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4038
  call void @llvm.dbg.value(metadata i32 %242, metadata !3800, metadata !DIExpression()), !dbg !3984
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4039
  call void @llvm.dbg.value(metadata i32 -1, metadata !3784, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 %29, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8* %192, metadata !3785, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8* %243, metadata !3786, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 0, metadata !3787, metadata !DIExpression()), !dbg !3858
  %244 = icmp eq i8* %192, null, !dbg !4040
  br i1 %244, label %363, label %245, !dbg !4042, !llvm.loop !3854

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4011
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3858
  call void @llvm.dbg.value(metadata i32 0, metadata !3806, metadata !DIExpression()), !dbg !3858
  %250 = zext i8 %249 to i32, !dbg !4043
  %251 = icmp eq i8 %249, 0, !dbg !4045
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3858
  %252 = icmp sgt i32 %58, 0, !dbg !4046
  br i1 %252, label %253, label %302, !dbg !4047

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4011
  %255 = icmp eq i24 %254, 0, !dbg !4011
  %256 = ptrtoint i8* %248 to i32, !dbg !4048
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  %257 = ptrtoint i8* %247 to i32, !dbg !4048
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  %258 = xor i1 %251, true, !dbg !4049
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  %259 = sext i1 %258 to i32, !dbg !4049
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  %260 = lshr i24 %246, 19, !dbg !4050
  %261 = and i24 %260, 1, !dbg !4050
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4050
  %263 = zext i24 %262 to i32, !dbg !4050
  %264 = add i32 %257, %259, !dbg !4050
  %265 = add i32 %256, %263, !dbg !4050
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  %266 = and i24 %246, 4194304, !dbg !4051
  %267 = icmp eq i24 %266, 0, !dbg !4051
  %268 = load i32, i32* %16, align 4, !dbg !4053
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3858
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3858
  %269 = load i32, i32* %17, align 8, !dbg !4054
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4054
  call void @llvm.dbg.value(metadata i32 undef, metadata !3805, metadata !DIExpression()), !dbg !3858
  %271 = add i32 %264, %58, !dbg !4054
  %272 = add i32 %265, %268, !dbg !4054
  %273 = add i32 %272, %270, !dbg !4055
  %274 = sub i32 %271, %273, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %274, metadata !3783, metadata !DIExpression()), !dbg !3858
  %275 = and i24 %246, 4, !dbg !4056
  %276 = icmp eq i24 %275, 0, !dbg !4056
  br i1 %276, label %277, label %302, !dbg !4057

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3807, metadata !DIExpression()), !dbg !4058
  %278 = and i24 %246, 64, !dbg !4059
  %279 = icmp eq i24 %278, 0, !dbg !4059
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4060
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4060
  %282 = select i1 %279, i32 32, i32 48, !dbg !4060
  br i1 %280, label %287, label %283, !dbg !4060

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %284, metadata !3812, metadata !DIExpression()), !dbg !4062
  %285 = icmp slt i32 %284, 0, !dbg !4063
  %286 = add i32 %29, 1, !dbg !4061
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3858
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %290, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i8 undef, metadata !3807, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i8 %288, metadata !3787, metadata !DIExpression()), !dbg !3858
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4065
  %292 = add i32 %291, -1, !dbg !4065
  br label %293, !dbg !4065

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4066
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %295, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %294, metadata !3783, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i32 %294, metadata !3783, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3858
  %296 = icmp sgt i32 %294, 0, !dbg !4067
  br i1 %296, label %297, label %302, !dbg !4065

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %298, metadata !3783, metadata !DIExpression()), !dbg !3858
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %299, metadata !3818, metadata !DIExpression()), !dbg !4070
  %300 = icmp slt i32 %299, 0, !dbg !4071
  %301 = add i32 %295, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %300, label %361, label %293, !llvm.loop !4073

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3858
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3858
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %305, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %304, metadata !3783, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 %303, metadata !3787, metadata !DIExpression()), !dbg !3858
  %306 = icmp eq i8 %303, 0, !dbg !4075
  br i1 %306, label %312, label %307, !dbg !4076

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4077
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %309, metadata !3821, metadata !DIExpression()), !dbg !4079
  %310 = icmp slt i32 %309, 0, !dbg !4080
  %311 = add i32 %305, 1, !dbg !4078
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %313, metadata !3722, metadata !DIExpression()), !dbg !3844
  %314 = lshr i24 %246, 20, !dbg !4082
  %315 = lshr i24 %246, 19, !dbg !4083
  %316 = or i24 %314, %315, !dbg !4084
  %317 = and i24 %316, 1, !dbg !4084
  %318 = icmp eq i24 %317, 0, !dbg !4084
  br i1 %318, label %323, label %319, !dbg !4085

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %320, metadata !3825, metadata !DIExpression()), !dbg !4087
  %321 = icmp slt i32 %320, 0, !dbg !4088
  %322 = add i32 %313, 1, !dbg !4086
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %324, metadata !3722, metadata !DIExpression()), !dbg !3844
  %325 = and i24 %246, 1048576, !dbg !4090
  %326 = icmp eq i24 %325, 0, !dbg !4090
  br i1 %326, label %333, label %327, !dbg !4091

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4092
  %329 = zext i8 %328 to i32, !dbg !4092
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %330, metadata !3831, metadata !DIExpression()), !dbg !4093
  %331 = icmp slt i32 %330, 0, !dbg !4094
  %332 = add i32 %324, 1, !dbg !4092
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %334, metadata !3722, metadata !DIExpression()), !dbg !3844
  %335 = load i32, i32* %16, align 4, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %335, metadata !3806, metadata !DIExpression()), !dbg !3858
  br label %336, !dbg !4097

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4098
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %338, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %337, metadata !3806, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3858
  %339 = icmp sgt i32 %337, 0, !dbg !4099
  br i1 %339, label %340, label %345, !dbg !4097

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %341, metadata !3806, metadata !DIExpression()), !dbg !3858
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %342, metadata !3835, metadata !DIExpression()), !dbg !4102
  %343 = icmp slt i32 %342, 0, !dbg !4103
  %344 = add i32 %338, 1, !dbg !4101
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %343, label %361, label %336, !llvm.loop !4105

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %346, metadata !3838, metadata !DIExpression()), !dbg !4108
  %347 = icmp slt i32 %346, 0, !dbg !4109
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %349, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %304, metadata !3783, metadata !DIExpression()), !dbg !3858
  %350 = icmp sgt i32 %304, 0, !dbg !4111
  br i1 %350, label %351, label %363, !dbg !4112

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4112
  %353 = add i32 %352, %338, !dbg !4112
  br label %354, !dbg !4112

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %355, metadata !3783, metadata !DIExpression()), !dbg !3858
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4113
  call void @llvm.dbg.value(metadata i32 %356, metadata !3840, metadata !DIExpression()), !dbg !4114
  %357 = icmp slt i32 %356, 0, !dbg !4115
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4117
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3844
  call void @llvm.dbg.value(metadata i32 %359, metadata !3783, metadata !DIExpression()), !dbg !3858
  %360 = icmp sgt i32 %355, 1, !dbg !4111
  br i1 %360, label %354, label %363, !dbg !4112, !llvm.loop !4118

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3855
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %364, metadata !3722, metadata !DIExpression()), !dbg !3844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3855
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3844
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4120
  ret i32 %366, !dbg !4120
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4121 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4125, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.value(metadata i8* %1, metadata !4126, metadata !DIExpression()), !dbg !4127
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4128
  store i24 0, i24* %3, align 4, !dbg !4128
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4128
  store i8 0, i8* %4, align 1, !dbg !4128
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4128
  store i32 0, i32* %5, align 4, !dbg !4128
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4128
  store i32 0, i32* %6, align 4, !dbg !4128
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4129
  call void @llvm.dbg.value(metadata i8* %7, metadata !4126, metadata !DIExpression()), !dbg !4127
  %8 = load i8, i8* %7, align 1, !dbg !4130
  %9 = icmp eq i8 %8, 37, !dbg !4132
  br i1 %9, label %10, label %12, !dbg !4133

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4134
  call void @llvm.dbg.value(metadata i8* %11, metadata !4126, metadata !DIExpression()), !dbg !4127
  store i8 37, i8* %4, align 1, !dbg !4136
  br label %18, !dbg !4137

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4138
  call void @llvm.dbg.value(metadata i8* %13, metadata !4126, metadata !DIExpression()), !dbg !4127
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %14, metadata !4126, metadata !DIExpression()), !dbg !4127
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %15, metadata !4126, metadata !DIExpression()), !dbg !4127
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4141
  call void @llvm.dbg.value(metadata i8* %16, metadata !4126, metadata !DIExpression()), !dbg !4127
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4142
  call void @llvm.dbg.value(metadata i8* %17, metadata !4126, metadata !DIExpression()), !dbg !4127
  br label %18, !dbg !4143

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4127
  ret i8* %19, !dbg !4144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4145 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4149, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %1, metadata !4150, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %2, metadata !4151, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %3, metadata !4152, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i32 0, metadata !4153, metadata !DIExpression()), !dbg !4156
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4157

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4158
  call void @llvm.dbg.value(metadata i32 %9, metadata !4153, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %8, metadata !4151, metadata !DIExpression()), !dbg !4156
  %10 = icmp ult i8* %8, %3, !dbg !4159
  br i1 %10, label %11, label %13, !dbg !4160

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4161
  br label %17, !dbg !4160

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4162

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4163
  %16 = icmp eq i8 %15, 0, !dbg !4162
  br i1 %16, label %24, label %17, !dbg !4157

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4161
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %19, metadata !4151, metadata !DIExpression()), !dbg !4156
  %20 = zext i8 %18 to i32, !dbg !4165
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %21, metadata !4154, metadata !DIExpression()), !dbg !4167
  %22 = icmp slt i32 %21, 0, !dbg !4168
  %23 = add i32 %9, 1, !dbg !4170
  call void @llvm.dbg.value(metadata i32 undef, metadata !4153, metadata !DIExpression()), !dbg !4156
  br i1 %22, label %24, label %7, !llvm.loop !4171

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4156
  ret i32 %25, !dbg !4173
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !4174 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4178, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4179, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata i8* %2, metadata !4180, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata i8* %3, metadata !4181, metadata !DIExpression()), !dbg !4188
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4189
  %6 = load i8, i8* %5, align 1, !dbg !4189
  %7 = zext i8 %6 to i32, !dbg !4190
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4191
  %9 = icmp eq i32 %8, 0, !dbg !4191
  call void @llvm.dbg.value(metadata i1 %9, metadata !4182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4188
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %10, metadata !4183, metadata !DIExpression()), !dbg !4188
  %11 = ptrtoint i8* %3 to i32, !dbg !4193
  %12 = ptrtoint i8* %2 to i32, !dbg !4193
  %13 = sub i32 %11, %12, !dbg !4193
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4194
  call void @llvm.dbg.value(metadata i8* %14, metadata !4185, metadata !DIExpression()), !dbg !4188
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4195

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4188
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4178, metadata !DIExpression()), !dbg !4188
  call void @llvm.dbg.value(metadata i8* %18, metadata !4185, metadata !DIExpression()), !dbg !4188
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4196
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %25, metadata !4186, metadata !DIExpression()), !dbg !4198
  %26 = icmp ult i32 %25, 10, !dbg !4199
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4200
  %28 = add i32 %27, %25, !dbg !4198
  %29 = trunc i32 %28 to i8, !dbg !4200
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4201
  call void @llvm.dbg.value(metadata i8* %30, metadata !4185, metadata !DIExpression()), !dbg !4188
  store i8 %29, i8* %30, align 1, !dbg !4202
  call void @llvm.dbg.value(metadata i64 %22, metadata !4178, metadata !DIExpression()), !dbg !4188
  %31 = icmp uge i64 %19, %15, !dbg !4203
  %32 = icmp ugt i8* %30, %2, !dbg !4204
  %33 = and i1 %31, %32, !dbg !4204
  br i1 %33, label %17, label %34, !dbg !4205, !llvm.loop !4206

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4208
  %36 = load i24, i24* %35, align 4, !dbg !4208
  %37 = and i24 %36, 32, !dbg !4208
  %38 = icmp eq i24 %37, 0, !dbg !4208
  br i1 %38, label %44, label %39, !dbg !4210

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4211

40:                                               ; preds = %39
  br label %41, !dbg !4213

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4217
  store i24 %43, i24* %35, align 4, !dbg !4217
  br label %44, !dbg !4218

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4218
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !4219 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4225, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i8* %1, metadata !4226, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i32 %2, metadata !4227, metadata !DIExpression()), !dbg !4228
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4229
  %5 = load i24, i24* %4, align 4, !dbg !4229
  %6 = lshr i24 %5, 11, !dbg !4229
  %7 = and i24 %6, 15, !dbg !4229
  %8 = zext i24 %7 to i32, !dbg !4229
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4230

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4231
  store i32 %2, i32* %10, align 4, !dbg !4233
  br label %28, !dbg !4234

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4235
  store i8 %12, i8* %1, align 1, !dbg !4236
  br label %28, !dbg !4237

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4238
  %15 = bitcast i8* %1 to i16*, !dbg !4239
  store i16 %14, i16* %15, align 2, !dbg !4240
  br label %28, !dbg !4241

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4242
  store i32 %2, i32* %17, align 4, !dbg !4243
  br label %28, !dbg !4244

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4245
  %20 = bitcast i8* %1 to i64*, !dbg !4246
  store i64 %19, i64* %20, align 8, !dbg !4247
  br label %28, !dbg !4248

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4249
  %23 = bitcast i8* %1 to i64*, !dbg !4250
  store i64 %22, i64* %23, align 8, !dbg !4251
  br label %28, !dbg !4252

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4253
  store i32 %2, i32* %25, align 4, !dbg !4254
  br label %28, !dbg !4255

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4256
  store i32 %2, i32* %27, align 4, !dbg !4257
  br label %28, !dbg !4258

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4259
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !4260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4263, metadata !DIExpression()), !dbg !4264
  %2 = add i32 %0, -65, !dbg !4265
  %3 = icmp ult i32 %2, 26, !dbg !4266
  %4 = zext i1 %3 to i32, !dbg !4266
  ret i32 %4, !dbg !4267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !4268 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4272, metadata !DIExpression()), !dbg !4273
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4274

2:                                                ; preds = %1
  br label %4, !dbg !4275

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4277

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4278
  ret i32 %5, !dbg !4279
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !4280 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4282, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %1, metadata !4283, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8 1, metadata !4284, metadata !DIExpression()), !dbg !4285
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4286

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4284, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %5, metadata !4283, metadata !DIExpression()), !dbg !4285
  %6 = load i8, i8* %5, align 1, !dbg !4287
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4289

7:                                                ; preds = %4
  br label %11, !dbg !4290

8:                                                ; preds = %4
  br label %11, !dbg !4292

9:                                                ; preds = %4
  br label %11, !dbg !4293

10:                                               ; preds = %4
  br label %11, !dbg !4294

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4295
  %14 = or i24 %13, %12, !dbg !4295
  store i24 %14, i24* %3, align 4, !dbg !4295
  call void @llvm.dbg.value(metadata i8 poison, metadata !4284, metadata !DIExpression()), !dbg !4285
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4283, metadata !DIExpression()), !dbg !4285
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4284, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.value(metadata i8* %15, metadata !4283, metadata !DIExpression()), !dbg !4285
  %17 = load i24, i24* %3, align 4, !dbg !4296
  %18 = and i24 %17, 68, !dbg !4298
  %19 = icmp eq i24 %18, 68, !dbg !4298
  br i1 %19, label %20, label %22, !dbg !4298

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4299
  store i24 %21, i24* %3, align 4, !dbg !4299
  br label %22, !dbg !4301

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4302
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4303 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4305, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata i8* %1, metadata !4306, metadata !DIExpression()), !dbg !4309
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4310
  %5 = load i24, i24* %4, align 4, !dbg !4311
  %6 = or i24 %5, 128, !dbg !4311
  store i24 %6, i24* %4, align 4, !dbg !4311
  call void @llvm.dbg.value(metadata i8* %1, metadata !4306, metadata !DIExpression()), !dbg !4309
  %7 = load i8, i8* %1, align 1, !dbg !4312
  %8 = icmp eq i8 %7, 42, !dbg !4314
  br i1 %8, label %9, label %12, !dbg !4315

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4316
  store i24 %10, i24* %4, align 4, !dbg !4316
  call void @llvm.dbg.value(metadata i8* %1, metadata !4306, metadata !DIExpression()), !dbg !4309
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4318
  call void @llvm.dbg.value(metadata i8* %11, metadata !4306, metadata !DIExpression()), !dbg !4309
  store i8* %11, i8** %3, align 4, !dbg !4318
  br label %29, !dbg !4319

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4307, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata i8** %3, metadata !4306, metadata !DIExpression(DW_OP_deref)), !dbg !4309
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %13, metadata !4308, metadata !DIExpression()), !dbg !4309
  %14 = load i8*, i8** %3, align 4, !dbg !4321
  call void @llvm.dbg.value(metadata i8* %14, metadata !4306, metadata !DIExpression()), !dbg !4309
  %15 = icmp eq i8* %14, %1, !dbg !4323
  br i1 %15, label %29, label %16, !dbg !4324

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4325
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4327
  store i32 %13, i32* %18, align 4, !dbg !4328
  %19 = lshr i32 %13, 31, !dbg !4329
  %20 = lshr i24 %17, 1, !dbg !4330
  %21 = and i24 %20, 1, !dbg !4330
  %22 = zext i24 %21 to i32, !dbg !4330
  %23 = or i32 %19, %22, !dbg !4330
  %24 = trunc i32 %23 to i24, !dbg !4330
  %25 = shl nuw nsw i24 %24, 1, !dbg !4330
  %26 = and i24 %17, -131, !dbg !4330
  %27 = or i24 %26, 128, !dbg !4330
  %28 = or i24 %25, %27, !dbg !4330
  store i24 %28, i24* %4, align 4, !dbg !4330
  br label %29, !dbg !4331

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4309
  ret i8* %30, !dbg !4332
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4333 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4335, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i8* %1, metadata !4336, metadata !DIExpression()), !dbg !4338
  %4 = load i8, i8* %1, align 1, !dbg !4339
  %5 = icmp eq i8 %4, 46, !dbg !4340
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4341
  %7 = load i24, i24* %6, align 4, !dbg !4342
  %8 = select i1 %5, i24 512, i24 0, !dbg !4342
  %9 = and i24 %7, -513, !dbg !4342
  %10 = or i24 %9, %8, !dbg !4342
  store i24 %10, i24* %6, align 4, !dbg !4342
  br i1 %5, label %11, label %32, !dbg !4343

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4336, metadata !DIExpression()), !dbg !4338
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4344
  call void @llvm.dbg.value(metadata i8* %12, metadata !4336, metadata !DIExpression()), !dbg !4338
  store i8* %12, i8** %3, align 4, !dbg !4344
  %13 = load i8, i8* %12, align 1, !dbg !4345
  %14 = icmp eq i8 %13, 42, !dbg !4347
  br i1 %14, label %15, label %18, !dbg !4348

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4349
  store i24 %16, i24* %6, align 4, !dbg !4349
  call void @llvm.dbg.value(metadata i8* %12, metadata !4336, metadata !DIExpression()), !dbg !4338
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %17, metadata !4336, metadata !DIExpression()), !dbg !4338
  store i8* %17, i8** %3, align 4, !dbg !4351
  br label %32, !dbg !4352

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4336, metadata !DIExpression(DW_OP_deref)), !dbg !4338
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4353
  call void @llvm.dbg.value(metadata i32 %19, metadata !4337, metadata !DIExpression()), !dbg !4338
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4354
  store i32 %19, i32* %20, align 4, !dbg !4355
  %21 = lshr i32 %19, 31, !dbg !4356
  %22 = load i24, i24* %6, align 4, !dbg !4357
  %23 = lshr i24 %22, 1, !dbg !4357
  %24 = and i24 %23, 1, !dbg !4357
  %25 = zext i24 %24 to i32, !dbg !4357
  %26 = or i32 %21, %25, !dbg !4357
  %27 = trunc i32 %26 to i24, !dbg !4357
  %28 = shl nuw nsw i24 %27, 1, !dbg !4357
  %29 = and i24 %22, -3, !dbg !4357
  %30 = or i24 %28, %29, !dbg !4357
  store i24 %30, i24* %6, align 4, !dbg !4357
  %31 = load i8*, i8** %3, align 4, !dbg !4358
  call void @llvm.dbg.value(metadata i8* %31, metadata !4336, metadata !DIExpression()), !dbg !4338
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4338
  ret i8* %33, !dbg !4359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4360 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4362, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* %1, metadata !4363, metadata !DIExpression()), !dbg !4364
  %3 = load i8, i8* %1, align 1, !dbg !4365
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4366

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4367
  call void @llvm.dbg.value(metadata i8* %5, metadata !4363, metadata !DIExpression()), !dbg !4364
  %6 = load i8, i8* %5, align 1, !dbg !4370
  %7 = icmp eq i8 %6, 104, !dbg !4371
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4372
  %9 = load i24, i24* %8, align 4, !dbg !4372
  %10 = and i24 %9, -30721, !dbg !4372
  br i1 %7, label %11, label %14, !dbg !4373

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4374
  store i24 %12, i24* %8, align 4, !dbg !4374
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4376
  call void @llvm.dbg.value(metadata i8* %13, metadata !4363, metadata !DIExpression()), !dbg !4364
  br label %56, !dbg !4377

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4378
  store i24 %15, i24* %8, align 4, !dbg !4378
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4380
  call void @llvm.dbg.value(metadata i8* %17, metadata !4363, metadata !DIExpression()), !dbg !4364
  %18 = load i8, i8* %17, align 1, !dbg !4382
  %19 = icmp eq i8 %18, 108, !dbg !4383
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4384
  %21 = load i24, i24* %20, align 4, !dbg !4384
  %22 = and i24 %21, -30721, !dbg !4384
  br i1 %19, label %23, label %26, !dbg !4385

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4386
  store i24 %24, i24* %20, align 4, !dbg !4386
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4388
  call void @llvm.dbg.value(metadata i8* %25, metadata !4363, metadata !DIExpression()), !dbg !4364
  br label %56, !dbg !4389

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4390
  store i24 %27, i24* %20, align 4, !dbg !4390
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4392
  %30 = load i24, i24* %29, align 4, !dbg !4393
  %31 = and i24 %30, -30721, !dbg !4393
  %32 = or i24 %31, 10240, !dbg !4393
  store i24 %32, i24* %29, align 4, !dbg !4393
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4394
  call void @llvm.dbg.value(metadata i8* %33, metadata !4363, metadata !DIExpression()), !dbg !4364
  br label %56, !dbg !4395

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4396
  %36 = load i24, i24* %35, align 4, !dbg !4397
  %37 = and i24 %36, -30721, !dbg !4397
  %38 = or i24 %37, 12288, !dbg !4397
  store i24 %38, i24* %35, align 4, !dbg !4397
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4398
  call void @llvm.dbg.value(metadata i8* %39, metadata !4363, metadata !DIExpression()), !dbg !4364
  br label %56, !dbg !4399

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4400
  %42 = load i24, i24* %41, align 4, !dbg !4401
  %43 = and i24 %42, -30721, !dbg !4401
  %44 = or i24 %43, 14336, !dbg !4401
  store i24 %44, i24* %41, align 4, !dbg !4401
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4402
  call void @llvm.dbg.value(metadata i8* %45, metadata !4363, metadata !DIExpression()), !dbg !4364
  br label %56, !dbg !4403

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4404
  %48 = load i24, i24* %47, align 4, !dbg !4405
  %49 = and i24 %48, -30723, !dbg !4405
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4406
  call void @llvm.dbg.value(metadata i8* %50, metadata !4363, metadata !DIExpression()), !dbg !4364
  %51 = or i24 %49, 16386, !dbg !4407
  store i24 %51, i24* %47, align 4, !dbg !4407
  br label %56, !dbg !4408

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4409
  %54 = load i24, i24* %53, align 4, !dbg !4410
  %55 = and i24 %54, -30721, !dbg !4410
  store i24 %55, i24* %53, align 4, !dbg !4410
  br label %56, !dbg !4411

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4363, metadata !DIExpression()), !dbg !4364
  ret i8* %57, !dbg !4412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4413 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4415, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8* %1, metadata !4416, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8 0, metadata !4417, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8* %1, metadata !4416, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4420
  %3 = load i8, i8* %1, align 1, !dbg !4421
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4422
  store i8 %3, i8* %4, align 1, !dbg !4423
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4424

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4425

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4426
  %9 = load i24, i24* %8, align 4, !dbg !4426
  %10 = and i24 %9, -458753, !dbg !4426
  %11 = or i24 %10, %7, !dbg !4426
  call void @llvm.dbg.label(metadata !4418), !dbg !4427
  %12 = and i24 %9, 30720, !dbg !4428
  %13 = icmp eq i24 %12, 16384, !dbg !4428
  %14 = zext i1 %13 to i24, !dbg !4430
  %15 = or i24 %11, %14, !dbg !4430
  %16 = icmp eq i8 %3, 99, !dbg !4431
  br i1 %16, label %17, label %43, !dbg !4433

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4434
  %19 = icmp ne i24 %18, 0, !dbg !4434
  call void @llvm.dbg.value(metadata i1 %19, metadata !4417, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4420
  br label %43, !dbg !4436

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4437
  %22 = load i24, i24* %21, align 4, !dbg !4438
  %23 = and i24 %22, -458753, !dbg !4438
  %24 = or i24 %23, 262144, !dbg !4438
  call void @llvm.dbg.value(metadata i8 1, metadata !4417, metadata !DIExpression()), !dbg !4420
  br label %43, !dbg !4439

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4442
  %27 = load i24, i24* %26, align 4, !dbg !4443
  %28 = and i24 %27, -458753, !dbg !4443
  %29 = or i24 %28, 196608, !dbg !4443
  %30 = and i24 %27, 30720, !dbg !4444
  %31 = icmp eq i24 %30, 16384, !dbg !4444
  br label %43, !dbg !4446

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4447
  %34 = load i24, i24* %33, align 4, !dbg !4448
  %35 = and i24 %34, -458753, !dbg !4448
  %36 = or i24 %35, 196608, !dbg !4448
  %37 = and i24 %34, 30720, !dbg !4449
  %38 = icmp ne i24 %37, 0, !dbg !4449
  br label %43, !dbg !4451

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4452
  %41 = load i24, i24* %40, align 4, !dbg !4453
  %42 = or i24 %41, 1, !dbg !4453
  br label %43, !dbg !4454

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4455
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4456
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4457
  call void @llvm.dbg.value(metadata i8* %48, metadata !4416, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8 poison, metadata !4417, metadata !DIExpression()), !dbg !4420
  %49 = lshr i24 %44, 1, !dbg !4455
  %50 = and i24 %49, 1, !dbg !4455
  %51 = zext i24 %50 to i32, !dbg !4455
  %52 = or i32 %51, %47, !dbg !4455
  %53 = trunc i32 %52 to i24, !dbg !4455
  %54 = shl nuw nsw i24 %53, 1, !dbg !4455
  %55 = and i24 %44, -3, !dbg !4455
  %56 = or i24 %54, %55, !dbg !4455
  store i24 %56, i24* %46, align 4, !dbg !4455
  ret i8* %48, !dbg !4458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4459 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4464, metadata !DIExpression()), !dbg !4467
  %2 = load i8*, i8** %0, align 4, !dbg !4468
  call void @llvm.dbg.value(metadata i8* %2, metadata !4465, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i32 0, metadata !4466, metadata !DIExpression()), !dbg !4467
  %3 = load i8, i8* %2, align 1, !dbg !4469
  %4 = zext i8 %3 to i32, !dbg !4470
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4471
  %6 = icmp eq i32 %5, 0, !dbg !4472
  br i1 %6, label %19, label %7, !dbg !4472

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4466, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.value(metadata i8* %10, metadata !4465, metadata !DIExpression()), !dbg !4467
  %11 = mul i32 %9, 10, !dbg !4473
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4475
  call void @llvm.dbg.value(metadata i8* %12, metadata !4465, metadata !DIExpression()), !dbg !4467
  %13 = add i32 %11, -48, !dbg !4476
  %14 = add i32 %13, %8, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %14, metadata !4466, metadata !DIExpression()), !dbg !4467
  %15 = load i8, i8* %12, align 1, !dbg !4469
  %16 = zext i8 %15 to i32, !dbg !4470
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4471
  %18 = icmp eq i32 %17, 0, !dbg !4472
  br i1 %18, label %19, label %7, !dbg !4472, !llvm.loop !4478

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4467
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4467
  store i8* %20, i8** %0, align 4, !dbg !4480
  ret i32 %21, !dbg !4481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4484, metadata !DIExpression()), !dbg !4485
  %2 = add i32 %0, -48, !dbg !4486
  %3 = icmp ult i32 %2, 10, !dbg !4487
  %4 = zext i1 %3 to i32, !dbg !4487
  ret i32 %4, !dbg !4488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4489 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_EEPROM_INIT_PRIORITY\0A\09.equ\09CONFIG_EEPROM_INIT_PRIORITY,50\0A\09.type\09CONFIG_EEPROM_INIT_PRIORITY,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_HAL_FLASH\0A\09.equ\09CONFIG_USE_STM32_HAL_FLASH,1\0A\09.type\09CONFIG_USE_STM32_HAL_FLASH,%object", ""() #23, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_HAL_FLASH_EX\0A\09.equ\09CONFIG_USE_STM32_HAL_FLASH_EX,1\0A\09.type\09CONFIG_USE_STM32_HAL_FLASH_EX,%object", ""() #23, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4745, !srcloc !4746
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4747, !srcloc !4748
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4749, !srcloc !4750
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4751, !srcloc !4752
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4753, !srcloc !4754
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4755, !srcloc !4756
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4757, !srcloc !4758
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4759, !srcloc !4760
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4761, !srcloc !4762
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4763, !srcloc !4764
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4765, !srcloc !4766
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4767, !srcloc !4768
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4769, !srcloc !4770
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4771, !srcloc !4772
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4773, !srcloc !4774
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4775, !srcloc !4776
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4777, !srcloc !4778
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4779, !srcloc !4780
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4781, !srcloc !4782
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4783, !srcloc !4784
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4785, !srcloc !4786
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4787, !srcloc !4788
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4789, !srcloc !4790
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4791, !srcloc !4792
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4793, !srcloc !4794
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4795, !srcloc !4796
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4797, !srcloc !4798
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4799, !srcloc !4800
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4801, !srcloc !4802
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4803, !srcloc !4804
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4805, !srcloc !4806
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4807, !srcloc !4808
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4809, !srcloc !4810
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4811, !srcloc !4812
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4813, !srcloc !4814
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4815, !srcloc !4816
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4817, !srcloc !4818
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4819, !srcloc !4820
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4821, !srcloc !4822
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4823, !srcloc !4824
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4825, !srcloc !4826
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4827, !srcloc !4828
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4829, !srcloc !4830
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4831, !srcloc !4832
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4833, !srcloc !4834
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4835, !srcloc !4836
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4837, !srcloc !4838
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4839, !srcloc !4840
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4841, !srcloc !4842
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4843, !srcloc !4844
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4845, !srcloc !4846
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4847, !srcloc !4848
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4849, !srcloc !4850
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4851, !srcloc !4852
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4853, !srcloc !4854
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4855, !srcloc !4856
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4857, !srcloc !4858
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4859, !srcloc !4860
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4861, !srcloc !4862
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4863, !srcloc !4864
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4865, !srcloc !4866
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4867, !srcloc !4868
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4869, !srcloc !4870
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4871, !srcloc !4872
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4873, !srcloc !4874
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4875, !srcloc !4876
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4877, !srcloc !4878
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4879, !srcloc !4880
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4881, !srcloc !4882
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4883, !srcloc !4884
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4885, !srcloc !4886
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4887, !srcloc !4888
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4889, !srcloc !4890
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4891, !srcloc !4892
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4893, !srcloc !4894
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4895, !srcloc !4896
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4897, !srcloc !4898
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4899, !srcloc !4900
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4901, !srcloc !4902
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4903, !srcloc !4904
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4905, !srcloc !4906
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4907, !srcloc !4908
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4909, !srcloc !4910
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4911, !srcloc !4912
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4913, !srcloc !4914
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4915, !srcloc !4916
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4917, !srcloc !4918
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4919, !srcloc !4920
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4921, !srcloc !4922
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4923, !srcloc !4924
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4925, !srcloc !4926
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4927, !srcloc !4928
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4929, !srcloc !4930
  tail call void asm sideeffect ".globl\09CONFIG_EEPROM\0A\09.equ\09CONFIG_EEPROM,1\0A\09.type\09CONFIG_EEPROM,%object", ""() #23, !dbg !4931, !srcloc !4932
  tail call void asm sideeffect ".globl\09CONFIG_EEPROM_STM32\0A\09.equ\09CONFIG_EEPROM_STM32,1\0A\09.type\09CONFIG_EEPROM_STM32,%object", ""() #23, !dbg !4933, !srcloc !4934
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4935, !srcloc !4936
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4937, !srcloc !4938
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4939, !srcloc !4940
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4941, !srcloc !4942
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4943, !srcloc !4944
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4945, !srcloc !4946
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4947, !srcloc !4948
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4949, !srcloc !4950
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4951, !srcloc !4952
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4953, !srcloc !4954
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4955, !srcloc !4956
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4957, !srcloc !4958
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4959, !srcloc !4960
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4961, !srcloc !4962
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4963, !srcloc !4964
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4965, !srcloc !4966
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4967, !srcloc !4968
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4969, !srcloc !4970
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4971, !srcloc !4972
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4973, !srcloc !4974
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4975, !srcloc !4976
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4977, !srcloc !4978
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4979, !srcloc !4980
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4981, !srcloc !4982
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4983, !srcloc !4984
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4985, !srcloc !4986
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4987, !srcloc !4988
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4989, !srcloc !4990
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4991, !srcloc !4992
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4993, !srcloc !4994
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4995, !srcloc !4996
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4997, !srcloc !4998
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4999, !srcloc !5000
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5001, !srcloc !5002
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5003, !srcloc !5004
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5005, !srcloc !5006
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5007, !srcloc !5008
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5009, !srcloc !5010
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5011, !srcloc !5012
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5013, !srcloc !5014
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5015, !srcloc !5016
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5017, !srcloc !5018
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5019, !srcloc !5020
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5021, !srcloc !5022
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5023, !srcloc !5024
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5025, !srcloc !5026
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5027, !srcloc !5028
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5029, !srcloc !5030
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5031, !srcloc !5032
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5033, !srcloc !5034
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5035, !srcloc !5036
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5037, !srcloc !5038
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5039, !srcloc !5040
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5041, !srcloc !5042
  ret void, !dbg !5043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5046, metadata !DIExpression()), !dbg !5048
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5049, !srcloc !5058
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %3, metadata !5055, metadata !DIExpression()) #23, !dbg !5059
  call void @llvm.dbg.value(metadata i32 undef, metadata !5056, metadata !DIExpression()) #23, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %3, metadata !5047, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i32 %3, metadata !5060, metadata !DIExpression()) #23, !dbg !5065
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5067, !srcloc !5068
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5069
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !5070
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !5071
  ret i32 0, !dbg !5072
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #13 !dbg !5073 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5078, metadata !DIExpression()), !dbg !5080
  %2 = bitcast i32* %1 to i8*, !dbg !5081
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5081
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5079, metadata !DIExpression()), !dbg !5082
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5083
  %4 = or i32 %3, 268435456, !dbg !5083
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5083
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5084
  %6 = and i32 %5, 268435456, !dbg !5084
  store volatile i32 %6, i32* %1, align 4, !dbg !5085
  %7 = load volatile i32, i32* %1, align 4, !dbg !5086
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5087
  ret void, !dbg !5087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #14 !dbg !5088 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5091, metadata !DIExpression()), !dbg !5092
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5093
  %2 = and i32 %1, -6145, !dbg !5093
  %3 = or i32 %2, 2048, !dbg !5093
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5093
  ret void, !dbg !5094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_GetTick() local_unnamed_addr #1 !dbg !5095 {
  %1 = tail call fastcc i32 @k_uptime_get_32() #24, !dbg !5099
  ret i32 %1, !dbg !5100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !5101 {
  %1 = tail call fastcc i64 @k_uptime_get() #24, !dbg !5102
  %2 = trunc i64 %1 to i32, !dbg !5103
  ret i32 %2, !dbg !5104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !5105 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !5108
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #24, !dbg !5109
  ret i64 %2, !dbg !5110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !5111 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5112, !srcloc !5114
  %1 = tail call i64 @z_impl_k_uptime_ticks() #25, !dbg !5115
  ret i64 %1, !dbg !5116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !5117 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5122, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i64 %0, metadata !5124, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i32 10000, metadata !5129, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i32 1000, metadata !5130, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i8 1, metadata !5131, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i8 0, metadata !5132, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i1 false, metadata !5133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5141
  call void @llvm.dbg.value(metadata i8 0, metadata !5134, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i1 false, metadata !5135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5141
  call void @llvm.dbg.value(metadata i1 true, metadata !5136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5141
  call void @llvm.dbg.value(metadata i64 0, metadata !5137, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata i64 0, metadata !5137, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !5124, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5141
  call void @llvm.dbg.value(metadata i64 %0, metadata !5124, metadata !DIExpression()), !dbg !5141
  %2 = udiv i64 %0, 10, !dbg !5143
  ret i64 %2, !dbg !5148
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #1 !dbg !5149 {
  %2 = alloca i32, align 4
  store volatile i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5153, metadata !DIExpression()), !dbg !5154
  %3 = load volatile i32, i32* %2, align 4, !dbg !5155
  tail call fastcc void @k_msleep(i32 noundef %3) #24, !dbg !5156
  ret void, !dbg !5157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !5158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5162, metadata !DIExpression()), !dbg !5163
  %2 = icmp sgt i32 %0, 0, !dbg !5164
  %3 = select i1 %2, i32 %0, i32 0, !dbg !5164
  %4 = zext i32 %3 to i64, !dbg !5164
  %5 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %4) #24, !dbg !5164
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !5165
  tail call fastcc void @k_sleep([1 x i64] %6) #24, !dbg !5165
  ret void, !dbg !5166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !5167 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i64 %0, metadata !5124, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 1000, metadata !5129, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 10000, metadata !5130, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8 1, metadata !5131, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8 0, metadata !5132, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i1 true, metadata !5133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5171
  call void @llvm.dbg.value(metadata i8 0, metadata !5134, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i1 true, metadata !5135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5171
  call void @llvm.dbg.value(metadata i1 false, metadata !5136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5171
  call void @llvm.dbg.value(metadata i64 0, metadata !5137, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i64 0, metadata !5137, metadata !DIExpression()), !dbg !5171
  %2 = mul i64 %0, 10, !dbg !5173
  ret i64 %2, !dbg !5178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !5179 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5187, metadata !DIExpression()), !dbg !5188
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5189, !srcloc !5191
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !5192
  ret void, !dbg !5193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !5194 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5196, metadata !DIExpression()), !dbg !5197
  ret i32 0, !dbg !5198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5249, metadata !DIExpression()), !dbg !5250
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !5251
  ret void, !dbg !5252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5253 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5270, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5271, metadata !DIExpression()), !dbg !5273
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5274
  %4 = load i32, i32* %3, align 4, !dbg !5274
  call void @llvm.dbg.value(metadata i32 %4, metadata !5272, metadata !DIExpression()), !dbg !5273
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !5275
  ret void, !dbg !5276
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !5277 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5281, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.value(metadata i8* %0, metadata !5282, metadata !DIExpression()), !dbg !5284
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5285
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5285
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5283, metadata !DIExpression()), !dbg !5286
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5286
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5287
  %5 = bitcast i8* %4 to i32*, !dbg !5287
  %6 = load i32, i32* %5, align 4, !dbg !5287
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5288
  store i32 %6, i32* %7, align 4, !dbg !5289
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !5290
  unreachable, !dbg !5291
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5295, metadata !DIExpression()), !dbg !5296
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !5297
  ret void, !dbg !5298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5303, metadata !DIExpression()), !dbg !5304
  %2 = icmp sgt i32 %0, -1, !dbg !5305
  br i1 %2, label %3, label %8, !dbg !5307

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5308, !srcloc !5310
  %4 = and i32 %0, 31, !dbg !5311
  %5 = shl nuw i32 1, %4, !dbg !5312
  %6 = lshr i32 %0, 5, !dbg !5313
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5314
  store volatile i32 %5, i32* %7, align 4, !dbg !5315
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5316, !srcloc !5317
  br label %8, !dbg !5318

8:                                                ; preds = %3, %1
  ret void, !dbg !5319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5322, metadata !DIExpression()), !dbg !5323
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !5324
  ret void, !dbg !5325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5328, metadata !DIExpression()), !dbg !5329
  %2 = icmp sgt i32 %0, -1, !dbg !5330
  br i1 %2, label %3, label %8, !dbg !5332

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5333
  %5 = shl nuw i32 1, %4, !dbg !5335
  %6 = lshr i32 %0, 5, !dbg !5336
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5337
  store volatile i32 %5, i32* %7, align 4, !dbg !5338
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5339, !srcloc !5343
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5344, !srcloc !5347
  br label %8, !dbg !5348

8:                                                ; preds = %3, %1
  ret void, !dbg !5349
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !5350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5354, metadata !DIExpression()), !dbg !5355
  %2 = lshr i32 %0, 5, !dbg !5356
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5357
  %4 = load volatile i32, i32* %3, align 4, !dbg !5357
  %5 = and i32 %0, 31, !dbg !5358
  %6 = shl nuw i32 1, %5, !dbg !5358
  %7 = and i32 %4, %6, !dbg !5359
  ret i32 %7, !dbg !5360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5365, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %1, metadata !5366, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %2, metadata !5367, metadata !DIExpression()), !dbg !5368
  %4 = add i32 %1, 1, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %4, metadata !5366, metadata !DIExpression()), !dbg !5368
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !5372
  ret void, !dbg !5373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5378, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata i32 %1, metadata !5379, metadata !DIExpression()), !dbg !5380
  %3 = trunc i32 %1 to i8, !dbg !5381
  %4 = shl i8 %3, 4, !dbg !5381
  %5 = and i32 %0, 15, !dbg !5383
  %6 = add nsw i32 %5, -4, !dbg !5383
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5383
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5383
  %9 = icmp slt i32 %0, 0, !dbg !5383
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5383
  store volatile i8 %4, i8* %10, align 1, !dbg !5381
  ret void, !dbg !5384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5387, metadata !DIExpression()), !dbg !5388
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !5389
  ret void, !dbg !5390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5391 {
  tail call void @z_SysNmiOnReset() #25, !dbg !5393
  tail call void @z_arm_int_exit() #25, !dbg !5394
  ret void, !dbg !5395
}

; Function Attrs: optsize
declare !dbg !5396 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5397 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5399 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !5401
  tail call void @z_bss_zero() #25, !dbg !5402
  tail call void @z_data_copy() #25, !dbg !5403
  tail call void @z_arm_interrupt_init() #25, !dbg !5404
  tail call void @z_cstart() #27, !dbg !5405
  unreachable, !dbg !5405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5406 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5407
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5408, !srcloc !5411
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5412, !srcloc !5415
  ret void, !dbg !5416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5420, metadata !DIExpression()), !dbg !5421
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5422
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5423
  store i32 %0, i32* %3, align 4, !dbg !5424
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5425
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5426
  store i32 %4, i32* %5, align 4, !dbg !5427
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5428
  %7 = or i32 %6, 268435456, !dbg !5428
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5428
  call void @llvm.dbg.value(metadata i32 0, metadata !5429, metadata !DIExpression()) #23, !dbg !5432
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5434, !srcloc !5435
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5436
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5437
  %10 = load i32, i32* %9, align 4, !dbg !5437
  ret i32 %10, !dbg !5438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5549, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5550, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %2, metadata !5551, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5552, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %4, metadata !5553, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %5, metadata !5554, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i8* %6, metadata !5555, metadata !DIExpression()), !dbg !5557
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %8, metadata !5556, metadata !DIExpression()), !dbg !5557
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5559
  %10 = bitcast i8* %9 to i32*, !dbg !5559
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5560
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5561
  %12 = bitcast i8* %8 to i32*, !dbg !5562
  store i32 %11, i32* %12, align 4, !dbg !5563
  %13 = ptrtoint i8* %4 to i32, !dbg !5564
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5565
  %15 = bitcast i8* %14 to i32*, !dbg !5565
  store i32 %13, i32* %15, align 4, !dbg !5566
  %16 = ptrtoint i8* %5 to i32, !dbg !5567
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5568
  %18 = bitcast i8* %17 to i32*, !dbg !5568
  store i32 %16, i32* %18, align 4, !dbg !5569
  %19 = ptrtoint i8* %6 to i32, !dbg !5570
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5571
  %21 = bitcast i8* %20 to i32*, !dbg !5571
  store i32 %19, i32* %21, align 4, !dbg !5572
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5573
  %23 = bitcast i8* %22 to i32*, !dbg !5573
  store i32 16777216, i32* %23, align 4, !dbg !5574
  %24 = ptrtoint i8* %8 to i32, !dbg !5575
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5576
  store i32 %24, i32* %25, align 8, !dbg !5577
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5578
  store i32 0, i32* %26, align 4, !dbg !5579
  ret void, !dbg !5580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5586, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.value(metadata i32 %1, metadata !5587, metadata !DIExpression()), !dbg !5592
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5593
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5588, metadata !DIExpression()), !dbg !5592
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5594
  br i1 %4, label %19, label %5, !dbg !5596

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5591, metadata !DIExpression()), !dbg !5592
  %6 = icmp eq i32 %0, -22, !dbg !5597
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5597
  %8 = load i32, i32* %7, align 4, !dbg !5597
  br i1 %6, label %16, label %9, !dbg !5599

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5597
  %11 = icmp ule i32 %10, %0, !dbg !5597
  %12 = icmp ugt i32 %8, %0, !dbg !5597
  %13 = and i1 %12, %11, !dbg !5597
  %14 = icmp ugt i32 %8, %1, !dbg !5597
  %15 = and i1 %14, %13, !dbg !5597
  br i1 %15, label %18, label %19, !dbg !5597

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5597
  br i1 %17, label %18, label %19, !dbg !5599

18:                                               ; preds = %9, %16
  br label %19, !dbg !5600

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5592
  ret i32 %20, !dbg !5602
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5603 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5607, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i8* %1, metadata !5608, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5609, metadata !DIExpression()), !dbg !5610
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5611
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !5612
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5613, !srcloc !5614
  unreachable, !dbg !5615
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5616 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5634, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 %1, metadata !5635, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 %2, metadata !5636, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5637, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 0, metadata !5638, metadata !DIExpression()), !dbg !5644
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5645
  %9 = and i32 %8, 511, !dbg !5646
  call void @llvm.dbg.value(metadata i32 %9, metadata !5639, metadata !DIExpression()), !dbg !5644
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5647
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5647
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5648
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5648
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5643, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.value(metadata i32 0, metadata !5650, metadata !DIExpression()) #23, !dbg !5653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5655, !srcloc !5656
  call void @llvm.dbg.value(metadata i8* %6, metadata !5641, metadata !DIExpression(DW_OP_deref)), !dbg !5644
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5657
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5642, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i8* %5, metadata !5640, metadata !DIExpression(DW_OP_deref)), !dbg !5644
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %12, metadata !5638, metadata !DIExpression()), !dbg !5644
  %13 = load i8, i8* %5, align 1, !dbg !5659, !range !5661
  call void @llvm.dbg.value(metadata i8 %13, metadata !5640, metadata !DIExpression()), !dbg !5644
  %14 = icmp eq i8 %13, 0, !dbg !5659
  br i1 %14, label %15, label %32, !dbg !5662

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5663
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5664
  %18 = load i8, i8* %6, align 1, !dbg !5665, !range !5661
  call void @llvm.dbg.value(metadata i8 %18, metadata !5641, metadata !DIExpression()), !dbg !5644
  %19 = icmp eq i8 %18, 0, !dbg !5665
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5667
  %21 = load i32, i32* %20, align 4, !dbg !5667
  br i1 %19, label %27, label %22, !dbg !5668

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5669
  %24 = icmp eq i32 %23, 0, !dbg !5672
  br i1 %24, label %25, label %31, !dbg !5673

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5674
  br label %29, !dbg !5676

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5677
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5667
  br label %31, !dbg !5679

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5679
  br label %32, !dbg !5680

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5680
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5680
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5680
  ret void, !dbg !5680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5686, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 %1, metadata !5687, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 %2, metadata !5688, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i8* %3, metadata !5689, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i8 0, metadata !5690, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5691, metadata !DIExpression()), !dbg !5692
  store i8 0, i8* %3, align 1, !dbg !5693
  %5 = icmp ult i32 %2, -16777216, !dbg !5694
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5696
  br i1 %8, label %16, label %9, !dbg !5696

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5697
  %11 = icmp eq i32 %10, 0, !dbg !5697
  br i1 %11, label %12, label %13, !dbg !5699

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5691, metadata !DIExpression()), !dbg !5692
  store i8 1, i8* %3, align 1, !dbg !5702
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5692
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5691, metadata !DIExpression()), !dbg !5692
  br label %16, !dbg !5705

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5692
  ret %struct.__esf* %17, !dbg !5706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5707 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5711, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 %1, metadata !5712, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %2, metadata !5713, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 0, metadata !5714, metadata !DIExpression()), !dbg !5715
  store i8 0, i8* %2, align 1, !dbg !5716
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5717

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %5, metadata !5714, metadata !DIExpression()), !dbg !5715
  br label %11, !dbg !5720

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5721
  call void @llvm.dbg.value(metadata i32 %7, metadata !5714, metadata !DIExpression()), !dbg !5715
  br label %11, !dbg !5722

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5723
  call void @llvm.dbg.value(metadata i32 0, metadata !5714, metadata !DIExpression()), !dbg !5715
  br label %11, !dbg !5724

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5725
  call void @llvm.dbg.value(metadata i32 0, metadata !5714, metadata !DIExpression()), !dbg !5715
  br label %11, !dbg !5726

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5727
  br label %11, !dbg !5728

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5730 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5734, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.value(metadata i8* %1, metadata !5735, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.value(metadata i32 0, metadata !5736, metadata !DIExpression()), !dbg !5737
  store i8 0, i8* %1, align 1, !dbg !5738
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5739
  %4 = and i32 %3, 2, !dbg !5741
  %5 = icmp eq i32 %4, 0, !dbg !5742
  br i1 %5, label %6, label %33, !dbg !5743

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5744
  %8 = icmp sgt i32 %7, -1, !dbg !5746
  br i1 %8, label %9, label %33, !dbg !5747

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5748
  %11 = and i32 %10, 1073741824, !dbg !5750
  %12 = icmp eq i32 %11, 0, !dbg !5751
  br i1 %12, label %33, label %13, !dbg !5752

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5753
  br i1 %14, label %15, label %18, !dbg !5756

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5757
  %17 = load i32, i32* %16, align 4, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %17, metadata !5736, metadata !DIExpression()), !dbg !5737
  br label %33, !dbg !5759

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5760
  %20 = and i32 %19, 255, !dbg !5762
  %21 = icmp eq i32 %20, 0, !dbg !5763
  br i1 %21, label %24, label %22, !dbg !5764

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5765
  call void @llvm.dbg.value(metadata i32 %23, metadata !5736, metadata !DIExpression()), !dbg !5737
  br label %33, !dbg !5767

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5768
  %26 = and i32 %25, 65280, !dbg !5770
  %27 = icmp eq i32 %26, 0, !dbg !5771
  br i1 %27, label %29, label %28, !dbg !5772

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5773
  call void @llvm.dbg.value(metadata i32 0, metadata !5736, metadata !DIExpression()), !dbg !5737
  br label %33, !dbg !5775

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5776
  %31 = icmp ult i32 %30, 65536, !dbg !5778
  br i1 %31, label %33, label %32, !dbg !5779

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5780
  call void @llvm.dbg.value(metadata i32 0, metadata !5736, metadata !DIExpression()), !dbg !5737
  br label %33, !dbg !5782

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5737
  call void @llvm.dbg.value(metadata i32 %34, metadata !5736, metadata !DIExpression()), !dbg !5737
  ret i32 %34, !dbg !5783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5784 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5786, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.value(metadata i32 %1, metadata !5787, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.value(metadata i8* %2, metadata !5788, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.value(metadata i32 0, metadata !5789, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.value(metadata i32 -22, metadata !5790, metadata !DIExpression()), !dbg !5799
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5800
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5802
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5804
  %7 = and i32 %6, 2, !dbg !5805
  %8 = icmp eq i32 %7, 0, !dbg !5806
  br i1 %8, label %19, label %9, !dbg !5807

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %10, metadata !5791, metadata !DIExpression()), !dbg !5809
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5810
  %12 = and i32 %11, 128, !dbg !5812
  %13 = icmp eq i32 %12, 0, !dbg !5813
  br i1 %13, label %19, label %14, !dbg !5814

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5790, metadata !DIExpression()), !dbg !5799
  %15 = icmp eq i32 %1, 0, !dbg !5815
  br i1 %15, label %19, label %16, !dbg !5818

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5819
  %18 = and i32 %17, -129, !dbg !5819
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5819
  br label %19, !dbg !5821

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5799
  call void @llvm.dbg.value(metadata i32 %20, metadata !5790, metadata !DIExpression()), !dbg !5799
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5822
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5824
  %23 = and i32 %22, 16, !dbg !5825
  %24 = icmp eq i32 %23, 0, !dbg !5825
  br i1 %24, label %25, label %29, !dbg !5826

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5827
  %27 = and i32 %26, 2, !dbg !5828
  %28 = icmp eq i32 %27, 0, !dbg !5828
  br i1 %28, label %38, label %29, !dbg !5829

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5830
  %31 = and i32 %30, 2048, !dbg !5831
  %32 = icmp eq i32 %31, 0, !dbg !5831
  br i1 %32, label %38, label %33, !dbg !5832

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !5833
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #25, !dbg !5834
  call void @llvm.dbg.value(metadata i32 %35, metadata !5794, metadata !DIExpression()), !dbg !5835
  %36 = icmp eq i32 %35, 0, !dbg !5836
  br i1 %36, label %38, label %37, !dbg !5838

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !5839, metadata !DIExpression()) #23, !dbg !5842
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #23, !dbg !5845, !srcloc !5846
  call void @llvm.dbg.value(metadata i32 2, metadata !5789, metadata !DIExpression()), !dbg !5799
  br label %38, !dbg !5847

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !5799
  call void @llvm.dbg.value(metadata i32 %39, metadata !5789, metadata !DIExpression()), !dbg !5799
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5848
  %41 = or i32 %40, 255, !dbg !5848
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5848
  store i8 0, i8* %2, align 1, !dbg !5849
  ret i32 %39, !dbg !5850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !5851 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5855, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %0, metadata !5856, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %1, metadata !5857, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 0, metadata !5858, metadata !DIExpression()), !dbg !5862
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5863
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5865
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5867
  %6 = and i32 %5, 512, !dbg !5868
  %7 = icmp eq i32 %6, 0, !dbg !5868
  br i1 %7, label %18, label %8, !dbg !5869

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %9, metadata !5859, metadata !DIExpression()), !dbg !5871
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5872
  %11 = and i32 %10, 32768, !dbg !5874
  %12 = icmp ne i32 %11, 0, !dbg !5875
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5876
  br i1 %14, label %15, label %18, !dbg !5876

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5877
  %17 = and i32 %16, -32769, !dbg !5877
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5877
  br label %18, !dbg !5881

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5882
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5884
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5886
  %22 = or i32 %21, 65280, !dbg !5886
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5886
  store i8 0, i8* %1, align 1, !dbg !5887
  ret void, !dbg !5888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #14 !dbg !5889 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5895, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i32 0, metadata !5896, metadata !DIExpression()), !dbg !5897
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5898
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5900
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5902
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5904
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5906
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5908
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5910
  %8 = or i32 %7, -65536, !dbg !5910
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5910
  ret void, !dbg !5911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !5912 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5916, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.value(metadata i8* %0, metadata !5917, metadata !DIExpression()), !dbg !5918
  store i8 0, i8* %0, align 1, !dbg !5919
  ret void, !dbg !5920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5921 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5925, metadata !DIExpression()), !dbg !5928
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5929
  %3 = load i32, i32* %2, align 4, !dbg !5929
  %4 = inttoptr i32 %3 to i16*, !dbg !5930
  call void @llvm.dbg.value(metadata i16* %4, metadata !5926, metadata !DIExpression()), !dbg !5928
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5931
  %6 = or i32 %5, 256, !dbg !5931
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5931
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5932, !srcloc !5935
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5936, !srcloc !5939
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5940
  %8 = load i16, i16* %7, align 2, !dbg !5941
  call void @llvm.dbg.value(metadata i16 %8, metadata !5927, metadata !DIExpression()), !dbg !5928
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5942
  %10 = and i32 %9, -257, !dbg !5942
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5942
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5943, !srcloc !5935
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5945, !srcloc !5939
  %11 = icmp eq i16 %8, -8446, !dbg !5947
  ret i1 %11, !dbg !5949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !5950 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5951
  %2 = or i32 %1, 16, !dbg !5951
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5951
  ret void, !dbg !5952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !5953 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5956, metadata !DIExpression()), !dbg !5957
  br label %1, !dbg !5958

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5956, metadata !DIExpression()), !dbg !5957
  tail call fastcc void @__NVIC_SetPriority.13(i32 noundef %2) #24, !dbg !5960
  %3 = add nuw nsw i32 %2, 1, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %3, metadata !5956, metadata !DIExpression()), !dbg !5957
  %4 = icmp eq i32 %3, 45, !dbg !5964
  br i1 %4, label %5, label %1, !dbg !5958, !llvm.loop !5965

5:                                                ; preds = %1
  ret void, !dbg !5967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.13(i32 noundef %0) unnamed_addr #14 !dbg !5968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5970, metadata !DIExpression()), !dbg !5972
  call void @llvm.dbg.value(metadata i32 1, metadata !5971, metadata !DIExpression()), !dbg !5972
  %2 = and i32 %0, 15, !dbg !5973
  %3 = add nsw i32 %2, -4, !dbg !5973
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5973
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5973
  %6 = icmp slt i32 %0, 0, !dbg !5973
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5973
  store volatile i8 16, i8* %7, align 1, !dbg !5974
  ret void, !dbg !5976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6083, metadata !DIExpression()), !dbg !6084
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6085
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6087
  br i1 %3, label %4, label %12, !dbg !6088

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6089, !srcloc !6101
  call void @llvm.dbg.value(metadata i32 %5, metadata !6092, metadata !DIExpression()) #23, !dbg !6102
  %6 = icmp eq i32 %5, 0, !dbg !6103
  br i1 %6, label %12, label %7, !dbg !6104

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6105
  %9 = or i32 %8, 268435456, !dbg !6105
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6105
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6107
  %11 = and i32 %10, -32769, !dbg !6107
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6107
  br label %12, !dbg !6108

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !6109
  ret void, !dbg !6110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6111 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !6112
  ret void, !dbg !6113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !342, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i8 0, metadata !343, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i32 64, metadata !345, metadata !DIExpression()), !dbg !6114
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6115
  %3 = load i32, i32* %2, align 4, !dbg !6115
  %4 = add i32 %3, -64, !dbg !6117
  call void @llvm.dbg.value(metadata i32 %4, metadata !344, metadata !DIExpression()), !dbg !6114
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6118
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6119
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6120
  call void @llvm.dbg.value(metadata i8 1, metadata !343, metadata !DIExpression()), !dbg !6114
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !6121
  ret void, !dbg !6122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6123 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6124
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6125, !srcloc !6128
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6129, !srcloc !6132
  ret void, !dbg !6133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6134 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !6135, !srcloc !6138
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6139
  ret void, !dbg !6140
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #13 !dbg !6141 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6156, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i8 %1, metadata !6157, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %2, metadata !6158, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %3, metadata !6159, metadata !DIExpression()), !dbg !6160
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !6161
  ret void, !dbg !6163
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !6164 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6169, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.value(metadata i8 %1, metadata !6170, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.value(metadata i32 undef, metadata !6171, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.value(metadata i32 undef, metadata !6172, metadata !DIExpression()), !dbg !6174
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6175
  call void @llvm.dbg.value(metadata i8 %3, metadata !6173, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6174
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !6176
  call void @llvm.dbg.value(metadata i32 %4, metadata !6173, metadata !DIExpression()), !dbg !6174
  %5 = trunc i32 %4 to i8, !dbg !6177
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6178
  ret void, !dbg !6179
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #13 !dbg !6180 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6184, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i8 %1, metadata !6185, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i8 %2, metadata !6186, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i1 %3, metadata !6187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6190
  %5 = zext i8 %2 to i32, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %5, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 0, metadata !6188, metadata !DIExpression()), !dbg !6190
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 0, metadata !6188, metadata !DIExpression()), !dbg !6190
  %7 = icmp eq i8 %1, 0, !dbg !6192
  br i1 %7, label %29, label %8, !dbg !6195

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 %10, metadata !6188, metadata !DIExpression()), !dbg !6190
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6196
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6199
  %13 = load i32, i32* %12, align 4, !dbg !6199
  %14 = icmp eq i32 %13, 0, !dbg !6200
  br i1 %14, label %25, label %15, !dbg !6201

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6202

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !6204
  %18 = icmp eq i32 %17, 0, !dbg !6204
  br i1 %18, label %29, label %19, !dbg !6205

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6206
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !6207
  call void @llvm.dbg.value(metadata i32 %21, metadata !6189, metadata !DIExpression()), !dbg !6190
  %22 = icmp eq i32 %21, -22, !dbg !6208
  br i1 %22, label %29, label %23, !dbg !6210

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %24, metadata !6189, metadata !DIExpression()), !dbg !6190
  br label %25, !dbg !6212

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6190
  call void @llvm.dbg.value(metadata i32 %26, metadata !6189, metadata !DIExpression()), !dbg !6190
  %27 = add nuw nsw i32 %10, 1, !dbg !6213
  call void @llvm.dbg.value(metadata i32 %27, metadata !6188, metadata !DIExpression()), !dbg !6190
  %28 = icmp eq i32 %27, %6, !dbg !6192
  br i1 %28, label %29, label %8, !dbg !6195, !llvm.loop !6214

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6190
  ret i32 %30, !dbg !6216
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !6217 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6221, metadata !DIExpression()), !dbg !6223
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6224
  %3 = load i32, i32* %2, align 4, !dbg !6224
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6225, !range !6226
  %5 = icmp ult i32 %4, 2, !dbg !6225
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6227
  br i1 %7, label %8, label %15, !dbg !6227

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6228
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6229
  %11 = load i32, i32* %10, align 4, !dbg !6229
  %12 = and i32 %11, %9, !dbg !6230
  %13 = icmp eq i32 %12, 0, !dbg !6231
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6222, metadata !DIExpression()), !dbg !6223
  ret i32 %16, !dbg !6232
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6233 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6237, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6238, metadata !DIExpression()), !dbg !6240
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6241
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6241
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6239, metadata !DIExpression()), !dbg !6242
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6243
  %6 = load i32, i32* %5, align 4, !dbg !6243
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6244
  store i32 %6, i32* %7, align 4, !dbg !6245
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6246
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6247
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6248
  %11 = load i32, i32* %10, align 4, !dbg !6248
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #24, !dbg !6249
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !6250
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6251
  ret i32 %12, !dbg !6252
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !6253 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !6260, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !6261, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i32 undef, metadata !6262, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i32 %2, metadata !6263, metadata !DIExpression()), !dbg !6264
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !6265
  %5 = load i32, i32* %4, align 4, !dbg !6265
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !6266
  %7 = or i32 %6, %5, !dbg !6267
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !6268
  store i32 %7, i32* %8, align 4, !dbg !6269
  ret void, !dbg !6270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !6271 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6276, metadata !DIExpression()), !dbg !6277
  %3 = zext i8 %0 to i32, !dbg !6278
  %4 = icmp ugt i8 %0, 7, !dbg !6280
  br i1 %4, label %6, label %5, !dbg !6281

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !6282
  br label %6, !dbg !6283

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6277
  ret i32 %7, !dbg !6284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !6285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6289, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6290, metadata !DIExpression()), !dbg !6291
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !6292
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6293
  %4 = load i32, i32* %3, align 4, !dbg !6293
  %5 = and i32 %4, -32, !dbg !6294
  %6 = or i32 %5, %0, !dbg !6295
  %7 = or i32 %6, 16, !dbg !6295
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6296
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6297
  %9 = load i32, i32* %8, align 4, !dbg !6297
  %10 = or i32 %9, 1, !dbg !6298
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6299
  ret void, !dbg !6300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !6301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6304, metadata !DIExpression()), !dbg !6305
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6312, metadata !DIExpression()), !dbg !6313
  %2 = icmp ult i32 %0, 33, !dbg !6314
  br i1 %2, label %11, label %3, !dbg !6316

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6317
  br i1 %4, label %11, label %5, !dbg !6319

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6320
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6321, !range !6226
  %8 = mul nsw i32 %7, -2, !dbg !6322
  %9 = add nsw i32 %8, 62, !dbg !6322
  %10 = and i32 %9, 62, !dbg !6323
  br label %11, !dbg !6324

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6313
  ret i32 %12, !dbg !6325
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #13 !dbg !6326 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6330, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.value(metadata i8 %1, metadata !6331, metadata !DIExpression()), !dbg !6332
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !6333
  ret void, !dbg !6335
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !6336 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6340, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata i8 %1, metadata !6341, metadata !DIExpression()), !dbg !6347
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6348
  call void @llvm.dbg.value(metadata i8 %3, metadata !6342, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6347
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !6349
  call void @llvm.dbg.value(metadata i32 %4, metadata !6342, metadata !DIExpression()), !dbg !6347
  %5 = icmp ne i32 %4, -22, !dbg !6350
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %4, metadata !6343, metadata !DIExpression()), !dbg !6352
  br i1 %7, label %8, label %12, !dbg !6351

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6343, metadata !DIExpression()), !dbg !6352
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !6353
  %10 = add i32 %9, 1, !dbg !6356
  call void @llvm.dbg.value(metadata i32 %10, metadata !6343, metadata !DIExpression()), !dbg !6352
  %11 = icmp eq i32 %10, 8, !dbg !6357
  br i1 %11, label %12, label %8, !dbg !6358, !llvm.loop !6359

12:                                               ; preds = %8, %2
  ret void, !dbg !6361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !6362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6365, metadata !DIExpression()), !dbg !6366
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6367
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6368
  ret void, !dbg !6369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6370 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6375
  %2 = icmp ugt i32 %1, 8, !dbg !6377
  br i1 %2, label %14, label %3, !dbg !6378

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !6379
  call void @llvm.dbg.value(metadata i32 0, metadata !6374, metadata !DIExpression()), !dbg !6380
  %4 = icmp eq i32 %1, 0, !dbg !6381
  br i1 %4, label %12, label %5, !dbg !6384

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6384

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6374, metadata !DIExpression()), !dbg !6380
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6385
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !6387
  %10 = add nuw i32 %8, 1, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %10, metadata !6374, metadata !DIExpression()), !dbg !6380
  %11 = icmp eq i32 %10, %1, !dbg !6381
  br i1 %11, label %12, label %7, !dbg !6384, !llvm.loop !6389

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6391
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6392
  tail call void @arm_core_mpu_enable() #24, !dbg !6393
  br label %14, !dbg !6394

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6380
  ret i32 %15, !dbg !6395
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6396 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6403, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i8* %1, metadata !6404, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i8* %0, metadata !6405, metadata !DIExpression()), !dbg !6406
  %3 = load i8, i8* %1, align 1, !dbg !6407
  %4 = icmp eq i8 %3, 0, !dbg !6408
  br i1 %4, label %13, label %5, !dbg !6409

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6403, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i8* %8, metadata !6404, metadata !DIExpression()), !dbg !6406
  store i8 %6, i8* %7, align 1, !dbg !6410
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6412
  call void @llvm.dbg.value(metadata i8* %9, metadata !6403, metadata !DIExpression()), !dbg !6406
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6413
  call void @llvm.dbg.value(metadata i8* %10, metadata !6404, metadata !DIExpression()), !dbg !6406
  %11 = load i8, i8* %10, align 1, !dbg !6407
  %12 = icmp eq i8 %11, 0, !dbg !6408
  br i1 %12, label %13, label %5, !dbg !6409, !llvm.loop !6414

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6416
  ret i8* %0, !dbg !6417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6422, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8* %1, metadata !6423, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %2, metadata !6424, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8* %0, metadata !6425, metadata !DIExpression()), !dbg !6426
  %4 = icmp eq i32 %2, 0, !dbg !6427
  br i1 %4, label %22, label %5, !dbg !6428

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6422, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %7, metadata !6424, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i8* %8, metadata !6423, metadata !DIExpression()), !dbg !6426
  %9 = load i8, i8* %8, align 1, !dbg !6429
  %10 = icmp eq i8 %9, 0, !dbg !6430
  br i1 %10, label %16, label %11, !dbg !6431

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6432
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6434
  call void @llvm.dbg.value(metadata i8* %12, metadata !6423, metadata !DIExpression()), !dbg !6426
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6435
  call void @llvm.dbg.value(metadata i8* %13, metadata !6422, metadata !DIExpression()), !dbg !6426
  %14 = add i32 %7, -1, !dbg !6436
  call void @llvm.dbg.value(metadata i32 %14, metadata !6424, metadata !DIExpression()), !dbg !6426
  %15 = icmp eq i32 %14, 0, !dbg !6427
  br i1 %15, label %22, label %5, !dbg !6428, !llvm.loop !6437

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6422, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.value(metadata i32 %18, metadata !6424, metadata !DIExpression()), !dbg !6426
  store i8 0, i8* %17, align 1, !dbg !6439
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6441
  call void @llvm.dbg.value(metadata i8* %19, metadata !6422, metadata !DIExpression()), !dbg !6426
  %20 = add i32 %18, -1, !dbg !6442
  call void @llvm.dbg.value(metadata i32 %20, metadata !6424, metadata !DIExpression()), !dbg !6426
  %21 = icmp eq i32 %20, 0, !dbg !6443
  br i1 %21, label %22, label %16, !dbg !6444, !llvm.loop !6445

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6452, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i32 %1, metadata !6453, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i32 %1, metadata !6454, metadata !DIExpression()), !dbg !6455
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6456

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6452, metadata !DIExpression()), !dbg !6455
  %6 = load i8, i8* %5, align 1, !dbg !6457
  %7 = icmp eq i8 %6, %3, !dbg !6458
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6459
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6460
  call void @llvm.dbg.value(metadata i8* %10, metadata !6452, metadata !DIExpression()), !dbg !6455
  br i1 %9, label %11, label %4, !dbg !6459, !llvm.loop !6462

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6464
  ret i8* %12, !dbg !6465
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6468, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %1, metadata !6469, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* null, metadata !6470, metadata !DIExpression()), !dbg !6471
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6472

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6471
  call void @llvm.dbg.value(metadata i8* %6, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %5, metadata !6468, metadata !DIExpression()), !dbg !6471
  %7 = load i8, i8* %5, align 1, !dbg !6473
  %8 = icmp eq i8 %7, %3, !dbg !6476
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6477
  call void @llvm.dbg.value(metadata i8* %9, metadata !6470, metadata !DIExpression()), !dbg !6471
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6478
  call void @llvm.dbg.value(metadata i8* %10, metadata !6468, metadata !DIExpression()), !dbg !6471
  %11 = icmp eq i8 %7, 0, !dbg !6479
  br i1 %11, label %12, label %4, !dbg !6479, !llvm.loop !6480

12:                                               ; preds = %4
  ret i8* %9, !dbg !6482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6487, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata i32 0, metadata !6488, metadata !DIExpression()), !dbg !6489
  %2 = load i8, i8* %0, align 1, !dbg !6490
  %3 = icmp eq i8 %2, 0, !dbg !6491
  br i1 %3, label %11, label %4, !dbg !6492

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6488, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.value(metadata i8* %6, metadata !6487, metadata !DIExpression()), !dbg !6489
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6493
  call void @llvm.dbg.value(metadata i8* %7, metadata !6487, metadata !DIExpression()), !dbg !6489
  %8 = add i32 %5, 1, !dbg !6495
  call void @llvm.dbg.value(metadata i32 %8, metadata !6488, metadata !DIExpression()), !dbg !6489
  %9 = load i8, i8* %7, align 1, !dbg !6490
  %10 = icmp eq i8 %9, 0, !dbg !6491
  br i1 %10, label %11, label %4, !dbg !6492, !llvm.loop !6496

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6489
  ret i32 %12, !dbg !6498
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6499 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6503, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32 %1, metadata !6504, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i32 0, metadata !6505, metadata !DIExpression()), !dbg !6506
  %3 = load i8, i8* %0, align 1, !dbg !6507
  %4 = icmp ne i8 %3, 0, !dbg !6508
  %5 = icmp ne i32 %1, 0, !dbg !6509
  %6 = and i1 %4, %5, !dbg !6509
  br i1 %6, label %7, label %16, !dbg !6510

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6505, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.value(metadata i8* %9, metadata !6503, metadata !DIExpression()), !dbg !6506
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6511
  call void @llvm.dbg.value(metadata i8* %10, metadata !6503, metadata !DIExpression()), !dbg !6506
  %11 = add nuw i32 %8, 1, !dbg !6513
  call void @llvm.dbg.value(metadata i32 %11, metadata !6505, metadata !DIExpression()), !dbg !6506
  %12 = load i8, i8* %10, align 1, !dbg !6507
  %13 = icmp ne i8 %12, 0, !dbg !6508
  %14 = icmp ult i32 %11, %1, !dbg !6509
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6509
  br i1 %15, label %7, label %16, !dbg !6510, !llvm.loop !6514

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6506
  ret i32 %17, !dbg !6516
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6517 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6521, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i8* %1, metadata !6522, metadata !DIExpression()), !dbg !6523
  %3 = load i8, i8* %0, align 1, !dbg !6524
  %4 = load i8, i8* %1, align 1, !dbg !6525
  %5 = icmp ne i8 %3, %4, !dbg !6526
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6527
  br i1 %7, label %18, label %8, !dbg !6527

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6522, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.value(metadata i8* %10, metadata !6521, metadata !DIExpression()), !dbg !6523
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6528
  call void @llvm.dbg.value(metadata i8* %11, metadata !6521, metadata !DIExpression()), !dbg !6523
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6530
  call void @llvm.dbg.value(metadata i8* %12, metadata !6522, metadata !DIExpression()), !dbg !6523
  %13 = load i8, i8* %11, align 1, !dbg !6524
  %14 = load i8, i8* %12, align 1, !dbg !6525
  %15 = icmp ne i8 %13, %14, !dbg !6526
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6527
  br i1 %17, label %18, label %8, !dbg !6527, !llvm.loop !6531

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6524
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6525
  %21 = zext i8 %19 to i32, !dbg !6534
  %22 = zext i8 %20 to i32, !dbg !6535
  %23 = sub nsw i32 %21, %22, !dbg !6536
  ret i32 %23, !dbg !6537
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6538 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6542, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i8* %1, metadata !6543, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i32 %2, metadata !6544, metadata !DIExpression()), !dbg !6545
  %4 = icmp eq i32 %2, 0, !dbg !6546
  br i1 %4, label %23, label %5, !dbg !6546

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6544, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i8* %7, metadata !6543, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.value(metadata i8* %8, metadata !6542, metadata !DIExpression()), !dbg !6545
  %9 = load i8, i8* %8, align 1, !dbg !6547
  %10 = load i8, i8* %7, align 1, !dbg !6548
  %11 = icmp ne i8 %9, %10, !dbg !6549
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6550
  br i1 %13, label %19, label %14, !dbg !6550

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6551
  call void @llvm.dbg.value(metadata i8* %15, metadata !6542, metadata !DIExpression()), !dbg !6545
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6553
  call void @llvm.dbg.value(metadata i8* %16, metadata !6543, metadata !DIExpression()), !dbg !6545
  %17 = add i32 %6, -1, !dbg !6554
  call void @llvm.dbg.value(metadata i32 %17, metadata !6544, metadata !DIExpression()), !dbg !6545
  %18 = icmp eq i32 %17, 0, !dbg !6546
  br i1 %18, label %23, label %5, !dbg !6546, !llvm.loop !6555

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6558
  %21 = zext i8 %10 to i32, !dbg !6559
  %22 = sub nsw i32 %20, %21, !dbg !6560
  br label %23, !dbg !6561

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6561
  ret i32 %24, !dbg !6562
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6568, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i8* %1, metadata !6569, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i8** %2, metadata !6570, metadata !DIExpression()), !dbg !6573
  %4 = icmp eq i8* %0, null, !dbg !6574
  br i1 %4, label %5, label %7, !dbg !6574

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6575
  br label %7, !dbg !6574

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6574
  call void @llvm.dbg.value(metadata i8* %8, metadata !6571, metadata !DIExpression()), !dbg !6573
  %9 = load i8, i8* %8, align 1, !dbg !6576
  %10 = icmp eq i8 %9, 0, !dbg !6576
  br i1 %10, label %33, label %11, !dbg !6577

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6571, metadata !DIExpression()), !dbg !6573
  %14 = zext i8 %12 to i32, !dbg !6576
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !6578
  %16 = icmp eq i8* %15, null, !dbg !6577
  br i1 %16, label %21, label %17, !dbg !6579

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6580
  call void @llvm.dbg.value(metadata i8* %18, metadata !6571, metadata !DIExpression()), !dbg !6573
  %19 = load i8, i8* %18, align 1, !dbg !6576
  %20 = icmp eq i8 %19, 0, !dbg !6576
  br i1 %20, label %33, label %11, !dbg !6577, !llvm.loop !6582

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6572, metadata !DIExpression()), !dbg !6573
  %24 = zext i8 %22 to i32, !dbg !6584
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !6585
  %26 = icmp eq i8* %25, null, !dbg !6586
  br i1 %26, label %27, label %31, !dbg !6587

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6588
  call void @llvm.dbg.value(metadata i8* %28, metadata !6572, metadata !DIExpression()), !dbg !6573
  %29 = load i8, i8* %28, align 1, !dbg !6584
  %30 = icmp eq i8 %29, 0, !dbg !6584
  br i1 %30, label %33, label %21, !dbg !6590, !llvm.loop !6591

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6593
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6596
  br label %33, !dbg !6597

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6573
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6573
  store i8* %34, i8** %2, align 4, !dbg !6573
  ret i8* %35, !dbg !6598
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6601, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %1, metadata !6602, metadata !DIExpression()), !dbg !6603
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6604
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6605
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6606
  ret i8* %0, !dbg !6607
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6610, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8* %1, metadata !6611, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %2, metadata !6612, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8* %0, metadata !6613, metadata !DIExpression()), !dbg !6615
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6616
  call void @llvm.dbg.value(metadata i32 %4, metadata !6614, metadata !DIExpression()), !dbg !6615
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6617
  call void @llvm.dbg.value(metadata i8* %5, metadata !6610, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8* %1, metadata !6611, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %2, metadata !6612, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %2, metadata !6612, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6615
  %6 = icmp eq i32 %2, 0, !dbg !6618
  br i1 %6, label %18, label %7, !dbg !6619

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6620
  call void @llvm.dbg.value(metadata i8* %9, metadata !6610, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i8* %10, metadata !6611, metadata !DIExpression()), !dbg !6615
  %12 = load i8, i8* %10, align 1, !dbg !6621
  %13 = icmp eq i8 %12, 0, !dbg !6622
  br i1 %13, label %18, label %14, !dbg !6623

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6624
  call void @llvm.dbg.value(metadata i8* %15, metadata !6611, metadata !DIExpression()), !dbg !6615
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6626
  call void @llvm.dbg.value(metadata i8* %16, metadata !6610, metadata !DIExpression()), !dbg !6615
  store i8 %12, i8* %9, align 1, !dbg !6627
  call void @llvm.dbg.value(metadata i32 %11, metadata !6612, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.value(metadata i32 %11, metadata !6612, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6615
  %17 = icmp eq i32 %11, 0, !dbg !6618
  br i1 %17, label %18, label %7, !dbg !6619, !llvm.loop !6628

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6615
  store i8 0, i8* %19, align 1, !dbg !6630
  ret i8* %0, !dbg !6631
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6632 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6636, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %1, metadata !6637, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %2, metadata !6638, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %0, metadata !6639, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %1, metadata !6640, metadata !DIExpression()), !dbg !6641
  %4 = icmp eq i32 %2, 0, !dbg !6642
  br i1 %4, label %31, label %5, !dbg !6644

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %0, metadata !6639, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %2, metadata !6638, metadata !DIExpression()), !dbg !6641
  %6 = add i32 %2, -1, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %6, metadata !6638, metadata !DIExpression()), !dbg !6641
  %7 = icmp eq i32 %6, 0, !dbg !6646
  br i1 %7, label %23, label %8, !dbg !6647

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6648
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6648
  br label %11, !dbg !6648

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %14, metadata !6639, metadata !DIExpression()), !dbg !6641
  %15 = load i8, i8* %14, align 1, !dbg !6649
  %16 = load i8, i8* %13, align 1, !dbg !6650
  %17 = icmp eq i8 %15, %16, !dbg !6651
  br i1 %17, label %18, label %23, !dbg !6648

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6652
  call void @llvm.dbg.value(metadata i8* %19, metadata !6639, metadata !DIExpression()), !dbg !6641
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6654
  call void @llvm.dbg.value(metadata i8* %20, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %12, metadata !6638, metadata !DIExpression()), !dbg !6641
  %21 = add i32 %12, -1, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %21, metadata !6638, metadata !DIExpression()), !dbg !6641
  %22 = icmp eq i32 %21, 0, !dbg !6646
  br i1 %22, label %23, label %11, !dbg !6647, !llvm.loop !6655

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6641
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6641
  %26 = load i8, i8* %24, align 1, !dbg !6657
  %27 = zext i8 %26 to i32, !dbg !6657
  %28 = load i8, i8* %25, align 1, !dbg !6658
  %29 = zext i8 %28 to i32, !dbg !6658
  %30 = sub nsw i32 %27, %29, !dbg !6659
  br label %31, !dbg !6660

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6641
  ret i32 %32, !dbg !6661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6666, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %1, metadata !6667, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 %2, metadata !6668, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %0, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %1, metadata !6670, metadata !DIExpression()), !dbg !6671
  %4 = ptrtoint i8* %0 to i32, !dbg !6672
  %5 = ptrtoint i8* %1 to i32, !dbg !6672
  %6 = sub i32 %4, %5, !dbg !6672
  %7 = icmp ult i32 %6, %2, !dbg !6674
  br i1 %7, label %10, label %8, !dbg !6675

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6670, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %0, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 %2, metadata !6668, metadata !DIExpression()), !dbg !6671
  %9 = icmp eq i32 %2, 0, !dbg !6676
  br i1 %9, label %26, label %17, !dbg !6678

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6668, metadata !DIExpression()), !dbg !6671
  %12 = add i32 %11, -1, !dbg !6679
  call void @llvm.dbg.value(metadata i32 %12, metadata !6668, metadata !DIExpression()), !dbg !6671
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6682
  %14 = load i8, i8* %13, align 1, !dbg !6682
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6683
  store i8 %14, i8* %15, align 1, !dbg !6684
  %16 = icmp eq i32 %12, 0, !dbg !6685
  br i1 %16, label %26, label %10, !dbg !6686, !llvm.loop !6687

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6670, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %19, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 %20, metadata !6668, metadata !DIExpression()), !dbg !6671
  %21 = load i8, i8* %18, align 1, !dbg !6689
  store i8 %21, i8* %19, align 1, !dbg !6691
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6692
  call void @llvm.dbg.value(metadata i8* %22, metadata !6669, metadata !DIExpression()), !dbg !6671
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6693
  call void @llvm.dbg.value(metadata i8* %23, metadata !6670, metadata !DIExpression()), !dbg !6671
  %24 = add i32 %20, -1, !dbg !6694
  call void @llvm.dbg.value(metadata i32 %24, metadata !6668, metadata !DIExpression()), !dbg !6671
  %25 = icmp eq i32 %24, 0, !dbg !6676
  br i1 %25, label %26, label %17, !dbg !6678, !llvm.loop !6695

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6697
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6698 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6704, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8* %1, metadata !6705, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i32 %2, metadata !6706, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8* %0, metadata !6707, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8* %1, metadata !6708, metadata !DIExpression()), !dbg !6709
  %4 = icmp eq i32 %2, 0, !dbg !6710
  br i1 %4, label %14, label %5, !dbg !6711

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i8* %7, metadata !6707, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.value(metadata i32 %8, metadata !6706, metadata !DIExpression()), !dbg !6709
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6712
  call void @llvm.dbg.value(metadata i8* %9, metadata !6708, metadata !DIExpression()), !dbg !6709
  %10 = load i8, i8* %6, align 1, !dbg !6714
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6715
  call void @llvm.dbg.value(metadata i8* %11, metadata !6707, metadata !DIExpression()), !dbg !6709
  store i8 %10, i8* %7, align 1, !dbg !6716
  %12 = add i32 %8, -1, !dbg !6717
  call void @llvm.dbg.value(metadata i32 %12, metadata !6706, metadata !DIExpression()), !dbg !6709
  %13 = icmp eq i32 %12, 0, !dbg !6710
  br i1 %13, label %14, label %5, !dbg !6711, !llvm.loop !6718

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6720
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6725, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i32 %1, metadata !6726, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i32 %2, metadata !6727, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i8* %0, metadata !6728, metadata !DIExpression()), !dbg !6730
  %4 = trunc i32 %1 to i8, !dbg !6731
  call void @llvm.dbg.value(metadata i8 %4, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i32 %2, metadata !6727, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i8* %0, metadata !6728, metadata !DIExpression()), !dbg !6730
  %5 = icmp eq i32 %2, 0, !dbg !6732
  br i1 %5, label %12, label %6, !dbg !6733

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6727, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i8* %8, metadata !6728, metadata !DIExpression()), !dbg !6730
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6734
  call void @llvm.dbg.value(metadata i8* %9, metadata !6728, metadata !DIExpression()), !dbg !6730
  store i8 %4, i8* %8, align 1, !dbg !6736
  %10 = add i32 %7, -1, !dbg !6737
  call void @llvm.dbg.value(metadata i32 %10, metadata !6727, metadata !DIExpression()), !dbg !6730
  %11 = icmp eq i32 %10, 0, !dbg !6732
  br i1 %11, label %12, label %6, !dbg !6733, !llvm.loop !6738

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6740
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6745, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata i32 %1, metadata !6746, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata i32 %2, metadata !6747, metadata !DIExpression()), !dbg !6751
  %4 = icmp eq i32 %2, 0, !dbg !6752
  br i1 %4, label %17, label %5, !dbg !6753

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6754

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6755
  call void @llvm.dbg.value(metadata i8* %9, metadata !6748, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %8, metadata !6747, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.value(metadata i8* %9, metadata !6748, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6755
  %10 = load i8, i8* %9, align 1, !dbg !6756
  %11 = icmp eq i8 %10, %6, !dbg !6759
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6760
  call void @llvm.dbg.value(metadata i8* %12, metadata !6748, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %13, metadata !6747, metadata !DIExpression()), !dbg !6751
  br i1 %15, label %16, label %7, !dbg !6760, !llvm.loop !6761

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6763

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6751
  ret i8* %19, !dbg !6764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6765 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6769
  ret void, !dbg !6770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6773, metadata !DIExpression()), !dbg !6774
  ret i32 -1, !dbg !6775
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6780, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.value(metadata i32* %1, metadata !6781, metadata !DIExpression()), !dbg !6782
  %3 = ptrtoint i32* %1 to i32, !dbg !6783
  %4 = and i32 %3, -2, !dbg !6783
  %5 = icmp eq i32 %4, 2, !dbg !6783
  br i1 %5, label %6, label %9, !dbg !6783

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6784
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6784
  br label %9, !dbg !6785

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6785
  ret i32 %10, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6789, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32* %1, metadata !6790, metadata !DIExpression()), !dbg !6791
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6792
  ret i32 %3, !dbg !6793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6797, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i32* %1, metadata !6798, metadata !DIExpression()), !dbg !6799
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6800, !srcloc !6802
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6803
  ret i32 %3, !dbg !6804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6810, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32* %1, metadata !6811, metadata !DIExpression()), !dbg !6814
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6815
  call void @llvm.dbg.value(metadata i32 %3, metadata !6812, metadata !DIExpression()), !dbg !6814
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6816
  call void @llvm.dbg.value(metadata i32 %4, metadata !6813, metadata !DIExpression()), !dbg !6814
  %5 = icmp ne i32 %3, %4, !dbg !6817
  %6 = sext i1 %5 to i32, !dbg !6818
  ret i32 %6, !dbg !6819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6820 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6824, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32 %1, metadata !6825, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32 %2, metadata !6826, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32* %3, metadata !6827, metadata !DIExpression()), !dbg !6828
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6829
  ret i32 %5, !dbg !6830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6833, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %1, metadata !6834, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %2, metadata !6835, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32* %3, metadata !6836, metadata !DIExpression()), !dbg !6837
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6838, !srcloc !6840
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6841
  ret i32 %5, !dbg !6842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6843 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6845, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32 %1, metadata !6846, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32 %2, metadata !6847, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32* %3, metadata !6848, metadata !DIExpression()), !dbg !6853
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6854
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6856
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6856
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6856
  br i1 %11, label %33, label %12, !dbg !6856

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6853
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6853
  call void @llvm.dbg.value(metadata i8* %14, metadata !6851, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32 %13, metadata !6849, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32 %1, metadata !6850, metadata !DIExpression()), !dbg !6853
  br label %15, !dbg !6857

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6859
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6853
  call void @llvm.dbg.value(metadata i8* %17, metadata !6851, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32 %16, metadata !6850, metadata !DIExpression()), !dbg !6853
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6860
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6863
  call void @llvm.dbg.value(metadata i8* %19, metadata !6851, metadata !DIExpression()), !dbg !6853
  %20 = load i8, i8* %17, align 1, !dbg !6864
  %21 = zext i8 %20 to i32, !dbg !6865
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6860
  %23 = icmp eq i32 %22, -1, !dbg !6866
  br i1 %23, label %30, label %24, !dbg !6867

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6868
  call void @llvm.dbg.value(metadata i32 %25, metadata !6850, metadata !DIExpression()), !dbg !6853
  %26 = icmp eq i32 %25, 0, !dbg !6869
  br i1 %26, label %27, label %15, !dbg !6870, !llvm.loop !6871

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %28, metadata !6849, metadata !DIExpression()), !dbg !6853
  %29 = icmp eq i32 %28, 0, !dbg !6874
  br i1 %29, label %30, label %12, !dbg !6875, !llvm.loop !6876

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6853
  call void @llvm.dbg.value(metadata i32 %31, metadata !6849, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.label(metadata !6852), !dbg !6879
  %32 = sub i32 %2, %31, !dbg !6880
  br label %33, !dbg !6881

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6853
  ret i32 %34, !dbg !6882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6887, metadata !DIExpression()), !dbg !6888
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6889
  %3 = icmp eq i32 %2, -1, !dbg !6891
  br i1 %3, label %8, label %4, !dbg !6892

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6893
  %6 = icmp eq i32 %5, -1, !dbg !6894
  %7 = sext i1 %6 to i32, !dbg !6893
  br label %8, !dbg !6895

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6888
  ret i32 %9, !dbg !6896
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6897 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6899, metadata !DIExpression()), !dbg !6910
  %8 = bitcast i64* %2 to i8*, !dbg !6911
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !6911
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !6900, metadata !DIExpression()), !dbg !6912
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !6912
  store i64 %9, i64* %2, align 8, !dbg !6912
  %10 = bitcast i64* %4 to i8*, !dbg !6913
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !6913
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !6908, metadata !DIExpression()), !dbg !6914
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !6914
  store i64 %11, i64* %4, align 8, !dbg !6914
  %12 = bitcast i64* %6 to i8*, !dbg !6915
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !6915
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !6909, metadata !DIExpression()), !dbg !6916
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !6916
  store i64 %13, i64* %6, align 8, !dbg !6916
  %14 = trunc i64 %9 to i32, !dbg !6917
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !6917
  %16 = tail call fastcc zeroext i1 @device_is_ready.33(%struct.device* noundef %15) #24, !dbg !6919
  %17 = trunc i64 %13 to i32, !dbg !6920
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !6920
  br i1 %16, label %19, label %26, !dbg !6920

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !6920
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !6920
  %22 = tail call fastcc zeroext i1 @device_is_ready.33(%struct.device* noundef %21) #24, !dbg !6921
  br i1 %22, label %23, label %26, !dbg !6922

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready.33(%struct.device* noundef %18) #24, !dbg !6923
  br i1 %24, label %25, label %26, !dbg !6924

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !6925
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !6926
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !6927
  br label %26, !dbg !6928

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !6910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !6929
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !6929
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !6929
  ret i32 %27, !dbg !6929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.33(%struct.device* noundef %0) unnamed_addr #1 !dbg !6930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6934, metadata !DIExpression()), !dbg !6935
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6936, !srcloc !6938
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.34(%struct.device* noundef %0) #24, !dbg !6939
  ret i1 %2, !dbg !6940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6941 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !6946, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i32 %1, metadata !6947, metadata !DIExpression()), !dbg !6948
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !6949
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !6949
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !6950
  %6 = load i8, i8* %5, align 4, !dbg !6950
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !6951
  %8 = load i16, i16* %7, align 2, !dbg !6951
  %9 = zext i16 %8 to i32, !dbg !6952
  %10 = or i32 %9, %1, !dbg !6953
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !6954
  ret void, !dbg !6955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !6956 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6959, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata i8 %1, metadata !6960, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata i32 %2, metadata !6961, metadata !DIExpression()), !dbg !6962
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6963, !srcloc !6965
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !6968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6970, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i8 %1, metadata !6971, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %2, metadata !6972, metadata !DIExpression()), !dbg !6977
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6978
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !6978
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !6978
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !6973, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i8* undef, metadata !6974, metadata !DIExpression()), !dbg !6977
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !6979
  %8 = bitcast i8** %7 to %union.anon.1**, !dbg !6979
  %9 = load %union.anon.1*, %union.anon.1** %8, align 4, !dbg !6979
  call void @llvm.dbg.value(metadata %union.anon.1* %9, metadata !6976, metadata !DIExpression()), !dbg !6977
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !6980
  %13 = icmp ne i32 %12, 1048577, !dbg !6980
  %14 = or i1 %13, %11, !dbg !6980
  %15 = xor i32 %2, 786432, !dbg !6980
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !6980
  call void @llvm.dbg.value(metadata i32 %16, metadata !6972, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %16, metadata !6972, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !6977
  %17 = and i32 %16, 1, !dbg !6982
  %18 = icmp eq i32 %17, 0, !dbg !6984
  %19 = zext i8 %1 to i32, !dbg !6985
  %20 = shl nuw i32 1, %19, !dbg !6985
  br i1 %18, label %25, label %21, !dbg !6986

21:                                               ; preds = %3
  %22 = getelementptr inbounds %union.anon.1, %union.anon.1* %9, i32 0, i32 0, !dbg !6987
  %23 = load i32, i32* %22, align 4, !dbg !6989
  %24 = or i32 %23, %20, !dbg !6989
  store i32 %24, i32* %22, align 4, !dbg !6989
  br label %30, !dbg !6990

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !6991
  %27 = getelementptr inbounds %union.anon.1, %union.anon.1* %9, i32 0, i32 0, !dbg !6993
  %28 = load i32, i32* %27, align 4, !dbg !6994
  %29 = and i32 %28, %26, !dbg !6994
  store i32 %29, i32* %27, align 4, !dbg !6994
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !6995
  call void @llvm.dbg.value(metadata i32 %31, metadata !6972, metadata !DIExpression()), !dbg !6977
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !6996
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !6996
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #25, !dbg !6997
  ret void, !dbg !6998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.34(%struct.device* noundef %0) unnamed_addr #1 !dbg !6999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7001, metadata !DIExpression()), !dbg !7002
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !7003
  ret i1 %2, !dbg !7004
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7007, metadata !DIExpression()), !dbg !7008
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !7009
  ret void, !dbg !7010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7015, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.value(metadata i32 %1, metadata !7016, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7017, metadata !DIExpression()), !dbg !7021
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7022
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7022
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7022
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7018, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.value(metadata i32 %0, metadata !7020, metadata !DIExpression()), !dbg !7021
  %7 = icmp slt i32 %0, %1, !dbg !7023
  br i1 %7, label %8, label %22, !dbg !7026

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7020, metadata !DIExpression()), !dbg !7021
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !7027
  %11 = icmp eq i32 %10, 0, !dbg !7027
  br i1 %11, label %19, label %12, !dbg !7030

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !7031
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7033
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7033
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7035
  br i1 %15, label %19, label %16, !dbg !7036

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7037
  %18 = load i8*, i8** %17, align 4, !dbg !7037
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7038
  br label %19, !dbg !7039

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7040
  call void @llvm.dbg.value(metadata i32 %20, metadata !7020, metadata !DIExpression()), !dbg !7021
  %21 = icmp eq i32 %20, %1, !dbg !7023
  br i1 %21, label %22, label %8, !dbg !7026, !llvm.loop !7041

22:                                               ; preds = %19, %3
  ret void, !dbg !7043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !7044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7046, metadata !DIExpression()), !dbg !7047
  %2 = shl nuw i32 1, %0, !dbg !7048
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !7051
  ret i32 %3, !dbg !7052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !7053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7057, metadata !DIExpression()), !dbg !7058
  %2 = shl nuw i32 1, %0, !dbg !7059
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !7062
  ret void, !dbg !7063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7067, metadata !DIExpression()), !dbg !7068
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7069
  ret void, !dbg !7070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7073, metadata !DIExpression()), !dbg !7074
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7075
  %3 = and i32 %2, %0, !dbg !7075
  %4 = icmp eq i32 %3, %0, !dbg !7076
  %5 = zext i1 %4 to i32, !dbg !7076
  ret i32 %5, !dbg !7077
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7078 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7080, metadata !DIExpression()), !dbg !7081
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7086, metadata !DIExpression()), !dbg !7087
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !7088
  ret void, !dbg !7089
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7090 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7092, metadata !DIExpression()), !dbg !7093
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !7094
  ret void, !dbg !7095
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7098, metadata !DIExpression()), !dbg !7099
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !7100
  ret void, !dbg !7101
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7104, metadata !DIExpression()), !dbg !7105
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !7106
  ret void, !dbg !7107
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7108 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7110, metadata !DIExpression()), !dbg !7111
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !7112
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7116, metadata !DIExpression()), !dbg !7117
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !7118
  ret i32 0, !dbg !7119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !667 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !671, metadata !DIExpression()), !dbg !7120
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !7121
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !7123
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !7125
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !7127
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !7129
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !7131
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !7133
  ret void, !dbg !7135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7138, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata i32 0, metadata !7139, metadata !DIExpression()), !dbg !7140
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7141
  %3 = load i32, i32* %2, align 4, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %3, metadata !7139, metadata !DIExpression()), !dbg !7140
  %4 = shl nuw i32 1, %0, !dbg !7142
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !7143
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !7144
  ret void, !dbg !7145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7148, metadata !DIExpression()), !dbg !7149
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7150
  %3 = or i32 %2, %0, !dbg !7150
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7150
  ret void, !dbg !7151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !7152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7154, metadata !DIExpression()), !dbg !7155
  %2 = icmp slt i32 %0, 32, !dbg !7156
  br i1 %2, label %3, label %5, !dbg !7158

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7159
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !7161
  br label %5, !dbg !7162

5:                                                ; preds = %1, %3
  ret void, !dbg !7163
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7166, metadata !DIExpression()), !dbg !7167
  %2 = xor i32 %0, -1, !dbg !7168
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7168
  %4 = and i32 %3, %2, !dbg !7168
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7168
  ret void, !dbg !7169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !7170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7174, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i32 %1, metadata !7175, metadata !DIExpression()), !dbg !7176
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7177

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7178
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !7180
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !7181
  br label %11, !dbg !7182

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7183
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !7184
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !7185
  br label %11, !dbg !7186

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7187
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !7188
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !7189
  br label %11, !dbg !7190

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7191
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !7192
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !7193
  br label %11, !dbg !7194

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7198, metadata !DIExpression()), !dbg !7199
  %2 = xor i32 %0, -1, !dbg !7200
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7200
  %4 = and i32 %3, %2, !dbg !7200
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7200
  ret void, !dbg !7201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7204, metadata !DIExpression()), !dbg !7205
  %2 = xor i32 %0, -1, !dbg !7206
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7206
  %4 = and i32 %3, %2, !dbg !7206
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7206
  ret void, !dbg !7207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7210, metadata !DIExpression()), !dbg !7211
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7212
  %3 = or i32 %2, %0, !dbg !7212
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7212
  ret void, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7216, metadata !DIExpression()), !dbg !7217
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7218
  %3 = or i32 %2, %0, !dbg !7218
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7218
  ret void, !dbg !7219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7224, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7225, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* %2, metadata !7226, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7229, metadata !DIExpression()), !dbg !7230
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7231
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7231
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7233
  br i1 %6, label %7, label %9, !dbg !7234

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7235
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7236
  store i8* %2, i8** %8, align 4, !dbg !7237
  br label %9, !dbg !7238

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7230
  ret i32 %10, !dbg !7239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7242, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7244, metadata !DIExpression()), !dbg !7245
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7246
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7247
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7248
  store i8* null, i8** %3, align 4, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !7251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7253, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %1, metadata !7254, metadata !DIExpression()), !dbg !7258
  call void @llvm.dbg.value(metadata i8* %1, metadata !7255, metadata !DIExpression()), !dbg !7258
  %3 = bitcast i8* %1 to i32*, !dbg !7259
  %4 = load i32, i32* %3, align 4, !dbg !7259
  %5 = add i32 %4, -37, !dbg !7259
  %6 = icmp ult i32 %5, -9, !dbg !7259
  br i1 %6, label %15, label %7, !dbg !7261

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7262
  %9 = inttoptr i32 %8 to i32*, !dbg !7263
  call void @llvm.dbg.value(metadata i32* %9, metadata !7256, metadata !DIExpression()), !dbg !7258
  %10 = load volatile i32, i32* %9, align 4, !dbg !7264
  call void @llvm.dbg.value(metadata i32 %10, metadata !7257, metadata !DIExpression()), !dbg !7258
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7265
  %12 = bitcast i8* %11 to i32*, !dbg !7265
  %13 = load i32, i32* %12, align 4, !dbg !7265
  %14 = or i32 %13, %10, !dbg !7266
  call void @llvm.dbg.value(metadata i32 %14, metadata !7257, metadata !DIExpression()), !dbg !7258
  store volatile i32 %14, i32* %9, align 4, !dbg !7267
  br label %15, !dbg !7268

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7258
  ret i32 %16, !dbg !7269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !7270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7272, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8* %1, metadata !7273, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8* %1, metadata !7274, metadata !DIExpression()), !dbg !7277
  %3 = bitcast i8* %1 to i32*, !dbg !7278
  %4 = load i32, i32* %3, align 4, !dbg !7278
  %5 = add i32 %4, -37, !dbg !7278
  %6 = icmp ult i32 %5, -9, !dbg !7278
  br i1 %6, label %16, label %7, !dbg !7280

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7281
  %9 = inttoptr i32 %8 to i32*, !dbg !7282
  call void @llvm.dbg.value(metadata i32* %9, metadata !7275, metadata !DIExpression()), !dbg !7277
  %10 = load volatile i32, i32* %9, align 4, !dbg !7283
  call void @llvm.dbg.value(metadata i32 %10, metadata !7276, metadata !DIExpression()), !dbg !7277
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7284
  %12 = bitcast i8* %11 to i32*, !dbg !7284
  %13 = load i32, i32* %12, align 4, !dbg !7284
  %14 = xor i32 %13, -1, !dbg !7285
  %15 = and i32 %10, %14, !dbg !7286
  call void @llvm.dbg.value(metadata i32 %15, metadata !7276, metadata !DIExpression()), !dbg !7277
  store volatile i32 %15, i32* %9, align 4, !dbg !7287
  br label %16, !dbg !7288

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7277
  ret i32 %17, !dbg !7289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #7 !dbg !7290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7292, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i8* %1, metadata !7293, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32* %2, metadata !7294, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i8* %1, metadata !7295, metadata !DIExpression()), !dbg !7299
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %4, metadata !7296, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32 %4, metadata !7297, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32 %4, metadata !7298, metadata !DIExpression()), !dbg !7299
  %5 = bitcast i8* %1 to i32*, !dbg !7301
  %6 = load i32, i32* %5, align 4, !dbg !7301
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !7302

7:                                                ; preds = %3
  br label %10, !dbg !7303

8:                                                ; preds = %3
  br label %10, !dbg !7305

9:                                                ; preds = %3
  br label %10, !dbg !7306

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !7307
  br label %12, !dbg !7308

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !7299
  ret i32 %13, !dbg !7308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !7309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7311, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i8* %1, metadata !7312, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i8* %2, metadata !7313, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i8* %1, metadata !7314, metadata !DIExpression()), !dbg !7319
  %4 = bitcast i8* %1 to i32*, !dbg !7320
  %5 = load i32, i32* %4, align 4, !dbg !7320
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !7321
  call void @llvm.dbg.value(metadata i32 %6, metadata !7318, metadata !DIExpression()), !dbg !7319
  %7 = icmp slt i32 %6, 0, !dbg !7322
  br i1 %7, label %22, label %8, !dbg !7324

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7314, metadata !DIExpression()), !dbg !7319
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7325
  %10 = bitcast i8* %9 to i32*, !dbg !7325
  %11 = load i32, i32* %10, align 4, !dbg !7325
  %12 = lshr i32 %11, 16, !dbg !7325
  %13 = and i32 %12, 7, !dbg !7325
  %14 = lshr i32 %11, 8, !dbg !7326
  %15 = and i32 %14, 31, !dbg !7326
  %16 = shl i32 %13, %15, !dbg !7327
  call void @llvm.dbg.value(metadata i32 %16, metadata !7317, metadata !DIExpression()), !dbg !7319
  %17 = and i32 %11, 255, !dbg !7328
  %18 = or i32 %17, 1073887232, !dbg !7329
  %19 = inttoptr i32 %18 to i32*, !dbg !7330
  call void @llvm.dbg.value(metadata i32* %19, metadata !7315, metadata !DIExpression()), !dbg !7319
  %20 = load volatile i32, i32* %19, align 4, !dbg !7331
  call void @llvm.dbg.value(metadata i32 %20, metadata !7316, metadata !DIExpression()), !dbg !7319
  %21 = or i32 %16, %20, !dbg !7332
  call void @llvm.dbg.value(metadata i32 %21, metadata !7316, metadata !DIExpression()), !dbg !7319
  store volatile i32 %21, i32* %19, align 4, !dbg !7333
  br label %22, !dbg !7334

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7319
  ret i32 %23, !dbg !7335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !7336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7340, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i32 0, metadata !7341, metadata !DIExpression()), !dbg !7342
  %2 = add i32 %0, -1, !dbg !7343
  %3 = icmp ult i32 %2, 4, !dbg !7343
  br i1 %3, label %4, label %7, !dbg !7343

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7343
  %6 = load i32, i32* %5, align 4, !dbg !7343
  call void @llvm.dbg.value(metadata i32 %6, metadata !7341, metadata !DIExpression()), !dbg !7342
  br label %7, !dbg !7344

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7342
  ret i32 %8, !dbg !7345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7346 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7348, metadata !DIExpression()), !dbg !7351
  tail call void @config_enable_default_clocks() #25, !dbg !7352
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !7353
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !7353
  %4 = lshr i32 %3, 4, !dbg !7353
  %5 = and i32 %4, 15, !dbg !7353
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7353
  %7 = load i8, i8* %6, align 1, !dbg !7353
  %8 = zext i8 %7 to i32, !dbg !7353
  %9 = lshr i32 %2, %8, !dbg !7353
  call void @llvm.dbg.value(metadata i32 %9, metadata !7349, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !7350, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7351
  %10 = icmp ult i32 %9, 32000000, !dbg !7354
  br i1 %10, label %11, label %13, !dbg !7356

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !7357
  br label %13, !dbg !7359

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !7360
  tail call fastcc void @set_up_plls() #24, !dbg !7361
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7362
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !7365
  br label %14, !dbg !7366

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7367
  %16 = icmp eq i32 %15, 12, !dbg !7368
  br i1 %16, label %17, label %14, !dbg !7366, !llvm.loop !7369

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !7371
  br i1 %18, label %19, label %21, !dbg !7373

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !7374
  br label %21, !dbg !7376

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !7377
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !7378
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !7379
  ret i32 0, !dbg !7380
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !7381 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7383
  %2 = and i32 %1, 240, !dbg !7383
  ret i32 %2, !dbg !7384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !7385 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7386
  %2 = icmp eq i32 %1, 1, !dbg !7390
  br i1 %2, label %7, label %3, !dbg !7391

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7392
  br label %4, !dbg !7394

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7395
  %6 = icmp eq i32 %5, 1, !dbg !7396
  br i1 %6, label %7, label %4, !dbg !7394, !llvm.loop !7397

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !7399
  br label %8, !dbg !7402

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !7403
  %10 = icmp eq i32 %9, 1, !dbg !7404
  br i1 %10, label %11, label %8, !dbg !7402, !llvm.loop !7405

11:                                               ; preds = %8
  ret void, !dbg !7407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7408 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7409
  %2 = icmp eq i32 %1, 12, !dbg !7411
  br i1 %2, label %3, label %4, !dbg !7412

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7413
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !7415
  br label %4, !dbg !7416

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !7417
  tail call void @config_pll_sysclock() #25, !dbg !7418
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !7419
  br label %5, !dbg !7420

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !7421
  %7 = icmp eq i32 %6, 1, !dbg !7422
  br i1 %7, label %8, label %5, !dbg !7420, !llvm.loop !7423

8:                                                ; preds = %5
  ret void, !dbg !7425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !7426 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7428, metadata !DIExpression()), !dbg !7429
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7430
  %2 = and i32 %1, -241, !dbg !7430
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7430
  ret void, !dbg !7431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !7432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7434, metadata !DIExpression()), !dbg !7435
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7436
  %3 = and i32 %2, -4, !dbg !7436
  %4 = or i32 %3, %0, !dbg !7436
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7436
  ret void, !dbg !7437
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !7438 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7439
  %2 = and i32 %1, 12, !dbg !7439
  ret i32 %2, !dbg !7440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !7441 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7443, metadata !DIExpression()), !dbg !7444
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7445
  %2 = and i32 %1, -1793, !dbg !7445
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7445
  ret void, !dbg !7446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !7447 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7449, metadata !DIExpression()), !dbg !7450
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7451
  %2 = and i32 %1, -14337, !dbg !7451
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7451
  ret void, !dbg !7452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !7453 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7454
  %2 = icmp eq i32 %1, 1, !dbg !7456
  br i1 %2, label %7, label %3, !dbg !7457

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7458
  br label %4, !dbg !7460

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7461
  %6 = icmp eq i32 %5, 1, !dbg !7462
  br i1 %6, label %7, label %4, !dbg !7460, !llvm.loop !7463

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !7465
  br label %8, !dbg !7466

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7467
  %10 = icmp eq i32 %9, 4, !dbg !7468
  br i1 %10, label %11, label %8, !dbg !7466, !llvm.loop !7469

11:                                               ; preds = %8
  ret void, !dbg !7471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !7472 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7473
  %2 = and i32 %1, -16777217, !dbg !7473
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7473
  ret void, !dbg !7474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !7475 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7476
  %2 = or i32 %1, 16777216, !dbg !7476
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7476
  ret void, !dbg !7477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !7478 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7479
  %2 = lshr i32 %1, 25, !dbg !7480
  %3 = and i32 %2, 1, !dbg !7480
  ret i32 %3, !dbg !7481
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !7482 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7483
  %2 = lshr i32 %1, 1, !dbg !7484
  %3 = and i32 %2, 1, !dbg !7484
  ret i32 %3, !dbg !7485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !7486 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7487
  %2 = or i32 %1, 1, !dbg !7487
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !7489 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !7490
  %2 = or i32 %1, 1, !dbg !7490
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !7492 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !7493
  %2 = lshr i32 %1, 1, !dbg !7494
  %3 = and i32 %2, 1, !dbg !7494
  ret i32 %3, !dbg !7495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7496 {
  ret i32 16000000, !dbg !7498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !7501 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !7502
  ret void, !dbg !7503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !7504 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7508, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 262144, metadata !7509, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7510, metadata !DIExpression()), !dbg !7511
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7512
  %2 = and i32 %1, -16580609, !dbg !7512
  %3 = or i32 %2, 4456448, !dbg !7512
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7512
  ret void, !dbg !7513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #12 !dbg !7514 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !7515
  %2 = zext i8 %1 to i32, !dbg !7515
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !7515
  ret i32 %3, !dbg !7516
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #13 !dbg !7517 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !7518
  ret void, !dbg !7519
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #13 !dbg !7520 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7522, metadata !DIExpression()), !dbg !7524
  %2 = bitcast i32* %1 to i8*, !dbg !7525
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7525
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7523, metadata !DIExpression()), !dbg !7526
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !7527
  %4 = or i32 %3, 1, !dbg !7527
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !7527
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !7528
  %6 = and i32 %5, 1, !dbg !7528
  store volatile i32 %6, i32* %1, align 4, !dbg !7529
  %7 = load volatile i32, i32* %1, align 4, !dbg !7530
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7531
  ret void, !dbg !7531
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7532 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7534, metadata !DIExpression()), !dbg !7535
  %2 = tail call fastcc zeroext i1 @device_is_ready.44() #24, !dbg !7536
  br i1 %2, label %3, label %4, !dbg !7538

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7539
  br label %4, !dbg !7540

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7535
  ret i32 %5, !dbg !7541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.44() unnamed_addr #1 !dbg !7542 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !7546, metadata !DIExpression()), !dbg !7547
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7548, !srcloc !7550
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #24, !dbg !7551
  ret i1 %1, !dbg !7552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7553 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7554
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7555
  ret void, !dbg !7556
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7559, metadata !DIExpression()), !dbg !7560
  %2 = icmp eq i32 %0, 10, !dbg !7561
  br i1 %2, label %3, label %4, !dbg !7563

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7564
  br label %4, !dbg !7566

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7567
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7568
  ret i32 %0, !dbg !7569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7570 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !7573, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i8 %0, metadata !7574, metadata !DIExpression()), !dbg !7575
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7576, !srcloc !7578
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7579
  ret void, !dbg !7580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7581 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !7583, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8 %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7587
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7585, metadata !DIExpression()), !dbg !7586
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7588
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7588
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !7589
  ret void, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !7591 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !7593, metadata !DIExpression()), !dbg !7594
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !7595
  ret i1 %1, !dbg !7596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7597 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7644, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7645, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7646, metadata !DIExpression()), !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7649 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7651, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i8 %1, metadata !7652, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i32 %2, metadata !7653, metadata !DIExpression()), !dbg !7656
  %5 = bitcast i32* %4 to i8*, !dbg !7657
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7657
  call void @llvm.dbg.value(metadata i32* %4, metadata !7655, metadata !DIExpression(DW_OP_deref)), !dbg !7656
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %6, metadata !7654, metadata !DIExpression()), !dbg !7656
  %7 = icmp eq i32 %6, 0, !dbg !7659
  br i1 %7, label %8, label %31, !dbg !7661

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7654, metadata !DIExpression()), !dbg !7656
  %9 = and i32 %2, 131072, !dbg !7662
  %10 = icmp eq i32 %9, 0, !dbg !7664
  br i1 %10, label %28, label %11, !dbg !7665

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7666
  %13 = icmp eq i32 %12, 0, !dbg !7669
  br i1 %13, label %18, label %14, !dbg !7670

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7671
  %16 = shl nuw i32 1, %15, !dbg !7671
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7673
  br label %25, !dbg !7674

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7675
  %20 = icmp eq i32 %19, 0, !dbg !7677
  %21 = zext i8 %1 to i32, !dbg !7656
  br i1 %20, label %25, label %22, !dbg !7678

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7679
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7681
  br label %25, !dbg !7682

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7683
  %27 = load i32, i32* %4, align 4, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %30, metadata !7655, metadata !DIExpression()), !dbg !7656
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7685
  br label %31, !dbg !7686

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7683
  %30 = load i32, i32* %4, align 4, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %30, metadata !7655, metadata !DIExpression()), !dbg !7656
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7685
  call void @llvm.dbg.value(metadata i32 0, metadata !7654, metadata !DIExpression()), !dbg !7656
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7687
  ret i32 %6, !dbg !7687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !7688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7692, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32* %1, metadata !7693, metadata !DIExpression()), !dbg !7697
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7698
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7698
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7698
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7694, metadata !DIExpression()), !dbg !7697
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7699
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7699
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7699
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7696, metadata !DIExpression()), !dbg !7697
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7700
  store i32 %9, i32* %1, align 4, !dbg !7701
  ret i32 0, !dbg !7702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !7703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7705, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata i32 %1, metadata !7706, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata i32 %2, metadata !7707, metadata !DIExpression()), !dbg !7711
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7712
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7712
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7712
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7708, metadata !DIExpression()), !dbg !7711
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7713
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7713
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7713
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7709, metadata !DIExpression()), !dbg !7711
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7714
  call void @llvm.dbg.value(metadata i32 %10, metadata !7710, metadata !DIExpression()), !dbg !7711
  %11 = xor i32 %1, -1, !dbg !7715
  %12 = and i32 %10, %11, !dbg !7716
  %13 = and i32 %2, %1, !dbg !7717
  %14 = or i32 %12, %13, !dbg !7718
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7719
  ret i32 0, !dbg !7720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7723, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.value(metadata i32 %1, metadata !7724, metadata !DIExpression()), !dbg !7727
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7728
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7728
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7728
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7725, metadata !DIExpression()), !dbg !7727
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7729
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7729
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7729
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7726, metadata !DIExpression()), !dbg !7727
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7730
  store volatile i32 %1, i32* %9, align 4, !dbg !7730
  ret i32 0, !dbg !7731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7734, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.value(metadata i32 %1, metadata !7735, metadata !DIExpression()), !dbg !7738
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7739
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7739
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7739
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7736, metadata !DIExpression()), !dbg !7738
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7740
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7740
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7740
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7737, metadata !DIExpression()), !dbg !7738
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7741
  ret i32 0, !dbg !7742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7745, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i32 %1, metadata !7746, metadata !DIExpression()), !dbg !7749
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7750
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7750
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7750
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7747, metadata !DIExpression()), !dbg !7749
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7751
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7751
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7751
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7748, metadata !DIExpression()), !dbg !7749
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7752
  %10 = load volatile i32, i32* %9, align 4, !dbg !7752
  %11 = xor i32 %10, %1, !dbg !7752
  store volatile i32 %11, i32* %9, align 4, !dbg !7752
  ret i32 0, !dbg !7753
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7756, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i8 %1, metadata !7757, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 %2, metadata !7758, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 %3, metadata !7759, metadata !DIExpression()), !dbg !7766
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7767
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7767
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7767
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7760, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i8* undef, metadata !7761, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 0, metadata !7763, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 0, metadata !7764, metadata !DIExpression()), !dbg !7766
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7768

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7769
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7773
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7774
  %12 = load i32, i32* %11, align 4, !dbg !7774
  %13 = icmp eq i32 %10, %12, !dbg !7775
  br i1 %13, label %14, label %29, !dbg !7776

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !7777
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !7779
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !7780
  br label %29, !dbg !7781

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7782
  %17 = load i8*, i8** %16, align 4, !dbg !7782
  call void @llvm.dbg.value(metadata i8* %17, metadata !7761, metadata !DIExpression()), !dbg !7766
  %18 = zext i8 %1 to i32, !dbg !7783
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !7785
  %20 = icmp eq i32 %19, 0, !dbg !7786
  br i1 %20, label %21, label %29, !dbg !7787

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7788
  %23 = load i32, i32* %22, align 4, !dbg !7788
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7789
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7790

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7763, metadata !DIExpression()), !dbg !7766
  br label %27, !dbg !7791

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7763, metadata !DIExpression()), !dbg !7766
  br label %27, !dbg !7793

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7763, metadata !DIExpression()), !dbg !7766
  br label %27, !dbg !7794

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7766
  call void @llvm.dbg.value(metadata i32 %28, metadata !7763, metadata !DIExpression()), !dbg !7766
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !7795
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !7796
  br label %29, !dbg !7796

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7766
  call void @llvm.dbg.value(metadata i32 %30, metadata !7764, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.label(metadata !7765), !dbg !7797
  ret i32 %30, !dbg !7798
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7799 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7801, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i1 %2, metadata !7803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7805
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7806
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7806
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7806
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7804, metadata !DIExpression()), !dbg !7805
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7807
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7808
  ret i32 %8, !dbg !7809
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7810 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7816, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i1 %2, metadata !7818, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7819
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7820
  br i1 %4, label %10, label %5, !dbg !7822

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7823
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7826
  %8 = or i1 %7, %2, !dbg !7827
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7827
  br i1 %2, label %11, label %13, !dbg !7827

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7828

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7829
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7832
  br label %13, !dbg !7833

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7819
  ret i32 %14, !dbg !7834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7835 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7839, metadata !DIExpression()), !dbg !7840
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7841
  %3 = icmp eq %struct._snode* %2, null, !dbg !7841
  ret i1 %3, !dbg !7841
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7842 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7846, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7847, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7848, metadata !DIExpression()), !dbg !7850
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7851
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7849, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7848, metadata !DIExpression()), !dbg !7850
  %4 = icmp eq %struct._snode* %3, null, !dbg !7853
  br i1 %4, label %15, label %5, !dbg !7851

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7849, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7848, metadata !DIExpression()), !dbg !7850
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7855
  br i1 %6, label %9, label %11, !dbg !7858

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7849, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7848, metadata !DIExpression()), !dbg !7850
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7855
  br i1 %8, label %9, label %11, !dbg !7858, !llvm.loop !7859

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7860
  br label %15, !dbg !7860

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7849, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7848, metadata !DIExpression()), !dbg !7850
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7853
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7849, metadata !DIExpression()), !dbg !7850
  %14 = icmp eq %struct._snode* %13, null, !dbg !7853
  br i1 %14, label %15, label %7, !dbg !7851, !llvm.loop !7859

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7863 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7867, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7868, metadata !DIExpression()), !dbg !7869
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7870
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7870
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7870
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7871
  %5 = icmp eq %struct._snode* %4, null, !dbg !7871
  br i1 %5, label %6, label %8, !dbg !7870

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7873
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7873
  br label %8, !dbg !7873

8:                                                ; preds = %6, %2
  ret void, !dbg !7870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7875 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7879, metadata !DIExpression()), !dbg !7880
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7881
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7881
  ret %struct._snode* %3, !dbg !7882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7883 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7888, metadata !DIExpression()), !dbg !7889
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7890
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7893 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7895, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7896, metadata !DIExpression()), !dbg !7897
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7898
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7899
  ret void, !dbg !7900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7901 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7903, metadata !DIExpression()), !dbg !7904
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7905
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7905
  ret %struct._snode* %3, !dbg !7906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7907 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7910, metadata !DIExpression()), !dbg !7911
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7912
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7913
  ret void, !dbg !7914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7915 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7921, metadata !DIExpression()), !dbg !7922
  %4 = icmp eq %struct._snode* %1, null, !dbg !7923
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7925
  br i1 %4, label %6, label %11, !dbg !7926

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7927
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7929
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7929
  br i1 %8, label %9, label %15, !dbg !7927

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7931
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7931
  br label %15, !dbg !7931

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7933
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7935
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7935
  br i1 %13, label %14, label %15, !dbg !7933

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7937
  br label %15, !dbg !7937

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7926
  ret void, !dbg !7926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7939 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7943, metadata !DIExpression()), !dbg !7944
  %2 = icmp eq %struct._snode* %0, null, !dbg !7945
  br i1 %2, label %5, label %3, !dbg !7945

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7945
  br label %5, !dbg !7945

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7945
  ret %struct._snode* %6, !dbg !7945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7946 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7948, metadata !DIExpression()), !dbg !7949
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7950
  ret %struct._snode* %2, !dbg !7950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7951 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7953, metadata !DIExpression()), !dbg !7954
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7955
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7955
  ret %struct._snode* %3, !dbg !7956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7959, metadata !DIExpression()), !dbg !7962
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7963, !range !7964
  call void @llvm.dbg.value(metadata i32 %2, metadata !7960, metadata !DIExpression()), !dbg !7962
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !7965
  call void @llvm.dbg.value(metadata i32 %3, metadata !7961, metadata !DIExpression()), !dbg !7962
  ret i32 %3, !dbg !7966
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7969, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i8* %1, metadata !7970, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i8* %1, metadata !7971, metadata !DIExpression()), !dbg !7972
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7973
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7973
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7974
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7974
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7974
  %8 = shl nuw i32 1, %0, !dbg !7975
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !7976
  ret void, !dbg !7977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7978 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7982, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i32 %1, metadata !7983, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7984, metadata !DIExpression()), !dbg !7988
  %4 = bitcast i64* %3 to i8*, !dbg !7989
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7989
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !7986, metadata !DIExpression()), !dbg !7988
  store i64 4294967328, i64* %3, align 8, !dbg !7990
  call void @llvm.dbg.value(metadata i64* %3, metadata !7986, metadata !DIExpression(DW_OP_deref)), !dbg !7988
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %5, metadata !7987, metadata !DIExpression()), !dbg !7988
  %6 = icmp eq i32 %5, 0, !dbg !7992
  br i1 %6, label %7, label %8, !dbg !7994

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !7995
  br label %8, !dbg !7996

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7997
  ret void, !dbg !7997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7998 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8000, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i8* %0, metadata !8001, metadata !DIExpression()), !dbg !8003
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8004
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8002, metadata !DIExpression()), !dbg !8003
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8005
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8005
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !8006
  ret i32 %5, !dbg !8007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8010, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 %1, metadata !8011, metadata !DIExpression()), !dbg !8013
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !8014
  call void @llvm.dbg.value(metadata i32 %3, metadata !8012, metadata !DIExpression()), !dbg !8013
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !8015
  ret void, !dbg !8016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !8017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8021, metadata !DIExpression()), !dbg !8022
  %2 = sdiv i32 %0, 4, !dbg !8023
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8024
  %6 = add nsw i32 %5, 16, !dbg !8025
  %7 = shl i32 15, %6, !dbg !8026
  %8 = or i32 %7, %2, !dbg !8027
  ret i32 %8, !dbg !8028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8034, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata i32 %1, metadata !8035, metadata !DIExpression()), !dbg !8036
  %3 = and i32 %1, 3, !dbg !8037
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !8037
  %5 = load volatile i32, i32* %4, align 4, !dbg !8037
  %6 = lshr i32 %1, 16, !dbg !8037
  %7 = xor i32 %6, -1, !dbg !8037
  %8 = and i32 %5, %7, !dbg !8037
  call void @llvm.dbg.value(metadata i32 %6, metadata !8038, metadata !DIExpression()) #23, !dbg !8042
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8044, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %9, metadata !8041, metadata !DIExpression()) #23, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %9, metadata !8046, metadata !DIExpression()) #23, !dbg !8051
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8053, !range !6226
  %11 = shl i32 %0, %10, !dbg !8037
  %12 = or i32 %11, %8, !dbg !8037
  store volatile i32 %12, i32* %4, align 4, !dbg !8037
  ret void, !dbg !8054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8055 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8059, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8060, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata i32 %2, metadata !8061, metadata !DIExpression()), !dbg !8064
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8065
  %5 = icmp eq %struct._snode* %4, null, !dbg !8065
  br i1 %5, label %21, label %6, !dbg !8065

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8067
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8063, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8062, metadata !DIExpression()), !dbg !8064
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8068
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8068
  %11 = load i32, i32* %10, align 4, !dbg !8068
  %12 = and i32 %11, %2, !dbg !8072
  %13 = icmp eq i32 %12, 0, !dbg !8072
  br i1 %13, label %19, label %14, !dbg !8073

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8062, metadata !DIExpression()), !dbg !8064
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8074
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8074
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8074
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !8076
  br label %19, !dbg !8077

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8062, metadata !DIExpression()), !dbg !8064
  %20 = icmp eq %struct._snode* %8, null, !dbg !8078
  br i1 %20, label %21, label %6, !dbg !8078

21:                                               ; preds = %19, %3
  ret void, !dbg !8079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8082, metadata !DIExpression()), !dbg !8083
  %2 = and i32 %0, 3, !dbg !8084
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !8084
  %4 = load volatile i32, i32* %3, align 4, !dbg !8084
  %5 = lshr i32 %0, 16, !dbg !8084
  %6 = and i32 %4, %5, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %5, metadata !8038, metadata !DIExpression()) #23, !dbg !8085
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !8087, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %7, metadata !8041, metadata !DIExpression()) #23, !dbg !8085
  call void @llvm.dbg.value(metadata i32 %7, metadata !8046, metadata !DIExpression()) #23, !dbg !8088
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8090, !range !6226
  %9 = lshr i32 %6, %8, !dbg !8091
  ret i32 %9, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8093 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8098, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i32 %1, metadata !8099, metadata !DIExpression()), !dbg !8100
  %3 = shl i32 %1, 16, !dbg !8101
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8101
  store volatile i32 %3, i32* %4, align 4, !dbg !8101
  ret void, !dbg !8102
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8103 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8107, metadata !DIExpression()), !dbg !8108
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8109
  %3 = load volatile i32, i32* %2, align 4, !dbg !8109
  ret i32 %3, !dbg !8110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8111 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8113, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i32 %1, metadata !8114, metadata !DIExpression()), !dbg !8115
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8116
  store volatile i32 %1, i32* %3, align 4, !dbg !8116
  ret void, !dbg !8117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8118 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8120, metadata !DIExpression()), !dbg !8121
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8122
  %3 = load volatile i32, i32* %2, align 4, !dbg !8122
  ret i32 %3, !dbg !8123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8128, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32* %1, metadata !8129, metadata !DIExpression()), !dbg !8130
  %3 = and i32 %0, 131072, !dbg !8131
  %4 = icmp eq i32 %3, 0, !dbg !8133
  br i1 %4, label %22, label %5, !dbg !8134

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8135
  %6 = and i32 %0, 2, !dbg !8137
  %7 = icmp eq i32 %6, 0, !dbg !8139
  br i1 %7, label %11, label %8, !dbg !8140

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8141
  %10 = icmp eq i32 %9, 0, !dbg !8141
  br i1 %10, label %33, label %11, !dbg !8144

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8145
  store i32 %12, i32* %1, align 4, !dbg !8145
  %13 = and i32 %0, 16, !dbg !8146
  %14 = icmp eq i32 %13, 0, !dbg !8148
  br i1 %14, label %17, label %15, !dbg !8149

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8150
  br label %31, !dbg !8152

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8153
  %19 = icmp eq i32 %18, 0, !dbg !8155
  br i1 %19, label %33, label %20, !dbg !8156

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8157
  br label %31, !dbg !8159

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8160
  %24 = icmp eq i32 %23, 0, !dbg !8162
  br i1 %24, label %31, label %25, !dbg !8163

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8164
  %27 = icmp eq i32 %26, 0, !dbg !8167
  br i1 %27, label %28, label %31, !dbg !8168

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8169
  br label %33, !dbg !8170

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8130
  ret i32 %34, !dbg !8170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8175, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %1, metadata !8176, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %2, metadata !8177, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %3, metadata !8178, metadata !DIExpression()), !dbg !8186
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8187
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8187
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8187
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8179, metadata !DIExpression()), !dbg !8186
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8188
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8188
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8188
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8180, metadata !DIExpression()), !dbg !8186
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %11, metadata !8181, metadata !DIExpression()), !dbg !8186
  %12 = and i32 %2, 48, !dbg !8190
  call void @llvm.dbg.value(metadata i32 %12, metadata !8182, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %2, metadata !8183, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %2, metadata !8184, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %2, metadata !8185, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8186
  %13 = lshr i32 %2, 6, !dbg !8191
  %14 = and i32 %13, 1, !dbg !8191
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !8192
  %15 = lshr i32 %2, 7, !dbg !8193
  %16 = and i32 %15, 3, !dbg !8193
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !8194
  %17 = lshr i32 %2, 9, !dbg !8195
  %18 = and i32 %17, 3, !dbg !8195
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !8196
  %19 = icmp eq i32 %12, 32, !dbg !8197
  br i1 %19, label %20, label %24, !dbg !8199

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8200
  br i1 %21, label %22, label %23, !dbg !8203

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8204
  br label %24, !dbg !8206

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !8207
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8209
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !8210
  ret void, !dbg !8211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !8212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8214, metadata !DIExpression()), !dbg !8216
  %2 = shl nuw i32 1, %0, !dbg !8217
  call void @llvm.dbg.value(metadata i32 %2, metadata !8215, metadata !DIExpression()), !dbg !8216
  ret i32 %2, !dbg !8218
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !8219 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8223, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %1, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32 %2, metadata !8225, metadata !DIExpression()), !dbg !8226
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8227
  %5 = load volatile i32, i32* %4, align 4, !dbg !8227
  %6 = xor i32 %1, -1, !dbg !8227
  %7 = and i32 %5, %6, !dbg !8227
  %8 = mul i32 %2, %1, !dbg !8227
  %9 = or i32 %7, %8, !dbg !8227
  store volatile i32 %9, i32* %4, align 4, !dbg !8227
  ret void, !dbg !8228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8229 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8231, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %1, metadata !8232, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %2, metadata !8233, metadata !DIExpression()), !dbg !8234
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8235
  %5 = load volatile i32, i32* %4, align 4, !dbg !8235
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8236
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8238, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8236
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8239
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8241, !range !6226
  %8 = shl nuw nsw i32 %7, 1, !dbg !8235
  %9 = shl i32 3, %8, !dbg !8235
  %10 = xor i32 %9, -1, !dbg !8235
  %11 = and i32 %5, %10, !dbg !8235
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8244
  %12 = shl i32 %2, %8, !dbg !8235
  %13 = or i32 %11, %12, !dbg !8235
  store volatile i32 %13, i32* %4, align 4, !dbg !8235
  ret void, !dbg !8246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8247 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8249, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 %1, metadata !8250, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 %2, metadata !8251, metadata !DIExpression()), !dbg !8252
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8253
  %5 = load volatile i32, i32* %4, align 4, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8254
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8256, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8254
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8257
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8259, !range !6226
  %8 = shl nuw nsw i32 %7, 1, !dbg !8253
  %9 = shl i32 3, %8, !dbg !8253
  %10 = xor i32 %9, -1, !dbg !8253
  %11 = and i32 %5, %10, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8262
  %12 = shl i32 %2, %8, !dbg !8253
  %13 = or i32 %11, %12, !dbg !8253
  store volatile i32 %13, i32* %4, align 4, !dbg !8253
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8265 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8267, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 %1, metadata !8268, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 %2, metadata !8269, metadata !DIExpression()), !dbg !8270
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8271
  %5 = load volatile i32, i32* %4, align 4, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8272
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8274, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8272
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8275
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8277, !range !6226
  %8 = shl nuw nsw i32 %7, 2, !dbg !8271
  %9 = shl i32 15, %8, !dbg !8271
  %10 = xor i32 %9, -1, !dbg !8271
  %11 = and i32 %5, %10, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8278
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8278
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8280
  %12 = shl i32 %2, %8, !dbg !8271
  %13 = or i32 %11, %12, !dbg !8271
  store volatile i32 %13, i32* %4, align 4, !dbg !8271
  ret void, !dbg !8282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8283 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8285, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i32 %1, metadata !8286, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i32 %2, metadata !8287, metadata !DIExpression()), !dbg !8288
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !8289
  %5 = load volatile i32, i32* %4, align 4, !dbg !8289
  %6 = lshr i32 %1, 8, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %6, metadata !8038, metadata !DIExpression()) #23, !dbg !8290
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8292, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %7, metadata !8041, metadata !DIExpression()) #23, !dbg !8290
  call void @llvm.dbg.value(metadata i32 %7, metadata !8046, metadata !DIExpression()) #23, !dbg !8293
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8295, !range !6226
  %9 = shl nuw nsw i32 %8, 2, !dbg !8289
  %10 = shl i32 15, %9, !dbg !8289
  %11 = xor i32 %10, -1, !dbg !8289
  %12 = and i32 %5, %11, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %6, metadata !8038, metadata !DIExpression()) #23, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %7, metadata !8041, metadata !DIExpression()) #23, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %7, metadata !8046, metadata !DIExpression()) #23, !dbg !8298
  %13 = shl i32 %2, %9, !dbg !8289
  %14 = or i32 %12, %13, !dbg !8289
  store volatile i32 %14, i32* %4, align 4, !dbg !8289
  ret void, !dbg !8300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8301 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8303, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.value(metadata i32 %1, metadata !8304, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.value(metadata i32 %2, metadata !8305, metadata !DIExpression()), !dbg !8306
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !8307
  %5 = load volatile i32, i32* %4, align 4, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8308
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !8310, !srcloc !8045
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8311
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8313, !range !6226
  %8 = shl nuw nsw i32 %7, 1, !dbg !8307
  %9 = shl i32 3, %8, !dbg !8307
  %10 = xor i32 %9, -1, !dbg !8307
  %11 = and i32 %5, %10, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()) #23, !dbg !8314
  call void @llvm.dbg.value(metadata i32 %6, metadata !8041, metadata !DIExpression()) #23, !dbg !8314
  call void @llvm.dbg.value(metadata i32 %6, metadata !8046, metadata !DIExpression()) #23, !dbg !8316
  %12 = shl i32 %2, %8, !dbg !8307
  %13 = or i32 %11, %12, !dbg !8307
  store volatile i32 %13, i32* %4, align 4, !dbg !8307
  ret void, !dbg !8318
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !8319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8321, metadata !DIExpression()), !dbg !8324
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8325
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !8325
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !8325
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !8322, metadata !DIExpression()), !dbg !8324
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !8326
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !8327
  %6 = tail call fastcc zeroext i1 @device_is_ready.57() #24, !dbg !8328
  br i1 %6, label %7, label %11, !dbg !8330

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !8331
  call void @llvm.dbg.value(metadata i32 %8, metadata !8323, metadata !DIExpression()), !dbg !8324
  %9 = icmp slt i32 %8, 0, !dbg !8332
  %10 = select i1 %9, i32 %8, i32 0, !dbg !8334
  br label %11, !dbg !8334

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !8324
  ret i32 %12, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.57() unnamed_addr #1 !dbg !8336 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8340, metadata !DIExpression()), !dbg !8341
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8342, !srcloc !8344
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.58() #24, !dbg !8345
  ret i1 %1, !dbg !8346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8351, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i8 1, metadata !8352, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !8353, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 0, metadata !8354, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8355, metadata !DIExpression()), !dbg !8356
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8357
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !8357
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !8357
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !8353, metadata !DIExpression()), !dbg !8356
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !8358
  %6 = bitcast %struct.perisistant_values* %5 to i8*, !dbg !8361
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !8362
  call void @llvm.dbg.value(metadata i32 %7, metadata !8354, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %7, metadata !8354, metadata !DIExpression()), !dbg !8356
  ret i32 %7, !dbg !8363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.58() unnamed_addr #1 !dbg !8364 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8366, metadata !DIExpression()), !dbg !8367
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !8368
  ret i1 %1, !dbg !8369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8374, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 %1, metadata !8375, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 %2, metadata !8376, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 %3, metadata !8377, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.value(metadata i32 0, metadata !8378, metadata !DIExpression()), !dbg !8382
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !8383
  %5 = icmp eq i32 %3, 17, !dbg !8384
  br i1 %5, label %6, label %14, !dbg !8385

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8386
  call void @llvm.dbg.value(metadata i32 %7, metadata !8379, metadata !DIExpression()), !dbg !8387
  %8 = icmp eq i32 %7, 0, !dbg !8388
  %9 = shl nuw i32 1, %1, !dbg !8390
  br i1 %8, label %12, label %10, !dbg !8391

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8392
  br label %14, !dbg !8394

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8395
  br label %14, !dbg !8398

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal i32 @eeprom_stm32_read(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) #1 !dbg !8400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8402, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 %1, metadata !8403, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i8* %2, metadata !8404, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 %3, metadata !8405, metadata !DIExpression()), !dbg !8409
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8410
  %6 = bitcast i8** %5 to %struct.perisistant_values**, !dbg !8410
  %7 = load %struct.perisistant_values*, %struct.perisistant_values** %6, align 4, !dbg !8410
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %7, metadata !8406, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i8* %2, metadata !8408, metadata !DIExpression()), !dbg !8409
  %8 = icmp eq i32 %3, 0, !dbg !8411
  br i1 %8, label %29, label %9, !dbg !8413

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !8414
  %11 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %7, i32 0, i32 1, !dbg !8416
  %12 = load i32, i32* %11, align 4, !dbg !8416
  %13 = icmp ugt i32 %10, %12, !dbg !8417
  br i1 %13, label %29, label %14, !dbg !8418

14:                                               ; preds = %9
  tail call fastcc void @k_mutex_lock() #24, !dbg !8419
  %15 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %7, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* %2, metadata !8408, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 %1, metadata !8403, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 %3, metadata !8405, metadata !DIExpression()), !dbg !8409
  br label %16, !dbg !8420

16:                                               ; preds = %14, %16
  %17 = phi i8* [ %24, %16 ], [ %2, %14 ]
  %18 = phi i32 [ %25, %16 ], [ %1, %14 ]
  %19 = phi i32 [ %26, %16 ], [ %3, %14 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8408, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 %18, metadata !8403, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 %19, metadata !8405, metadata !DIExpression()), !dbg !8409
  %20 = load i32, i32* %15, align 4, !dbg !8421
  %21 = add i32 %20, %18, !dbg !8423
  %22 = inttoptr i32 %21 to i8*, !dbg !8424
  %23 = load volatile i8, i8* %22, align 1, !dbg !8425
  store i8 %23, i8* %17, align 1, !dbg !8426
  %24 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8427
  call void @llvm.dbg.value(metadata i8* %24, metadata !8408, metadata !DIExpression()), !dbg !8409
  %25 = add nsw i32 %18, 1, !dbg !8428
  call void @llvm.dbg.value(metadata i32 %25, metadata !8403, metadata !DIExpression()), !dbg !8409
  %26 = add i32 %19, -1, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %26, metadata !8405, metadata !DIExpression()), !dbg !8409
  %27 = icmp eq i32 %26, 0, !dbg !8420
  br i1 %27, label %28, label %16, !dbg !8420, !llvm.loop !8430

28:                                               ; preds = %16
  tail call fastcc void @k_mutex_unlock() #24, !dbg !8432
  br label %29, !dbg !8433

29:                                               ; preds = %9, %4, %28
  %30 = phi i32 [ 0, %28 ], [ 0, %4 ], [ -22, %9 ], !dbg !8409
  ret i32 %30, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define internal i32 @eeprom_stm32_write(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef readonly %2, i32 noundef %3) #1 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8437, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %1, metadata !8438, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i8* %2, metadata !8439, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %3, metadata !8440, metadata !DIExpression()), !dbg !8446
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8447
  %6 = bitcast i8** %5 to %struct.perisistant_values**, !dbg !8447
  %7 = load %struct.perisistant_values*, %struct.perisistant_values** %6, align 4, !dbg !8447
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %7, metadata !8441, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i8* %2, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 0, metadata !8444, metadata !DIExpression()), !dbg !8446
  %8 = icmp eq i32 %3, 0, !dbg !8448
  br i1 %8, label %38, label %9, !dbg !8450

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !8451
  %11 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %7, i32 0, i32 1, !dbg !8453
  %12 = load i32, i32* %11, align 4, !dbg !8453
  %13 = icmp ugt i32 %10, %12, !dbg !8454
  br i1 %13, label %38, label %14, !dbg !8455

14:                                               ; preds = %9
  tail call fastcc void @k_mutex_lock() #24, !dbg !8456
  %15 = tail call i32 @HAL_FLASHEx_DATAEEPROM_Unlock() #25, !dbg !8457
  %16 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %7, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* %2, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %1, metadata !8438, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %3, metadata !8440, metadata !DIExpression()), !dbg !8446
  br label %17, !dbg !8458

17:                                               ; preds = %14, %29
  %18 = phi i8* [ %30, %29 ], [ %2, %14 ]
  %19 = phi i32 [ %31, %29 ], [ %1, %14 ]
  %20 = phi i32 [ %32, %29 ], [ %3, %14 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8442, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %19, metadata !8438, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.value(metadata i32 %20, metadata !8440, metadata !DIExpression()), !dbg !8446
  %21 = load i32, i32* %16, align 4, !dbg !8459
  %22 = add i32 %21, %19, !dbg !8461
  %23 = load i8, i8* %18, align 1, !dbg !8462
  %24 = zext i8 %23 to i32, !dbg !8462
  %25 = tail call i32 @HAL_FLASHEx_DATAEEPROM_Program(i32 noundef 0, i32 noundef %22, i32 noundef %24) #25, !dbg !8463
  call void @llvm.dbg.value(metadata i32 %25, metadata !8444, metadata !DIExpression()), !dbg !8446
  %26 = icmp eq i32 %25, 0, !dbg !8464
  br i1 %26, label %29, label %27, !dbg !8466

27:                                               ; preds = %17
  %28 = tail call i32 @HAL_FLASHEx_DATAEEPROM_Lock() #25, !dbg !8467
  br label %36, !dbg !8469

29:                                               ; preds = %17
  %30 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8470
  call void @llvm.dbg.value(metadata i8* %30, metadata !8442, metadata !DIExpression()), !dbg !8446
  %31 = add nsw i32 %19, 1, !dbg !8471
  call void @llvm.dbg.value(metadata i32 %31, metadata !8438, metadata !DIExpression()), !dbg !8446
  %32 = add i32 %20, -1, !dbg !8472
  call void @llvm.dbg.value(metadata i32 %32, metadata !8440, metadata !DIExpression()), !dbg !8446
  %33 = icmp eq i32 %32, 0, !dbg !8458
  br i1 %33, label %34, label %17, !dbg !8458, !llvm.loop !8473

34:                                               ; preds = %29
  %35 = tail call i32 @HAL_FLASHEx_DATAEEPROM_Lock() #25, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %35, metadata !8444, metadata !DIExpression()), !dbg !8446
  br label %36, !dbg !8446

36:                                               ; preds = %27, %34
  %37 = phi i32 [ %35, %34 ], [ %25, %27 ]
  tail call fastcc void @k_mutex_unlock() #24, !dbg !8446
  br label %38, !dbg !8476

38:                                               ; preds = %36, %9, %4
  %39 = phi i32 [ 0, %4 ], [ -22, %9 ], [ %37, %36 ], !dbg !8446
  ret i32 %39, !dbg !8476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal i32 @eeprom_stm32_size(%struct.device* nocapture noundef readonly %0) #5 !dbg !8477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8479, metadata !DIExpression()), !dbg !8481
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8482
  %3 = bitcast i8** %2 to %struct.perisistant_values**, !dbg !8482
  %4 = load %struct.perisistant_values*, %struct.perisistant_values** %3, align 4, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %4, metadata !8480, metadata !DIExpression()), !dbg !8481
  %5 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %4, i32 0, i32 1, !dbg !8483
  %6 = load i32, i32* %5, align 4, !dbg !8483
  ret i32 %6, !dbg !8484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !8485 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8495, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata %struct.k_mutex* @lock, metadata !8494, metadata !DIExpression()), !dbg !8496
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8497, !srcloc !8499
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @lock, [1 x i64] [i64 -1]) #25, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @lock, metadata !8506, metadata !DIExpression()), !dbg !8507
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8508, !srcloc !8510
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @lock) #25, !dbg !8511
  ret void, !dbg !8512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @eeprom_stm32_init(%struct.device* nocapture noundef readnone %0) #12 !dbg !8513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8515, metadata !DIExpression()), !dbg !8516
  ret i32 0, !dbg !8517
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #13 !dbg !8518 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8520, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.value(metadata i8* %1, metadata !8521, metadata !DIExpression()), !dbg !8524
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8525
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8525
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8525
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8522, metadata !DIExpression()), !dbg !8524
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8526
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8526
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !8528
  %9 = icmp eq i32 %8, 0, !dbg !8528
  br i1 %9, label %12, label %10, !dbg !8529

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8530
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !8532
  br label %12, !dbg !8533

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8534
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8536
  %15 = icmp eq i32 %14, 0, !dbg !8536
  br i1 %15, label %19, label %16, !dbg !8537

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8538
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !8539
  store i8 %18, i8* %1, align 1, !dbg !8540
  br label %19, !dbg !8541

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8524
  ret i32 %20, !dbg !8542
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8543 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8545, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i8 %1, metadata !8546, metadata !DIExpression()), !dbg !8549
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8550
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8550
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8550
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8547, metadata !DIExpression()), !dbg !8549
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8551

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8552
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !8555
  %10 = icmp eq i32 %9, 0, !dbg !8555
  br i1 %10, label %18, label %11, !dbg !8556

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8557, !srcloc !8564
  call void @llvm.dbg.value(metadata i32 undef, metadata !8560, metadata !DIExpression()) #23, !dbg !8565
  call void @llvm.dbg.value(metadata i32 undef, metadata !8561, metadata !DIExpression()) #23, !dbg !8565
  call void @llvm.dbg.value(metadata i32 undef, metadata !8548, metadata !DIExpression()), !dbg !8549
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8566
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8568
  %15 = icmp eq i32 %14, 0, !dbg !8568
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8557
  br i1 %15, label %17, label %19, !dbg !8569

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8560, metadata !DIExpression()) #23, !dbg !8565
  call void @llvm.dbg.value(metadata i32 %16, metadata !8548, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i32 undef, metadata !8570, metadata !DIExpression()) #23, !dbg !8573
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8575, !srcloc !8576
  br label %18, !dbg !8577

18:                                               ; preds = %17, %7
  br label %7, !dbg !8552, !llvm.loop !8578

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8557
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8580
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !8581
  call void @llvm.dbg.value(metadata i32 %20, metadata !8570, metadata !DIExpression()) #23, !dbg !8582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8584, !srcloc !8576
  ret void, !dbg !8585
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #13 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8588, metadata !DIExpression()), !dbg !8591
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8592
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8592
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8592
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8589, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i32 0, metadata !8590, metadata !DIExpression()), !dbg !8591
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8593
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8593
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !8595
  %8 = icmp ne i32 %7, 0, !dbg !8595
  %9 = zext i1 %8 to i32, !dbg !8596
  call void @llvm.dbg.value(metadata i32 %9, metadata !8590, metadata !DIExpression()), !dbg !8591
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8597
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !8599
  %12 = icmp eq i32 %11, 0, !dbg !8599
  %13 = or i32 %9, 2, !dbg !8600
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8600
  call void @llvm.dbg.value(metadata i32 %14, metadata !8590, metadata !DIExpression()), !dbg !8591
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8601
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !8603
  %17 = icmp eq i32 %16, 0, !dbg !8603
  %18 = or i32 %14, 4, !dbg !8604
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8604
  call void @llvm.dbg.value(metadata i32 %19, metadata !8590, metadata !DIExpression()), !dbg !8591
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8605
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !8607
  %22 = icmp eq i32 %21, 0, !dbg !8607
  %23 = or i32 %19, 8, !dbg !8608
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8608
  call void @llvm.dbg.value(metadata i32 %24, metadata !8590, metadata !DIExpression()), !dbg !8591
  %25 = and i32 %24, 8, !dbg !8609
  %26 = icmp eq i32 %25, 0, !dbg !8609
  br i1 %26, label %29, label %27, !dbg !8611

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8612
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !8614
  br label %29, !dbg !8615

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8616
  %31 = icmp eq i32 %30, 0, !dbg !8616
  br i1 %31, label %34, label %32, !dbg !8618

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8619
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !8621
  br label %34, !dbg !8622

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8623
  %36 = icmp eq i32 %35, 0, !dbg !8623
  br i1 %36, label %39, label %37, !dbg !8625

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8626
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !8628
  br label %39, !dbg !8629

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8630
  %41 = icmp eq i32 %40, 0, !dbg !8630
  br i1 %41, label %44, label %42, !dbg !8632

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8633
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !8635
  br label %44, !dbg !8636

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8637
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !8638
  ret i32 %24, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8642, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8643, metadata !DIExpression()), !dbg !8651
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8652
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8652
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8652
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8644, metadata !DIExpression()), !dbg !8651
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8653
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8653
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8653
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8645, metadata !DIExpression()), !dbg !8651
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8654
  %10 = load i8, i8* %9, align 4, !dbg !8654
  %11 = zext i8 %10 to i32, !dbg !8655
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !8656
  call void @llvm.dbg.value(metadata i32 %12, metadata !8647, metadata !DIExpression()), !dbg !8651
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8657
  %14 = load i8, i8* %13, align 1, !dbg !8657
  %15 = zext i8 %14 to i32, !dbg !8658
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %16, metadata !8648, metadata !DIExpression()), !dbg !8651
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8660
  %18 = load i8, i8* %17, align 2, !dbg !8660
  %19 = zext i8 %18 to i32, !dbg !8661
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %20, metadata !8649, metadata !DIExpression()), !dbg !8651
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8663
  %22 = load i8, i8* %21, align 1, !dbg !8663
  %23 = zext i8 %22 to i32, !dbg !8664
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !8665
  call void @llvm.dbg.value(metadata i32 %24, metadata !8650, metadata !DIExpression()), !dbg !8651
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8666

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8668
  br i1 %26, label %69, label %27, !dbg !8670

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8671

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8672
  br i1 %29, label %65, label %30, !dbg !8672

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8674
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8651
  br i1 %31, label %38, label %34, !dbg !8676

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8677
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !8677

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8680
  br i1 %37, label %38, label %69, !dbg !8681

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8682
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !8683
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !8684
  %41 = icmp eq i32 %12, %40, !dbg !8686
  br i1 %41, label %43, label %42, !dbg !8687

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !8688
  br label %43, !dbg !8690

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !8691
  %45 = icmp eq i32 %16, %44, !dbg !8693
  br i1 %45, label %47, label %46, !dbg !8694

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !8695
  br label %47, !dbg !8697

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !8698
  %49 = icmp eq i32 %20, %48, !dbg !8700
  br i1 %49, label %51, label %50, !dbg !8701

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !8702
  br label %51, !dbg !8704

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !8705
  %53 = icmp eq i32 %24, %52, !dbg !8707
  br i1 %53, label %55, label %54, !dbg !8708

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !8709
  br label %55, !dbg !8711

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8712
  %57 = load i32, i32* %56, align 4, !dbg !8712
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8714
  %59 = load i32, i32* %58, align 4, !dbg !8714
  %60 = icmp eq i32 %57, %59, !dbg !8715
  br i1 %60, label %63, label %61, !dbg !8716

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !8717
  %62 = load i32, i32* %56, align 4, !dbg !8719
  store i32 %62, i32* %58, align 4, !dbg !8720
  br label %63, !dbg !8721

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8722
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !8723
  br label %69, !dbg !8724

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8672
  %67 = and i8 %66, 1, !dbg !8672
  %68 = icmp eq i8 %67, 0, !dbg !8672
  br i1 %68, label %30, label %69, !dbg !8672

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8651
  ret i32 %70, !dbg !8725
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8728, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8729, metadata !DIExpression()), !dbg !8731
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8732
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8732
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8732
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8730, metadata !DIExpression()), !dbg !8731
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8733
  %7 = load i32, i32* %6, align 4, !dbg !8733
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8734
  store i32 %7, i32* %8, align 4, !dbg !8735
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8736, !range !8737
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !8738
  %11 = trunc i32 %10 to i8, !dbg !8738
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8739
  store i8 %11, i8* %12, align 4, !dbg !8740
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !8741, !range !8742
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !8743
  %15 = trunc i32 %14 to i8, !dbg !8743
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8744
  store i8 %15, i8* %16, align 1, !dbg !8745
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !8746
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8747, !range !8737
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !8748
  %20 = trunc i32 %19 to i8, !dbg !8748
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8749
  store i8 %20, i8* %21, align 2, !dbg !8750
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !8751, !range !8752
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !8753
  %24 = trunc i32 %23 to i8, !dbg !8753
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8754
  store i8 %24, i8* %25, align 1, !dbg !8755
  ret i32 0, !dbg !8756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8761, metadata !DIExpression()), !dbg !8763
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8764
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8764
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8764
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8762, metadata !DIExpression()), !dbg !8763
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8765
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8765
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !8766
  ret i32 %7, !dbg !8767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8773
  %2 = icmp eq i32 %0, 1024, !dbg !8774
  %3 = select i1 %2, i32 2, i32 0, !dbg !8774
  %4 = icmp eq i32 %0, 1536, !dbg !8774
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8774
  ret i32 %5, !dbg !8775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8776 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8778, metadata !DIExpression()), !dbg !8780
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8781
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8781
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8781
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8779, metadata !DIExpression()), !dbg !8780
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8782
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8782
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8783
  ret i32 %7, !dbg !8784
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8789, metadata !DIExpression()), !dbg !8790
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8791
  %3 = icmp ult i32 %2, 4, !dbg !8791
  br i1 %3, label %4, label %7, !dbg !8791

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8791
  %6 = load i32, i32* %5, align 4, !dbg !8791
  br label %7, !dbg !8791

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8792
  ret i32 %8, !dbg !8794
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8795 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8800
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8800
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8800
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8798, metadata !DIExpression()), !dbg !8799
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8801
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8801
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8802
  ret i32 %7, !dbg !8803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8808, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.value(metadata i32 %1, metadata !8809, metadata !DIExpression()), !dbg !8810
  %3 = icmp eq i32 %0, 4096, !dbg !8811
  %4 = icmp eq i32 %1, 0, !dbg !8811
  %5 = select i1 %4, i32 4, i32 3, !dbg !8811
  %6 = select i1 %4, i32 3, i32 2, !dbg !8811
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8811
  ret i32 %7, !dbg !8812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8815, metadata !DIExpression()), !dbg !8817
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8818
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8818
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8818
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8816, metadata !DIExpression()), !dbg !8817
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8819
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8819
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8820
  ret i32 %7, !dbg !8821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8826, metadata !DIExpression()), !dbg !8827
  %2 = icmp eq i32 %0, 768, !dbg !8828
  %3 = zext i1 %2 to i32, !dbg !8827
  ret i32 %3, !dbg !8830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8836, metadata !DIExpression()), !dbg !8837
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8838
  %3 = load volatile i32, i32* %2, align 4, !dbg !8838
  %4 = and i32 %3, 768, !dbg !8838
  ret i32 %4, !dbg !8839
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8840 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8842, metadata !DIExpression()), !dbg !8843
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8844
  %3 = load volatile i32, i32* %2, align 4, !dbg !8844
  %4 = and i32 %3, 4096, !dbg !8844
  ret i32 %4, !dbg !8845
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8848, metadata !DIExpression()), !dbg !8849
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8850
  %3 = load volatile i32, i32* %2, align 4, !dbg !8850
  %4 = and i32 %3, 12288, !dbg !8850
  ret i32 %4, !dbg !8851
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8852 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8854, metadata !DIExpression()), !dbg !8855
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8856
  %3 = load volatile i32, i32* %2, align 4, !dbg !8856
  %4 = and i32 %3, 1536, !dbg !8856
  ret i32 %4, !dbg !8857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8862, metadata !DIExpression()), !dbg !8863
  %2 = icmp eq i32 %0, 2, !dbg !8864
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8864
  %4 = icmp eq i32 %0, 1, !dbg !8864
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8864
  ret i32 %5, !dbg !8865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8870, metadata !DIExpression()), !dbg !8871
  %2 = icmp ult i32 %0, 3, !dbg !8872
  br i1 %2, label %3, label %6, !dbg !8872

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8872
  %5 = load i32, i32* %4, align 4, !dbg !8872
  br label %6, !dbg !8872

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8873
  ret i32 %7, !dbg !8875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8880, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %1, metadata !8881, metadata !DIExpression()), !dbg !8882
  %3 = icmp eq i32 %0, 4, !dbg !8883
  %4 = icmp eq i32 %1, 0, !dbg !8883
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8883
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8883
  ret i32 %6, !dbg !8884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8889, metadata !DIExpression()), !dbg !8890
  %2 = icmp eq i32 %0, 1, !dbg !8891
  %3 = select i1 %2, i32 768, i32 0, !dbg !8890
  ret i32 %3, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8894 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8898, metadata !DIExpression()), !dbg !8899
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8900
  %3 = load volatile i32, i32* %2, align 4, !dbg !8900
  %4 = and i32 %3, -8193, !dbg !8900
  store volatile i32 %4, i32* %2, align 4, !dbg !8900
  ret void, !dbg !8901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8902 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8906, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.value(metadata i32 %1, metadata !8907, metadata !DIExpression()), !dbg !8909
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8910
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8910
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8910
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8908, metadata !DIExpression()), !dbg !8909
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8911
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8911
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8916, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32 %1, metadata !8917, metadata !DIExpression()), !dbg !8919
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8920
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8920
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8920
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8918, metadata !DIExpression()), !dbg !8919
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8921
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8921
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8922
  ret void, !dbg !8923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 %1, metadata !8927, metadata !DIExpression()), !dbg !8929
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8930
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8930
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8930
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8928, metadata !DIExpression()), !dbg !8929
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8931
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8931
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8936, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.value(metadata i32 %1, metadata !8937, metadata !DIExpression()), !dbg !8939
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8940
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8940
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8940
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8938, metadata !DIExpression()), !dbg !8939
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8941
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8941
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8944 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8946, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %1, metadata !8947, metadata !DIExpression()), !dbg !8951
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8952
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8952
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8952
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8948, metadata !DIExpression()), !dbg !8951
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8953
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8953
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8953
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8949, metadata !DIExpression()), !dbg !8951
  %10 = bitcast i32* %3 to i8*, !dbg !8954
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8954
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8955
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8955
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8959
  %14 = bitcast %struct.perisistant_values** %13 to i8**, !dbg !8959
  %15 = load i8*, i8** %14, align 4, !dbg !8959
  call void @llvm.dbg.value(metadata i32* %3, metadata !8950, metadata !DIExpression(DW_OP_deref)), !dbg !8951
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8960
  %17 = icmp slt i32 %16, 0, !dbg !8961
  br i1 %17, label %23, label %18, !dbg !8962

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8963
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8963
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8964
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8965
  %22 = load i32, i32* %3, align 4, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %22, metadata !8950, metadata !DIExpression()), !dbg !8951
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8967
  br label %23, !dbg !8968

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8968
  ret void, !dbg !8968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8971, metadata !DIExpression()), !dbg !8972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8973
  %3 = load volatile i32, i32* %2, align 4, !dbg !8973
  %4 = or i32 %3, 8192, !dbg !8973
  store volatile i32 %4, i32* %2, align 4, !dbg !8973
  ret void, !dbg !8974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8977, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %1, metadata !8978, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32* %2, metadata !8979, metadata !DIExpression()), !dbg !8981
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8982
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8982
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8982
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8980, metadata !DIExpression()), !dbg !8981
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8983
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8983
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8985
  br i1 %9, label %12, label %10, !dbg !8986

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !8987
  br label %12, !dbg !8988

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8981
  ret i32 %13, !dbg !8989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8990 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8994, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.value(metadata i32 0, metadata !8995, metadata !DIExpression()), !dbg !8996
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8997
  %3 = load volatile i32, i32* %2, align 4, !dbg !8997
  %4 = and i32 %3, -32769, !dbg !8997
  store volatile i32 %4, i32* %2, align 4, !dbg !8997
  ret void, !dbg !8998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !8999 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9003, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.value(metadata i32 %1, metadata !9004, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.value(metadata i32 0, metadata !9005, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.value(metadata i32 %2, metadata !9006, metadata !DIExpression()), !dbg !9007
  %4 = mul i32 %1, 25, !dbg !9008
  %5 = shl i32 %2, 2, !dbg !9008
  %6 = udiv i32 %4, %5, !dbg !9008
  %7 = udiv i32 %6, 100, !dbg !9008
  %8 = shl nuw nsw i32 %7, 4, !dbg !9008
  %9 = mul i32 %7, -100, !dbg !9008
  %10 = add i32 %9, %6, !dbg !9008
  %11 = shl i32 %10, 4, !dbg !9008
  %12 = add i32 %11, 50, !dbg !9008
  %13 = udiv i32 %12, 100, !dbg !9008
  %14 = and i32 %13, 240, !dbg !9008
  %15 = add nuw nsw i32 %14, %8, !dbg !9008
  %16 = and i32 %13, 15, !dbg !9008
  %17 = and i32 %15, 65520, !dbg !9011
  %18 = or i32 %17, %16, !dbg !9011
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9012
  store volatile i32 %18, i32* %19, align 4, !dbg !9013
  ret void, !dbg !9014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9017, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i32 %1, metadata !9018, metadata !DIExpression()), !dbg !9019
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9020
  %4 = load volatile i32, i32* %3, align 4, !dbg !9020
  %5 = and i32 %4, -769, !dbg !9020
  %6 = or i32 %5, %1, !dbg !9020
  store volatile i32 %6, i32* %3, align 4, !dbg !9020
  ret void, !dbg !9021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9022 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %1, metadata !9025, metadata !DIExpression()), !dbg !9026
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9027
  %4 = load volatile i32, i32* %3, align 4, !dbg !9027
  %5 = and i32 %4, -4097, !dbg !9027
  %6 = or i32 %5, %1, !dbg !9027
  store volatile i32 %6, i32* %3, align 4, !dbg !9027
  ret void, !dbg !9028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9031, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata i32 %1, metadata !9032, metadata !DIExpression()), !dbg !9033
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9034
  %4 = load volatile i32, i32* %3, align 4, !dbg !9034
  %5 = and i32 %4, -12289, !dbg !9034
  %6 = or i32 %5, %1, !dbg !9034
  store volatile i32 %6, i32* %3, align 4, !dbg !9034
  ret void, !dbg !9035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9036 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9038, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %1, metadata !9039, metadata !DIExpression()), !dbg !9040
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9041
  %4 = load volatile i32, i32* %3, align 4, !dbg !9041
  %5 = and i32 %4, -1537, !dbg !9041
  %6 = or i32 %5, %1, !dbg !9041
  store volatile i32 %6, i32* %3, align 4, !dbg !9041
  ret void, !dbg !9042
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9043 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9045, metadata !DIExpression()), !dbg !9046
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9047
  %3 = load volatile i32, i32* %2, align 4, !dbg !9047
  %4 = lshr i32 %3, 3, !dbg !9048
  %5 = and i32 %4, 1, !dbg !9048
  ret i32 %5, !dbg !9049
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9050 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9052, metadata !DIExpression()), !dbg !9053
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9054
  %3 = load volatile i32, i32* %2, align 4, !dbg !9054
  %4 = and i32 %3, 1, !dbg !9054
  ret i32 %4, !dbg !9055
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9056 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9058, metadata !DIExpression()), !dbg !9059
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9060
  %3 = load volatile i32, i32* %2, align 4, !dbg !9060
  %4 = lshr i32 %3, 1, !dbg !9061
  %5 = and i32 %4, 1, !dbg !9061
  ret i32 %5, !dbg !9062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9063 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9065, metadata !DIExpression()), !dbg !9066
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9067
  %3 = load volatile i32, i32* %2, align 4, !dbg !9067
  %4 = lshr i32 %3, 8, !dbg !9068
  %5 = and i32 %4, 1, !dbg !9068
  ret i32 %5, !dbg !9069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9072, metadata !DIExpression()), !dbg !9073
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9074
  store volatile i32 -257, i32* %2, align 4, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9076 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9078, metadata !DIExpression()), !dbg !9080
  %3 = bitcast i32* %2 to i8*, !dbg !9081
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9081
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9079, metadata !DIExpression()), !dbg !9082
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9083
  %5 = load volatile i32, i32* %4, align 4, !dbg !9083
  store volatile i32 %5, i32* %2, align 4, !dbg !9084
  %6 = load volatile i32, i32* %2, align 4, !dbg !9085
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9086
  %8 = load volatile i32, i32* %7, align 4, !dbg !9086
  store volatile i32 %8, i32* %2, align 4, !dbg !9087
  %9 = load volatile i32, i32* %2, align 4, !dbg !9088
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9089
  ret void, !dbg !9089
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9090 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9092, metadata !DIExpression()), !dbg !9094
  %3 = bitcast i32* %2 to i8*, !dbg !9095
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9095
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9093, metadata !DIExpression()), !dbg !9096
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9097
  %5 = load volatile i32, i32* %4, align 4, !dbg !9097
  store volatile i32 %5, i32* %2, align 4, !dbg !9098
  %6 = load volatile i32, i32* %2, align 4, !dbg !9099
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9100
  %8 = load volatile i32, i32* %7, align 4, !dbg !9100
  store volatile i32 %8, i32* %2, align 4, !dbg !9101
  %9 = load volatile i32, i32* %2, align 4, !dbg !9102
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9103
  ret void, !dbg !9103
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9104 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9106, metadata !DIExpression()), !dbg !9108
  %3 = bitcast i32* %2 to i8*, !dbg !9109
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9109
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9107, metadata !DIExpression()), !dbg !9110
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9111
  %5 = load volatile i32, i32* %4, align 4, !dbg !9111
  store volatile i32 %5, i32* %2, align 4, !dbg !9112
  %6 = load volatile i32, i32* %2, align 4, !dbg !9113
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9114
  %8 = load volatile i32, i32* %7, align 4, !dbg !9114
  store volatile i32 %8, i32* %2, align 4, !dbg !9115
  %9 = load volatile i32, i32* %2, align 4, !dbg !9116
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9117
  ret void, !dbg !9117
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9118 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9120, metadata !DIExpression()), !dbg !9122
  %3 = bitcast i32* %2 to i8*, !dbg !9123
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9123
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9121, metadata !DIExpression()), !dbg !9124
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9125
  %5 = load volatile i32, i32* %4, align 4, !dbg !9125
  store volatile i32 %5, i32* %2, align 4, !dbg !9126
  %6 = load volatile i32, i32* %2, align 4, !dbg !9127
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9128
  %8 = load volatile i32, i32* %7, align 4, !dbg !9128
  store volatile i32 %8, i32* %2, align 4, !dbg !9129
  %9 = load volatile i32, i32* %2, align 4, !dbg !9130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9131
  ret void, !dbg !9131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9136
  %3 = load volatile i32, i32* %2, align 4, !dbg !9136
  %4 = lshr i32 %3, 7, !dbg !9137
  %5 = and i32 %4, 1, !dbg !9137
  ret i32 %5, !dbg !9138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !9139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8 %1, metadata !9144, metadata !DIExpression()), !dbg !9145
  %3 = zext i8 %1 to i32, !dbg !9146
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9147
  store volatile i32 %3, i32* %4, align 4, !dbg !9148
  ret void, !dbg !9149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9152, metadata !DIExpression()), !dbg !9153
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9154
  %3 = load volatile i32, i32* %2, align 4, !dbg !9154
  %4 = lshr i32 %3, 5, !dbg !9155
  %5 = and i32 %4, 1, !dbg !9155
  ret i32 %5, !dbg !9156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9157 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9161, metadata !DIExpression()), !dbg !9162
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9163
  %3 = load volatile i32, i32* %2, align 4, !dbg !9163
  %4 = trunc i32 %3 to i8, !dbg !9164
  ret i8 %4, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9168, metadata !DIExpression()), !dbg !9174
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9175
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9175
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9175
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9169, metadata !DIExpression()), !dbg !9174
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9176
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9176
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9170, metadata !DIExpression()), !dbg !9174
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !9177
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9178
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9178
  %10 = tail call fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %9) #24, !dbg !9180
  br i1 %10, label %11, label %49, !dbg !9181

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9182
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9183
  %14 = bitcast %struct.perisistant_values** %13 to i8**, !dbg !9183
  %15 = load i8*, i8** %14, align 4, !dbg !9183
  %16 = tail call fastcc i32 @clock_control_on.69(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !9184
  call void @llvm.dbg.value(metadata i32 %16, metadata !9173, metadata !DIExpression()), !dbg !9174
  %17 = icmp eq i32 %16, 0, !dbg !9185
  br i1 %17, label %18, label %49, !dbg !9187

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9188
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9188
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %21, metadata !9173, metadata !DIExpression()), !dbg !9174
  %22 = icmp slt i32 %21, 0, !dbg !9190
  br i1 %22, label %49, label %23, !dbg !9192

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9193
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9193
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !9194
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9195
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !9196
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9197
  %28 = load i32, i32* %27, align 4, !dbg !9197
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9199

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9171, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 4096, metadata !9172, metadata !DIExpression()), !dbg !9174
  br label %31, !dbg !9200

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9171, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 0, metadata !9172, metadata !DIExpression()), !dbg !9174
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9203
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9203
  call void @llvm.dbg.value(metadata i32 %33, metadata !9172, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.value(metadata i32 %32, metadata !9171, metadata !DIExpression()), !dbg !9174
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9204
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !9205
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9206
  %36 = load i8, i8* %35, align 4, !dbg !9206, !range !5661
  %37 = icmp eq i8 %36, 0, !dbg !9206
  br i1 %37, label %39, label %38, !dbg !9208

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !9209
  br label %39, !dbg !9211

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9212
  %41 = load i32, i32* %40, align 4, !dbg !9212
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !9213
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9214
  %43 = load i8, i8* %42, align 4, !dbg !9214, !range !5661
  %44 = icmp eq i8 %43, 0, !dbg !9214
  br i1 %44, label %47, label %45, !dbg !9216

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9217
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !9219
  br label %47, !dbg !9220

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9221
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !9222
  br label %49, !dbg !9223

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9174
  ret i32 %50, !dbg !9224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9229, metadata !DIExpression()), !dbg !9233
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9234
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9234
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9234
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9230, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9231, metadata !DIExpression()), !dbg !9233
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9235
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !9236
  ret void, !dbg !9237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %0) unnamed_addr #1 !dbg !9238 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9242, metadata !DIExpression()), !dbg !9243
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9244, !srcloc !9246
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.70(%struct.device* noundef %0) #24, !dbg !9247
  ret i1 %2, !dbg !9248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.69(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9251, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i8* %1, metadata !9252, metadata !DIExpression()), !dbg !9254
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9255
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9255
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9255
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9253, metadata !DIExpression()), !dbg !9254
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9256
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9256
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !9257
  ret i32 %8, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9259 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9263, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i8 0, metadata !9264, metadata !DIExpression()), !dbg !9267
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9268
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9266, metadata !DIExpression(DW_OP_deref)), !dbg !9267
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !9269
  call void @llvm.dbg.value(metadata i32 %4, metadata !9265, metadata !DIExpression()), !dbg !9267
  %5 = icmp slt i32 %4, 0, !dbg !9270
  br i1 %5, label %9, label %6, !dbg !9272

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9273
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9266, metadata !DIExpression()), !dbg !9267
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9274
  br label %9, !dbg !9275

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9267
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9276
  ret i32 %10, !dbg !9276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9279, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i32 12, metadata !9280, metadata !DIExpression()), !dbg !9281
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9282
  %3 = load volatile i32, i32* %2, align 4, !dbg !9282
  %4 = or i32 %3, 12, !dbg !9282
  store volatile i32 %4, i32* %2, align 4, !dbg !9282
  ret void, !dbg !9283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9286, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %1, metadata !9287, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %2, metadata !9288, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 0, metadata !9289, metadata !DIExpression()), !dbg !9290
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9291
  %5 = load volatile i32, i32* %4, align 4, !dbg !9291
  %6 = and i32 %5, -5633, !dbg !9291
  %7 = or i32 %2, %1, !dbg !9291
  %8 = or i32 %7, %6, !dbg !9291
  store volatile i32 %8, i32* %4, align 4, !dbg !9291
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9292
  %10 = load volatile i32, i32* %9, align 4, !dbg !9292
  %11 = and i32 %10, -12289, !dbg !9292
  store volatile i32 %11, i32* %9, align 4, !dbg !9292
  ret void, !dbg !9293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9294 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9296, metadata !DIExpression()), !dbg !9297
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9298
  %3 = load volatile i32, i32* %2, align 4, !dbg !9298
  %4 = or i32 %3, 8, !dbg !9298
  store volatile i32 %4, i32* %2, align 4, !dbg !9298
  ret void, !dbg !9299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9300 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9304, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9305, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.value(metadata i32 0, metadata !9306, metadata !DIExpression()), !dbg !9307
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9308
  %3 = load %struct.perisistant_values*, %struct.perisistant_values** %2, align 4, !dbg !9308
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9309
  %5 = load i8, i8* %4, align 4, !dbg !9309
  %6 = tail call i32 @pinctrl_configure_pins(%struct.perisistant_values* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !9310
  ret i32 %6, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.70(%struct.device* noundef %0) unnamed_addr #1 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9314, metadata !DIExpression()), !dbg !9315
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9316
  ret i1 %2, !dbg !9317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !9318 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9320, metadata !DIExpression()), !dbg !9321
  tail call fastcc void @__NVIC_SetPriority.72() #24, !dbg !9322
  store i32 3199, i32* @last_load, align 4, !dbg !9323
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9324
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9325
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9326
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9327
  %3 = or i32 %2, 7, !dbg !9327
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9327
  ret i32 0, !dbg !9328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.72() unnamed_addr #14 !dbg !9329 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9331, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.value(metadata i32 1, metadata !9332, metadata !DIExpression()), !dbg !9333
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9334
  ret void, !dbg !9337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9340, metadata !DIExpression()), !dbg !9342
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !9343
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9344
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9345
  %5 = add i32 %4, %3, !dbg !9345
  store i32 %5, i32* @cycle_count, align 4, !dbg !9345
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9346
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9347
  %7 = sub i32 %5, %6, !dbg !9350
  %8 = udiv i32 %7, 3200, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %8, metadata !9341, metadata !DIExpression()), !dbg !9342
  %9 = mul nuw i32 %8, 3200, !dbg !9352
  %10 = add i32 %9, %6, !dbg !9353
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9353
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !9354
  tail call void @z_arm_int_exit() #25, !dbg !9355
  ret void, !dbg !9356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !9357 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %1, metadata !9359, metadata !DIExpression()), !dbg !9363
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %2, metadata !9360, metadata !DIExpression()), !dbg !9363
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %3, metadata !9361, metadata !DIExpression()), !dbg !9363
  %4 = and i32 %2, 65536, !dbg !9366
  %5 = icmp ne i32 %4, 0, !dbg !9366
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9368
  %8 = load i32, i32* @last_load, align 4, !dbg !9363
  br i1 %7, label %9, label %13, !dbg !9368

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9369
  %11 = add i32 %10, %8, !dbg !9369
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9369
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9371
  br label %13, !dbg !9372

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9373
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9374
  %16 = add i32 %14, %15, !dbg !9375
  ret i32 %16, !dbg !9376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9381, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i1 %1, metadata !9382, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9394
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9395
  br i1 %4, label %5, label %8, !dbg !9395

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9397
  %7 = and i32 %6, -2, !dbg !9397
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9397
  store i32 -16777216, i32* @last_load, align 4, !dbg !9399
  br label %54, !dbg !9400

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9401
  call void @llvm.dbg.value(metadata i32 %9, metadata !9386, metadata !DIExpression()), !dbg !9394
  br i1 %3, label %18, label %10, !dbg !9402

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9402
  call void @llvm.dbg.value(metadata i32 undef, metadata !9381, metadata !DIExpression()), !dbg !9394
  %12 = icmp slt i32 %11, 1, !dbg !9403
  br i1 %12, label %18, label %13, !dbg !9403

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !9403
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !9403
  %16 = mul nuw nsw i32 %15, 3200, !dbg !9403
  %17 = add nuw nsw i32 %16, 3199, !dbg !9403
  br label %18, !dbg !9403

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9381, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9404, metadata !DIExpression()) #23, !dbg !9411
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9413, !srcloc !9419
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9413
  call void @llvm.dbg.value(metadata i32 %21, metadata !9416, metadata !DIExpression()) #23, !dbg !9420
  call void @llvm.dbg.value(metadata i32 undef, metadata !9417, metadata !DIExpression()) #23, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %21, metadata !9410, metadata !DIExpression()) #23, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %21, metadata !9387, metadata !DIExpression()), !dbg !9394
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !9421
  call void @llvm.dbg.value(metadata i32 %22, metadata !9392, metadata !DIExpression()), !dbg !9394
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9422
  call void @llvm.dbg.value(metadata i32 %23, metadata !9384, metadata !DIExpression()), !dbg !9394
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9423
  %25 = add i32 %24, %22, !dbg !9423
  store i32 %25, i32* @cycle_count, align 4, !dbg !9423
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9424
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9425
  %27 = sub i32 %25, %26, !dbg !9426
  call void @llvm.dbg.value(metadata i32 %27, metadata !9393, metadata !DIExpression()), !dbg !9394
  %28 = icmp slt i32 %27, 0, !dbg !9427
  br i1 %28, label %38, label %29, !dbg !9429

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9383, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i32 undef, metadata !9383, metadata !DIExpression()), !dbg !9394
  %30 = add nuw i32 %19, %27, !dbg !9430
  %31 = urem i32 %30, 3200, !dbg !9432
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9383, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9394
  %32 = sub nuw nsw i32 %19, %31, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %32, metadata !9383, metadata !DIExpression()), !dbg !9394
  %33 = icmp ugt i32 %32, 1024, !dbg !9434
  br i1 %33, label %34, label %36, !dbg !9434

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9383, metadata !DIExpression()), !dbg !9394
  %35 = icmp ugt i32 %32, 16771200, !dbg !9435
  br i1 %35, label %38, label %36, !dbg !9437

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9438
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9439
  call void @llvm.dbg.value(metadata i32 %40, metadata !9385, metadata !DIExpression()), !dbg !9394
  %41 = add nsw i32 %39, -1, !dbg !9440
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9441
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9442
  %42 = icmp ult i32 %23, %40, !dbg !9443
  br i1 %42, label %43, label %48, !dbg !9445

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9446
  %45 = add i32 %23, %9, !dbg !9448
  %46 = sub i32 %45, %40, !dbg !9449
  %47 = add i32 %46, %44, !dbg !9446
  br label %52, !dbg !9450

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9451
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9453
  %51 = add i32 %49, %50, !dbg !9453
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9454
  store i32 %53, i32* @cycle_count, align 4, !dbg !9454
  call void @llvm.dbg.value(metadata i32 %21, metadata !9455, metadata !DIExpression()) #23, !dbg !9461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9460, metadata !DIExpression()) #23, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %21, metadata !9463, metadata !DIExpression()) #23, !dbg !9466
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9468, !srcloc !9469
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9471 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9404, metadata !DIExpression()) #23, !dbg !9475
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9477, !srcloc !9419
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9477
  call void @llvm.dbg.value(metadata i32 %2, metadata !9416, metadata !DIExpression()) #23, !dbg !9479
  call void @llvm.dbg.value(metadata i32 undef, metadata !9417, metadata !DIExpression()) #23, !dbg !9479
  call void @llvm.dbg.value(metadata i32 %2, metadata !9410, metadata !DIExpression()) #23, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %2, metadata !9473, metadata !DIExpression()), !dbg !9480
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9481
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9482
  %5 = add i32 %4, %3, !dbg !9483
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9484
  %7 = sub i32 %5, %6, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %7, metadata !9474, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i32 %2, metadata !9455, metadata !DIExpression()) #23, !dbg !9486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9460, metadata !DIExpression()) #23, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %2, metadata !9463, metadata !DIExpression()) #23, !dbg !9488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9490, !srcloc !9469
  %8 = udiv i32 %7, 3200, !dbg !9491
  ret i32 %8, !dbg !9492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9404, metadata !DIExpression()) #23, !dbg !9497
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9499, !srcloc !9419
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9499
  call void @llvm.dbg.value(metadata i32 %2, metadata !9416, metadata !DIExpression()) #23, !dbg !9501
  call void @llvm.dbg.value(metadata i32 undef, metadata !9417, metadata !DIExpression()) #23, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %2, metadata !9410, metadata !DIExpression()) #23, !dbg !9497
  call void @llvm.dbg.value(metadata i32 %2, metadata !9495, metadata !DIExpression()), !dbg !9502
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9503
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9504
  %5 = add i32 %4, %3, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %5, metadata !9496, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 %2, metadata !9455, metadata !DIExpression()) #23, !dbg !9506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9460, metadata !DIExpression()) #23, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %2, metadata !9463, metadata !DIExpression()) #23, !dbg !9508
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9510, !srcloc !9469
  ret i32 %5, !dbg !9511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !9512 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9513
  %2 = icmp eq i32 %1, -16777216, !dbg !9515
  br i1 %2, label %3, label %6, !dbg !9516

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9517
  %5 = or i32 %4, 1, !dbg !9517
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9517
  br label %6, !dbg !9519

6:                                                ; preds = %3, %0
  ret void, !dbg !9520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !9521 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9522
  %2 = and i32 %1, -2, !dbg !9522
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9522
  ret void, !dbg !9523
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9524 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9550, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata i8 %1, metadata !9551, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9552, metadata !DIExpression()), !dbg !9553
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9554
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9554
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9553
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9555
  %8 = load i8, i8* %6, align 4, !dbg !9556
  %9 = zext i8 %8 to i32, !dbg !9557
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9557
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9558
  br i1 %11, label %18, label %24, !dbg !9559

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9553
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9555
  %14 = load i8, i8* %6, align 4, !dbg !9556
  %15 = zext i8 %14 to i32, !dbg !9557
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9557
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9558
  br i1 %17, label %18, label %24, !dbg !9559, !llvm.loop !9560

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9562
  %21 = load i8, i8* %20, align 1, !dbg !9562
  %22 = icmp eq i8 %21, %1, !dbg !9565
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9566
  br i1 %22, label %24, label %12, !dbg !9567

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9553
  ret i32 %25, !dbg !9568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.perisistant_values* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %0, metadata !9580, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i8 %1, metadata !9581, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i32 %2, metadata !9582, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i32 0, metadata !9585, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i32 0, metadata !9586, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i8 0, metadata !9587, metadata !DIExpression()), !dbg !9597
  %4 = icmp eq i8 %1, 0, !dbg !9598
  br i1 %4, label %35, label %5, !dbg !9599

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9598
  br label %9, !dbg !9599

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9587, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.value(metadata i32 %29, metadata !9585, metadata !DIExpression()), !dbg !9596
  %8 = icmp eq i32 %34, %6, !dbg !9598
  br i1 %8, label %35, label %9, !dbg !9599, !llvm.loop !9600

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9587, metadata !DIExpression()), !dbg !9597
  call void @llvm.dbg.value(metadata i32 %11, metadata !9585, metadata !DIExpression()), !dbg !9596
  %12 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %0, i32 %10, i32 0, !dbg !9602
  %13 = load i32, i32* %12, align 4, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %13, metadata !9584, metadata !DIExpression()), !dbg !9596
  %14 = and i32 %13, 31, !dbg !9603
  %15 = icmp ult i32 %14, 16, !dbg !9604
  br i1 %15, label %16, label %20, !dbg !9605

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %0, i32 %10, i32 1, !dbg !9606
  %18 = load i32, i32* %17, align 4, !dbg !9606
  %19 = or i32 %18, 32, !dbg !9608
  call void @llvm.dbg.value(metadata i32 %19, metadata !9585, metadata !DIExpression()), !dbg !9596
  br label %28, !dbg !9609

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9610

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %0, i32 %10, i32 1, !dbg !9611
  %23 = load i32, i32* %22, align 4, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %23, metadata !9589, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9612
  %24 = lshr i32 %23, 7, !dbg !9613
  %25 = and i32 %24, 16, !dbg !9613
  %26 = or i32 %25, %23, !dbg !9613
  call void @llvm.dbg.value(metadata i32 %26, metadata !9585, metadata !DIExpression()), !dbg !9596
  br label %28, !dbg !9614

27:                                               ; preds = %20
  br label %28, !dbg !9615

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9596
  call void @llvm.dbg.value(metadata i32 %29, metadata !9585, metadata !DIExpression()), !dbg !9596
  %30 = lshr i32 %13, 5, !dbg !9615
  %31 = and i32 %30, 255, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %31, metadata !9583, metadata !DIExpression()), !dbg !9596
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !9616
  call void @llvm.dbg.value(metadata i32 %32, metadata !9586, metadata !DIExpression()), !dbg !9596
  %33 = icmp slt i32 %32, 0, !dbg !9617
  %34 = add nuw nsw i32 %10, 1, !dbg !9619
  call void @llvm.dbg.value(metadata i32 %34, metadata !9587, metadata !DIExpression()), !dbg !9597
  br i1 %33, label %35, label %7, !dbg !9620

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9626, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %1, metadata !9627, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %2, metadata !9628, metadata !DIExpression()), !dbg !9630
  %4 = icmp ugt i32 %0, 175, !dbg !9631
  br i1 %4, label %17, label %5, !dbg !9633

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9634
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9635
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9635
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9629, metadata !DIExpression()), !dbg !9630
  %9 = lshr i32 1888, %6, !dbg !9636
  %10 = and i32 %9, 1, !dbg !9636
  %11 = icmp eq i32 %10, 0, !dbg !9636
  br i1 %11, label %12, label %17, !dbg !9638

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %8) #24, !dbg !9639
  br i1 %13, label %14, label %17, !dbg !9640

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !9641
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !9642
  br label %17, !dbg !9643

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !9630
  ret i32 %18, !dbg !9644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9649, metadata !DIExpression()), !dbg !9650
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9651, !srcloc !9653
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.78(%struct.device* noundef %0) #24, !dbg !9654
  ret i1 %2, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.78(%struct.device* noundef %0) unnamed_addr #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9658, metadata !DIExpression()), !dbg !9659
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9660
  ret i1 %2, !dbg !9661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9662 {
  ret void, !dbg !9663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !9664 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9666, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9667, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9668, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9669, metadata !DIExpression()), !dbg !9671
  call void @llvm.dbg.value(metadata i32 0, metadata !9670, metadata !DIExpression()), !dbg !9671
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9672
  call void @llvm.dbg.value(metadata i32 %1, metadata !9666, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !9671
  %2 = lshr i32 %1, 2, !dbg !9673
  %3 = and i32 %2, 3, !dbg !9673
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !9673

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9674
  %6 = lshr i32 %5, 13, !dbg !9676
  %7 = and i32 %6, 7, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %7, metadata !9670, metadata !DIExpression()), !dbg !9671
  %8 = shl nuw nsw i32 65536, %7, !dbg !9677
  br label %31, !dbg !9678

9:                                                ; preds = %0
  br label %31, !dbg !9679

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %11, metadata !9667, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !9671
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %12, metadata !9668, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !9671
  %13 = lshr i32 %11, 18, !dbg !9682
  %14 = and i32 %13, 15, !dbg !9682
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !9683
  %16 = load i8, i8* %15, align 1, !dbg !9683
  %17 = zext i8 %16 to i32, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %17, metadata !9667, metadata !DIExpression()), !dbg !9671
  %18 = lshr i32 %12, 22, !dbg !9684
  %19 = and i32 %18, 3, !dbg !9684
  %20 = add nuw nsw i32 %19, 1, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %20, metadata !9668, metadata !DIExpression()), !dbg !9671
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9686
  %22 = and i32 %21, 65536, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %22, metadata !9669, metadata !DIExpression()), !dbg !9671
  %23 = icmp eq i32 %22, 0, !dbg !9688
  br i1 %23, label %24, label %27, !dbg !9690

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !9691
  %26 = udiv i32 %25, %20, !dbg !9693
  br label %31, !dbg !9694

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !9695
  %29 = udiv i32 %28, %20, !dbg !9697
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !9698
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9699
  %34 = lshr i32 %33, 4, !dbg !9700
  %35 = and i32 %34, 15, !dbg !9700
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !9701
  %37 = load i8, i8* %36, align 1, !dbg !9701
  %38 = zext i8 %37 to i32, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %38, metadata !9666, metadata !DIExpression()), !dbg !9671
  %39 = lshr i32 %32, %38, !dbg !9702
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9704 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9711
  %2 = and i32 %1, 16711935, !dbg !9711
  %3 = or i32 %2, 45056, !dbg !9711
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9711
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9712
  %5 = or i32 %4, 256, !dbg !9712
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9712
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %6, metadata !9709, metadata !DIExpression()), !dbg !9714
  br label %7, !dbg !9715

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9716
  %9 = and i32 %8, 512, !dbg !9716
  %10 = icmp eq i32 %9, 0, !dbg !9717
  br i1 %10, label %11, label %15, !dbg !9715

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !9718
  %13 = sub i32 %12, %6, !dbg !9721
  %14 = icmp ugt i32 %13, 2, !dbg !9722
  br i1 %14, label %47, label %7, !dbg !9723, !llvm.loop !9724

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9726
  %17 = and i32 %16, -4, !dbg !9726
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9726
  br label %18, !dbg !9727

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9728
  %20 = and i32 %19, 12, !dbg !9728
  %21 = icmp eq i32 %20, 0, !dbg !9729
  br i1 %21, label %26, label %22, !dbg !9727

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !9730
  %24 = sub i32 %23, %6, !dbg !9733
  %25 = icmp ugt i32 %24, 5000, !dbg !9734
  br i1 %25, label %47, label %18, !dbg !9735, !llvm.loop !9736

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !9738
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !9739
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !9740
  call void @llvm.dbg.value(metadata i32 %28, metadata !9710, metadata !DIExpression()), !dbg !9714
  %29 = icmp eq i32 %28, 0, !dbg !9741
  br i1 %29, label %30, label %47, !dbg !9743

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9744
  %32 = and i32 %31, -285278210, !dbg !9744
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9744
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9745
  %34 = and i32 %33, -262145, !dbg !9745
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9745
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %35, metadata !9709, metadata !DIExpression()), !dbg !9714
  br label %36, !dbg !9747

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9748
  %38 = and i32 %37, 33554432, !dbg !9748
  %39 = icmp eq i32 %38, 0, !dbg !9749
  br i1 %39, label %44, label %40, !dbg !9747

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !9750
  %42 = sub i32 %41, %35, !dbg !9753
  %43 = icmp ugt i32 %42, 2, !dbg !9754
  br i1 %43, label %47, label %36, !dbg !9755, !llvm.loop !9756

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9758
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9759
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9760
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9761
  %46 = or i32 %45, 16777216, !dbg !9761
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9761
  br label %47, !dbg !9762

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !9714
  ret i32 %48, !dbg !9763
}

; Function Attrs: optsize
declare !dbg !9764 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9768 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9794, metadata !DIExpression()), !dbg !9807
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9808
  br i1 %3, label %385, label %4, !dbg !9810

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9811
  %6 = and i32 %5, 12, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %6, metadata !9797, metadata !DIExpression()), !dbg !9807
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9812
  %8 = and i32 %7, 65536, !dbg !9812
  call void @llvm.dbg.value(metadata i32 %8, metadata !9798, metadata !DIExpression()), !dbg !9807
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9813
  %10 = load i32, i32* %9, align 4, !dbg !9813
  %11 = and i32 %10, 1, !dbg !9815
  %12 = icmp eq i32 %11, 0, !dbg !9816
  br i1 %12, label %69, label %13, !dbg !9817

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !9818
  br i1 %14, label %19, label %15, !dbg !9821

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !9822
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !9823
  br i1 %18, label %19, label %27, !dbg !9823

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9824
  %21 = and i32 %20, 131072, !dbg !9824
  %22 = icmp eq i32 %21, 0, !dbg !9827
  br i1 %22, label %69, label %23, !dbg !9828

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9829
  %25 = load i32, i32* %24, align 4, !dbg !9829
  %26 = icmp eq i32 %25, 0, !dbg !9830
  br i1 %26, label %385, label %69, !dbg !9831

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9832
  %29 = load i32, i32* %28, align 4, !dbg !9832
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !9836

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9837
  %32 = or i32 %31, 65536, !dbg !9837
  br label %48, !dbg !9837

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9839
  %35 = and i32 %34, -65537, !dbg !9839
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9839
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9839
  %37 = and i32 %36, -262145, !dbg !9839
  br label %48, !dbg !9839

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9842
  %40 = or i32 %39, 262144, !dbg !9842
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9842
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9842
  %42 = or i32 %41, 65536, !dbg !9842
  br label %48, !dbg !9842

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9845
  %45 = and i32 %44, -65537, !dbg !9845
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9845
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9845
  %47 = and i32 %46, -262145, !dbg !9845
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9847
  %50 = load i32, i32* %28, align 4, !dbg !9848
  %51 = icmp eq i32 %50, 0, !dbg !9850
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !9851
  call void @llvm.dbg.value(metadata i32 %52, metadata !9795, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %52, metadata !9795, metadata !DIExpression()), !dbg !9807
  br i1 %51, label %61, label %53, !dbg !9852

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9853
  %55 = and i32 %54, 131072, !dbg !9853
  %56 = icmp eq i32 %55, 0, !dbg !9855
  br i1 %56, label %57, label %69, !dbg !9856

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !9857
  %59 = sub i32 %58, %52, !dbg !9860
  %60 = icmp ugt i32 %59, 100, !dbg !9861
  br i1 %60, label %385, label %53, !dbg !9862, !llvm.loop !9863

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9865
  %63 = and i32 %62, 131072, !dbg !9865
  %64 = icmp eq i32 %63, 0, !dbg !9867
  br i1 %64, label %69, label %65, !dbg !9868

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !9869
  %67 = sub i32 %66, %52, !dbg !9872
  %68 = icmp ugt i32 %67, 100, !dbg !9873
  br i1 %68, label %385, label %61, !dbg !9874, !llvm.loop !9875

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !9877
  %71 = and i32 %70, 2, !dbg !9879
  %72 = icmp eq i32 %71, 0, !dbg !9880
  br i1 %72, label %118, label %73, !dbg !9881

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !9882
  br i1 %74, label %79, label %75, !dbg !9885

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !9886
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !9887
  br i1 %78, label %79, label %87, !dbg !9887

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9888
  %81 = and i32 %80, 2, !dbg !9888
  %82 = icmp eq i32 %81, 0, !dbg !9891
  br i1 %82, label %111, label %83, !dbg !9892

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9893
  %85 = load i32, i32* %84, align 4, !dbg !9893
  %86 = icmp eq i32 %85, 1, !dbg !9894
  br i1 %86, label %111, label %385, !dbg !9895

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9896
  %89 = load i32, i32* %88, align 4, !dbg !9896
  %90 = icmp eq i32 %89, 0, !dbg !9899
  br i1 %90, label %101, label %91, !dbg !9900

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9901
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !9903
  call void @llvm.dbg.value(metadata i32 %92, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %93, !dbg !9904

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9905
  %95 = and i32 %94, 2, !dbg !9905
  %96 = icmp eq i32 %95, 0, !dbg !9906
  br i1 %96, label %97, label %111, !dbg !9904

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !9907
  %99 = sub i32 %98, %92, !dbg !9910
  %100 = icmp ugt i32 %99, 2, !dbg !9911
  br i1 %100, label %385, label %93, !dbg !9912, !llvm.loop !9913

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9915
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !9917
  call void @llvm.dbg.value(metadata i32 %102, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %103, !dbg !9918

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9919
  %105 = and i32 %104, 2, !dbg !9919
  %106 = icmp eq i32 %105, 0, !dbg !9920
  br i1 %106, label %118, label %107, !dbg !9918

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !9921
  %109 = sub i32 %108, %102, !dbg !9924
  %110 = icmp ugt i32 %109, 2, !dbg !9925
  br i1 %110, label %385, label %103, !dbg !9926, !llvm.loop !9927

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9929
  %113 = and i32 %112, -7937, !dbg !9929
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9929
  %115 = load i32, i32* %114, align 4, !dbg !9929
  %116 = shl i32 %115, 8, !dbg !9929
  %117 = or i32 %116, %113, !dbg !9929
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9929
  br label %118, !dbg !9930

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !9930
  %120 = and i32 %119, 16, !dbg !9932
  %121 = icmp eq i32 %120, 0, !dbg !9933
  br i1 %121, label %215, label %122, !dbg !9934

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !9935
  br i1 %123, label %124, label %179, !dbg !9938

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9939
  %126 = and i32 %125, 512, !dbg !9939
  %127 = icmp eq i32 %126, 0, !dbg !9942
  br i1 %127, label %132, label %128, !dbg !9943

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !9944
  %130 = load i32, i32* %129, align 4, !dbg !9944
  %131 = icmp eq i32 %130, 0, !dbg !9945
  br i1 %131, label %385, label %132, !dbg !9946

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !9947
  %134 = load i32, i32* %133, align 4, !dbg !9947
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9950
  %136 = and i32 %135, 57344, !dbg !9950
  %137 = icmp ugt i32 %134, %136, !dbg !9951
  br i1 %137, label %138, label %152, !dbg !9952

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !9953
  %140 = icmp eq i32 %139, 0, !dbg !9956
  br i1 %140, label %141, label %385, !dbg !9957

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9958
  %143 = and i32 %142, -57345, !dbg !9958
  %144 = load i32, i32* %133, align 4, !dbg !9958
  %145 = or i32 %143, %144, !dbg !9958
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9958
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9959
  %147 = and i32 %146, 16777215, !dbg !9959
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !9959
  %149 = load i32, i32* %148, align 4, !dbg !9959
  %150 = shl i32 %149, 24, !dbg !9959
  %151 = or i32 %150, %147, !dbg !9959
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9959
  br label %165, !dbg !9960

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9961
  %154 = and i32 %153, -57345, !dbg !9961
  %155 = or i32 %154, %134, !dbg !9961
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9961
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  %157 = and i32 %156, 16777215, !dbg !9963
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !9963
  %159 = load i32, i32* %158, align 4, !dbg !9963
  %160 = shl i32 %159, 24, !dbg !9963
  %161 = or i32 %160, %157, !dbg !9963
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9963
  %162 = load i32, i32* %133, align 4, !dbg !9964
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !9966
  %164 = icmp eq i32 %163, 0, !dbg !9967
  br i1 %164, label %165, label %385, !dbg !9968

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !9969
  %167 = lshr i32 %166, 13, !dbg !9970
  %168 = shl i32 65536, %167, !dbg !9971
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9972
  %170 = lshr i32 %169, 4, !dbg !9973
  %171 = and i32 %170, 15, !dbg !9973
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !9974
  %173 = load i8, i8* %172, align 1, !dbg !9974
  %174 = zext i8 %173 to i32, !dbg !9974
  %175 = lshr i32 %168, %174, !dbg !9975
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !9976
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !9977
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %177, metadata !9796, metadata !DIExpression()), !dbg !9807
  %178 = icmp eq i32 %177, 0, !dbg !9979
  br i1 %178, label %215, label %385, !dbg !9981

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !9982
  %181 = load i32, i32* %180, align 4, !dbg !9982
  %182 = icmp eq i32 %181, 0, !dbg !9985
  br i1 %182, label %205, label %183, !dbg !9986

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !9987
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !9989
  call void @llvm.dbg.value(metadata i32 %184, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %185, !dbg !9990

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9991
  %187 = and i32 %186, 512, !dbg !9991
  %188 = icmp eq i32 %187, 0, !dbg !9992
  br i1 %188, label %189, label %193, !dbg !9990

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !9993
  %191 = sub i32 %190, %184, !dbg !9996
  %192 = icmp ugt i32 %191, 2, !dbg !9997
  br i1 %192, label %385, label %185, !dbg !9998, !llvm.loop !9999

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10001
  %195 = and i32 %194, -57345, !dbg !10001
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10001
  %197 = load i32, i32* %196, align 4, !dbg !10001
  %198 = or i32 %195, %197, !dbg !10001
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10001
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10002
  %200 = and i32 %199, 16777215, !dbg !10002
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10002
  %202 = load i32, i32* %201, align 4, !dbg !10002
  %203 = shl i32 %202, 24, !dbg !10002
  %204 = or i32 %203, %200, !dbg !10002
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10002
  br label %215, !dbg !10003

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10004
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %206, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %207, !dbg !10007

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10008
  %209 = and i32 %208, 512, !dbg !10008
  %210 = icmp eq i32 %209, 0, !dbg !10009
  br i1 %210, label %215, label %211, !dbg !10007

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !10010
  %213 = sub i32 %212, %206, !dbg !10013
  %214 = icmp ugt i32 %213, 2, !dbg !10014
  br i1 %214, label %385, label %207, !dbg !10015, !llvm.loop !10016

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !10018
  %217 = and i32 %216, 8, !dbg !10020
  %218 = icmp eq i32 %217, 0, !dbg !10021
  br i1 %218, label %243, label %219, !dbg !10022

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10023
  %221 = load i32, i32* %220, align 4, !dbg !10023
  %222 = icmp eq i32 %221, 0, !dbg !10026
  br i1 %222, label %233, label %223, !dbg !10027

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10028
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !10030
  call void @llvm.dbg.value(metadata i32 %224, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %225, !dbg !10031

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10032
  %227 = and i32 %226, 2, !dbg !10032
  %228 = icmp eq i32 %227, 0, !dbg !10033
  br i1 %228, label %229, label %243, !dbg !10031

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !10034
  %231 = sub i32 %230, %224, !dbg !10037
  %232 = icmp ugt i32 %231, 2, !dbg !10038
  br i1 %232, label %385, label %225, !dbg !10039, !llvm.loop !10040

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10042
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !10044
  call void @llvm.dbg.value(metadata i32 %234, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %235, !dbg !10045

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10046
  %237 = and i32 %236, 2, !dbg !10046
  %238 = icmp eq i32 %237, 0, !dbg !10047
  br i1 %238, label %243, label %239, !dbg !10045

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !10048
  %241 = sub i32 %240, %234, !dbg !10051
  %242 = icmp ugt i32 %241, 2, !dbg !10052
  br i1 %242, label %385, label %235, !dbg !10053, !llvm.loop !10054

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !10056
  %245 = and i32 %244, 4, !dbg !10057
  %246 = icmp eq i32 %245, 0, !dbg !10058
  br i1 %246, label %320, label %247, !dbg !10059

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !9799, metadata !DIExpression()), !dbg !10060
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10061
  %249 = and i32 %248, 268435456, !dbg !10061
  %250 = icmp eq i32 %249, 0, !dbg !10061
  br i1 %250, label %251, label %258, !dbg !10062

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !10063
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !10063
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9803, metadata !DIExpression()), !dbg !10063
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10063
  %254 = or i32 %253, 268435456, !dbg !10063
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10063
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10063
  %256 = and i32 %255, 268435456, !dbg !10063
  store volatile i32 %256, i32* %2, align 4, !dbg !10063
  %257 = load volatile i32, i32* %2, align 4, !dbg !10063
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !10064
  call void @llvm.dbg.value(metadata i32 1, metadata !9799, metadata !DIExpression()), !dbg !10060
  br label %258, !dbg !10065

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !9799, metadata !DIExpression()), !dbg !10060
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10066
  %260 = and i32 %259, 256, !dbg !10066
  %261 = icmp eq i32 %260, 0, !dbg !10066
  br i1 %261, label %262, label %274, !dbg !10068

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10069
  %264 = or i32 %263, 256, !dbg !10069
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10069
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %265, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %266, !dbg !10072

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10073
  %268 = and i32 %267, 256, !dbg !10073
  %269 = icmp eq i32 %268, 0, !dbg !10073
  br i1 %269, label %270, label %274, !dbg !10072

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !10074
  %272 = sub i32 %271, %265, !dbg !10077
  %273 = icmp ugt i32 %272, 100, !dbg !10078
  br i1 %273, label %385, label %266, !dbg !10079, !llvm.loop !10080

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10082
  %276 = load i32, i32* %275, align 4, !dbg !10082
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !10085

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10086
  %279 = or i32 %278, 256, !dbg !10086
  br label %295, !dbg !10086

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10088
  %282 = and i32 %281, -257, !dbg !10088
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10088
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10088
  %284 = and i32 %283, -1025, !dbg !10088
  br label %295, !dbg !10088

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10091
  %287 = or i32 %286, 1024, !dbg !10091
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10091
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10091
  %289 = or i32 %288, 256, !dbg !10091
  br label %295, !dbg !10091

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10094
  %292 = and i32 %291, -257, !dbg !10094
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10094
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10094
  %294 = and i32 %293, -1025, !dbg !10094
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10096
  %297 = load i32, i32* %275, align 4, !dbg !10097
  %298 = icmp eq i32 %297, 0, !dbg !10099
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %299, metadata !9795, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %299, metadata !9795, metadata !DIExpression()), !dbg !9807
  br i1 %298, label %308, label %300, !dbg !10101

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10102
  %302 = and i32 %301, 512, !dbg !10102
  %303 = icmp eq i32 %302, 0, !dbg !10104
  br i1 %303, label %304, label %316, !dbg !10105

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !10106
  %306 = sub i32 %305, %299, !dbg !10109
  %307 = icmp ugt i32 %306, 5000, !dbg !10110
  br i1 %307, label %385, label %300, !dbg !10111, !llvm.loop !10112

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10114
  %310 = and i32 %309, 512, !dbg !10114
  %311 = icmp eq i32 %310, 0, !dbg !10116
  br i1 %311, label %316, label %312, !dbg !10117

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !10118
  %314 = sub i32 %313, %299, !dbg !10121
  %315 = icmp ugt i32 %314, 5000, !dbg !10122
  br i1 %315, label %385, label %308, !dbg !10123, !llvm.loop !10124

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !10126

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10127
  %319 = and i32 %318, -268435457, !dbg !10127
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10127
  br label %320, !dbg !10130

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !10131
  %322 = load i32, i32* %321, align 4, !dbg !10131
  %323 = icmp eq i32 %322, 0, !dbg !10133
  br i1 %323, label %384, label %324, !dbg !10134

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !10135
  br i1 %325, label %366, label %326, !dbg !10138

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !10139
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10142
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !10142
  call void @llvm.dbg.value(metadata i32 %328, metadata !9795, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %328, metadata !9795, metadata !DIExpression()), !dbg !9807
  br i1 %327, label %329, label %358, !dbg !10143

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10144
  %331 = and i32 %330, 33554432, !dbg !10144
  %332 = icmp eq i32 %331, 0, !dbg !10146
  br i1 %332, label %337, label %333, !dbg !10147

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !10148
  %335 = sub i32 %334, %328, !dbg !10151
  %336 = icmp ugt i32 %335, 2, !dbg !10152
  br i1 %336, label %385, label %329, !dbg !10153, !llvm.loop !10154

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10156
  %339 = and i32 %338, -16580609, !dbg !10156
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !10156
  %341 = load i32, i32* %340, align 4, !dbg !10156
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !10156
  %343 = load i32, i32* %342, align 4, !dbg !10156
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !10156
  %345 = load i32, i32* %344, align 4, !dbg !10156
  %346 = or i32 %339, %341, !dbg !10156
  %347 = or i32 %346, %343, !dbg !10156
  %348 = or i32 %347, %345, !dbg !10156
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10156
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10157
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !10158
  call void @llvm.dbg.value(metadata i32 %349, metadata !9795, metadata !DIExpression()), !dbg !9807
  br label %350, !dbg !10159

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10160
  %352 = and i32 %351, 33554432, !dbg !10160
  %353 = icmp eq i32 %352, 0, !dbg !10161
  br i1 %353, label %354, label %384, !dbg !10159

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !10162
  %356 = sub i32 %355, %349, !dbg !10165
  %357 = icmp ugt i32 %356, 2, !dbg !10166
  br i1 %357, label %385, label %350, !dbg !10167, !llvm.loop !10168

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10170
  %360 = and i32 %359, 33554432, !dbg !10170
  %361 = icmp eq i32 %360, 0, !dbg !10172
  br i1 %361, label %384, label %362, !dbg !10173

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !10174
  %364 = sub i32 %363, %328, !dbg !10177
  %365 = icmp ugt i32 %364, 2, !dbg !10178
  br i1 %365, label %385, label %358, !dbg !10179, !llvm.loop !10180

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !10182
  br i1 %367, label %385, label %368, !dbg !10185

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10186
  call void @llvm.dbg.value(metadata i32 %369, metadata !9798, metadata !DIExpression()), !dbg !9807
  %370 = and i32 %369, 65536, !dbg !10188
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !10190
  %372 = load i32, i32* %371, align 4, !dbg !10190
  %373 = icmp eq i32 %370, %372, !dbg !10191
  br i1 %373, label %374, label %385, !dbg !10192

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !10193
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !10194
  %377 = load i32, i32* %376, align 4, !dbg !10194
  %378 = icmp eq i32 %375, %377, !dbg !10195
  br i1 %378, label %379, label %385, !dbg !10196

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !10197
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !10198
  %382 = load i32, i32* %381, align 4, !dbg !10198
  %383 = icmp eq i32 %380, %382, !dbg !10199
  br i1 %383, label %384, label %385, !dbg !10200

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !10201

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !9807
  ret i32 %386, !dbg !10202
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #13 !dbg !10203 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10205, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i32 0, metadata !10207, metadata !DIExpression()), !dbg !10214
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10215
  %4 = and i32 %3, 240, !dbg !10215
  %5 = icmp eq i32 %4, 0, !dbg !10216
  br i1 %5, label %6, label %31, !dbg !10217

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10218
  %8 = and i32 %7, 268435456, !dbg !10218
  %9 = icmp eq i32 %8, 0, !dbg !10218
  br i1 %9, label %12, label %10, !dbg !10219

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10220
  call void @llvm.dbg.value(metadata i32 %11, metadata !10206, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !10214
  br label %22, !dbg !10222

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !10223
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !10223
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10208, metadata !DIExpression()), !dbg !10223
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10223
  %15 = or i32 %14, 268435456, !dbg !10223
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10223
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10223
  %17 = and i32 %16, 268435456, !dbg !10223
  store volatile i32 %17, i32* %2, align 4, !dbg !10223
  %18 = load volatile i32, i32* %2, align 4, !dbg !10223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !10224
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %19, metadata !10206, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !10214
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10226
  %21 = and i32 %20, -268435457, !dbg !10226
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10226
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !10227
  call void @llvm.dbg.value(metadata i32 %24, metadata !10206, metadata !DIExpression()), !dbg !10214
  %25 = icmp eq i32 %24, 6144, !dbg !10228
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !10230
  call void @llvm.dbg.value(metadata i32 undef, metadata !10207, metadata !DIExpression()), !dbg !10214
  br i1 %27, label %28, label %31, !dbg !10231

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10233
  %30 = or i32 %29, 4, !dbg !10233
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10233
  br label %31, !dbg !10233

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10231
  %34 = and i32 %33, -2, !dbg !10231
  %35 = or i32 %34, %32, !dbg !10231
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10231
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10236
  %37 = and i32 %36, 1, !dbg !10236
  %38 = xor i32 %37, %32, !dbg !10214
  ret i32 %38, !dbg !10238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10239 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10252, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.value(metadata i32 %1, metadata !10253, metadata !DIExpression()), !dbg !10256
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10257
  br i1 %3, label %136, label %4, !dbg !10259

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10260
  %6 = and i32 %5, 1, !dbg !10260
  %7 = icmp ult i32 %6, %1, !dbg !10262
  br i1 %7, label %8, label %20, !dbg !10263

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !10264
  br i1 %9, label %10, label %13, !dbg !10268

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10269
  %12 = or i32 %11, 4, !dbg !10269
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10269
  br label %13, !dbg !10269

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10268
  %15 = and i32 %14, -2, !dbg !10268
  %16 = or i32 %15, %1, !dbg !10268
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10268
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10271
  %18 = and i32 %17, 1, !dbg !10271
  %19 = icmp eq i32 %18, %1, !dbg !10273
  br i1 %19, label %20, label %136, !dbg !10274

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10275
  %22 = load i32, i32* %21, align 4, !dbg !10275
  %23 = and i32 %22, 2, !dbg !10277
  %24 = icmp eq i32 %23, 0, !dbg !10278
  br i1 %24, label %32, label %25, !dbg !10279

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10280
  %27 = and i32 %26, -241, !dbg !10280
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10280
  %29 = load i32, i32* %28, align 4, !dbg !10280
  %30 = or i32 %27, %29, !dbg !10280
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10280
  %31 = load i32, i32* %21, align 4, !dbg !10282
  br label %32, !dbg !10284

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !10282
  %34 = and i32 %33, 1, !dbg !10285
  %35 = icmp eq i32 %34, 0, !dbg !10286
  br i1 %35, label %93, label %36, !dbg !10287

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10288
  %38 = load i32, i32* %37, align 4, !dbg !10288
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !10291

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10292
  %41 = and i32 %40, 131072, !dbg !10292
  %42 = icmp eq i32 %41, 0, !dbg !10295
  br i1 %42, label %136, label %55, !dbg !10296

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10297
  %45 = and i32 %44, 33554432, !dbg !10297
  %46 = icmp eq i32 %45, 0, !dbg !10301
  br i1 %46, label %136, label %55, !dbg !10302

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10303
  %49 = and i32 %48, 2, !dbg !10303
  %50 = icmp eq i32 %49, 0, !dbg !10307
  br i1 %50, label %136, label %55, !dbg !10308

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10309
  %53 = and i32 %52, 512, !dbg !10309
  %54 = icmp eq i32 %53, 0, !dbg !10312
  br i1 %54, label %136, label %55, !dbg !10313

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10314
  %57 = and i32 %56, -4, !dbg !10314
  %58 = or i32 %57, %38, !dbg !10314
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10314
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !10315
  call void @llvm.dbg.value(metadata i32 %59, metadata !10254, metadata !DIExpression()), !dbg !10256
  %60 = load i32, i32* %37, align 4, !dbg !10316
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !10318

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10319
  %63 = and i32 %62, 12, !dbg !10319
  %64 = icmp eq i32 %63, 8, !dbg !10321
  br i1 %64, label %93, label %65, !dbg !10322

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !10323
  %67 = sub i32 %66, %59, !dbg !10326
  %68 = icmp ugt i32 %67, 5000, !dbg !10327
  br i1 %68, label %136, label %61, !dbg !10328, !llvm.loop !10329

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10331
  %71 = and i32 %70, 12, !dbg !10331
  %72 = icmp eq i32 %71, 12, !dbg !10334
  br i1 %72, label %93, label %73, !dbg !10335

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !10336
  %75 = sub i32 %74, %59, !dbg !10339
  %76 = icmp ugt i32 %75, 5000, !dbg !10340
  br i1 %76, label %136, label %69, !dbg !10341, !llvm.loop !10342

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10344
  %79 = and i32 %78, 12, !dbg !10344
  %80 = icmp eq i32 %79, 4, !dbg !10347
  br i1 %80, label %93, label %81, !dbg !10348

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !10349
  %83 = sub i32 %82, %59, !dbg !10352
  %84 = icmp ugt i32 %83, 5000, !dbg !10353
  br i1 %84, label %136, label %77, !dbg !10354, !llvm.loop !10355

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10357
  %87 = and i32 %86, 12, !dbg !10357
  %88 = icmp eq i32 %87, 0, !dbg !10359
  br i1 %88, label %93, label %89, !dbg !10360

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !10361
  %91 = sub i32 %90, %59, !dbg !10364
  %92 = icmp ugt i32 %91, 5000, !dbg !10365
  br i1 %92, label %136, label %85, !dbg !10366, !llvm.loop !10367

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10369
  %95 = and i32 %94, 1, !dbg !10369
  %96 = icmp ugt i32 %95, %1, !dbg !10371
  br i1 %96, label %97, label %103, !dbg !10372

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10373
  %99 = and i32 %98, -2, !dbg !10373
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10373
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10376
  %101 = and i32 %100, 1, !dbg !10376
  %102 = icmp eq i32 %101, 0, !dbg !10378
  br i1 %102, label %103, label %136, !dbg !10379

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !10380
  %105 = and i32 %104, 4, !dbg !10382
  %106 = icmp eq i32 %105, 0, !dbg !10383
  br i1 %106, label %114, label %107, !dbg !10384

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10385
  %109 = and i32 %108, -1793, !dbg !10385
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10385
  %111 = load i32, i32* %110, align 4, !dbg !10385
  %112 = or i32 %109, %111, !dbg !10385
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10385
  %113 = load i32, i32* %21, align 4, !dbg !10387
  br label %114, !dbg !10389

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !10387
  %116 = and i32 %115, 8, !dbg !10390
  %117 = icmp eq i32 %116, 0, !dbg !10391
  br i1 %117, label %125, label %118, !dbg !10392

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10393
  %120 = and i32 %119, -14337, !dbg !10393
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10393
  %122 = load i32, i32* %121, align 4, !dbg !10393
  %123 = shl i32 %122, 3, !dbg !10393
  %124 = or i32 %123, %120, !dbg !10393
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10393
  br label %125, !dbg !10395

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !10396
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10397
  %128 = lshr i32 %127, 4, !dbg !10398
  %129 = and i32 %128, 15, !dbg !10398
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !10399
  %131 = load i8, i8* %130, align 1, !dbg !10399
  %132 = zext i8 %131 to i32, !dbg !10399
  %133 = lshr i32 %126, %132, !dbg !10400
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !10401
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !10402
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %135, metadata !10255, metadata !DIExpression()), !dbg !10256
  br label %136, !dbg !10404

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !10256
  ret i32 %137, !dbg !10405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !10406 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10414
  call void @llvm.dbg.value(metadata i32 %1, metadata !10408, metadata !DIExpression()), !dbg !10415
  %2 = lshr i32 %1, 2, !dbg !10416
  %3 = and i32 %2, 3, !dbg !10416
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !10416

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !10413, metadata !DIExpression()), !dbg !10415
  br label %26, !dbg !10417

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !10420
  %7 = and i32 %6, 15, !dbg !10420
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !10422
  %9 = load i8, i8* %8, align 1, !dbg !10422
  call void @llvm.dbg.value(metadata i8 %9, metadata !10409, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10415
  %10 = lshr i32 %1, 22, !dbg !10423
  %11 = and i32 %10, 3, !dbg !10423
  %12 = add nuw nsw i32 %11, 1, !dbg !10424
  call void @llvm.dbg.value(metadata i32 %12, metadata !10410, metadata !DIExpression()), !dbg !10415
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10425
  %14 = and i32 %13, 65536, !dbg !10425
  %15 = icmp eq i32 %14, 0, !dbg !10427
  %16 = zext i8 %9 to i32, !dbg !10428
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !10428
  %18 = mul nuw i32 %17, %16, !dbg !10428
  %19 = udiv i32 %18, %12, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %19, metadata !10411, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata i32 %19, metadata !10413, metadata !DIExpression()), !dbg !10415
  br label %26, !dbg !10430

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10431
  %23 = lshr i32 %22, 13, !dbg !10433
  %24 = and i32 %23, 7, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %24, metadata !10412, metadata !DIExpression()), !dbg !10415
  %25 = shl nuw nsw i32 65536, %24, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %25, metadata !10413, metadata !DIExpression()), !dbg !10415
  br label %26, !dbg !10435

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !10436
  call void @llvm.dbg.value(metadata i32 %27, metadata !10413, metadata !DIExpression()), !dbg !10415
  ret i32 %27, !dbg !10437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10438 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10440, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %2, metadata !10442, metadata !DIExpression()), !dbg !10455
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !10456
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !10456
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !10443, metadata !DIExpression()), !dbg !10457
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10458
  store i32 2, i32* %7, align 4, !dbg !10459
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10460
  store i32 2, i32* %8, align 4, !dbg !10461
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10462
  store i32 0, i32* %9, align 4, !dbg !10463
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10464
  store i32 256, i32* %10, align 4, !dbg !10465
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10466
  store i32 0, i32* %11, align 4, !dbg !10467
  %12 = bitcast i32* %5 to i8*, !dbg !10468
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !10468
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10453, metadata !DIExpression()), !dbg !10468
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !10468
  %14 = or i32 %13, 1, !dbg !10468
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !10468
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !10468
  %16 = and i32 %15, 1, !dbg !10468
  store volatile i32 %16, i32* %5, align 4, !dbg !10468
  %17 = load volatile i32, i32* %5, align 4, !dbg !10468
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !10469
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !10470
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10471
  %19 = and i32 %18, -1996488705, !dbg !10471
  %20 = or i32 %2, %1, !dbg !10471
  %21 = or i32 %20, %19, !dbg !10471
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10471
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !10472
  ret void, !dbg !10472
}

; Function Attrs: optsize
declare !dbg !10473 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !10477 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10478
  ret void, !dbg !10479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !10480 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10481
  ret void, !dbg !10482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !10483 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !10484
  ret i32 %1, !dbg !10485
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !10486 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !10487
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10488
  %3 = lshr i32 %2, 8, !dbg !10489
  %4 = and i32 %3, 7, !dbg !10489
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10490
  %6 = load i8, i8* %5, align 1, !dbg !10490
  %7 = zext i8 %6 to i32, !dbg !10490
  %8 = lshr i32 %1, %7, !dbg !10491
  ret i32 %8, !dbg !10492
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !10493 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !10494
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10495
  %3 = lshr i32 %2, 11, !dbg !10496
  %4 = and i32 %3, 7, !dbg !10496
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10497
  %6 = load i8, i8* %5, align 1, !dbg !10497
  %7 = zext i8 %6 to i32, !dbg !10497
  %8 = lshr i32 %1, %7, !dbg !10498
  ret i32 %8, !dbg !10499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10504, metadata !DIExpression()), !dbg !10505
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10506
  store i32 31, i32* %2, align 4, !dbg !10507
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10508
  %4 = and i32 %3, 262144, !dbg !10510
  %5 = icmp eq i32 %4, 0, !dbg !10511
  br i1 %5, label %8, label %6, !dbg !10512

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10513
  store i32 5, i32* %7, align 4, !dbg !10515
  br label %15, !dbg !10516

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10517
  %10 = and i32 %9, 65536, !dbg !10519
  %11 = icmp eq i32 %10, 0, !dbg !10520
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10521
  br i1 %11, label %14, label %13, !dbg !10522

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !10523
  br label %15, !dbg !10525

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10526
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10528
  %17 = and i32 %16, 1, !dbg !10530
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10531
  store i32 %17, i32* %18, align 4, !dbg !10533
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10534
  %20 = lshr i32 %19, 8, !dbg !10535
  %21 = and i32 %20, 31, !dbg !10535
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10536
  store i32 %21, i32* %22, align 4, !dbg !10537
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10538
  %24 = lshr i32 %23, 8, !dbg !10540
  %25 = and i32 %24, 1, !dbg !10540
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10541
  store i32 %25, i32* %26, align 4, !dbg !10543
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10544
  %28 = lshr i32 %27, 24, !dbg !10545
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10546
  store i32 %28, i32* %29, align 4, !dbg !10547
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10548
  %31 = and i32 %30, 57344, !dbg !10549
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10550
  store i32 %31, i32* %32, align 4, !dbg !10551
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10552
  %34 = and i32 %33, 1024, !dbg !10554
  %35 = icmp eq i32 %34, 0, !dbg !10555
  br i1 %35, label %38, label %36, !dbg !10556

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10557
  store i32 5, i32* %37, align 4, !dbg !10559
  br label %45, !dbg !10560

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10561
  %40 = and i32 %39, 256, !dbg !10563
  %41 = icmp eq i32 %40, 0, !dbg !10564
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10565
  br i1 %41, label %44, label %43, !dbg !10566

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !10567
  br label %45, !dbg !10569

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !10570
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10572
  %47 = and i32 %46, 1, !dbg !10574
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10575
  store i32 %47, i32* %48, align 4, !dbg !10577
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10578
  %50 = and i32 %49, 16777216, !dbg !10580
  %51 = icmp eq i32 %50, 0, !dbg !10581
  %52 = select i1 %51, i32 1, i32 2, !dbg !10582
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !10583
  store i32 %52, i32* %53, align 4, !dbg !10585
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10586
  %55 = and i32 %54, 65536, !dbg !10587
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !10588
  store i32 %55, i32* %56, align 4, !dbg !10589
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10590
  %58 = and i32 %57, 3932160, !dbg !10591
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !10592
  store i32 %58, i32* %59, align 4, !dbg !10593
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10594
  %61 = and i32 %60, 12582912, !dbg !10595
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !10596
  store i32 %61, i32* %62, align 4, !dbg !10597
  ret void, !dbg !10598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10603, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32* %1, metadata !10604, metadata !DIExpression()), !dbg !10605
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10606
  store i32 15, i32* %3, align 4, !dbg !10607
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10608
  %5 = and i32 %4, 3, !dbg !10609
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10610
  store i32 %5, i32* %6, align 4, !dbg !10611
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10612
  %8 = and i32 %7, 240, !dbg !10613
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10614
  store i32 %8, i32* %9, align 4, !dbg !10615
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10616
  %11 = and i32 %10, 1792, !dbg !10617
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10618
  store i32 %11, i32* %12, align 4, !dbg !10619
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10620
  %14 = lshr i32 %13, 3, !dbg !10621
  %15 = and i32 %14, 1792, !dbg !10621
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10622
  store i32 %15, i32* %16, align 4, !dbg !10623
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10624
  %18 = and i32 %17, 1, !dbg !10624
  store i32 %18, i32* %1, align 4, !dbg !10625
  ret void, !dbg !10626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !10627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10628
  %2 = and i32 %1, 128, !dbg !10628
  %3 = icmp eq i32 %2, 0, !dbg !10628
  br i1 %3, label %5, label %4, !dbg !10630

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !10631
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !10633
  br label %5, !dbg !10634

5:                                                ; preds = %4, %0
  ret void, !dbg !10635
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !10636 {
  ret void, !dbg !10637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASH_Program(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10642, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 %1, metadata !10643, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 %2, metadata !10644, metadata !DIExpression()), !dbg !10646
  call void @llvm.dbg.value(metadata i32 1, metadata !10645, metadata !DIExpression()), !dbg !10646
  %4 = load i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10647
  %5 = icmp eq i32 %4, 1, !dbg !10647
  br i1 %5, label %14, label %6, !dbg !10650

6:                                                ; preds = %3
  store i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10651
  %7 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #24, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %7, metadata !10645, metadata !DIExpression()), !dbg !10646
  %8 = icmp eq i32 %7, 0, !dbg !10654
  br i1 %8, label %9, label %12, !dbg !10656

9:                                                ; preds = %6
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10657
  %10 = inttoptr i32 %1 to i32*, !dbg !10659
  store volatile i32 %2, i32* %10, align 4, !dbg !10660
  %11 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #24, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %11, metadata !10645, metadata !DIExpression()), !dbg !10646
  br label %12, !dbg !10662

12:                                               ; preds = %6, %9
  %13 = phi i32 [ %11, %9 ], [ %7, %6 ], !dbg !10646
  call void @llvm.dbg.value(metadata i32 %13, metadata !10645, metadata !DIExpression()), !dbg !10646
  store i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10663
  br label %14, !dbg !10665

14:                                               ; preds = %3, %12
  %15 = phi i32 [ %13, %12 ], [ 2, %3 ], !dbg !10646
  ret i32 %15, !dbg !10666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @FLASH_WaitForLastOperation(i32 noundef %0) local_unnamed_addr #1 !dbg !10667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10669, metadata !DIExpression()), !dbg !10671
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %2, metadata !10670, metadata !DIExpression()), !dbg !10671
  %3 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10673
  %4 = and i32 %3, 1, !dbg !10673
  %5 = icmp eq i32 %4, 0, !dbg !10673
  br i1 %5, label %18, label %6, !dbg !10674

6:                                                ; preds = %1
  switch i32 %0, label %8 [
    i32 0, label %44
    i32 -1, label %12
  ]

7:                                                ; preds = %14
  br i1 %13, label %14, label %8, !dbg !10675

8:                                                ; preds = %7, %6
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !10677
  %10 = sub i32 %9, %2, !dbg !10681
  %11 = icmp ugt i32 %10, %0, !dbg !10682
  br i1 %11, label %44, label %12, !dbg !10683

12:                                               ; preds = %8, %6
  %13 = icmp eq i32 %0, -1
  br label %14, !dbg !10674

14:                                               ; preds = %12, %7
  %15 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10673
  %16 = and i32 %15, 1, !dbg !10673
  %17 = icmp eq i32 %16, 0, !dbg !10673
  br i1 %17, label %18, label %7, !dbg !10674, !llvm.loop !10684

18:                                               ; preds = %14, %1
  %19 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10686
  %20 = and i32 %19, 2, !dbg !10686
  %21 = icmp eq i32 %20, 0, !dbg !10686
  br i1 %21, label %23, label %22, !dbg !10688

22:                                               ; preds = %18
  store volatile i32 2, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10689
  br label %23, !dbg !10691

23:                                               ; preds = %22, %18
  %24 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10692
  %25 = and i32 %24, 256, !dbg !10692
  %26 = icmp eq i32 %25, 0, !dbg !10692
  br i1 %26, label %27, label %43, !dbg !10694

27:                                               ; preds = %23
  %28 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10695
  %29 = and i32 %28, 2048, !dbg !10695
  %30 = icmp eq i32 %29, 0, !dbg !10695
  br i1 %30, label %31, label %43, !dbg !10696

31:                                               ; preds = %27
  %32 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10697
  %33 = and i32 %32, 8192, !dbg !10697
  %34 = icmp eq i32 %33, 0, !dbg !10697
  br i1 %34, label %35, label %43, !dbg !10698

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10699
  %37 = and i32 %36, 1024, !dbg !10699
  %38 = icmp eq i32 %37, 0, !dbg !10699
  br i1 %38, label %39, label %43, !dbg !10700

39:                                               ; preds = %35
  %40 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10701
  %41 = and i32 %40, 512, !dbg !10701
  %42 = icmp eq i32 %41, 0, !dbg !10701
  br i1 %42, label %44, label %43, !dbg !10702

43:                                               ; preds = %39, %35, %31, %27, %23
  tail call fastcc void @FLASH_SetErrorCode() #24, !dbg !10703
  br label %44, !dbg !10705

44:                                               ; preds = %6, %8, %39, %43
  %45 = phi i32 [ 1, %43 ], [ 0, %39 ], [ 3, %8 ], [ 3, %6 ], !dbg !10671
  ret i32 %45, !dbg !10706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @FLASH_SetErrorCode() unnamed_addr #14 !dbg !10707 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10709, metadata !DIExpression()), !dbg !10710
  %1 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10711
  %2 = and i32 %1, 256, !dbg !10711
  %3 = icmp eq i32 %2, 0, !dbg !10711
  br i1 %3, label %7, label %4, !dbg !10713

4:                                                ; preds = %0
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10714
  %6 = or i32 %5, 2, !dbg !10714
  store volatile i32 %6, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10714
  call void @llvm.dbg.value(metadata i32 256, metadata !10709, metadata !DIExpression()), !dbg !10710
  br label %7, !dbg !10716

7:                                                ; preds = %4, %0
  %8 = phi i32 [ 256, %4 ], [ 0, %0 ], !dbg !10710
  call void @llvm.dbg.value(metadata i32 %8, metadata !10709, metadata !DIExpression()), !dbg !10710
  %9 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10717
  %10 = and i32 %9, 512, !dbg !10717
  %11 = icmp eq i32 %10, 0, !dbg !10717
  br i1 %11, label %16, label %12, !dbg !10719

12:                                               ; preds = %7
  %13 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10720
  %14 = or i32 %13, 1, !dbg !10720
  store volatile i32 %14, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10720
  %15 = or i32 %8, 512, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %15, metadata !10709, metadata !DIExpression()), !dbg !10710
  br label %16, !dbg !10723

16:                                               ; preds = %12, %7
  %17 = phi i32 [ %15, %12 ], [ %8, %7 ], !dbg !10710
  call void @llvm.dbg.value(metadata i32 %17, metadata !10709, metadata !DIExpression()), !dbg !10710
  %18 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10724
  %19 = and i32 %18, 2048, !dbg !10724
  %20 = icmp eq i32 %19, 0, !dbg !10724
  br i1 %20, label %25, label %21, !dbg !10726

21:                                               ; preds = %16
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10727
  %23 = or i32 %22, 4, !dbg !10727
  store volatile i32 %23, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10727
  %24 = or i32 %17, 2048, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %24, metadata !10709, metadata !DIExpression()), !dbg !10710
  br label %25, !dbg !10730

25:                                               ; preds = %21, %16
  %26 = phi i32 [ %24, %21 ], [ %17, %16 ], !dbg !10710
  call void @llvm.dbg.value(metadata i32 %26, metadata !10709, metadata !DIExpression()), !dbg !10710
  %27 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10731
  %28 = and i32 %27, 8192, !dbg !10731
  %29 = icmp eq i32 %28, 0, !dbg !10731
  br i1 %29, label %34, label %30, !dbg !10733

30:                                               ; preds = %25
  %31 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10734
  %32 = or i32 %31, 16, !dbg !10734
  store volatile i32 %32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10734
  %33 = or i32 %26, 8192, !dbg !10736
  call void @llvm.dbg.value(metadata i32 %33, metadata !10709, metadata !DIExpression()), !dbg !10710
  br label %34, !dbg !10737

34:                                               ; preds = %30, %25
  %35 = phi i32 [ %33, %30 ], [ %26, %25 ], !dbg !10710
  call void @llvm.dbg.value(metadata i32 %35, metadata !10709, metadata !DIExpression()), !dbg !10710
  %36 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10738
  %37 = and i32 %36, 1024, !dbg !10738
  %38 = icmp eq i32 %37, 0, !dbg !10738
  br i1 %38, label %43, label %39, !dbg !10740

39:                                               ; preds = %34
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10741
  %41 = or i32 %40, 8, !dbg !10741
  store volatile i32 %41, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10741
  %42 = or i32 %35, 1024, !dbg !10743
  call void @llvm.dbg.value(metadata i32 %42, metadata !10709, metadata !DIExpression()), !dbg !10710
  br label %43, !dbg !10744

43:                                               ; preds = %39, %34
  %44 = phi i32 [ %42, %39 ], [ %35, %34 ], !dbg !10710
  call void @llvm.dbg.value(metadata i32 %44, metadata !10709, metadata !DIExpression()), !dbg !10710
  store volatile i32 %44, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10745
  ret void, !dbg !10746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASH_Program_IT(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10749, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata i32 %1, metadata !10750, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata i32 %2, metadata !10751, metadata !DIExpression()), !dbg !10753
  call void @llvm.dbg.value(metadata i32 0, metadata !10752, metadata !DIExpression()), !dbg !10753
  %4 = load i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10754
  %5 = icmp eq i32 %4, 1, !dbg !10754
  br i1 %5, label %12, label %6, !dbg !10757

6:                                                ; preds = %3
  store i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10758
  %7 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10760
  %8 = or i32 %7, 196608, !dbg !10760
  store volatile i32 %8, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10760
  store volatile i32 %1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 2), align 4, !dbg !10761
  store volatile i32 2, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10762
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10763
  %9 = icmp eq i32 %0, 2, !dbg !10764
  br i1 %9, label %10, label %12, !dbg !10766

10:                                               ; preds = %6
  %11 = inttoptr i32 %1 to i32*, !dbg !10767
  store volatile i32 %2, i32* %11, align 4, !dbg !10769
  br label %12, !dbg !10770

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ 2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !10753
  ret i32 %13, !dbg !10771
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_FLASH_IRQHandler() local_unnamed_addr #1 !dbg !10772 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10774, metadata !DIExpression()), !dbg !10775
  %1 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10776
  %2 = and i32 %1, 256, !dbg !10776
  %3 = icmp eq i32 %2, 0, !dbg !10776
  br i1 %3, label %4, label %20, !dbg !10778

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10779
  %6 = and i32 %5, 512, !dbg !10779
  %7 = icmp eq i32 %6, 0, !dbg !10779
  br i1 %7, label %8, label %20, !dbg !10780

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10781
  %10 = and i32 %9, 1024, !dbg !10781
  %11 = icmp eq i32 %10, 0, !dbg !10781
  br i1 %11, label %12, label %20, !dbg !10782

12:                                               ; preds = %8
  %13 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10783
  %14 = and i32 %13, 8192, !dbg !10783
  %15 = icmp eq i32 %14, 0, !dbg !10783
  br i1 %15, label %16, label %20, !dbg !10784

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10785
  %18 = and i32 %17, 2048, !dbg !10785
  %19 = icmp eq i32 %18, 0, !dbg !10785
  br i1 %19, label %29, label %20, !dbg !10786

20:                                               ; preds = %16, %12, %8, %4, %0
  %21 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10787
  %22 = icmp eq i32 %21, 1, !dbg !10790
  br i1 %22, label %23, label %25, !dbg !10791

23:                                               ; preds = %20
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %24, metadata !10774, metadata !DIExpression()), !dbg !10775
  store volatile i32 -1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !10794
  br label %27, !dbg !10795

25:                                               ; preds = %20
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 2), align 4, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %26, metadata !10774, metadata !DIExpression()), !dbg !10775
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i32 [ %24, %23 ], [ %26, %25 ], !dbg !10798
  call void @llvm.dbg.value(metadata i32 %28, metadata !10774, metadata !DIExpression()), !dbg !10775
  tail call fastcc void @FLASH_SetErrorCode() #24, !dbg !10799
  tail call void @HAL_FLASH_OperationErrorCallback(i32 noundef %28) #24, !dbg !10800
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10801
  br label %29, !dbg !10802

29:                                               ; preds = %27, %16
  %30 = load volatile i32, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10803
  %31 = and i32 %30, 2, !dbg !10803
  %32 = icmp eq i32 %31, 0, !dbg !10803
  br i1 %32, label %55, label %33, !dbg !10805

33:                                               ; preds = %29
  store volatile i32 2, i32* inttoptr (i32 1073888280 to i32*), align 8, !dbg !10806
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10808
  %35 = icmp eq i32 %34, 0, !dbg !10810
  br i1 %35, label %55, label %36, !dbg !10811

36:                                               ; preds = %33
  %37 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10812
  %38 = icmp eq i32 %37, 1, !dbg !10815
  br i1 %38, label %39, label %51, !dbg !10816

39:                                               ; preds = %36
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 1), align 4, !dbg !10817
  %41 = add i32 %40, -1, !dbg !10817
  store volatile i32 %41, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 1), align 4, !dbg !10817
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 1), align 4, !dbg !10819
  %43 = icmp eq i32 %42, 0, !dbg !10821
  br i1 %43, label %50, label %44, !dbg !10822

44:                                               ; preds = %39
  %45 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %45, metadata !10774, metadata !DIExpression()), !dbg !10775
  tail call void @HAL_FLASH_EndOfOperationCallback(i32 noundef %45) #24, !dbg !10825
  %46 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !10826
  %47 = add i32 %46, 256, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %47, metadata !10774, metadata !DIExpression()), !dbg !10775
  store volatile i32 %47, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !10828
  %48 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10829
  %49 = and i32 %48, -513, !dbg !10829
  store volatile i32 %49, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10829
  tail call void @FLASH_PageErase(i32 noundef %47) #25, !dbg !10830
  br label %55, !dbg !10831

50:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 -1, metadata !10774, metadata !DIExpression()), !dbg !10775
  store volatile i32 -1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !10832
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10834
  tail call void @HAL_FLASH_EndOfOperationCallback(i32 noundef -1) #24, !dbg !10835
  br label %55

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10836
  %53 = and i32 %52, -9, !dbg !10836
  store volatile i32 %53, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10836
  %54 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 2), align 4, !dbg !10838
  tail call void @HAL_FLASH_EndOfOperationCallback(i32 noundef %54) #24, !dbg !10839
  store volatile i32 -1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 2), align 4, !dbg !10840
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10841
  br label %55

55:                                               ; preds = %33, %44, %50, %51, %29
  %56 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10842
  %57 = icmp eq i32 %56, 0, !dbg !10844
  br i1 %57, label %58, label %63, !dbg !10845

58:                                               ; preds = %55
  %59 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10846
  %60 = and i32 %59, -521, !dbg !10846
  store volatile i32 %60, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10846
  %61 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10848
  %62 = and i32 %61, -196609, !dbg !10848
  store volatile i32 %62, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10848
  store i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10849
  br label %63, !dbg !10851

63:                                               ; preds = %58, %55
  ret void, !dbg !10852
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_FLASH_OperationErrorCallback(i32 noundef %0) local_unnamed_addr #1 !dbg !10853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10855, metadata !DIExpression()), !dbg !10856
  ret void, !dbg !10857
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_FLASH_EndOfOperationCallback(i32 noundef %0) local_unnamed_addr #1 !dbg !10858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10860, metadata !DIExpression()), !dbg !10861
  ret void, !dbg !10862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASH_Unlock() local_unnamed_addr #14 !dbg !10863 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10864
  %2 = and i32 %1, 2, !dbg !10864
  %3 = icmp eq i32 %2, 0, !dbg !10864
  br i1 %3, label %16, label %4, !dbg !10866

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10867
  %6 = and i32 %5, 1, !dbg !10867
  %7 = icmp eq i32 %6, 0, !dbg !10867
  br i1 %7, label %12, label %8, !dbg !10870

8:                                                ; preds = %4
  store volatile i32 -1985229329, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !10871
  store volatile i32 33752069, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !10873
  %9 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10874
  %10 = and i32 %9, 1, !dbg !10874
  %11 = icmp eq i32 %10, 0, !dbg !10874
  br i1 %11, label %12, label %17, !dbg !10876

12:                                               ; preds = %8, %4
  store volatile i32 -1935823169, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !10877
  store volatile i32 320083222, i32* inttoptr (i32 1073888272 to i32*), align 16, !dbg !10878
  %13 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10879
  %14 = and i32 %13, 2, !dbg !10879
  %15 = icmp eq i32 %14, 0, !dbg !10879
  br i1 %15, label %16, label %17, !dbg !10881

16:                                               ; preds = %12, %0
  br label %17, !dbg !10882

17:                                               ; preds = %12, %8, %16
  %18 = phi i32 [ 0, %16 ], [ 1, %8 ], [ 1, %12 ], !dbg !10883
  ret i32 %18, !dbg !10884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASH_Lock() local_unnamed_addr #14 !dbg !10885 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10886
  %2 = or i32 %1, 2, !dbg !10886
  store volatile i32 %2, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10886
  ret i32 0, !dbg !10887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASH_OB_Unlock() local_unnamed_addr #14 !dbg !10888 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10889
  %2 = and i32 %1, 4, !dbg !10889
  %3 = icmp eq i32 %2, 0, !dbg !10889
  br i1 %3, label %16, label %4, !dbg !10891

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10892
  %6 = and i32 %5, 1, !dbg !10892
  %7 = icmp eq i32 %6, 0, !dbg !10892
  br i1 %7, label %12, label %8, !dbg !10895

8:                                                ; preds = %4
  store volatile i32 -1985229329, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !10896
  store volatile i32 33752069, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !10898
  %9 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10899
  %10 = and i32 %9, 1, !dbg !10899
  %11 = icmp eq i32 %10, 0, !dbg !10899
  br i1 %11, label %12, label %17, !dbg !10901

12:                                               ; preds = %8, %4
  store volatile i32 -68494904, i32* inttoptr (i32 1073888276 to i32*), align 4, !dbg !10902
  store volatile i32 606414375, i32* inttoptr (i32 1073888276 to i32*), align 4, !dbg !10903
  %13 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10904
  %14 = and i32 %13, 4, !dbg !10904
  %15 = icmp eq i32 %14, 0, !dbg !10904
  br i1 %15, label %16, label %17, !dbg !10906

16:                                               ; preds = %12, %0
  br label %17, !dbg !10907

17:                                               ; preds = %12, %8, %16
  %18 = phi i32 [ 0, %16 ], [ 1, %8 ], [ 1, %12 ], !dbg !10908
  ret i32 %18, !dbg !10909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASH_OB_Lock() local_unnamed_addr #14 !dbg !10910 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10911
  %2 = or i32 %1, 4, !dbg !10911
  store volatile i32 %2, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10911
  ret i32 0, !dbg !10912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASH_OB_Launch() local_unnamed_addr #1 !dbg !10913 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10914
  %2 = or i32 %1, 262144, !dbg !10914
  store volatile i32 %2, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10914
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #24, !dbg !10915
  ret i32 %3, !dbg !10916
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_FLASH_GetError() local_unnamed_addr #15 !dbg !10917 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10918
  ret i32 %1, !dbg !10919
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_Erase(%struct._thread_stack_info* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #1 !dbg !10920 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10933, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i32* %1, metadata !10934, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i32 1, metadata !10935, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i32 0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %3 = load i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10938
  %4 = icmp eq i32 %3, 1, !dbg !10938
  br i1 %4, label %34, label %5, !dbg !10941

5:                                                ; preds = %2
  store i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10942
  %6 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %6, metadata !10935, metadata !DIExpression()), !dbg !10937
  %7 = icmp eq i32 %6, 0, !dbg !10945
  br i1 %7, label %8, label %32, !dbg !10947

8:                                                ; preds = %5
  store i32 -1, i32* %1, align 4, !dbg !10948
  %9 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10950
  %10 = load i32, i32* %9, align 4, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %10, metadata !10936, metadata !DIExpression()), !dbg !10937
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata i32 %10, metadata !10936, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i32 0, metadata !10935, metadata !DIExpression()), !dbg !10937
  %12 = load i32, i32* %11, align 4, !dbg !10952
  %13 = shl i32 %12, 8, !dbg !10954
  %14 = add i32 %13, %10, !dbg !10955
  %15 = icmp ult i32 %10, %14, !dbg !10956
  br i1 %15, label %16, label %32, !dbg !10957

16:                                               ; preds = %8, %25
  %17 = phi i32 [ %26, %25 ], [ %10, %8 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10936, metadata !DIExpression()), !dbg !10937
  tail call void @FLASH_PageErase(i32 noundef %17) #24, !dbg !10958
  %18 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %18, metadata !10935, metadata !DIExpression()), !dbg !10937
  %19 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10961
  %20 = and i32 %19, -9, !dbg !10961
  store volatile i32 %20, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10961
  %21 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10962
  %22 = and i32 %21, -513, !dbg !10962
  store volatile i32 %22, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10962
  %23 = icmp eq i32 %18, 0, !dbg !10963
  br i1 %23, label %25, label %24, !dbg !10965

24:                                               ; preds = %16
  store i32 %17, i32* %1, align 4, !dbg !10966
  br label %32, !dbg !10968

25:                                               ; preds = %16
  %26 = add i32 %17, 256, !dbg !10969
  call void @llvm.dbg.value(metadata i32 %26, metadata !10936, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i32 0, metadata !10935, metadata !DIExpression()), !dbg !10937
  %27 = load i32, i32* %11, align 4, !dbg !10952
  %28 = shl i32 %27, 8, !dbg !10954
  %29 = load i32, i32* %9, align 4, !dbg !10970
  %30 = add i32 %28, %29, !dbg !10955
  %31 = icmp ult i32 %26, %30, !dbg !10956
  br i1 %31, label %16, label %32, !dbg !10957, !llvm.loop !10971

32:                                               ; preds = %25, %8, %5, %24
  %33 = phi i32 [ %18, %24 ], [ %6, %5 ], [ 0, %8 ], [ 0, %25 ], !dbg !10937
  call void @llvm.dbg.value(metadata i32 %33, metadata !10935, metadata !DIExpression()), !dbg !10937
  store i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10973
  br label %34, !dbg !10975

34:                                               ; preds = %2, %32
  %35 = phi i32 [ %33, %32 ], [ 2, %2 ], !dbg !10937
  ret i32 %35, !dbg !10976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @FLASH_PageErase(i32 noundef %0) local_unnamed_addr #14 !dbg !10977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10979, metadata !DIExpression()), !dbg !10980
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !10981
  %2 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10982
  %3 = or i32 %2, 512, !dbg !10982
  store volatile i32 %3, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10982
  %4 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10983
  %5 = or i32 %4, 8, !dbg !10983
  store volatile i32 %5, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !10983
  %6 = and i32 %0, -256, !dbg !10984
  %7 = inttoptr i32 %6 to i32*, !dbg !10985
  store volatile i32 0, i32* %7, align 256, !dbg !10986
  ret void, !dbg !10987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_Erase_IT(%struct._thread_stack_info* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !10988 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10992, metadata !DIExpression()), !dbg !10994
  call void @llvm.dbg.value(metadata i32 1, metadata !10993, metadata !DIExpression()), !dbg !10994
  %2 = load volatile i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !10995
  %3 = icmp eq i32 %2, 0, !dbg !10997
  br i1 %3, label %4, label %19, !dbg !10998

4:                                                ; preds = %1
  %5 = load i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !10999
  %6 = icmp eq i32 %5, 1, !dbg !10999
  br i1 %6, label %19, label %7, !dbg !11002

7:                                                ; preds = %4
  store i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11003
  %8 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %8, metadata !10993, metadata !DIExpression()), !dbg !10994
  %9 = icmp eq i32 %8, 0, !dbg !11006
  br i1 %9, label %10, label %18, !dbg !11008

10:                                               ; preds = %7
  %11 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11009
  %12 = or i32 %11, 196608, !dbg !11009
  store volatile i32 %12, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11009
  store volatile i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 0), align 4, !dbg !11011
  %13 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11012
  %14 = load i32, i32* %13, align 4, !dbg !11012
  store volatile i32 %14, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 1), align 4, !dbg !11013
  %15 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11014
  %16 = load i32, i32* %15, align 4, !dbg !11014
  store volatile i32 %16, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 3), align 4, !dbg !11015
  %17 = load i32, i32* %15, align 4, !dbg !11016
  tail call void @FLASH_PageErase(i32 noundef %17) #24, !dbg !11017
  br label %19, !dbg !11018

18:                                               ; preds = %7
  store i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11019
  br label %19

19:                                               ; preds = %10, %18, %4, %1
  %20 = phi i32 [ 1, %1 ], [ 2, %4 ], [ %8, %18 ], [ 0, %10 ], !dbg !10994
  ret i32 %20, !dbg !11022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_OBProgram(%struct.FLASH_OBProgramInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11023 {
  call void @llvm.dbg.value(metadata %struct.FLASH_OBProgramInitTypeDef* %0, metadata !11037, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.value(metadata i32 1, metadata !11038, metadata !DIExpression()), !dbg !11039
  %2 = load i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11040
  %3 = icmp eq i32 %2, 1, !dbg !11040
  br i1 %3, label %59, label %4, !dbg !11043

4:                                                ; preds = %1
  store i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11044
  %5 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 0, !dbg !11046
  %6 = load i32, i32* %5, align 4, !dbg !11046
  %7 = and i32 %6, 1, !dbg !11048
  %8 = icmp eq i32 %7, 0, !dbg !11049
  br i1 %8, label %18, label %9, !dbg !11050

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 1, !dbg !11051
  %11 = load i32, i32* %10, align 4, !dbg !11051
  %12 = icmp eq i32 %11, 1, !dbg !11054
  %13 = zext i1 %12 to i32
  %14 = tail call fastcc i32 @FLASH_OB_WRPConfig(%struct.FLASH_OBProgramInitTypeDef* noundef nonnull %0, i32 noundef %13) #24, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %14, metadata !11038, metadata !DIExpression()), !dbg !11039
  %15 = icmp eq i32 %14, 0, !dbg !11056
  br i1 %15, label %16, label %57, !dbg !11058

16:                                               ; preds = %9
  %17 = load i32, i32* %5, align 4, !dbg !11059
  br label %18, !dbg !11058

18:                                               ; preds = %16, %4
  %19 = phi i32 [ %17, %16 ], [ %6, %4 ], !dbg !11059
  %20 = phi i32 [ 0, %16 ], [ 1, %4 ], !dbg !11039
  call void @llvm.dbg.value(metadata i32 %20, metadata !11038, metadata !DIExpression()), !dbg !11039
  %21 = and i32 %19, 2, !dbg !11061
  %22 = icmp eq i32 %21, 0, !dbg !11062
  br i1 %22, label %30, label %23, !dbg !11063

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 3, !dbg !11064
  %25 = load i8, i8* %24, align 4, !dbg !11064
  %26 = tail call fastcc i32 @FLASH_OB_RDPConfig(i8 noundef zeroext %25) #24, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %26, metadata !11038, metadata !DIExpression()), !dbg !11039
  %27 = icmp eq i32 %26, 0, !dbg !11067
  br i1 %27, label %28, label %57, !dbg !11069

28:                                               ; preds = %23
  %29 = load i32, i32* %5, align 4, !dbg !11070
  br label %30, !dbg !11069

30:                                               ; preds = %28, %18
  %31 = phi i32 [ %29, %28 ], [ %19, %18 ], !dbg !11070
  %32 = phi i32 [ 0, %28 ], [ %20, %18 ], !dbg !11039
  call void @llvm.dbg.value(metadata i32 %32, metadata !11038, metadata !DIExpression()), !dbg !11039
  %33 = and i32 %31, 4, !dbg !11072
  %34 = icmp eq i32 %33, 0, !dbg !11073
  br i1 %34, label %45, label %35, !dbg !11074

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 5, !dbg !11075
  %37 = load i8, i8* %36, align 2, !dbg !11075
  %38 = and i8 %37, 16, !dbg !11077
  %39 = and i8 %37, 32, !dbg !11078
  %40 = and i8 %37, 64, !dbg !11079
  %41 = tail call fastcc i32 @FLASH_OB_UserConfig(i8 noundef zeroext %38, i8 noundef zeroext %39, i8 noundef zeroext %40) #24, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %41, metadata !11038, metadata !DIExpression()), !dbg !11039
  %42 = icmp eq i32 %41, 0, !dbg !11081
  br i1 %42, label %43, label %57, !dbg !11083

43:                                               ; preds = %35
  %44 = load i32, i32* %5, align 4, !dbg !11084
  br label %45, !dbg !11083

45:                                               ; preds = %43, %30
  %46 = phi i32 [ %44, %43 ], [ %31, %30 ], !dbg !11084
  %47 = phi i32 [ 0, %43 ], [ %32, %30 ], !dbg !11039
  call void @llvm.dbg.value(metadata i32 %47, metadata !11038, metadata !DIExpression()), !dbg !11039
  %48 = and i32 %46, 8, !dbg !11086
  %49 = icmp eq i32 %48, 0, !dbg !11087
  br i1 %49, label %55, label %50, !dbg !11088

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 4, !dbg !11089
  %52 = load i8, i8* %51, align 1, !dbg !11089
  %53 = tail call fastcc i32 @FLASH_OB_BORConfig(i8 noundef zeroext %52) #24, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %53, metadata !11038, metadata !DIExpression()), !dbg !11039
  %54 = icmp eq i32 %53, 0, !dbg !11092
  br i1 %54, label %55, label %57, !dbg !11094

55:                                               ; preds = %45, %50
  %56 = phi i32 [ 0, %50 ], [ %47, %45 ], !dbg !11039
  call void @llvm.dbg.value(metadata i32 %56, metadata !11038, metadata !DIExpression()), !dbg !11039
  br label %57, !dbg !11095

57:                                               ; preds = %50, %35, %23, %9, %55
  %58 = phi i32 [ %56, %55 ], [ %14, %9 ], [ %26, %23 ], [ %41, %35 ], [ %53, %50 ]
  store i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11039
  br label %59, !dbg !11096

59:                                               ; preds = %57, %1
  %60 = phi i32 [ 2, %1 ], [ %58, %57 ], !dbg !11039
  ret i32 %60, !dbg !11096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_OB_WRPConfig(%struct.FLASH_OBProgramInitTypeDef* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.FLASH_OBProgramInitTypeDef* %0, metadata !11102, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 %1, metadata !11103, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 0, metadata !11104, metadata !DIExpression()), !dbg !11105
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11106
  call void @llvm.dbg.value(metadata i32 %3, metadata !11104, metadata !DIExpression()), !dbg !11105
  %4 = icmp eq i32 %3, 0, !dbg !11107
  br i1 %4, label %5, label %12, !dbg !11109

5:                                                ; preds = %2
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11110
  %6 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 2, !dbg !11112
  %7 = load i32, i32* %6, align 4, !dbg !11112
  %8 = icmp eq i32 %7, 0, !dbg !11114
  br i1 %8, label %10, label %9, !dbg !11115

9:                                                ; preds = %5
  tail call fastcc void @FLASH_OB_WRPConfigWRP1OrPCROP1(i32 noundef %7, i32 noundef %1) #24, !dbg !11116
  br label %10, !dbg !11118

10:                                               ; preds = %9, %5
  %11 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %11, metadata !11104, metadata !DIExpression()), !dbg !11105
  br label %12, !dbg !11120

12:                                               ; preds = %10, %2
  %13 = phi i32 [ %11, %10 ], [ %3, %2 ], !dbg !11105
  call void @llvm.dbg.value(metadata i32 %13, metadata !11104, metadata !DIExpression()), !dbg !11105
  ret i32 %13, !dbg !11121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_OB_RDPConfig(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11122 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11126, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata i32 0, metadata !11127, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata i32 0, metadata !11128, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata i32 0, metadata !11129, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata i32 0, metadata !11130, metadata !DIExpression()), !dbg !11131
  %2 = load volatile i32, i32* inttoptr (i32 536346624 to i32*), align 524288, !dbg !11132
  %3 = and i32 %2, 255, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %3, metadata !11128, metadata !DIExpression()), !dbg !11131
  %4 = icmp eq i32 %3, 170, !dbg !11134
  %5 = icmp eq i8 %0, -86
  %6 = and i1 %5, %4, !dbg !11136
  br i1 %6, label %19, label %7, !dbg !11136

7:                                                ; preds = %1
  %8 = zext i8 %0 to i32
  %9 = load volatile i32, i32* inttoptr (i32 536346624 to i32*), align 524288, !dbg !11137
  %10 = and i32 %9, 256, !dbg !11139
  call void @llvm.dbg.value(metadata i32 %10, metadata !11130, metadata !DIExpression()), !dbg !11131
  %11 = or i32 %10, %8, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %11, metadata !11128, metadata !DIExpression(DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_stack_value)), !dbg !11131
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %11), metadata !11129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11131
  %12 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %12, metadata !11127, metadata !DIExpression()), !dbg !11131
  %13 = icmp eq i32 %12, 0, !dbg !11142
  br i1 %13, label %14, label %19, !dbg !11144

14:                                               ; preds = %7
  %15 = xor i32 %11, -1, !dbg !11145
  call void @llvm.dbg.value(metadata i32 %15, metadata !11128, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata !DIArgList(i32 %15, i32 %11), metadata !11129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11131
  %16 = shl nsw i32 %15, 16, !dbg !11146
  call void @llvm.dbg.value(metadata !DIArgList(i32 %16, i32 %11), metadata !11129, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11131
  %17 = or i32 %16, %11, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %17, metadata !11129, metadata !DIExpression()), !dbg !11131
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11148
  store volatile i32 %17, i32* inttoptr (i32 536346624 to i32*), align 524288, !dbg !11150
  %18 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %18, metadata !11127, metadata !DIExpression()), !dbg !11131
  br label %19, !dbg !11152

19:                                               ; preds = %1, %7, %14
  %20 = phi i32 [ %18, %14 ], [ %12, %7 ], [ 1, %1 ], !dbg !11153
  call void @llvm.dbg.value(metadata i32 %20, metadata !11127, metadata !DIExpression()), !dbg !11131
  ret i32 %20, !dbg !11154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_OB_UserConfig(i8 noundef zeroext %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !11155 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11159, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i8 %1, metadata !11160, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i8 %2, metadata !11161, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i32 0, metadata !11162, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i32 0, metadata !11163, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i32 0, metadata !11164, metadata !DIExpression()), !dbg !11165
  %4 = load volatile i32, i32* inttoptr (i32 536346628 to i32*), align 4, !dbg !11166
  %5 = and i32 %4, 65423, !dbg !11167
  call void @llvm.dbg.value(metadata i32 %5, metadata !11164, metadata !DIExpression()), !dbg !11165
  %6 = or i8 %1, %0, !dbg !11168
  %7 = or i8 %6, %2, !dbg !11169
  %8 = zext i8 %7 to i32, !dbg !11169
  %9 = or i32 %5, %8, !dbg !11170
  call void @llvm.dbg.value(metadata i32 %9, metadata !11163, metadata !DIExpression(DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_stack_value)), !dbg !11165
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %9), metadata !11163, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11165
  %10 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %10, metadata !11162, metadata !DIExpression()), !dbg !11165
  %11 = icmp eq i32 %10, 0, !dbg !11172
  br i1 %11, label %12, label %17, !dbg !11174

12:                                               ; preds = %3
  %13 = xor i32 %9, -1, !dbg !11175
  call void @llvm.dbg.value(metadata !DIArgList(i32 %13, i32 %9), metadata !11163, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11165
  %14 = shl i32 %13, 16, !dbg !11176
  call void @llvm.dbg.value(metadata !DIArgList(i32 %14, i32 %9), metadata !11163, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11165
  %15 = or i32 %14, %9, !dbg !11177
  call void @llvm.dbg.value(metadata i32 %15, metadata !11163, metadata !DIExpression()), !dbg !11165
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11178
  store volatile i32 %15, i32* inttoptr (i32 536346628 to i32*), align 4, !dbg !11180
  %16 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11181
  call void @llvm.dbg.value(metadata i32 %16, metadata !11162, metadata !DIExpression()), !dbg !11165
  br label %17, !dbg !11182

17:                                               ; preds = %12, %3
  %18 = phi i32 [ %16, %12 ], [ %10, %3 ], !dbg !11165
  call void @llvm.dbg.value(metadata i32 %18, metadata !11162, metadata !DIExpression()), !dbg !11165
  ret i32 %18, !dbg !11183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_OB_BORConfig(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11184 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11186, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.value(metadata i32 0, metadata !11188, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.value(metadata i32 0, metadata !11189, metadata !DIExpression()), !dbg !11190
  %2 = load volatile i32, i32* inttoptr (i32 536346628 to i32*), align 4, !dbg !11191
  %3 = and i32 %2, 65520, !dbg !11192
  call void @llvm.dbg.value(metadata i32 %3, metadata !11189, metadata !DIExpression()), !dbg !11190
  %4 = zext i8 %0 to i32, !dbg !11193
  %5 = or i32 %3, %4, !dbg !11194
  call void @llvm.dbg.value(metadata i32 %5, metadata !11188, metadata !DIExpression(DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_stack_value)), !dbg !11190
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %5), metadata !11188, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11190
  %6 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %6, metadata !11187, metadata !DIExpression()), !dbg !11190
  %7 = icmp eq i32 %6, 0, !dbg !11196
  br i1 %7, label %8, label %13, !dbg !11198

8:                                                ; preds = %1
  %9 = xor i32 %5, -1, !dbg !11199
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %5), metadata !11188, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11190
  %10 = shl i32 %9, 16, !dbg !11200
  call void @llvm.dbg.value(metadata !DIArgList(i32 %10, i32 %5), metadata !11188, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11190
  %11 = or i32 %10, %5, !dbg !11201
  call void @llvm.dbg.value(metadata i32 %11, metadata !11188, metadata !DIExpression()), !dbg !11190
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11202
  store volatile i32 %11, i32* inttoptr (i32 536346628 to i32*), align 4, !dbg !11204
  %12 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %12, metadata !11187, metadata !DIExpression()), !dbg !11190
  br label %13, !dbg !11206

13:                                               ; preds = %8, %1
  %14 = phi i32 [ %12, %8 ], [ %6, %1 ], !dbg !11190
  call void @llvm.dbg.value(metadata i32 %14, metadata !11187, metadata !DIExpression()), !dbg !11190
  ret i32 %14, !dbg !11207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @FLASH_OB_WRPConfigWRP1OrPCROP1(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11212, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 %1, metadata !11213, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 0, metadata !11214, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 0, metadata !11215, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 0, metadata !11216, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 0, metadata !11217, metadata !DIExpression()), !dbg !11218
  %3 = icmp eq i32 %1, 0, !dbg !11219
  br i1 %3, label %11, label %4, !dbg !11221

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 536346632 to i32*), align 8, !dbg !11222
  %6 = or i32 %5, %0, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %6, metadata !11214, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !11218
  %7 = lshr i32 %0, 16, !dbg !11225
  %8 = load volatile i32, i32* inttoptr (i32 536346636 to i32*), align 4, !dbg !11226
  %9 = and i32 %8, 65535, !dbg !11227
  %10 = or i32 %9, %7, !dbg !11227
  call void @llvm.dbg.value(metadata i32 %10, metadata !11215, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 undef, metadata !11216, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 undef, metadata !11217, metadata !DIExpression()), !dbg !11218
  br label %18, !dbg !11228

11:                                               ; preds = %2
  %12 = xor i32 %0, -1, !dbg !11229
  %13 = load volatile i32, i32* inttoptr (i32 536346632 to i32*), align 8, !dbg !11231
  %14 = and i32 %13, %12, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %14, metadata !11214, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !11218
  %15 = lshr i32 %12, 16, !dbg !11233
  %16 = load volatile i32, i32* inttoptr (i32 536346636 to i32*), align 4, !dbg !11234
  %17 = and i32 %16, %15, !dbg !11235
  call void @llvm.dbg.value(metadata i32 %17, metadata !11215, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 %24, metadata !11216, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 %27, metadata !11217, metadata !DIExpression()), !dbg !11218
  br label %18

18:                                               ; preds = %11, %4
  %19 = phi i32 [ %14, %11 ], [ %6, %4 ]
  %20 = phi i32 [ %17, %11 ], [ %10, %4 ]
  %21 = and i32 %19, 65535, !dbg !11236
  %22 = xor i32 %19, -1, !dbg !11236
  %23 = shl i32 %22, 16, !dbg !11236
  %24 = or i32 %23, %21, !dbg !11236
  store volatile i32 %24, i32* inttoptr (i32 536346632 to i32*), align 8, !dbg !11236
  %25 = xor i32 %20, -1, !dbg !11236
  %26 = shl i32 %25, 16, !dbg !11236
  %27 = or i32 %26, %20, !dbg !11236
  store volatile i32 %27, i32* inttoptr (i32 536346636 to i32*), align 4, !dbg !11236
  ret void, !dbg !11237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_FLASHEx_OBGetConfig(%struct.FLASH_OBProgramInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !11238 {
  call void @llvm.dbg.value(metadata %struct.FLASH_OBProgramInitTypeDef* %0, metadata !11242, metadata !DIExpression()), !dbg !11243
  %2 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 0, !dbg !11244
  store i32 15, i32* %2, align 4, !dbg !11245
  %3 = load volatile i32, i32* inttoptr (i32 1073888288 to i32*), align 32, !dbg !11246
  %4 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 2, !dbg !11247
  store i32 %3, i32* %4, align 4, !dbg !11248
  %5 = tail call fastcc zeroext i8 @FLASH_OB_GetRDP() #24, !dbg !11249
  %6 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 3, !dbg !11250
  store i8 %5, i8* %6, align 4, !dbg !11251
  %7 = tail call fastcc zeroext i8 @FLASH_OB_GetUser() #24, !dbg !11252
  %8 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 5, !dbg !11253
  store i8 %7, i8* %8, align 2, !dbg !11254
  %9 = tail call fastcc zeroext i8 @FLASH_OB_GetBOR() #24, !dbg !11255
  %10 = getelementptr inbounds %struct.FLASH_OBProgramInitTypeDef, %struct.FLASH_OBProgramInitTypeDef* %0, i32 0, i32 4, !dbg !11256
  store i8 %9, i8* %10, align 1, !dbg !11257
  ret void, !dbg !11258
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @FLASH_OB_GetRDP() unnamed_addr #15 !dbg !11259 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888284 to i32*), align 4, !dbg !11264
  call void @llvm.dbg.value(metadata i32 %1, metadata !11263, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11265
  %2 = trunc i32 %1 to i8, !dbg !11266
  %3 = icmp eq i8 %2, -86, !dbg !11266
  %4 = select i1 %3, i8 -86, i8 -69, !dbg !11266
  %5 = icmp eq i8 %2, -52, !dbg !11266
  %6 = select i1 %5, i8 -52, i8 %4, !dbg !11266
  ret i8 %6, !dbg !11268
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @FLASH_OB_GetUser() unnamed_addr #15 !dbg !11269 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888284 to i32*), align 4, !dbg !11270
  %2 = lshr i32 %1, 16, !dbg !11271
  %3 = trunc i32 %2 to i8, !dbg !11272
  %4 = and i8 %3, 112, !dbg !11272
  ret i8 %4, !dbg !11273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @FLASH_OB_GetBOR() unnamed_addr #15 !dbg !11274 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888284 to i32*), align 4, !dbg !11275
  %2 = lshr i32 %1, 16, !dbg !11276
  %3 = trunc i32 %2 to i8, !dbg !11277
  %4 = and i8 %3, 15, !dbg !11277
  ret i8 %4, !dbg !11278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_AdvOBProgram(%struct._thread_stack_info* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11279 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 1, metadata !11291, metadata !DIExpression()), !dbg !11292
  %2 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11293
  %3 = load i32, i32* %2, align 4, !dbg !11293
  %4 = and i32 %3, 1, !dbg !11295
  %5 = icmp eq i32 %4, 0, !dbg !11296
  br i1 %5, label %16, label %6, !dbg !11297

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11298
  %8 = load i32, i32* %7, align 4, !dbg !11298
  %9 = icmp eq i32 %8, 1, !dbg !11301
  br i1 %9, label %10, label %13, !dbg !11302

10:                                               ; preds = %6
  %11 = tail call fastcc i32 @FLASH_OB_PCROPConfig(%struct._thread_stack_info* noundef nonnull %0, i32 noundef 1) #24, !dbg !11303
  call void @llvm.dbg.value(metadata i32 %11, metadata !11291, metadata !DIExpression()), !dbg !11292
  %12 = icmp eq i32 %11, 0, !dbg !11305
  br i1 %12, label %16, label %18, !dbg !11307

13:                                               ; preds = %6
  %14 = tail call fastcc i32 @FLASH_OB_PCROPConfig(%struct._thread_stack_info* noundef nonnull %0, i32 noundef 0) #24, !dbg !11308
  call void @llvm.dbg.value(metadata i32 %14, metadata !11291, metadata !DIExpression()), !dbg !11292
  %15 = icmp eq i32 %14, 0, !dbg !11310
  br i1 %15, label %16, label %18, !dbg !11312

16:                                               ; preds = %10, %13, %1
  %17 = phi i32 [ 0, %10 ], [ 0, %13 ], [ 1, %1 ], !dbg !11292
  call void @llvm.dbg.value(metadata i32 %17, metadata !11291, metadata !DIExpression()), !dbg !11292
  br label %18, !dbg !11313

18:                                               ; preds = %13, %10, %16
  %19 = phi i32 [ %17, %16 ], [ %11, %10 ], [ %14, %13 ], !dbg !11292
  ret i32 %19, !dbg !11314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_OB_PCROPConfig(%struct._thread_stack_info* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11315 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11319, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32 %1, metadata !11320, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32 0, metadata !11321, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32 0, metadata !11322, metadata !DIExpression()), !dbg !11323
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11324
  call void @llvm.dbg.value(metadata i32 %3, metadata !11321, metadata !DIExpression()), !dbg !11323
  %4 = icmp eq i32 %1, 0, !dbg !11325
  %5 = zext i1 %4 to i32, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %5, metadata !11322, metadata !DIExpression()), !dbg !11323
  %6 = icmp eq i32 %3, 0, !dbg !11328
  br i1 %6, label %7, label %14, !dbg !11330

7:                                                ; preds = %2
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11331
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11333
  %9 = load i32, i32* %8, align 4, !dbg !11333
  %10 = icmp eq i32 %9, 0, !dbg !11335
  br i1 %10, label %12, label %11, !dbg !11336

11:                                               ; preds = %7
  tail call fastcc void @FLASH_OB_WRPConfigWRP1OrPCROP1(i32 noundef %9, i32 noundef %5) #24, !dbg !11337
  br label %12, !dbg !11339

12:                                               ; preds = %11, %7
  %13 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11340
  call void @llvm.dbg.value(metadata i32 %13, metadata !11321, metadata !DIExpression()), !dbg !11323
  br label %14, !dbg !11341

14:                                               ; preds = %12, %2
  %15 = phi i32 [ %13, %12 ], [ %3, %2 ], !dbg !11323
  call void @llvm.dbg.value(metadata i32 %15, metadata !11321, metadata !DIExpression()), !dbg !11323
  ret i32 %15, !dbg !11342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_FLASHEx_AdvOBGetConfig(%struct._thread_stack_info* nocapture noundef writeonly %0) local_unnamed_addr #1 !dbg !11343 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11347, metadata !DIExpression()), !dbg !11348
  %2 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11349
  store i32 1, i32* %2, align 4, !dbg !11350
  %3 = load volatile i32, i32* inttoptr (i32 1073888284 to i32*), align 4, !dbg !11351
  %4 = and i32 %3, 256, !dbg !11352
  call void @llvm.dbg.value(metadata i32 256, metadata !11353, metadata !DIExpression()) #23, !dbg !11357
  %5 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 256) #28, !dbg !11359, !srcloc !11360
  call void @llvm.dbg.value(metadata i32 %5, metadata !11356, metadata !DIExpression()) #23, !dbg !11357
  call void @llvm.dbg.value(metadata i32 %5, metadata !11361, metadata !DIExpression()) #23, !dbg !11364
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false) #23, !dbg !11366, !range !6226
  %7 = lshr i32 %4, %6, !dbg !11367
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11368
  store i32 %7, i32* %8, align 4, !dbg !11369
  %9 = load volatile i32, i32* inttoptr (i32 1073888288 to i32*), align 32, !dbg !11370
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11371
  store i32 %9, i32* %10, align 4, !dbg !11372
  ret void, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_OB_SelectPCROP() local_unnamed_addr #1 !dbg !11374 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11376, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i16 0, metadata !11377, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i32 0, metadata !11378, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8 0, metadata !11379, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i16 0, metadata !11380, metadata !DIExpression()), !dbg !11381
  %1 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11382
  call void @llvm.dbg.value(metadata i32 %1, metadata !11376, metadata !DIExpression()), !dbg !11381
  %2 = load volatile i8, i8* inttoptr (i32 536346624 to i8*), align 524288, !dbg !11383
  call void @llvm.dbg.value(metadata i8 %2, metadata !11379, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8 %2, metadata !11380, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 256, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  call void @llvm.dbg.value(metadata i8 %2, metadata !11377, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 65279, DW_OP_xor, DW_OP_stack_value)), !dbg !11381
  call void @llvm.dbg.value(metadata !DIArgList(i8 %2, i8 %2), metadata !11378, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_constu, 18446744073692708864, DW_OP_xor, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 256, DW_OP_or, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  %3 = icmp eq i32 %1, 0, !dbg !11384
  br i1 %3, label %4, label %11, !dbg !11386

4:                                                ; preds = %0
  %5 = zext i8 %2 to i32, !dbg !11387
  call void @llvm.dbg.value(metadata i32 %5, metadata !11380, metadata !DIExpression(DW_OP_constu, 256, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  call void @llvm.dbg.value(metadata !DIArgList(i8 %2, i32 %5), metadata !11378, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_constu, 18446744073692708864, DW_OP_xor, DW_OP_LLVM_arg, 1, DW_OP_constu, 256, DW_OP_or, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  %6 = or i32 %5, 256, !dbg !11388
  call void @llvm.dbg.value(metadata i32 %6, metadata !11380, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata !DIArgList(i8 %2, i32 %6), metadata !11378, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_constu, 18446744073692708864, DW_OP_xor, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  call void @llvm.dbg.value(metadata i32 %5, metadata !11377, metadata !DIExpression(DW_OP_constu, 65279, DW_OP_xor, DW_OP_stack_value)), !dbg !11381
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i8 %2), metadata !11378, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_constu, 18446744073692708864, DW_OP_xor, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 256, DW_OP_or, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  %7 = shl nuw nsw i32 %5, 16, !dbg !11389
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i8 %2), metadata !11378, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073692708864, DW_OP_xor, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 256, DW_OP_or, DW_OP_or, DW_OP_stack_value)), !dbg !11381
  %8 = or i32 %7, %6, !dbg !11390
  %9 = xor i32 %8, -16842752, !dbg !11390
  call void @llvm.dbg.value(metadata i32 %9, metadata !11378, metadata !DIExpression()), !dbg !11381
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11391
  store volatile i32 %9, i32* inttoptr (i32 536346624 to i32*), align 524288, !dbg !11393
  %10 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11394
  call void @llvm.dbg.value(metadata i32 %10, metadata !11376, metadata !DIExpression()), !dbg !11381
  br label %11, !dbg !11395

11:                                               ; preds = %4, %0
  %12 = phi i32 [ %10, %4 ], [ %1, %0 ], !dbg !11381
  call void @llvm.dbg.value(metadata i32 %12, metadata !11376, metadata !DIExpression()), !dbg !11381
  ret i32 %12, !dbg !11396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_OB_DeSelectPCROP() local_unnamed_addr #1 !dbg !11397 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11399, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i16 0, metadata !11400, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i32 0, metadata !11401, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i8 0, metadata !11402, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i16 0, metadata !11403, metadata !DIExpression()), !dbg !11404
  %1 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11405
  call void @llvm.dbg.value(metadata i32 %1, metadata !11399, metadata !DIExpression()), !dbg !11404
  %2 = load volatile i8, i8* inttoptr (i32 536346624 to i8*), align 524288, !dbg !11406
  call void @llvm.dbg.value(metadata i8 %2, metadata !11402, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata i8 %2, metadata !11403, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11404
  call void @llvm.dbg.value(metadata i8 %2, metadata !11400, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_stack_value)), !dbg !11404
  call void @llvm.dbg.value(metadata !DIArgList(i8 %2, i8 %2), metadata !11401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !11404
  %3 = icmp eq i32 %1, 0, !dbg !11407
  br i1 %3, label %4, label %10, !dbg !11409

4:                                                ; preds = %0
  %5 = zext i8 %2 to i32, !dbg !11410
  call void @llvm.dbg.value(metadata i32 %5, metadata !11400, metadata !DIExpression(DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_stack_value)), !dbg !11404
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i8 %2), metadata !11401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !11404
  %6 = xor i32 %5, -1, !dbg !11410
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i8 %2), metadata !11401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !11404
  %7 = shl nsw i32 %6, 16, !dbg !11411
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i8 %2), metadata !11401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !11404
  call void @llvm.dbg.value(metadata i32 %5, metadata !11403, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.value(metadata !DIArgList(i8 %2, i32 %5), metadata !11401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !11404
  %8 = or i32 %7, %5, !dbg !11412
  call void @llvm.dbg.value(metadata i32 %8, metadata !11401, metadata !DIExpression()), !dbg !11404
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11413
  store volatile i32 %8, i32* inttoptr (i32 536346624 to i32*), align 524288, !dbg !11415
  %9 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11416
  call void @llvm.dbg.value(metadata i32 %9, metadata !11399, metadata !DIExpression()), !dbg !11404
  br label %10, !dbg !11417

10:                                               ; preds = %4, %0
  %11 = phi i32 [ %9, %4 ], [ %1, %0 ], !dbg !11404
  call void @llvm.dbg.value(metadata i32 %11, metadata !11399, metadata !DIExpression()), !dbg !11404
  ret i32 %11, !dbg !11418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASHEx_DATAEEPROM_Unlock() local_unnamed_addr #14 !dbg !11419 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11420
  %2 = and i32 %1, 1, !dbg !11422
  %3 = icmp eq i32 %2, 0, !dbg !11423
  br i1 %3, label %5, label %4, !dbg !11424

4:                                                ; preds = %0
  store volatile i32 -1985229329, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !11425
  store volatile i32 33752069, i32* inttoptr (i32 1073888268 to i32*), align 4, !dbg !11427
  br label %5, !dbg !11428

5:                                                ; preds = %0, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %0 ], !dbg !11429
  ret i32 %6, !dbg !11430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_FLASHEx_DATAEEPROM_Lock() local_unnamed_addr #14 !dbg !11431 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11432
  %2 = or i32 %1, 1, !dbg !11432
  store volatile i32 %2, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11432
  ret i32 0, !dbg !11433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_DATAEEPROM_Erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.value(metadata i32 %1, metadata !11439, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.value(metadata i32 0, metadata !11440, metadata !DIExpression()), !dbg !11441
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11442
  call void @llvm.dbg.value(metadata i32 %3, metadata !11440, metadata !DIExpression()), !dbg !11441
  %4 = icmp eq i32 %3, 0, !dbg !11443
  br i1 %4, label %5, label %14, !dbg !11445

5:                                                ; preds = %2
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11446
  switch i32 %0, label %12 [
    i32 2, label %6
    i32 1, label %8
    i32 0, label %10
  ], !dbg !11448

6:                                                ; preds = %5
  %7 = inttoptr i32 %1 to i32*, !dbg !11449
  store volatile i32 0, i32* %7, align 4, !dbg !11452
  br label %12, !dbg !11453

8:                                                ; preds = %5
  %9 = inttoptr i32 %1 to i16*, !dbg !11454
  store volatile i16 0, i16* %9, align 2, !dbg !11457
  br label %12, !dbg !11458

10:                                               ; preds = %5
  %11 = inttoptr i32 %1 to i8*, !dbg !11459
  store volatile i8 0, i8* %11, align 1, !dbg !11462
  br label %12, !dbg !11463

12:                                               ; preds = %8, %6, %5, %10
  %13 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11464
  call void @llvm.dbg.value(metadata i32 %13, metadata !11440, metadata !DIExpression()), !dbg !11441
  br label %14, !dbg !11465

14:                                               ; preds = %12, %2
  %15 = phi i32 [ %13, %12 ], [ %3, %2 ], !dbg !11441
  call void @llvm.dbg.value(metadata i32 %15, metadata !11440, metadata !DIExpression()), !dbg !11441
  ret i32 %15, !dbg !11466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_FLASHEx_DATAEEPROM_Program(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11469, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 %1, metadata !11470, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 %2, metadata !11471, metadata !DIExpression()), !dbg !11473
  call void @llvm.dbg.value(metadata i32 1, metadata !11472, metadata !DIExpression()), !dbg !11473
  %4 = load i32, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11474
  %5 = icmp eq i32 %4, 1, !dbg !11474
  br i1 %5, label %28, label %6, !dbg !11477

6:                                                ; preds = %3
  store i32 1, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11478
  %7 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %7, metadata !11472, metadata !DIExpression()), !dbg !11473
  %8 = icmp eq i32 %7, 0, !dbg !11481
  br i1 %8, label %9, label %26, !dbg !11483

9:                                                ; preds = %6
  store volatile i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 5), align 4, !dbg !11484
  switch i32 %0, label %26 [
    i32 2, label %10
    i32 1, label %12
    i32 0, label %15
    i32 4, label %18
    i32 8, label %21
    i32 16, label %24
  ], !dbg !11486

10:                                               ; preds = %9
  %11 = tail call fastcc i32 @FLASH_DATAEEPROM_ProgramWord(i32 noundef %1, i32 noundef %2) #24, !dbg !11487
  call void @llvm.dbg.value(metadata i32 %11, metadata !11472, metadata !DIExpression()), !dbg !11473
  br label %26, !dbg !11490

12:                                               ; preds = %9
  %13 = trunc i32 %2 to i16, !dbg !11491
  %14 = tail call fastcc i32 @FLASH_DATAEEPROM_ProgramHalfWord(i32 noundef %1, i16 noundef zeroext %13) #24, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %14, metadata !11472, metadata !DIExpression()), !dbg !11473
  br label %26, !dbg !11495

15:                                               ; preds = %9
  %16 = trunc i32 %2 to i8, !dbg !11496
  %17 = tail call fastcc i32 @FLASH_DATAEEPROM_ProgramByte(i32 noundef %1, i8 noundef zeroext %16) #24, !dbg !11499
  call void @llvm.dbg.value(metadata i32 %17, metadata !11472, metadata !DIExpression()), !dbg !11473
  br label %26, !dbg !11500

18:                                               ; preds = %9
  %19 = trunc i32 %2 to i8, !dbg !11501
  %20 = tail call fastcc i32 @FLASH_DATAEEPROM_FastProgramByte(i32 noundef %1, i8 noundef zeroext %19) #24, !dbg !11504
  call void @llvm.dbg.value(metadata i32 %20, metadata !11472, metadata !DIExpression()), !dbg !11473
  br label %26, !dbg !11505

21:                                               ; preds = %9
  %22 = trunc i32 %2 to i16, !dbg !11506
  %23 = tail call fastcc i32 @FLASH_DATAEEPROM_FastProgramHalfWord(i32 noundef %1, i16 noundef zeroext %22) #24, !dbg !11509
  call void @llvm.dbg.value(metadata i32 %23, metadata !11472, metadata !DIExpression()), !dbg !11473
  br label %26, !dbg !11510

24:                                               ; preds = %9
  %25 = tail call fastcc i32 @FLASH_DATAEEPROM_FastProgramWord(i32 noundef %1, i32 noundef %2) #24, !dbg !11511
  call void @llvm.dbg.value(metadata i32 %25, metadata !11472, metadata !DIExpression()), !dbg !11473
  br label %26, !dbg !11514

26:                                               ; preds = %9, %6, %12, %18, %24, %21, %15, %10
  %27 = phi i32 [ %11, %10 ], [ %14, %12 ], [ %17, %15 ], [ %20, %18 ], [ %23, %21 ], [ %25, %24 ], [ %7, %6 ], [ 1, %9 ], !dbg !11473
  call void @llvm.dbg.value(metadata i32 %27, metadata !11472, metadata !DIExpression()), !dbg !11473
  store i32 0, i32* getelementptr inbounds (%struct.FLASH_ProcessTypeDef, %struct.FLASH_ProcessTypeDef* @pFlash, i32 0, i32 4), align 4, !dbg !11515
  br label %28, !dbg !11517

28:                                               ; preds = %3, %26
  %29 = phi i32 [ %27, %26 ], [ 2, %3 ], !dbg !11473
  ret i32 %29, !dbg !11518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_DATAEEPROM_ProgramWord(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11521, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %1, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 0, metadata !11523, metadata !DIExpression()), !dbg !11524
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %3, metadata !11523, metadata !DIExpression()), !dbg !11524
  %4 = icmp eq i32 %3, 0, !dbg !11526
  br i1 %4, label %5, label %8, !dbg !11528

5:                                                ; preds = %2
  %6 = inttoptr i32 %0 to i32*, !dbg !11529
  store volatile i32 %1, i32* %6, align 4, !dbg !11531
  %7 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %7, metadata !11523, metadata !DIExpression()), !dbg !11524
  br label %8, !dbg !11533

8:                                                ; preds = %5, %2
  %9 = phi i32 [ %7, %5 ], [ %3, %2 ], !dbg !11524
  call void @llvm.dbg.value(metadata i32 %9, metadata !11523, metadata !DIExpression()), !dbg !11524
  ret i32 %9, !dbg !11534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_DATAEEPROM_ProgramHalfWord(i32 noundef %0, i16 noundef zeroext %1) unnamed_addr #1 !dbg !11535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11539, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata i16 %1, metadata !11540, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.value(metadata i32 0, metadata !11541, metadata !DIExpression()), !dbg !11542
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11543
  call void @llvm.dbg.value(metadata i32 %3, metadata !11541, metadata !DIExpression()), !dbg !11542
  %4 = icmp eq i32 %3, 0, !dbg !11544
  br i1 %4, label %5, label %8, !dbg !11546

5:                                                ; preds = %2
  %6 = inttoptr i32 %0 to i16*, !dbg !11547
  store volatile i16 %1, i16* %6, align 2, !dbg !11549
  %7 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %7, metadata !11541, metadata !DIExpression()), !dbg !11542
  br label %8, !dbg !11551

8:                                                ; preds = %5, %2
  %9 = phi i32 [ %7, %5 ], [ %3, %2 ], !dbg !11542
  call void @llvm.dbg.value(metadata i32 %9, metadata !11541, metadata !DIExpression()), !dbg !11542
  ret i32 %9, !dbg !11552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_DATAEEPROM_ProgramByte(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !11553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11557, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i8 %1, metadata !11558, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 0, metadata !11559, metadata !DIExpression()), !dbg !11560
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %3, metadata !11559, metadata !DIExpression()), !dbg !11560
  %4 = icmp eq i32 %3, 0, !dbg !11562
  br i1 %4, label %5, label %8, !dbg !11564

5:                                                ; preds = %2
  %6 = inttoptr i32 %0 to i8*, !dbg !11565
  store volatile i8 %1, i8* %6, align 1, !dbg !11567
  %7 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11568
  call void @llvm.dbg.value(metadata i32 %7, metadata !11559, metadata !DIExpression()), !dbg !11560
  br label %8, !dbg !11569

8:                                                ; preds = %5, %2
  %9 = phi i32 [ %7, %5 ], [ %3, %2 ], !dbg !11560
  call void @llvm.dbg.value(metadata i32 %9, metadata !11559, metadata !DIExpression()), !dbg !11560
  ret i32 %9, !dbg !11570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_DATAEEPROM_FastProgramByte(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !11571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11573, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i8 %1, metadata !11574, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.value(metadata i32 0, metadata !11575, metadata !DIExpression()), !dbg !11576
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11577
  call void @llvm.dbg.value(metadata i32 %3, metadata !11575, metadata !DIExpression()), !dbg !11576
  %4 = icmp eq i32 %3, 0, !dbg !11578
  br i1 %4, label %5, label %10, !dbg !11580

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11581
  %7 = and i32 %6, -257, !dbg !11581
  store volatile i32 %7, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11581
  %8 = inttoptr i32 %0 to i8*, !dbg !11583
  store volatile i8 %1, i8* %8, align 1, !dbg !11584
  %9 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %9, metadata !11575, metadata !DIExpression()), !dbg !11576
  br label %10, !dbg !11586

10:                                               ; preds = %5, %2
  %11 = phi i32 [ %9, %5 ], [ %3, %2 ], !dbg !11576
  call void @llvm.dbg.value(metadata i32 %11, metadata !11575, metadata !DIExpression()), !dbg !11576
  ret i32 %11, !dbg !11587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_DATAEEPROM_FastProgramHalfWord(i32 noundef %0, i16 noundef zeroext %1) unnamed_addr #1 !dbg !11588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11590, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i16 %1, metadata !11591, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 0, metadata !11592, metadata !DIExpression()), !dbg !11593
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %3, metadata !11592, metadata !DIExpression()), !dbg !11593
  %4 = icmp eq i32 %3, 0, !dbg !11595
  br i1 %4, label %5, label %10, !dbg !11597

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11598
  %7 = and i32 %6, -257, !dbg !11598
  store volatile i32 %7, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11598
  %8 = inttoptr i32 %0 to i16*, !dbg !11600
  store volatile i16 %1, i16* %8, align 2, !dbg !11601
  %9 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11602
  call void @llvm.dbg.value(metadata i32 %9, metadata !11592, metadata !DIExpression()), !dbg !11593
  br label %10, !dbg !11603

10:                                               ; preds = %5, %2
  %11 = phi i32 [ %9, %5 ], [ %3, %2 ], !dbg !11593
  call void @llvm.dbg.value(metadata i32 %11, metadata !11592, metadata !DIExpression()), !dbg !11593
  ret i32 %11, !dbg !11604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @FLASH_DATAEEPROM_FastProgramWord(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11607, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 %1, metadata !11608, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.value(metadata i32 0, metadata !11609, metadata !DIExpression()), !dbg !11610
  %3 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11611
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()), !dbg !11610
  %4 = icmp eq i32 %3, 0, !dbg !11612
  br i1 %4, label %5, label %10, !dbg !11614

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11615
  %7 = and i32 %6, -257, !dbg !11615
  store volatile i32 %7, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11615
  %8 = inttoptr i32 %0 to i32*, !dbg !11617
  store volatile i32 %1, i32* %8, align 4, !dbg !11618
  %9 = tail call i32 @FLASH_WaitForLastOperation(i32 noundef 50000) #25, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %9, metadata !11609, metadata !DIExpression()), !dbg !11610
  br label %10, !dbg !11620

10:                                               ; preds = %5, %2
  %11 = phi i32 [ %9, %5 ], [ %3, %2 ], !dbg !11610
  call void @llvm.dbg.value(metadata i32 %11, metadata !11609, metadata !DIExpression()), !dbg !11610
  ret i32 %11, !dbg !11621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram() local_unnamed_addr #14 !dbg !11622 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11623
  %2 = or i32 %1, 256, !dbg !11623
  store volatile i32 %2, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11623
  ret void, !dbg !11624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram() local_unnamed_addr #14 !dbg !11625 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11626
  %2 = and i32 %1, -257, !dbg !11626
  store volatile i32 %2, i32* inttoptr (i32 1073888260 to i32*), align 4, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11631, metadata !DIExpression()), !dbg !11632
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11633
  ret void, !dbg !11634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11638, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata i32 1000, metadata !11639, metadata !DIExpression()), !dbg !11640
  %2 = udiv i32 %0, 1000, !dbg !11641
  %3 = add nsw i32 %2, -1, !dbg !11642
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11643
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11644
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11645
  ret void, !dbg !11646
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #13 !dbg !11647 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11649, metadata !DIExpression()), !dbg !11652
  %3 = bitcast i32* %2 to i8*, !dbg !11653
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11653
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11650, metadata !DIExpression()), !dbg !11654
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11655
  store volatile i32 %4, i32* %2, align 4, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %5 = load volatile i32, i32* %2, align 4, !dbg !11656
  %6 = icmp eq i32 %0, -1, !dbg !11657
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11651, metadata !DIExpression()), !dbg !11652
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %8, metadata !11651, metadata !DIExpression()), !dbg !11652
  br label %9, !dbg !11659

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11651, metadata !DIExpression()), !dbg !11652
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11660
  call void @llvm.dbg.value(metadata i32 undef, metadata !11651, metadata !DIExpression()), !dbg !11652
  %12 = shl i32 %11, 15, !dbg !11652
  %13 = ashr i32 %12, 31, !dbg !11652
  %14 = add i32 %13, %10, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %14, metadata !11651, metadata !DIExpression()), !dbg !11652
  %15 = icmp eq i32 %14, 0, !dbg !11663
  br i1 %15, label %16, label %9, !dbg !11659

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11664
  ret void, !dbg !11664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11667, metadata !DIExpression()), !dbg !11668
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11669
  ret void, !dbg !11670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11676, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata i32 0, metadata !11677, metadata !DIExpression()), !dbg !11679
  call void @llvm.dbg.value(metadata i32 0, metadata !11678, metadata !DIExpression()), !dbg !11679
  %2 = add i32 %0, -32000001, !dbg !11680
  %3 = icmp ult i32 %2, -32000000, !dbg !11680
  br i1 %3, label %22, label %4, !dbg !11680

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11682
  %6 = icmp eq i32 %5, 2048, !dbg !11685
  br i1 %6, label %7, label %9, !dbg !11686

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression()), !dbg !11679
  br i1 %8, label %16, label %17, !dbg !11690

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11691
  %11 = icmp eq i32 %10, 4096, !dbg !11693
  br i1 %11, label %12, label %14, !dbg !11694

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !11695
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression()), !dbg !11679
  br i1 %13, label %16, label %17, !dbg !11690

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !11698
  call void @llvm.dbg.value(metadata i32 undef, metadata !11678, metadata !DIExpression()), !dbg !11679
  br i1 %15, label %16, label %17, !dbg !11690

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !11701
  br label %17, !dbg !11704

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !11705
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11706
  %20 = icmp ne i32 %19, %18, !dbg !11708
  %21 = zext i1 %20 to i32, !dbg !11709
  br label %22, !dbg !11709

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !11679
  call void @llvm.dbg.value(metadata i32 %23, metadata !11677, metadata !DIExpression()), !dbg !11679
  ret i32 %23, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11711 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11712
  %2 = and i32 %1, 6144, !dbg !11712
  ret i32 %2, !dbg !11713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #14 !dbg !11714 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11715
  %2 = or i32 %1, 4, !dbg !11715
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11715
  ret void, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11719, metadata !DIExpression()), !dbg !11720
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11721
  %3 = and i32 %2, -2, !dbg !11721
  %4 = or i32 %3, %0, !dbg !11721
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11721
  ret void, !dbg !11722
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11723 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11724
  %2 = and i32 %1, 1, !dbg !11724
  ret i32 %2, !dbg !11725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.perisistant_values* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11726 {
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %0, metadata !11743, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11744, metadata !DIExpression()), !dbg !11747
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11748
  %4 = icmp eq i32 %3, 0, !dbg !11750
  br i1 %4, label %5, label %19, !dbg !11751

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.perisistant_values* noundef %0) #24, !dbg !11752
  call void @llvm.dbg.value(metadata i32 %6, metadata !11746, metadata !DIExpression()), !dbg !11747
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.97() #24, !dbg !11754
  %8 = icmp eq i32 %7, 1, !dbg !11756
  br i1 %8, label %13, label %9, !dbg !11757

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.98() #24, !dbg !11758
  br label %10, !dbg !11760

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.97() #24, !dbg !11761
  %12 = icmp eq i32 %11, 1, !dbg !11762
  br i1 %12, label %13, label %10, !dbg !11760, !llvm.loop !11763

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %0, i32 0, i32 0, !dbg !11765
  %15 = load i32, i32* %14, align 4, !dbg !11765
  %16 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %0, i32 0, i32 1, !dbg !11766
  %17 = load i32, i32* %16, align 4, !dbg !11766
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.99(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !11767
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11768
  call void @llvm.dbg.value(metadata i32 %18, metadata !11745, metadata !DIExpression()), !dbg !11747
  br label %19, !dbg !11769

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !11770
  call void @llvm.dbg.value(metadata i32 %20, metadata !11745, metadata !DIExpression()), !dbg !11747
  ret i32 %20, !dbg !11771
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11772 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11776, metadata !DIExpression()), !dbg !11777
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.101() #24, !dbg !11778
  %2 = icmp ne i32 %1, 0, !dbg !11780
  %3 = zext i1 %2 to i32, !dbg !11781
  call void @llvm.dbg.value(metadata i32 %3, metadata !11776, metadata !DIExpression()), !dbg !11777
  ret i32 %3, !dbg !11782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.perisistant_values* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11787, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %1, metadata !11788, metadata !DIExpression()), !dbg !11790
  %3 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %1, i32 0, i32 0, !dbg !11791
  %4 = load i32, i32* %3, align 4, !dbg !11791
  %5 = lshr i32 %4, 18, !dbg !11792
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !11793
  %7 = load i8, i8* %6, align 1, !dbg !11793
  %8 = zext i8 %7 to i32, !dbg !11794
  %9 = mul i32 %8, %0, !dbg !11795
  call void @llvm.dbg.value(metadata i32 %9, metadata !11789, metadata !DIExpression()), !dbg !11790
  %10 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %1, i32 0, i32 1, !dbg !11796
  %11 = load i32, i32* %10, align 4, !dbg !11796
  %12 = lshr i32 %11, 22, !dbg !11797
  %13 = add nuw nsw i32 %12, 1, !dbg !11798
  %14 = udiv i32 %9, %13, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %14, metadata !11789, metadata !DIExpression()), !dbg !11790
  ret i32 %14, !dbg !11800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.97() unnamed_addr #15 !dbg !11801 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11802
  %2 = lshr i32 %1, 1, !dbg !11803
  %3 = and i32 %2, 1, !dbg !11803
  ret i32 %3, !dbg !11804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.98() unnamed_addr #14 !dbg !11805 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11806
  %2 = or i32 %1, 1, !dbg !11806
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11806
  ret void, !dbg !11807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.99(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11810, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i32 %1, metadata !11811, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i32 %2, metadata !11812, metadata !DIExpression()), !dbg !11813
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11814
  %5 = and i32 %4, -16580609, !dbg !11814
  %6 = or i32 %1, %0, !dbg !11814
  %7 = or i32 %6, %2, !dbg !11814
  %8 = or i32 %7, %5, !dbg !11814
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11814
  ret void, !dbg !11815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !11816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11820, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11821, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 0, metadata !11822, metadata !DIExpression()), !dbg !11824
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11825
  %4 = load i32, i32* %3, align 4, !dbg !11825
  %5 = lshr i32 %4, 4, !dbg !11825
  %6 = and i32 %5, 15, !dbg !11825
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11825
  %8 = load i8, i8* %7, align 1, !dbg !11825
  %9 = zext i8 %8 to i32, !dbg !11825
  %10 = lshr i32 %0, %9, !dbg !11825
  call void @llvm.dbg.value(metadata i32 %10, metadata !11823, metadata !DIExpression()), !dbg !11824
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11826
  %12 = icmp ult i32 %11, %10, !dbg !11828
  br i1 %12, label %13, label %16, !dbg !11829

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11830
  call void @llvm.dbg.value(metadata i32 %14, metadata !11822, metadata !DIExpression()), !dbg !11824
  %15 = icmp eq i32 %14, 0, !dbg !11832
  br i1 %15, label %16, label %30, !dbg !11834

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.100() #24, !dbg !11835
  br label %17, !dbg !11837

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.101() #24, !dbg !11838
  %19 = icmp eq i32 %18, 1, !dbg !11839
  br i1 %19, label %20, label %17, !dbg !11837, !llvm.loop !11840

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11842
  tail call fastcc void @LL_RCC_SetAHBPrescaler.102(i32 noundef %21) #24, !dbg !11843
  tail call fastcc void @LL_RCC_SetSysClkSource.103() #24, !dbg !11844
  br label %22, !dbg !11845

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.104() #24, !dbg !11846
  %24 = icmp eq i32 %23, 12, !dbg !11847
  br i1 %24, label %25, label %22, !dbg !11845, !llvm.loop !11848

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11850
  %27 = load i32, i32* %26, align 4, !dbg !11850
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.105(i32 noundef %27) #24, !dbg !11851
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11852
  %29 = load i32, i32* %28, align 4, !dbg !11852
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.106(i32 noundef %29) #24, !dbg !11853
  br label %30, !dbg !11854

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11855
  %33 = icmp ugt i32 %32, %10, !dbg !11857
  br i1 %33, label %34, label %36, !dbg !11858

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %35, metadata !11822, metadata !DIExpression()), !dbg !11824
  br label %36, !dbg !11861

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11824
  call void @llvm.dbg.value(metadata i32 %37, metadata !11822, metadata !DIExpression()), !dbg !11824
  %38 = icmp eq i32 %37, 0, !dbg !11862
  br i1 %38, label %39, label %40, !dbg !11864

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !11865
  br label %40, !dbg !11867

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.100() unnamed_addr #14 !dbg !11869 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  %2 = or i32 %1, 16777216, !dbg !11870
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  ret void, !dbg !11871
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.101() unnamed_addr #15 !dbg !11872 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11873
  %2 = lshr i32 %1, 25, !dbg !11874
  %3 = and i32 %2, 1, !dbg !11874
  ret i32 %3, !dbg !11875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.102(i32 noundef %0) unnamed_addr #14 !dbg !11876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11878, metadata !DIExpression()), !dbg !11879
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11880
  %3 = and i32 %2, -241, !dbg !11880
  %4 = or i32 %3, %0, !dbg !11880
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11880
  ret void, !dbg !11881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.103() unnamed_addr #14 !dbg !11882 {
  call void @llvm.dbg.value(metadata i32 3, metadata !11884, metadata !DIExpression()), !dbg !11885
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11886
  %2 = or i32 %1, 3, !dbg !11886
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11886
  ret void, !dbg !11887
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.104() unnamed_addr #15 !dbg !11888 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11889
  %2 = and i32 %1, 12, !dbg !11889
  ret i32 %2, !dbg !11890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.105(i32 noundef %0) unnamed_addr #14 !dbg !11891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11893, metadata !DIExpression()), !dbg !11894
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11895
  %3 = and i32 %2, -1793, !dbg !11895
  %4 = or i32 %3, %0, !dbg !11895
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11895
  ret void, !dbg !11896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.106(i32 noundef %0) unnamed_addr #14 !dbg !11897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11899, metadata !DIExpression()), !dbg !11900
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11901
  %3 = and i32 %2, -14337, !dbg !11901
  %4 = or i32 %3, %0, !dbg !11901
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11901
  ret void, !dbg !11902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.perisistant_values* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !11903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11907, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 %1, metadata !11908, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata %struct.perisistant_values* %2, metadata !11909, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11910, metadata !DIExpression()), !dbg !11913
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11914
  %6 = icmp eq i32 %5, 0, !dbg !11916
  br i1 %6, label %7, label %25, !dbg !11917

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.perisistant_values* noundef %2) #24, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %8, metadata !11912, metadata !DIExpression()), !dbg !11913
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !11920
  %10 = icmp eq i32 %9, 1, !dbg !11922
  br i1 %10, label %19, label %11, !dbg !11923

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11924
  br i1 %12, label %13, label %14, !dbg !11927

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !11928
  br label %15, !dbg !11930

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !11931
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !11933
  br label %16, !dbg !11934

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !11935
  %18 = icmp eq i32 %17, 1, !dbg !11936
  br i1 %18, label %19, label %16, !dbg !11934, !llvm.loop !11937

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %2, i32 0, i32 0, !dbg !11939
  %21 = load i32, i32* %20, align 4, !dbg !11939
  %22 = getelementptr inbounds %struct.perisistant_values, %struct.perisistant_values* %2, i32 0, i32 1, !dbg !11940
  %23 = load i32, i32* %22, align 4, !dbg !11940
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.99(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !11941
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %24, metadata !11911, metadata !DIExpression()), !dbg !11913
  br label %25, !dbg !11943

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !11944
  call void @llvm.dbg.value(metadata i32 %26, metadata !11911, metadata !DIExpression()), !dbg !11913
  ret i32 %26, !dbg !11945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !11946 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11947
  %2 = lshr i32 %1, 17, !dbg !11948
  %3 = and i32 %2, 1, !dbg !11948
  ret i32 %3, !dbg !11949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !11950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11951
  %2 = or i32 %1, 262144, !dbg !11951
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11951
  ret void, !dbg !11952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !11953 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11954
  %2 = and i32 %1, -262145, !dbg !11954
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11954
  ret void, !dbg !11955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !11956 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11957
  %2 = or i32 %1, 65536, !dbg !11957
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11957
  ret void, !dbg !11958
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11962, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i32 undef, metadata !11962, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.value(metadata i32 undef, metadata !11962, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11978
  ret void, !dbg !11979
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11984, metadata !DIExpression()), !dbg !11986
  %2 = icmp eq i8* %0, null, !dbg !11987
  br i1 %2, label %29, label %3, !dbg !11989

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11990
  %5 = icmp eq i8 %4, 0, !dbg !11991
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11992
  br i1 %6, label %29, label %8, !dbg !11992

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11985, metadata !DIExpression()), !dbg !11986
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11993

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11985, metadata !DIExpression()), !dbg !11986
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11995
  br i1 %10, label %11, label %15, !dbg !12000

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12001
  %13 = load i8*, i8** %12, align 4, !dbg !12001
  %14 = icmp eq i8* %13, %0, !dbg !12002
  br i1 %14, label %29, label %15, !dbg !12003

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12004
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11985, metadata !DIExpression()), !dbg !11986
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12005
  br i1 %17, label %7, label %8, !dbg !12006, !llvm.loop !12007

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11985, metadata !DIExpression()), !dbg !11986
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12009
  br i1 %20, label %21, label %26, !dbg !12013

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12014
  %23 = load i8*, i8** %22, align 4, !dbg !12014
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12015
  %25 = icmp eq i32 %24, 0, !dbg !12016
  br i1 %25, label %29, label %26, !dbg !12017

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12018
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11985, metadata !DIExpression()), !dbg !11986
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12019
  br i1 %28, label %29, label %18, !dbg !11993, !llvm.loop !12020

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11986
  ret %struct.device* %30, !dbg !12022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12027, metadata !DIExpression()), !dbg !12028
  %2 = icmp eq %struct.device* %0, null, !dbg !12029
  br i1 %2, label %14, label %3, !dbg !12031

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12032
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12032
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12033
  %7 = load i8, i8* %6, align 1, !dbg !12033
  %8 = and i8 %7, 1, !dbg !12033
  %9 = icmp eq i8 %8, 0, !dbg !12033
  br i1 %9, label %14, label %10, !dbg !12034

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12035
  %12 = load i8, i8* %11, align 1, !dbg !12035
  %13 = icmp eq i8 %12, 0, !dbg !12036
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12028
  ret i1 %15, !dbg !12037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12038 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12043, metadata !DIExpression()), !dbg !12044
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12045
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12047 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12055, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12056, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.value(metadata i8* %2, metadata !12057, metadata !DIExpression()), !dbg !12060
  %5 = bitcast i32* %4 to i8*, !dbg !12061
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12061
  call void @llvm.dbg.value(metadata i32 0, metadata !12058, metadata !DIExpression()), !dbg !12060
  store i32 0, i32* %4, align 4, !dbg !12062
  call void @llvm.dbg.value(metadata i32* %4, metadata !12058, metadata !DIExpression(DW_OP_deref)), !dbg !12060
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12063
  call void @llvm.dbg.value(metadata i16* %6, metadata !12059, metadata !DIExpression()), !dbg !12060
  %7 = load i32, i32* %4, align 4, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %7, metadata !12058, metadata !DIExpression()), !dbg !12060
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12065
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12066
  ret i32 %8, !dbg !12067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !12068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12072, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.value(metadata i32* %1, metadata !12073, metadata !DIExpression()), !dbg !12078
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12079
  %4 = load i16*, i16** %3, align 4, !dbg !12079
  call void @llvm.dbg.value(metadata i16* %4, metadata !12074, metadata !DIExpression()), !dbg !12078
  %5 = icmp eq i16* %4, null, !dbg !12080
  br i1 %5, label %14, label %6, !dbg !12081

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12082
  call void @llvm.dbg.value(metadata i32 %7, metadata !12075, metadata !DIExpression()), !dbg !12082
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12083
  %9 = load i16, i16* %8, align 2, !dbg !12083
  %10 = add i16 %9, -32767, !dbg !12084
  %11 = icmp ult i16 %10, 2, !dbg !12084
  %12 = add i32 %7, 1, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %12, metadata !12075, metadata !DIExpression()), !dbg !12082
  br i1 %11, label %13, label %6, !dbg !12084, !llvm.loop !12087

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12090
  br label %14, !dbg !12091

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12093 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12097, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %1, metadata !12098, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12099, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i8* %3, metadata !12100, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 0, metadata !12101, metadata !DIExpression()), !dbg !12109
  %5 = icmp eq i32 %1, 0, !dbg !12110
  br i1 %5, label %16, label %8, !dbg !12111

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12101, metadata !DIExpression()), !dbg !12109
  %7 = icmp eq i32 %15, %1, !dbg !12110
  br i1 %7, label %16, label %8, !dbg !12111, !llvm.loop !12112

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12101, metadata !DIExpression()), !dbg !12109
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12114
  %11 = load i16, i16* %10, align 2, !dbg !12114
  call void @llvm.dbg.value(metadata i16 %11, metadata !12103, metadata !DIExpression()), !dbg !12115
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12116
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12106, metadata !DIExpression()), !dbg !12115
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12117
  call void @llvm.dbg.value(metadata i32 %13, metadata !12107, metadata !DIExpression()), !dbg !12115
  %14 = icmp slt i32 %13, 0, !dbg !12118
  %15 = add nuw i32 %9, 1, !dbg !12120
  call void @llvm.dbg.value(metadata i32 %15, metadata !12101, metadata !DIExpression()), !dbg !12109
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !12122 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12126, metadata !DIExpression()), !dbg !12129
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12127, metadata !DIExpression()), !dbg !12129
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12128, metadata !DIExpression()), !dbg !12129
  %2 = sext i16 %0 to i32, !dbg !12130
  %3 = icmp slt i16 %0, 1, !dbg !12132
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12133
  %6 = add nsw i32 %2, -1, !dbg !12133
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12133
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12133
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12127, metadata !DIExpression()), !dbg !12129
  ret %struct.device* %8, !dbg !12134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12135 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12137, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12138, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata i8* %2, metadata !12139, metadata !DIExpression()), !dbg !12142
  %5 = bitcast i32* %4 to i8*, !dbg !12143
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12143
  call void @llvm.dbg.value(metadata i32 0, metadata !12140, metadata !DIExpression()), !dbg !12142
  store i32 0, i32* %4, align 4, !dbg !12144
  call void @llvm.dbg.value(metadata i32* %4, metadata !12140, metadata !DIExpression(DW_OP_deref)), !dbg !12142
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12145
  call void @llvm.dbg.value(metadata i16* %6, metadata !12141, metadata !DIExpression()), !dbg !12142
  %7 = load i32, i32* %4, align 4, !dbg !12146
  call void @llvm.dbg.value(metadata i32 %7, metadata !12140, metadata !DIExpression()), !dbg !12142
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12147
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12148
  ret i32 %8, !dbg !12149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !12150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12152, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i32* %1, metadata !12153, metadata !DIExpression()), !dbg !12157
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12158
  %4 = load i16*, i16** %3, align 4, !dbg !12158
  call void @llvm.dbg.value(metadata i16* %4, metadata !12154, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i32 0, metadata !12155, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i32 0, metadata !12156, metadata !DIExpression()), !dbg !12157
  %5 = icmp eq i16* %4, null, !dbg !12159
  br i1 %5, label %22, label %6, !dbg !12161

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12155, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.value(metadata i16* %8, metadata !12154, metadata !DIExpression()), !dbg !12157
  %9 = load i16, i16* %8, align 2, !dbg !12162
  %10 = icmp eq i16 %9, -32768, !dbg !12166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12155, metadata !DIExpression()), !dbg !12157
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12167
  call void @llvm.dbg.value(metadata i16* %11, metadata !12154, metadata !DIExpression()), !dbg !12157
  %12 = zext i1 %10 to i32, !dbg !12168
  %13 = add i32 %7, %12, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %13, metadata !12155, metadata !DIExpression()), !dbg !12157
  %14 = icmp eq i32 %13, 2, !dbg !12169
  br i1 %14, label %15, label %6, !dbg !12170

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12157
  call void @llvm.dbg.value(metadata i32 %16, metadata !12156, metadata !DIExpression()), !dbg !12157
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12171
  %18 = load i16, i16* %17, align 2, !dbg !12171
  %19 = icmp eq i16 %18, 32767, !dbg !12172
  %20 = add i32 %16, 1, !dbg !12173
  call void @llvm.dbg.value(metadata i32 %20, metadata !12156, metadata !DIExpression()), !dbg !12157
  br i1 %19, label %21, label %15, !dbg !12175, !llvm.loop !12176

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12178
  br label %22, !dbg !12179

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12180
  call void @llvm.dbg.value(metadata i16* %23, metadata !12154, metadata !DIExpression()), !dbg !12157
  ret i16* %23, !dbg !12181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12182 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12185
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12186
  ret i32* %2, !dbg !12187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !12188 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12336, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12337, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12338, metadata !DIExpression()), !dbg !12339
  ret void, !dbg !12340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12345, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 %1, metadata !12346, metadata !DIExpression()), !dbg !12347
  ret void, !dbg !12348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12353, metadata !DIExpression()), !dbg !12355
  call void @llvm.dbg.value(metadata i32 %1, metadata !12354, metadata !DIExpression()), !dbg !12355
  ret void, !dbg !12356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !12357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12361, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.value(metadata i8* %1, metadata !12362, metadata !DIExpression()), !dbg !12363
  ret i32 -134, !dbg !12364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !12365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12369, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i8* %1, metadata !12370, metadata !DIExpression()), !dbg !12371
  ret i32 -134, !dbg !12372
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12376, metadata !DIExpression()), !dbg !12377
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12378, !srcloc !12384
  call void @llvm.dbg.value(metadata i32 undef, metadata !12381, metadata !DIExpression()) #23, !dbg !12385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12382, metadata !DIExpression()) #23, !dbg !12385
  br label %3, !dbg !12386

3:                                                ; preds = %3, %1
  br label %3, !dbg !12387, !llvm.loop !12390
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12397, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12398, metadata !DIExpression()), !dbg !12399
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12400
  unreachable, !dbg !12400
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12403, metadata !DIExpression()), !dbg !12404
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12405
  unreachable, !dbg !12405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12408, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12409, metadata !DIExpression()), !dbg !12412
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12413, !srcloc !12384
  call void @llvm.dbg.value(metadata i32 undef, metadata !12381, metadata !DIExpression()) #23, !dbg !12415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12382, metadata !DIExpression()) #23, !dbg !12415
  call void @llvm.dbg.value(metadata i32 undef, metadata !12410, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12411, metadata !DIExpression()), !dbg !12412
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12416
  br i1 %4, label %6, label %5, !dbg !12418

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12419
  br label %7, !dbg !12420

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12419
  br label %7, !dbg !12423

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %8, metadata !12381, metadata !DIExpression()) #23, !dbg !12415
  call void @llvm.dbg.value(metadata i32 %8, metadata !12410, metadata !DIExpression()), !dbg !12412
  %9 = tail call fastcc %struct.k_thread* @k_current_get.113() #26, !dbg !12425
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12411, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 undef, metadata !12426, metadata !DIExpression()) #23, !dbg !12429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12431, !srcloc !12432
  tail call fastcc void @k_thread_abort.114(%struct.k_thread* noundef %9) #24, !dbg !12433
  ret void, !dbg !12436
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.113() unnamed_addr #9 !dbg !12437 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.115() #26, !dbg !12441
  ret %struct.k_thread* %1, !dbg !12442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.114(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12447, metadata !DIExpression()), !dbg !12448
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12449, !srcloc !12451
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12452
  ret void, !dbg !12453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.115() unnamed_addr #9 !dbg !12454 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12455, !srcloc !12457
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12458
  ret %struct.k_thread* %1, !dbg !12459
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12464, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata i32 %1, metadata !12465, metadata !DIExpression()), !dbg !12467
  call void @llvm.dbg.value(metadata i32 %2, metadata !12466, metadata !DIExpression()), !dbg !12467
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12468
  ret void, !dbg !12469
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12474, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i8* %1, metadata !12475, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 %2, metadata !12476, metadata !DIExpression()), !dbg !12477
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12478
  ret void, !dbg !12479
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12480 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12481
  ret void, !dbg !12482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12485, metadata !DIExpression()), !dbg !12486
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12487
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12488
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12489
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12490
  %4 = trunc i32 %0 to i8, !dbg !12491
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12492
  store i8 %4, i8* %5, align 4, !dbg !12493
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12494
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12495
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12496
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12497
  store i8* %8, i8** %9, align 4, !dbg !12498
  ret void, !dbg !12499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12502, metadata !DIExpression()), !dbg !12508
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12509
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12503, metadata !DIExpression()), !dbg !12508
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12510
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12504, metadata !DIExpression()), !dbg !12508
  call void @llvm.dbg.value(metadata i8* null, metadata !12507, metadata !DIExpression()), !dbg !12508
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12511
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12512
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12513
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12514
  ret void, !dbg !12515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !12516 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12520, metadata !DIExpression()), !dbg !12521
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12522
  ret i8* %2, !dbg !12523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12529, metadata !DIExpression()), !dbg !12530
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12531
  %3 = load i8, i8* %2, align 1, !dbg !12532
  %4 = and i8 %3, -5, !dbg !12532
  store i8 %4, i8* %2, align 1, !dbg !12532
  ret void, !dbg !12533
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12534 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12537
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12538
  %3 = ptrtoint i8* %2 to i32, !dbg !12547
  %4 = add i32 %3, 2048, !dbg !12548
  call void @llvm.dbg.value(metadata i32 %4, metadata !12542, metadata !DIExpression()) #23, !dbg !12549
  call void @llvm.dbg.value(metadata i32 %4, metadata !12550, metadata !DIExpression()) #23, !dbg !12553
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12555, !srcloc !12556
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12557
  %6 = or i32 %5, 512, !dbg !12557
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12557
  tail call fastcc void @__NVIC_SetPriority.122(i32 noundef -2, i32 noundef 255) #25, !dbg !12558
  tail call fastcc void @__NVIC_SetPriority.122(i32 noundef -5, i32 noundef 0) #25, !dbg !12561
  tail call fastcc void @__NVIC_SetPriority.122(i32 noundef -12, i32 noundef 0) #25, !dbg !12562
  tail call fastcc void @__NVIC_SetPriority.122(i32 noundef -11, i32 noundef 0) #25, !dbg !12563
  tail call fastcc void @__NVIC_SetPriority.122(i32 noundef -10, i32 noundef 0) #25, !dbg !12564
  tail call fastcc void @__NVIC_SetPriority.122(i32 noundef -4, i32 noundef 0) #25, !dbg !12565
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12566
  %8 = or i32 %7, 458752, !dbg !12566
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12566
  tail call void @z_arm_fault_init() #25, !dbg !12567
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12568
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12569
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12572
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12573
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12574
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12575
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !12575
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12536, metadata !DIExpression()), !dbg !12576
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12577
  call void @z_device_state_init() #25, !dbg !12578
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12579
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12580
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12581
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12582
  unreachable, !dbg !12582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2123, metadata !DIExpression()), !dbg !12583
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12584
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12584
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2124, metadata !DIExpression()), !dbg !12583
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2124, metadata !DIExpression()), !dbg !12583
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12585
  br i1 %7, label %8, label %35, !dbg !12586

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2124, metadata !DIExpression()), !dbg !12583
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12587
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12587
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2134, metadata !DIExpression()), !dbg !12588
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12589
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12589
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12590
  call void @llvm.dbg.value(metadata i32 %14, metadata !2138, metadata !DIExpression()), !dbg !12588
  %15 = icmp eq %struct.device* %11, null, !dbg !12591
  br i1 %15, label %32, label %16, !dbg !12593

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12594
  br i1 %17, label %26, label %18, !dbg !12597

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12598
  call void @llvm.dbg.value(metadata i32 %19, metadata !2138, metadata !DIExpression()), !dbg !12588
  %20 = icmp ult i32 %19, 255, !dbg !12600
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12600
  call void @llvm.dbg.value(metadata i32 %21, metadata !2138, metadata !DIExpression()), !dbg !12588
  %22 = trunc i32 %21 to i8, !dbg !12601
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12602
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12602
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12603
  store i8 %22, i8* %25, align 1, !dbg !12604
  br label %26, !dbg !12605

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12606
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12606
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12607
  %30 = load i8, i8* %29, align 1, !dbg !12608
  %31 = or i8 %30, 1, !dbg !12608
  store i8 %31, i8* %29, align 1, !dbg !12608
  br label %32, !dbg !12609

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12610
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2124, metadata !DIExpression()), !dbg !12583
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12585
  br i1 %34, label %8, label %35, !dbg !12586, !llvm.loop !12611

35:                                               ; preds = %32, %1
  ret void, !dbg !12613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.122(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12616, metadata !DIExpression()), !dbg !12618
  call void @llvm.dbg.value(metadata i32 %1, metadata !12617, metadata !DIExpression()), !dbg !12618
  %3 = trunc i32 %1 to i8, !dbg !12619
  %4 = shl i8 %3, 4, !dbg !12619
  %5 = and i32 %0, 15, !dbg !12622
  %6 = add nsw i32 %5, -4, !dbg !12623
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12624
  store volatile i8 %4, i8* %7, align 1, !dbg !12625
  ret void, !dbg !12626
}

; Function Attrs: optsize
declare !dbg !12627 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12631, metadata !DIExpression()), !dbg !12632
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12633
  store i8 1, i8* %2, align 1, !dbg !12634
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12635
  store i8 1, i8* %3, align 4, !dbg !12636
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12637
  store i32 0, i32* %4, align 4, !dbg !12638
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12639
  store i32 0, i32* %5, align 4, !dbg !12640
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12641
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12642
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12643
  ret void, !dbg !12644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12645 {
  tail call void @z_sched_init() #25, !dbg !12650
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12651
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i32 0, i32 0)) #25, !dbg !12652
  call void @llvm.dbg.value(metadata i8* %1, metadata !12649, metadata !DIExpression()), !dbg !12653
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12654
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12655
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12656
  ret i8* %1, !dbg !12657
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12662, metadata !DIExpression()), !dbg !12663
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12664
  unreachable, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12668, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i8* %1, metadata !12669, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i8* %2, metadata !12670, metadata !DIExpression()), !dbg !12671
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12672
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12673
  tail call void @boot_banner() #25, !dbg !12674
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12675
  tail call void @z_init_static_threads() #25, !dbg !12676
  tail call void @main() #25, !dbg !12677
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12678
  %5 = and i8 %4, -2, !dbg !12678
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12678
  ret void, !dbg !12679
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !12680 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12690, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i8* %1, metadata !12691, metadata !DIExpression()), !dbg !12692
  ret void, !dbg !12693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !12694 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12696, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata i8* %1, metadata !12697, metadata !DIExpression()), !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12700 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12701, !srcloc !12708
  call void @llvm.dbg.value(metadata i32 %1, metadata !12704, metadata !DIExpression()) #23, !dbg !12709
  %2 = icmp ne i32 %1, 0, !dbg !12710
  ret i1 %2, !dbg !12711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12712 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12713
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12714
  %3 = load i8, i8* %2, align 4, !dbg !12715
  %4 = or i8 %3, 1, !dbg !12715
  store i8 %4, i8* %2, align 4, !dbg !12715
  ret void, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12717 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12718
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12719
  %3 = load i8, i8* %2, align 4, !dbg !12720
  %4 = and i8 %3, -2, !dbg !12720
  store i8 %4, i8* %2, align 4, !dbg !12720
  ret void, !dbg !12721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12722 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12723
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12724
  %3 = load i8, i8* %2, align 4, !dbg !12724
  %4 = and i8 %3, 1, !dbg !12725
  %5 = icmp ne i8 %4, 0, !dbg !12726
  ret i1 %5, !dbg !12727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !12728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12732, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i8* %1, metadata !12733, metadata !DIExpression()), !dbg !12734
  ret i32 -88, !dbg !12735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12740, metadata !DIExpression()), !dbg !12741
  ret i8* null, !dbg !12742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !12743 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12747, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.value(metadata i8* %1, metadata !12748, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.value(metadata i32 %2, metadata !12749, metadata !DIExpression()), !dbg !12750
  ret i32 -88, !dbg !12751
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2145 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2261, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i8* %1, metadata !2262, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 %2, metadata !2263, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 0, metadata !2264, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i8 undef, metadata !2266, metadata !DIExpression()), !dbg !12752
  %4 = icmp eq i8* %1, null, !dbg !12753
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12755
  br i1 %6, label %46, label %7, !dbg !12755

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12756
  %9 = load i8, i8* %8, align 1, !dbg !12756
  call void @llvm.dbg.value(metadata i8 %9, metadata !2266, metadata !DIExpression()), !dbg !12752
  %10 = add i32 %2, -1, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %10, metadata !2263, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i8 0, metadata !2267, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i8 %9, metadata !2266, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 0, metadata !2264, metadata !DIExpression()), !dbg !12752
  %11 = icmp eq i8 %9, 0, !dbg !12759
  br i1 %11, label %12, label %15, !dbg !12761

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12762
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12763
  store i8 0, i8* %14, align 1, !dbg !12764
  br label %46, !dbg !12765

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2267, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i8 %17, metadata !2266, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 %18, metadata !2264, metadata !DIExpression()), !dbg !12752
  %19 = zext i8 %17 to i32, !dbg !12766
  %20 = zext i8 %16 to i32, !dbg !12767
  %21 = shl nuw i32 1, %20, !dbg !12767
  call void @llvm.dbg.value(metadata i32 %21, metadata !2265, metadata !DIExpression()), !dbg !12752
  %22 = and i32 %21, %19, !dbg !12769
  %23 = icmp eq i32 %22, 0, !dbg !12771
  br i1 %23, label %42, label %24, !dbg !12772

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12773
  %26 = sub i32 %10, %18, !dbg !12774
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12775
  %28 = load i8*, i8** %27, align 4, !dbg !12775
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12776
  %30 = load i32, i32* %29, align 4, !dbg !12776
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !12777
  %32 = add i32 %31, %18, !dbg !12778
  call void @llvm.dbg.value(metadata i32 %32, metadata !2264, metadata !DIExpression()), !dbg !12752
  %33 = trunc i32 %21 to i8, !dbg !12779
  %34 = xor i8 %33, -1, !dbg !12779
  %35 = and i8 %17, %34, !dbg !12779
  call void @llvm.dbg.value(metadata i8 %35, metadata !2266, metadata !DIExpression()), !dbg !12752
  %36 = icmp eq i8 %35, 0, !dbg !12780
  br i1 %36, label %12, label %37, !dbg !12782

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12783
  %39 = sub i32 %10, %32, !dbg !12785
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !12786
  %41 = add i32 %40, %32, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %41, metadata !2264, metadata !DIExpression()), !dbg !12752
  br label %42, !dbg !12788

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12752
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12752
  call void @llvm.dbg.value(metadata i8 %44, metadata !2266, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 %43, metadata !2264, metadata !DIExpression()), !dbg !12752
  %45 = add i8 %16, 1, !dbg !12789
  call void @llvm.dbg.value(metadata i8 %45, metadata !2267, metadata !DIExpression()), !dbg !12758
  br label %15, !dbg !12761

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.124, i32 0, i32 0), %3 ], !dbg !12752
  ret i8* %47, !dbg !12790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12791 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12795, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %1, metadata !12796, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i8* %2, metadata !12797, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %3, metadata !12798, metadata !DIExpression()), !dbg !12800
  %5 = icmp ult i32 %1, %3, !dbg !12801
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12801
  call void @llvm.dbg.value(metadata i32 %6, metadata !12799, metadata !DIExpression()), !dbg !12800
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12802
  ret i32 %6, !dbg !12803
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12804 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12808, metadata !DIExpression()), !dbg !12809
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12810
  ret void, !dbg !12811
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12812 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12821, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12822, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i32 %2, metadata !12823, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12824, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i8* %4, metadata !12825, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i8* %5, metadata !12826, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i8* %6, metadata !12827, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i32 %7, metadata !12828, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i32 %8, metadata !12829, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata i8* undef, metadata !12830, metadata !DIExpression()), !dbg !12832
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12833
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !12834
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12835
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !12836
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !12837
  call void @llvm.dbg.value(metadata i8* %13, metadata !12831, metadata !DIExpression()), !dbg !12832
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12838
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12839
  store i8* null, i8** %14, align 4, !dbg !12840
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12841
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12841
  br i1 %16, label %20, label %17, !dbg !12843

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12844
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12844
  br label %20, !dbg !12845

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12832
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12846
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12848
  ret i8* %13, !dbg !12849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12850 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12855, metadata !DIExpression()), !dbg !12856
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12857
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !12858
  ret void, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12865, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %1, metadata !12866, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %2, metadata !12867, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %3, metadata !12868, metadata !DIExpression()), !dbg !12869
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12870
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12871
  %6 = trunc i32 %3 to i8, !dbg !12872
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12873
  store i8 %6, i8* %7, align 4, !dbg !12874
  %8 = trunc i32 %2 to i8, !dbg !12875
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12876
  store i8 %8, i8* %9, align 1, !dbg !12877
  %10 = trunc i32 %1 to i8, !dbg !12878
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12879
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12879
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12879
  store i8 %10, i8* %13, align 2, !dbg !12880
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12881
  store i8 0, i8* %14, align 1, !dbg !12882
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !12883
  ret void, !dbg !12884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12889, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12890, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata i32 %2, metadata !12891, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata i32 0, metadata !12896, metadata !DIExpression()), !dbg !12897
  %4 = add i32 %2, 7, !dbg !12898
  %5 = and i32 %4, -8, !dbg !12898
  %6 = add i32 %5, 64, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %6, metadata !12892, metadata !DIExpression()), !dbg !12897
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.134(%struct.z_thread_stack_element* noundef %1) #24, !dbg !12900
  call void @llvm.dbg.value(metadata i8* %7, metadata !12895, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata i32 %5, metadata !12893, metadata !DIExpression()), !dbg !12897
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12901
  call void @llvm.dbg.value(metadata i8* %8, metadata !12894, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata i32 0, metadata !12896, metadata !DIExpression()), !dbg !12897
  %9 = ptrtoint i8* %7 to i32, !dbg !12902
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12903
  store i32 %9, i32* %10, align 4, !dbg !12904
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12905
  store i32 %5, i32* %11, align 4, !dbg !12906
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12907
  store i32 0, i32* %12, align 4, !dbg !12908
  call void @llvm.dbg.value(metadata i8* %8, metadata !12894, metadata !DIExpression()), !dbg !12897
  ret i8* %8, !dbg !12909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.134(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !12910 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12914, metadata !DIExpression()), !dbg !12915
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12916
  ret i8* %2, !dbg !12917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12918 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12923, metadata !DIExpression()), !dbg !12924
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12925
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12926
  ret void, !dbg !12927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12928 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12930, metadata !DIExpression()), !dbg !12931
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12932
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !12933
  ret void, !dbg !12934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12935 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12939, metadata !DIExpression()), !dbg !12940
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12941
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12942
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12943
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12944
  ret void, !dbg !12945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12946 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12951, metadata !DIExpression()), !dbg !12952
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12953
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12954
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12955
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12956
  ret void, !dbg !12957
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12958 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12975, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12966, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12967, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 %2, metadata !12968, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12969, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i8* %4, metadata !12970, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i8* %5, metadata !12971, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i8* %6, metadata !12972, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 %7, metadata !12973, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 %8, metadata !12974, metadata !DIExpression()), !dbg !12976
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !12977
  %13 = icmp eq i64 %11, -1, !dbg !12978
  br i1 %13, label %15, label %14, !dbg !12980

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !12981
  br label %15, !dbg !12983

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12985 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12989, metadata !DIExpression()), !dbg !12991
  %4 = icmp eq i64 %3, 0, !dbg !12992
  br i1 %4, label %5, label %6, !dbg !12994

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12995
  br label %7, !dbg !12997

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12998
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13005, metadata !DIExpression()), !dbg !13006
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13007, !srcloc !13009
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13010
  ret void, !dbg !13011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13012 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13015, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13014, metadata !DIExpression()), !dbg !13016
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13017
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13018
  ret void, !dbg !13019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13020 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13022, metadata !DIExpression()), !dbg !13042
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13043

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13044
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13040, metadata !DIExpression()), !dbg !13045
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13046

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13022, metadata !DIExpression()), !dbg !13042
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13047
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13047
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13050
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13050
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13051
  %9 = load i32, i32* %8, align 4, !dbg !13051
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13052
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13052
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13053
  %13 = load i8*, i8** %12, align 4, !dbg !13053
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13054
  %15 = load i8*, i8** %14, align 4, !dbg !13054
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13055
  %17 = load i8*, i8** %16, align 4, !dbg !13055
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13056
  %19 = load i32, i32* %18, align 4, !dbg !13056
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13057
  %21 = load i32, i32* %20, align 4, !dbg !13057
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !13058
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13059
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13060
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13061
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13061
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13062
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13022, metadata !DIExpression()), !dbg !13042
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13063
  br i1 %27, label %2, label %1, !dbg !13043, !llvm.loop !13065

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !13044
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13040, metadata !DIExpression()), !dbg !13045
  br label %29, !dbg !13046

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !13067
  ret void, !dbg !13068

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13040, metadata !DIExpression()), !dbg !13045
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13069
  %33 = load i32, i32* %32, align 4, !dbg !13069
  %34 = icmp eq i32 %33, -1, !dbg !13073
  br i1 %34, label %43, label %35, !dbg !13074

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13075
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13075
  %38 = icmp sgt i32 %33, 0, !dbg !13077
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13077
  %40 = zext i32 %39 to i64, !dbg !13077
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.137(i64 noundef %40) #24, !dbg !13077
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13078
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !13078
  br label %43, !dbg !13079

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13080
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13040, metadata !DIExpression()), !dbg !13045
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13081
  br i1 %45, label %30, label %29, !dbg !13046, !llvm.loop !13083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.137(i64 noundef %0) unnamed_addr #12 !dbg !13085 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13087, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i64 %0, metadata !13089, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32 1000, metadata !13092, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32 10000, metadata !13093, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8 1, metadata !13094, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8 0, metadata !13095, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8 1, metadata !13096, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8 0, metadata !13097, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8 1, metadata !13098, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i8 0, metadata !13099, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i64 0, metadata !13100, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i64 0, metadata !13100, metadata !DIExpression()), !dbg !13104
  %2 = mul i64 %0, 10, !dbg !13106
  ret i64 %2, !dbg !13112
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !13113 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13115, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i8* %1, metadata !13116, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i8* %2, metadata !13117, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.value(metadata i8* %3, metadata !13118, metadata !DIExpression()), !dbg !13119
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13120
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13121
  %7 = load i8, i8* %6, align 4, !dbg !13122
  %8 = or i8 %7, 4, !dbg !13122
  store i8 %8, i8* %6, align 4, !dbg !13122
  tail call void @z_thread_essential_clear() #24, !dbg !13123
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13124
  unreachable, !dbg !13124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !13125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13129, metadata !DIExpression()), !dbg !13130
  ret i32 -134, !dbg !13131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !13132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13136, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i32 %1, metadata !13137, metadata !DIExpression()), !dbg !13138
  ret i32 -134, !dbg !13139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !13140 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13147, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13148, metadata !DIExpression()), !dbg !13149
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13150
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13152
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13149
  ret i32 %6, !dbg !13153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !13154 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13158, metadata !DIExpression()), !dbg !13159
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13160
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13159
  ret i32 %3, !dbg !13162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13163 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13165
  ret void, !dbg !13166
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13169, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i8* %1, metadata !13170, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i8* %2, metadata !13171, metadata !DIExpression()), !dbg !13172
  br label %4, !dbg !13173

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13174, !srcloc !13181
  call void @llvm.dbg.value(metadata i32 undef, metadata !13177, metadata !DIExpression()) #23, !dbg !13182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13178, metadata !DIExpression()) #23, !dbg !13182
  tail call fastcc void @k_cpu_idle() #24, !dbg !13183
  br label %4, !dbg !13173, !llvm.loop !13184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13186 {
  tail call void @arch_cpu_idle() #25, !dbg !13187
  ret void, !dbg !13188
}

; Function Attrs: optsize
declare !dbg !13189 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #4 !dbg !13190 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13201, metadata !DIExpression()), !dbg !13202
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13203
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13204
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13205
  store i32 0, i32* %3, align 4, !dbg !13206
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13207
  tail call fastcc void @z_waitq_init.140(%union.anon* noundef %4) #24, !dbg !13208
  ret i32 0, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.140(%union.anon* noundef %0) unnamed_addr #4 !dbg !13210 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13214, metadata !DIExpression()), !dbg !13215
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13216
  tail call fastcc void @sys_dlist_init.141(%struct._dnode* noundef %2) #24, !dbg !13217
  ret void, !dbg !13218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.141(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13219 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13224, metadata !DIExpression()), !dbg !13225
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13226
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13227
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13228
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13229
  ret void, !dbg !13230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13231 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13240, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13239, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata i8 0, metadata !13247, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13253, metadata !DIExpression()) #23, !dbg !13260
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13262, !srcloc !13268
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %5, metadata !13265, metadata !DIExpression()) #23, !dbg !13269
  call void @llvm.dbg.value(metadata i32 undef, metadata !13266, metadata !DIExpression()) #23, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %5, metadata !13259, metadata !DIExpression()) #23, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %5, metadata !13242, metadata !DIExpression()), !dbg !13252
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13270
  %7 = load i32, i32* %6, align 4, !dbg !13270
  %8 = icmp eq i32 %7, 0, !dbg !13270
  br i1 %8, label %14, label %9, !dbg !13270

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13270
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13270
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13270
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13270
  br i1 %13, label %20, label %29, !dbg !13272, !prof !13273

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13274
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !13276
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !13276
  %18 = load i8, i8* %17, align 2, !dbg !13276
  %19 = sext i8 %18 to i32, !dbg !13274
  br label %23, !dbg !13277

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13278
  %22 = load i32, i32* %21, align 4, !dbg !13278
  br label %23, !dbg !13277

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !13279
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !13277
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13280
  store i32 %25, i32* %26, align 4, !dbg !13281
  %27 = add i32 %7, 1, !dbg !13282
  store i32 %27, i32* %6, align 4, !dbg !13282
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13283
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !13284
  call void @llvm.dbg.value(metadata i32 %5, metadata !13285, metadata !DIExpression()) #23, !dbg !13291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13290, metadata !DIExpression()) #23, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %5, metadata !13293, metadata !DIExpression()) #23, !dbg !13296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13298, !srcloc !13299
  br label %78, !dbg !13300

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !13301
  br i1 %30, label %31, label %32, !dbg !13303, !prof !13304

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !13285, metadata !DIExpression()) #23, !dbg !13305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13290, metadata !DIExpression()) #23, !dbg !13305
  call void @llvm.dbg.value(metadata i32 %5, metadata !13293, metadata !DIExpression()) #23, !dbg !13308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13310, !srcloc !13299
  br label %78, !dbg !13311

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !13312
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !13312
  %35 = load i8, i8* %34, align 2, !dbg !13312
  %36 = sext i8 %35 to i32, !dbg !13313
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !13314
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !13314
  %39 = load i8, i8* %38, align 2, !dbg !13314
  %40 = sext i8 %39 to i32, !dbg !13315
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #24, !dbg !13316
  call void @llvm.dbg.value(metadata i32 %41, metadata !13241, metadata !DIExpression()), !dbg !13252
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #24, !dbg !13317
  br i1 %42, label %43, label %45, !dbg !13319

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #24, !dbg !13320
  call void @llvm.dbg.value(metadata i1 %44, metadata !13247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13252
  br label %45, !dbg !13322

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13247, metadata !DIExpression()), !dbg !13252
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13323
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !13324
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.144, [1 x i32] %48, %union.anon* noundef %47, [1 x i64] %1) #25, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %49, metadata !13248, metadata !DIExpression()), !dbg !13252
  %50 = icmp eq i32 %49, 0, !dbg !13325
  br i1 %50, label %78, label %51, !dbg !13327

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13253, metadata !DIExpression()) #23, !dbg !13328
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13330, !srcloc !13268
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %53, metadata !13265, metadata !DIExpression()) #23, !dbg !13332
  call void @llvm.dbg.value(metadata i32 undef, metadata !13266, metadata !DIExpression()) #23, !dbg !13332
  call void @llvm.dbg.value(metadata i32 %53, metadata !13259, metadata !DIExpression()) #23, !dbg !13328
  call void @llvm.dbg.value(metadata i32 %53, metadata !13242, metadata !DIExpression()), !dbg !13252
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !13333
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !13333
  br i1 %55, label %74, label %56, !dbg !13334, !prof !13304

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef nonnull %47) #24, !dbg !13335
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !13249, metadata !DIExpression()), !dbg !13336
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !13337
  br i1 %58, label %67, label %59, !dbg !13338

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !13339
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !13339
  %62 = load i8, i8* %61, align 2, !dbg !13339
  %63 = sext i8 %62 to i32, !dbg !13340
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13341
  %65 = load i32, i32* %64, align 4, !dbg !13341
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #24, !dbg !13342
  br label %70, !dbg !13338

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13343
  %69 = load i32, i32* %68, align 4, !dbg !13343
  br label %70, !dbg !13338

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !13338
  call void @llvm.dbg.value(metadata i32 %71, metadata !13241, metadata !DIExpression()), !dbg !13252
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #24, !dbg !13344
  %73 = select i1 %72, i1 true, i1 %46, !dbg !13345
  call void @llvm.dbg.value(metadata i1 %73, metadata !13247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13252
  call void @llvm.dbg.value(metadata i8 poison, metadata !13247, metadata !DIExpression()), !dbg !13252
  br i1 %73, label %75, label %77, !dbg !13346

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !13247, metadata !DIExpression()), !dbg !13252
  br i1 %46, label %75, label %77, !dbg !13346

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !13347
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.144, [1 x i32] %76) #25, !dbg !13347
  br label %78, !dbg !13350

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !13285, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13290, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata i32 %53, metadata !13293, metadata !DIExpression()) #23, !dbg !13354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #23, !dbg !13356, !srcloc !13299
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !13252
  ret i32 %79, !dbg !13357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !13358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13362, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 %1, metadata !13363, metadata !DIExpression()), !dbg !13365
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13366
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13366
  call void @llvm.dbg.value(metadata i32 %4, metadata !13364, metadata !DIExpression()), !dbg !13365
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13367
  call void @llvm.dbg.value(metadata i32 %5, metadata !13364, metadata !DIExpression()), !dbg !13365
  ret i32 %5, !dbg !13368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !13369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13373, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %1, metadata !13374, metadata !DIExpression()), !dbg !13375
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13376
  ret i1 %3, !dbg !13377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13378 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13382, metadata !DIExpression()), !dbg !13384
  call void @llvm.dbg.value(metadata i32 %1, metadata !13383, metadata !DIExpression()), !dbg !13384
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13385
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13385
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13387
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13387
  %7 = load i8, i8* %6, align 2, !dbg !13387
  %8 = sext i8 %7 to i32, !dbg !13388
  %9 = icmp eq i32 %8, %1, !dbg !13389
  br i1 %9, label %12, label %10, !dbg !13390

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13391
  br label %12, !dbg !13393

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13384
  ret i1 %13, !dbg !13394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13395 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13399, metadata !DIExpression()), !dbg !13400
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13401
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13402
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13403
  ret %struct.k_thread* %4, !dbg !13404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13405 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13409, metadata !DIExpression()), !dbg !13410
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13411
  br i1 %2, label %6, label %3, !dbg !13411

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13412
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13412
  br label %6, !dbg !13411

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13411
  ret %struct._dnode* %7, !dbg !13413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13414 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13418, metadata !DIExpression()), !dbg !13419
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13420
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13420
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13421
  ret i1 %4, !dbg !13422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !13423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13425, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.value(metadata i32 %1, metadata !13426, metadata !DIExpression()), !dbg !13427
  %3 = icmp slt i32 %0, %1, !dbg !13428
  ret i1 %3, !dbg !13429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #12 !dbg !13430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13432, metadata !DIExpression()), !dbg !13433
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13434
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13434
  ret i32 %3, !dbg !13435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #12 !dbg !13436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13440, metadata !DIExpression()), !dbg !13441
  %2 = icmp sgt i32 %0, -128, !dbg !13442
  ret i1 %2, !dbg !13443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13444 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13446, metadata !DIExpression()), !dbg !13450
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13451
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !13451
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13451
  br i1 %4, label %31, label %5, !dbg !13453

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13454
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !13454
  br i1 %7, label %8, label %31, !dbg !13456

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13457
  %10 = load i32, i32* %9, align 4, !dbg !13457
  %11 = icmp ugt i32 %10, 1, !dbg !13459
  br i1 %11, label %12, label %14, !dbg !13460

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !13461
  store i32 %13, i32* %9, align 4, !dbg !13461
  br label %31, !dbg !13463

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13253, metadata !DIExpression()) #23, !dbg !13464
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13466, !srcloc !13268
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13466
  call void @llvm.dbg.value(metadata i32 %16, metadata !13265, metadata !DIExpression()) #23, !dbg !13468
  call void @llvm.dbg.value(metadata i32 undef, metadata !13266, metadata !DIExpression()) #23, !dbg !13468
  call void @llvm.dbg.value(metadata i32 %16, metadata !13259, metadata !DIExpression()) #23, !dbg !13464
  call void @llvm.dbg.value(metadata i32 %16, metadata !13448, metadata !DIExpression()), !dbg !13450
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13469
  %18 = load i32, i32* %17, align 4, !dbg !13469
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #24, !dbg !13470
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13471
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %20) #25, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13447, metadata !DIExpression()), !dbg !13450
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !13473
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !13474
  br i1 %22, label %30, label %23, !dbg !13476

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !13477
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !13477
  %26 = load i8, i8* %25, align 2, !dbg !13477
  %27 = sext i8 %26 to i32, !dbg !13479
  store i32 %27, i32* %17, align 4, !dbg !13480
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !13481, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.value(metadata i32 0, metadata !13486, metadata !DIExpression()), !dbg !13487
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !13489
  store i32 0, i32* %28, align 4, !dbg !13490
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #25, !dbg !13491
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13492
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.144, [1 x i32] %29) #25, !dbg !13492
  br label %31, !dbg !13493

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %16, metadata !13285, metadata !DIExpression()) #23, !dbg !13496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13290, metadata !DIExpression()) #23, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %16, metadata !13293, metadata !DIExpression()) #23, !dbg !13498
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !13500, !srcloc !13299
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !13450
  ret i32 %32, !dbg !13501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13506, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13507, metadata !DIExpression()), !dbg !13510
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13511
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13511
  %5 = load i8, i8* %4, align 2, !dbg !13511
  call void @llvm.dbg.value(metadata i8 %5, metadata !13508, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13510
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13512
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13512
  %8 = load i8, i8* %7, align 2, !dbg !13512
  call void @llvm.dbg.value(metadata i8 %8, metadata !13509, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13510
  %9 = icmp eq i8 %8, %5, !dbg !13513
  %10 = sext i8 %5 to i32, !dbg !13515
  %11 = sext i8 %8 to i32, !dbg !13515
  %12 = sub nsw i32 %11, %10, !dbg !13515
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13515
  ret i32 %13, !dbg !13516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13521, metadata !DIExpression()), !dbg !13522
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13523
  %3 = icmp eq i32 %2, 0, !dbg !13525
  br i1 %3, label %8, label %4, !dbg !13526

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13527
  %6 = add i32 %5, %2, !dbg !13529
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13530
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13531
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13532
  br label %8, !dbg !13533

8:                                                ; preds = %4, %1
  ret void, !dbg !13534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13535 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13539, metadata !DIExpression()), !dbg !13541
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13542
  call void @llvm.dbg.value(metadata i32 %1, metadata !13540, metadata !DIExpression()), !dbg !13541
  ret i32 %1, !dbg !13543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13548, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.value(metadata i32 %1, metadata !13549, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.value(metadata i32 0, metadata !13550, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !13566
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13568, !srcloc !13574
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13568
  call void @llvm.dbg.value(metadata i32 %4, metadata !13571, metadata !DIExpression()) #23, !dbg !13575
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !13575
  call void @llvm.dbg.value(metadata i32 %4, metadata !13565, metadata !DIExpression()) #23, !dbg !13566
  call void @llvm.dbg.value(metadata i32 %4, metadata !13556, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata i32 undef, metadata !13550, metadata !DIExpression()), !dbg !13558
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13576
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !13579
  %6 = icmp sgt i32 %0, 0, !dbg !13580
  %7 = icmp sgt i32 %5, 2, !dbg !13582
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13582
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13582
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13583
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13584
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13585
  call void @llvm.dbg.value(metadata i32 %4, metadata !13586, metadata !DIExpression()) #23, !dbg !13592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %4, metadata !13594, metadata !DIExpression()) #23, !dbg !13597
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13599, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !13550, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata i32 undef, metadata !13550, metadata !DIExpression()), !dbg !13558
  ret void, !dbg !13601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !13602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13604, metadata !DIExpression()), !dbg !13605
  call void @llvm.dbg.value(metadata i32 %0, metadata !13606, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13621
  call void @llvm.dbg.value(metadata i32 1000, metadata !13609, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i32 10000, metadata !13610, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i8 1, metadata !13611, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i1 true, metadata !13612, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13621
  call void @llvm.dbg.value(metadata i1 true, metadata !13613, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13621
  call void @llvm.dbg.value(metadata i8 0, metadata !13614, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i1 true, metadata !13615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13621
  call void @llvm.dbg.value(metadata i1 false, metadata !13616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13621
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !13621
  %2 = mul i32 %0, 10, !dbg !13623
  ret i32 %2, !dbg !13629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13632, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !13635
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13637, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13637
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !13639
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !13639
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !13635
  call void @llvm.dbg.value(metadata i32 %3, metadata !13633, metadata !DIExpression()), !dbg !13634
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13640
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13642
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13643
  br i1 %6, label %7, label %8, !dbg !13644

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !13647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !13647
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !13649
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13651, !srcloc !13600
  br label %24, !dbg !13652

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13653
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !13654
  %10 = icmp eq i32 %9, 0, !dbg !13654
  br i1 %10, label %21, label %11, !dbg !13656

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !13657
  br i1 %12, label %13, label %21, !dbg !13658

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13659
  %15 = icmp sgt i32 %14, %0, !dbg !13662
  br i1 %15, label %19, label %16, !dbg !13663

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13664
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !13664
  call void @llvm.dbg.value(metadata i32 %18, metadata !13633, metadata !DIExpression()), !dbg !13634
  br label %22, !dbg !13666

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13667
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13667
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13669
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13634
  call void @llvm.dbg.value(metadata i32 %23, metadata !13633, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i32 %23, metadata !13586, metadata !DIExpression()) #23, !dbg !13671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !13671
  call void @llvm.dbg.value(metadata i32 %23, metadata !13594, metadata !DIExpression()) #23, !dbg !13673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13675, !srcloc !13600
  br label %24, !dbg !13676

24:                                               ; preds = %22, %7
  ret void, !dbg !13676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13681, metadata !DIExpression()), !dbg !13683
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !13684
  %3 = icmp eq i32 %2, 0, !dbg !13684
  br i1 %3, label %16, label %4, !dbg !13685

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13686
  br i1 %5, label %16, label %6, !dbg !13687

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13688
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13688
  %9 = load i8, i8* %8, align 2, !dbg !13688
  %10 = sext i8 %9 to i32, !dbg !13689
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13690
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.150(i32 noundef %10, i32 noundef %11) #24, !dbg !13691
  br i1 %12, label %16, label %13, !dbg !13692

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !13693
  %15 = xor i1 %14, true, !dbg !13694
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13683
  call void @llvm.dbg.value(metadata i1 %17, metadata !13682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13683
  ret i1 %17, !dbg !13695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13696 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()), !dbg !13702
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13703
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13701, metadata !DIExpression()), !dbg !13702
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !13704
  br i1 %3, label %5, label %4, !dbg !13706

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !13707
  br label %5, !dbg !13709

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13700, metadata !DIExpression()), !dbg !13702
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13710
  ret i32 %6, !dbg !13711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()), !dbg !13716
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13717
  %3 = load i8, i8* %2, align 1, !dbg !13717
  call void @llvm.dbg.value(metadata i8 %3, metadata !13715, metadata !DIExpression()), !dbg !13716
  %4 = and i8 %3, 31, !dbg !13718
  %5 = icmp ne i8 %4, 0, !dbg !13719
  ret i1 %5, !dbg !13720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()), !dbg !13724
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13725
  br i1 %2, label %3, label %7, !dbg !13727

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13728, metadata !DIExpression()) #23, !dbg !13731
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13734
  %5 = load i8, i8* %4, align 1, !dbg !13735
  %6 = and i8 %5, 127, !dbg !13735
  store i8 %6, i8* %4, align 1, !dbg !13735
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13736, metadata !DIExpression()) #23, !dbg !13739
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13743
  br label %7, !dbg !13744

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #23, !dbg !13748
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13750
  %9 = load i8, i8* %8, align 1, !dbg !13751
  %10 = or i8 %9, -128, !dbg !13751
  store i8 %10, i8* %8, align 1, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13752, metadata !DIExpression()) #23, !dbg !13755
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13759, metadata !DIExpression()) #23, !dbg !13767
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13765, metadata !DIExpression()) #23, !dbg !13767
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13769
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13766, metadata !DIExpression()) #23, !dbg !13767
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13771
  br i1 %12, label %23, label %13, !dbg !13769

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13766, metadata !DIExpression()) #23, !dbg !13767
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13773
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13766, metadata !DIExpression()) #23, !dbg !13767
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13774
  %17 = icmp sgt i32 %16, 0, !dbg !13777
  br i1 %17, label %18, label %20, !dbg !13778

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13779
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13781
  br label %25, !dbg !13782

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13771
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13766, metadata !DIExpression()) #23, !dbg !13767
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13771
  br i1 %22, label %23, label %13, !dbg !13769, !llvm.loop !13783

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13785
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13786
  br label %25, !dbg !13787

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13788
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13789
  %28 = zext i1 %27 to i32, !dbg !13789
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !13790
  ret void, !dbg !13791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13792 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13794, metadata !DIExpression()), !dbg !13795
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !13796
  ret i1 %2, !dbg !13797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13798 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13800, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13801, metadata !DIExpression()), !dbg !13802
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13803
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !13804
  ret void, !dbg !13805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13806 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13810, metadata !DIExpression()), !dbg !13811
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.148(%struct._dnode* noundef %0) #24, !dbg !13812
  br i1 %2, label %6, label %3, !dbg !13812

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13813
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13813
  br label %6, !dbg !13812

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13812
  ret %struct._dnode* %7, !dbg !13814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13815 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13819, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13820, metadata !DIExpression()), !dbg !13823
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13824
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13824
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13821, metadata !DIExpression()), !dbg !13823
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13825
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13826
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13827
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13828
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13829
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13830
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13831
  ret void, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13837, metadata !DIExpression()), !dbg !13839
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13838, metadata !DIExpression()), !dbg !13839
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13840
  br i1 %3, label %6, label %4, !dbg !13841

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !13842
  br label %6, !dbg !13841

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13841
  ret %struct._dnode* %7, !dbg !13843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13848, metadata !DIExpression()), !dbg !13851
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13849, metadata !DIExpression()), !dbg !13851
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13852
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13852
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13850, metadata !DIExpression()), !dbg !13851
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13853
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13854
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13855
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13856
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13857
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13858
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13859
  ret void, !dbg !13860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13863, metadata !DIExpression()), !dbg !13865
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13866
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13873, metadata !DIExpression()) #23, !dbg !13875
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13876
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13877
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13877
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13864, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13878, metadata !DIExpression()) #23, !dbg !13884
  call void @llvm.dbg.value(metadata i32 %0, metadata !13883, metadata !DIExpression()) #23, !dbg !13884
  %6 = icmp eq i32 %0, 0, !dbg !13887
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13889
  br i1 %6, label %8, label %15, !dbg !13890

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13891
  br i1 %9, label %15, label %10, !dbg !13893

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13894
  br i1 %11, label %15, label %12, !dbg !13896

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13897
  %14 = icmp eq i32 %13, 0, !dbg !13897
  br i1 %14, label %18, label %15, !dbg !13899

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13900
  br i1 %16, label %18, label %17, !dbg !13903

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13904
  br label %18, !dbg !13906

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13889
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13889
  ret void, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13908 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13912, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13913, metadata !DIExpression()), !dbg !13915
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef %0) #24, !dbg !13916
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13914, metadata !DIExpression()), !dbg !13915
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13913, metadata !DIExpression()), !dbg !13915
  ret %struct.k_thread* %3, !dbg !13917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13920, metadata !DIExpression()), !dbg !13921
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13922
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13923
  %4 = xor i1 %3, true, !dbg !13924
  ret i1 %4, !dbg !13925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13926 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13928, metadata !DIExpression()), !dbg !13929
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13930
  %3 = load i16, i16* %2, align 2, !dbg !13930
  %4 = icmp ult i16 %3, 128, !dbg !13931
  %5 = zext i1 %4 to i32, !dbg !13931
  ret i32 %5, !dbg !13932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13933 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13939, metadata !DIExpression()), !dbg !13940
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13941
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !13942
  %4 = xor i1 %3, true, !dbg !13943
  ret i1 %4, !dbg !13944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13945 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13951, metadata !DIExpression()), !dbg !13952
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13953
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13953
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13954
  ret i1 %4, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13958, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13959, metadata !DIExpression()), !dbg !13960
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13961
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13961
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13962
  br i1 %5, label %9, label %6, !dbg !13963

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13964
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13964
  br label %9, !dbg !13963

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13963
  ret %struct._dnode* %10, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.148(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13966 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13970, metadata !DIExpression()), !dbg !13971
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13972
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13972
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13973
  ret i1 %4, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13979, metadata !DIExpression()), !dbg !13982
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13983
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13983
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13980, metadata !DIExpression()), !dbg !13982
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13984
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13984
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13981, metadata !DIExpression()), !dbg !13982
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13985
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13986
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13987
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13988
  tail call fastcc void @sys_dnode_init.149(%struct._dnode* noundef %0) #24, !dbg !13989
  ret void, !dbg !13990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.149(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13993, metadata !DIExpression()), !dbg !13994
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13995
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13996
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13997
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13998
  ret void, !dbg !13999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14004, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata i32 128, metadata !14005, metadata !DIExpression()), !dbg !14006
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14007
  %3 = load i8, i8* %2, align 1, !dbg !14007
  %4 = icmp slt i8 %3, 0, !dbg !14008
  ret i1 %4, !dbg !14009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.150(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !14010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14012, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.value(metadata i32 %1, metadata !14013, metadata !DIExpression()), !dbg !14014
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.151(i32 noundef %0, i32 noundef %1) #24, !dbg !14015
  ret i1 %3, !dbg !14016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !14017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14019, metadata !DIExpression()), !dbg !14020
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14021
  ret i1 %2, !dbg !14022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.151(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !14023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14025, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i32 %1, metadata !14026, metadata !DIExpression()), !dbg !14027
  %3 = icmp slt i32 %0, %1, !dbg !14028
  ret i1 %3, !dbg !14029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14030 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14032, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 0, metadata !14033, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14038
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14040, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14040
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14042
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %3, metadata !14035, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14037
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14043
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14048
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14050
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14052, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14033, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14037
  ret void, !dbg !14053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14056, metadata !DIExpression()), !dbg !14057
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14058
  br i1 %2, label %24, label %3, !dbg !14060

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14061
  br i1 %4, label %5, label %24, !dbg !14062

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #23, !dbg !14063
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14066
  %7 = load i8, i8* %6, align 1, !dbg !14067
  %8 = or i8 %7, -128, !dbg !14067
  store i8 %8, i8* %6, align 1, !dbg !14067
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13752, metadata !DIExpression()) #23, !dbg !14068
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13759, metadata !DIExpression()) #23, !dbg !14070
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13765, metadata !DIExpression()) #23, !dbg !14070
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14072
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13766, metadata !DIExpression()) #23, !dbg !14070
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14073
  br i1 %10, label %21, label %11, !dbg !14072

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13766, metadata !DIExpression()) #23, !dbg !14070
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14074
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13766, metadata !DIExpression()) #23, !dbg !14070
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !14075
  %15 = icmp sgt i32 %14, 0, !dbg !14076
  br i1 %15, label %16, label %18, !dbg !14077

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14078
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !14079
  br label %23, !dbg !14080

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !14073
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13766, metadata !DIExpression()) #23, !dbg !14070
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14073
  br i1 %20, label %21, label %11, !dbg !14072, !llvm.loop !14081

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14083
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !14084
  br label %23, !dbg !14085

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14086
  br label %24, !dbg !14087

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14089 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14091, metadata !DIExpression()), !dbg !14092
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14093
  br i1 %2, label %6, label %3, !dbg !14094

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14095
  %5 = xor i1 %4, true, !dbg !14094
  br label %6, !dbg !14094

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14099, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.value(metadata i32 0, metadata !14100, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14105
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14107, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14107
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !14109
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !14105
  call void @llvm.dbg.value(metadata i32 %3, metadata !14102, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()), !dbg !14104
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14110
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14117, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14100, metadata !DIExpression()), !dbg !14104
  call void @llvm.dbg.value(metadata i32 undef, metadata !14100, metadata !DIExpression()), !dbg !14104
  ret void, !dbg !14118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14119 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14121, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14124
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14126, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14126
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %3, metadata !14122, metadata !DIExpression()), !dbg !14123
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14129
  br i1 %4, label %5, label %6, !dbg !14131

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14132
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14137, !srcloc !13600
  br label %8, !dbg !14138

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.156(%struct.k_thread* noundef %0) #24, !dbg !14139
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14140
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14141
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !14141
  br label %8, !dbg !14142

8:                                                ; preds = %6, %5
  ret void, !dbg !14142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14145, metadata !DIExpression()), !dbg !14146
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14147
  %3 = load i8, i8* %2, align 1, !dbg !14147
  %4 = and i8 %3, 4, !dbg !14148
  %5 = icmp eq i8 %4, 0, !dbg !14149
  ret i1 %5, !dbg !14150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.156(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14153, metadata !DIExpression()), !dbg !14154
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14155
  %3 = load i8, i8* %2, align 1, !dbg !14156
  %4 = and i8 %3, -5, !dbg !14156
  store i8 %4, i8* %2, align 1, !dbg !14156
  ret void, !dbg !14157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14158 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14161, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14160, metadata !DIExpression()), !dbg !14162
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14163
  br i1 %4, label %5, label %9, !dbg !14165

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14166
  br i1 %6, label %7, label %9, !dbg !14167

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14168, metadata !DIExpression()) #23, !dbg !14174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14173, metadata !DIExpression()) #23, !dbg !14174
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14177
  br label %10, !dbg !14178

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14179
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14184, !srcloc !13600
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14190, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 %0, metadata !14192, metadata !DIExpression()), !dbg !14197
  %2 = icmp eq i32 %0, 0, !dbg !14199
  br i1 %2, label %3, label %6, !dbg !14200

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14201, !srcloc !14208
  call void @llvm.dbg.value(metadata i32 %4, metadata !14204, metadata !DIExpression()) #23, !dbg !14209
  %5 = icmp eq i32 %4, 0, !dbg !14210
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14191
  ret i1 %7, !dbg !14211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14212 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14215
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14214, metadata !DIExpression()), !dbg !14216
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14217
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14218
  ret i1 %3, !dbg !14219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14222, metadata !DIExpression()), !dbg !14224
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14225
  call void @llvm.dbg.value(metadata i32 %2, metadata !14223, metadata !DIExpression()), !dbg !14224
  ret i32 %2, !dbg !14226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()), !dbg !14233
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14234
  call void @llvm.dbg.value(metadata i32 0, metadata !14230, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14236
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14238, !srcloc !13574
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14238
  call void @llvm.dbg.value(metadata i32 %4, metadata !13571, metadata !DIExpression()) #23, !dbg !14240
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14240
  call void @llvm.dbg.value(metadata i32 %4, metadata !13565, metadata !DIExpression()) #23, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %4, metadata !14232, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14230, metadata !DIExpression()), !dbg !14235
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14241
  br i1 %5, label %6, label %10, !dbg !14245

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13728, metadata !DIExpression()) #23, !dbg !14246
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14249
  %8 = load i8, i8* %7, align 1, !dbg !14250
  %9 = and i8 %8, 127, !dbg !14250
  store i8 %9, i8* %7, align 1, !dbg !14250
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13736, metadata !DIExpression()) #23, !dbg !14251
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14253
  br label %10, !dbg !14254

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14255
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14256
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14257
  %13 = zext i1 %12 to i32, !dbg !14257
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !14258
  call void @llvm.dbg.value(metadata i32 %4, metadata !13586, metadata !DIExpression()) #23, !dbg !14259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14259
  call void @llvm.dbg.value(metadata i32 %4, metadata !13594, metadata !DIExpression()) #23, !dbg !14261
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14263, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14230, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14230, metadata !DIExpression()), !dbg !14235
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14264
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14266
  br i1 %15, label %16, label %17, !dbg !14267

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14268
  br label %17, !dbg !14270

17:                                               ; preds = %16, %10
  ret void, !dbg !14271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14274, metadata !DIExpression()), !dbg !14275
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14276
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14277
  ret i32 %3, !dbg !14278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14281, metadata !DIExpression()), !dbg !14282
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14283
  %3 = load i8, i8* %2, align 1, !dbg !14284
  %4 = or i8 %3, 16, !dbg !14284
  store i8 %4, i8* %2, align 1, !dbg !14284
  ret void, !dbg !14285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14286 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14287, !srcloc !13574
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %2, metadata !13571, metadata !DIExpression()) #23, !dbg !14289
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14289
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14290
  ret void, !dbg !14291
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14294, metadata !DIExpression()), !dbg !14295
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14296
  br i1 %2, label %3, label %5, !dbg !14298

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14299
  br label %6, !dbg !14301

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13594, metadata !DIExpression()) #23, !dbg !14302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14305, !srcloc !13600
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14309, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14312
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14314, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14314
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14316
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !14312
  call void @llvm.dbg.value(metadata i32 %3, metadata !14310, metadata !DIExpression()), !dbg !14311
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14317
  br i1 %4, label %6, label %5, !dbg !14319

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14325, !srcloc !13600
  br label %8, !dbg !14326

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14327
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14328
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14329
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !14329
  br label %8, !dbg !14330

8:                                                ; preds = %6, %5
  ret void, !dbg !14330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14331 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14333, metadata !DIExpression()), !dbg !14334
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14335
  %3 = load i8, i8* %2, align 1, !dbg !14335
  %4 = and i8 %3, 16, !dbg !14336
  %5 = icmp ne i8 %4, 0, !dbg !14337
  ret i1 %5, !dbg !14338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14341, metadata !DIExpression()), !dbg !14342
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14343
  %3 = load i8, i8* %2, align 1, !dbg !14344
  %4 = and i8 %3, -17, !dbg !14344
  store i8 %4, i8* %2, align 1, !dbg !14344
  ret void, !dbg !14345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14346 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14356, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14354, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14355, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 0, metadata !14357, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14362
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14364, !srcloc !13574
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %5, metadata !13571, metadata !DIExpression()) #23, !dbg !14366
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %5, metadata !13565, metadata !DIExpression()) #23, !dbg !14362
  call void @llvm.dbg.value(metadata i32 %5, metadata !14359, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()), !dbg !14361
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !14367
  call void @llvm.dbg.value(metadata i32 %5, metadata !13586, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %5, metadata !13594, metadata !DIExpression()) #23, !dbg !14372
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !14374, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14357, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()), !dbg !14361
  ret void, !dbg !14375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14376 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14380, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14378, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14379, metadata !DIExpression()), !dbg !14381
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !14382
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14383
  ret void, !dbg !14384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()), !dbg !14391
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14390, metadata !DIExpression()), !dbg !14391
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14392
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14393
  %3 = icmp eq %union.anon* %1, null, !dbg !14394
  br i1 %3, label %21, label %4, !dbg !14396

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14397
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14399
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14400
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13759, metadata !DIExpression()) #23, !dbg !14401
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13765, metadata !DIExpression()) #23, !dbg !14401
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef nonnull %6) #25, !dbg !14403
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13766, metadata !DIExpression()) #23, !dbg !14401
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14404
  br i1 %8, label %19, label %9, !dbg !14403

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13766, metadata !DIExpression()) #23, !dbg !14401
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14405
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13766, metadata !DIExpression()) #23, !dbg !14401
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !14406
  %13 = icmp sgt i32 %12, 0, !dbg !14407
  br i1 %13, label %14, label %16, !dbg !14408

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14409
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !14410
  br label %21, !dbg !14411

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !14404
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13766, metadata !DIExpression()) #23, !dbg !14401
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14404
  br i1 %18, label %19, label %9, !dbg !14403, !llvm.loop !14412

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14414
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !14415
  br label %21, !dbg !14416

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14418 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14423, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14422, metadata !DIExpression()), !dbg !14424
  %4 = icmp eq i64 %3, -1, !dbg !14425
  br i1 %4, label %6, label %5, !dbg !14427

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.159(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14428
  br label %6, !dbg !14430

6:                                                ; preds = %5, %2
  ret void, !dbg !14431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.159(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14432 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14435, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14434, metadata !DIExpression()), !dbg !14436
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14437
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14438
  ret void, !dbg !14439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14440 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14442, metadata !DIExpression()), !dbg !14450
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14451
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14451
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14443, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.value(metadata i32 0, metadata !14444, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14453
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14455, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !14453
  call void @llvm.dbg.value(metadata i32 undef, metadata !14446, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14444, metadata !DIExpression()), !dbg !14452
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14458
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14459
  %7 = load i8, i8* %6, align 1, !dbg !14459
  %8 = and i8 %7, 40, !dbg !14460
  %9 = icmp eq i8 %8, 0, !dbg !14460
  call void @llvm.dbg.value(metadata i1 %9, metadata !14447, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14461
  br i1 %9, label %10, label %17, !dbg !14462

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14463
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !14463
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !14463
  %14 = icmp eq %union.anon* %13, null, !dbg !14467
  br i1 %14, label %16, label %15, !dbg !14468

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !14469
  br label %16, !dbg !14471

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.156(%struct.k_thread* noundef nonnull %3) #24, !dbg !14472
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !14473
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !14474
  br label %17, !dbg !14475

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14455
  call void @llvm.dbg.value(metadata i32 %18, metadata !13571, metadata !DIExpression()) #23, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %18, metadata !13565, metadata !DIExpression()) #23, !dbg !14453
  call void @llvm.dbg.value(metadata i32 %18, metadata !14446, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #23, !dbg !14476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !14478
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !14480, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14444, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14444, metadata !DIExpression()), !dbg !14452
  ret void, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14485
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14486
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !14487
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14488
  store %union.anon* null, %union.anon** %2, align 8, !dbg !14489
  ret void, !dbg !14490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14491 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14493, metadata !DIExpression()), !dbg !14494
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14495
  %3 = load i8, i8* %2, align 1, !dbg !14496
  %4 = and i8 %3, -3, !dbg !14496
  store i8 %4, i8* %2, align 1, !dbg !14496
  ret void, !dbg !14497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14500, metadata !DIExpression()), !dbg !14501
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14502
  br i1 %2, label %3, label %7, !dbg !14504

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13728, metadata !DIExpression()) #23, !dbg !14505
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14508
  %5 = load i8, i8* %4, align 1, !dbg !14509
  %6 = and i8 %5, 127, !dbg !14509
  store i8 %6, i8* %4, align 1, !dbg !14509
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13736, metadata !DIExpression()) #23, !dbg !14510
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14512
  br label %7, !dbg !14513

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14514
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14515
  %10 = zext i1 %9 to i32, !dbg !14515
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !14516
  ret void, !dbg !14517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14520, metadata !DIExpression()), !dbg !14521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14522
  %3 = load i8, i8* %2, align 1, !dbg !14523
  %4 = or i8 %3, 2, !dbg !14523
  store i8 %4, i8* %2, align 1, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !14525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14527, metadata !DIExpression()), !dbg !14531
  call void @llvm.dbg.value(metadata i32 0, metadata !14528, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14533
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14535, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14535
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !14537
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14537
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata i32 %3, metadata !14530, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()), !dbg !14532
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14538
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14541
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14545, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14528, metadata !DIExpression()), !dbg !14532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()), !dbg !14532
  ret void, !dbg !14546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14547 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14553, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 %0, metadata !14551, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14552, metadata !DIExpression()), !dbg !14558
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14559
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !14560
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14561
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14562
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14563
  call void @llvm.dbg.value(metadata i32 %6, metadata !14554, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.value(metadata i32 0, metadata !14555, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14565
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14567, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14569
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14569
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !14565
  call void @llvm.dbg.value(metadata i32 undef, metadata !14557, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()), !dbg !14564
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14570
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14574
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14575
  br i1 %10, label %11, label %12, !dbg !14576

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14577
  br label %12, !dbg !14579

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14567
  call void @llvm.dbg.value(metadata i32 %13, metadata !13571, metadata !DIExpression()) #23, !dbg !14569
  call void @llvm.dbg.value(metadata i32 %13, metadata !13565, metadata !DIExpression()) #23, !dbg !14565
  call void @llvm.dbg.value(metadata i32 %13, metadata !14557, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #23, !dbg !14580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14580
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !14582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !14584, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14555, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()), !dbg !14564
  ret i32 %6, !dbg !14585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14586 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14591, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata i64 undef, metadata !14593, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14590, metadata !DIExpression()), !dbg !14594
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14592, metadata !DIExpression()), !dbg !14594
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14595
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14597
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14599, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !14597
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14602
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !14603
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14168, metadata !DIExpression()) #23, !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14173, metadata !DIExpression()) #23, !dbg !14604
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14606
  ret i32 %9, !dbg !14607
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14608 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14612, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14613, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 0, metadata !14614, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14619
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14621, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !14616, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14613, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14614, metadata !DIExpression()), !dbg !14618
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !14624
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14613, metadata !DIExpression()), !dbg !14617
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14627
  br i1 %5, label %7, label %6, !dbg !14629

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !14630
  br label %7, !dbg !14632

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %8, metadata !13571, metadata !DIExpression()) #23, !dbg !14623
  call void @llvm.dbg.value(metadata i32 %8, metadata !13565, metadata !DIExpression()) #23, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %8, metadata !14616, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #23, !dbg !14633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14633
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !14635
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14637, !srcloc !13600
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14613, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14614, metadata !DIExpression()), !dbg !14618
  ret %struct.k_thread* %4, !dbg !14638
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14639 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14641, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata i32 0, metadata !14643, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14648
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14650, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14652
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14652
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata i32 undef, metadata !14643, metadata !DIExpression()), !dbg !14647
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !14653
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14642, metadata !DIExpression()), !dbg !14646
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14656
  br i1 %5, label %8, label %6, !dbg !14658

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !14659
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !14661
  br label %8, !dbg !14662

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14650
  call void @llvm.dbg.value(metadata i32 %9, metadata !13571, metadata !DIExpression()) #23, !dbg !14652
  call void @llvm.dbg.value(metadata i32 %9, metadata !13565, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 %9, metadata !14645, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #23, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !14665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14667, !srcloc !13600
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14642, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata i32 undef, metadata !14643, metadata !DIExpression()), !dbg !14647
  ret %struct.k_thread* %4, !dbg !14668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14671, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14527, metadata !DIExpression()) #23, !dbg !14673
  call void @llvm.dbg.value(metadata i32 0, metadata !14528, metadata !DIExpression()) #23, !dbg !14675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14676
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14678, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14678
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !14680
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14680
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !14676
  call void @llvm.dbg.value(metadata i32 %3, metadata !14530, metadata !DIExpression()) #23, !dbg !14675
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !14675
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14682
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !14684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14686, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14528, metadata !DIExpression()) #23, !dbg !14675
  call void @llvm.dbg.value(metadata i32 undef, metadata !14528, metadata !DIExpression()) #23, !dbg !14675
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14687
  ret void, !dbg !14688
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14689 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14691, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 %1, metadata !14692, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i8 0, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 0, metadata !14694, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14699
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14701, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14696, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i8 poison, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()), !dbg !14698
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14704
  call void @llvm.dbg.value(metadata i1 %6, metadata !14693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14697
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14707

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13728, metadata !DIExpression()) #23, !dbg !14708
  %11 = load i8, i8* %4, align 1, !dbg !14714
  %12 = and i8 %11, 127, !dbg !14714
  store i8 %12, i8* %4, align 1, !dbg !14714
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13736, metadata !DIExpression()) #23, !dbg !14715
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14717
  store i8 %9, i8* %8, align 2, !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #23, !dbg !14719
  %13 = load i8, i8* %4, align 1, !dbg !14721
  %14 = or i8 %13, -128, !dbg !14721
  store i8 %14, i8* %4, align 1, !dbg !14721
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13752, metadata !DIExpression()) #23, !dbg !14722
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13759, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13765, metadata !DIExpression()) #23, !dbg !14724
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14726
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13766, metadata !DIExpression()) #23, !dbg !14724
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14727
  br i1 %16, label %26, label %17, !dbg !14726

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13766, metadata !DIExpression()) #23, !dbg !14724
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13766, metadata !DIExpression()) #23, !dbg !14724
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14729
  %21 = icmp sgt i32 %20, 0, !dbg !14730
  br i1 %21, label %22, label %23, !dbg !14731

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14732
  br label %27, !dbg !14733

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14727
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13766, metadata !DIExpression()) #23, !dbg !14724
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14727
  br i1 %25, label %26, label %17, !dbg !14726, !llvm.loop !14734

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14736
  br label %27, !dbg !14737

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14738
  br label %29, !dbg !14739

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14740
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %30, metadata !13571, metadata !DIExpression()) #23, !dbg !14703
  call void @llvm.dbg.value(metadata i32 %30, metadata !13565, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 %30, metadata !14696, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #23, !dbg !14742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !14744
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !14746, !srcloc !13600
  call void @llvm.dbg.value(metadata i8 poison, metadata !14693, metadata !DIExpression()), !dbg !14697
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()), !dbg !14698
  ret i1 %6, !dbg !14747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14752, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 %1, metadata !14753, metadata !DIExpression()), !dbg !14755
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !14756
  call void @llvm.dbg.value(metadata i1 %3, metadata !14754, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14755
  br i1 %3, label %4, label %12, !dbg !14757

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14759
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14760
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14760
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14760
  %9 = load i8, i8* %8, align 1, !dbg !14760
  %10 = icmp eq i8 %9, 0, !dbg !14761
  br i1 %10, label %11, label %12, !dbg !14762

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14763
  br label %12, !dbg !14765

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14767 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14769, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14773
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14775, !srcloc !13574
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %2, metadata !13571, metadata !DIExpression()) #23, !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14777
  call void @llvm.dbg.value(metadata i32 %2, metadata !13565, metadata !DIExpression()) #23, !dbg !14773
  call void @llvm.dbg.value(metadata i32 %2, metadata !14771, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()), !dbg !14772
  tail call fastcc void @z_sched_lock() #24, !dbg !14778
  call void @llvm.dbg.value(metadata i32 %2, metadata !13586, metadata !DIExpression()) #23, !dbg !14781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14781
  call void @llvm.dbg.value(metadata i32 %2, metadata !13594, metadata !DIExpression()) #23, !dbg !14783
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14785, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14769, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14769, metadata !DIExpression()), !dbg !14772
  ret void, !dbg !14786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14787 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14788
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14789
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14789
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14789
  %5 = load i8, i8* %4, align 1, !dbg !14790
  %6 = add i8 %5, -1, !dbg !14790
  store i8 %6, i8* %4, align 1, !dbg !14790
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14791, !srcloc !14793
  ret void, !dbg !14794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14795 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14797, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !14801
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14803, !srcloc !13574
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %2, metadata !13571, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %2, metadata !13565, metadata !DIExpression()) #23, !dbg !14801
  call void @llvm.dbg.value(metadata i32 %2, metadata !14799, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14797, metadata !DIExpression()), !dbg !14800
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14806
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14809
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14809
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14809
  %7 = load i8, i8* %6, align 1, !dbg !14810
  %8 = add i8 %7, 1, !dbg !14810
  store i8 %8, i8* %6, align 1, !dbg !14810
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %2, metadata !13586, metadata !DIExpression()) #23, !dbg !14812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %2, metadata !13594, metadata !DIExpression()) #23, !dbg !14814
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14816, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 1, metadata !14797, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14797, metadata !DIExpression()), !dbg !14800
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14817
  ret void, !dbg !14818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14819 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14820
  ret %struct.k_thread* %1, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14822 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14826, metadata !DIExpression()), !dbg !14831
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14827, metadata !DIExpression()), !dbg !14831
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14832
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14828, metadata !DIExpression()), !dbg !14831
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14833
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14829, metadata !DIExpression()), !dbg !14831
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %5, metadata !14830, metadata !DIExpression()), !dbg !14831
  %6 = icmp sgt i32 %5, 0, !dbg !14835
  br i1 %6, label %17, label %7, !dbg !14837

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14838
  br i1 %8, label %17, label %9, !dbg !14840

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14841
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14841
  %12 = load i32, i32* %11, align 8, !dbg !14841
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14843
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14843
  %15 = load i32, i32* %14, align 8, !dbg !14843
  %16 = icmp ult i32 %12, %15, !dbg !14844
  br label %17, !dbg !14845

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14846
  ret i1 %18, !dbg !14847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14848 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14865, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14866, metadata !DIExpression()), !dbg !14880
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14881
  %5 = load i32, i32* %4, align 4, !dbg !14882
  %6 = add nsw i32 %5, 1, !dbg !14882
  store i32 %6, i32* %4, align 4, !dbg !14882
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14883
  store i32 %5, i32* %7, align 8, !dbg !14884
  %8 = load i32, i32* %4, align 4, !dbg !14885
  %9 = icmp eq i32 %8, 0, !dbg !14886
  br i1 %9, label %10, label %32, !dbg !14887

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14888
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !14888
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14868, metadata !DIExpression()), !dbg !14888
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14888
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14888
  %14 = load i32, i32* %13, align 4, !dbg !14888
  %15 = shl i32 %14, 2, !dbg !14888
  %16 = alloca i8, i32 %15, align 8, !dbg !14888
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14888
  store i8* %16, i8** %17, align 4, !dbg !14888
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14888
  %19 = alloca i8, i32 %14, align 8, !dbg !14888
  store i8* %19, i8** %18, align 4, !dbg !14888
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14888
  store i32 -1, i32* %20, align 4, !dbg !14888
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14889
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14877, metadata !DIExpression()), !dbg !14890
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14867, metadata !DIExpression()), !dbg !14880
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14891
  br i1 %22, label %23, label %24, !dbg !14888

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !14891
  br label %32, !dbg !14892

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14867, metadata !DIExpression()), !dbg !14880
  %26 = load i32, i32* %4, align 4, !dbg !14893
  %27 = add nsw i32 %26, 1, !dbg !14893
  store i32 %27, i32* %4, align 4, !dbg !14893
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14895
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14895
  store i32 %26, i32* %29, align 8, !dbg !14896
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14889
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14877, metadata !DIExpression()), !dbg !14890
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14867, metadata !DIExpression()), !dbg !14880
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14891
  br i1 %31, label %23, label %24, !dbg !14888, !llvm.loop !14897

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14899
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14900
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14901
  ret void, !dbg !14902
}

; Function Attrs: optsize
declare !dbg !14903 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14908 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14911 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14913, metadata !DIExpression()), !dbg !14915
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14914, metadata !DIExpression()), !dbg !14915
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14916
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14917
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14918
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14919
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14919
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14921
  br i1 %7, label %8, label %10, !dbg !14922

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14923
  store i32 0, i32* %9, align 4, !dbg !14925
  br label %10, !dbg !14926

10:                                               ; preds = %8, %2
  ret void, !dbg !14927
}

; Function Attrs: optsize
declare !dbg !14928 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14929 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14933, metadata !DIExpression()), !dbg !14936
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14934, metadata !DIExpression()), !dbg !14936
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14937
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !14938
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14935, metadata !DIExpression()), !dbg !14936
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14934, metadata !DIExpression()), !dbg !14936
  ret %struct.k_thread* %4, !dbg !14939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14940 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14944, metadata !DIExpression()), !dbg !14945
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14946
  ret %struct.rbnode* %2, !dbg !14947
}

; Function Attrs: optsize
declare !dbg !14948 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !14951 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14961, metadata !DIExpression()), !dbg !14965
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14966
  %3 = load i32, i32* %2, align 4, !dbg !14966
  %4 = icmp eq i32 %3, 0, !dbg !14968
  br i1 %4, label %10, label %5, !dbg !14969

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14962, metadata !DIExpression()), !dbg !14965
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14970, !range !6226
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14971
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14963, metadata !DIExpression()), !dbg !14965
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef %7) #24, !dbg !14972
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14964, metadata !DIExpression()), !dbg !14965
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14962, metadata !DIExpression()), !dbg !14965
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14965
  ret %struct.k_thread* %11, !dbg !14973
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14974 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14978, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.value(metadata i32 0, metadata !14979, metadata !DIExpression()), !dbg !14981
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.172(%union.anon* noundef %0) #24, !dbg !14982
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14980, metadata !DIExpression()), !dbg !14981
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14983
  br i1 %3, label %8, label %4, !dbg !14984

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14985
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14987
  call void @llvm.dbg.value(metadata i32 1, metadata !14979, metadata !DIExpression()), !dbg !14981
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.172(%union.anon* noundef %0) #24, !dbg !14982
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14980, metadata !DIExpression()), !dbg !14981
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14983
  br i1 %7, label %8, label %4, !dbg !14984, !llvm.loop !14988

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14981
  ret i32 %9, !dbg !14990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.172(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14991 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14993, metadata !DIExpression()), !dbg !14994
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14995
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef %2) #24, !dbg !14996
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14997
  ret %struct.k_thread* %4, !dbg !14998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14999 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15010
  tail call fastcc void @sys_dlist_init.173(%struct._dnode* noundef nonnull %2) #24, !dbg !15011
  ret void, !dbg !15012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.173(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15013 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15017, metadata !DIExpression()), !dbg !15018
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15019
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15020
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15021
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15022
  ret void, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15024 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15025
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15026
  ret void, !dbg !15027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15033, metadata !DIExpression()), !dbg !15034
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15035
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15035
  %4 = load i8, i8* %3, align 2, !dbg !15035
  %5 = sext i8 %4 to i32, !dbg !15036
  ret i32 %5, !dbg !15037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15038 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15042, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.value(metadata i32 %1, metadata !15043, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15046
  ret void, !dbg !15047
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15048 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15049
  br i1 %1, label %8, label %2, !dbg !15050

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15051
  br i1 %3, label %8, label %4, !dbg !15052

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15053
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15054
  %7 = xor i1 %6, true, !dbg !15052
  br label %8, !dbg !15052

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15056 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15057, !range !5661
  %2 = icmp eq i8 %1, 0, !dbg !15057
  ret i1 %2, !dbg !15058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15059 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !15062
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15064, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !15066
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !15066
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !15062
  call void @llvm.dbg.value(metadata i32 undef, metadata !15061, metadata !DIExpression()), !dbg !15067
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15068
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13728, metadata !DIExpression()) #23, !dbg !15071
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15073
  %4 = load i8, i8* %3, align 1, !dbg !15074
  %5 = and i8 %4, 127, !dbg !15074
  store i8 %5, i8* %3, align 1, !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13736, metadata !DIExpression()) #23, !dbg !15075
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !15077
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13745, metadata !DIExpression()) #23, !dbg !15079
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15081
  %8 = load i8, i8* %7, align 1, !dbg !15082
  %9 = or i8 %8, -128, !dbg !15082
  store i8 %9, i8* %7, align 1, !dbg !15082
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13752, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13759, metadata !DIExpression()) #23, !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13765, metadata !DIExpression()) #23, !dbg !15085
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15087
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13766, metadata !DIExpression()) #23, !dbg !15085
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15088
  br i1 %11, label %22, label %12, !dbg !15087

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13766, metadata !DIExpression()) #23, !dbg !15085
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15089
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13766, metadata !DIExpression()) #23, !dbg !15085
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !15090
  %16 = icmp sgt i32 %15, 0, !dbg !15091
  br i1 %16, label %17, label %19, !dbg !15092

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15093
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15094
  br label %24, !dbg !15095

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !15088
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13766, metadata !DIExpression()) #23, !dbg !15085
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15088
  br i1 %21, label %22, label %12, !dbg !15087, !llvm.loop !15096

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15098
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !15099
  br label %24, !dbg !15100

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15064
  call void @llvm.dbg.value(metadata i32 %25, metadata !13571, metadata !DIExpression()) #23, !dbg !15066
  call void @llvm.dbg.value(metadata i32 %25, metadata !13565, metadata !DIExpression()) #23, !dbg !15062
  call void @llvm.dbg.value(metadata i32 %25, metadata !15061, metadata !DIExpression()), !dbg !15067
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15101
  call void @llvm.dbg.value(metadata i32 undef, metadata !14168, metadata !DIExpression()) #23, !dbg !15102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14173, metadata !DIExpression()) #23, !dbg !15102
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !15104
  ret void, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15106 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15110, metadata !DIExpression()), !dbg !15113
  %3 = icmp eq i64 %2, -1, !dbg !15114
  br i1 %3, label %4, label %6, !dbg !15116

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15117
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !15119
  br label %11, !dbg !15120

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15111, metadata !DIExpression()), !dbg !15113
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15121
  %8 = sext i32 %7 to i64, !dbg !15121
  call void @llvm.dbg.value(metadata i64 %8, metadata !15111, metadata !DIExpression()), !dbg !15113
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.178(i64 noundef %8) #24, !dbg !15122
  %10 = trunc i64 %9 to i32, !dbg !15122
  call void @llvm.dbg.value(metadata i32 %10, metadata !15112, metadata !DIExpression()), !dbg !15113
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15113
  ret i32 %12, !dbg !15123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15128, metadata !DIExpression()), !dbg !15129
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15130, !srcloc !15132
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15133
  ret void, !dbg !15134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15135 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15139, metadata !DIExpression()), !dbg !15143
  %2 = icmp eq i64 %0, 0, !dbg !15144
  br i1 %2, label %3, label %4, !dbg !15146

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !15147
  br label %29, !dbg !15149

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15141, metadata !DIExpression()), !dbg !15143
  %5 = icmp sgt i64 %0, -3, !dbg !15150
  br i1 %5, label %6, label %10, !dbg !15152

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15153
  %8 = trunc i64 %0 to i32, !dbg !15155
  %9 = add i32 %7, %8, !dbg !15155
  call void @llvm.dbg.value(metadata i32 %9, metadata !15140, metadata !DIExpression()), !dbg !15143
  br label %13, !dbg !15156

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15157
  %12 = sub i32 -2, %11, !dbg !15157
  call void @llvm.dbg.value(metadata i32 %12, metadata !15140, metadata !DIExpression()), !dbg !15143
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15159
  call void @llvm.dbg.value(metadata i32 %14, metadata !15140, metadata !DIExpression()), !dbg !15143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !15160
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15162, !srcloc !13574
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15162
  call void @llvm.dbg.value(metadata i32 %16, metadata !13571, metadata !DIExpression()) #23, !dbg !15164
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !15164
  call void @llvm.dbg.value(metadata i32 %16, metadata !13565, metadata !DIExpression()) #23, !dbg !15160
  call void @llvm.dbg.value(metadata i32 %16, metadata !15142, metadata !DIExpression()), !dbg !15143
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15165
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15166
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !15167
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15168
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15169
  tail call fastcc void @z_add_thread_timeout.159(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !15169
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15170
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !15171
  call void @llvm.dbg.value(metadata i32 %16, metadata !14168, metadata !DIExpression()) #23, !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14173, metadata !DIExpression()) #23, !dbg !15172
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !15174
  %22 = zext i32 %14 to i64, !dbg !15175
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15176
  %24 = zext i32 %23 to i64, !dbg !15176
  %25 = sub nsw i64 %22, %24, !dbg !15177
  call void @llvm.dbg.value(metadata i64 %25, metadata !15139, metadata !DIExpression()), !dbg !15143
  %26 = icmp sgt i64 %25, 0, !dbg !15178
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15178
  %28 = trunc i64 %27 to i32, !dbg !15178
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15143
  ret i32 %30, !dbg !15179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.178(i64 noundef %0) unnamed_addr #12 !dbg !15180 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15182, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i64 %0, metadata !13606, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 10000, metadata !13609, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 1000, metadata !13610, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i8 1, metadata !13611, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i1 false, metadata !13612, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15184
  call void @llvm.dbg.value(metadata i1 false, metadata !13613, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15184
  call void @llvm.dbg.value(metadata i8 0, metadata !13614, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i1 false, metadata !13615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15184
  call void @llvm.dbg.value(metadata i1 true, metadata !13616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15184
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i64 %0, metadata !13606, metadata !DIExpression()), !dbg !15184
  %2 = udiv i64 %0, 10, !dbg !15186
  ret i64 %2, !dbg !15190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15191 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15192, !srcloc !15194
  tail call void @z_impl_k_yield() #24, !dbg !15195
  ret void, !dbg !15196
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15201, metadata !DIExpression()), !dbg !15203
  %2 = sext i32 %0 to i64, !dbg !15204
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15205
  call void @llvm.dbg.value(metadata i64 %3, metadata !15202, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15203
  %4 = shl i64 %3, 32, !dbg !15206
  %5 = ashr exact i64 %4, 32, !dbg !15206
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %6, metadata !15202, metadata !DIExpression()), !dbg !15203
  %7 = sext i32 %6 to i64, !dbg !15208
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15209
  %9 = trunc i64 %8 to i32, !dbg !15209
  ret i32 %9, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !15211 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15213, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i64 %0, metadata !13606, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13609, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 10000, metadata !13610, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i8 1, metadata !13611, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i1 false, metadata !13612, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i1 true, metadata !13613, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i8 0, metadata !13614, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i1 false, metadata !13615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i1 true, metadata !13616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15215
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !15215
  %2 = add i64 %0, 99, !dbg !15217
  call void @llvm.dbg.value(metadata i64 %2, metadata !13606, metadata !DIExpression()), !dbg !15215
  %3 = udiv i64 %2, 100, !dbg !15218
  ret i64 %3, !dbg !15219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !15220 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15222, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata i64 %0, metadata !13606, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i32 10000, metadata !13609, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13610, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i8 1, metadata !13611, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i1 false, metadata !13612, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15224
  call void @llvm.dbg.value(metadata i1 false, metadata !13613, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15224
  call void @llvm.dbg.value(metadata i8 0, metadata !13614, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i1 true, metadata !13615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15224
  call void @llvm.dbg.value(metadata i1 false, metadata !13616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15224
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i64 0, metadata !13617, metadata !DIExpression()), !dbg !15224
  %2 = mul i64 %0, 100, !dbg !15226
  ret i64 %2, !dbg !15228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15231, metadata !DIExpression()), !dbg !15232
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !15233
  br i1 %2, label %14, label %3, !dbg !15235

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15236
  %5 = icmp slt i32 %4, 0, !dbg !15238
  br i1 %5, label %6, label %10, !dbg !15239

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15240
  %8 = load i8, i8* %7, align 1, !dbg !15240
  %9 = icmp eq i8 %8, 16, !dbg !15243
  br i1 %9, label %10, label %14, !dbg !15244

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15245
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15246
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15247, !srcloc !14208
  call void @llvm.dbg.value(metadata i32 %11, metadata !14204, metadata !DIExpression()) #23, !dbg !15251
  %12 = icmp eq i32 %11, 0, !dbg !15252
  br i1 %12, label %13, label %14, !dbg !15253

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15254
  br label %14, !dbg !15256

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15260, metadata !DIExpression()), !dbg !15261
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15262
  %3 = load i8, i8* %2, align 1, !dbg !15262
  %4 = and i8 %3, 2, !dbg !15263
  %5 = icmp ne i8 %4, 0, !dbg !15264
  ret i1 %5, !dbg !15265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15266 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15271
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15270, metadata !DIExpression()), !dbg !15272
  ret %struct.k_thread* %1, !dbg !15273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15274 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15275, !srcloc !14208
  call void @llvm.dbg.value(metadata i32 %1, metadata !14204, metadata !DIExpression()) #23, !dbg !15278
  %2 = icmp eq i32 %1, 0, !dbg !15279
  br i1 %2, label %3, label %8, !dbg !15280

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15281
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !15282
  %6 = icmp ne i32 %5, 0, !dbg !15280
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15286, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !15289
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15291, !srcloc !13574
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15291
  call void @llvm.dbg.value(metadata i32 %3, metadata !13571, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %3, metadata !13565, metadata !DIExpression()) #23, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %3, metadata !15287, metadata !DIExpression()), !dbg !15288
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15294
  %5 = load i8, i8* %4, align 4, !dbg !15294
  %6 = and i8 %5, 1, !dbg !15296
  %7 = icmp eq i8 %6, 0, !dbg !15297
  br i1 %7, label %9, label %8, !dbg !15298

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !15299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !15299
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !15302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15304, !srcloc !13600
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !15305, !srcloc !15307
  br label %24, !dbg !15308

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15309
  %11 = load i8, i8* %10, align 1, !dbg !15309
  %12 = and i8 %11, 8, !dbg !15311
  %13 = icmp eq i8 %12, 0, !dbg !15312
  br i1 %13, label %15, label %14, !dbg !15313

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !15314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !15314
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !15317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15319, !srcloc !13600
  br label %24, !dbg !15320

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !15321
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15322
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15324
  br i1 %17, label %18, label %23, !dbg !15325

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15326, !srcloc !14208
  call void @llvm.dbg.value(metadata i32 %19, metadata !14204, metadata !DIExpression()) #23, !dbg !15329
  %20 = icmp eq i32 %19, 0, !dbg !15330
  br i1 %20, label %21, label %23, !dbg !15331

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14168, metadata !DIExpression()) #23, !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14173, metadata !DIExpression()) #23, !dbg !15332
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15335
  br label %23, !dbg !15336

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13586, metadata !DIExpression()) #23, !dbg !15337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !15337
  call void @llvm.dbg.value(metadata i32 %3, metadata !13594, metadata !DIExpression()) #23, !dbg !15339
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15341, !srcloc !13600
  br label %24, !dbg !15342

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15343 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15345, metadata !DIExpression()), !dbg !15346
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15347
  %3 = load i8, i8* %2, align 1, !dbg !15347
  %4 = and i8 %3, 8, !dbg !15349
  %5 = icmp eq i8 %4, 0, !dbg !15350
  br i1 %5, label %6, label %20, !dbg !15351

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15352
  %8 = or i8 %7, 8, !dbg !15352
  store i8 %8, i8* %2, align 1, !dbg !15352
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !15354
  br i1 %9, label %10, label %12, !dbg !15356

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13728, metadata !DIExpression()) #23, !dbg !15357
  %11 = and i8 %8, 95, !dbg !15360
  store i8 %11, i8* %2, align 1, !dbg !15360
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13736, metadata !DIExpression()) #23, !dbg !15361
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !15363
  br label %12, !dbg !15364

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15365
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !15365
  %15 = icmp eq %union.anon* %14, null, !dbg !15367
  br i1 %15, label %17, label %16, !dbg !15368

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15369
  br label %17, !dbg !15371

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15372
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15373
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !15374
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15375
  br label %20, !dbg !15376

20:                                               ; preds = %17, %1
  ret void, !dbg !15377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !15378 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15382, metadata !DIExpression()), !dbg !15384
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.172(%union.anon* noundef %0) #24, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15383, metadata !DIExpression()), !dbg !15384
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15386
  br i1 %3, label %10, label %4, !dbg !15387

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15388
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15391, metadata !DIExpression()), !dbg !15397
  call void @llvm.dbg.value(metadata i32 0, metadata !15396, metadata !DIExpression()), !dbg !15397
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15399
  store i32 0, i32* %7, align 4, !dbg !15400
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15401
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.172(%union.anon* noundef %0) #24, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15383, metadata !DIExpression()), !dbg !15384
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15386
  br i1 %9, label %10, label %4, !dbg !15387, !llvm.loop !15402

10:                                               ; preds = %4, %1
  ret void, !dbg !15404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15405 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15410, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15409, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !15414
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15416, !srcloc !13574
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15416
  call void @llvm.dbg.value(metadata i32 %4, metadata !13571, metadata !DIExpression()) #23, !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !15418
  call void @llvm.dbg.value(metadata i32 %4, metadata !13565, metadata !DIExpression()) #23, !dbg !15414
  call void @llvm.dbg.value(metadata i32 %4, metadata !15411, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 0, metadata !15412, metadata !DIExpression()), !dbg !15413
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15419
  %6 = load i8, i8* %5, align 1, !dbg !15419
  %7 = and i8 %6, 8, !dbg !15421
  %8 = icmp eq i8 %7, 0, !dbg !15422
  br i1 %8, label %9, label %24, !dbg !15423

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15410, metadata !DIExpression()), !dbg !15413
  %11 = icmp eq i64 %10, 0, !dbg !15424
  br i1 %11, label %24, label %12, !dbg !15426

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15427
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15429
  br i1 %14, label %24, label %15, !dbg !15430

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15431
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !15431
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15432
  %19 = icmp eq %union.anon* %17, %18, !dbg !15433
  br i1 %19, label %24, label %20, !dbg !15434

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15435
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !15437
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15438
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %4, metadata !14168, metadata !DIExpression()) #23, !dbg !15440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14173, metadata !DIExpression()) #23, !dbg !15440
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !15442
  call void @llvm.dbg.value(metadata i32 %23, metadata !15412, metadata !DIExpression()), !dbg !15413
  br label %26, !dbg !15443

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15444
  call void @llvm.dbg.value(metadata i32 %25, metadata !15412, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.value(metadata i32 %4, metadata !13586, metadata !DIExpression()) #23, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %4, metadata !13594, metadata !DIExpression()) #23, !dbg !15447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !15449, !srcloc !13600
  br label %26, !dbg !15450

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15413
  ret i32 %27, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15452 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15456, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata i32 %1, metadata !15457, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata i8* %2, metadata !15458, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata i8 0, metadata !15460, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata i32 0, metadata !15461, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13559, metadata !DIExpression()) #23, !dbg !15466
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15468, !srcloc !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13571, metadata !DIExpression()) #23, !dbg !15470
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()) #23, !dbg !15470
  call void @llvm.dbg.value(metadata i32 undef, metadata !13565, metadata !DIExpression()) #23, !dbg !15466
  call void @llvm.dbg.value(metadata i32 undef, metadata !15463, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i8 poison, metadata !15460, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !15461, metadata !DIExpression()), !dbg !15465
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15459, metadata !DIExpression()), !dbg !15464
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15474
  br i1 %7, label %12, label %8, !dbg !15476

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15477, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata i32 %1, metadata !15483, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata i8* %2, metadata !15484, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15391, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata i32 %1, metadata !15396, metadata !DIExpression()), !dbg !15488
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15490
  store i32 %1, i32* %9, align 4, !dbg !15491
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15492
  store i8* %2, i8** %10, align 4, !dbg !15493
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !15494
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !15495
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !15496
  call void @llvm.dbg.value(metadata i8 1, metadata !15460, metadata !DIExpression()), !dbg !15464
  br label %12, !dbg !15497

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15468
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %14, metadata !13571, metadata !DIExpression()) #23, !dbg !15470
  call void @llvm.dbg.value(metadata i32 %14, metadata !13565, metadata !DIExpression()) #23, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %14, metadata !15463, metadata !DIExpression()), !dbg !15465
  call void @llvm.dbg.value(metadata i8 poison, metadata !15460, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !13586, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13591, metadata !DIExpression()) #23, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()) #23, !dbg !15500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15502, !srcloc !13600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15461, metadata !DIExpression()), !dbg !15465
  ret i1 %13, !dbg !15503
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15504 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i64 undef, metadata !15512, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15509, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15511, metadata !DIExpression()), !dbg !15515
  call void @llvm.dbg.value(metadata i8** %4, metadata !15513, metadata !DIExpression()), !dbg !15515
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %6, metadata !15514, metadata !DIExpression()), !dbg !15515
  %7 = icmp eq i8** %4, null, !dbg !15517
  br i1 %7, label %12, label %8, !dbg !15519

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15520
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15522
  %11 = load i8*, i8** %10, align 4, !dbg !15522
  store i8* %11, i8** %4, align 4, !dbg !15523
  br label %12, !dbg !15524

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15526 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !15528
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !15529
  ret void, !dbg !15530
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15531 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15541, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15539, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15540, metadata !DIExpression()), !dbg !15558
  %5 = icmp eq i64 %4, -1, !dbg !15559
  br i1 %5, label %55, label %6, !dbg !15561

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15562
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15563
  call void @llvm.dbg.value(metadata i32 0, metadata !15542, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !15572
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15574, !srcloc !15580
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15574
  call void @llvm.dbg.value(metadata i32 %9, metadata !15577, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !15581
  call void @llvm.dbg.value(metadata i32 %9, metadata !15571, metadata !DIExpression()) #23, !dbg !15572
  call void @llvm.dbg.value(metadata i32 %9, metadata !15548, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i32 undef, metadata !15542, metadata !DIExpression()), !dbg !15564
  %10 = icmp slt i64 %4, -1, !dbg !15582
  br i1 %10, label %11, label %17, !dbg !15583

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15584
  %13 = add i64 %4, %12, !dbg !15585
  %14 = sub i64 -2, %13, !dbg !15585
  call void @llvm.dbg.value(metadata i64 %14, metadata !15552, metadata !DIExpression()), !dbg !15586
  %15 = icmp sgt i64 %14, 1, !dbg !15587
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15587
  br label %22, !dbg !15588

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15589
  %19 = tail call fastcc i32 @elapsed.187() #24, !dbg !15591
  %20 = sext i32 %19 to i64, !dbg !15591
  %21 = add nsw i64 %18, %20, !dbg !15592
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15593
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15594
  store i64 %23, i64* %24, align 8, !dbg !15595
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !15596
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15549, metadata !DIExpression()), !dbg !15598
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15599
  br i1 %26, label %42, label %27, !dbg !15599

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15600
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15549, metadata !DIExpression()), !dbg !15598
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15604
  %31 = load i64, i64* %30, align 8, !dbg !15604
  %32 = icmp slt i64 %28, %31, !dbg !15605
  br i1 %32, label %33, label %38, !dbg !15606

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15604
  %35 = sub nsw i64 %31, %28, !dbg !15607
  store i64 %35, i64* %34, align 8, !dbg !15607
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15609
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15610
  tail call fastcc void @sys_dlist_insert.188(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !15611
  br label %44, !dbg !15612

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15613
  store i64 %39, i64* %24, align 8, !dbg !15613
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !15614
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15549, metadata !DIExpression()), !dbg !15598
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15599
  br i1 %41, label %42, label %27, !dbg !15599, !llvm.loop !15615

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15617
  tail call fastcc void @sys_dlist_append.189(%struct._dnode* noundef %43) #24, !dbg !15620
  br label %44, !dbg !15621

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !15622
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15623
  br i1 %46, label %47, label %54, !dbg !15624

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !15625
  call void @llvm.dbg.value(metadata i32 %48, metadata !15555, metadata !DIExpression()), !dbg !15626
  %49 = icmp ne i32 %48, 0, !dbg !15627
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15629
  br i1 %52, label %54, label %53, !dbg !15629

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15630
  br label %54, !dbg !15632

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15633, metadata !DIExpression()) #23, !dbg !15639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %9, metadata !15641, metadata !DIExpression()) #23, !dbg !15644
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15646, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !15542, metadata !DIExpression()), !dbg !15564
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.187() unnamed_addr #1 !dbg !15649 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15652
  %2 = icmp eq i32 %1, 0, !dbg !15653
  br i1 %2, label %3, label %5, !dbg !15652

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15654
  br label %5, !dbg !15652

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15652
  ret i32 %6, !dbg !15655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15656 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.192() #24, !dbg !15662
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15660, metadata !DIExpression()), !dbg !15663
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15664
  ret %struct._timeout* %2, !dbg !15665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.188(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15666 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15670, metadata !DIExpression()), !dbg !15674
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15671, metadata !DIExpression()), !dbg !15674
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15675
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15675
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15672, metadata !DIExpression()), !dbg !15674
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15676
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15677
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15678
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15679
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15680
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15681
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15682
  ret void, !dbg !15683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15684 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15688, metadata !DIExpression()), !dbg !15690
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15691
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.190(%struct._dnode* noundef %2) #24, !dbg !15692
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15689, metadata !DIExpression()), !dbg !15690
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15693
  ret %struct._timeout* %4, !dbg !15694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.189(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15695 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15700, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15701, metadata !DIExpression()), !dbg !15703
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15704
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15702, metadata !DIExpression()), !dbg !15703
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15705
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15706
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15707
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15708
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15709
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15710
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15711
  ret void, !dbg !15712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15713 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !15718
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15715, metadata !DIExpression()), !dbg !15719
  %2 = tail call fastcc i32 @elapsed.187() #24, !dbg !15720
  call void @llvm.dbg.value(metadata i32 %2, metadata !15716, metadata !DIExpression()), !dbg !15719
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15721
  br i1 %3, label %14, label %4, !dbg !15723

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15724
  %6 = load i64, i64* %5, align 8, !dbg !15724
  %7 = sext i32 %2 to i64, !dbg !15725
  %8 = sub nsw i64 %6, %7, !dbg !15726
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15727
  br i1 %9, label %14, label %10, !dbg !15728

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15729
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15729
  %13 = trunc i64 %12 to i32, !dbg !15729
  call void @llvm.dbg.value(metadata i32 %13, metadata !15717, metadata !DIExpression()), !dbg !15719
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15731
  call void @llvm.dbg.value(metadata i32 %15, metadata !15717, metadata !DIExpression()), !dbg !15719
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15732
  %17 = icmp ne i32 %16, 0, !dbg !15734
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15735
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15735
  call void @llvm.dbg.value(metadata i32 %20, metadata !15717, metadata !DIExpression()), !dbg !15719
  ret i32 %20, !dbg !15736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.190(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15737 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15741, metadata !DIExpression()), !dbg !15743
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15742, metadata !DIExpression()), !dbg !15743
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15744
  br i1 %2, label %5, label %3, !dbg !15745

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.191(%struct._dnode* noundef nonnull %0) #24, !dbg !15746
  br label %5, !dbg !15745

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15745
  ret %struct._dnode* %6, !dbg !15747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.191(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15748 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15750, metadata !DIExpression()), !dbg !15752
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15751, metadata !DIExpression()), !dbg !15752
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15753
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15754
  br i1 %3, label %7, label %4, !dbg !15755

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15756
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15756
  br label %7, !dbg !15755

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15755
  ret %struct._dnode* %8, !dbg !15757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.192() unnamed_addr #5 !dbg !15758 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15762, metadata !DIExpression()), !dbg !15763
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.193() #24, !dbg !15764
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15764
  ret %struct._dnode* %3, !dbg !15765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.193() unnamed_addr #5 !dbg !15766 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15770, metadata !DIExpression()), !dbg !15771
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15772
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15773
  ret i1 %2, !dbg !15774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15775 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15779, metadata !DIExpression()), !dbg !15784
  call void @llvm.dbg.value(metadata i32 -22, metadata !15780, metadata !DIExpression()), !dbg !15784
  call void @llvm.dbg.value(metadata i32 0, metadata !15781, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !15786
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15788, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 undef, metadata !15783, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 -22, metadata !15780, metadata !DIExpression()), !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !15781, metadata !DIExpression()), !dbg !15785
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15780, metadata !DIExpression()), !dbg !15784
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* noundef %3) #24, !dbg !15791
  br i1 %4, label %5, label %6, !dbg !15795

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !15796
  call void @llvm.dbg.value(metadata i32 0, metadata !15780, metadata !DIExpression()), !dbg !15784
  br label %6, !dbg !15798

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15784
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %8, metadata !15577, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %8, metadata !15571, metadata !DIExpression()) #23, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %8, metadata !15783, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 %7, metadata !15780, metadata !DIExpression()), !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !15633, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !15641, metadata !DIExpression()) #23, !dbg !15801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15803, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !15781, metadata !DIExpression()), !dbg !15785
  ret i32 %7, !dbg !15804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15805 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15811, metadata !DIExpression()), !dbg !15812
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15813
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15813
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15814
  ret i1 %4, !dbg !15815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15816 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15818, metadata !DIExpression()), !dbg !15819
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !15820
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15822
  br i1 %3, label %10, label %4, !dbg !15823

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15824
  %6 = load i64, i64* %5, align 8, !dbg !15824
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15826
  %8 = load i64, i64* %7, align 8, !dbg !15827
  %9 = add nsw i64 %8, %6, !dbg !15827
  store i64 %9, i64* %7, align 8, !dbg !15827
  br label %10, !dbg !15828

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15829
  tail call fastcc void @sys_dlist_remove.197(%struct._dnode* noundef %11) #24, !dbg !15830
  ret void, !dbg !15831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.197(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15832 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15836, metadata !DIExpression()), !dbg !15839
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15840
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15840
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15837, metadata !DIExpression()), !dbg !15839
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15841
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15841
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15838, metadata !DIExpression()), !dbg !15839
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15842
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15843
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15844
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15845
  tail call fastcc void @sys_dnode_init.198(%struct._dnode* noundef %0) #24, !dbg !15846
  ret void, !dbg !15847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.198(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15848 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15850, metadata !DIExpression()), !dbg !15851
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15852
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15853
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15854
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15855
  ret void, !dbg !15856
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15857 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15863, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i64 0, metadata !15864, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 0, metadata !15865, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !15870
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15872, !srcloc !15580
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15872
  call void @llvm.dbg.value(metadata i32 %3, metadata !15577, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata i32 %3, metadata !15571, metadata !DIExpression()) #23, !dbg !15870
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.value(metadata i64 0, metadata !15864, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()), !dbg !15869
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !15875
  call void @llvm.dbg.value(metadata i64 %4, metadata !15864, metadata !DIExpression()), !dbg !15868
  call void @llvm.dbg.value(metadata i32 %3, metadata !15633, metadata !DIExpression()) #23, !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %3, metadata !15641, metadata !DIExpression()) #23, !dbg !15880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15882, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !15865, metadata !DIExpression()), !dbg !15869
  ret i64 %4, !dbg !15883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15884 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15886, metadata !DIExpression()), !dbg !15890
  call void @llvm.dbg.value(metadata i64 0, metadata !15887, metadata !DIExpression()), !dbg !15890
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.199(%struct._timeout* noundef %0) #24, !dbg !15891
  br i1 %2, label %21, label %3, !dbg !15893

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !15894
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15888, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i64 0, metadata !15887, metadata !DIExpression()), !dbg !15890
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15896
  br i1 %5, label %16, label %6, !dbg !15898

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15888, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i64 %8, metadata !15887, metadata !DIExpression()), !dbg !15890
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15899
  %10 = load i64, i64* %9, align 8, !dbg !15899
  %11 = add nsw i64 %10, %8, !dbg !15901
  call void @llvm.dbg.value(metadata i64 %11, metadata !15887, metadata !DIExpression()), !dbg !15890
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15902
  br i1 %12, label %16, label %13, !dbg !15904

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !15905
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15888, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i64 %11, metadata !15887, metadata !DIExpression()), !dbg !15890
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15896
  br i1 %15, label %16, label %6, !dbg !15898, !llvm.loop !15906

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15890
  call void @llvm.dbg.value(metadata i64 %17, metadata !15887, metadata !DIExpression()), !dbg !15890
  %18 = tail call fastcc i32 @elapsed.187() #24, !dbg !15908
  %19 = sext i32 %18 to i64, !dbg !15908
  %20 = sub nsw i64 %17, %19, !dbg !15909
  br label %21, !dbg !15910

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15890
  ret i64 %22, !dbg !15911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.199(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15912 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15916, metadata !DIExpression()), !dbg !15917
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15918
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* noundef %2) #24, !dbg !15919
  %4 = xor i1 %3, true, !dbg !15920
  ret i1 %4, !dbg !15921
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15922 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15924, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i64 0, metadata !15925, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 0, metadata !15926, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !15931
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15933, !srcloc !15580
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15933
  call void @llvm.dbg.value(metadata i32 %3, metadata !15577, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %3, metadata !15571, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %3, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i64 0, metadata !15925, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !15926, metadata !DIExpression()), !dbg !15930
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15936
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !15939
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15925, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i32 %3, metadata !15633, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata i32 %3, metadata !15641, metadata !DIExpression()) #23, !dbg !15942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15944, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !15926, metadata !DIExpression()), !dbg !15930
  %6 = add i64 %5, %4, !dbg !15945
  ret i64 %6, !dbg !15946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15947 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 0, metadata !15950, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !15955
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15957, !srcloc !15580
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15957
  call void @llvm.dbg.value(metadata i32 %2, metadata !15577, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !15959
  call void @llvm.dbg.value(metadata i32 %2, metadata !15571, metadata !DIExpression()) #23, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %2, metadata !15952, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.value(metadata i32 -1, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15954
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %3, metadata !15949, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.value(metadata i32 %2, metadata !15633, metadata !DIExpression()) #23, !dbg !15963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !15963
  call void @llvm.dbg.value(metadata i32 %2, metadata !15641, metadata !DIExpression()) #23, !dbg !15965
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !15967, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15954
  ret i32 %3, !dbg !15968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15971, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.value(metadata i1 %1, metadata !15972, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15981
  call void @llvm.dbg.value(metadata i32 0, metadata !15973, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !15983
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15985, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()) #23, !dbg !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15975, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15973, metadata !DIExpression()), !dbg !15982
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %4, metadata !15976, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i1 undef, metadata !15979, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  %5 = icmp slt i32 %4, 2, !dbg !15990
  call void @llvm.dbg.value(metadata i1 %5, metadata !15980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15991
  call void @llvm.dbg.value(metadata i1 %6, metadata !15979, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  br i1 %7, label %11, label %8, !dbg !15991

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15993
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15993
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15995
  br label %11, !dbg !15996

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15985
  call void @llvm.dbg.value(metadata i32 %12, metadata !15577, metadata !DIExpression()) #23, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %12, metadata !15571, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %12, metadata !15975, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15633, metadata !DIExpression()) #23, !dbg !15997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !15997
  call void @llvm.dbg.value(metadata i32 undef, metadata !15641, metadata !DIExpression()) #23, !dbg !15999
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16001, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 1, metadata !15973, metadata !DIExpression()), !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15973, metadata !DIExpression()), !dbg !15982
  ret void, !dbg !16002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16007, metadata !DIExpression()), !dbg !16012
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !16014
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16016, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()) #23, !dbg !16018
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !16018
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()) #23, !dbg !16014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16008, metadata !DIExpression()), !dbg !16012
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16008, metadata !DIExpression()), !dbg !16012
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !16019
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16020
  br i1 %4, label %28, label %5, !dbg !16021

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16022
  %10 = load i64, i64* %9, align 8, !dbg !16022
  %11 = sext i32 %8 to i64, !dbg !16023
  %12 = icmp sgt i64 %10, %11, !dbg !16024
  br i1 %12, label %26, label %13, !dbg !16025

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16012
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16009, metadata !DIExpression()), !dbg !16026
  %15 = trunc i64 %10 to i32, !dbg !16027
  call void @llvm.dbg.value(metadata i32 %15, metadata !16011, metadata !DIExpression()), !dbg !16026
  %16 = sext i32 %15 to i64, !dbg !16028
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16029
  %18 = add i64 %17, %16, !dbg !16029
  store i64 %18, i64* @curr_tick, align 8, !dbg !16029
  store i64 0, i64* %9, align 8, !dbg !16030
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !16031
  call void @llvm.dbg.value(metadata i32 %14, metadata !15633, metadata !DIExpression()) #23, !dbg !16032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !16032
  call void @llvm.dbg.value(metadata i32 %14, metadata !15641, metadata !DIExpression()) #23, !dbg !16034
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16036, !srcloc !15647
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16037
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16037
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !16038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !16039
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16041, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15577, metadata !DIExpression()) #23, !dbg !16043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !16043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15571, metadata !DIExpression()) #23, !dbg !16039
  call void @llvm.dbg.value(metadata i32 undef, metadata !16008, metadata !DIExpression()), !dbg !16012
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16044
  %23 = sub nsw i32 %22, %15, !dbg !16044
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !16008, metadata !DIExpression()), !dbg !16012
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !16019
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16020
  br i1 %25, label %28, label %5, !dbg !16021, !llvm.loop !16045

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16047
  store i64 %27, i64* %9, align 8, !dbg !16047
  br label %32, !dbg !16050

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16012
  %31 = sext i32 %30 to i64, !dbg !16051
  br label %32, !dbg !16051

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16051
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16012
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16052
  %37 = add i64 %36, %33, !dbg !16052
  store i64 %37, i64* @curr_tick, align 8, !dbg !16052
  store i32 0, i32* @announce_remaining, align 4, !dbg !16053
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !16054
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !16055
  call void @llvm.dbg.value(metadata i32 %35, metadata !15633, metadata !DIExpression()) #23, !dbg !16056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !16056
  call void @llvm.dbg.value(metadata i32 %35, metadata !15641, metadata !DIExpression()) #23, !dbg !16058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !16060, !srcloc !15647
  ret void, !dbg !16061
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16062 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16064, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.value(metadata i32 0, metadata !16065, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15565, metadata !DIExpression()) #23, !dbg !16070
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16072, !srcloc !15580
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16072
  call void @llvm.dbg.value(metadata i32 %2, metadata !15577, metadata !DIExpression()) #23, !dbg !16074
  call void @llvm.dbg.value(metadata i32 undef, metadata !15578, metadata !DIExpression()) #23, !dbg !16074
  call void @llvm.dbg.value(metadata i32 %2, metadata !15571, metadata !DIExpression()) #23, !dbg !16070
  call void @llvm.dbg.value(metadata i32 %2, metadata !16067, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.value(metadata i64 0, metadata !16064, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !16065, metadata !DIExpression()), !dbg !16069
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16075
  %4 = tail call fastcc i32 @elapsed.187() #24, !dbg !16078
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16064, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16068
  call void @llvm.dbg.value(metadata i32 %2, metadata !15633, metadata !DIExpression()) #23, !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15638, metadata !DIExpression()) #23, !dbg !16079
  call void @llvm.dbg.value(metadata i32 %2, metadata !15641, metadata !DIExpression()) #23, !dbg !16081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !16083, !srcloc !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !16065, metadata !DIExpression()), !dbg !16069
  %5 = sext i32 %4 to i64, !dbg !16078
  %6 = add i64 %3, %5, !dbg !16084
  ret i64 %6, !dbg !16085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16086 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16087
  %2 = trunc i64 %1 to i32, !dbg !16088
  ret i32 %2, !dbg !16089
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16090 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16091
  ret i64 %1, !dbg !16092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16095, metadata !DIExpression()), !dbg !16102
  %2 = icmp eq i32 %0, 0, !dbg !16103
  br i1 %2, label %10, label %3, !dbg !16105

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16106
  call void @llvm.dbg.value(metadata i32 %4, metadata !16096, metadata !DIExpression()), !dbg !16102
  %5 = shl i32 %0, 5, !dbg !16107
  call void @llvm.dbg.value(metadata i32 %5, metadata !16097, metadata !DIExpression()), !dbg !16102
  br label %6, !dbg !16108

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16109
  call void @llvm.dbg.value(metadata i32 %7, metadata !16098, metadata !DIExpression()), !dbg !16110
  %8 = sub i32 %7, %4, !dbg !16111
  %9 = icmp ult i32 %8, %5, !dbg !16113
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16115 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !16116
  ret i32 %1, !dbg !16117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16118 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !16120
  ret i32 %1, !dbg !16121
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16122 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16126, metadata !DIExpression()), !dbg !16128
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16129

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !16130
  br label %14, !dbg !16134

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16127, metadata !DIExpression()), !dbg !16128
  %6 = icmp slt i64 %2, -1, !dbg !16135
  br i1 %6, label %7, label %9, !dbg !16138

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16139
  br label %14, !dbg !16140

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !16142
  %11 = icmp ugt i64 %2, 1, !dbg !16143
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16143
  %13 = add nsw i64 %10, %12, !dbg !16144
  br label %14, !dbg !16145

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16146
  ret i64 %15, !dbg !16147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16148 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.210, i32 0, i32 0)) #25, !dbg !16150
  ret void, !dbg !16151
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!696, !2, !2532, !2534, !27, !2571, !2573, !2610, !111, !2612, !181, !2615, !2626, !2672, !2674, !2702, !2730, !2773, !2845, !2890, !210, !364, !2918, !400, !410, !435, !543, !728, !2923, !846, !912, !1182, !1370, !1603, !2944, !1715, !1802, !2946, !1837, !3008, !3035, !3084, !1881, !3087, !1888, !2250, !3105, !2272, !2380, !3107, !2495, !3110}
!llvm.ident = !{!3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112, !3112}
!llvm.module.flags = !{!3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !111, file: !142, line: 60, type: !143, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !141, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!113 = !{!114, !135}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !117, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !117, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !117, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !117, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !117, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !117, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !117, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !137, file: !116, line: 362, baseType: !120, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !137, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!141 = !{!109}
!142 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !178}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !144, file: !145, line: 60, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DISubroutineType(types: !150)
!150 = !{!103, !151}
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !155)
!154 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !{!156, !160, !161, !162, !171, !172}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !153, file: !154, line: 380, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !153, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !153, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !153, file: !154, line: 386, baseType: !163, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !165)
!165 = !{!166, !169}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !164, file: !154, line: 359, baseType: !167, size: 8)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !164, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!170 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !153, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !153, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !154, line: 43, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !177)
!177 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !144, file: !145, line: 65, baseType: !151, size: 32, offset: 32)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !181, file: !184, line: 71, type: !185, isLocal: true, isDefinition: true, align: 32)
!181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !183, splitDebugInlining: false, nameTableKind: None)
!182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!183 = !{!179}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !187)
!187 = !{!188, !207}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !145, line: 60, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!190 = !DISubroutineType(types: !191)
!191 = !{!103, !192}
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !195)
!195 = !{!196, !197, !198, !199, !205, !206}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !194, file: !154, line: 380, baseType: !157, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !194, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !194, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !194, file: !154, line: 386, baseType: !200, size: 32, offset: 96)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !201, file: !154, line: 359, baseType: !167, size: 8)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !201, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !194, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !194, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !145, line: 65, baseType: !192, size: 32, offset: 32)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "static_regions", scope: !210, file: !219, line: 62, type: !360, isLocal: true, isDefinition: true)
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !212, globals: !215, splitDebugInlining: false, nameTableKind: None)
!211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!212 = !{!213, !103, !121, !102}
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !214, line: 214, baseType: !32)
!214 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !208}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !218, file: !219, line: 198, type: !346, isLocal: true, isDefinition: true)
!218 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !219, file: !219, line: 175, type: !220, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !341)
!219 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!220 = !DISubroutineType(types: !221)
!221 = !{null, !222}
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !295, !308, !309, !310, !311, !317, !336}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !223, file: !224, line: 247, baseType: !227, size: 384)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !228)
!228 = !{!229, !257, !265, !266, !267, !280, !281, !282}
!229 = !DIDerivedType(tag: DW_TAG_member, scope: !227, file: !224, line: 60, baseType: !230, size: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !227, file: !224, line: 60, size: 64, elements: !231)
!231 = !{!232, !248}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !230, file: !224, line: 61, baseType: !233, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !236)
!236 = !{!237, !243}
!237 = !DIDerivedType(tag: DW_TAG_member, scope: !235, file: !234, line: 38, baseType: !238, size: 32)
!238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !235, file: !234, line: 38, size: 32, elements: !239)
!239 = !{!240, !242}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !238, file: !234, line: 39, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !238, file: !234, line: 40, baseType: !241, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, scope: !235, file: !234, line: 42, baseType: !244, size: 32, offset: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !235, file: !234, line: 42, size: 32, elements: !245)
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !244, file: !234, line: 43, baseType: !241, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !244, file: !234, line: 44, baseType: !241, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !230, file: !224, line: 62, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{!252}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !249, file: !250, line: 50, baseType: !253, size: 64)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !254, size: 64, elements: !255)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!255 = !{!256}
!256 = !DISubrange(count: 2)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !227, file: !224, line: 68, baseType: !258, size: 32, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !261)
!260 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !262)
!262 = !{!263}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !261, file: !260, line: 232, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !235)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !227, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !227, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!267 = !DIDerivedType(tag: DW_TAG_member, scope: !227, file: !224, line: 90, baseType: !268, size: 16, offset: 112)
!268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !227, file: !224, line: 90, size: 16, elements: !269)
!269 = !{!270, !277}
!270 = !DIDerivedType(tag: DW_TAG_member, scope: !268, file: !224, line: 91, baseType: !271, size: 16)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !268, file: !224, line: 91, size: 16, elements: !272)
!272 = !{!273, !276}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !271, file: !224, line: 96, baseType: !274, size: 8)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !275)
!275 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !271, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !268, file: !224, line: 100, baseType: !278, size: 16)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !279)
!279 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !227, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !227, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !227, file: !224, line: 131, baseType: !283, size: 192, offset: 192)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !284)
!284 = !{!285, !286, !292}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !283, file: !260, line: 245, baseType: !233, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !283, file: !260, line: 246, baseType: !287, size: 32, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !291}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !283, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !294)
!294 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !223, file: !224, line: 250, baseType: !296, size: 288, offset: 384)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !298)
!297 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !{!299, !300, !301, !302, !303, !304, !305, !306, !307}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !296, file: !297, line: 26, baseType: !121, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !296, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !296, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !296, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !296, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !296, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !296, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !296, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !296, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !223, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !223, file: !224, line: 256, baseType: !259, size: 64, offset: 704)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !223, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !223, file: !224, line: 300, baseType: !312, size: 96, offset: 800)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !313)
!313 = !{!314, !315, !316}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !312, file: !224, line: 153, baseType: !22, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !312, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !312, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !223, file: !224, line: 325, baseType: !318, size: 32, offset: 896)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = !{!322, !331, !332}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !319, file: !320, line: 5074, baseType: !323, size: 96)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !325)
!324 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !{!326, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !323, file: !324, line: 57, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !324, line: 57, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !323, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !323, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !319, file: !320, line: 5075, baseType: !259, size: 64, offset: 96)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !319, file: !320, line: 5076, baseType: !333, offset: 160)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !223, file: !224, line: 343, baseType: !337, size: 64, offset: 928)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !338)
!338 = !{!339, !340}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !337, file: !297, line: 63, baseType: !121, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !337, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!341 = !{!342, !343, !344, !345}
!342 = !DILocalVariable(name: "thread", arg: 1, scope: !218, file: !219, line: 175, type: !222)
!343 = !DILocalVariable(name: "region_num", scope: !218, file: !219, line: 200, type: !167)
!344 = !DILocalVariable(name: "guard_start", scope: !218, file: !219, line: 265, type: !22)
!345 = !DILocalVariable(name: "guard_size", scope: !218, file: !219, line: 266, type: !213)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 96, elements: !358)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !348, line: 52, size: 96, elements: !349)
!348 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351, !352}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !347, file: !348, line: 53, baseType: !22, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !347, file: !348, line: 54, baseType: !213, size: 32, offset: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !347, file: !348, line: 55, baseType: !353, size: 32, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !354, line: 151, baseType: !355)
!354 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 149, size: 32, elements: !356)
!356 = !{!357}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !355, file: !354, line: 150, baseType: !121, size: 32)
!358 = !{!359}
!359 = !DISubrange(count: 1)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !361, size: 96, elements: !358)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !364, file: !397, line: 39, type: !167, isLocal: true, isDefinition: true)
!364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !366, globals: !396, splitDebugInlining: false, nameTableKind: None)
!365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!366 = !{!367, !102, !103, !384, !167}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !369, line: 1168, baseType: !370)
!369 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 1155, size: 352, elements: !371)
!371 = !{!372, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !370, file: !369, line: 1157, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !370, file: !369, line: 1158, baseType: !120, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !370, file: !369, line: 1159, baseType: !120, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !370, file: !369, line: 1160, baseType: !120, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !370, file: !369, line: 1161, baseType: !120, size: 32, offset: 128)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !370, file: !369, line: 1162, baseType: !120, size: 32, offset: 160)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !370, file: !369, line: 1163, baseType: !120, size: 32, offset: 192)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !370, file: !369, line: 1164, baseType: !120, size: 32, offset: 224)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !370, file: !369, line: 1165, baseType: !120, size: 32, offset: 256)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !370, file: !369, line: 1166, baseType: !120, size: 32, offset: 288)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !370, file: !369, line: 1167, baseType: !120, size: 32, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !387, line: 27, size: 96, elements: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = !{!389, !390, !391}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !386, file: !387, line: 29, baseType: !121, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !386, file: !387, line: 31, baseType: !157, size: 32, offset: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !386, file: !387, line: 37, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !354, line: 146, baseType: !393)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !354, line: 141, size: 32, elements: !394)
!394 = !{!395}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !393, file: !354, line: 143, baseType: !121, size: 32)
!396 = !{!362}
!397 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !400, file: !407, line: 21, type: !106, isLocal: true, isDefinition: true)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !402, globals: !406, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!402 = !{!403, !103, !102}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !405, line: 22, baseType: !103)
!405 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = !{!398}
!407 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !410, file: !415, line: 13, type: !432, isLocal: true, isDefinition: true)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !412, splitDebugInlining: false, nameTableKind: None)
!411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!412 = !{!413, !408}
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "mpu_config", scope: !410, file: !415, line: 37, type: !416, isLocal: false, isDefinition: true)
!415 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !387, line: 41, size: 64, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !417, file: !387, line: 43, baseType: !121, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !417, file: !387, line: 45, baseType: !421, size: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !387, line: 27, size: 96, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !423, file: !387, line: 29, baseType: !121, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !423, file: !387, line: 31, baseType: !157, size: 32, offset: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !423, file: !387, line: 37, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !354, line: 146, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !354, line: 141, size: 32, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !429, file: !354, line: 143, baseType: !121, size: 32)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 192, elements: !255)
!433 = !DIGlobalVariableExpression(var: !434, expr: !DIExpression())
!434 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !435, file: !532, line: 36, type: !533, isLocal: true, isDefinition: true, align: 32)
!435 = distinct !DICompileUnit(language: DW_LANG_C99, file: !436, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !437, retainedTypes: !449, globals: !531, splitDebugInlining: false, nameTableKind: None)
!436 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!437 = !{!438, !444}
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !439, line: 506, baseType: !32, size: 32, elements: !440)
!439 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!440 = !{!441, !442, !443}
!441 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!442 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!443 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!444 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !439, line: 512, baseType: !32, size: 32, elements: !445)
!445 = !{!446, !447, !448}
!446 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!447 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!448 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!449 = !{!450, !520, !525, !485, !444, !438, !530, !102}
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !439, line: 523, size: 288, elements: !453)
!453 = !{!454, !475, !481, !486, !490, !491, !492, !496, !516}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !452, file: !439, line: 524, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DISubroutineType(types: !457)
!457 = !{!103, !458, !473, !474}
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !461)
!461 = !{!462, !463, !464, !465, !471, !472}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !460, file: !154, line: 380, baseType: !157, size: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !460, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !460, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !460, file: !154, line: 386, baseType: !466, size: 32, offset: 96)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !468)
!468 = !{!469, !470}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !467, file: !154, line: 359, baseType: !167, size: 8)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !467, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !460, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !460, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !439, line: 237, baseType: !167)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !439, line: 257, baseType: !121)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !452, file: !439, line: 530, baseType: !476, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 32)
!477 = !DISubroutineType(types: !478)
!478 = !{!103, !458, !479}
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !439, line: 229, baseType: !121)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !452, file: !439, line: 532, baseType: !482, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = !DISubroutineType(types: !484)
!484 = !{!103, !458, !485, !480}
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !439, line: 216, baseType: !121)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !452, file: !439, line: 535, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = !DISubroutineType(types: !489)
!489 = !{!103, !458, !485}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !452, file: !439, line: 537, baseType: !487, size: 32, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !452, file: !439, line: 539, baseType: !487, size: 32, offset: 160)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !452, file: !439, line: 541, baseType: !493, size: 32, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DISubroutineType(types: !495)
!495 = !{!103, !458, !473, !438, !444}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !452, file: !439, line: 544, baseType: !497, size: 32, offset: 224)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DISubroutineType(types: !499)
!499 = !{!103, !458, !500, !170}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 32)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !439, line: 478, size: 96, elements: !502)
!502 = !{!503, !510, !515}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !501, file: !439, line: 482, baseType: !504, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !505, line: 33, baseType: !506)
!505 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !505, line: 29, size: 32, elements: !507)
!507 = !{!508}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !506, file: !505, line: 30, baseType: !509, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !501, file: !439, line: 485, baseType: !511, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !439, line: 464, baseType: !512)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DISubroutineType(types: !514)
!514 = !{null, !458, !500, !485}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !501, file: !439, line: 493, baseType: !485, size: 32, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !452, file: !439, line: 547, baseType: !517, size: 32, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!518 = !DISubroutineType(types: !519)
!519 = !{!121, !458}
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !439, line: 428, size: 32, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !522, file: !439, line: 434, baseType: !485, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !439, line: 441, size: 32, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !527, file: !439, line: 447, baseType: !485, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!531 = !{!433}
!532 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !535)
!535 = !{!536, !540}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !534, file: !145, line: 60, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!538 = !DISubroutineType(types: !539)
!539 = !{!103, !458}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !534, file: !145, line: 65, baseType: !458, size: 32, offset: 32)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !543, file: !615, line: 48, type: !691, isLocal: true, isDefinition: true)
!543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !545, retainedTypes: !601, globals: !612, splitDebugInlining: false, nameTableKind: None)
!544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!545 = !{!30, !546}
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 69, baseType: !103, size: 32, elements: !547)
!547 = !{!548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600}
!548 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!549 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!550 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!551 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!552 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!553 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!554 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!555 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!556 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!557 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!558 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!559 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!560 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!561 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!562 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!563 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!564 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!565 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!566 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!567 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!568 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!569 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!570 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!571 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!572 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!573 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!574 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!575 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!576 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!577 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!578 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!579 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!580 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!581 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!582 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!583 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!584 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!585 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!586 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!587 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!588 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!589 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!590 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!591 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!592 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!593 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!594 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!595 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!596 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!597 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!598 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!599 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!600 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!601 = !{!213, !103, !102, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 270, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 262, size: 192, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !604, file: !116, line: 264, baseType: !120, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !604, file: !116, line: 265, baseType: !120, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !604, file: !116, line: 266, baseType: !120, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !604, file: !116, line: 267, baseType: !120, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !604, file: !116, line: 268, baseType: !120, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !604, file: !116, line: 269, baseType: !120, size: 32, offset: 160)
!612 = !{!613, !619, !635, !646, !663, !541, !665, !679, !681, !683, !685, !687, !689}
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !543, file: !615, line: 424, type: !616, isLocal: false, isDefinition: true, align: 16)
!615 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 4)
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !543, file: !615, line: 424, type: !621, isLocal: false, isDefinition: true, align: 32)
!621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !623)
!623 = !{!624, !625, !626, !627, !633, !634}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !622, file: !154, line: 380, baseType: !157, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !622, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !622, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !622, file: !154, line: 386, baseType: !628, size: 32, offset: 96)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 32)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !630)
!630 = !{!631, !632}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !629, file: !154, line: 359, baseType: !167, size: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !629, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !622, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !622, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !543, file: !615, line: 424, type: !637, isLocal: true, isDefinition: true, align: 32)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !639)
!639 = !{!640, !645}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !638, file: !145, line: 60, baseType: !641, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{!103, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !638, file: !145, line: 65, baseType: !644, size: 32, offset: 32)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "exti_data", scope: !543, file: !615, line: 423, type: !648, isLocal: true, isDefinition: true)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !615, line: 107, size: 1024, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !648, file: !615, line: 109, baseType: !651, size: 1024)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 1024, elements: !661)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !615, line: 101, size: 64, elements: !653)
!653 = !{!654, !660}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !652, file: !615, line: 102, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !656, line: 63, baseType: !657)
!656 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 32)
!658 = !DISubroutineType(types: !659)
!659 = !{null, !103, !102}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !652, file: !615, line: 103, baseType: !102, size: 32, offset: 32)
!661 = !{!662}
!662 = !DISubrange(count: 16)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !543, file: !615, line: 424, type: !629, isLocal: true, isDefinition: true, align: 8)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !667, file: !615, line: 493, type: !672, isLocal: true, isDefinition: true, align: 32)
!667 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !615, file: !615, line: 460, type: !668, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !670)
!668 = !DISubroutineType(types: !669)
!669 = !{null, !644}
!670 = !{!671}
!671 = !DILocalVariable(name: "dev", arg: 1, scope: !667, file: !615, line: 460, type: !644)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !673)
!673 = !{!674, !676, !677, !678}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !672, file: !10, line: 55, baseType: !675, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !672, file: !10, line: 57, baseType: !675, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !672, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !672, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !667, file: !615, line: 497, type: !672, isLocal: true, isDefinition: true, align: 32)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !667, file: !615, line: 507, type: !672, isLocal: true, isDefinition: true, align: 32)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !667, file: !615, line: 512, type: !672, isLocal: true, isDefinition: true, align: 32)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !667, file: !615, line: 516, type: !672, isLocal: true, isDefinition: true, align: 32)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !667, file: !615, line: 523, type: !672, isLocal: true, isDefinition: true, align: 32)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !667, file: !615, line: 527, type: !672, isLocal: true, isDefinition: true, align: 32)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !692, size: 512, elements: !661)
!692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 127, baseType: !546)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !696, file: !701, line: 21, type: !723, isLocal: false, isDefinition: true, align: 16)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!698 = !{!699, !694, !705, !707, !709, !711, !713, !715, !717, !719, !721}
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !696, file: !701, line: 16, type: !702, isLocal: false, isDefinition: true, align: 16)
!701 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 176, elements: !703)
!703 = !{!704}
!704 = !DISubrange(count: 11)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !696, file: !701, line: 28, type: !616, isLocal: false, isDefinition: true, align: 16)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !696, file: !701, line: 35, type: !616, isLocal: false, isDefinition: true, align: 16)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !696, file: !701, line: 42, type: !616, isLocal: false, isDefinition: true, align: 16)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !696, file: !701, line: 49, type: !616, isLocal: false, isDefinition: true, align: 16)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !696, file: !701, line: 56, type: !616, isLocal: false, isDefinition: true, align: 16)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !696, file: !701, line: 63, type: !616, isLocal: false, isDefinition: true, align: 16)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !696, file: !701, line: 70, type: !616, isLocal: false, isDefinition: true, align: 16)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !696, file: !701, line: 77, type: !616, isLocal: false, isDefinition: true, align: 16)
!721 = !DIGlobalVariableExpression(var: !722, expr: !DIExpression())
!722 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_30", scope: !696, file: !701, line: 82, type: !723, isLocal: false, isDefinition: true, align: 16)
!723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 48, elements: !724)
!724 = !{!725}
!725 = !DISubrange(count: 3)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !728, file: !772, line: 398, type: !805, isLocal: true, isDefinition: true)
!728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !729, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !730, retainedTypes: !743, globals: !769, splitDebugInlining: false, nameTableKind: None)
!729 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!730 = !{!731, !30, !736}
!731 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 190, baseType: !32, size: 32, elements: !733)
!732 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !{!734, !735}
!734 = !DIEnumerator(name: "SUCCESS", value: 0)
!735 = !DIEnumerator(name: "ERROR", value: 1)
!736 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !737, line: 44, baseType: !32, size: 32, elements: !738)
!737 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!738 = !{!739, !740, !741, !742}
!739 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!740 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!741 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!742 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!743 = !{!102, !103, !121, !744, !762, !768}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !746, file: !116, line: 372, baseType: !120, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !746, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !746, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !746, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !746, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !746, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !746, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !746, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !746, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !746, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !746, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !746, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !746, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !746, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 32)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !764, line: 343, size: 64, elements: !765)
!764 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!765 = !{!766, !767}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !763, file: !764, line: 344, baseType: !121, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !763, file: !764, line: 345, baseType: !121, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!769 = !{!770, !776, !792, !803, !726}
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !728, file: !772, line: 752, type: !773, isLocal: false, isDefinition: true, align: 16)
!772 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 512, elements: !774)
!774 = !{!775}
!775 = !DISubrange(count: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !728, file: !772, line: 752, type: !778, isLocal: false, isDefinition: true, align: 32)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !780)
!780 = !{!781, !782, !783, !784, !790, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !779, file: !154, line: 380, baseType: !157, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !779, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !779, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !779, file: !154, line: 386, baseType: !785, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !786, file: !154, line: 359, baseType: !167, size: 8)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !786, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !779, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !779, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !728, file: !772, line: 752, type: !794, isLocal: true, isDefinition: true, align: 32)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !796)
!796 = !{!797, !802}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !795, file: !145, line: 60, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!103, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !795, file: !145, line: 65, baseType: !801, size: 32, offset: 32)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !728, file: !772, line: 752, type: !786, isLocal: true, isDefinition: true, align: 8)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !737, line: 100, size: 224, elements: !806)
!806 = !{!807, !813, !814, !823, !828, !833, !839}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !805, file: !737, line: 101, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !737, line: 76, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = !DISubroutineType(types: !811)
!811 = !{!103, !801, !812}
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !737, line: 56, baseType: !102)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !805, file: !737, line: 102, baseType: !808, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !805, file: !737, line: 103, baseType: !815, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !737, line: 83, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{!103, !801, !812, !819, !102}
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !737, line: 72, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{null, !801, !812, !102}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !805, file: !737, line: 104, baseType: !824, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !737, line: 79, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DISubroutineType(types: !827)
!827 = !{!103, !801, !812, !768}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !805, file: !737, line: 105, baseType: !829, size: 32, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !737, line: 88, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DISubroutineType(types: !832)
!832 = !{!736, !801, !812}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !805, file: !737, line: 106, baseType: !834, size: 32, offset: 160)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !737, line: 92, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!836 = !DISubroutineType(types: !837)
!837 = !{!103, !801, !812, !838}
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !737, line: 64, baseType: !102)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !805, file: !737, line: 107, baseType: !840, size: 32, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !737, line: 96, baseType: !841)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!103, !801, !812, !102}
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !846, file: !903, line: 603, type: !905, isLocal: true, isDefinition: true, align: 32)
!846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !848, globals: !900, splitDebugInlining: false, nameTableKind: None)
!847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!848 = !{!102, !103, !849}
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !852, line: 336, size: 160, elements: !853)
!852 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!853 = !{!854, !874, !878, !882, !895}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !851, file: !852, line: 365, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DISubroutineType(types: !857)
!857 = !{!103, !858, !873}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !861)
!861 = !{!862, !863, !864, !865, !871, !872}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !860, file: !154, line: 380, baseType: !157, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !860, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !860, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !860, file: !154, line: 386, baseType: !866, size: 32, offset: 96)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !867, file: !154, line: 359, baseType: !167, size: 8)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !867, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !860, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !860, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !851, file: !852, line: 366, baseType: !875, size: 32, offset: 32)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!876 = !DISubroutineType(types: !877)
!877 = !{null, !858, !168}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !851, file: !852, line: 374, baseType: !879, size: 32, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DISubroutineType(types: !881)
!881 = !{!103, !858}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !851, file: !852, line: 377, baseType: !883, size: 32, offset: 96)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = !DISubroutineType(types: !885)
!885 = !{!103, !858, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !852, line: 122, size: 64, elements: !889)
!889 = !{!890, !891, !892, !893, !894}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !888, file: !852, line: 123, baseType: !121, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !888, file: !852, line: 124, baseType: !167, size: 8, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !888, file: !852, line: 125, baseType: !167, size: 8, offset: 40)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !888, file: !852, line: 126, baseType: !167, size: 8, offset: 48)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !888, file: !852, line: 127, baseType: !167, size: 8, offset: 56)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !851, file: !852, line: 379, baseType: !896, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!103, !858, !899}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!900 = !{!844, !901}
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !846, file: !903, line: 38, type: !904, isLocal: true, isDefinition: true)
!903 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !907)
!907 = !{!908, !909}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !906, file: !145, line: 60, baseType: !879, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !906, file: !145, line: 65, baseType: !858, size: 32, offset: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !912, file: !1063, line: 762, type: !1161, isLocal: true, isDefinition: true)
!912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !914, retainedTypes: !921, globals: !1060, splitDebugInlining: false, nameTableKind: None)
!913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!914 = !{!30, !438, !444, !915, !736}
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !656, line: 43, baseType: !32, size: 32, elements: !916)
!916 = !{!917, !918, !919, !920}
!917 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!918 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!919 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!920 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!921 = !{!102, !103, !922, !986, !991, !485, !444, !438, !996, !997, !121, !1011, !967, !1019, !1020, !1021}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !439, line: 523, size: 288, elements: !925)
!925 = !{!926, !945, !949, !953, !957, !958, !959, !963, !982}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !924, file: !439, line: 524, baseType: !927, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DISubroutineType(types: !929)
!929 = !{!103, !930, !473, !474}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !933)
!933 = !{!934, !935, !936, !937, !943, !944}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !932, file: !154, line: 380, baseType: !157, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !932, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !932, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !932, file: !154, line: 386, baseType: !938, size: 32, offset: 96)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !940)
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !939, file: !154, line: 359, baseType: !167, size: 8)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !939, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !932, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !932, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !924, file: !439, line: 530, baseType: !946, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!103, !930, !479}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !924, file: !439, line: 532, baseType: !950, size: 32, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!103, !930, !485, !480}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !924, file: !439, line: 535, baseType: !954, size: 32, offset: 96)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{!103, !930, !485}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !924, file: !439, line: 537, baseType: !954, size: 32, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !924, file: !439, line: 539, baseType: !954, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !924, file: !439, line: 541, baseType: !960, size: 32, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{!103, !930, !473, !438, !444}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !924, file: !439, line: 544, baseType: !964, size: 32, offset: 224)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!103, !930, !967, !170}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !439, line: 478, size: 96, elements: !969)
!969 = !{!970, !976, !981}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !968, file: !439, line: 482, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !505, line: 33, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !505, line: 29, size: 32, elements: !973)
!973 = !{!974}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !972, file: !505, line: 30, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !968, file: !439, line: 485, baseType: !977, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !439, line: 464, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !930, !967, !485}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !968, file: !439, line: 493, baseType: !485, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !924, file: !439, line: 547, baseType: !983, size: 32, offset: 256)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DISubroutineType(types: !985)
!985 = !{!121, !930}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !439, line: 428, size: 32, elements: !989)
!989 = !{!990}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !988, file: !439, line: 434, baseType: !485, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !439, line: 441, size: 32, elements: !994)
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !993, file: !439, line: 447, baseType: !485, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !999, file: !116, line: 305, baseType: !120, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !999, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !999, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !999, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !999, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !999, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !999, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !999, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !999, file: !116, line: 313, baseType: !1010, size: 64, offset: 256)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !255)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 325, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 320, size: 192, elements: !1014)
!1014 = !{!1015, !1016, !1017}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1013, file: !116, line: 322, baseType: !120, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1013, file: !116, line: 323, baseType: !120, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1013, file: !116, line: 324, baseType: !1018, size: 128, offset: 64)
!1018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !617)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !737, line: 100, size: 224, elements: !1024)
!1024 = !{!1025, !1030, !1031, !1040, !1045, !1050, !1055}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1023, file: !737, line: 101, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !737, line: 76, baseType: !1027)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!103, !930, !812}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1023, file: !737, line: 102, baseType: !1026, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1023, file: !737, line: 103, baseType: !1032, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !737, line: 83, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !930, !812, !1036, !102}
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !737, line: 72, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{null, !930, !812, !102}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1023, file: !737, line: 104, baseType: !1041, size: 32, offset: 96)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !737, line: 79, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!103, !930, !812, !768}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1023, file: !737, line: 105, baseType: !1046, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !737, line: 88, baseType: !1047)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!736, !930, !812}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1023, file: !737, line: 106, baseType: !1051, size: 32, offset: 160)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !737, line: 92, baseType: !1052)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!103, !930, !812, !838}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1023, file: !737, line: 107, baseType: !1056, size: 32, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !737, line: 96, baseType: !1057)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!103, !930, !812, !102}
!1060 = !{!1061, !1067, !1069, !1079, !1084, !1086, !1088, !1093, !1095, !1097, !1102, !1104, !1106, !1108, !1110, !1112, !1117, !1119, !1121, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !1151, !1153, !1155, !910, !1157, !1159, !1172, !1174, !1176, !1178}
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !912, file: !1063, line: 762, type: !1064, isLocal: false, isDefinition: true, align: 16)
!1063 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 128, elements: !1065)
!1065 = !{!1066}
!1066 = !DISubrange(count: 8)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !912, file: !1063, line: 762, type: !931, isLocal: false, isDefinition: true, align: 32)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !912, file: !1063, line: 762, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1073)
!1073 = !{!1074, !1078}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1072, file: !145, line: 60, baseType: !1075, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!103, !930}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1072, file: !145, line: 65, baseType: !930, size: 32, offset: 32)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !912, file: !1063, line: 766, type: !1081, isLocal: false, isDefinition: true, align: 16)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 144, elements: !1082)
!1082 = !{!1083}
!1083 = !DISubrange(count: 9)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !912, file: !1063, line: 766, type: !931, isLocal: false, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !912, file: !1063, line: 766, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !912, file: !1063, line: 770, type: !1090, isLocal: false, isDefinition: true, align: 16)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 96, elements: !1091)
!1091 = !{!1092}
!1092 = !DISubrange(count: 6)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !912, file: !1063, line: 770, type: !931, isLocal: false, isDefinition: true, align: 32)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !912, file: !1063, line: 770, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !912, file: !1063, line: 774, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 80, elements: !1100)
!1100 = !{!1101}
!1101 = !DISubrange(count: 5)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !912, file: !1063, line: 774, type: !931, isLocal: false, isDefinition: true, align: 32)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !912, file: !1063, line: 774, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !912, file: !1063, line: 778, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !912, file: !1063, line: 778, type: !931, isLocal: false, isDefinition: true, align: 32)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !912, file: !1063, line: 778, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !912, file: !1063, line: 790, type: !1114, isLocal: false, isDefinition: true, align: 16)
!1114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 112, elements: !1115)
!1115 = !{!1116}
!1116 = !DISubrange(count: 7)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !912, file: !1063, line: 790, type: !931, isLocal: false, isDefinition: true, align: 32)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !912, file: !1063, line: 790, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !912, file: !1063, line: 762, type: !1123, isLocal: true, isDefinition: true)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1124, line: 237, size: 128, elements: !1125)
!1124 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1125 = !{!1126, !1127, !1128}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1123, file: !1124, line: 239, baseType: !993, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1123, file: !1124, line: 241, baseType: !930, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1123, file: !1124, line: 243, baseType: !1129, size: 64, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !505, line: 40, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !505, line: 35, size: 64, elements: !1131)
!1131 = !{!1132, !1134}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1130, file: !505, line: 36, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1130, file: !505, line: 37, baseType: !1133, size: 32, offset: 32)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !912, file: !1063, line: 762, type: !939, isLocal: true, isDefinition: true, align: 8)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !912, file: !1063, line: 766, type: !1123, isLocal: true, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !912, file: !1063, line: 766, type: !939, isLocal: true, isDefinition: true, align: 8)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !912, file: !1063, line: 770, type: !1123, isLocal: true, isDefinition: true)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !912, file: !1063, line: 770, type: !939, isLocal: true, isDefinition: true, align: 8)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !912, file: !1063, line: 774, type: !1123, isLocal: true, isDefinition: true)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !912, file: !1063, line: 774, type: !939, isLocal: true, isDefinition: true, align: 8)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !912, file: !1063, line: 778, type: !1123, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !912, file: !1063, line: 778, type: !939, isLocal: true, isDefinition: true, align: 8)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !912, file: !1063, line: 790, type: !1123, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !912, file: !1063, line: 790, type: !939, isLocal: true, isDefinition: true, align: 8)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !912, file: !1063, line: 656, type: !923, isLocal: true, isDefinition: true)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !912, file: !1063, line: 766, type: !1161, isLocal: true, isDefinition: true)
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1124, line: 224, size: 160, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1162, file: !1124, line: 226, baseType: !988, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1162, file: !1124, line: 228, baseType: !768, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1162, file: !1124, line: 230, baseType: !103, size: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1162, file: !1124, line: 231, baseType: !1168, size: 64, offset: 96)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !764, line: 343, size: 64, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1168, file: !764, line: 344, baseType: !121, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1168, file: !764, line: 345, baseType: !121, size: 32, offset: 32)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !912, file: !1063, line: 770, type: !1161, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !912, file: !1063, line: 774, type: !1161, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !912, file: !1063, line: 778, type: !1161, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !912, file: !1063, line: 790, type: !1161, isLocal: true, isDefinition: true)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "lock", scope: !1182, file: !1238, line: 17, type: !1262, isLocal: false, isDefinition: true, align: 32)
!1182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1184, retainedTypes: !1192, globals: !1235, splitDebugInlining: false, nameTableKind: None)
!1183 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/eeprom/eeprom_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1184 = !{!30, !1185}
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1186, line: 39, baseType: !32, size: 32, elements: !1187)
!1186 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1187 = !{!1188, !1189, !1190, !1191}
!1188 = !DIEnumerator(name: "HAL_OK", value: 0)
!1189 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!1190 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!1191 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!1192 = !{!1193, !102, !103, !1231, !1233}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eeprom_driver_api", file: !1196, line: 42, size: 96, elements: !1197)
!1196 = !DIFile(filename: "zephyr/include/zephyr/drivers/eeprom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1197 = !{!1198, !1221, !1226}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1195, file: !1196, line: 43, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "eeprom_api_read", file: !1196, line: 35, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!103, !1203, !1218, !102, !213}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1216, !1217}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1205, file: !154, line: 380, baseType: !157, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1205, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1205, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1205, file: !154, line: 386, baseType: !1211, size: 32, offset: 96)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1213)
!1213 = !{!1214, !1215}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1212, file: !154, line: 359, baseType: !167, size: 8)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1212, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1205, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1205, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1219, line: 36, baseType: !1220)
!1219 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1220 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1195, file: !1196, line: 44, baseType: !1222, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "eeprom_api_write", file: !1196, line: 38, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!103, !1203, !1218, !13, !213}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1195, file: !1196, line: 45, baseType: !1227, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "eeprom_api_size", file: !1196, line: 40, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!213, !1203}
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1232, line: 46, baseType: !293)
!1232 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1235 = !{!1180, !1236, !1239, !1241, !1251, !1253, !1260}
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_30", scope: !1182, file: !1238, line: 126, type: !616, isLocal: false, isDefinition: true, align: 16)
!1238 = !DIFile(filename: "zephyr/drivers/eeprom/eeprom_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_30", scope: !1182, file: !1238, line: 126, type: !1204, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_30", scope: !1182, file: !1238, line: 126, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1245)
!1245 = !{!1246, !1250}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1244, file: !145, line: 60, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!103, !1203}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1244, file: !145, line: 65, baseType: !1203, size: 32, offset: 32)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_30", scope: !1182, file: !1238, line: 126, type: !1212, isLocal: true, isDefinition: true, align: 8)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "eeprom_config", scope: !1182, file: !1238, line: 121, type: !1255, isLocal: true, isDefinition: true)
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eeprom_stm32_config", file: !1238, line: 19, size: 64, elements: !1257)
!1257 = !{!1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1256, file: !1238, line: 20, baseType: !121, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1256, file: !1238, line: 21, baseType: !213, size: 32, offset: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "eeprom_stm32_api", scope: !1182, file: !1238, line: 115, type: !1194, isLocal: true, isDefinition: true)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !320, line: 2720, size: 160, elements: !1263)
!1263 = !{!1264, !1283, !1366, !1367}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1262, file: !320, line: 2722, baseType: !1265, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !1267)
!1267 = !{!1268}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1266, file: !260, line: 232, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !1271)
!1271 = !{!1272, !1278}
!1272 = !DIDerivedType(tag: DW_TAG_member, scope: !1270, file: !234, line: 38, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1270, file: !234, line: 38, size: 32, elements: !1274)
!1274 = !{!1275, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1273, file: !234, line: 39, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1273, file: !234, line: 40, baseType: !1276, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_member, scope: !1270, file: !234, line: 42, baseType: !1279, size: 32, offset: 32)
!1279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1270, file: !234, line: 42, size: 32, elements: !1280)
!1280 = !{!1281, !1282}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1279, file: !234, line: 43, baseType: !1276, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1279, file: !234, line: 44, baseType: !1276, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1262, file: !320, line: 2724, baseType: !1284, size: 32, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !1286)
!1286 = !{!1287, !1327, !1339, !1340, !1341, !1342, !1348, !1361}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1285, file: !224, line: 247, baseType: !1288, size: 384)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !1289)
!1289 = !{!1290, !1301, !1303, !1304, !1305, !1314, !1315, !1316}
!1290 = !DIDerivedType(tag: DW_TAG_member, scope: !1288, file: !224, line: 60, baseType: !1291, size: 64)
!1291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1288, file: !224, line: 60, size: 64, elements: !1292)
!1292 = !{!1293, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1291, file: !224, line: 61, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !1270)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1291, file: !224, line: 62, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !1297)
!1297 = !{!1298}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1296, file: !250, line: 50, baseType: !1299, size: 64)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 64, elements: !255)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1288, file: !224, line: 68, baseType: !1302, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1288, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1288, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!1305 = !DIDerivedType(tag: DW_TAG_member, scope: !1288, file: !224, line: 90, baseType: !1306, size: 16, offset: 112)
!1306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1288, file: !224, line: 90, size: 16, elements: !1307)
!1307 = !{!1308, !1313}
!1308 = !DIDerivedType(tag: DW_TAG_member, scope: !1306, file: !224, line: 91, baseType: !1309, size: 16)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1306, file: !224, line: 91, size: 16, elements: !1310)
!1310 = !{!1311, !1312}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1309, file: !224, line: 96, baseType: !274, size: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1309, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1306, file: !224, line: 100, baseType: !278, size: 16)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1288, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1288, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1288, file: !224, line: 131, baseType: !1317, size: 192, offset: 192)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !1318)
!1318 = !{!1319, !1320, !1326}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1317, file: !260, line: 245, baseType: !1294, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1317, file: !260, line: 246, baseType: !1321, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{null, !1325}
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1317, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1285, file: !224, line: 250, baseType: !1328, size: 288, offset: 384)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1328, file: !297, line: 26, baseType: !121, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1328, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1328, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1328, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1328, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1328, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1328, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1328, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1328, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1285, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1285, file: !224, line: 256, baseType: !1265, size: 64, offset: 704)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1285, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1285, file: !224, line: 300, baseType: !1343, size: 96, offset: 800)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !1344)
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1343, file: !224, line: 153, baseType: !22, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1343, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1343, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1285, file: !224, line: 325, baseType: !1349, size: 32, offset: 896)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !1351)
!1351 = !{!1352, !1358, !1359}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1350, file: !320, line: 5074, baseType: !1353, size: 96)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !1354)
!1354 = !{!1355, !1356, !1357}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1353, file: !324, line: 57, baseType: !327, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1353, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1353, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1350, file: !320, line: 5075, baseType: !1265, size: 64, offset: 96)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1350, file: !320, line: 5076, baseType: !1360, offset: 160)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1285, file: !224, line: 343, baseType: !1362, size: 64, offset: 928)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1362, file: !297, line: 63, baseType: !121, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1362, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1262, file: !320, line: 2727, baseType: !121, size: 32, offset: 96)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1262, file: !320, line: 2730, baseType: !103, size: 32, offset: 128)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1370, file: !1508, line: 1914, type: !1576, isLocal: true, isDefinition: true)
!1370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1372, retainedTypes: !1405, globals: !1505, splitDebugInlining: false, nameTableKind: None)
!1371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1372 = !{!30, !1373, !1380, !1387, !1394, !1400, !736}
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !852, line: 47, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378, !1379}
!1375 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1376 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1377 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1378 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1379 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1380 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !852, line: 75, baseType: !32, size: 32, elements: !1381)
!1381 = !{!1382, !1383, !1384, !1385, !1386}
!1382 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1383 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1384 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1385 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1386 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !852, line: 92, baseType: !32, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393}
!1389 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1390 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1391 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1392 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1393 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1394 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !852, line: 84, baseType: !32, size: 32, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399}
!1396 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1397 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1398 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1399 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1400 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !852, line: 107, baseType: !32, size: 32, elements: !1401)
!1401 = !{!1402, !1403, !1404}
!1402 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1403 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1404 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1405 = !{!102, !103, !1406, !168, !167, !1455, !121, !812, !1466, !278}
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !852, line: 336, size: 160, elements: !1409)
!1409 = !{!1410, !1429, !1433, !1437, !1450}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1408, file: !852, line: 365, baseType: !1411, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!103, !1414, !873}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1427, !1428}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1416, file: !154, line: 380, baseType: !157, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1416, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1416, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1416, file: !154, line: 386, baseType: !1422, size: 32, offset: 96)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1423, file: !154, line: 359, baseType: !167, size: 8)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1423, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1416, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1416, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1408, file: !852, line: 366, baseType: !1430, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{null, !1414, !168}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1408, file: !852, line: 374, baseType: !1434, size: 32, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!103, !1414}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1408, file: !852, line: 377, baseType: !1438, size: 32, offset: 96)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!103, !1414, !1441}
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !852, line: 122, size: 64, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1443, file: !852, line: 123, baseType: !121, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1443, file: !852, line: 124, baseType: !167, size: 8, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1443, file: !852, line: 125, baseType: !167, size: 8, offset: 40)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1443, file: !852, line: 126, baseType: !167, size: 8, offset: 48)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1443, file: !852, line: 127, baseType: !167, size: 8, offset: 56)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1408, file: !852, line: 379, baseType: !1451, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!103, !1414, !1454}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 505, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 496, size: 224, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463, !1464, !1465}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1457, file: !116, line: 498, baseType: !120, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1457, file: !116, line: 499, baseType: !120, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1457, file: !116, line: 500, baseType: !120, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1457, file: !116, line: 501, baseType: !120, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1457, file: !116, line: 502, baseType: !120, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1457, file: !116, line: 503, baseType: !120, size: 32, offset: 160)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1457, file: !116, line: 504, baseType: !120, size: 32, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !737, line: 100, size: 224, elements: !1469)
!1469 = !{!1470, !1475, !1476, !1485, !1490, !1495, !1500}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1468, file: !737, line: 101, baseType: !1471, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !737, line: 76, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!103, !1414, !812}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1468, file: !737, line: 102, baseType: !1471, size: 32, offset: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1468, file: !737, line: 103, baseType: !1477, size: 32, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !737, line: 83, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!103, !1414, !812, !1481, !102}
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !737, line: 72, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{null, !1414, !812, !102}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1468, file: !737, line: 104, baseType: !1486, size: 32, offset: 96)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !737, line: 79, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!103, !1414, !812, !768}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1468, file: !737, line: 105, baseType: !1491, size: 32, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !737, line: 88, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!736, !1414, !812}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1468, file: !737, line: 106, baseType: !1496, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !737, line: 92, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!103, !1414, !812, !838}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1468, file: !737, line: 107, baseType: !1501, size: 32, offset: 192)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !737, line: 96, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!103, !1414, !812, !102}
!1505 = !{!1506, !1509, !1511, !1518, !1520, !1522, !1524, !1526, !1368, !1528, !1536, !1559, !1562, !1565, !1567, !1574, !1591, !1593, !1595, !1597, !1599}
!1506 = !DIGlobalVariableExpression(var: !1507, expr: !DIExpression())
!1507 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1064, isLocal: false, isDefinition: true, align: 16)
!1508 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1415, isLocal: false, isDefinition: true, align: 32)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1513, isLocal: true, isDefinition: true, align: 32)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1515)
!1515 = !{!1516, !1517}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1514, file: !145, line: 60, baseType: !1434, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1514, file: !145, line: 65, baseType: !1414, size: 32, offset: 32)
!1518 = !DIGlobalVariableExpression(var: !1519, expr: !DIExpression())
!1519 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1064, isLocal: false, isDefinition: true, align: 16)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1415, isLocal: false, isDefinition: true, align: 32)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1513, isLocal: true, isDefinition: true, align: 32)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1423, isLocal: true, isDefinition: true, align: 8)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1423, isLocal: true, isDefinition: true, align: 8)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1370, file: !1508, line: 1914, type: !1530, isLocal: true, isDefinition: true)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 64, elements: !358)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !764, line: 343, size: 64, elements: !1533)
!1533 = !{!1534, !1535}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1532, file: !764, line: 344, baseType: !121, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1532, file: !764, line: 345, baseType: !121, size: 32, offset: 32)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1540, line: 60, size: 64, elements: !1541)
!1540 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1541 = !{!1542, !1558}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1539, file: !1540, line: 69, baseType: !1543, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1540, line: 50, size: 64, elements: !1546)
!1546 = !{!1547, !1556, !1557}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1545, file: !1540, line: 52, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1551, line: 37, baseType: !1552)
!1551 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1551, line: 32, size: 64, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1552, file: !1551, line: 34, baseType: !121, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1552, file: !1551, line: 36, baseType: !121, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1545, file: !1540, line: 54, baseType: !167, size: 8, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1545, file: !1540, line: 56, baseType: !167, size: 8, offset: 40)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1539, file: !1540, line: 71, baseType: !167, size: 8, offset: 32)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1561, isLocal: true, isDefinition: true)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1544, size: 64, elements: !358)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1370, file: !1508, line: 1914, type: !1564, isLocal: true, isDefinition: true)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1549, size: 128, elements: !255)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1370, file: !1508, line: 1539, type: !1407, isLocal: true, isDefinition: true)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1370, file: !1508, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1570, line: 74, size: 64, elements: !1571)
!1570 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1571 = !{!1572, !1573}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1569, file: !1570, line: 76, baseType: !121, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1569, file: !1570, line: 78, baseType: !1414, size: 32, offset: 32)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1370, file: !1508, line: 1914, type: !1576, isLocal: true, isDefinition: true)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1570, line: 22, size: 224, elements: !1578)
!1578 = !{!1579, !1580, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1577, file: !1570, line: 24, baseType: !1455, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1577, file: !1570, line: 26, baseType: !1581, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1577, file: !1570, line: 28, baseType: !213, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1577, file: !1570, line: 30, baseType: !170, size: 8, offset: 96)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1577, file: !1570, line: 32, baseType: !103, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1577, file: !1570, line: 34, baseType: !170, size: 8, offset: 160)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1577, file: !1570, line: 36, baseType: !170, size: 8, offset: 168)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1577, file: !1570, line: 38, baseType: !170, size: 8, offset: 176)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1577, file: !1570, line: 40, baseType: !170, size: 8, offset: 184)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1577, file: !1570, line: 41, baseType: !1590, size: 32, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1370, file: !1508, line: 1914, type: !1530, isLocal: true, isDefinition: true)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1538, isLocal: true, isDefinition: true)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1561, isLocal: true, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1370, file: !1508, line: 1914, type: !1564, isLocal: true, isDefinition: true)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1370, file: !1508, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1603, file: !1680, line: 65, type: !120, isLocal: true, isDefinition: true)
!1603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1605, retainedTypes: !1606, globals: !1677, splitDebugInlining: false, nameTableKind: None)
!1604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1605 = !{!546}
!1606 = !{!1231, !1607, !675, !167, !121, !1615, !1645}
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !369, line: 712, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 706, size: 128, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1609, file: !369, line: 708, baseType: !120, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1609, file: !369, line: 709, baseType: !120, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1609, file: !369, line: 710, baseType: !120, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1609, file: !369, line: 711, baseType: !373, size: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !1618)
!1618 = !{!1619, !1621, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1636, !1640, !1644}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1617, file: !369, line: 347, baseType: !1620, size: 256)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1065)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1617, file: !369, line: 348, baseType: !1622, size: 768, offset: 256)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1623)
!1623 = !{!1624}
!1624 = !DISubrange(count: 24)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1617, file: !369, line: 349, baseType: !1620, size: 256, offset: 1024)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1617, file: !369, line: 350, baseType: !1622, size: 768, offset: 1280)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1617, file: !369, line: 351, baseType: !1620, size: 256, offset: 2048)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1617, file: !369, line: 352, baseType: !1622, size: 768, offset: 2304)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1617, file: !369, line: 353, baseType: !1620, size: 256, offset: 3072)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1617, file: !369, line: 354, baseType: !1622, size: 768, offset: 3328)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1617, file: !369, line: 355, baseType: !1620, size: 256, offset: 4096)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1617, file: !369, line: 356, baseType: !1633, size: 1792, offset: 4352)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1634)
!1634 = !{!1635}
!1635 = !DISubrange(count: 56)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1617, file: !369, line: 357, baseType: !1637, size: 1920, offset: 6144)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1234, size: 1920, elements: !1638)
!1638 = !{!1639}
!1639 = !DISubrange(count: 240)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1617, file: !369, line: 358, baseType: !1641, size: 20608, offset: 8064)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1642)
!1642 = !{!1643}
!1643 = !DISubrange(count: 644)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1617, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !1648)
!1648 = !{!1649, !1650, !1651, !1652, !1653, !1654, !1655, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1668, !1669, !1670, !1672, !1674, !1676}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1647, file: !369, line: 381, baseType: !373, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1647, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1647, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1647, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1647, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1647, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1647, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1234, size: 96, elements: !1657)
!1657 = !{!1658}
!1658 = !DISubrange(count: 12)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1647, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1647, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1647, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1647, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1647, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1647, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1647, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1647, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 64, elements: !255)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1647, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1647, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1647, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 128, elements: !617)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1647, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 160, elements: !1100)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1647, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1100)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1647, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!1677 = !{!1678, !1704, !1707, !1709, !1711, !1601}
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1603, file: !1680, line: 285, type: !1681, isLocal: true, isDefinition: true, align: 32)
!1680 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1683)
!1683 = !{!1684, !1703}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1682, file: !145, line: 60, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!103, !1688}
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1701, !1702}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1690, file: !154, line: 380, baseType: !157, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1690, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1690, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1690, file: !154, line: 386, baseType: !1696, size: 32, offset: 96)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1697, file: !154, line: 359, baseType: !167, size: 8)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1697, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1690, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1690, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1682, file: !145, line: 65, baseType: !1688, size: 32, offset: 32)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "lock", scope: !1603, file: !1680, line: 34, type: !1706, isLocal: true, isDefinition: true)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "last_load", scope: !1603, file: !1680, line: 36, type: !121, isLocal: true, isDefinition: true)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1603, file: !1680, line: 48, type: !121, isLocal: true, isDefinition: true)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1603, file: !1680, line: 54, type: !121, isLocal: true, isDefinition: true)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1715, file: !1796, line: 22, type: !1798, isLocal: true, isDefinition: true)
!1715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1716, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !437, retainedTypes: !1717, globals: !1793, splitDebugInlining: false, nameTableKind: None)
!1716 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1717 = !{!1718, !1782, !1787, !485, !444, !438, !1792, !102}
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !439, line: 523, size: 288, elements: !1721)
!1721 = !{!1722, !1741, !1745, !1749, !1753, !1754, !1755, !1759, !1778}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1720, file: !439, line: 524, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!103, !1726, !473, !474}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1739, !1740}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1728, file: !154, line: 380, baseType: !157, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1728, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1728, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1728, file: !154, line: 386, baseType: !1734, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1735, file: !154, line: 359, baseType: !167, size: 8)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1735, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1728, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1728, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1720, file: !439, line: 530, baseType: !1742, size: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!103, !1726, !479}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1720, file: !439, line: 532, baseType: !1746, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!103, !1726, !485, !480}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1720, file: !439, line: 535, baseType: !1750, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!103, !1726, !485}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1720, file: !439, line: 537, baseType: !1750, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1720, file: !439, line: 539, baseType: !1750, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1720, file: !439, line: 541, baseType: !1756, size: 32, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!103, !1726, !473, !438, !444}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1720, file: !439, line: 544, baseType: !1760, size: 32, offset: 224)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DISubroutineType(types: !1762)
!1762 = !{!103, !1726, !1763, !170}
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !439, line: 478, size: 96, elements: !1765)
!1765 = !{!1766, !1772, !1777}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1764, file: !439, line: 482, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !505, line: 33, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !505, line: 29, size: 32, elements: !1769)
!1769 = !{!1770}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1768, file: !505, line: 30, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1764, file: !439, line: 485, baseType: !1773, size: 32, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !439, line: 464, baseType: !1774)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{null, !1726, !1763, !485}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1764, file: !439, line: 493, baseType: !485, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1720, file: !439, line: 547, baseType: !1779, size: 32, offset: 256)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!121, !1726}
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !439, line: 428, size: 32, elements: !1785)
!1785 = !{!1786}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1784, file: !439, line: 434, baseType: !485, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1789)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !439, line: 441, size: 32, elements: !1790)
!1790 = !{!1791}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1789, file: !439, line: 447, baseType: !485, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1793 = !{!1794, !1713}
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1795 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1715, file: !1796, line: 37, type: !1797, isLocal: true, isDefinition: true)
!1796 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1799, size: 352, elements: !703)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1726)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1802, file: !1826, line: 129, type: !1834, isLocal: false, isDefinition: true)
!1802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1804, globals: !1823, splitDebugInlining: false, nameTableKind: None)
!1803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1807, file: !116, line: 372, baseType: !120, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1807, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1807, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1807, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1807, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1807, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1807, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1807, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1807, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1807, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1807, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1807, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1807, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1807, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!1823 = !{!1824, !1827, !1831, !1800}
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1802, file: !1826, line: 126, type: !121, isLocal: false, isDefinition: true)
!1826 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1802, file: !1826, line: 127, type: !1829, isLocal: false, isDefinition: true)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 72, elements: !1082)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1802, file: !1826, line: 128, type: !1833, isLocal: false, isDefinition: true)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 128, elements: !661)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 64, elements: !1065)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "pFlash", scope: !1837, file: !1866, line: 189, type: !1867, isLocal: false, isDefinition: true)
!1837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1839, retainedTypes: !1850, globals: !1865, splitDebugInlining: false, nameTableKind: None)
!1838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_flash.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1839 = !{!1185, !1840, !1844}
!1840 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1186, line: 50, baseType: !32, size: 32, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!1843 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!1844 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1845, line: 68, baseType: !32, size: 32, elements: !1846)
!1845 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_flash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1846 = !{!1847, !1848, !1849}
!1847 = !DIEnumerator(name: "FLASH_PROC_NONE", value: 0)
!1848 = !DIEnumerator(name: "FLASH_PROC_PAGEERASE", value: 1)
!1849 = !DIEnumerator(name: "FLASH_PROC_PROGRAM", value: 2)
!1850 = !{!1851, !1852, !121}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !1854, file: !116, line: 277, baseType: !120, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !1854, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !1854, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !1854, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !1854, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !1854, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1854, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !1854, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !1854, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!1865 = !{!1835}
!1866 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_flash.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_ProcessTypeDef", file: !1845, line: 92, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1845, line: 78, size: 192, elements: !1869)
!1869 = !{!1870, !1873, !1874, !1875, !1876, !1878}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ProcedureOnGoing", scope: !1868, file: !1845, line: 80, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1872)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_ProcedureTypeDef", file: !1845, line: 73, baseType: !1844)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "NbPagesToErase", scope: !1868, file: !1845, line: 82, baseType: !120, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "Address", scope: !1868, file: !1845, line: 84, baseType: !120, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "Page", scope: !1868, file: !1845, line: 86, baseType: !120, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1868, file: !1845, line: 88, baseType: !1877, size: 32, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !1186, line: 54, baseType: !1840)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1868, file: !1845, line: 90, baseType: !120, size: 32, offset: 160)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1881, file: !1884, line: 23, type: !1885, isLocal: false, isDefinition: true)
!1881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1882, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1883, splitDebugInlining: false, nameTableKind: None)
!1882 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1883 = !{!1879}
!1884 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1888, file: !1892, line: 86, type: !2140, isLocal: false, isDefinition: true, align: 512)
!1888 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1889, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1890, retainedTypes: !1899, globals: !1973, splitDebugInlining: false, nameTableKind: None)
!1889 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!1890 = !{!1891, !30, !546}
!1891 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1892, line: 63, baseType: !32, size: 32, elements: !1893)
!1892 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1893 = !{!1894, !1895, !1896, !1897, !1898}
!1894 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1895 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1896 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1897 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1898 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1899 = !{!213, !102, !103, !1900, !1019, !121, !1931, !675, !167, !1956}
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1903, line: 51, size: 64, elements: !1904)
!1903 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1904 = !{!1905, !1926}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1902, file: !1903, line: 52, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1903, line: 38, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DISubroutineType(types: !1909)
!1909 = !{!103, !1910, !1925, !278}
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1913)
!1913 = !{!1914, !1915, !1916, !1917, !1923, !1924}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1912, file: !154, line: 380, baseType: !157, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1912, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1912, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1912, file: !154, line: 386, baseType: !1918, size: 32, offset: 96)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 32)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1920)
!1920 = !{!1921, !1922}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1919, file: !154, line: 359, baseType: !167, size: 8)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1919, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1912, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1912, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1902, file: !1903, line: 53, baseType: !1927, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1903, line: 47, baseType: !1928)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!103, !1910, !1925, !278, !121}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1933, file: !369, line: 381, baseType: !373, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1933, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1933, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1933, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1933, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1933, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1933, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1933, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1933, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1933, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1933, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1933, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1933, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1933, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1933, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1933, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1933, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1933, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1933, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1933, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1933, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !1959)
!1959 = !{!1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1958, file: !369, line: 347, baseType: !1620, size: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1958, file: !369, line: 348, baseType: !1622, size: 768, offset: 256)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1958, file: !369, line: 349, baseType: !1620, size: 256, offset: 1024)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1958, file: !369, line: 350, baseType: !1622, size: 768, offset: 1280)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1958, file: !369, line: 351, baseType: !1620, size: 256, offset: 2048)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1958, file: !369, line: 352, baseType: !1622, size: 768, offset: 2304)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1958, file: !369, line: 353, baseType: !1620, size: 256, offset: 3072)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1958, file: !369, line: 354, baseType: !1622, size: 768, offset: 3328)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1958, file: !369, line: 355, baseType: !1620, size: 256, offset: 4096)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1958, file: !369, line: 356, baseType: !1633, size: 1792, offset: 4352)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1958, file: !369, line: 357, baseType: !1637, size: 1920, offset: 6144)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1958, file: !369, line: 358, baseType: !1641, size: 20608, offset: 8064)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1958, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!1973 = !{!1974, !2096, !2105, !2107, !1886, !2110, !2112, !2117}
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "_kernel", scope: !1888, file: !1892, line: 40, type: !1976, isLocal: false, isDefinition: true)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !260, line: 158, size: 288, elements: !1977)
!1977 = !{!1978, !2091}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1976, file: !260, line: 159, baseType: !1979, size: 192)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1980, size: 192, elements: !358)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !260, line: 100, size: 192, elements: !1981)
!1981 = !{!1982, !1983, !1984, !2085, !2086, !2087, !2088}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1980, file: !260, line: 102, baseType: !121, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1980, file: !260, line: 105, baseType: !1019, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1980, file: !260, line: 108, baseType: !1985, size: 32, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !1987)
!1987 = !{!1988, !2046, !2058, !2059, !2060, !2061, !2067, !2080}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1986, file: !224, line: 247, baseType: !1989, size: 384)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !1990)
!1990 = !{!1991, !2015, !2022, !2023, !2024, !2033, !2034, !2035}
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1989, file: !224, line: 60, baseType: !1992, size: 64)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1989, file: !224, line: 60, size: 64, elements: !1993)
!1993 = !{!1994, !2009}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1992, file: !224, line: 61, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !1997)
!1997 = !{!1998, !2004}
!1998 = !DIDerivedType(tag: DW_TAG_member, scope: !1996, file: !234, line: 38, baseType: !1999, size: 32)
!1999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1996, file: !234, line: 38, size: 32, elements: !2000)
!2000 = !{!2001, !2003}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1999, file: !234, line: 39, baseType: !2002, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1999, file: !234, line: 40, baseType: !2002, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, scope: !1996, file: !234, line: 42, baseType: !2005, size: 32, offset: 32)
!2005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1996, file: !234, line: 42, size: 32, elements: !2006)
!2006 = !{!2007, !2008}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2005, file: !234, line: 43, baseType: !2002, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2005, file: !234, line: 44, baseType: !2002, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1992, file: !224, line: 62, baseType: !2010, size: 64)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !2011)
!2011 = !{!2012}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2010, file: !250, line: 50, baseType: !2013, size: 64)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 64, elements: !255)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1989, file: !224, line: 68, baseType: !2016, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2018, file: !260, line: 232, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !1996)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1989, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1989, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !1989, file: !224, line: 90, baseType: !2025, size: 16, offset: 112)
!2025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1989, file: !224, line: 90, size: 16, elements: !2026)
!2026 = !{!2027, !2032}
!2027 = !DIDerivedType(tag: DW_TAG_member, scope: !2025, file: !224, line: 91, baseType: !2028, size: 16)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2025, file: !224, line: 91, size: 16, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2028, file: !224, line: 96, baseType: !274, size: 8)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2028, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2025, file: !224, line: 100, baseType: !278, size: 16)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1989, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1989, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1989, file: !224, line: 131, baseType: !2036, size: 192, offset: 192)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2037)
!2037 = !{!2038, !2039, !2045}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2036, file: !260, line: 245, baseType: !1995, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2036, file: !260, line: 246, baseType: !2040, size: 32, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2041)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !2044}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2036, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1986, file: !224, line: 250, baseType: !2047, size: 288, offset: 384)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2047, file: !297, line: 26, baseType: !121, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2047, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2047, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2047, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2047, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2047, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2047, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2047, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2047, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1986, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1986, file: !224, line: 256, baseType: !2017, size: 64, offset: 704)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1986, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1986, file: !224, line: 300, baseType: !2062, size: 96, offset: 800)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !2063)
!2063 = !{!2064, !2065, !2066}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2062, file: !224, line: 153, baseType: !22, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2062, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2062, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1986, file: !224, line: 325, baseType: !2068, size: 32, offset: 896)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !2070)
!2070 = !{!2071, !2077, !2078}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2069, file: !320, line: 5074, baseType: !2072, size: 96)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2073)
!2073 = !{!2074, !2075, !2076}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2072, file: !324, line: 57, baseType: !327, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2072, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2072, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2069, file: !320, line: 5075, baseType: !2017, size: 64, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2069, file: !320, line: 5076, baseType: !2079, offset: 160)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1986, file: !224, line: 343, baseType: !2081, size: 64, offset: 928)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !2082)
!2082 = !{!2083, !2084}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2081, file: !297, line: 63, baseType: !121, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2081, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1980, file: !260, line: 111, baseType: !1985, size: 32, offset: 96)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1980, file: !260, line: 124, baseType: !103, size: 32, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1980, file: !260, line: 127, baseType: !167, size: 8, offset: 160)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1980, file: !260, line: 153, baseType: !2089, offset: 168)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2090, line: 33, elements: !335)
!2090 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1976, file: !260, line: 170, baseType: !2092, size: 96, offset: 192)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !260, line: 83, size: 96, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2092, file: !260, line: 86, baseType: !1985, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2092, file: !260, line: 90, baseType: !2021, size: 64, offset: 32)
!2096 = !DIGlobalVariableExpression(var: !2097, expr: !DIExpression())
!2097 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1888, file: !1892, line: 43, type: !2098, isLocal: false, isDefinition: true, align: 512)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2099, size: 8704, elements: !2103)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2100, line: 47, size: 8, elements: !2101)
!2100 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2099, file: !2100, line: 48, baseType: !159, size: 8)
!2103 = !{!2104}
!2104 = !DISubrange(count: 1088)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1888, file: !1892, line: 44, type: !1986, isLocal: false, isDefinition: true)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1888, file: !1892, line: 48, type: !2109, isLocal: false, isDefinition: true)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 1024, elements: !358)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1888, file: !1892, line: 217, type: !170, isLocal: false, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1888, file: !1892, line: 50, type: !2114, isLocal: true, isDefinition: true, align: 512)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2099, size: 2560, elements: !2115)
!2115 = !{!359, !2116}
!2116 = !DISubrange(count: 320)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "levels", scope: !2119, file: !1892, line: 232, type: !2139, isLocal: true, isDefinition: true)
!2119 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1892, file: !1892, line: 230, type: !2120, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !2122)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{null, !1891}
!2122 = !{!2123, !2124, !2134, !2138}
!2123 = !DILocalVariable(name: "level", arg: 1, scope: !2119, file: !1892, line: 230, type: !1891)
!2124 = !DILocalVariable(name: "entry", scope: !2119, file: !1892, line: 244, type: !2125)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !2128)
!2128 = !{!2129, !2133}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2127, file: !145, line: 60, baseType: !2130, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!103, !1910}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2127, file: !145, line: 65, baseType: !1910, size: 32, offset: 32)
!2134 = !DILocalVariable(name: "dev", scope: !2135, file: !1892, line: 247, type: !1910)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !1892, line: 246, column: 64)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !1892, line: 246, column: 2)
!2137 = distinct !DILexicalBlock(scope: !2119, file: !1892, line: 246, column: 2)
!2138 = !DILocalVariable(name: "rc", scope: !2135, file: !1892, line: 248, type: !103)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2125, size: 192, elements: !1091)
!2140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2099, size: 16896, elements: !2141)
!2141 = !{!359, !2142}
!2142 = !DISubrange(count: 2112)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "states_str", scope: !2145, file: !2146, line: 276, type: !2269, isLocal: true, isDefinition: true)
!2145 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2146, file: !2146, line: 271, type: !2147, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !2260)
!2146 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!157, !2149, !1019, !213}
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !2150)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !2152)
!2152 = !{!2153, !2211, !2223, !2224, !2225, !2226, !2232, !2245}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2151, file: !224, line: 247, baseType: !2154, size: 384)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !2155)
!2155 = !{!2156, !2180, !2187, !2188, !2189, !2198, !2199, !2200}
!2156 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !224, line: 60, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !224, line: 60, size: 64, elements: !2158)
!2158 = !{!2159, !2174}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2157, file: !224, line: 61, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !2161)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !2162)
!2162 = !{!2163, !2169}
!2163 = !DIDerivedType(tag: DW_TAG_member, scope: !2161, file: !234, line: 38, baseType: !2164, size: 32)
!2164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2161, file: !234, line: 38, size: 32, elements: !2165)
!2165 = !{!2166, !2168}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2164, file: !234, line: 39, baseType: !2167, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2164, file: !234, line: 40, baseType: !2167, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, scope: !2161, file: !234, line: 42, baseType: !2170, size: 32, offset: 32)
!2170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2161, file: !234, line: 42, size: 32, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2170, file: !234, line: 43, baseType: !2167, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2170, file: !234, line: 44, baseType: !2167, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2157, file: !224, line: 62, baseType: !2175, size: 64)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !2176)
!2176 = !{!2177}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2175, file: !250, line: 50, baseType: !2178, size: 64)
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2179, size: 64, elements: !255)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2154, file: !224, line: 68, baseType: !2181, size: 32, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !2184)
!2184 = !{!2185}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2183, file: !260, line: 232, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !2161)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2154, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2154, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!2189 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !224, line: 90, baseType: !2190, size: 16, offset: 112)
!2190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !224, line: 90, size: 16, elements: !2191)
!2191 = !{!2192, !2197}
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2190, file: !224, line: 91, baseType: !2193, size: 16)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2190, file: !224, line: 91, size: 16, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2193, file: !224, line: 96, baseType: !274, size: 8)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2193, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2190, file: !224, line: 100, baseType: !278, size: 16)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2154, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2154, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2154, file: !224, line: 131, baseType: !2201, size: 192, offset: 192)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2202)
!2202 = !{!2203, !2204, !2210}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2201, file: !260, line: 245, baseType: !2160, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2201, file: !260, line: 246, baseType: !2205, size: 32, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2206)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !2209}
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2201, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2151, file: !224, line: 250, baseType: !2212, size: 288, offset: 384)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !2213)
!2213 = !{!2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2212, file: !297, line: 26, baseType: !121, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2212, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2212, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2212, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2212, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2212, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2212, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2212, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2212, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2151, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2151, file: !224, line: 256, baseType: !2182, size: 64, offset: 704)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2151, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2151, file: !224, line: 300, baseType: !2227, size: 96, offset: 800)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !2228)
!2228 = !{!2229, !2230, !2231}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2227, file: !224, line: 153, baseType: !22, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2227, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2227, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2151, file: !224, line: 325, baseType: !2233, size: 32, offset: 896)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !2235)
!2235 = !{!2236, !2242, !2243}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2234, file: !320, line: 5074, baseType: !2237, size: 96)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2238)
!2238 = !{!2239, !2240, !2241}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2237, file: !324, line: 57, baseType: !327, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2237, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2237, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2234, file: !320, line: 5075, baseType: !2182, size: 64, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2234, file: !320, line: 5076, baseType: !2244, offset: 160)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2151, file: !224, line: 343, baseType: !2246, size: 64, offset: 928)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !2247)
!2247 = !{!2248, !2249}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2246, file: !297, line: 63, baseType: !121, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2246, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!2250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2251, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2252, globals: !2256, splitDebugInlining: false, nameTableKind: None)
!2251 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2252 = !{!102, !157, !1231, !167, !103, !2253, !24, !213, !1019, !22, !121, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2255)
!2255 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2256 = !{!2143, !2257}
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "states_sz", scope: !2145, file: !2146, line: 279, type: !2259, isLocal: true, isDefinition: true)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 256, elements: !1065)
!2260 = !{!2261, !2262, !2263, !2264, !2265, !2266, !2267}
!2261 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2145, file: !2146, line: 271, type: !2149)
!2262 = !DILocalVariable(name: "buf", arg: 2, scope: !2145, file: !2146, line: 271, type: !1019)
!2263 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2145, file: !2146, line: 271, type: !213)
!2264 = !DILocalVariable(name: "off", scope: !2145, file: !2146, line: 273, type: !213)
!2265 = !DILocalVariable(name: "bit", scope: !2145, file: !2146, line: 274, type: !167)
!2266 = !DILocalVariable(name: "thread_state", scope: !2145, file: !2146, line: 275, type: !167)
!2267 = !DILocalVariable(name: "index", scope: !2268, file: !2146, line: 293, type: !167)
!2268 = distinct !DILexicalBlock(scope: !2145, file: !2146, line: 293, column: 2)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 256, elements: !1065)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "lock", scope: !2272, file: !2377, line: 47, type: !2370, isLocal: true, isDefinition: true)
!2272 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2273, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2274, globals: !2376, splitDebugInlining: false, nameTableKind: None)
!2273 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2274 = !{!170, !102, !103, !2275, !2290}
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !2277)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !2278)
!2278 = !{!2279, !2285}
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !234, line: 38, baseType: !2280, size: 32)
!2280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2277, file: !234, line: 38, size: 32, elements: !2281)
!2281 = !{!2282, !2284}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2280, file: !234, line: 39, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2280, file: !234, line: 40, baseType: !2283, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !234, line: 42, baseType: !2286, size: 32, offset: 32)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2277, file: !234, line: 42, size: 32, elements: !2287)
!2287 = !{!2288, !2289}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2286, file: !234, line: 43, baseType: !2283, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2286, file: !234, line: 44, baseType: !2283, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !2292)
!2292 = !{!2293, !2337, !2349, !2350, !2351, !2352, !2358, !2371}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2291, file: !224, line: 247, baseType: !2294, size: 384)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !2295)
!2295 = !{!2296, !2306, !2313, !2314, !2315, !2324, !2325, !2326}
!2296 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !224, line: 60, baseType: !2297, size: 64)
!2297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2294, file: !224, line: 60, size: 64, elements: !2298)
!2298 = !{!2299, !2300}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2297, file: !224, line: 61, baseType: !2276, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2297, file: !224, line: 62, baseType: !2301, size: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !2302)
!2302 = !{!2303}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2301, file: !250, line: 50, baseType: !2304, size: 64)
!2304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2305, size: 64, elements: !255)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2294, file: !224, line: 68, baseType: !2307, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !2309)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !2310)
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2309, file: !260, line: 232, baseType: !2312, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !2277)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2294, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2294, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !224, line: 90, baseType: !2316, size: 16, offset: 112)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2294, file: !224, line: 90, size: 16, elements: !2317)
!2317 = !{!2318, !2323}
!2318 = !DIDerivedType(tag: DW_TAG_member, scope: !2316, file: !224, line: 91, baseType: !2319, size: 16)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2316, file: !224, line: 91, size: 16, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2319, file: !224, line: 96, baseType: !274, size: 8)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2319, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2316, file: !224, line: 100, baseType: !278, size: 16)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2294, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2294, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2294, file: !224, line: 131, baseType: !2327, size: 192, offset: 192)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2328)
!2328 = !{!2329, !2330, !2336}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2327, file: !260, line: 245, baseType: !2276, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2327, file: !260, line: 246, baseType: !2331, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2332)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{null, !2335}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2327, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2291, file: !224, line: 250, baseType: !2338, size: 288, offset: 384)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2338, file: !297, line: 26, baseType: !121, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2338, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2338, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2338, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2338, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2338, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2338, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2338, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2338, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2291, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2291, file: !224, line: 256, baseType: !2308, size: 64, offset: 704)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2291, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2291, file: !224, line: 300, baseType: !2353, size: 96, offset: 800)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !2354)
!2354 = !{!2355, !2356, !2357}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2353, file: !224, line: 153, baseType: !22, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2353, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2353, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2291, file: !224, line: 325, baseType: !2359, size: 32, offset: 896)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !2361)
!2361 = !{!2362, !2368, !2369}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2360, file: !320, line: 5074, baseType: !2363, size: 96)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2364)
!2364 = !{!2365, !2366, !2367}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2363, file: !324, line: 57, baseType: !327, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2363, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2363, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2360, file: !320, line: 5075, baseType: !2308, size: 64, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2360, file: !320, line: 5076, baseType: !2370, offset: 160)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2291, file: !224, line: 343, baseType: !2372, size: 64, offset: 928)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2372, file: !297, line: 63, baseType: !121, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2372, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!2376 = !{!2270}
!2377 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2380, file: !2488, line: 56, type: !2477, isLocal: false, isDefinition: true)
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2382, globals: !2485, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2382 = !{!2383, !1019, !102, !2483, !1925, !1231, !675, !103, !121, !2254, !2484}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !2385)
!2385 = !{!2386, !2444, !2456, !2457, !2458, !2459, !2465, !2478}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2384, file: !224, line: 247, baseType: !2387, size: 384)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !2388)
!2388 = !{!2389, !2413, !2420, !2421, !2422, !2431, !2432, !2433}
!2389 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !224, line: 60, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !224, line: 60, size: 64, elements: !2391)
!2391 = !{!2392, !2407}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2390, file: !224, line: 61, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !2395)
!2395 = !{!2396, !2402}
!2396 = !DIDerivedType(tag: DW_TAG_member, scope: !2394, file: !234, line: 38, baseType: !2397, size: 32)
!2397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2394, file: !234, line: 38, size: 32, elements: !2398)
!2398 = !{!2399, !2401}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2397, file: !234, line: 39, baseType: !2400, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2397, file: !234, line: 40, baseType: !2400, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2394, file: !234, line: 42, baseType: !2403, size: 32, offset: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2394, file: !234, line: 42, size: 32, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2403, file: !234, line: 43, baseType: !2400, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2403, file: !234, line: 44, baseType: !2400, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2390, file: !224, line: 62, baseType: !2408, size: 64)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !2409)
!2409 = !{!2410}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2408, file: !250, line: 50, baseType: !2411, size: 64)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2412, size: 64, elements: !255)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2387, file: !224, line: 68, baseType: !2414, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !2417)
!2417 = !{!2418}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2416, file: !260, line: 232, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !2394)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2387, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2387, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!2422 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !224, line: 90, baseType: !2423, size: 16, offset: 112)
!2423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !224, line: 90, size: 16, elements: !2424)
!2424 = !{!2425, !2430}
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !224, line: 91, baseType: !2426, size: 16)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2423, file: !224, line: 91, size: 16, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2426, file: !224, line: 96, baseType: !274, size: 8)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2426, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2423, file: !224, line: 100, baseType: !278, size: 16)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2387, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2387, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2387, file: !224, line: 131, baseType: !2434, size: 192, offset: 192)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2435)
!2435 = !{!2436, !2437, !2443}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2434, file: !260, line: 245, baseType: !2393, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2434, file: !260, line: 246, baseType: !2438, size: 32, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2439)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{null, !2442}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2434, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2384, file: !224, line: 250, baseType: !2445, size: 288, offset: 384)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2445, file: !297, line: 26, baseType: !121, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2445, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2445, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2445, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2445, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2445, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2445, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2445, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2445, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2384, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2384, file: !224, line: 256, baseType: !2415, size: 64, offset: 704)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2384, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2384, file: !224, line: 300, baseType: !2460, size: 96, offset: 800)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !2461)
!2461 = !{!2462, !2463, !2464}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2460, file: !224, line: 153, baseType: !22, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2460, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2460, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2384, file: !224, line: 325, baseType: !2466, size: 32, offset: 896)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !2468)
!2468 = !{!2469, !2475, !2476}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2467, file: !320, line: 5074, baseType: !2470, size: 96)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2471)
!2471 = !{!2472, !2473, !2474}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2470, file: !324, line: 57, baseType: !327, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2470, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2470, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2467, file: !320, line: 5075, baseType: !2415, size: 64, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2467, file: !320, line: 5076, baseType: !2477, offset: 160)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2384, file: !224, line: 343, baseType: !2479, size: 64, offset: 928)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2479, file: !297, line: 63, baseType: !121, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2479, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2485 = !{!2378, !2486, !2489, !2491}
!2486 = !DIGlobalVariableExpression(var: !2487, expr: !DIExpression())
!2487 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2380, file: !2488, line: 404, type: !103, isLocal: true, isDefinition: true)
!2488 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2380, file: !2488, line: 405, type: !103, isLocal: true, isDefinition: true)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "pending_current", scope: !2380, file: !2488, line: 425, type: !2383, isLocal: true, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2495, file: !2525, line: 15, type: !2254, isLocal: true, isDefinition: true)
!2495 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2496, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2497, globals: !2522, splitDebugInlining: false, nameTableKind: None)
!2496 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2497 = !{!1231, !102, !675, !121, !2254, !103, !2498, !1019, !293}
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2500)
!2500 = !{!2501, !2516, !2521}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2499, file: !260, line: 245, baseType: !2502, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !2503)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !2504)
!2504 = !{!2505, !2511}
!2505 = !DIDerivedType(tag: DW_TAG_member, scope: !2503, file: !234, line: 38, baseType: !2506, size: 32)
!2506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2503, file: !234, line: 38, size: 32, elements: !2507)
!2507 = !{!2508, !2510}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2506, file: !234, line: 39, baseType: !2509, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2506, file: !234, line: 40, baseType: !2509, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2503, file: !234, line: 42, baseType: !2512, size: 32, offset: 32)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2503, file: !234, line: 42, size: 32, elements: !2513)
!2513 = !{!2514, !2515}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2512, file: !234, line: 43, baseType: !2509, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2512, file: !234, line: 44, baseType: !2509, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2499, file: !260, line: 246, baseType: !2517, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2518)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{null, !2498}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2499, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2522 = !{!2493, !2523, !2527, !2529}
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2495, file: !2525, line: 19, type: !2526, isLocal: true, isDefinition: true)
!2525 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2495, file: !2525, line: 25, type: !103, isLocal: true, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2495, file: !2525, line: 17, type: !2531, isLocal: true, isDefinition: true)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !2503)
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2534 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2535, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2536, splitDebugInlining: false, nameTableKind: None)
!2535 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/eeprom/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2536 = !{!102, !103, !2537}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2539)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eeprom_driver_api", file: !1196, line: 42, size: 96, elements: !2540)
!2540 = !{!2541, !2561, !2566}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2539, file: !1196, line: 43, baseType: !2542, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "eeprom_api_read", file: !1196, line: 35, baseType: !2543)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!103, !2546, !1218, !102, !213}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2548)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !2549)
!2549 = !{!2550, !2551, !2552, !2553, !2559, !2560}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2548, file: !154, line: 380, baseType: !157, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2548, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2548, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2548, file: !154, line: 386, baseType: !2554, size: 32, offset: 96)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !2556)
!2556 = !{!2557, !2558}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2555, file: !154, line: 359, baseType: !167, size: 8)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2555, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2548, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2548, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2539, file: !1196, line: 44, baseType: !2562, size: 32, offset: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "eeprom_api_write", file: !1196, line: 38, baseType: !2563)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 32)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!103, !2546, !1218, !13, !213}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2539, file: !1196, line: 45, baseType: !2567, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "eeprom_api_size", file: !1196, line: 40, baseType: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!213, !2546}
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2575, retainedTypes: !2595, splitDebugInlining: false, nameTableKind: None)
!2574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2575 = !{!2576, !2584}
!2576 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2577, line: 69, baseType: !32, size: 32, elements: !2578)
!2577 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2578 = !{!2579, !2580, !2581, !2582, !2583}
!2579 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2580 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2581 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2582 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2583 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2584 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2577, line: 56, baseType: !32, size: 32, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594}
!2586 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2587 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2588 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2589 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2590 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2591 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2592 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2593 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2594 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2595 = !{!103, !2576, !2584, !2596, !275, !177, !2598, !2599, !168, !279, !157, !213, !102, !22, !32, !2601, !2602, !2603, !1220, !2604, !294, !2605, !2597, !2606, !2607, !2608, !2609}
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2577, line: 31, baseType: !2597)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !294)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !214, line: 329, baseType: !32)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2577, line: 32, baseType: !2600)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2255)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !214, line: 145, baseType: !103)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2610 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2611, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2611 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2614, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/stm32cube_hal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2614 = !{!102, !103, !121, !2254, !1231}
!2615 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2616, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2617, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2616 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2617 = !{!2618, !30}
!2618 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2619, line: 27, baseType: !32, size: 32, elements: !2620)
!2619 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2620 = !{!2621, !2622, !2623, !2624, !2625}
!2621 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2622 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2623 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2624 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2625 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2627, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2628, retainedTypes: !2629, splitDebugInlining: false, nameTableKind: None)
!2627 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2628 = !{!546, !2618, !30}
!2629 = !{!693, !2630, !102, !103, !675, !121, !167, !2647}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !2633)
!2633 = !{!2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2632, file: !369, line: 347, baseType: !1620, size: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2632, file: !369, line: 348, baseType: !1622, size: 768, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2632, file: !369, line: 349, baseType: !1620, size: 256, offset: 1024)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2632, file: !369, line: 350, baseType: !1622, size: 768, offset: 1280)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2632, file: !369, line: 351, baseType: !1620, size: 256, offset: 2048)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2632, file: !369, line: 352, baseType: !1622, size: 768, offset: 2304)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2632, file: !369, line: 353, baseType: !1620, size: 256, offset: 3072)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2632, file: !369, line: 354, baseType: !1622, size: 768, offset: 3328)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2632, file: !369, line: 355, baseType: !1620, size: 256, offset: 4096)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2632, file: !369, line: 356, baseType: !1633, size: 1792, offset: 4352)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2632, file: !369, line: 357, baseType: !1637, size: 1920, offset: 6144)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2632, file: !369, line: 358, baseType: !1641, size: 20608, offset: 8064)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2632, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2649, file: !369, line: 381, baseType: !373, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2649, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2649, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2649, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2649, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2649, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2649, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2649, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2649, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2649, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2649, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2649, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2649, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2649, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2649, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2649, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2649, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2649, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2649, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2649, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2649, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2676, splitDebugInlining: false, nameTableKind: None)
!2675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2676 = !{!102, !103, !22, !2677}
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2679)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2680)
!2680 = !{!2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2679, file: !369, line: 381, baseType: !373, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2679, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2679, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2679, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2679, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2679, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2679, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2679, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2679, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2679, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2679, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2679, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2679, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2679, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2679, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2679, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2679, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2679, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2679, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2679, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2679, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2704, splitDebugInlining: false, nameTableKind: None)
!2703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2704 = !{!2705, !102, !103}
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2707, file: !369, line: 381, baseType: !373, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2707, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2707, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2707, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2707, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2707, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2707, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2707, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2707, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2707, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2707, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2707, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2707, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2707, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2707, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2707, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2707, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2707, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2707, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2707, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2707, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2730 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2731, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2732, splitDebugInlining: false, nameTableKind: None)
!2731 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2732 = !{!2733, !121, !102, !103}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2735, line: 98, size: 256, elements: !2736)
!2735 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2736 = !{!2737, !2742, !2747, !2752, !2757, !2762, !2767, !2772}
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 99, baseType: !2738, size: 32)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 99, size: 32, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2738, file: !2735, line: 99, baseType: !121, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2738, file: !2735, line: 99, baseType: !121, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 100, baseType: !2743, size: 32, offset: 32)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 100, size: 32, elements: !2744)
!2744 = !{!2745, !2746}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2743, file: !2735, line: 100, baseType: !121, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2743, file: !2735, line: 100, baseType: !121, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 101, baseType: !2748, size: 32, offset: 64)
!2748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 101, size: 32, elements: !2749)
!2749 = !{!2750, !2751}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2748, file: !2735, line: 101, baseType: !121, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2748, file: !2735, line: 101, baseType: !121, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 102, baseType: !2753, size: 32, offset: 96)
!2753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 102, size: 32, elements: !2754)
!2754 = !{!2755, !2756}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2753, file: !2735, line: 102, baseType: !121, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2753, file: !2735, line: 102, baseType: !121, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 103, baseType: !2758, size: 32, offset: 128)
!2758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 103, size: 32, elements: !2759)
!2759 = !{!2760, !2761}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2758, file: !2735, line: 103, baseType: !121, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2758, file: !2735, line: 103, baseType: !121, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 104, baseType: !2763, size: 32, offset: 160)
!2763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 104, size: 32, elements: !2764)
!2764 = !{!2765, !2766}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2763, file: !2735, line: 104, baseType: !121, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2763, file: !2735, line: 104, baseType: !121, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2734, file: !2735, line: 105, baseType: !2768, size: 32, offset: 192)
!2768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2734, file: !2735, line: 105, size: 32, elements: !2769)
!2769 = !{!2770, !2771}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2768, file: !2735, line: 105, baseType: !121, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2768, file: !2735, line: 105, baseType: !121, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2734, file: !2735, line: 106, baseType: !121, size: 32, offset: 224)
!2773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2774, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2617, retainedTypes: !2775, splitDebugInlining: false, nameTableKind: None)
!2774 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2775 = !{!2776, !102, !103, !2801, !2844, !121}
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2778, file: !369, line: 381, baseType: !373, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2778, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2778, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2778, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2778, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2778, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2778, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2778, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2778, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2778, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2778, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2778, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2778, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2778, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2778, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2778, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2778, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2778, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2778, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2778, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2778, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2735, line: 141, baseType: !2803)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2735, line: 97, size: 256, elements: !2804)
!2804 = !{!2805}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2803, file: !2735, line: 107, baseType: !2806, size: 256)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2735, line: 98, size: 256, elements: !2807)
!2807 = !{!2808, !2813, !2818, !2823, !2828, !2833, !2838, !2843}
!2808 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 99, baseType: !2809, size: 32)
!2809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 99, size: 32, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2809, file: !2735, line: 99, baseType: !121, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2809, file: !2735, line: 99, baseType: !121, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 100, baseType: !2814, size: 32, offset: 32)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 100, size: 32, elements: !2815)
!2815 = !{!2816, !2817}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2814, file: !2735, line: 100, baseType: !121, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2814, file: !2735, line: 100, baseType: !121, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 101, baseType: !2819, size: 32, offset: 64)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 101, size: 32, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2819, file: !2735, line: 101, baseType: !121, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2819, file: !2735, line: 101, baseType: !121, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 102, baseType: !2824, size: 32, offset: 96)
!2824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 102, size: 32, elements: !2825)
!2825 = !{!2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2824, file: !2735, line: 102, baseType: !121, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2824, file: !2735, line: 102, baseType: !121, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 103, baseType: !2829, size: 32, offset: 128)
!2829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 103, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2829, file: !2735, line: 103, baseType: !121, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2829, file: !2735, line: 103, baseType: !121, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 104, baseType: !2834, size: 32, offset: 160)
!2834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 104, size: 32, elements: !2835)
!2835 = !{!2836, !2837}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2834, file: !2735, line: 104, baseType: !121, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2834, file: !2735, line: 104, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2735, line: 105, baseType: !2839, size: 32, offset: 192)
!2839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2735, line: 105, size: 32, elements: !2840)
!2840 = !{!2841, !2842}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2839, file: !2735, line: 105, baseType: !121, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2839, file: !2735, line: 105, baseType: !121, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2806, file: !2735, line: 106, baseType: !121, size: 32, offset: 224)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!2845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1605, retainedTypes: !2847, splitDebugInlining: false, nameTableKind: None)
!2846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2847 = !{!693, !675, !167, !121, !2848, !2865}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !2850)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !2851)
!2851 = !{!2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2850, file: !369, line: 347, baseType: !1620, size: 256)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2850, file: !369, line: 348, baseType: !1622, size: 768, offset: 256)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2850, file: !369, line: 349, baseType: !1620, size: 256, offset: 1024)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2850, file: !369, line: 350, baseType: !1622, size: 768, offset: 1280)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2850, file: !369, line: 351, baseType: !1620, size: 256, offset: 2048)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2850, file: !369, line: 352, baseType: !1622, size: 768, offset: 2304)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2850, file: !369, line: 353, baseType: !1620, size: 256, offset: 3072)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2850, file: !369, line: 354, baseType: !1622, size: 768, offset: 3328)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2850, file: !369, line: 355, baseType: !1620, size: 256, offset: 4096)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2850, file: !369, line: 356, baseType: !1633, size: 1792, offset: 4352)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2850, file: !369, line: 357, baseType: !1637, size: 1920, offset: 6144)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2850, file: !369, line: 358, baseType: !1641, size: 20608, offset: 8064)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2850, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2867)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2868)
!2868 = !{!2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2867, file: !369, line: 381, baseType: !373, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2867, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2867, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2867, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2867, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2867, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2867, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2867, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2867, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2867, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2867, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2867, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2867, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2867, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2867, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2867, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2867, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2867, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2867, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2867, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2867, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2892, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2892 = !{!2893, !102, !103}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2895, file: !369, line: 381, baseType: !373, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2895, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2895, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2895, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2895, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2895, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2895, file: !369, line: 387, baseType: !1656, size: 96, offset: 192)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2895, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2895, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2895, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2895, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2895, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2895, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2895, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2895, file: !369, line: 395, baseType: !1667, size: 64, offset: 512)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2895, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2895, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2895, file: !369, line: 398, baseType: !1671, size: 128, offset: 640)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2895, file: !369, line: 399, baseType: !1673, size: 160, offset: 768)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2895, file: !369, line: 400, baseType: !1675, size: 160, offset: 928)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2895, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2920, splitDebugInlining: false, nameTableKind: None)
!2919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2920 = !{!159, !1019, !213, !873, !2921, !168, !102}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2925 = !{!2926}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2929)
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2928, file: !116, line: 372, baseType: !120, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2928, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2928, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2928, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2928, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2928, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2928, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2928, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2928, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2928, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2928, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2928, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2928, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2928, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2946 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2947, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2948, retainedTypes: !2957, splitDebugInlining: false, nameTableKind: None)
!2947 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!2948 = !{!1185, !2949, !2953}
!2949 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 183, baseType: !32, size: 32, elements: !2950)
!2950 = !{!2951, !2952}
!2951 = !DIEnumerator(name: "DISABLE", value: 0)
!2952 = !DIEnumerator(name: "ENABLE", value: 1)
!2953 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 177, baseType: !32, size: 32, elements: !2954)
!2954 = !{!2955, !2956}
!2955 = !DIEnumerator(name: "RESET", value: 0)
!2956 = !DIEnumerator(name: "SET", value: 1)
!2957 = !{!2958, !102, !121, !167, !1851, !2976, !2982, !278, !2995, !2254, !1233}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2960)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2960, file: !116, line: 372, baseType: !120, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2960, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2960, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2960, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2960, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2960, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2960, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2960, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2960, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2960, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2960, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2960, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2960, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2960, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !2978)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !2979)
!2979 = !{!2980, !2981}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2978, file: !116, line: 362, baseType: !120, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2978, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !2985)
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2984, file: !116, line: 277, baseType: !120, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2984, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2984, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2984, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2984, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2984, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2984, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2984, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2984, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2997, file: !116, line: 305, baseType: !120, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2997, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2997, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2997, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2997, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2997, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2997, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2997, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2997, file: !116, line: 313, baseType: !1010, size: 64, offset: 256)
!3008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3010, retainedTypes: !3011, splitDebugInlining: false, nameTableKind: None)
!3009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_flash_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3010 = !{!1185, !1840, !1844, !2949, !2953}
!3011 = !{!3012, !167, !121, !1233, !278, !3025, !1851, !3033}
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !3014)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !3015)
!3015 = !{!3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3014, file: !116, line: 277, baseType: !120, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3014, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3014, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3014, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3014, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3014, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3014, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3014, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3014, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "OB_TypeDef", file: !116, line: 297, baseType: !3027)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 291, size: 128, elements: !3028)
!3028 = !{!3029, !3030, !3031, !3032}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RDP", scope: !3027, file: !116, line: 293, baseType: !120, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "USER", scope: !3027, file: !116, line: 294, baseType: !120, size: 32, offset: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "WRP01", scope: !3027, file: !116, line: 295, baseType: !120, size: 32, offset: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "WRP23", scope: !3027, file: !116, line: 296, baseType: !120, size: 32, offset: 96)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !278)
!3035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3037, retainedTypes: !3038, splitDebugInlining: false, nameTableKind: None)
!3036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3037 = !{!731}
!3038 = !{!3039, !121, !3047, !3053, !3066}
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !369, line: 712, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 706, size: 128, elements: !3042)
!3042 = !{!3043, !3044, !3045, !3046}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3041, file: !369, line: 708, baseType: !120, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3041, file: !369, line: 709, baseType: !120, size: 32, offset: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3041, file: !369, line: 710, baseType: !120, size: 32, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3041, file: !369, line: 711, baseType: !373, size: 32, offset: 96)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !3049)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !3050)
!3050 = !{!3051, !3052}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3049, file: !116, line: 362, baseType: !120, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3049, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3055, file: !116, line: 277, baseType: !120, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3055, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3055, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3055, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3055, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3055, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3055, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3055, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3055, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !3068)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !3069)
!3069 = !{!3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3068, file: !116, line: 372, baseType: !120, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3068, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3068, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3068, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3068, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3068, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3068, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3068, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3068, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3068, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3068, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3068, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3068, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3068, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!3084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3086, splitDebugInlining: false, nameTableKind: None)
!3085 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3086 = !{!102, !213}
!3087 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3088, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3089, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3088 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3089 = !{!3090, !3097, !30}
!3090 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3091, line: 14, baseType: !32, size: 32, elements: !3092)
!3091 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3092 = !{!3093, !3094, !3095, !3096}
!3093 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3094 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3095 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3096 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3097 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3091, line: 42, baseType: !32, size: 32, elements: !3098)
!3098 = !{!3099, !3100, !3101, !3102, !3103, !3104}
!3099 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3100 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3101 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3102 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3103 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3104 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3109, splitDebugInlining: false, nameTableKind: None)
!3108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3109 = !{!22, !102, !103}
!3110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3112 = !{!"Ubuntu clang version 14.0.6"}
!3113 = !{i32 7, !"Dwarf Version", i32 4}
!3114 = !{i32 2, !"Debug Info Version", i32 3}
!3115 = !{i32 1, !"wchar_size", i32 4}
!3116 = !{i32 1, !"min_enum_size", i32 4}
!3117 = !{i32 1, !"branch-target-enforcement", i32 0}
!3118 = !{i32 1, !"sign-return-address", i32 0}
!3119 = !{i32 1, !"sign-return-address-all", i32 0}
!3120 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3121 = !{i32 7, !"frame-pointer", i32 2}
!3122 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3123, file: !3123, line: 26, type: !3124, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !335)
!3123 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null}
!3126 = !DILocation(line: 28, column: 1, scope: !3122)
!3127 = !{i64 2152483164, i64 2152483184, i64 2152483247}
!3128 = !DILocation(line: 29, column: 1, scope: !3122)
!3129 = !{i64 2152483579, i64 2152483599, i64 2152483662}
!3130 = !DILocation(line: 30, column: 1, scope: !3122)
!3131 = !{i64 2152488059, i64 2152488079, i64 2152488142}
!3132 = !DILocation(line: 31, column: 1, scope: !3122)
!3133 = !{i64 2152488478, i64 2152488498, i64 2152488561}
!3134 = !DILocation(line: 33, column: 1, scope: !3122)
!3135 = !{i64 2152488770, i64 2152488790, i64 2152488853}
!3136 = !DILocation(line: 35, column: 1, scope: !3122)
!3137 = !{i64 2152489095, i64 2152489115, i64 2152489178}
!3138 = !DILocation(line: 50, column: 1, scope: !3122)
!3139 = !{i64 2152489522, i64 2152489542, i64 2152489605}
!3140 = !DILocation(line: 54, column: 1, scope: !3122)
!3141 = !{i64 2152489961, i64 2152489981, i64 2152490044}
!3142 = !DILocation(line: 61, column: 1, scope: !3122)
!3143 = !{i64 2152490278, i64 2152490298, i64 2152490361}
!3144 = !DILocation(line: 63, column: 1, scope: !3122)
!3145 = !{i64 2152490658, i64 2152490678, i64 2152490741}
!3146 = !DILocation(line: 64, column: 1, scope: !3122)
!3147 = !{i64 2152491180, i64 2152491200, i64 2152491263}
!3148 = !DILocation(line: 65, column: 1, scope: !3122)
!3149 = !{i64 2152491678, i64 2152491698, i64 2152491761}
!3150 = !DILocation(line: 66, column: 1, scope: !3122)
!3151 = !{i64 2152492160, i64 2152492180, i64 2152492243}
!3152 = !DILocation(line: 67, column: 1, scope: !3122)
!3153 = !{i64 2152492667, i64 2152492687, i64 2152492750}
!3154 = !DILocation(line: 68, column: 1, scope: !3122)
!3155 = !{i64 2152493155, i64 2152493175, i64 2152493238}
!3156 = !DILocation(line: 70, column: 1, scope: !3122)
!3157 = !{i64 2152493623, i64 2152493643, i64 2152493706}
!3158 = !DILocation(line: 71, column: 1, scope: !3122)
!3159 = !{i64 2152494065, i64 2152494085, i64 2152494148}
!3160 = !DILocation(line: 72, column: 1, scope: !3122)
!3161 = !{i64 2152494523, i64 2152494543, i64 2152494606}
!3162 = !DILocation(line: 79, column: 1, scope: !3122)
!3163 = !{i64 2152494977, i64 2152494997, i64 2152495060}
!3164 = !DILocation(line: 80, column: 1, scope: !3122)
!3165 = !{i64 2152495488, i64 2152495508, i64 2152495571}
!3166 = !DILocation(line: 82, column: 1, scope: !3122)
!3167 = !{i64 2152495979, i64 2152495999, i64 2152496062}
!3168 = !DILocation(line: 97, column: 1, scope: !3122)
!3169 = !{i64 2152496316, i64 2152496336, i64 2152496399}
!3170 = !DILocation(line: 99, column: 1, scope: !3122)
!3171 = !{i64 2152496534, i64 2152496554, i64 2152496617}
!3172 = !DILocation(line: 102, column: 1, scope: !3122)
!3173 = !{i64 2152496791, i64 2152496811, i64 2152496874}
!3174 = !DILocation(line: 105, column: 1, scope: !3122)
!3175 = !{i64 2152497031, i64 2152497051, i64 2152497114}
!3176 = !DILocation(line: 115, column: 1, scope: !3122)
!3177 = !{i64 2152497370, i64 2152497390, i64 2152497453}
!3178 = !DILocation(line: 118, column: 1, scope: !3122)
!3179 = !{i64 2152501775, i64 2152501795, i64 2152501858}
!3180 = !DILocation(line: 32, column: 1, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3122, file: !3182, discriminator: 0)
!3182 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3183 = !{i64 2152502131, i64 2152502151, i64 2152502214}
!3184 = !DILocation(line: 33, column: 1, scope: !3181)
!3185 = !{i64 2152502643, i64 2152502663, i64 2152502726}
!3186 = !DILocation(line: 53, column: 1, scope: !3181)
!3187 = !{i64 2152503151, i64 2152503171, i64 2152503234}
!3188 = !DILocation(line: 54, column: 1, scope: !3181)
!3189 = !{i64 2152503569, i64 2152503589, i64 2152503652}
!3190 = !DILocation(line: 55, column: 1, scope: !3181)
!3191 = !{i64 2152503987, i64 2152504007, i64 2152504070}
!3192 = !DILocation(line: 56, column: 1, scope: !3181)
!3193 = !{i64 2152504405, i64 2152504425, i64 2152504488}
!3194 = !DILocation(line: 57, column: 1, scope: !3181)
!3195 = !{i64 2152504823, i64 2152504843, i64 2152504906}
!3196 = !DILocation(line: 58, column: 1, scope: !3181)
!3197 = !{i64 2152505241, i64 2152505261, i64 2152505324}
!3198 = !DILocation(line: 59, column: 1, scope: !3181)
!3199 = !{i64 2152505659, i64 2152505679, i64 2152505742}
!3200 = !DILocation(line: 60, column: 1, scope: !3181)
!3201 = !{i64 2152506083, i64 2152506103, i64 2152506166}
!3202 = !DILocation(line: 61, column: 1, scope: !3181)
!3203 = !{i64 2152506400, i64 2152506420, i64 2152506483}
!3204 = !DILocation(line: 70, column: 1, scope: !3181)
!3205 = !{i64 2152506629, i64 2152506649, i64 2152506712}
!3206 = !DILocation(line: 72, column: 1, scope: !3181)
!3207 = !{i64 2152506961, i64 2152506981, i64 2152507044}
!3208 = !DILocation(line: 73, column: 1, scope: !3181)
!3209 = !{i64 2152507411, i64 2152507431, i64 2152507494}
!3210 = !DILocation(line: 74, column: 1, scope: !3181)
!3211 = !{i64 2152507861, i64 2152507881, i64 2152507944}
!3212 = !DILocation(line: 75, column: 1, scope: !3181)
!3213 = !{i64 2152508311, i64 2152508331, i64 2152508394}
!3214 = !DILocation(line: 76, column: 1, scope: !3181)
!3215 = !{i64 2152508761, i64 2152508781, i64 2152508844}
!3216 = !DILocation(line: 77, column: 1, scope: !3181)
!3217 = !{i64 2152509211, i64 2152509231, i64 2152509294}
!3218 = !DILocation(line: 78, column: 1, scope: !3181)
!3219 = !{i64 2152509661, i64 2152509681, i64 2152509744}
!3220 = !DILocation(line: 79, column: 1, scope: !3181)
!3221 = !{i64 2152510111, i64 2152510131, i64 2152510194}
!3222 = !DILocation(line: 80, column: 1, scope: !3181)
!3223 = !{i64 2152510564, i64 2152510584, i64 2152510647}
!3224 = !DILocation(line: 84, column: 1, scope: !3181)
!3225 = !{i64 2152514957, i64 2152514977, i64 2152515040}
!3226 = !DILocation(line: 91, column: 1, scope: !3181)
!3227 = !{i64 2152515354, i64 2152515374, i64 2152515437}
!3228 = !DILocation(line: 93, column: 1, scope: !3181)
!3229 = !{i64 2152515721, i64 2152515741, i64 2152515804}
!3230 = !DILocation(line: 106, column: 1, scope: !3181)
!3231 = !{i64 2152515991, i64 2152516011, i64 2152516074}
!3232 = !DILocation(line: 11, column: 1, scope: !3233)
!3233 = !DILexicalBlockFile(scope: !3122, file: !3234, discriminator: 0)
!3234 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3235 = distinct !DISubprogram(name: "main", scope: !3236, file: !3236, line: 38, type: !3124, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3237)
!3236 = !DIFile(filename: "zephyr/samples/drivers/eeprom/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3237 = !{!3238, !3239, !3240, !3245}
!3238 = !DILocalVariable(name: "eeprom", scope: !3235, file: !3236, line: 40, type: !2546)
!3239 = !DILocalVariable(name: "eeprom_size", scope: !3235, file: !3236, line: 41, type: !213)
!3240 = !DILocalVariable(name: "values", scope: !3235, file: !3236, line: 42, type: !3241)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perisistant_values", file: !3236, line: 15, size: 64, elements: !3242)
!3242 = !{!3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3241, file: !3236, line: 16, baseType: !121, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "boot_count", scope: !3241, file: !3236, line: 17, baseType: !121, size: 32, offset: 32)
!3245 = !DILocalVariable(name: "rc", scope: !3235, file: !3236, line: 43, type: !103)
!3246 = !DILocation(line: 40, column: 32, scope: !3235)
!3247 = !DILocation(line: 0, scope: !3235)
!3248 = !DILocation(line: 42, column: 2, scope: !3235)
!3249 = !DILocation(line: 42, column: 28, scope: !3235)
!3250 = !DILocation(line: 45, column: 13, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3235, file: !3236, line: 45, column: 6)
!3252 = !DILocation(line: 45, column: 6, scope: !3235)
!3253 = !DILocation(line: 49, column: 16, scope: !3235)
!3254 = !DILocation(line: 50, column: 2, scope: !3235)
!3255 = !DILocation(line: 52, column: 7, scope: !3235)
!3256 = !DILocation(line: 53, column: 9, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3235, file: !3236, line: 53, column: 6)
!3258 = !DILocation(line: 53, column: 6, scope: !3235)
!3259 = !DILocation(line: 54, column: 3, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3257, file: !3236, line: 53, column: 14)
!3261 = !DILocation(line: 55, column: 3, scope: !3260)
!3262 = !DILocation(line: 58, column: 13, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3235, file: !3236, line: 58, column: 6)
!3264 = !DILocation(line: 58, column: 19, scope: !3263)
!3265 = !DILocation(line: 58, column: 6, scope: !3235)
!3266 = !DILocation(line: 63, column: 19, scope: !3235)
!3267 = !DILocation(line: 59, column: 16, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3263, file: !3236, line: 58, column: 43)
!3269 = !DILocation(line: 61, column: 2, scope: !3268)
!3270 = !DILocation(line: 63, column: 9, scope: !3235)
!3271 = !DILocation(line: 64, column: 2, scope: !3235)
!3272 = !DILocation(line: 66, column: 7, scope: !3235)
!3273 = !DILocation(line: 67, column: 9, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3235, file: !3236, line: 67, column: 6)
!3275 = !DILocation(line: 67, column: 6, scope: !3235)
!3276 = !DILocation(line: 68, column: 3, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3274, file: !3236, line: 67, column: 14)
!3278 = !DILocation(line: 69, column: 3, scope: !3277)
!3279 = !DILocation(line: 72, column: 2, scope: !3235)
!3280 = !DILocation(line: 73, column: 1, scope: !3235)
!3281 = distinct !DISubprogram(name: "get_eeprom_device", scope: !3236, file: !3236, line: 23, type: !3282, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3284)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!2546}
!3284 = !{!3285}
!3285 = !DILocalVariable(name: "dev", scope: !3281, file: !3236, line: 25, type: !3286)
!3286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2546)
!3287 = !DILocation(line: 0, scope: !3281)
!3288 = !DILocation(line: 27, column: 7, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3281, file: !3236, line: 27, column: 6)
!3290 = !DILocation(line: 36, column: 1, scope: !3281)
!3291 = distinct !DISubprogram(name: "eeprom_get_size", scope: !3292, file: !3292, line: 76, type: !2569, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3293)
!3292 = !DIFile(filename: "zephyr/include/generated/syscalls/eeprom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3293 = !{!3294}
!3294 = !DILocalVariable(name: "dev", arg: 1, scope: !3291, file: !3292, line: 76, type: !2546)
!3295 = !DILocation(line: 0, scope: !3291)
!3296 = !DILocation(line: 84, column: 2, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3291, file: !3292, line: 84, column: 2)
!3298 = !{i64 2152402708}
!3299 = !DILocation(line: 85, column: 9, scope: !3291)
!3300 = !DILocation(line: 85, column: 2, scope: !3291)
!3301 = distinct !DISubprogram(name: "eeprom_read", scope: !3292, file: !3292, line: 24, type: !2544, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3302)
!3302 = !{!3303, !3304, !3305, !3306}
!3303 = !DILocalVariable(name: "dev", arg: 1, scope: !3301, file: !3292, line: 24, type: !2546)
!3304 = !DILocalVariable(name: "offset", arg: 2, scope: !3301, file: !3292, line: 24, type: !1218)
!3305 = !DILocalVariable(name: "data", arg: 3, scope: !3301, file: !3292, line: 24, type: !102)
!3306 = !DILocalVariable(name: "len", arg: 4, scope: !3301, file: !3292, line: 24, type: !213)
!3307 = !DILocation(line: 0, scope: !3301)
!3308 = !DILocation(line: 35, column: 2, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3301, file: !3292, line: 35, column: 2)
!3310 = !{i64 2152402572}
!3311 = !DILocation(line: 36, column: 9, scope: !3301)
!3312 = !DILocation(line: 36, column: 2, scope: !3301)
!3313 = distinct !DISubprogram(name: "eeprom_write", scope: !3292, file: !3292, line: 50, type: !2564, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3314)
!3314 = !{!3315, !3316, !3317, !3318}
!3315 = !DILocalVariable(name: "dev", arg: 1, scope: !3313, file: !3292, line: 50, type: !2546)
!3316 = !DILocalVariable(name: "offset", arg: 2, scope: !3313, file: !3292, line: 50, type: !1218)
!3317 = !DILocalVariable(name: "data", arg: 3, scope: !3313, file: !3292, line: 50, type: !13)
!3318 = !DILocalVariable(name: "len", arg: 4, scope: !3313, file: !3292, line: 50, type: !213)
!3319 = !DILocation(line: 0, scope: !3313)
!3320 = !DILocation(line: 61, column: 2, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3313, file: !3292, line: 61, column: 2)
!3322 = !{i64 2152402640}
!3323 = !DILocation(line: 62, column: 9, scope: !3313)
!3324 = !DILocation(line: 62, column: 2, scope: !3313)
!3325 = distinct !DISubprogram(name: "z_impl_eeprom_write", scope: !1196, file: !1196, line: 84, type: !2564, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3326)
!3326 = !{!3327, !3328, !3329, !3330, !3331}
!3327 = !DILocalVariable(name: "dev", arg: 1, scope: !3325, file: !1196, line: 84, type: !2546)
!3328 = !DILocalVariable(name: "offset", arg: 2, scope: !3325, file: !1196, line: 84, type: !1218)
!3329 = !DILocalVariable(name: "data", arg: 3, scope: !3325, file: !1196, line: 85, type: !13)
!3330 = !DILocalVariable(name: "len", arg: 4, scope: !3325, file: !1196, line: 85, type: !213)
!3331 = !DILocalVariable(name: "api", scope: !3325, file: !1196, line: 87, type: !2537)
!3332 = !DILocation(line: 0, scope: !3325)
!3333 = !DILocation(line: 88, column: 42, scope: !3325)
!3334 = !DILocation(line: 90, column: 14, scope: !3325)
!3335 = !DILocation(line: 90, column: 9, scope: !3325)
!3336 = !DILocation(line: 90, column: 2, scope: !3325)
!3337 = distinct !DISubprogram(name: "z_impl_eeprom_read", scope: !1196, file: !1196, line: 61, type: !2544, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3338)
!3338 = !{!3339, !3340, !3341, !3342, !3343}
!3339 = !DILocalVariable(name: "dev", arg: 1, scope: !3337, file: !1196, line: 61, type: !2546)
!3340 = !DILocalVariable(name: "offset", arg: 2, scope: !3337, file: !1196, line: 61, type: !1218)
!3341 = !DILocalVariable(name: "data", arg: 3, scope: !3337, file: !1196, line: 62, type: !102)
!3342 = !DILocalVariable(name: "len", arg: 4, scope: !3337, file: !1196, line: 62, type: !213)
!3343 = !DILocalVariable(name: "api", scope: !3337, file: !1196, line: 64, type: !2537)
!3344 = !DILocation(line: 0, scope: !3337)
!3345 = !DILocation(line: 65, column: 42, scope: !3337)
!3346 = !DILocation(line: 67, column: 14, scope: !3337)
!3347 = !DILocation(line: 67, column: 9, scope: !3337)
!3348 = !DILocation(line: 67, column: 2, scope: !3337)
!3349 = distinct !DISubprogram(name: "z_impl_eeprom_get_size", scope: !1196, file: !1196, line: 102, type: !2569, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3350)
!3350 = !{!3351, !3352}
!3351 = !DILocalVariable(name: "dev", arg: 1, scope: !3349, file: !1196, line: 102, type: !2546)
!3352 = !DILocalVariable(name: "api", scope: !3349, file: !1196, line: 104, type: !2537)
!3353 = !DILocation(line: 0, scope: !3349)
!3354 = !DILocation(line: 105, column: 42, scope: !3349)
!3355 = !DILocation(line: 107, column: 14, scope: !3349)
!3356 = !DILocation(line: 107, column: 9, scope: !3349)
!3357 = !DILocation(line: 107, column: 2, scope: !3349)
!3358 = distinct !DISubprogram(name: "device_is_ready", scope: !3359, file: !3359, line: 47, type: !3360, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3362)
!3359 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!170, !2546}
!3362 = !{!3363}
!3363 = !DILocalVariable(name: "dev", arg: 1, scope: !3358, file: !3359, line: 47, type: !2546)
!3364 = !DILocation(line: 0, scope: !3358)
!3365 = !DILocation(line: 55, column: 2, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3358, file: !3359, line: 55, column: 2)
!3367 = !{i64 2152399089}
!3368 = !DILocation(line: 56, column: 9, scope: !3358)
!3369 = !DILocation(line: 56, column: 2, scope: !3358)
!3370 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !3360, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !3371)
!3371 = !{!3372}
!3372 = !DILocalVariable(name: "dev", arg: 1, scope: !3370, file: !154, line: 730, type: !2546)
!3373 = !DILocation(line: 0, scope: !3370)
!3374 = !DILocation(line: 732, column: 9, scope: !3370)
!3375 = !DILocation(line: 732, column: 2, scope: !3370)
!3376 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3377)
!3377 = !{!3378}
!3378 = !DILocalVariable(name: "c", arg: 1, scope: !3376, file: !105, line: 45, type: !103)
!3379 = !DILocation(line: 0, scope: !3376)
!3380 = !DILocation(line: 50, column: 2, scope: !3376)
!3381 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3382, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3384)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{null, !106}
!3384 = !{!3385}
!3385 = !DILocalVariable(name: "fn", arg: 1, scope: !3381, file: !105, line: 63, type: !106)
!3386 = !DILocation(line: 0, scope: !3381)
!3387 = !DILocation(line: 65, column: 12, scope: !3381)
!3388 = !DILocation(line: 66, column: 1, scope: !3381)
!3389 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3390, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !335)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!102}
!3392 = !DILocation(line: 78, column: 9, scope: !3389)
!3393 = !DILocation(line: 78, column: 2, scope: !3389)
!3394 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3395, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3404)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{null, !157, !3397}
!3397 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3398, line: 99, baseType: !3399)
!3398 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3398, line: 40, baseType: !3400)
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3401)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3402)
!3402 = !{!3403}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3401, file: !105, line: 79, baseType: !102, size: 32)
!3404 = !{!3405, !3406, !3407}
!3405 = !DILocalVariable(name: "fmt", arg: 1, scope: !3394, file: !105, line: 113, type: !157)
!3406 = !DILocalVariable(name: "ap", arg: 2, scope: !3394, file: !105, line: 113, type: !3397)
!3407 = !DILocalVariable(name: "ctx", scope: !3408, file: !105, line: 121, type: !3410)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !105, line: 120, column: 27)
!3409 = distinct !DILexicalBlock(scope: !3394, file: !105, line: 120, column: 6)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3411)
!3411 = !{!3412, !3413}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3410, file: !105, line: 85, baseType: !32, size: 32)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3410, file: !105, line: 86, baseType: !3414, offset: 32)
!3414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, elements: !3415)
!3415 = !{!3416}
!3416 = !DISubrange(count: 0)
!3417 = !DILocation(line: 0, scope: !3394)
!3418 = !DILocation(line: 148, column: 3, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3409, file: !105, line: 138, column: 9)
!3420 = !DILocation(line: 155, column: 1, scope: !3394)
!3421 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3422, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3424)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!103, !103, !102}
!3424 = !{!3425, !3426}
!3425 = !DILocalVariable(name: "c", arg: 1, scope: !3421, file: !105, line: 107, type: !103)
!3426 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3421, file: !105, line: 107, type: !102)
!3427 = !DILocation(line: 0, scope: !3421)
!3428 = !DILocation(line: 110, column: 9, scope: !3421)
!3429 = !DILocation(line: 110, column: 2, scope: !3421)
!3430 = distinct !DISubprogram(name: "cbvprintf", scope: !3431, file: !3431, line: 739, type: !3432, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3438)
!3431 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!103, !3434, !102, !157, !3397}
!3434 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3431, line: 297, baseType: !3435)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 32)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!103, null}
!3438 = !{!3439, !3440, !3441, !3442}
!3439 = !DILocalVariable(name: "out", arg: 1, scope: !3430, file: !3431, line: 739, type: !3434)
!3440 = !DILocalVariable(name: "ctx", arg: 2, scope: !3430, file: !3431, line: 739, type: !102)
!3441 = !DILocalVariable(name: "format", arg: 3, scope: !3430, file: !3431, line: 739, type: !157)
!3442 = !DILocalVariable(name: "ap", arg: 4, scope: !3430, file: !3431, line: 739, type: !3397)
!3443 = !DILocation(line: 0, scope: !3430)
!3444 = !DILocation(line: 741, column: 9, scope: !3430)
!3445 = !DILocation(line: 741, column: 2, scope: !3430)
!3446 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3447, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3449)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{null, !1019, !213}
!3449 = !{!3450, !3451, !3452}
!3450 = !DILocalVariable(name: "c", arg: 1, scope: !3446, file: !105, line: 157, type: !1019)
!3451 = !DILocalVariable(name: "n", arg: 2, scope: !3446, file: !105, line: 157, type: !213)
!3452 = !DILocalVariable(name: "i", scope: !3446, file: !105, line: 159, type: !213)
!3453 = !DILocation(line: 0, scope: !3446)
!3454 = !DILocation(line: 164, column: 16, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !105, line: 164, column: 2)
!3456 = distinct !DILexicalBlock(scope: !3446, file: !105, line: 164, column: 2)
!3457 = !DILocation(line: 164, column: 2, scope: !3456)
!3458 = !DILocation(line: 165, column: 3, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3455, file: !105, line: 164, column: 26)
!3460 = !DILocation(line: 165, column: 13, scope: !3459)
!3461 = !DILocation(line: 164, column: 22, scope: !3455)
!3462 = distinct !{!3462, !3457, !3463}
!3463 = !DILocation(line: 166, column: 2, scope: !3456)
!3464 = !DILocation(line: 171, column: 1, scope: !3446)
!3465 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3466, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3468)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !157, null}
!3468 = !{!3469, !3470}
!3469 = !DILocalVariable(name: "fmt", arg: 1, scope: !3465, file: !105, line: 203, type: !157)
!3470 = !DILocalVariable(name: "ap", scope: !3465, file: !105, line: 205, type: !3397)
!3471 = !DILocation(line: 0, scope: !3465)
!3472 = !DILocation(line: 205, column: 2, scope: !3465)
!3473 = !DILocation(line: 205, column: 10, scope: !3465)
!3474 = !DILocation(line: 207, column: 2, scope: !3465)
!3475 = !DILocation(line: 209, column: 2, scope: !3465)
!3476 = !DILocation(line: 211, column: 2, scope: !3465)
!3477 = !DILocation(line: 212, column: 1, scope: !3465)
!3478 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3479, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3481)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!103, !1019, !213, !157, null}
!3481 = !{!3482, !3483, !3484, !3485, !3486}
!3482 = !DILocalVariable(name: "str", arg: 1, scope: !3478, file: !105, line: 239, type: !1019)
!3483 = !DILocalVariable(name: "size", arg: 2, scope: !3478, file: !105, line: 239, type: !213)
!3484 = !DILocalVariable(name: "fmt", arg: 3, scope: !3478, file: !105, line: 239, type: !157)
!3485 = !DILocalVariable(name: "ap", scope: !3478, file: !105, line: 241, type: !3397)
!3486 = !DILocalVariable(name: "ret", scope: !3478, file: !105, line: 242, type: !103)
!3487 = !DILocation(line: 0, scope: !3478)
!3488 = !DILocation(line: 241, column: 2, scope: !3478)
!3489 = !DILocation(line: 241, column: 10, scope: !3478)
!3490 = !DILocation(line: 244, column: 2, scope: !3478)
!3491 = !DILocation(line: 245, column: 8, scope: !3478)
!3492 = !DILocation(line: 246, column: 2, scope: !3478)
!3493 = !DILocation(line: 249, column: 1, scope: !3478)
!3494 = !DILocation(line: 248, column: 2, scope: !3478)
!3495 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3496, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3498)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!103, !1019, !213, !157, !3397}
!3498 = !{!3499, !3500, !3501, !3502, !3503}
!3499 = !DILocalVariable(name: "str", arg: 1, scope: !3495, file: !105, line: 251, type: !1019)
!3500 = !DILocalVariable(name: "size", arg: 2, scope: !3495, file: !105, line: 251, type: !213)
!3501 = !DILocalVariable(name: "fmt", arg: 3, scope: !3495, file: !105, line: 251, type: !157)
!3502 = !DILocalVariable(name: "ap", arg: 4, scope: !3495, file: !105, line: 251, type: !3397)
!3503 = !DILocalVariable(name: "ctx", scope: !3495, file: !105, line: 253, type: !3504)
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3505)
!3505 = !{!3506, !3507, !3508}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3504, file: !105, line: 218, baseType: !1019, size: 32)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3504, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3504, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3509 = !DILocation(line: 0, scope: !3495)
!3510 = !DILocation(line: 253, column: 2, scope: !3495)
!3511 = !DILocation(line: 253, column: 21, scope: !3495)
!3512 = !DILocation(line: 253, column: 27, scope: !3495)
!3513 = !DILocation(line: 255, column: 2, scope: !3495)
!3514 = !DILocation(line: 257, column: 10, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3495, file: !105, line: 257, column: 6)
!3516 = !DILocation(line: 257, column: 22, scope: !3515)
!3517 = !DILocation(line: 257, column: 16, scope: !3515)
!3518 = !DILocation(line: 257, column: 6, scope: !3495)
!3519 = !DILocation(line: 258, column: 3, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3515, file: !105, line: 257, column: 27)
!3521 = !DILocation(line: 258, column: 18, scope: !3520)
!3522 = !DILocation(line: 259, column: 2, scope: !3520)
!3523 = !DILocation(line: 262, column: 1, scope: !3495)
!3524 = !DILocation(line: 261, column: 2, scope: !3495)
!3525 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3526, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3529)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!103, !103, !3528}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 32)
!3529 = !{!3530, !3531}
!3530 = !DILocalVariable(name: "c", arg: 1, scope: !3525, file: !105, line: 223, type: !103)
!3531 = !DILocalVariable(name: "ctx", arg: 2, scope: !3525, file: !105, line: 223, type: !3528)
!3532 = !DILocation(line: 0, scope: !3525)
!3533 = !DILocation(line: 225, column: 11, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3525, file: !105, line: 225, column: 6)
!3535 = !DILocation(line: 225, column: 15, scope: !3534)
!3536 = !DILocation(line: 0, scope: !3534)
!3537 = !DILocation(line: 225, column: 23, scope: !3534)
!3538 = !DILocation(line: 225, column: 45, scope: !3534)
!3539 = !DILocation(line: 225, column: 37, scope: !3534)
!3540 = !DILocation(line: 225, column: 6, scope: !3525)
!3541 = !DILocation(line: 226, column: 8, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3534, file: !105, line: 225, column: 50)
!3543 = !DILocation(line: 226, column: 13, scope: !3542)
!3544 = !DILocation(line: 227, column: 3, scope: !3542)
!3545 = !DILocation(line: 230, column: 29, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3525, file: !105, line: 230, column: 6)
!3547 = !DILocation(line: 230, column: 17, scope: !3546)
!3548 = !DILocation(line: 230, column: 6, scope: !3525)
!3549 = !DILocation(line: 231, column: 22, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3546, file: !105, line: 230, column: 34)
!3551 = !DILocation(line: 231, column: 3, scope: !3550)
!3552 = !DILocation(line: 231, column: 26, scope: !3550)
!3553 = !DILocation(line: 232, column: 2, scope: !3550)
!3554 = !DILocation(line: 233, column: 28, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3546, file: !105, line: 232, column: 9)
!3556 = !DILocation(line: 233, column: 22, scope: !3555)
!3557 = !DILocation(line: 233, column: 3, scope: !3555)
!3558 = !DILocation(line: 233, column: 26, scope: !3555)
!3559 = !DILocation(line: 237, column: 1, scope: !3525)
!3560 = distinct !DISubprogram(name: "z_thread_entry", scope: !3561, file: !3561, line: 30, type: !3562, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !3569)
!3561 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3564, !102, !102, !102}
!3564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3565, line: 46, baseType: !3566)
!3565 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 32)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !102, !102, !102}
!3569 = !{!3570, !3571, !3572, !3573}
!3570 = !DILocalVariable(name: "entry", arg: 1, scope: !3560, file: !3561, line: 30, type: !3564)
!3571 = !DILocalVariable(name: "p1", arg: 2, scope: !3560, file: !3561, line: 31, type: !102)
!3572 = !DILocalVariable(name: "p2", arg: 3, scope: !3560, file: !3561, line: 31, type: !102)
!3573 = !DILocalVariable(name: "p3", arg: 4, scope: !3560, file: !3561, line: 31, type: !102)
!3574 = !DILocation(line: 0, scope: !3560)
!3575 = !DILocation(line: 36, column: 2, scope: !3560)
!3576 = !DILocation(line: 38, column: 17, scope: !3560)
!3577 = !DILocation(line: 38, column: 2, scope: !3560)
!3578 = !DILocation(line: 45, column: 2, scope: !3560)
!3579 = distinct !DISubprogram(name: "k_current_get", scope: !320, file: !320, line: 530, type: !3580, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !335)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!3582}
!3582 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !3583)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 32)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !3585)
!3585 = !{!3586, !3644, !3656, !3657, !3658, !3659, !3665, !3678}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3584, file: !224, line: 247, baseType: !3587, size: 384)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !3588)
!3588 = !{!3589, !3613, !3620, !3621, !3622, !3631, !3632, !3633}
!3589 = !DIDerivedType(tag: DW_TAG_member, scope: !3587, file: !224, line: 60, baseType: !3590, size: 64)
!3590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3587, file: !224, line: 60, size: 64, elements: !3591)
!3591 = !{!3592, !3607}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3590, file: !224, line: 61, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !3594)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !3595)
!3595 = !{!3596, !3602}
!3596 = !DIDerivedType(tag: DW_TAG_member, scope: !3594, file: !234, line: 38, baseType: !3597, size: 32)
!3597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3594, file: !234, line: 38, size: 32, elements: !3598)
!3598 = !{!3599, !3601}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3597, file: !234, line: 39, baseType: !3600, size: 32)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3597, file: !234, line: 40, baseType: !3600, size: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, scope: !3594, file: !234, line: 42, baseType: !3603, size: 32, offset: 32)
!3603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3594, file: !234, line: 42, size: 32, elements: !3604)
!3604 = !{!3605, !3606}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3603, file: !234, line: 43, baseType: !3600, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3603, file: !234, line: 44, baseType: !3600, size: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3590, file: !224, line: 62, baseType: !3608, size: 64)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !3609)
!3609 = !{!3610}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3608, file: !250, line: 50, baseType: !3611, size: 64)
!3611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3612, size: 64, elements: !255)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3587, file: !224, line: 68, baseType: !3614, size: 32, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !3616)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !3617)
!3617 = !{!3618}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3616, file: !260, line: 232, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !3594)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3587, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3587, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!3622 = !DIDerivedType(tag: DW_TAG_member, scope: !3587, file: !224, line: 90, baseType: !3623, size: 16, offset: 112)
!3623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3587, file: !224, line: 90, size: 16, elements: !3624)
!3624 = !{!3625, !3630}
!3625 = !DIDerivedType(tag: DW_TAG_member, scope: !3623, file: !224, line: 91, baseType: !3626, size: 16)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3623, file: !224, line: 91, size: 16, elements: !3627)
!3627 = !{!3628, !3629}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3626, file: !224, line: 96, baseType: !274, size: 8)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3626, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3623, file: !224, line: 100, baseType: !278, size: 16)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3587, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3587, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3587, file: !224, line: 131, baseType: !3634, size: 192, offset: 192)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !3635)
!3635 = !{!3636, !3637, !3643}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3634, file: !260, line: 245, baseType: !3593, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3634, file: !260, line: 246, baseType: !3638, size: 32, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !3639)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 32)
!3640 = !DISubroutineType(types: !3641)
!3641 = !{null, !3642}
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 32)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3634, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3584, file: !224, line: 250, baseType: !3645, size: 288, offset: 384)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !3646)
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3645, file: !297, line: 26, baseType: !121, size: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3645, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3645, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3645, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3645, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3645, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3645, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3645, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3645, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3584, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3584, file: !224, line: 256, baseType: !3615, size: 64, offset: 704)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3584, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3584, file: !224, line: 300, baseType: !3660, size: 96, offset: 800)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !3661)
!3661 = !{!3662, !3663, !3664}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3660, file: !224, line: 153, baseType: !22, size: 32)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3660, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3660, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3584, file: !224, line: 325, baseType: !3666, size: 32, offset: 896)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !3668)
!3668 = !{!3669, !3675, !3676}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3667, file: !320, line: 5074, baseType: !3670, size: 96)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3671)
!3671 = !{!3672, !3673, !3674}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3670, file: !324, line: 57, baseType: !327, size: 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3670, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3670, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3667, file: !320, line: 5075, baseType: !3615, size: 64, offset: 96)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3667, file: !320, line: 5076, baseType: !3677, offset: 160)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3584, file: !224, line: 343, baseType: !3679, size: 64, offset: 928)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !3680)
!3680 = !{!3681, !3682}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3679, file: !297, line: 63, baseType: !121, size: 32)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3679, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!3683 = !DILocation(line: 535, column: 9, scope: !3579)
!3684 = !DILocation(line: 535, column: 2, scope: !3579)
!3685 = distinct !DISubprogram(name: "k_thread_abort", scope: !3686, file: !3686, line: 188, type: !3687, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !3689)
!3686 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!3687 = !DISubroutineType(types: !3688)
!3688 = !{null, !3582}
!3689 = !{!3690}
!3690 = !DILocalVariable(name: "thread", arg: 1, scope: !3685, file: !3686, line: 188, type: !3582)
!3691 = !DILocation(line: 0, scope: !3685)
!3692 = !DILocation(line: 197, column: 2, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3685, file: !3686, line: 197, column: 2)
!3694 = !{i64 2152212480}
!3695 = !DILocation(line: 198, column: 2, scope: !3685)
!3696 = !DILocation(line: 199, column: 1, scope: !3685)
!3697 = distinct !DISubprogram(name: "z_current_get", scope: !3686, file: !3686, line: 173, type: !3580, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !335)
!3698 = !DILocation(line: 180, column: 2, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3697, file: !3686, line: 180, column: 2)
!3700 = !{i64 2152212412}
!3701 = !DILocation(line: 181, column: 9, scope: !3697)
!3702 = !DILocation(line: 181, column: 2, scope: !3697)
!3703 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2577, file: !2577, line: 1338, type: !3704, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3712)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!103, !3434, !102, !157, !3706, !121}
!3706 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3398, line: 99, baseType: !3707)
!3707 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3398, line: 40, baseType: !3708)
!3708 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2577, baseType: !3709)
!3709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3710)
!3710 = !{!3711}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3709, file: !2577, baseType: !102, size: 32)
!3712 = !{!3713, !3714, !3715, !3716, !3717, !3718, !3722, !3723, !3724, !3726, !3731, !3776, !3779, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3791, !3792, !3793, !3797, !3800, !3802, !3805, !3806, !3807, !3812, !3818, !3821, !3825, !3831, !3835, !3838, !3840, !3843}
!3713 = !DILocalVariable(name: "out", arg: 1, scope: !3703, file: !2577, line: 1338, type: !3434)
!3714 = !DILocalVariable(name: "ctx", arg: 2, scope: !3703, file: !2577, line: 1338, type: !102)
!3715 = !DILocalVariable(name: "fp", arg: 3, scope: !3703, file: !2577, line: 1338, type: !157)
!3716 = !DILocalVariable(name: "ap", arg: 4, scope: !3703, file: !2577, line: 1339, type: !3706)
!3717 = !DILocalVariable(name: "flags", arg: 5, scope: !3703, file: !2577, line: 1339, type: !121)
!3718 = !DILocalVariable(name: "buf", scope: !3703, file: !2577, line: 1341, type: !3719)
!3719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 176, elements: !3720)
!3720 = !{!3721}
!3721 = !DISubrange(count: 22)
!3722 = !DILocalVariable(name: "count", scope: !3703, file: !2577, line: 1342, type: !213)
!3723 = !DILocalVariable(name: "sint", scope: !3703, file: !2577, line: 1343, type: !2596)
!3724 = !DILocalVariable(name: "tagged_ap", scope: !3703, file: !2577, line: 1345, type: !3725)
!3725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!3726 = !DILocalVariable(name: "rc", scope: !3727, file: !2577, line: 1377, type: !103)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !2577, line: 1377, column: 4)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !2577, line: 1376, column: 19)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1376, column: 7)
!3730 = distinct !DILexicalBlock(scope: !3703, file: !2577, line: 1375, column: 19)
!3731 = !DILocalVariable(name: "state", scope: !3730, file: !2577, line: 1395, type: !3732)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3703, file: !2577, line: 1392, size: 192, elements: !3733)
!3733 = !{!3734, !3744}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3732, file: !2577, line: 1393, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2577, line: 166, size: 64, elements: !3736)
!3736 = !{!3737, !3738, !3739, !3741, !3743}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3735, file: !2577, line: 168, baseType: !2596, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3735, file: !2577, line: 171, baseType: !2599, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3735, file: !2577, line: 174, baseType: !3740, size: 64)
!3740 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3735, file: !2577, line: 177, baseType: !3742, size: 64)
!3742 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3735, file: !2577, line: 180, baseType: !102, size: 32)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3732, file: !2577, line: 1394, baseType: !3745, size: 96, offset: 64)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2577, line: 189, size: 96, elements: !3746)
!3746 = !{!3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3771}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3745, file: !2577, line: 191, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3745, file: !2577, line: 194, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3745, file: !2577, line: 197, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3745, file: !2577, line: 200, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3745, file: !2577, line: 203, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3745, file: !2577, line: 206, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3745, file: !2577, line: 209, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3745, file: !2577, line: 212, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3745, file: !2577, line: 219, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3745, file: !2577, line: 222, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3745, file: !2577, line: 229, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3745, file: !2577, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3745, file: !2577, line: 238, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3745, file: !2577, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3745, file: !2577, line: 244, baseType: !170, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3745, file: !2577, line: 247, baseType: !170, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3745, file: !2577, line: 252, baseType: !170, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3745, file: !2577, line: 257, baseType: !170, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3745, file: !2577, line: 260, baseType: !168, size: 8, offset: 24)
!3766 = !DIDerivedType(tag: DW_TAG_member, scope: !3745, file: !2577, line: 262, baseType: !3767, size: 32, offset: 32)
!3767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3745, file: !2577, line: 262, size: 32, elements: !3768)
!3768 = !{!3769, !3770}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3767, file: !2577, line: 267, baseType: !103, size: 32)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3767, file: !2577, line: 289, baseType: !103, size: 32)
!3771 = !DIDerivedType(tag: DW_TAG_member, scope: !3745, file: !2577, line: 292, baseType: !3772, size: 32, offset: 64)
!3772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3745, file: !2577, line: 292, size: 32, elements: !3773)
!3773 = !{!3774, !3775}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3772, file: !2577, line: 297, baseType: !103, size: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3772, file: !2577, line: 306, baseType: !103, size: 32)
!3776 = !DILocalVariable(name: "conv", scope: !3730, file: !2577, line: 1400, type: !3777)
!3777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3778)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 32)
!3779 = !DILocalVariable(name: "value", scope: !3730, file: !2577, line: 1401, type: !3780)
!3780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3781)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 32)
!3782 = !DILocalVariable(name: "sp", scope: !3730, file: !2577, line: 1402, type: !157)
!3783 = !DILocalVariable(name: "width", scope: !3730, file: !2577, line: 1403, type: !103)
!3784 = !DILocalVariable(name: "precision", scope: !3730, file: !2577, line: 1404, type: !103)
!3785 = !DILocalVariable(name: "bps", scope: !3730, file: !2577, line: 1405, type: !157)
!3786 = !DILocalVariable(name: "bpe", scope: !3730, file: !2577, line: 1406, type: !157)
!3787 = !DILocalVariable(name: "sign", scope: !3730, file: !2577, line: 1407, type: !159)
!3788 = !DILocalVariable(name: "arg", scope: !3789, file: !2577, line: 1432, type: !103)
!3789 = distinct !DILexicalBlock(scope: !3790, file: !2577, line: 1431, column: 24)
!3790 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1431, column: 7)
!3791 = !DILocalVariable(name: "specifier_cat", scope: !3730, file: !2577, line: 1468, type: !2576)
!3792 = !DILocalVariable(name: "length_mod", scope: !3730, file: !2577, line: 1470, type: !2584)
!3793 = !DILocalVariable(name: "rc", scope: !3794, file: !2577, line: 1575, type: !103)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !2577, line: 1575, column: 4)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !2577, line: 1574, column: 43)
!3796 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1574, column: 7)
!3797 = !DILocalVariable(name: "rc", scope: !3798, file: !2577, line: 1584, type: !103)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1584, column: 4)
!3799 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1582, column: 28)
!3800 = !DILocalVariable(name: "len", scope: !3801, file: !2577, line: 1589, type: !213)
!3801 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1586, column: 13)
!3802 = !DILocalVariable(name: "len", scope: !3803, file: !2577, line: 1641, type: !213)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !2577, line: 1640, column: 24)
!3804 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1640, column: 8)
!3805 = !DILocalVariable(name: "nj_len", scope: !3730, file: !2577, line: 1722, type: !213)
!3806 = !DILocalVariable(name: "pad_len", scope: !3730, file: !2577, line: 1723, type: !103)
!3807 = !DILocalVariable(name: "pad", scope: !3808, file: !2577, line: 1751, type: !159)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !2577, line: 1750, column: 26)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !2577, line: 1750, column: 8)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !2577, line: 1747, column: 18)
!3811 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1747, column: 7)
!3812 = !DILocalVariable(name: "rc", scope: !3813, file: !2577, line: 1758, type: !103)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !2577, line: 1758, column: 7)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !2577, line: 1757, column: 21)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !2577, line: 1757, column: 10)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !2577, line: 1756, column: 26)
!3817 = distinct !DILexicalBlock(scope: !3808, file: !2577, line: 1756, column: 9)
!3818 = !DILocalVariable(name: "rc", scope: !3819, file: !2577, line: 1765, type: !103)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !2577, line: 1765, column: 6)
!3820 = distinct !DILexicalBlock(scope: !3808, file: !2577, line: 1764, column: 25)
!3821 = !DILocalVariable(name: "rc", scope: !3822, file: !2577, line: 1774, type: !103)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !2577, line: 1774, column: 4)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !2577, line: 1773, column: 18)
!3824 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1773, column: 7)
!3825 = !DILocalVariable(name: "rc", scope: !3826, file: !2577, line: 1819, type: !103)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !2577, line: 1819, column: 5)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !2577, line: 1818, column: 44)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !2577, line: 1818, column: 8)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !2577, line: 1817, column: 10)
!3830 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1777, column: 7)
!3831 = !DILocalVariable(name: "rc", scope: !3832, file: !2577, line: 1823, type: !103)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !2577, line: 1823, column: 5)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !2577, line: 1822, column: 26)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !2577, line: 1822, column: 8)
!3835 = !DILocalVariable(name: "rc", scope: !3836, file: !2577, line: 1828, type: !103)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !2577, line: 1828, column: 5)
!3837 = distinct !DILexicalBlock(scope: !3829, file: !2577, line: 1827, column: 26)
!3838 = !DILocalVariable(name: "rc", scope: !3839, file: !2577, line: 1831, type: !103)
!3839 = distinct !DILexicalBlock(scope: !3829, file: !2577, line: 1831, column: 4)
!3840 = !DILocalVariable(name: "rc", scope: !3841, file: !2577, line: 1836, type: !103)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !2577, line: 1836, column: 4)
!3842 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1835, column: 21)
!3843 = !DILabel(scope: !3799, name: "prec_int_pad0", file: !2577, line: 1634)
!3844 = !DILocation(line: 0, scope: !3703)
!3845 = !DILocation(line: 1341, column: 2, scope: !3703)
!3846 = !DILocation(line: 1341, column: 7, scope: !3703)
!3847 = !DILocation(line: 1375, column: 2, scope: !3703)
!3848 = !DILocation(line: 1342, column: 9, scope: !3703)
!3849 = !DILocation(line: 1375, column: 9, scope: !3703)
!3850 = !DILocation(line: 1377, column: 4, scope: !3727)
!3851 = !DILocation(line: 0, scope: !3727)
!3852 = !DILocation(line: 1377, column: 4, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3727, file: !2577, line: 1377, column: 4)
!3854 = distinct !{!3854, !3847, !3855}
!3855 = !DILocation(line: 1839, column: 2, scope: !3703)
!3856 = !DILocation(line: 1392, column: 3, scope: !3730)
!3857 = !DILocation(line: 1395, column: 5, scope: !3730)
!3858 = !DILocation(line: 0, scope: !3730)
!3859 = !DILocation(line: 1409, column: 8, scope: !3730)
!3860 = !DILocation(line: 1414, column: 13, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1414, column: 7)
!3862 = !DILocation(line: 1414, column: 7, scope: !3730)
!3863 = !DILocation(line: 1415, column: 12, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3861, file: !2577, line: 1414, column: 25)
!3865 = !DILocation(line: 1417, column: 14, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3864, file: !2577, line: 1417, column: 8)
!3867 = !DILocation(line: 1417, column: 8, scope: !3864)
!3868 = !DILocation(line: 1418, column: 21, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3866, file: !2577, line: 1417, column: 19)
!3870 = !DILocation(line: 1419, column: 13, scope: !3869)
!3871 = !DILocation(line: 1420, column: 4, scope: !3869)
!3872 = !DILocation(line: 1421, column: 20, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3861, file: !2577, line: 1421, column: 14)
!3874 = !DILocation(line: 1421, column: 14, scope: !3861)
!3875 = !DILocation(line: 1431, column: 13, scope: !3790)
!3876 = !DILocation(line: 1431, column: 7, scope: !3730)
!3877 = !DILocation(line: 1432, column: 14, scope: !3789)
!3878 = !DILocation(line: 0, scope: !3789)
!3879 = !DILocation(line: 1434, column: 12, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3789, file: !2577, line: 1434, column: 8)
!3881 = !DILocation(line: 1434, column: 8, scope: !3789)
!3882 = !DILocation(line: 1435, column: 24, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3880, file: !2577, line: 1434, column: 17)
!3884 = !DILocation(line: 1436, column: 4, scope: !3883)
!3885 = !DILocation(line: 1439, column: 20, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3790, file: !2577, line: 1439, column: 14)
!3887 = !DILocation(line: 1439, column: 14, scope: !3790)
!3888 = !DILocation(line: 1469, column: 37, scope: !3730)
!3889 = !DILocation(line: 1448, column: 20, scope: !3730)
!3890 = !DILocation(line: 1449, column: 22, scope: !3730)
!3891 = !DILocation(line: 1471, column: 34, scope: !3730)
!3892 = !DILocation(line: 1478, column: 7, scope: !3730)
!3893 = !DILocation(line: 1479, column: 4, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !2577, line: 1478, column: 40)
!3895 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1478, column: 7)
!3896 = !DILocation(line: 1484, column: 19, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3894, file: !2577, line: 1479, column: 24)
!3898 = !DILocation(line: 1484, column: 17, scope: !3897)
!3899 = !DILocation(line: 1485, column: 5, scope: !3897)
!3900 = !DILocation(line: 1492, column: 20, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !2577, line: 1491, column: 12)
!3902 = distinct !DILexicalBlock(scope: !3897, file: !2577, line: 1487, column: 9)
!3903 = !DILocation(line: 1492, column: 18, scope: !3901)
!3904 = !DILocation(line: 1494, column: 5, scope: !3897)
!3905 = !DILocation(line: 1497, column: 23, scope: !3897)
!3906 = !DILocation(line: 1496, column: 17, scope: !3897)
!3907 = !DILocation(line: 1498, column: 5, scope: !3897)
!3908 = !DILocation(line: 1501, column: 23, scope: !3897)
!3909 = !DILocation(line: 1500, column: 17, scope: !3897)
!3910 = !DILocation(line: 1502, column: 5, scope: !3897)
!3911 = !DILocation(line: 1513, column: 23, scope: !3897)
!3912 = !DILocation(line: 1513, column: 6, scope: !3897)
!3913 = !DILocation(line: 1512, column: 17, scope: !3897)
!3914 = !DILocation(line: 1514, column: 5, scope: !3897)
!3915 = !DILocation(line: 0, scope: !3897)
!3916 = !DILocation(line: 1516, column: 8, scope: !3894)
!3917 = !DILocation(line: 1517, column: 19, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !2577, line: 1516, column: 33)
!3919 = distinct !DILexicalBlock(scope: !3894, file: !2577, line: 1516, column: 8)
!3920 = !DILocation(line: 1517, column: 17, scope: !3918)
!3921 = !DILocation(line: 1518, column: 4, scope: !3918)
!3922 = !DILocation(line: 1519, column: 19, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !2577, line: 1518, column: 39)
!3924 = distinct !DILexicalBlock(scope: !3919, file: !2577, line: 1518, column: 15)
!3925 = !DILocation(line: 1519, column: 17, scope: !3923)
!3926 = !DILocation(line: 1520, column: 4, scope: !3923)
!3927 = !DILocation(line: 1522, column: 4, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !2577, line: 1521, column: 47)
!3929 = distinct !DILexicalBlock(scope: !3895, file: !2577, line: 1521, column: 14)
!3930 = !DILocation(line: 1527, column: 19, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3928, file: !2577, line: 1522, column: 24)
!3932 = !DILocation(line: 1527, column: 17, scope: !3931)
!3933 = !DILocation(line: 1528, column: 5, scope: !3931)
!3934 = !DILocation(line: 0, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !2577, line: 1530, column: 9)
!3936 = !DILocation(line: 1540, column: 23, scope: !3931)
!3937 = !DILocation(line: 1539, column: 17, scope: !3931)
!3938 = !DILocation(line: 1542, column: 5, scope: !3931)
!3939 = !DILocation(line: 1545, column: 23, scope: !3931)
!3940 = !DILocation(line: 1544, column: 17, scope: !3931)
!3941 = !DILocation(line: 1547, column: 5, scope: !3931)
!3942 = !DILocation(line: 1551, column: 23, scope: !3931)
!3943 = !DILocation(line: 1551, column: 6, scope: !3931)
!3944 = !DILocation(line: 1550, column: 17, scope: !3931)
!3945 = !DILocation(line: 1552, column: 5, scope: !3931)
!3946 = !DILocation(line: 0, scope: !3931)
!3947 = !DILocation(line: 1554, column: 8, scope: !3928)
!3948 = !DILocation(line: 1555, column: 19, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !2577, line: 1554, column: 33)
!3950 = distinct !DILexicalBlock(scope: !3928, file: !2577, line: 1554, column: 8)
!3951 = !DILocation(line: 1555, column: 17, scope: !3949)
!3952 = !DILocation(line: 1556, column: 4, scope: !3949)
!3953 = !DILocation(line: 1557, column: 19, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !2577, line: 1556, column: 39)
!3955 = distinct !DILexicalBlock(scope: !3950, file: !2577, line: 1556, column: 15)
!3956 = !DILocation(line: 1557, column: 17, scope: !3954)
!3957 = !DILocation(line: 1558, column: 4, scope: !3954)
!3958 = !DILocation(line: 0, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !2577, line: 1560, column: 8)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !2577, line: 1559, column: 45)
!3961 = distinct !DILexicalBlock(scope: !3929, file: !2577, line: 1559, column: 14)
!3962 = !DILocation(line: 1566, column: 17, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !2577, line: 1565, column: 46)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !2577, line: 1565, column: 14)
!3965 = !DILocation(line: 1566, column: 15, scope: !3963)
!3966 = !DILocation(line: 1567, column: 3, scope: !3963)
!3967 = !DILocation(line: 1574, column: 21, scope: !3796)
!3968 = !DILocation(line: 1575, column: 4, scope: !3794)
!3969 = !DILocation(line: 0, scope: !3794)
!3970 = !DILocation(line: 1575, column: 4, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3794, file: !2577, line: 1575, column: 4)
!3972 = !DILocation(line: 1582, column: 17, scope: !3730)
!3973 = !DILocation(line: 1582, column: 3, scope: !3730)
!3974 = !DILocation(line: 1584, column: 4, scope: !3798)
!3975 = !DILocation(line: 0, scope: !3798)
!3976 = !DILocation(line: 1584, column: 4, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3798, file: !2577, line: 1584, column: 4)
!3978 = !DILocation(line: 1587, column: 31, scope: !3801)
!3979 = !DILocation(line: 1591, column: 18, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3801, file: !2577, line: 1591, column: 8)
!3981 = !DILocation(line: 1591, column: 8, scope: !3801)
!3982 = !DILocation(line: 1592, column: 11, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3980, file: !2577, line: 1591, column: 24)
!3984 = !DILocation(line: 0, scope: !3801)
!3985 = !DILocation(line: 1593, column: 4, scope: !3983)
!3986 = !DILocation(line: 1594, column: 11, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3980, file: !2577, line: 1593, column: 11)
!3988 = !DILocation(line: 1604, column: 51, scope: !3799)
!3989 = !DILocation(line: 1604, column: 13, scope: !3799)
!3990 = !DILocation(line: 1604, column: 11, scope: !3799)
!3991 = !DILocation(line: 1606, column: 4, scope: !3799)
!3992 = !DILocation(line: 1609, column: 14, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1609, column: 8)
!3994 = !DILocation(line: 1609, column: 8, scope: !3799)
!3995 = !DILocation(line: 1619, column: 18, scope: !3799)
!3996 = !DILocation(line: 1620, column: 13, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1620, column: 8)
!3998 = !DILocation(line: 1620, column: 8, scope: !3799)
!3999 = !DILocation(line: 1622, column: 36, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3997, file: !2577, line: 1620, column: 18)
!4001 = !DILocation(line: 1622, column: 17, scope: !4000)
!4002 = !DILocation(line: 1623, column: 4, scope: !4000)
!4003 = !DILocation(line: 1632, column: 29, scope: !3799)
!4004 = !DILocation(line: 1632, column: 10, scope: !3799)
!4005 = !DILocation(line: 1632, column: 4, scope: !3799)
!4006 = !DILocation(line: 1407, column: 8, scope: !3730)
!4007 = !DILocation(line: 0, scope: !3799)
!4008 = !DILocation(line: 1634, column: 3, scope: !3799)
!4009 = !DILocation(line: 1640, column: 18, scope: !3804)
!4010 = !DILocation(line: 1640, column: 8, scope: !3799)
!4011 = !DILocation(line: 1729, column: 13, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1729, column: 7)
!4013 = !DILocation(line: 1641, column: 22, scope: !3803)
!4014 = !DILocation(line: 0, scope: !3803)
!4015 = !DILocation(line: 1646, column: 21, scope: !3803)
!4016 = !DILocation(line: 1649, column: 13, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3803, file: !2577, line: 1649, column: 9)
!4018 = !DILocation(line: 1649, column: 9, scope: !3803)
!4019 = !DILocation(line: 1650, column: 35, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4017, file: !2577, line: 1649, column: 34)
!4021 = !DILocation(line: 1650, column: 23, scope: !4020)
!4022 = !DILocation(line: 1651, column: 5, scope: !4020)
!4023 = !DILocation(line: 1660, column: 15, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1660, column: 8)
!4025 = !DILocation(line: 1660, column: 19, scope: !4024)
!4026 = !DILocation(line: 1660, column: 8, scope: !3799)
!4027 = !DILocation(line: 1661, column: 23, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4024, file: !2577, line: 1660, column: 28)
!4029 = !DILocation(line: 1661, column: 11, scope: !4028)
!4030 = !DILocation(line: 1665, column: 22, scope: !4028)
!4031 = !DILocation(line: 1666, column: 21, scope: !4028)
!4032 = !DILocation(line: 1668, column: 5, scope: !4028)
!4033 = !DILocation(line: 1677, column: 30, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !2577, line: 1676, column: 49)
!4035 = distinct !DILexicalBlock(scope: !3799, file: !2577, line: 1676, column: 8)
!4036 = !DILocation(line: 1677, column: 5, scope: !4034)
!4037 = !DILocation(line: 1680, column: 4, scope: !3799)
!4038 = !DILocation(line: 0, scope: !3980)
!4039 = !DILocation(line: 1597, column: 14, scope: !3801)
!4040 = !DILocation(line: 1699, column: 11, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1699, column: 7)
!4042 = !DILocation(line: 1699, column: 7, scope: !3730)
!4043 = !DILocation(line: 1725, column: 7, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1725, column: 7)
!4045 = !DILocation(line: 1725, column: 12, scope: !4044)
!4046 = !DILocation(line: 1747, column: 13, scope: !3811)
!4047 = !DILocation(line: 1747, column: 7, scope: !3730)
!4048 = !DILocation(line: 1722, column: 24, scope: !3730)
!4049 = !DILocation(line: 1725, column: 7, scope: !3730)
!4050 = !DILocation(line: 1729, column: 7, scope: !3730)
!4051 = !DILocation(line: 1736, column: 13, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3730, file: !2577, line: 1736, column: 7)
!4053 = !DILocation(line: 1735, column: 19, scope: !3730)
!4054 = !DILocation(line: 1736, column: 7, scope: !3730)
!4055 = !DILocation(line: 1748, column: 10, scope: !3810)
!4056 = !DILocation(line: 1750, column: 15, scope: !3809)
!4057 = !DILocation(line: 1750, column: 8, scope: !3810)
!4058 = !DILocation(line: 0, scope: !3808)
!4059 = !DILocation(line: 1756, column: 15, scope: !3817)
!4060 = !DILocation(line: 1756, column: 9, scope: !3808)
!4061 = !DILocation(line: 1758, column: 7, scope: !3813)
!4062 = !DILocation(line: 0, scope: !3813)
!4063 = !DILocation(line: 1758, column: 7, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !3813, file: !2577, line: 1758, column: 7)
!4065 = !DILocation(line: 1764, column: 5, scope: !3808)
!4066 = !DILocation(line: 0, scope: !3810)
!4067 = !DILocation(line: 1764, column: 20, scope: !3808)
!4068 = !DILocation(line: 1764, column: 17, scope: !3808)
!4069 = !DILocation(line: 1765, column: 6, scope: !3819)
!4070 = !DILocation(line: 0, scope: !3819)
!4071 = !DILocation(line: 1765, column: 6, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !3819, file: !2577, line: 1765, column: 6)
!4073 = distinct !{!4073, !4065, !4074}
!4074 = !DILocation(line: 1766, column: 5, scope: !3808)
!4075 = !DILocation(line: 1773, column: 12, scope: !3824)
!4076 = !DILocation(line: 1773, column: 7, scope: !3730)
!4077 = !DILocation(line: 1773, column: 7, scope: !3824)
!4078 = !DILocation(line: 1774, column: 4, scope: !3822)
!4079 = !DILocation(line: 0, scope: !3822)
!4080 = !DILocation(line: 1774, column: 4, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !3822, file: !2577, line: 1774, column: 4)
!4082 = !DILocation(line: 1818, column: 8, scope: !3828)
!4083 = !DILocation(line: 1818, column: 27, scope: !3828)
!4084 = !DILocation(line: 1818, column: 25, scope: !3828)
!4085 = !DILocation(line: 1818, column: 8, scope: !3829)
!4086 = !DILocation(line: 1819, column: 5, scope: !3826)
!4087 = !DILocation(line: 0, scope: !3826)
!4088 = !DILocation(line: 1819, column: 5, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !3826, file: !2577, line: 1819, column: 5)
!4090 = !DILocation(line: 1822, column: 14, scope: !3834)
!4091 = !DILocation(line: 1822, column: 8, scope: !3829)
!4092 = !DILocation(line: 1823, column: 5, scope: !3832)
!4093 = !DILocation(line: 0, scope: !3832)
!4094 = !DILocation(line: 1823, column: 5, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !3832, file: !2577, line: 1823, column: 5)
!4096 = !DILocation(line: 1826, column: 20, scope: !3829)
!4097 = !DILocation(line: 1827, column: 4, scope: !3829)
!4098 = !DILocation(line: 0, scope: !3829)
!4099 = !DILocation(line: 1827, column: 21, scope: !3829)
!4100 = !DILocation(line: 1827, column: 18, scope: !3829)
!4101 = !DILocation(line: 1828, column: 5, scope: !3836)
!4102 = !DILocation(line: 0, scope: !3836)
!4103 = !DILocation(line: 1828, column: 5, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !3836, file: !2577, line: 1828, column: 5)
!4105 = distinct !{!4105, !4097, !4106}
!4106 = !DILocation(line: 1829, column: 4, scope: !3829)
!4107 = !DILocation(line: 1831, column: 4, scope: !3839)
!4108 = !DILocation(line: 0, scope: !3839)
!4109 = !DILocation(line: 1831, column: 4, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !3839, file: !2577, line: 1831, column: 4)
!4111 = !DILocation(line: 1835, column: 16, scope: !3730)
!4112 = !DILocation(line: 1835, column: 3, scope: !3730)
!4113 = !DILocation(line: 1836, column: 4, scope: !3841)
!4114 = !DILocation(line: 0, scope: !3841)
!4115 = !DILocation(line: 1836, column: 4, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !3841, file: !2577, line: 1836, column: 4)
!4117 = !DILocation(line: 1837, column: 4, scope: !3842)
!4118 = distinct !{!4118, !4112, !4119}
!4119 = !DILocation(line: 1838, column: 3, scope: !3730)
!4120 = !DILocation(line: 1844, column: 1, scope: !3703)
!4121 = distinct !DISubprogram(name: "extract_conversion", scope: !2577, file: !2577, line: 642, type: !4122, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4124)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!157, !3778, !157}
!4124 = !{!4125, !4126}
!4125 = !DILocalVariable(name: "conv", arg: 1, scope: !4121, file: !2577, line: 642, type: !3778)
!4126 = !DILocalVariable(name: "sp", arg: 2, scope: !4121, file: !2577, line: 643, type: !157)
!4127 = !DILocation(line: 0, scope: !4121)
!4128 = !DILocation(line: 645, column: 10, scope: !4121)
!4129 = !DILocation(line: 653, column: 2, scope: !4121)
!4130 = !DILocation(line: 654, column: 6, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4121, file: !2577, line: 654, column: 6)
!4132 = !DILocation(line: 654, column: 10, scope: !4131)
!4133 = !DILocation(line: 654, column: 6, scope: !4121)
!4134 = !DILocation(line: 655, column: 24, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4131, file: !2577, line: 654, column: 18)
!4136 = !DILocation(line: 655, column: 19, scope: !4135)
!4137 = !DILocation(line: 656, column: 3, scope: !4135)
!4138 = !DILocation(line: 659, column: 7, scope: !4121)
!4139 = !DILocation(line: 660, column: 7, scope: !4121)
!4140 = !DILocation(line: 661, column: 7, scope: !4121)
!4141 = !DILocation(line: 662, column: 7, scope: !4121)
!4142 = !DILocation(line: 663, column: 7, scope: !4121)
!4143 = !DILocation(line: 665, column: 2, scope: !4121)
!4144 = !DILocation(line: 666, column: 1, scope: !4121)
!4145 = distinct !DISubprogram(name: "outs", scope: !2577, file: !2577, line: 1319, type: !4146, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4148)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!103, !3434, !102, !157, !157}
!4148 = !{!4149, !4150, !4151, !4152, !4153, !4154}
!4149 = !DILocalVariable(name: "out", arg: 1, scope: !4145, file: !2577, line: 1319, type: !3434)
!4150 = !DILocalVariable(name: "ctx", arg: 2, scope: !4145, file: !2577, line: 1320, type: !102)
!4151 = !DILocalVariable(name: "sp", arg: 3, scope: !4145, file: !2577, line: 1321, type: !157)
!4152 = !DILocalVariable(name: "ep", arg: 4, scope: !4145, file: !2577, line: 1322, type: !157)
!4153 = !DILocalVariable(name: "count", scope: !4145, file: !2577, line: 1324, type: !213)
!4154 = !DILocalVariable(name: "rc", scope: !4155, file: !2577, line: 1327, type: !103)
!4155 = distinct !DILexicalBlock(scope: !4145, file: !2577, line: 1326, column: 45)
!4156 = !DILocation(line: 0, scope: !4145)
!4157 = !DILocation(line: 1326, column: 2, scope: !4145)
!4158 = !DILocation(line: 1324, column: 9, scope: !4145)
!4159 = !DILocation(line: 1326, column: 13, scope: !4145)
!4160 = !DILocation(line: 1326, column: 19, scope: !4145)
!4161 = !DILocation(line: 1327, column: 21, scope: !4155)
!4162 = !DILocation(line: 1326, column: 36, scope: !4145)
!4163 = !DILocation(line: 1326, column: 39, scope: !4145)
!4164 = !DILocation(line: 1327, column: 24, scope: !4155)
!4165 = !DILocation(line: 1327, column: 16, scope: !4155)
!4166 = !DILocation(line: 1327, column: 12, scope: !4155)
!4167 = !DILocation(line: 0, scope: !4155)
!4168 = !DILocation(line: 1329, column: 10, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4155, file: !2577, line: 1329, column: 7)
!4170 = !DILocation(line: 1329, column: 7, scope: !4155)
!4171 = distinct !{!4171, !4157, !4172}
!4172 = !DILocation(line: 1333, column: 2, scope: !4145)
!4173 = !DILocation(line: 1336, column: 1, scope: !4145)
!4174 = distinct !DISubprogram(name: "encode_uint", scope: !2577, file: !2577, line: 788, type: !4175, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4177)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!1019, !2599, !3778, !1019, !157}
!4177 = !{!4178, !4179, !4180, !4181, !4182, !4183, !4185, !4186}
!4178 = !DILocalVariable(name: "value", arg: 1, scope: !4174, file: !2577, line: 788, type: !2599)
!4179 = !DILocalVariable(name: "conv", arg: 2, scope: !4174, file: !2577, line: 789, type: !3778)
!4180 = !DILocalVariable(name: "bps", arg: 3, scope: !4174, file: !2577, line: 790, type: !1019)
!4181 = !DILocalVariable(name: "bpe", arg: 4, scope: !4174, file: !2577, line: 791, type: !157)
!4182 = !DILocalVariable(name: "upcase", scope: !4174, file: !2577, line: 793, type: !170)
!4183 = !DILocalVariable(name: "radix", scope: !4174, file: !2577, line: 794, type: !4184)
!4184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4185 = !DILocalVariable(name: "bp", scope: !4174, file: !2577, line: 795, type: !1019)
!4186 = !DILocalVariable(name: "lsv", scope: !4187, file: !2577, line: 798, type: !32)
!4187 = distinct !DILexicalBlock(scope: !4174, file: !2577, line: 797, column: 5)
!4188 = !DILocation(line: 0, scope: !4174)
!4189 = !DILocation(line: 793, column: 35, scope: !4174)
!4190 = !DILocation(line: 793, column: 24, scope: !4174)
!4191 = !DILocation(line: 793, column: 16, scope: !4174)
!4192 = !DILocation(line: 794, column: 29, scope: !4174)
!4193 = !DILocation(line: 795, column: 24, scope: !4174)
!4194 = !DILocation(line: 795, column: 17, scope: !4174)
!4195 = !DILocation(line: 797, column: 2, scope: !4174)
!4196 = !DILocation(line: 802, column: 9, scope: !4187)
!4197 = !DILocation(line: 798, column: 22, scope: !4187)
!4198 = !DILocation(line: 0, scope: !4187)
!4199 = !DILocation(line: 800, column: 16, scope: !4187)
!4200 = !DILocation(line: 800, column: 11, scope: !4187)
!4201 = !DILocation(line: 800, column: 4, scope: !4187)
!4202 = !DILocation(line: 800, column: 9, scope: !4187)
!4203 = !DILocation(line: 803, column: 18, scope: !4174)
!4204 = !DILocation(line: 803, column: 24, scope: !4174)
!4205 = !DILocation(line: 803, column: 2, scope: !4187)
!4206 = distinct !{!4206, !4195, !4207}
!4207 = !DILocation(line: 803, column: 37, scope: !4174)
!4208 = !DILocation(line: 808, column: 12, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4174, file: !2577, line: 808, column: 6)
!4210 = !DILocation(line: 808, column: 6, scope: !4174)
!4211 = !DILocation(line: 809, column: 7, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4209, file: !2577, line: 808, column: 23)
!4213 = !DILocation(line: 813, column: 3, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !2577, line: 811, column: 27)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !2577, line: 811, column: 14)
!4216 = distinct !DILexicalBlock(scope: !4212, file: !2577, line: 809, column: 7)
!4217 = !DILocation(line: 0, scope: !4216)
!4218 = !DILocation(line: 818, column: 2, scope: !4174)
!4219 = distinct !DISubprogram(name: "store_count", scope: !2577, file: !2577, line: 1280, type: !4220, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4224)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{null, !4222, !102, !103}
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 32)
!4223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3745)
!4224 = !{!4225, !4226, !4227}
!4225 = !DILocalVariable(name: "conv", arg: 1, scope: !4219, file: !2577, line: 1280, type: !4222)
!4226 = !DILocalVariable(name: "dp", arg: 2, scope: !4219, file: !2577, line: 1281, type: !102)
!4227 = !DILocalVariable(name: "count", arg: 3, scope: !4219, file: !2577, line: 1282, type: !103)
!4228 = !DILocation(line: 0, scope: !4219)
!4229 = !DILocation(line: 1284, column: 38, scope: !4219)
!4230 = !DILocation(line: 1284, column: 2, scope: !4219)
!4231 = !DILocation(line: 1286, column: 4, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4219, file: !2577, line: 1284, column: 50)
!4233 = !DILocation(line: 1286, column: 14, scope: !4232)
!4234 = !DILocation(line: 1287, column: 3, scope: !4232)
!4235 = !DILocation(line: 1289, column: 24, scope: !4232)
!4236 = !DILocation(line: 1289, column: 22, scope: !4232)
!4237 = !DILocation(line: 1290, column: 3, scope: !4232)
!4238 = !DILocation(line: 1292, column: 18, scope: !4232)
!4239 = !DILocation(line: 1292, column: 4, scope: !4232)
!4240 = !DILocation(line: 1292, column: 16, scope: !4232)
!4241 = !DILocation(line: 1293, column: 3, scope: !4232)
!4242 = !DILocation(line: 1295, column: 4, scope: !4232)
!4243 = !DILocation(line: 1295, column: 15, scope: !4232)
!4244 = !DILocation(line: 1296, column: 3, scope: !4232)
!4245 = !DILocation(line: 1298, column: 22, scope: !4232)
!4246 = !DILocation(line: 1298, column: 4, scope: !4232)
!4247 = !DILocation(line: 1298, column: 20, scope: !4232)
!4248 = !DILocation(line: 1299, column: 3, scope: !4232)
!4249 = !DILocation(line: 1301, column: 21, scope: !4232)
!4250 = !DILocation(line: 1301, column: 4, scope: !4232)
!4251 = !DILocation(line: 1301, column: 19, scope: !4232)
!4252 = !DILocation(line: 1302, column: 3, scope: !4232)
!4253 = !DILocation(line: 1304, column: 4, scope: !4232)
!4254 = !DILocation(line: 1304, column: 17, scope: !4232)
!4255 = !DILocation(line: 1305, column: 3, scope: !4232)
!4256 = !DILocation(line: 1307, column: 4, scope: !4232)
!4257 = !DILocation(line: 1307, column: 20, scope: !4232)
!4258 = !DILocation(line: 1308, column: 3, scope: !4232)
!4259 = !DILocation(line: 1316, column: 1, scope: !4219)
!4260 = distinct !DISubprogram(name: "isupper", scope: !4261, file: !4261, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4262)
!4261 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4262 = !{!4263}
!4263 = !DILocalVariable(name: "a", arg: 1, scope: !4260, file: !4261, line: 16, type: !103)
!4264 = !DILocation(line: 0, scope: !4260)
!4265 = !DILocation(line: 18, column: 29, scope: !4260)
!4266 = !DILocation(line: 18, column: 45, scope: !4260)
!4267 = !DILocation(line: 18, column: 2, scope: !4260)
!4268 = distinct !DISubprogram(name: "conversion_radix", scope: !2577, file: !2577, line: 761, type: !4269, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4271)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!213, !159}
!4271 = !{!4272}
!4272 = !DILocalVariable(name: "specifier", arg: 1, scope: !4268, file: !2577, line: 761, type: !159)
!4273 = !DILocation(line: 0, scope: !4268)
!4274 = !DILocation(line: 763, column: 2, scope: !4268)
!4275 = !DILocation(line: 770, column: 3, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4268, file: !2577, line: 763, column: 21)
!4277 = !DILocation(line: 774, column: 3, scope: !4276)
!4278 = !DILocation(line: 0, scope: !4276)
!4279 = !DILocation(line: 776, column: 1, scope: !4268)
!4280 = distinct !DISubprogram(name: "extract_flags", scope: !2577, file: !2577, line: 339, type: !4122, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4281)
!4281 = !{!4282, !4283, !4284}
!4282 = !DILocalVariable(name: "conv", arg: 1, scope: !4280, file: !2577, line: 339, type: !3778)
!4283 = !DILocalVariable(name: "sp", arg: 2, scope: !4280, file: !2577, line: 340, type: !157)
!4284 = !DILocalVariable(name: "loop", scope: !4280, file: !2577, line: 342, type: !170)
!4285 = !DILocation(line: 0, scope: !4280)
!4286 = !DILocation(line: 344, column: 2, scope: !4280)
!4287 = !DILocation(line: 345, column: 11, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4280, file: !2577, line: 344, column: 5)
!4289 = !DILocation(line: 345, column: 3, scope: !4288)
!4290 = !DILocation(line: 351, column: 4, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4288, file: !2577, line: 345, column: 16)
!4292 = !DILocation(line: 354, column: 4, scope: !4291)
!4293 = !DILocation(line: 357, column: 4, scope: !4291)
!4294 = !DILocation(line: 360, column: 4, scope: !4291)
!4295 = !DILocation(line: 0, scope: !4291)
!4296 = !DILocation(line: 370, column: 12, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4280, file: !2577, line: 370, column: 6)
!4298 = !DILocation(line: 370, column: 22, scope: !4297)
!4299 = !DILocation(line: 371, column: 19, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4297, file: !2577, line: 370, column: 42)
!4301 = !DILocation(line: 372, column: 2, scope: !4300)
!4302 = !DILocation(line: 376, column: 2, scope: !4280)
!4303 = distinct !DISubprogram(name: "extract_width", scope: !2577, file: !2577, line: 388, type: !4122, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4304)
!4304 = !{!4305, !4306, !4307, !4308}
!4305 = !DILocalVariable(name: "conv", arg: 1, scope: !4303, file: !2577, line: 388, type: !3778)
!4306 = !DILocalVariable(name: "sp", arg: 2, scope: !4303, file: !2577, line: 389, type: !157)
!4307 = !DILocalVariable(name: "wp", scope: !4303, file: !2577, line: 398, type: !157)
!4308 = !DILocalVariable(name: "width", scope: !4303, file: !2577, line: 399, type: !213)
!4309 = !DILocation(line: 0, scope: !4303)
!4310 = !DILocation(line: 391, column: 8, scope: !4303)
!4311 = !DILocation(line: 391, column: 22, scope: !4303)
!4312 = !DILocation(line: 393, column: 6, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4303, file: !2577, line: 393, column: 6)
!4314 = !DILocation(line: 393, column: 10, scope: !4313)
!4315 = !DILocation(line: 393, column: 6, scope: !4303)
!4316 = !DILocation(line: 394, column: 20, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4313, file: !2577, line: 393, column: 18)
!4318 = !DILocation(line: 395, column: 10, scope: !4317)
!4319 = !DILocation(line: 395, column: 3, scope: !4317)
!4320 = !DILocation(line: 399, column: 17, scope: !4303)
!4321 = !DILocation(line: 401, column: 6, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4303, file: !2577, line: 401, column: 6)
!4323 = !DILocation(line: 401, column: 9, scope: !4322)
!4324 = !DILocation(line: 401, column: 6, scope: !4303)
!4325 = !DILocation(line: 402, column: 23, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !2577, line: 401, column: 16)
!4327 = !DILocation(line: 403, column: 9, scope: !4326)
!4328 = !DILocation(line: 403, column: 21, scope: !4326)
!4329 = !DILocation(line: 405, column: 11, scope: !4326)
!4330 = !DILocation(line: 404, column: 21, scope: !4326)
!4331 = !DILocation(line: 406, column: 2, scope: !4326)
!4332 = !DILocation(line: 409, column: 1, scope: !4303)
!4333 = distinct !DISubprogram(name: "extract_prec", scope: !2577, file: !2577, line: 420, type: !4122, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4334)
!4334 = !{!4335, !4336, !4337}
!4335 = !DILocalVariable(name: "conv", arg: 1, scope: !4333, file: !2577, line: 420, type: !3778)
!4336 = !DILocalVariable(name: "sp", arg: 2, scope: !4333, file: !2577, line: 421, type: !157)
!4337 = !DILocalVariable(name: "prec", scope: !4333, file: !2577, line: 435, type: !213)
!4338 = !DILocation(line: 0, scope: !4333)
!4339 = !DILocation(line: 423, column: 24, scope: !4333)
!4340 = !DILocation(line: 423, column: 28, scope: !4333)
!4341 = !DILocation(line: 423, column: 8, scope: !4333)
!4342 = !DILocation(line: 423, column: 21, scope: !4333)
!4343 = !DILocation(line: 425, column: 6, scope: !4333)
!4344 = !DILocation(line: 428, column: 2, scope: !4333)
!4345 = !DILocation(line: 430, column: 6, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4333, file: !2577, line: 430, column: 6)
!4347 = !DILocation(line: 430, column: 10, scope: !4346)
!4348 = !DILocation(line: 430, column: 6, scope: !4333)
!4349 = !DILocation(line: 431, column: 19, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4346, file: !2577, line: 430, column: 18)
!4351 = !DILocation(line: 432, column: 10, scope: !4350)
!4352 = !DILocation(line: 432, column: 3, scope: !4350)
!4353 = !DILocation(line: 435, column: 16, scope: !4333)
!4354 = !DILocation(line: 437, column: 8, scope: !4333)
!4355 = !DILocation(line: 437, column: 19, scope: !4333)
!4356 = !DILocation(line: 439, column: 10, scope: !4333)
!4357 = !DILocation(line: 438, column: 20, scope: !4333)
!4358 = !DILocation(line: 441, column: 9, scope: !4333)
!4359 = !DILocation(line: 442, column: 1, scope: !4333)
!4360 = distinct !DISubprogram(name: "extract_length", scope: !2577, file: !2577, line: 453, type: !4122, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4361)
!4361 = !{!4362, !4363}
!4362 = !DILocalVariable(name: "conv", arg: 1, scope: !4360, file: !2577, line: 453, type: !3778)
!4363 = !DILocalVariable(name: "sp", arg: 2, scope: !4360, file: !2577, line: 454, type: !157)
!4364 = !DILocation(line: 0, scope: !4360)
!4365 = !DILocation(line: 456, column: 10, scope: !4360)
!4366 = !DILocation(line: 456, column: 2, scope: !4360)
!4367 = !DILocation(line: 458, column: 8, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !2577, line: 458, column: 7)
!4369 = distinct !DILexicalBlock(scope: !4360, file: !2577, line: 456, column: 15)
!4370 = !DILocation(line: 458, column: 7, scope: !4368)
!4371 = !DILocation(line: 458, column: 13, scope: !4368)
!4372 = !DILocation(line: 0, scope: !4368)
!4373 = !DILocation(line: 458, column: 7, scope: !4369)
!4374 = !DILocation(line: 459, column: 21, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4368, file: !2577, line: 458, column: 21)
!4376 = !DILocation(line: 460, column: 4, scope: !4375)
!4377 = !DILocation(line: 461, column: 3, scope: !4375)
!4378 = !DILocation(line: 462, column: 21, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4368, file: !2577, line: 461, column: 10)
!4380 = !DILocation(line: 466, column: 8, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4369, file: !2577, line: 466, column: 7)
!4382 = !DILocation(line: 466, column: 7, scope: !4381)
!4383 = !DILocation(line: 466, column: 13, scope: !4381)
!4384 = !DILocation(line: 0, scope: !4381)
!4385 = !DILocation(line: 466, column: 7, scope: !4369)
!4386 = !DILocation(line: 467, column: 21, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4381, file: !2577, line: 466, column: 21)
!4388 = !DILocation(line: 468, column: 4, scope: !4387)
!4389 = !DILocation(line: 469, column: 3, scope: !4387)
!4390 = !DILocation(line: 470, column: 21, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4381, file: !2577, line: 469, column: 10)
!4392 = !DILocation(line: 474, column: 9, scope: !4369)
!4393 = !DILocation(line: 474, column: 20, scope: !4369)
!4394 = !DILocation(line: 475, column: 3, scope: !4369)
!4395 = !DILocation(line: 476, column: 3, scope: !4369)
!4396 = !DILocation(line: 478, column: 9, scope: !4369)
!4397 = !DILocation(line: 478, column: 20, scope: !4369)
!4398 = !DILocation(line: 479, column: 3, scope: !4369)
!4399 = !DILocation(line: 480, column: 3, scope: !4369)
!4400 = !DILocation(line: 482, column: 9, scope: !4369)
!4401 = !DILocation(line: 482, column: 20, scope: !4369)
!4402 = !DILocation(line: 483, column: 3, scope: !4369)
!4403 = !DILocation(line: 484, column: 3, scope: !4369)
!4404 = !DILocation(line: 486, column: 9, scope: !4369)
!4405 = !DILocation(line: 486, column: 20, scope: !4369)
!4406 = !DILocation(line: 487, column: 3, scope: !4369)
!4407 = !DILocation(line: 492, column: 21, scope: !4369)
!4408 = !DILocation(line: 493, column: 3, scope: !4369)
!4409 = !DILocation(line: 495, column: 9, scope: !4369)
!4410 = !DILocation(line: 495, column: 20, scope: !4369)
!4411 = !DILocation(line: 496, column: 3, scope: !4369)
!4412 = !DILocation(line: 498, column: 2, scope: !4360)
!4413 = distinct !DISubprogram(name: "extract_specifier", scope: !2577, file: !2577, line: 513, type: !4122, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4414)
!4414 = !{!4415, !4416, !4417, !4418}
!4415 = !DILocalVariable(name: "conv", arg: 1, scope: !4413, file: !2577, line: 513, type: !3778)
!4416 = !DILocalVariable(name: "sp", arg: 2, scope: !4413, file: !2577, line: 514, type: !157)
!4417 = !DILocalVariable(name: "unsupported", scope: !4413, file: !2577, line: 516, type: !170)
!4418 = !DILabel(scope: !4419, name: "int_conv", file: !2577, line: 526)
!4419 = distinct !DILexicalBlock(scope: !4413, file: !2577, line: 520, column: 27)
!4420 = !DILocation(line: 0, scope: !4413)
!4421 = !DILocation(line: 518, column: 20, scope: !4413)
!4422 = !DILocation(line: 518, column: 8, scope: !4413)
!4423 = !DILocation(line: 518, column: 18, scope: !4413)
!4424 = !DILocation(line: 520, column: 2, scope: !4413)
!4425 = !DILocation(line: 525, column: 3, scope: !4419)
!4426 = !DILocation(line: 0, scope: !4419)
!4427 = !DILocation(line: 526, column: 1, scope: !4419)
!4428 = !DILocation(line: 528, column: 24, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4419, file: !2577, line: 528, column: 7)
!4430 = !DILocation(line: 528, column: 7, scope: !4419)
!4431 = !DILocation(line: 535, column: 23, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4419, file: !2577, line: 535, column: 7)
!4433 = !DILocation(line: 535, column: 7, scope: !4419)
!4434 = !DILocation(line: 536, column: 36, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4432, file: !2577, line: 535, column: 31)
!4436 = !DILocation(line: 537, column: 3, scope: !4435)
!4437 = !DILocation(line: 570, column: 9, scope: !4419)
!4438 = !DILocation(line: 570, column: 23, scope: !4419)
!4439 = !DILocation(line: 575, column: 4, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4441, file: !2577, line: 573, column: 48)
!4441 = distinct !DILexicalBlock(scope: !4419, file: !2577, line: 573, column: 7)
!4442 = !DILocation(line: 603, column: 9, scope: !4419)
!4443 = !DILocation(line: 603, column: 23, scope: !4419)
!4444 = !DILocation(line: 605, column: 24, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4419, file: !2577, line: 605, column: 7)
!4446 = !DILocation(line: 605, column: 7, scope: !4419)
!4447 = !DILocation(line: 612, column: 9, scope: !4419)
!4448 = !DILocation(line: 612, column: 23, scope: !4419)
!4449 = !DILocation(line: 619, column: 24, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4419, file: !2577, line: 619, column: 7)
!4451 = !DILocation(line: 619, column: 7, scope: !4419)
!4452 = !DILocation(line: 625, column: 9, scope: !4419)
!4453 = !DILocation(line: 625, column: 17, scope: !4419)
!4454 = !DILocation(line: 626, column: 3, scope: !4419)
!4455 = !DILocation(line: 629, column: 20, scope: !4413)
!4456 = !DILocation(line: 629, column: 8, scope: !4413)
!4457 = !DILocation(line: 518, column: 23, scope: !4413)
!4458 = !DILocation(line: 631, column: 2, scope: !4413)
!4459 = distinct !DISubprogram(name: "extract_decimal", scope: !2577, file: !2577, line: 318, type: !4460, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4463)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{!213, !4462}
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!4463 = !{!4464, !4465, !4466}
!4464 = !DILocalVariable(name: "str", arg: 1, scope: !4459, file: !2577, line: 318, type: !4462)
!4465 = !DILocalVariable(name: "sp", scope: !4459, file: !2577, line: 320, type: !157)
!4466 = !DILocalVariable(name: "val", scope: !4459, file: !2577, line: 321, type: !213)
!4467 = !DILocation(line: 0, scope: !4459)
!4468 = !DILocation(line: 320, column: 19, scope: !4459)
!4469 = !DILocation(line: 323, column: 37, scope: !4459)
!4470 = !DILocation(line: 323, column: 17, scope: !4459)
!4471 = !DILocation(line: 323, column: 9, scope: !4459)
!4472 = !DILocation(line: 323, column: 2, scope: !4459)
!4473 = !DILocation(line: 324, column: 13, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4459, file: !2577, line: 323, column: 43)
!4475 = !DILocation(line: 324, column: 24, scope: !4474)
!4476 = !DILocation(line: 324, column: 19, scope: !4474)
!4477 = !DILocation(line: 324, column: 27, scope: !4474)
!4478 = distinct !{!4478, !4472, !4479}
!4479 = !DILocation(line: 325, column: 2, scope: !4459)
!4480 = !DILocation(line: 326, column: 7, scope: !4459)
!4481 = !DILocation(line: 327, column: 2, scope: !4459)
!4482 = distinct !DISubprogram(name: "isdigit", scope: !4261, file: !4261, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4483)
!4483 = !{!4484}
!4484 = !DILocalVariable(name: "a", arg: 1, scope: !4482, file: !4261, line: 43, type: !103)
!4485 = !DILocation(line: 0, scope: !4482)
!4486 = !DILocation(line: 45, column: 29, scope: !4482)
!4487 = !DILocation(line: 45, column: 45, scope: !4482)
!4488 = !DILocation(line: 45, column: 2, scope: !4482)
!4489 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4490, file: !4490, line: 9, type: !3124, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2610, retainedNodes: !335)
!4490 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!4491 = !DILocation(line: 11, column: 1, scope: !4489)
!4492 = !{i64 2147560847, i64 2147560890, i64 2147560930}
!4493 = !DILocation(line: 12, column: 1, scope: !4489)
!4494 = !{i64 2147565074, i64 2147565117, i64 2147565157}
!4495 = !DILocation(line: 13, column: 1, scope: !4489)
!4496 = !{i64 2147565283, i64 2147565326, i64 2147565366}
!4497 = !DILocation(line: 14, column: 1, scope: !4489)
!4498 = !{i64 2147565498, i64 2147565541, i64 2147565581}
!4499 = !DILocation(line: 15, column: 1, scope: !4489)
!4500 = !{i64 2147565667, i64 2147565710, i64 2147565750}
!4501 = !DILocation(line: 16, column: 1, scope: !4489)
!4502 = !{i64 2147565830, i64 2147565873, i64 2147565913}
!4503 = !DILocation(line: 17, column: 1, scope: !4489)
!4504 = !{i64 2147566014, i64 2147566057, i64 2147566097}
!4505 = !DILocation(line: 18, column: 1, scope: !4489)
!4506 = !{i64 2147566193, i64 2147566236, i64 2147566276}
!4507 = !DILocation(line: 19, column: 1, scope: !4489)
!4508 = !{i64 2147566435, i64 2147566478, i64 2147566518}
!4509 = !DILocation(line: 20, column: 1, scope: !4489)
!4510 = !{i64 2147566670, i64 2147566713, i64 2147566753}
!4511 = !DILocation(line: 21, column: 1, scope: !4489)
!4512 = !{i64 2147566856, i64 2147566899, i64 2147566939}
!4513 = !DILocation(line: 22, column: 1, scope: !4489)
!4514 = !{i64 2147567072, i64 2147567115, i64 2147567155}
!4515 = !DILocation(line: 23, column: 1, scope: !4489)
!4516 = !{i64 2147567275, i64 2147567318, i64 2147567358}
!4517 = !DILocation(line: 24, column: 1, scope: !4489)
!4518 = !{i64 2147567478, i64 2147567521, i64 2147567561}
!4519 = !DILocation(line: 25, column: 1, scope: !4489)
!4520 = !{i64 2147567653, i64 2147567696, i64 2147567736}
!4521 = !DILocation(line: 26, column: 1, scope: !4489)
!4522 = !{i64 2147567861, i64 2147567904, i64 2147567944}
!4523 = !DILocation(line: 27, column: 1, scope: !4489)
!4524 = !{i64 2147568065, i64 2147568108, i64 2147568148}
!4525 = !DILocation(line: 28, column: 1, scope: !4489)
!4526 = !{i64 2147568258, i64 2147568301, i64 2147568341}
!4527 = !DILocation(line: 29, column: 1, scope: !4489)
!4528 = !{i64 2147568460, i64 2147568503, i64 2147568543}
!4529 = !DILocation(line: 30, column: 1, scope: !4489)
!4530 = !{i64 2147568687, i64 2147568730, i64 2147568770}
!4531 = !DILocation(line: 31, column: 1, scope: !4489)
!4532 = !{i64 2147568889, i64 2147568932, i64 2147568972}
!4533 = !DILocation(line: 32, column: 1, scope: !4489)
!4534 = !{i64 2147569104, i64 2147569147, i64 2147569187}
!4535 = !DILocation(line: 33, column: 1, scope: !4489)
!4536 = !{i64 2147569276, i64 2147569319, i64 2147569359}
!4537 = !DILocation(line: 34, column: 1, scope: !4489)
!4538 = !{i64 2147569478, i64 2147569521, i64 2147569561}
!4539 = !DILocation(line: 35, column: 1, scope: !4489)
!4540 = !{i64 2147569704, i64 2147569747, i64 2147569787}
!4541 = !DILocation(line: 36, column: 1, scope: !4489)
!4542 = !{i64 2147569903, i64 2147569946, i64 2147569986}
!4543 = !DILocation(line: 37, column: 1, scope: !4489)
!4544 = !{i64 2147570078, i64 2147570121, i64 2147570161}
!4545 = !DILocation(line: 38, column: 1, scope: !4489)
!4546 = !{i64 2147570331, i64 2147570374, i64 2147570414}
!4547 = !DILocation(line: 39, column: 1, scope: !4489)
!4548 = !{i64 2147570569, i64 2147570612, i64 2147570652}
!4549 = !DILocation(line: 40, column: 1, scope: !4489)
!4550 = !{i64 2147570804, i64 2147570847, i64 2147570887}
!4551 = !DILocation(line: 41, column: 1, scope: !4489)
!4552 = !{i64 2147571036, i64 2147571079, i64 2147571119}
!4553 = !DILocation(line: 42, column: 1, scope: !4489)
!4554 = !{i64 2147571262, i64 2147571305, i64 2147571345}
!4555 = !DILocation(line: 43, column: 1, scope: !4489)
!4556 = !{i64 2147571521, i64 2147571564, i64 2147571604}
!4557 = !DILocation(line: 44, column: 1, scope: !4489)
!4558 = !{i64 2147571747, i64 2147571790, i64 2147571830}
!4559 = !DILocation(line: 45, column: 1, scope: !4489)
!4560 = !{i64 2147571988, i64 2147572031, i64 2147572071}
!4561 = !DILocation(line: 46, column: 1, scope: !4489)
!4562 = !{i64 2147572232, i64 2147572275, i64 2147572315}
!4563 = !DILocation(line: 47, column: 1, scope: !4489)
!4564 = !{i64 2147572473, i64 2147572516, i64 2147572556}
!4565 = !DILocation(line: 48, column: 1, scope: !4489)
!4566 = !{i64 2147572708, i64 2147572751, i64 2147572791}
!4567 = !DILocation(line: 49, column: 1, scope: !4489)
!4568 = !{i64 2147572934, i64 2147572977, i64 2147573017}
!4569 = !DILocation(line: 50, column: 1, scope: !4489)
!4570 = !{i64 2147573160, i64 2147573203, i64 2147573243}
!4571 = !DILocation(line: 51, column: 1, scope: !4489)
!4572 = !{i64 2147573404, i64 2147573447, i64 2147573487}
!4573 = !DILocation(line: 52, column: 1, scope: !4489)
!4574 = !{i64 2147573642, i64 2147573685, i64 2147573725}
!4575 = !DILocation(line: 53, column: 1, scope: !4489)
!4576 = !{i64 2147577977, i64 2147578020, i64 2147578060}
!4577 = !DILocation(line: 54, column: 1, scope: !4489)
!4578 = !{i64 2147578215, i64 2147578258, i64 2147578298}
!4579 = !DILocation(line: 55, column: 1, scope: !4489)
!4580 = !{i64 2147578459, i64 2147578502, i64 2147578542}
!4581 = !DILocation(line: 56, column: 1, scope: !4489)
!4582 = !{i64 2147578709, i64 2147578752, i64 2147578792}
!4583 = !DILocation(line: 57, column: 1, scope: !4489)
!4584 = !{i64 2147578956, i64 2147578999, i64 2147579039}
!4585 = !DILocation(line: 58, column: 1, scope: !4489)
!4586 = !{i64 2147579191, i64 2147579234, i64 2147579274}
!4587 = !DILocation(line: 59, column: 1, scope: !4489)
!4588 = !{i64 2147579426, i64 2147579469, i64 2147579509}
!4589 = !DILocation(line: 60, column: 1, scope: !4489)
!4590 = !{i64 2147579661, i64 2147579704, i64 2147579744}
!4591 = !DILocation(line: 61, column: 1, scope: !4489)
!4592 = !{i64 2147579899, i64 2147579942, i64 2147579982}
!4593 = !DILocation(line: 62, column: 1, scope: !4489)
!4594 = !{i64 2147580140, i64 2147580183, i64 2147580223}
!4595 = !DILocation(line: 63, column: 1, scope: !4489)
!4596 = !{i64 2147580399, i64 2147580442, i64 2147580482}
!4597 = !DILocation(line: 64, column: 1, scope: !4489)
!4598 = !{i64 2147580679, i64 2147580722, i64 2147580762}
!4599 = !DILocation(line: 65, column: 1, scope: !4489)
!4600 = !{i64 2147580908, i64 2147580951, i64 2147580991}
!4601 = !DILocation(line: 66, column: 1, scope: !4489)
!4602 = !{i64 2147581116, i64 2147581159, i64 2147581199}
!4603 = !DILocation(line: 67, column: 1, scope: !4489)
!4604 = !{i64 2147581327, i64 2147581370, i64 2147581410}
!4605 = !DILocation(line: 68, column: 1, scope: !4489)
!4606 = !{i64 2147581562, i64 2147581605, i64 2147581645}
!4607 = !DILocation(line: 69, column: 1, scope: !4489)
!4608 = !{i64 2147581791, i64 2147581834, i64 2147581874}
!4609 = !DILocation(line: 70, column: 1, scope: !4489)
!4610 = !{i64 2147582029, i64 2147582072, i64 2147582112}
!4611 = !DILocation(line: 71, column: 1, scope: !4489)
!4612 = !{i64 2147582261, i64 2147582304, i64 2147582344}
!4613 = !DILocation(line: 72, column: 1, scope: !4489)
!4614 = !{i64 2147582487, i64 2147582530, i64 2147582570}
!4615 = !DILocation(line: 73, column: 1, scope: !4489)
!4616 = !{i64 2147582704, i64 2147582747, i64 2147582787}
!4617 = !DILocation(line: 74, column: 1, scope: !4489)
!4618 = !{i64 2147582936, i64 2147582979, i64 2147583019}
!4619 = !DILocation(line: 75, column: 1, scope: !4489)
!4620 = !{i64 2147583162, i64 2147583205, i64 2147583245}
!4621 = !DILocation(line: 76, column: 1, scope: !4489)
!4622 = !{i64 2147583376, i64 2147583419, i64 2147583459}
!4623 = !DILocation(line: 77, column: 1, scope: !4489)
!4624 = !{i64 2147583596, i64 2147583639, i64 2147583679}
!4625 = !DILocation(line: 78, column: 1, scope: !4489)
!4626 = !{i64 2147583828, i64 2147583871, i64 2147583911}
!4627 = !DILocation(line: 79, column: 1, scope: !4489)
!4628 = !{i64 2147584036, i64 2147584079, i64 2147584119}
!4629 = !DILocation(line: 80, column: 1, scope: !4489)
!4630 = !{i64 2147584241, i64 2147584284, i64 2147584324}
!4631 = !DILocation(line: 81, column: 1, scope: !4489)
!4632 = !{i64 2147584458, i64 2147584501, i64 2147584541}
!4633 = !DILocation(line: 82, column: 1, scope: !4489)
!4634 = !{i64 2147584672, i64 2147584715, i64 2147584755}
!4635 = !DILocation(line: 83, column: 1, scope: !4489)
!4636 = !{i64 2147584898, i64 2147584941, i64 2147584981}
!4637 = !DILocation(line: 84, column: 1, scope: !4489)
!4638 = !{i64 2147585118, i64 2147585161, i64 2147585201}
!4639 = !DILocation(line: 85, column: 1, scope: !4489)
!4640 = !{i64 2147585323, i64 2147585366, i64 2147585406}
!4641 = !DILocation(line: 86, column: 1, scope: !4489)
!4642 = !{i64 2147585555, i64 2147585598, i64 2147585638}
!4643 = !DILocation(line: 87, column: 1, scope: !4489)
!4644 = !{i64 2147585790, i64 2147585833, i64 2147585873}
!4645 = !DILocation(line: 88, column: 1, scope: !4489)
!4646 = !{i64 2147590101, i64 2147590144, i64 2147590184}
!4647 = !DILocation(line: 89, column: 1, scope: !4489)
!4648 = !{i64 2147590351, i64 2147590394, i64 2147590434}
!4649 = !DILocation(line: 90, column: 1, scope: !4489)
!4650 = !{i64 2147590589, i64 2147590632, i64 2147590672}
!4651 = !DILocation(line: 91, column: 1, scope: !4489)
!4652 = !{i64 2147590800, i64 2147590843, i64 2147590883}
!4653 = !DILocation(line: 92, column: 1, scope: !4489)
!4654 = !{i64 2147591017, i64 2147591060, i64 2147591100}
!4655 = !DILocation(line: 93, column: 1, scope: !4489)
!4656 = !{i64 2147591213, i64 2147591256, i64 2147591296}
!4657 = !DILocation(line: 94, column: 1, scope: !4489)
!4658 = !{i64 2147591415, i64 2147591458, i64 2147591498}
!4659 = !DILocation(line: 95, column: 1, scope: !4489)
!4660 = !{i64 2147591608, i64 2147591651, i64 2147591691}
!4661 = !DILocation(line: 96, column: 1, scope: !4489)
!4662 = !{i64 2147591819, i64 2147591862, i64 2147591902}
!4663 = !DILocation(line: 97, column: 1, scope: !4489)
!4664 = !{i64 2147592039, i64 2147592082, i64 2147592122}
!4665 = !DILocation(line: 98, column: 1, scope: !4489)
!4666 = !{i64 2147592247, i64 2147592290, i64 2147592330}
!4667 = !DILocation(line: 99, column: 1, scope: !4489)
!4668 = !{i64 2147592443, i64 2147592486, i64 2147592526}
!4669 = !DILocation(line: 100, column: 1, scope: !4489)
!4670 = !{i64 2147592648, i64 2147592691, i64 2147592731}
!4671 = !DILocation(line: 101, column: 1, scope: !4489)
!4672 = !{i64 2147592859, i64 2147592902, i64 2147592942}
!4673 = !DILocation(line: 102, column: 1, scope: !4489)
!4674 = !{i64 2147593058, i64 2147593101, i64 2147593141}
!4675 = !DILocation(line: 103, column: 1, scope: !4489)
!4676 = !{i64 2147593233, i64 2147593276, i64 2147593316}
!4677 = !DILocation(line: 104, column: 1, scope: !4489)
!4678 = !{i64 2147593417, i64 2147593460, i64 2147593500}
!4679 = !DILocation(line: 105, column: 1, scope: !4489)
!4680 = !{i64 2147593619, i64 2147593662, i64 2147593702}
!4681 = !DILocation(line: 106, column: 1, scope: !4489)
!4682 = !{i64 2147593821, i64 2147593864, i64 2147593904}
!4683 = !DILocation(line: 107, column: 1, scope: !4489)
!4684 = !{i64 2147593987, i64 2147594030, i64 2147594070}
!4685 = !DILocation(line: 108, column: 1, scope: !4489)
!4686 = !{i64 2147594171, i64 2147594214, i64 2147594254}
!4687 = !DILocation(line: 109, column: 1, scope: !4489)
!4688 = !{i64 2147594361, i64 2147594404, i64 2147594444}
!4689 = !DILocation(line: 110, column: 1, scope: !4489)
!4690 = !{i64 2147594545, i64 2147594588, i64 2147594628}
!4691 = !DILocation(line: 111, column: 1, scope: !4489)
!4692 = !{i64 2147594759, i64 2147594802, i64 2147594842}
!4693 = !DILocation(line: 112, column: 1, scope: !4489)
!4694 = !{i64 2147594970, i64 2147595013, i64 2147595053}
!4695 = !DILocation(line: 113, column: 1, scope: !4489)
!4696 = !{i64 2147595193, i64 2147595236, i64 2147595276}
!4697 = !DILocation(line: 114, column: 1, scope: !4489)
!4698 = !{i64 2147595377, i64 2147595420, i64 2147595460}
!4699 = !DILocation(line: 115, column: 1, scope: !4489)
!4700 = !{i64 2147595591, i64 2147595634, i64 2147595674}
!4701 = !DILocation(line: 116, column: 1, scope: !4489)
!4702 = !{i64 2147595757, i64 2147595800, i64 2147595840}
!4703 = !DILocation(line: 117, column: 1, scope: !4489)
!4704 = !{i64 2147595938, i64 2147595981, i64 2147596021}
!4705 = !DILocation(line: 118, column: 1, scope: !4489)
!4706 = !{i64 2147596131, i64 2147596174, i64 2147596214}
!4707 = !DILocation(line: 119, column: 1, scope: !4489)
!4708 = !{i64 2147596357, i64 2147596400, i64 2147596440}
!4709 = !DILocation(line: 120, column: 1, scope: !4489)
!4710 = !{i64 2147596571, i64 2147596614, i64 2147596654}
!4711 = !DILocation(line: 121, column: 1, scope: !4489)
!4712 = !{i64 2147596797, i64 2147596840, i64 2147596880}
!4713 = !DILocation(line: 122, column: 1, scope: !4489)
!4714 = !{i64 2147597014, i64 2147597057, i64 2147597097}
!4715 = !DILocation(line: 123, column: 1, scope: !4489)
!4716 = !{i64 2147597291, i64 2147597334, i64 2147597374}
!4717 = !DILocation(line: 124, column: 1, scope: !4489)
!4718 = !{i64 2147597517, i64 2147597560, i64 2147597600}
!4719 = !DILocation(line: 125, column: 1, scope: !4489)
!4720 = !{i64 2147597713, i64 2147597756, i64 2147597796}
!4721 = !DILocation(line: 126, column: 1, scope: !4489)
!4722 = !{i64 2147597978, i64 2147598021, i64 2147598061}
!4723 = !DILocation(line: 127, column: 1, scope: !4489)
!4724 = !{i64 2147598192, i64 2147598235, i64 2147598275}
!4725 = !DILocation(line: 128, column: 1, scope: !4489)
!4726 = !{i64 2147598367, i64 2147598410, i64 2147598450}
!4727 = !DILocation(line: 129, column: 1, scope: !4489)
!4728 = !{i64 2147598621, i64 2147598664, i64 2147598704}
!4729 = !DILocation(line: 130, column: 1, scope: !4489)
!4730 = !{i64 2147598820, i64 2147598863, i64 2147598903}
!4731 = !DILocation(line: 131, column: 1, scope: !4489)
!4732 = !{i64 2147603123, i64 2147603166, i64 2147603206}
!4733 = !DILocation(line: 132, column: 1, scope: !4489)
!4734 = !{i64 2147603286, i64 2147603329, i64 2147603369}
!4735 = !DILocation(line: 133, column: 1, scope: !4489)
!4736 = !{i64 2147603473, i64 2147603516, i64 2147603556}
!4737 = !DILocation(line: 134, column: 1, scope: !4489)
!4738 = !{i64 2147603666, i64 2147603709, i64 2147603749}
!4739 = !DILocation(line: 135, column: 1, scope: !4489)
!4740 = !{i64 2147603848, i64 2147603891, i64 2147603931}
!4741 = !DILocation(line: 136, column: 1, scope: !4489)
!4742 = !{i64 2147604062, i64 2147604105, i64 2147604145}
!4743 = !DILocation(line: 137, column: 1, scope: !4489)
!4744 = !{i64 2147604273, i64 2147604316, i64 2147604356}
!4745 = !DILocation(line: 138, column: 1, scope: !4489)
!4746 = !{i64 2147604493, i64 2147604536, i64 2147604576}
!4747 = !DILocation(line: 139, column: 1, scope: !4489)
!4748 = !{i64 2147604700, i64 2147604743, i64 2147604783}
!4749 = !DILocation(line: 140, column: 1, scope: !4489)
!4750 = !{i64 2147604973, i64 2147605016, i64 2147605056}
!4751 = !DILocation(line: 141, column: 1, scope: !4489)
!4752 = !{i64 2147605221, i64 2147605264, i64 2147605304}
!4753 = !DILocation(line: 142, column: 1, scope: !4489)
!4754 = !{i64 2147605420, i64 2147605463, i64 2147605503}
!4755 = !DILocation(line: 143, column: 1, scope: !4489)
!4756 = !{i64 2147605655, i64 2147605698, i64 2147605738}
!4757 = !DILocation(line: 144, column: 1, scope: !4489)
!4758 = !{i64 2147605905, i64 2147605948, i64 2147605988}
!4759 = !DILocation(line: 145, column: 1, scope: !4489)
!4760 = !{i64 2147606107, i64 2147606150, i64 2147606190}
!4761 = !DILocation(line: 146, column: 1, scope: !4489)
!4762 = !{i64 2147606330, i64 2147606373, i64 2147606413}
!4763 = !DILocation(line: 147, column: 1, scope: !4489)
!4764 = !{i64 2147606544, i64 2147606587, i64 2147606627}
!4765 = !DILocation(line: 148, column: 1, scope: !4489)
!4766 = !{i64 2147606788, i64 2147606831, i64 2147606871}
!4767 = !DILocation(line: 149, column: 1, scope: !4489)
!4768 = !{i64 2147607017, i64 2147607060, i64 2147607100}
!4769 = !DILocation(line: 150, column: 1, scope: !4489)
!4770 = !{i64 2147607246, i64 2147607289, i64 2147607329}
!4771 = !DILocation(line: 151, column: 1, scope: !4489)
!4772 = !{i64 2147607454, i64 2147607497, i64 2147607537}
!4773 = !DILocation(line: 152, column: 1, scope: !4489)
!4774 = !{i64 2147607692, i64 2147607735, i64 2147607775}
!4775 = !DILocation(line: 153, column: 1, scope: !4489)
!4776 = !{i64 2147607918, i64 2147607961, i64 2147608001}
!4777 = !DILocation(line: 154, column: 1, scope: !4489)
!4778 = !{i64 2147608177, i64 2147608220, i64 2147608260}
!4779 = !DILocation(line: 155, column: 1, scope: !4489)
!4780 = !{i64 2147608397, i64 2147608440, i64 2147608480}
!4781 = !DILocation(line: 156, column: 1, scope: !4489)
!4782 = !{i64 2147608629, i64 2147608672, i64 2147608712}
!4783 = !DILocation(line: 157, column: 1, scope: !4489)
!4784 = !{i64 2147608870, i64 2147608913, i64 2147608953}
!4785 = !DILocation(line: 158, column: 1, scope: !4489)
!4786 = !{i64 2147609111, i64 2147609154, i64 2147609194}
!4787 = !DILocation(line: 159, column: 1, scope: !4489)
!4788 = !{i64 2147609334, i64 2147609377, i64 2147609417}
!4789 = !DILocation(line: 160, column: 1, scope: !4489)
!4790 = !{i64 2147609551, i64 2147609594, i64 2147609634}
!4791 = !DILocation(line: 161, column: 1, scope: !4489)
!4792 = !{i64 2147609792, i64 2147609835, i64 2147609875}
!4793 = !DILocation(line: 162, column: 1, scope: !4489)
!4794 = !{i64 2147609979, i64 2147610022, i64 2147610062}
!4795 = !DILocation(line: 163, column: 1, scope: !4489)
!4796 = !{i64 2147610142, i64 2147610185, i64 2147610225}
!4797 = !DILocation(line: 164, column: 1, scope: !4489)
!4798 = !{i64 2147610401, i64 2147610444, i64 2147610484}
!4799 = !DILocation(line: 165, column: 1, scope: !4489)
!4800 = !{i64 2147610624, i64 2147610667, i64 2147610707}
!4801 = !DILocation(line: 166, column: 1, scope: !4489)
!4802 = !{i64 2147610853, i64 2147610896, i64 2147610936}
!4803 = !DILocation(line: 167, column: 1, scope: !4489)
!4804 = !{i64 2147611049, i64 2147611092, i64 2147611132}
!4805 = !DILocation(line: 168, column: 1, scope: !4489)
!4806 = !{i64 2147611261, i64 2147611304, i64 2147611344}
!4807 = !DILocation(line: 169, column: 1, scope: !4489)
!4808 = !{i64 2147611482, i64 2147611525, i64 2147611565}
!4809 = !DILocation(line: 170, column: 1, scope: !4489)
!4810 = !{i64 2147615757, i64 2147615800, i64 2147615840}
!4811 = !DILocation(line: 171, column: 1, scope: !4489)
!4812 = !{i64 2147615947, i64 2147615990, i64 2147616030}
!4813 = !DILocation(line: 172, column: 1, scope: !4489)
!4814 = !{i64 2147616146, i64 2147616189, i64 2147616229}
!4815 = !DILocation(line: 173, column: 1, scope: !4489)
!4816 = !{i64 2147616351, i64 2147616394, i64 2147616434}
!4817 = !DILocation(line: 174, column: 1, scope: !4489)
!4818 = !{i64 2147616571, i64 2147616614, i64 2147616654}
!4819 = !DILocation(line: 175, column: 1, scope: !4489)
!4820 = !{i64 2147616772, i64 2147616815, i64 2147616855}
!4821 = !DILocation(line: 176, column: 1, scope: !4489)
!4822 = !{i64 2147616971, i64 2147617014, i64 2147617054}
!4823 = !DILocation(line: 177, column: 1, scope: !4489)
!4824 = !{i64 2147617176, i64 2147617219, i64 2147617259}
!4825 = !DILocation(line: 178, column: 1, scope: !4489)
!4826 = !{i64 2147617345, i64 2147617388, i64 2147617428}
!4827 = !DILocation(line: 179, column: 1, scope: !4489)
!4828 = !{i64 2147617529, i64 2147617572, i64 2147617612}
!4829 = !DILocation(line: 180, column: 1, scope: !4489)
!4830 = !{i64 2147617713, i64 2147617756, i64 2147617796}
!4831 = !DILocation(line: 181, column: 1, scope: !4489)
!4832 = !{i64 2147617900, i64 2147617943, i64 2147617983}
!4833 = !DILocation(line: 182, column: 1, scope: !4489)
!4834 = !{i64 2147618084, i64 2147618127, i64 2147618167}
!4835 = !DILocation(line: 183, column: 1, scope: !4489)
!4836 = !{i64 2147618322, i64 2147618365, i64 2147618405}
!4837 = !DILocation(line: 184, column: 1, scope: !4489)
!4838 = !{i64 2147618552, i64 2147618595, i64 2147618635}
!4839 = !DILocation(line: 185, column: 1, scope: !4489)
!4840 = !{i64 2147618781, i64 2147618824, i64 2147618864}
!4841 = !DILocation(line: 186, column: 1, scope: !4489)
!4842 = !{i64 2147618968, i64 2147619011, i64 2147619051}
!4843 = !DILocation(line: 187, column: 1, scope: !4489)
!4844 = !{i64 2147619164, i64 2147619207, i64 2147619247}
!4845 = !DILocation(line: 188, column: 1, scope: !4489)
!4846 = !{i64 2147619372, i64 2147619415, i64 2147619455}
!4847 = !DILocation(line: 189, column: 1, scope: !4489)
!4848 = !{i64 2147619584, i64 2147619627, i64 2147619667}
!4849 = !DILocation(line: 190, column: 1, scope: !4489)
!4850 = !{i64 2147619783, i64 2147619826, i64 2147619866}
!4851 = !DILocation(line: 191, column: 1, scope: !4489)
!4852 = !{i64 2147620021, i64 2147620064, i64 2147620104}
!4853 = !DILocation(line: 192, column: 1, scope: !4489)
!4854 = !{i64 2147620217, i64 2147620260, i64 2147620300}
!4855 = !DILocation(line: 193, column: 1, scope: !4489)
!4856 = !{i64 2147620419, i64 2147620462, i64 2147620502}
!4857 = !DILocation(line: 194, column: 1, scope: !4489)
!4858 = !{i64 2147620612, i64 2147620655, i64 2147620695}
!4859 = !DILocation(line: 195, column: 1, scope: !4489)
!4860 = !{i64 2147620846, i64 2147620889, i64 2147620929}
!4861 = !DILocation(line: 196, column: 1, scope: !4489)
!4862 = !{i64 2147621009, i64 2147621052, i64 2147621092}
!4863 = !DILocation(line: 197, column: 1, scope: !4489)
!4864 = !{i64 2147621248, i64 2147621291, i64 2147621331}
!4865 = !DILocation(line: 198, column: 1, scope: !4489)
!4866 = !{i64 2147621487, i64 2147621530, i64 2147621570}
!4867 = !DILocation(line: 199, column: 1, scope: !4489)
!4868 = !{i64 2147621723, i64 2147621766, i64 2147621806}
!4869 = !DILocation(line: 200, column: 1, scope: !4489)
!4870 = !{i64 2147621953, i64 2147621996, i64 2147622036}
!4871 = !DILocation(line: 201, column: 1, scope: !4489)
!4872 = !{i64 2147622140, i64 2147622183, i64 2147622223}
!4873 = !DILocation(line: 202, column: 1, scope: !4489)
!4874 = !{i64 2147622339, i64 2147622382, i64 2147622422}
!4875 = !DILocation(line: 203, column: 1, scope: !4489)
!4876 = !{i64 2147622610, i64 2147622653, i64 2147622693}
!4877 = !DILocation(line: 204, column: 1, scope: !4489)
!4878 = !{i64 2147622785, i64 2147622828, i64 2147622868}
!4879 = !DILocation(line: 205, column: 1, scope: !4489)
!4880 = !{i64 2147623019, i64 2147623062, i64 2147623102}
!4881 = !DILocation(line: 206, column: 1, scope: !4489)
!4882 = !{i64 2147623227, i64 2147623270, i64 2147623310}
!4883 = !DILocation(line: 207, column: 1, scope: !4489)
!4884 = !{i64 2147623445, i64 2147623488, i64 2147623528}
!4885 = !DILocation(line: 208, column: 1, scope: !4489)
!4886 = !{i64 2147623635, i64 2147623678, i64 2147623718}
!4887 = !DILocation(line: 209, column: 1, scope: !4489)
!4888 = !{i64 2147623831, i64 2147623874, i64 2147623914}
!4889 = !DILocation(line: 210, column: 1, scope: !4489)
!4890 = !{i64 2147624037, i64 2147624080, i64 2147624120}
!4891 = !DILocation(line: 211, column: 1, scope: !4489)
!4892 = !{i64 2147624242, i64 2147624285, i64 2147624325}
!4893 = !DILocation(line: 212, column: 1, scope: !4489)
!4894 = !{i64 2147624468, i64 2147624511, i64 2147624551}
!4895 = !DILocation(line: 213, column: 1, scope: !4489)
!4896 = !{i64 2147624700, i64 2147624743, i64 2147624783}
!4897 = !DILocation(line: 214, column: 1, scope: !4489)
!4898 = !{i64 2147624884, i64 2147624927, i64 2147624967}
!4899 = !DILocation(line: 215, column: 1, scope: !4489)
!4900 = !{i64 2147629154, i64 2147629197, i64 2147629237}
!4901 = !DILocation(line: 216, column: 1, scope: !4489)
!4902 = !{i64 2147629338, i64 2147629381, i64 2147629421}
!4903 = !DILocation(line: 217, column: 1, scope: !4489)
!4904 = !{i64 2147629564, i64 2147629607, i64 2147629647}
!4905 = !DILocation(line: 218, column: 1, scope: !4489)
!4906 = !{i64 2147629790, i64 2147629833, i64 2147629873}
!4907 = !DILocation(line: 219, column: 1, scope: !4489)
!4908 = !{i64 2147630016, i64 2147630059, i64 2147630099}
!4909 = !DILocation(line: 220, column: 1, scope: !4489)
!4910 = !{i64 2147630242, i64 2147630285, i64 2147630325}
!4911 = !DILocation(line: 221, column: 1, scope: !4489)
!4912 = !{i64 2147630468, i64 2147630511, i64 2147630551}
!4913 = !DILocation(line: 222, column: 1, scope: !4489)
!4914 = !{i64 2147630700, i64 2147630743, i64 2147630783}
!4915 = !DILocation(line: 223, column: 1, scope: !4489)
!4916 = !{i64 2147630938, i64 2147630981, i64 2147631021}
!4917 = !DILocation(line: 224, column: 1, scope: !4489)
!4918 = !{i64 2147631170, i64 2147631213, i64 2147631253}
!4919 = !DILocation(line: 225, column: 1, scope: !4489)
!4920 = !{i64 2147631372, i64 2147631415, i64 2147631455}
!4921 = !DILocation(line: 226, column: 1, scope: !4489)
!4922 = !{i64 2147631622, i64 2147631665, i64 2147631705}
!4923 = !DILocation(line: 227, column: 1, scope: !4489)
!4924 = !{i64 2147631860, i64 2147631903, i64 2147631943}
!4925 = !DILocation(line: 228, column: 1, scope: !4489)
!4926 = !{i64 2147632044, i64 2147632087, i64 2147632127}
!4927 = !DILocation(line: 229, column: 1, scope: !4489)
!4928 = !{i64 2147632267, i64 2147632310, i64 2147632350}
!4929 = !DILocation(line: 230, column: 1, scope: !4489)
!4930 = !{i64 2147632505, i64 2147632548, i64 2147632588}
!4931 = !DILocation(line: 231, column: 1, scope: !4489)
!4932 = !{i64 2147632743, i64 2147632786, i64 2147632826}
!4933 = !DILocation(line: 232, column: 1, scope: !4489)
!4934 = !{i64 2147632915, i64 2147632958, i64 2147632998}
!4935 = !DILocation(line: 233, column: 1, scope: !4489)
!4936 = !{i64 2147633105, i64 2147633148, i64 2147633188}
!4937 = !DILocation(line: 234, column: 1, scope: !4489)
!4938 = !{i64 2147633298, i64 2147633341, i64 2147633381}
!4939 = !DILocation(line: 235, column: 1, scope: !4489)
!4940 = !{i64 2147633551, i64 2147633594, i64 2147633634}
!4941 = !DILocation(line: 236, column: 1, scope: !4489)
!4942 = !{i64 2147633765, i64 2147633808, i64 2147633848}
!4943 = !DILocation(line: 237, column: 1, scope: !4489)
!4944 = !{i64 2147633973, i64 2147634016, i64 2147634056}
!4945 = !DILocation(line: 238, column: 1, scope: !4489)
!4946 = !{i64 2147634163, i64 2147634206, i64 2147634246}
!4947 = !DILocation(line: 239, column: 1, scope: !4489)
!4948 = !{i64 2147634377, i64 2147634420, i64 2147634460}
!4949 = !DILocation(line: 240, column: 1, scope: !4489)
!4950 = !{i64 2147634639, i64 2147634682, i64 2147634722}
!4951 = !DILocation(line: 241, column: 1, scope: !4489)
!4952 = !{i64 2147634850, i64 2147634893, i64 2147634933}
!4953 = !DILocation(line: 242, column: 1, scope: !4489)
!4954 = !{i64 2147635094, i64 2147635137, i64 2147635177}
!4955 = !DILocation(line: 243, column: 1, scope: !4489)
!4956 = !{i64 2147635305, i64 2147635348, i64 2147635388}
!4957 = !DILocation(line: 244, column: 1, scope: !4489)
!4958 = !{i64 2147635534, i64 2147635577, i64 2147635617}
!4959 = !DILocation(line: 245, column: 1, scope: !4489)
!4960 = !{i64 2147635799, i64 2147635842, i64 2147635882}
!4961 = !DILocation(line: 246, column: 1, scope: !4489)
!4962 = !{i64 2147636004, i64 2147636047, i64 2147636087}
!4963 = !DILocation(line: 247, column: 1, scope: !4489)
!4964 = !{i64 2147636200, i64 2147636243, i64 2147636283}
!4965 = !DILocation(line: 248, column: 1, scope: !4489)
!4966 = !{i64 2147636423, i64 2147636466, i64 2147636506}
!4967 = !DILocation(line: 249, column: 1, scope: !4489)
!4968 = !{i64 2147636586, i64 2147636629, i64 2147636669}
!4969 = !DILocation(line: 250, column: 1, scope: !4489)
!4970 = !{i64 2147636791, i64 2147636834, i64 2147636874}
!4971 = !DILocation(line: 251, column: 1, scope: !4489)
!4972 = !{i64 2147637011, i64 2147637054, i64 2147637094}
!4973 = !DILocation(line: 252, column: 1, scope: !4489)
!4974 = !{i64 2147637225, i64 2147637268, i64 2147637308}
!4975 = !DILocation(line: 253, column: 1, scope: !4489)
!4976 = !{i64 2147637439, i64 2147637482, i64 2147637522}
!4977 = !DILocation(line: 254, column: 1, scope: !4489)
!4978 = !{i64 2147641711, i64 2147641754, i64 2147641794}
!4979 = !DILocation(line: 255, column: 1, scope: !4489)
!4980 = !{i64 2147641904, i64 2147641947, i64 2147641987}
!4981 = !DILocation(line: 256, column: 1, scope: !4489)
!4982 = !{i64 2147642103, i64 2147642146, i64 2147642186}
!4983 = !DILocation(line: 257, column: 1, scope: !4489)
!4984 = !{i64 2147642275, i64 2147642318, i64 2147642358}
!4985 = !DILocation(line: 258, column: 1, scope: !4489)
!4986 = !{i64 2147642468, i64 2147642511, i64 2147642551}
!4987 = !DILocation(line: 259, column: 1, scope: !4489)
!4988 = !{i64 2147642664, i64 2147642707, i64 2147642747}
!4989 = !DILocation(line: 260, column: 1, scope: !4489)
!4990 = !{i64 2147642891, i64 2147642934, i64 2147642974}
!4991 = !DILocation(line: 261, column: 1, scope: !4489)
!4992 = !{i64 2147643108, i64 2147643151, i64 2147643191}
!4993 = !DILocation(line: 262, column: 1, scope: !4489)
!4994 = !{i64 2147643400, i64 2147643443, i64 2147643483}
!4995 = !DILocation(line: 263, column: 1, scope: !4489)
!4996 = !{i64 2147643632, i64 2147643675, i64 2147643715}
!4997 = !DILocation(line: 264, column: 1, scope: !4489)
!4998 = !{i64 2147643849, i64 2147643892, i64 2147643932}
!4999 = !DILocation(line: 265, column: 1, scope: !4489)
!5000 = !{i64 2147644056, i64 2147644099, i64 2147644139}
!5001 = !DILocation(line: 266, column: 1, scope: !4489)
!5002 = !{i64 2147644257, i64 2147644300, i64 2147644340}
!5003 = !DILocation(line: 267, column: 1, scope: !4489)
!5004 = !{i64 2147644489, i64 2147644532, i64 2147644572}
!5005 = !DILocation(line: 268, column: 1, scope: !4489)
!5006 = !{i64 2147644697, i64 2147644740, i64 2147644780}
!5007 = !DILocation(line: 269, column: 1, scope: !4489)
!5008 = !{i64 2147644887, i64 2147644930, i64 2147644970}
!5009 = !DILocation(line: 270, column: 1, scope: !4489)
!5010 = !{i64 2147645113, i64 2147645156, i64 2147645196}
!5011 = !DILocation(line: 271, column: 1, scope: !4489)
!5012 = !{i64 2147645302, i64 2147645345, i64 2147645385}
!5013 = !DILocation(line: 272, column: 1, scope: !4489)
!5014 = !{i64 2147645573, i64 2147645616, i64 2147645656}
!5015 = !DILocation(line: 273, column: 1, scope: !4489)
!5016 = !{i64 2147645793, i64 2147645836, i64 2147645876}
!5017 = !DILocation(line: 274, column: 1, scope: !4489)
!5018 = !{i64 2147646046, i64 2147646089, i64 2147646129}
!5019 = !DILocation(line: 275, column: 1, scope: !4489)
!5020 = !{i64 2147646254, i64 2147646297, i64 2147646337}
!5021 = !DILocation(line: 276, column: 1, scope: !4489)
!5022 = !{i64 2147646486, i64 2147646529, i64 2147646569}
!5023 = !DILocation(line: 277, column: 1, scope: !4489)
!5024 = !{i64 2147646697, i64 2147646740, i64 2147646780}
!5025 = !DILocation(line: 278, column: 1, scope: !4489)
!5026 = !{i64 2147646887, i64 2147646930, i64 2147646970}
!5027 = !DILocation(line: 279, column: 1, scope: !4489)
!5028 = !{i64 2147647101, i64 2147647144, i64 2147647184}
!5029 = !DILocation(line: 280, column: 1, scope: !4489)
!5030 = !{i64 2147647300, i64 2147647343, i64 2147647383}
!5031 = !DILocation(line: 281, column: 1, scope: !4489)
!5032 = !{i64 2147647487, i64 2147647530, i64 2147647570}
!5033 = !DILocation(line: 282, column: 1, scope: !4489)
!5034 = !{i64 2147647695, i64 2147647738, i64 2147647778}
!5035 = !DILocation(line: 283, column: 1, scope: !4489)
!5036 = !{i64 2147647924, i64 2147647967, i64 2147648007}
!5037 = !DILocation(line: 284, column: 1, scope: !4489)
!5038 = !{i64 2147648126, i64 2147648169, i64 2147648209}
!5039 = !DILocation(line: 285, column: 1, scope: !4489)
!5040 = !{i64 2147648325, i64 2147648368, i64 2147648408}
!5041 = !DILocation(line: 286, column: 1, scope: !4489)
!5042 = !{i64 2147648542, i64 2147648585, i64 2147648625}
!5043 = !DILocation(line: 288, column: 1, scope: !4489)
!5044 = distinct !DISubprogram(name: "stm32l1_init", scope: !142, file: !142, line: 31, type: !149, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5045)
!5045 = !{!5046, !5047}
!5046 = !DILocalVariable(name: "arg", arg: 1, scope: !5044, file: !142, line: 31, type: !151)
!5047 = !DILocalVariable(name: "key", scope: !5044, file: !142, line: 33, type: !121)
!5048 = !DILocation(line: 0, scope: !5044)
!5049 = !DILocation(line: 55, column: 2, scope: !5050, inlinedAt: !5057)
!5050 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5054)
!5051 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5052 = !DISubroutineType(types: !5053)
!5053 = !{!32}
!5054 = !{!5055, !5056}
!5055 = !DILocalVariable(name: "key", scope: !5050, file: !5051, line: 44, type: !32)
!5056 = !DILocalVariable(name: "tmp", scope: !5050, file: !5051, line: 53, type: !32)
!5057 = distinct !DILocation(line: 37, column: 8, scope: !5044)
!5058 = !{i64 1523396}
!5059 = !DILocation(line: 0, scope: !5050, inlinedAt: !5057)
!5060 = !DILocalVariable(name: "key", arg: 1, scope: !5061, file: !5051, line: 84, type: !32)
!5061 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{null, !32}
!5064 = !{!5060}
!5065 = !DILocation(line: 0, scope: !5061, inlinedAt: !5066)
!5066 = distinct !DILocation(line: 44, column: 2, scope: !5044)
!5067 = !DILocation(line: 95, column: 2, scope: !5061, inlinedAt: !5066)
!5068 = !{i64 1524213}
!5069 = !DILocation(line: 48, column: 18, scope: !5044)
!5070 = !DILocation(line: 54, column: 2, scope: !5044)
!5071 = !DILocation(line: 55, column: 2, scope: !5044)
!5072 = !DILocation(line: 57, column: 2, scope: !5044)
!5073 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5074, file: !5074, line: 531, type: !5075, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5077)
!5074 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5075 = !DISubroutineType(types: !5076)
!5076 = !{null, !121}
!5077 = !{!5078, !5079}
!5078 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5073, file: !5074, line: 531, type: !121)
!5079 = !DILocalVariable(name: "tmpreg", scope: !5073, file: !5074, line: 533, type: !120)
!5080 = !DILocation(line: 0, scope: !5073)
!5081 = !DILocation(line: 533, column: 3, scope: !5073)
!5082 = !DILocation(line: 533, column: 17, scope: !5073)
!5083 = !DILocation(line: 534, column: 3, scope: !5073)
!5084 = !DILocation(line: 536, column: 12, scope: !5073)
!5085 = !DILocation(line: 536, column: 10, scope: !5073)
!5086 = !DILocation(line: 537, column: 9, scope: !5073)
!5087 = !DILocation(line: 538, column: 1, scope: !5073)
!5088 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5089, file: !5089, line: 272, type: !5075, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5090)
!5089 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5090 = !{!5091}
!5091 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5088, file: !5089, line: 272, type: !121)
!5092 = !DILocation(line: 0, scope: !5088)
!5093 = !DILocation(line: 274, column: 3, scope: !5088)
!5094 = !DILocation(line: 275, column: 1, scope: !5088)
!5095 = distinct !DISubprogram(name: "HAL_GetTick", scope: !5096, file: !5096, line: 23, type: !5097, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !335)
!5096 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/stm32cube_hal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!121}
!5099 = !DILocation(line: 25, column: 9, scope: !5095)
!5100 = !DILocation(line: 25, column: 2, scope: !5095)
!5101 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !320, file: !320, line: 1640, type: !5097, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !335)
!5102 = !DILocation(line: 1642, column: 19, scope: !5101)
!5103 = !DILocation(line: 1642, column: 9, scope: !5101)
!5104 = !DILocation(line: 1642, column: 2, scope: !5101)
!5105 = distinct !DISubprogram(name: "k_uptime_get", scope: !320, file: !320, line: 1616, type: !5106, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !335)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!293}
!5108 = !DILocation(line: 1618, column: 31, scope: !5105)
!5109 = !DILocation(line: 1618, column: 9, scope: !5105)
!5110 = !DILocation(line: 1618, column: 2, scope: !5105)
!5111 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3686, file: !3686, line: 564, type: !5106, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !335)
!5112 = !DILocation(line: 573, column: 2, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5111, file: !3686, line: 573, column: 2)
!5114 = !{i64 2152214270}
!5115 = !DILocation(line: 574, column: 9, scope: !5111)
!5116 = !DILocation(line: 574, column: 2, scope: !5111)
!5117 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5118, file: !5118, line: 1103, type: !5119, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !5121)
!5118 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!2254, !2254}
!5121 = !{!5122}
!5122 = !DILocalVariable(name: "t", arg: 1, scope: !5117, file: !5118, line: 1103, type: !2254)
!5123 = !DILocation(line: 0, scope: !5117)
!5124 = !DILocalVariable(name: "t", arg: 1, scope: !5125, file: !5118, line: 102, type: !2254)
!5125 = distinct !DISubprogram(name: "z_tmcvt", scope: !5118, file: !5118, line: 102, type: !5126, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !5128)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!2254, !2254, !121, !121, !170, !170, !170, !170}
!5128 = !{!5124, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138}
!5129 = !DILocalVariable(name: "from_hz", arg: 2, scope: !5125, file: !5118, line: 102, type: !121)
!5130 = !DILocalVariable(name: "to_hz", arg: 3, scope: !5125, file: !5118, line: 103, type: !121)
!5131 = !DILocalVariable(name: "const_hz", arg: 4, scope: !5125, file: !5118, line: 103, type: !170)
!5132 = !DILocalVariable(name: "result32", arg: 5, scope: !5125, file: !5118, line: 104, type: !170)
!5133 = !DILocalVariable(name: "round_up", arg: 6, scope: !5125, file: !5118, line: 104, type: !170)
!5134 = !DILocalVariable(name: "round_off", arg: 7, scope: !5125, file: !5118, line: 105, type: !170)
!5135 = !DILocalVariable(name: "mul_ratio", scope: !5125, file: !5118, line: 107, type: !170)
!5136 = !DILocalVariable(name: "div_ratio", scope: !5125, file: !5118, line: 109, type: !170)
!5137 = !DILocalVariable(name: "off", scope: !5125, file: !5118, line: 116, type: !2254)
!5138 = !DILocalVariable(name: "rdivisor", scope: !5139, file: !5118, line: 119, type: !121)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !5118, line: 118, column: 18)
!5140 = distinct !DILexicalBlock(scope: !5125, file: !5118, line: 118, column: 6)
!5141 = !DILocation(line: 0, scope: !5125, inlinedAt: !5142)
!5142 = distinct !DILocation(line: 1106, column: 9, scope: !5117)
!5143 = !DILocation(line: 139, column: 13, scope: !5144, inlinedAt: !5142)
!5144 = distinct !DILexicalBlock(scope: !5145, file: !5118, line: 138, column: 10)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !5118, line: 136, column: 7)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !5118, line: 134, column: 17)
!5147 = distinct !DILexicalBlock(scope: !5125, file: !5118, line: 134, column: 6)
!5148 = !DILocation(line: 1106, column: 2, scope: !5117)
!5149 = distinct !DISubprogram(name: "HAL_Delay", scope: !5096, file: !5096, line: 34, type: !5150, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !5152)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{null, !120}
!5152 = !{!5153}
!5153 = !DILocalVariable(name: "Delay", arg: 1, scope: !5149, file: !5096, line: 34, type: !120)
!5154 = !DILocation(line: 34, column: 30, scope: !5149)
!5155 = !DILocation(line: 36, column: 11, scope: !5149)
!5156 = !DILocation(line: 36, column: 2, scope: !5149)
!5157 = !DILocation(line: 37, column: 1, scope: !5149)
!5158 = distinct !DISubprogram(name: "k_msleep", scope: !320, file: !320, line: 439, type: !5159, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !5161)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{!675, !675}
!5161 = !{!5162}
!5162 = !DILocalVariable(name: "ms", arg: 1, scope: !5158, file: !320, line: 439, type: !675)
!5163 = !DILocation(line: 0, scope: !5158)
!5164 = !DILocation(line: 441, column: 17, scope: !5158)
!5165 = !DILocation(line: 441, column: 9, scope: !5158)
!5166 = !DILocation(line: 441, column: 2, scope: !5158)
!5167 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5118, file: !5118, line: 403, type: !5119, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !5168)
!5168 = !{!5169}
!5169 = !DILocalVariable(name: "t", arg: 1, scope: !5167, file: !5118, line: 403, type: !2254)
!5170 = !DILocation(line: 0, scope: !5167)
!5171 = !DILocation(line: 0, scope: !5125, inlinedAt: !5172)
!5172 = distinct !DILocation(line: 406, column: 9, scope: !5167)
!5173 = !DILocation(line: 145, column: 13, scope: !5174, inlinedAt: !5172)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !5118, line: 144, column: 10)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !5118, line: 142, column: 7)
!5176 = distinct !DILexicalBlock(scope: !5177, file: !5118, line: 141, column: 24)
!5177 = distinct !DILexicalBlock(scope: !5147, file: !5118, line: 141, column: 13)
!5178 = !DILocation(line: 406, column: 2, scope: !5167)
!5179 = distinct !DISubprogram(name: "k_sleep", scope: !3686, file: !3686, line: 91, type: !5180, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !5186)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!675, !5182}
!5182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1232, line: 67, baseType: !5183)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1232, line: 65, size: 64, elements: !5184)
!5184 = !{!5185}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5183, file: !1232, line: 66, baseType: !1231, size: 64)
!5186 = !{!5187}
!5187 = !DILocalVariable(name: "timeout", arg: 1, scope: !5179, file: !3686, line: 91, type: !5182)
!5188 = !DILocation(line: 0, scope: !5179)
!5189 = !DILocation(line: 99, column: 2, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5179, file: !3686, line: 99, column: 2)
!5191 = !{i64 2152212366}
!5192 = !DILocation(line: 100, column: 9, scope: !5179)
!5193 = !DILocation(line: 100, column: 2, scope: !5179)
!5194 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !184, file: !184, line: 26, type: !190, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !181, retainedNodes: !5195)
!5195 = !{!5196}
!5196 = !DILocalVariable(name: "dev", arg: 1, scope: !5194, file: !184, line: 26, type: !192)
!5197 = !DILocation(line: 0, scope: !5194)
!5198 = !DILocation(line: 68, column: 2, scope: !5194)
!5199 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5200, file: !5200, line: 57, type: !5201, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !5247)
!5200 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5201 = !DISubroutineType(types: !5202)
!5202 = !{null, !32, !5203}
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 32)
!5204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5205)
!5205 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2735, line: 141, baseType: !5206)
!5206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2735, line: 97, size: 256, elements: !5207)
!5207 = !{!5208}
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5206, file: !2735, line: 107, baseType: !5209, size: 256)
!5209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2735, line: 98, size: 256, elements: !5210)
!5210 = !{!5211, !5216, !5221, !5226, !5231, !5236, !5241, !5246}
!5211 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 99, baseType: !5212, size: 32)
!5212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 99, size: 32, elements: !5213)
!5213 = !{!5214, !5215}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5212, file: !2735, line: 99, baseType: !121, size: 32)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5212, file: !2735, line: 99, baseType: !121, size: 32)
!5216 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 100, baseType: !5217, size: 32, offset: 32)
!5217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 100, size: 32, elements: !5218)
!5218 = !{!5219, !5220}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5217, file: !2735, line: 100, baseType: !121, size: 32)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5217, file: !2735, line: 100, baseType: !121, size: 32)
!5221 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 101, baseType: !5222, size: 32, offset: 64)
!5222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 101, size: 32, elements: !5223)
!5223 = !{!5224, !5225}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5222, file: !2735, line: 101, baseType: !121, size: 32)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5222, file: !2735, line: 101, baseType: !121, size: 32)
!5226 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 102, baseType: !5227, size: 32, offset: 96)
!5227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 102, size: 32, elements: !5228)
!5228 = !{!5229, !5230}
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5227, file: !2735, line: 102, baseType: !121, size: 32)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5227, file: !2735, line: 102, baseType: !121, size: 32)
!5231 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 103, baseType: !5232, size: 32, offset: 128)
!5232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 103, size: 32, elements: !5233)
!5233 = !{!5234, !5235}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5232, file: !2735, line: 103, baseType: !121, size: 32)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5232, file: !2735, line: 103, baseType: !121, size: 32)
!5236 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 104, baseType: !5237, size: 32, offset: 160)
!5237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 104, size: 32, elements: !5238)
!5238 = !{!5239, !5240}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5237, file: !2735, line: 104, baseType: !121, size: 32)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5237, file: !2735, line: 104, baseType: !121, size: 32)
!5241 = !DIDerivedType(tag: DW_TAG_member, scope: !5209, file: !2735, line: 105, baseType: !5242, size: 32, offset: 192)
!5242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5209, file: !2735, line: 105, size: 32, elements: !5243)
!5243 = !{!5244, !5245}
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5242, file: !2735, line: 105, baseType: !121, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5242, file: !2735, line: 105, baseType: !121, size: 32)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5209, file: !2735, line: 106, baseType: !121, size: 32, offset: 224)
!5247 = !{!5248, !5249}
!5248 = !DILocalVariable(name: "reason", arg: 1, scope: !5199, file: !5200, line: 57, type: !32)
!5249 = !DILocalVariable(name: "esf", arg: 2, scope: !5199, file: !5200, line: 57, type: !5203)
!5250 = !DILocation(line: 0, scope: !5199)
!5251 = !DILocation(line: 63, column: 2, scope: !5199)
!5252 = !DILocation(line: 64, column: 1, scope: !5199)
!5253 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5200, file: !5200, line: 82, type: !5254, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !5269)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{null, !5203, !5256}
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5257, size: 32)
!5257 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !297, line: 37, baseType: !5258)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !5259)
!5259 = !{!5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5258, file: !297, line: 26, baseType: !121, size: 32)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5258, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5258, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5258, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5258, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5258, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5258, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5258, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5258, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!5269 = !{!5270, !5271, !5272}
!5270 = !DILocalVariable(name: "esf", arg: 1, scope: !5253, file: !5200, line: 82, type: !5203)
!5271 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5253, file: !5200, line: 82, type: !5256)
!5272 = !DILocalVariable(name: "reason", scope: !5253, file: !5200, line: 88, type: !32)
!5273 = !DILocation(line: 0, scope: !5253)
!5274 = !DILocation(line: 88, column: 35, scope: !5253)
!5275 = !DILocation(line: 108, column: 2, scope: !5253)
!5276 = !DILocation(line: 131, column: 1, scope: !5253)
!5277 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5200, file: !5200, line: 133, type: !5278, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2615, retainedNodes: !5280)
!5278 = !DISubroutineType(types: !5279)
!5279 = !{null, !102}
!5280 = !{!5281, !5282, !5283}
!5281 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5277, file: !5200, line: 133, type: !102)
!5282 = !DILocalVariable(name: "ssf_contents", scope: !5277, file: !5200, line: 135, type: !768)
!5283 = !DILocalVariable(name: "oops_esf", scope: !5277, file: !5200, line: 136, type: !5205)
!5284 = !DILocation(line: 0, scope: !5277)
!5285 = !DILocation(line: 136, column: 2, scope: !5277)
!5286 = !DILocation(line: 136, column: 15, scope: !5277)
!5287 = !DILocation(line: 139, column: 22, scope: !5277)
!5288 = !DILocation(line: 139, column: 17, scope: !5277)
!5289 = !DILocation(line: 139, column: 20, scope: !5277)
!5290 = !DILocation(line: 141, column: 2, scope: !5277)
!5291 = !DILocation(line: 142, column: 2, scope: !5277)
!5292 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5293, file: !5293, line: 40, type: !5062, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5294)
!5293 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5294 = !{!5295}
!5295 = !DILocalVariable(name: "irq", arg: 1, scope: !5292, file: !5293, line: 40, type: !32)
!5296 = !DILocation(line: 0, scope: !5292)
!5297 = !DILocation(line: 42, column: 2, scope: !5292)
!5298 = !DILocation(line: 43, column: 1, scope: !5292)
!5299 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !369, file: !369, line: 1508, type: !5300, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{null, !693}
!5302 = !{!5303}
!5303 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5299, file: !369, line: 1508, type: !693)
!5304 = !DILocation(line: 0, scope: !5299)
!5305 = !DILocation(line: 1510, column: 23, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5299, file: !369, line: 1510, column: 7)
!5307 = !DILocation(line: 1510, column: 7, scope: !5299)
!5308 = !DILocation(line: 1512, column: 5, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5306, file: !369, line: 1511, column: 3)
!5310 = !{i64 2149969193}
!5311 = !DILocation(line: 1513, column: 81, scope: !5309)
!5312 = !DILocation(line: 1513, column: 60, scope: !5309)
!5313 = !DILocation(line: 1513, column: 34, scope: !5309)
!5314 = !DILocation(line: 1513, column: 5, scope: !5309)
!5315 = !DILocation(line: 1513, column: 43, scope: !5309)
!5316 = !DILocation(line: 1514, column: 5, scope: !5309)
!5317 = !{i64 2149969307}
!5318 = !DILocation(line: 1515, column: 3, scope: !5309)
!5319 = !DILocation(line: 1516, column: 1, scope: !5299)
!5320 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5293, file: !5293, line: 45, type: !5062, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5321)
!5321 = !{!5322}
!5322 = !DILocalVariable(name: "irq", arg: 1, scope: !5320, file: !5293, line: 45, type: !32)
!5323 = !DILocation(line: 0, scope: !5320)
!5324 = !DILocation(line: 47, column: 2, scope: !5320)
!5325 = !DILocation(line: 48, column: 1, scope: !5320)
!5326 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !369, file: !369, line: 1546, type: !5300, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5327)
!5327 = !{!5328}
!5328 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5326, file: !369, line: 1546, type: !693)
!5329 = !DILocation(line: 0, scope: !5326)
!5330 = !DILocation(line: 1548, column: 23, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5326, file: !369, line: 1548, column: 7)
!5332 = !DILocation(line: 1548, column: 7, scope: !5326)
!5333 = !DILocation(line: 1550, column: 81, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !369, line: 1549, column: 3)
!5335 = !DILocation(line: 1550, column: 60, scope: !5334)
!5336 = !DILocation(line: 1550, column: 34, scope: !5334)
!5337 = !DILocation(line: 1550, column: 5, scope: !5334)
!5338 = !DILocation(line: 1550, column: 43, scope: !5334)
!5339 = !DILocation(line: 271, column: 3, scope: !5340, inlinedAt: !5342)
!5340 = distinct !DISubprogram(name: "__DSB", scope: !5341, file: !5341, line: 269, type: !3124, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !335)
!5341 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5342 = distinct !DILocation(line: 1551, column: 5, scope: !5334)
!5343 = !{i64 2426695}
!5344 = !DILocation(line: 260, column: 3, scope: !5345, inlinedAt: !5346)
!5345 = distinct !DISubprogram(name: "__ISB", scope: !5341, file: !5341, line: 258, type: !3124, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !335)
!5346 = distinct !DILocation(line: 1552, column: 5, scope: !5334)
!5347 = !{i64 2426412}
!5348 = !DILocation(line: 1553, column: 3, scope: !5334)
!5349 = !DILocation(line: 1554, column: 1, scope: !5326)
!5350 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5293, file: !5293, line: 50, type: !5351, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5353)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!103, !32}
!5353 = !{!5354}
!5354 = !DILocalVariable(name: "irq", arg: 1, scope: !5350, file: !5293, line: 50, type: !32)
!5355 = !DILocation(line: 0, scope: !5350)
!5356 = !DILocation(line: 52, column: 20, scope: !5350)
!5357 = !DILocation(line: 52, column: 9, scope: !5350)
!5358 = !DILocation(line: 52, column: 41, scope: !5350)
!5359 = !DILocation(line: 52, column: 39, scope: !5350)
!5360 = !DILocation(line: 52, column: 2, scope: !5350)
!5361 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5293, file: !5293, line: 64, type: !5362, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5364)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{null, !32, !32, !121}
!5364 = !{!5365, !5366, !5367}
!5365 = !DILocalVariable(name: "irq", arg: 1, scope: !5361, file: !5293, line: 64, type: !32)
!5366 = !DILocalVariable(name: "prio", arg: 2, scope: !5361, file: !5293, line: 64, type: !32)
!5367 = !DILocalVariable(name: "flags", arg: 3, scope: !5361, file: !5293, line: 64, type: !121)
!5368 = !DILocation(line: 0, scope: !5361)
!5369 = !DILocation(line: 83, column: 8, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !5293, line: 82, column: 9)
!5371 = distinct !DILexicalBlock(scope: !5361, file: !5293, line: 76, column: 6)
!5372 = !DILocation(line: 95, column: 2, scope: !5361)
!5373 = !DILocation(line: 96, column: 1, scope: !5361)
!5374 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !5375, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5377)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{null, !693, !121}
!5377 = !{!5378, !5379}
!5378 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5374, file: !369, line: 1638, type: !693)
!5379 = !DILocalVariable(name: "priority", arg: 2, scope: !5374, file: !369, line: 1638, type: !121)
!5380 = !DILocation(line: 0, scope: !5374)
!5381 = !DILocation(line: 0, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5374, file: !369, line: 1640, column: 7)
!5383 = !DILocation(line: 1640, column: 7, scope: !5374)
!5384 = !DILocation(line: 1648, column: 1, scope: !5374)
!5385 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5293, file: !5293, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !5386)
!5386 = !{!5387}
!5387 = !DILocalVariable(name: "unused", arg: 1, scope: !5385, file: !5293, line: 155, type: !13)
!5388 = !DILocation(line: 0, scope: !5385)
!5389 = !DILocation(line: 159, column: 2, scope: !5385)
!5390 = !DILocation(line: 160, column: 1, scope: !5385)
!5391 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5392, file: !5392, line: 87, type: !3124, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !335)
!5392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5393 = !DILocation(line: 89, column: 2, scope: !5391)
!5394 = !DILocation(line: 90, column: 2, scope: !5391)
!5395 = !DILocation(line: 91, column: 1, scope: !5391)
!5396 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5392, file: !5392, line: 23, type: !3124, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!5397 = !DISubprogram(name: "z_arm_int_exit", scope: !5398, file: !5398, line: 153, type: !3124, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!5398 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5399 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5400, file: !5400, line: 256, type: !3124, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !335)
!5400 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5401 = !DILocation(line: 258, column: 2, scope: !5399)
!5402 = !DILocation(line: 262, column: 2, scope: !5399)
!5403 = !DILocation(line: 263, column: 2, scope: !5399)
!5404 = !DILocation(line: 267, column: 2, scope: !5399)
!5405 = !DILocation(line: 268, column: 2, scope: !5399)
!5406 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5400, file: !5400, line: 53, type: !3124, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !335)
!5407 = !DILocation(line: 55, column: 12, scope: !5406)
!5408 = !DILocation(line: 271, column: 3, scope: !5409, inlinedAt: !5410)
!5409 = distinct !DISubprogram(name: "__DSB", scope: !5341, file: !5341, line: 269, type: !3124, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !335)
!5410 = distinct !DILocation(line: 56, column: 2, scope: !5406)
!5411 = !{i64 2425366}
!5412 = !DILocation(line: 260, column: 3, scope: !5413, inlinedAt: !5414)
!5413 = distinct !DISubprogram(name: "__ISB", scope: !5341, file: !5341, line: 258, type: !3124, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !335)
!5414 = distinct !DILocation(line: 57, column: 2, scope: !5406)
!5415 = !{i64 2425083}
!5416 = !DILocation(line: 58, column: 1, scope: !5406)
!5417 = distinct !DISubprogram(name: "arch_swap", scope: !5418, file: !5418, line: 33, type: !5351, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !5419)
!5418 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5419 = !{!5420}
!5420 = !DILocalVariable(name: "key", arg: 1, scope: !5417, file: !5418, line: 33, type: !32)
!5421 = !DILocation(line: 0, scope: !5417)
!5422 = !DILocation(line: 36, column: 2, scope: !5417)
!5423 = !DILocation(line: 36, column: 17, scope: !5417)
!5424 = !DILocation(line: 36, column: 25, scope: !5417)
!5425 = !DILocation(line: 37, column: 37, scope: !5417)
!5426 = !DILocation(line: 37, column: 17, scope: !5417)
!5427 = !DILocation(line: 37, column: 35, scope: !5417)
!5428 = !DILocation(line: 41, column: 12, scope: !5417)
!5429 = !DILocalVariable(name: "key", arg: 1, scope: !5430, file: !5051, line: 84, type: !32)
!5430 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !5431)
!5431 = !{!5429}
!5432 = !DILocation(line: 0, scope: !5430, inlinedAt: !5433)
!5433 = distinct !DILocation(line: 44, column: 2, scope: !5417)
!5434 = !DILocation(line: 95, column: 2, scope: !5430, inlinedAt: !5433)
!5435 = !{i64 1648366}
!5436 = !DILocation(line: 53, column: 9, scope: !5417)
!5437 = !DILocation(line: 53, column: 24, scope: !5417)
!5438 = !DILocation(line: 53, column: 2, scope: !5417)
!5439 = distinct !DISubprogram(name: "arch_new_thread", scope: !5440, file: !5440, line: 56, type: !5441, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !5548)
!5440 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5441 = !DISubroutineType(types: !5442)
!5442 = !{null, !5443, !5543, !1019, !3564, !102, !102, !102}
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5444, size: 32)
!5444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !5445)
!5445 = !{!5446, !5504, !5516, !5517, !5518, !5519, !5525, !5538}
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5444, file: !224, line: 247, baseType: !5447, size: 384)
!5447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !5448)
!5448 = !{!5449, !5473, !5480, !5481, !5482, !5491, !5492, !5493}
!5449 = !DIDerivedType(tag: DW_TAG_member, scope: !5447, file: !224, line: 60, baseType: !5450, size: 64)
!5450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5447, file: !224, line: 60, size: 64, elements: !5451)
!5451 = !{!5452, !5467}
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5450, file: !224, line: 61, baseType: !5453, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !5454)
!5454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !5455)
!5455 = !{!5456, !5462}
!5456 = !DIDerivedType(tag: DW_TAG_member, scope: !5454, file: !234, line: 38, baseType: !5457, size: 32)
!5457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5454, file: !234, line: 38, size: 32, elements: !5458)
!5458 = !{!5459, !5461}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5457, file: !234, line: 39, baseType: !5460, size: 32)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 32)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5457, file: !234, line: 40, baseType: !5460, size: 32)
!5462 = !DIDerivedType(tag: DW_TAG_member, scope: !5454, file: !234, line: 42, baseType: !5463, size: 32, offset: 32)
!5463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5454, file: !234, line: 42, size: 32, elements: !5464)
!5464 = !{!5465, !5466}
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5463, file: !234, line: 43, baseType: !5460, size: 32)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5463, file: !234, line: 44, baseType: !5460, size: 32)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5450, file: !224, line: 62, baseType: !5468, size: 64)
!5468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !5469)
!5469 = !{!5470}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5468, file: !250, line: 50, baseType: !5471, size: 64)
!5471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5472, size: 64, elements: !255)
!5472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5468, size: 32)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5447, file: !224, line: 68, baseType: !5474, size: 32, offset: 64)
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5475, size: 32)
!5475 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !5476)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !5477)
!5477 = !{!5478}
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5476, file: !260, line: 232, baseType: !5479, size: 64)
!5479 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !5454)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5447, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5447, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!5482 = !DIDerivedType(tag: DW_TAG_member, scope: !5447, file: !224, line: 90, baseType: !5483, size: 16, offset: 112)
!5483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5447, file: !224, line: 90, size: 16, elements: !5484)
!5484 = !{!5485, !5490}
!5485 = !DIDerivedType(tag: DW_TAG_member, scope: !5483, file: !224, line: 91, baseType: !5486, size: 16)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5483, file: !224, line: 91, size: 16, elements: !5487)
!5487 = !{!5488, !5489}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5486, file: !224, line: 96, baseType: !274, size: 8)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5486, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5483, file: !224, line: 100, baseType: !278, size: 16)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5447, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5447, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5447, file: !224, line: 131, baseType: !5494, size: 192, offset: 192)
!5494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !5495)
!5495 = !{!5496, !5497, !5503}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5494, file: !260, line: 245, baseType: !5453, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5494, file: !260, line: 246, baseType: !5498, size: 32, offset: 64)
!5498 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !5499)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 32)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{null, !5502}
!5502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 32)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5494, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5444, file: !224, line: 250, baseType: !5505, size: 288, offset: 384)
!5505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !5506)
!5506 = !{!5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5505, file: !297, line: 26, baseType: !121, size: 32)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5505, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5505, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5505, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5505, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5505, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5505, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5505, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5505, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5444, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5444, file: !224, line: 256, baseType: !5475, size: 64, offset: 704)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5444, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5444, file: !224, line: 300, baseType: !5520, size: 96, offset: 800)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !5521)
!5521 = !{!5522, !5523, !5524}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5520, file: !224, line: 153, baseType: !22, size: 32)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5520, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5520, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5444, file: !224, line: 325, baseType: !5526, size: 32, offset: 896)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 32)
!5527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !5528)
!5528 = !{!5529, !5535, !5536}
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5527, file: !320, line: 5074, baseType: !5530, size: 96)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !5531)
!5531 = !{!5532, !5533, !5534}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5530, file: !324, line: 57, baseType: !327, size: 32)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5530, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5530, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5527, file: !320, line: 5075, baseType: !5475, size: 64, offset: 96)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5527, file: !320, line: 5076, baseType: !5537, offset: 160)
!5537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5444, file: !224, line: 343, baseType: !5539, size: 64, offset: 928)
!5539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !5540)
!5540 = !{!5541, !5542}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5539, file: !297, line: 63, baseType: !121, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5539, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 32)
!5544 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3565, line: 44, baseType: !5545)
!5545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2100, line: 47, size: 8, elements: !5546)
!5546 = !{!5547}
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5545, file: !2100, line: 48, baseType: !159, size: 8)
!5548 = !{!5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556}
!5549 = !DILocalVariable(name: "thread", arg: 1, scope: !5439, file: !5440, line: 56, type: !5443)
!5550 = !DILocalVariable(name: "stack", arg: 2, scope: !5439, file: !5440, line: 56, type: !5543)
!5551 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5439, file: !5440, line: 57, type: !1019)
!5552 = !DILocalVariable(name: "entry", arg: 4, scope: !5439, file: !5440, line: 57, type: !3564)
!5553 = !DILocalVariable(name: "p1", arg: 5, scope: !5439, file: !5440, line: 58, type: !102)
!5554 = !DILocalVariable(name: "p2", arg: 6, scope: !5439, file: !5440, line: 58, type: !102)
!5555 = !DILocalVariable(name: "p3", arg: 7, scope: !5439, file: !5440, line: 58, type: !102)
!5556 = !DILocalVariable(name: "iframe", scope: !5439, file: !5440, line: 60, type: !2733)
!5557 = !DILocation(line: 0, scope: !5439)
!5558 = !DILocation(line: 85, column: 11, scope: !5439)
!5559 = !DILocation(line: 93, column: 10, scope: !5439)
!5560 = !DILocation(line: 98, column: 13, scope: !5439)
!5561 = !DILocation(line: 100, column: 15, scope: !5439)
!5562 = !DILocation(line: 100, column: 10, scope: !5439)
!5563 = !DILocation(line: 100, column: 13, scope: !5439)
!5564 = !DILocation(line: 101, column: 15, scope: !5439)
!5565 = !DILocation(line: 101, column: 10, scope: !5439)
!5566 = !DILocation(line: 101, column: 13, scope: !5439)
!5567 = !DILocation(line: 102, column: 15, scope: !5439)
!5568 = !DILocation(line: 102, column: 10, scope: !5439)
!5569 = !DILocation(line: 102, column: 13, scope: !5439)
!5570 = !DILocation(line: 103, column: 15, scope: !5439)
!5571 = !DILocation(line: 103, column: 10, scope: !5439)
!5572 = !DILocation(line: 103, column: 13, scope: !5439)
!5573 = !DILocation(line: 106, column: 10, scope: !5439)
!5574 = !DILocation(line: 106, column: 15, scope: !5439)
!5575 = !DILocation(line: 122, column: 29, scope: !5439)
!5576 = !DILocation(line: 122, column: 23, scope: !5439)
!5577 = !DILocation(line: 122, column: 27, scope: !5439)
!5578 = !DILocation(line: 123, column: 15, scope: !5439)
!5579 = !DILocation(line: 123, column: 23, scope: !5439)
!5580 = !DILocation(line: 143, column: 1, scope: !5439)
!5581 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5440, file: !5440, line: 385, type: !5582, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !5585)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{!121, !5584, !5584}
!5584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5585 = !{!5586, !5587, !5588, !5591}
!5586 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5581, file: !5440, line: 385, type: !5584)
!5587 = !DILocalVariable(name: "psp", arg: 2, scope: !5581, file: !5440, line: 385, type: !5584)
!5588 = !DILocalVariable(name: "thread", scope: !5581, file: !5440, line: 388, type: !5589)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 32)
!5590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5444)
!5591 = !DILocalVariable(name: "guard_len", scope: !5581, file: !5440, line: 405, type: !121)
!5592 = !DILocation(line: 0, scope: !5581)
!5593 = !DILocation(line: 388, column: 34, scope: !5581)
!5594 = !DILocation(line: 390, column: 13, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5581, file: !5440, line: 390, column: 6)
!5596 = !DILocation(line: 390, column: 6, scope: !5581)
!5597 = !DILocation(line: 438, column: 6, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5581, file: !5440, line: 438, column: 6)
!5599 = !DILocation(line: 438, column: 6, scope: !5581)
!5600 = !DILocation(line: 442, column: 3, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5598, file: !5440, line: 440, column: 22)
!5602 = !DILocation(line: 455, column: 1, scope: !5581)
!5603 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5440, file: !5440, line: 530, type: !5604, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !5606)
!5604 = !DISubroutineType(types: !5605)
!5605 = !{null, !5443, !1019, !3564}
!5606 = !{!5607, !5608, !5609}
!5607 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5603, file: !5440, line: 530, type: !5443)
!5608 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5603, file: !5440, line: 530, type: !1019)
!5609 = !DILocalVariable(name: "_main", arg: 3, scope: !5603, file: !5440, line: 531, type: !3564)
!5610 = !DILocation(line: 0, scope: !5603)
!5611 = !DILocation(line: 535, column: 11, scope: !5603)
!5612 = !DILocation(line: 560, column: 2, scope: !5603)
!5613 = !DILocation(line: 576, column: 2, scope: !5603)
!5614 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5615 = !DILocation(line: 603, column: 2, scope: !5603)
!5616 = distinct !DISubprogram(name: "z_arm_fault", scope: !5617, file: !5617, line: 1036, type: !5618, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5633)
!5617 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5618 = !DISubroutineType(types: !5619)
!5619 = !{null, !121, !121, !121, !5620}
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 32)
!5621 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !297, line: 37, baseType: !5622)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !5623)
!5623 = !{!5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5622, file: !297, line: 26, baseType: !121, size: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5622, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5622, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5622, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5622, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5622, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5622, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5622, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5622, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!5633 = !{!5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641, !5642, !5643}
!5634 = !DILocalVariable(name: "msp", arg: 1, scope: !5616, file: !5617, line: 1036, type: !121)
!5635 = !DILocalVariable(name: "psp", arg: 2, scope: !5616, file: !5617, line: 1036, type: !121)
!5636 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5616, file: !5617, line: 1036, type: !121)
!5637 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5616, file: !5617, line: 1037, type: !5620)
!5638 = !DILocalVariable(name: "reason", scope: !5616, file: !5617, line: 1039, type: !121)
!5639 = !DILocalVariable(name: "fault", scope: !5616, file: !5617, line: 1040, type: !103)
!5640 = !DILocalVariable(name: "recoverable", scope: !5616, file: !5617, line: 1041, type: !170)
!5641 = !DILocalVariable(name: "nested_exc", scope: !5616, file: !5617, line: 1041, type: !170)
!5642 = !DILocalVariable(name: "esf", scope: !5616, file: !5617, line: 1042, type: !2801)
!5643 = !DILocalVariable(name: "esf_copy", scope: !5616, file: !5617, line: 1047, type: !2802)
!5644 = !DILocation(line: 0, scope: !5616)
!5645 = !DILocation(line: 1040, column: 19, scope: !5616)
!5646 = !DILocation(line: 1040, column: 24, scope: !5616)
!5647 = !DILocation(line: 1041, column: 2, scope: !5616)
!5648 = !DILocation(line: 1047, column: 2, scope: !5616)
!5649 = !DILocation(line: 1047, column: 15, scope: !5616)
!5650 = !DILocalVariable(name: "key", arg: 1, scope: !5651, file: !5051, line: 84, type: !32)
!5651 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5652)
!5652 = !{!5650}
!5653 = !DILocation(line: 0, scope: !5651, inlinedAt: !5654)
!5654 = distinct !DILocation(line: 1050, column: 2, scope: !5616)
!5655 = !DILocation(line: 95, column: 2, scope: !5651, inlinedAt: !5654)
!5656 = !{i64 1681610}
!5657 = !DILocation(line: 1055, column: 9, scope: !5616)
!5658 = !DILocation(line: 1063, column: 11, scope: !5616)
!5659 = !DILocation(line: 1064, column: 6, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5616, file: !5617, line: 1064, column: 6)
!5661 = !{i8 0, i8 2}
!5662 = !DILocation(line: 1064, column: 6, scope: !5616)
!5663 = !DILocation(line: 1070, column: 20, scope: !5616)
!5664 = !DILocation(line: 1070, column: 2, scope: !5616)
!5665 = !DILocation(line: 1089, column: 6, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5616, file: !5617, line: 1089, column: 6)
!5667 = !DILocation(line: 0, scope: !5666)
!5668 = !DILocation(line: 1089, column: 6, scope: !5616)
!5669 = !DILocation(line: 1090, column: 28, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !5617, line: 1090, column: 7)
!5671 = distinct !DILexicalBlock(scope: !5666, file: !5617, line: 1089, column: 18)
!5672 = !DILocation(line: 1090, column: 44, scope: !5670)
!5673 = !DILocation(line: 1090, column: 7, scope: !5671)
!5674 = !DILocation(line: 1091, column: 24, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5670, file: !5617, line: 1090, column: 50)
!5676 = !DILocation(line: 1092, column: 3, scope: !5675)
!5677 = !DILocation(line: 1094, column: 23, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5666, file: !5617, line: 1093, column: 9)
!5679 = !DILocation(line: 1097, column: 2, scope: !5616)
!5680 = !DILocation(line: 1098, column: 1, scope: !5616)
!5681 = distinct !DISubprogram(name: "get_esf", scope: !5617, file: !5617, line: 894, type: !5682, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5685)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{!2801, !121, !121, !121, !5684}
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!5685 = !{!5686, !5687, !5688, !5689, !5690, !5691}
!5686 = !DILocalVariable(name: "msp", arg: 1, scope: !5681, file: !5617, line: 894, type: !121)
!5687 = !DILocalVariable(name: "psp", arg: 2, scope: !5681, file: !5617, line: 894, type: !121)
!5688 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5681, file: !5617, line: 894, type: !121)
!5689 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5681, file: !5617, line: 895, type: !5684)
!5690 = !DILocalVariable(name: "alternative_state_exc", scope: !5681, file: !5617, line: 897, type: !170)
!5691 = !DILocalVariable(name: "ptr_esf", scope: !5681, file: !5617, line: 898, type: !2801)
!5692 = !DILocation(line: 0, scope: !5681)
!5693 = !DILocation(line: 900, column: 14, scope: !5681)
!5694 = !DILocation(line: 902, column: 49, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5681, file: !5617, line: 902, column: 6)
!5696 = !DILocation(line: 902, column: 6, scope: !5681)
!5697 = !DILocation(line: 983, column: 18, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5681, file: !5617, line: 983, column: 6)
!5699 = !DILocation(line: 991, column: 7, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !5617, line: 990, column: 30)
!5701 = distinct !DILexicalBlock(scope: !5681, file: !5617, line: 990, column: 6)
!5702 = !DILocation(line: 998, column: 16, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5704, file: !5617, line: 995, column: 10)
!5704 = distinct !DILexicalBlock(scope: !5700, file: !5617, line: 991, column: 7)
!5705 = !DILocation(line: 1002, column: 2, scope: !5681)
!5706 = !DILocation(line: 1003, column: 1, scope: !5681)
!5707 = distinct !DISubprogram(name: "fault_handle", scope: !5617, file: !5617, line: 786, type: !5708, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5710)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!121, !2801, !103, !5684}
!5710 = !{!5711, !5712, !5713, !5714}
!5711 = !DILocalVariable(name: "esf", arg: 1, scope: !5707, file: !5617, line: 786, type: !2801)
!5712 = !DILocalVariable(name: "fault", arg: 2, scope: !5707, file: !5617, line: 786, type: !103)
!5713 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5707, file: !5617, line: 786, type: !5684)
!5714 = !DILocalVariable(name: "reason", scope: !5707, file: !5617, line: 788, type: !121)
!5715 = !DILocation(line: 0, scope: !5707)
!5716 = !DILocation(line: 790, column: 15, scope: !5707)
!5717 = !DILocation(line: 792, column: 2, scope: !5707)
!5718 = !DILocation(line: 794, column: 12, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5707, file: !5617, line: 792, column: 17)
!5720 = !DILocation(line: 795, column: 3, scope: !5719)
!5721 = !DILocation(line: 800, column: 12, scope: !5719)
!5722 = !DILocation(line: 801, column: 3, scope: !5719)
!5723 = !DILocation(line: 803, column: 12, scope: !5719)
!5724 = !DILocation(line: 804, column: 3, scope: !5719)
!5725 = !DILocation(line: 806, column: 12, scope: !5719)
!5726 = !DILocation(line: 807, column: 3, scope: !5719)
!5727 = !DILocation(line: 814, column: 3, scope: !5719)
!5728 = !DILocation(line: 815, column: 3, scope: !5719)
!5729 = !DILocation(line: 829, column: 2, scope: !5707)
!5730 = distinct !DISubprogram(name: "hard_fault", scope: !5617, file: !5617, line: 709, type: !5731, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5733)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!121, !2801, !5684}
!5733 = !{!5734, !5735, !5736}
!5734 = !DILocalVariable(name: "esf", arg: 1, scope: !5730, file: !5617, line: 709, type: !2801)
!5735 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5730, file: !5617, line: 709, type: !5684)
!5736 = !DILocalVariable(name: "reason", scope: !5730, file: !5617, line: 711, type: !121)
!5737 = !DILocation(line: 0, scope: !5730)
!5738 = !DILocation(line: 732, column: 15, scope: !5730)
!5739 = !DILocation(line: 734, column: 12, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5730, file: !5617, line: 734, column: 6)
!5741 = !DILocation(line: 734, column: 17, scope: !5740)
!5742 = !DILocation(line: 734, column: 41, scope: !5740)
!5743 = !DILocation(line: 734, column: 6, scope: !5730)
!5744 = !DILocation(line: 736, column: 19, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5740, file: !5617, line: 736, column: 13)
!5746 = !DILocation(line: 736, column: 49, scope: !5745)
!5747 = !DILocation(line: 736, column: 13, scope: !5740)
!5748 = !DILocation(line: 738, column: 19, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !5617, line: 738, column: 13)
!5750 = !DILocation(line: 738, column: 24, scope: !5749)
!5751 = !DILocation(line: 738, column: 47, scope: !5749)
!5752 = !DILocation(line: 738, column: 13, scope: !5745)
!5753 = !DILocation(line: 740, column: 7, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !5617, line: 740, column: 7)
!5755 = distinct !DILexicalBlock(scope: !5749, file: !5617, line: 738, column: 53)
!5756 = !DILocation(line: 740, column: 7, scope: !5755)
!5757 = !DILocation(line: 742, column: 24, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5754, file: !5617, line: 740, column: 38)
!5759 = !DILocation(line: 743, column: 3, scope: !5758)
!5760 = !DILocation(line: 743, column: 20, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5754, file: !5617, line: 743, column: 14)
!5762 = !DILocation(line: 743, column: 25, scope: !5761)
!5763 = !DILocation(line: 743, column: 52, scope: !5761)
!5764 = !DILocation(line: 743, column: 14, scope: !5754)
!5765 = !DILocation(line: 744, column: 13, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5761, file: !5617, line: 743, column: 58)
!5767 = !DILocation(line: 745, column: 3, scope: !5766)
!5768 = !DILocation(line: 745, column: 20, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5761, file: !5617, line: 745, column: 14)
!5770 = !DILocation(line: 745, column: 25, scope: !5769)
!5771 = !DILocation(line: 745, column: 52, scope: !5769)
!5772 = !DILocation(line: 745, column: 14, scope: !5761)
!5773 = !DILocation(line: 746, column: 13, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5769, file: !5617, line: 745, column: 58)
!5775 = !DILocation(line: 747, column: 3, scope: !5774)
!5776 = !DILocation(line: 747, column: 20, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5769, file: !5617, line: 747, column: 14)
!5778 = !DILocation(line: 747, column: 52, scope: !5777)
!5779 = !DILocation(line: 747, column: 14, scope: !5769)
!5780 = !DILocation(line: 748, column: 13, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5777, file: !5617, line: 747, column: 58)
!5782 = !DILocation(line: 753, column: 3, scope: !5781)
!5783 = !DILocation(line: 766, column: 2, scope: !5730)
!5784 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5617, file: !5617, line: 229, type: !5708, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5785)
!5785 = !{!5786, !5787, !5788, !5789, !5790, !5791, !5794}
!5786 = !DILocalVariable(name: "esf", arg: 1, scope: !5784, file: !5617, line: 229, type: !2801)
!5787 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5784, file: !5617, line: 229, type: !103)
!5788 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5784, file: !5617, line: 230, type: !5684)
!5789 = !DILocalVariable(name: "reason", scope: !5784, file: !5617, line: 232, type: !121)
!5790 = !DILocalVariable(name: "mmfar", scope: !5784, file: !5617, line: 233, type: !121)
!5791 = !DILocalVariable(name: "temp", scope: !5792, file: !5617, line: 254, type: !121)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !5617, line: 244, column: 48)
!5793 = distinct !DILexicalBlock(scope: !5784, file: !5617, line: 244, column: 6)
!5794 = !DILocalVariable(name: "min_stack_ptr", scope: !5795, file: !5617, line: 309, type: !121)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !5617, line: 308, column: 43)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !5617, line: 308, column: 7)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !5617, line: 289, column: 40)
!5798 = distinct !DILexicalBlock(scope: !5784, file: !5617, line: 288, column: 6)
!5799 = !DILocation(line: 0, scope: !5784)
!5800 = !DILocation(line: 237, column: 12, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5784, file: !5617, line: 237, column: 6)
!5802 = !DILocation(line: 241, column: 12, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5784, file: !5617, line: 241, column: 6)
!5804 = !DILocation(line: 244, column: 12, scope: !5793)
!5805 = !DILocation(line: 244, column: 17, scope: !5793)
!5806 = !DILocation(line: 244, column: 42, scope: !5793)
!5807 = !DILocation(line: 244, column: 6, scope: !5784)
!5808 = !DILocation(line: 254, column: 24, scope: !5792)
!5809 = !DILocation(line: 0, scope: !5792)
!5810 = !DILocation(line: 256, column: 13, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5792, file: !5617, line: 256, column: 7)
!5812 = !DILocation(line: 256, column: 18, scope: !5811)
!5813 = !DILocation(line: 256, column: 44, scope: !5811)
!5814 = !DILocation(line: 256, column: 7, scope: !5792)
!5815 = !DILocation(line: 259, column: 24, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !5617, line: 259, column: 8)
!5817 = distinct !DILexicalBlock(scope: !5811, file: !5617, line: 256, column: 50)
!5818 = !DILocation(line: 259, column: 8, scope: !5817)
!5819 = !DILocation(line: 261, column: 15, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5816, file: !5617, line: 259, column: 30)
!5821 = !DILocation(line: 262, column: 4, scope: !5820)
!5822 = !DILocation(line: 265, column: 12, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5784, file: !5617, line: 265, column: 6)
!5824 = !DILocation(line: 288, column: 12, scope: !5798)
!5825 = !DILocation(line: 288, column: 17, scope: !5798)
!5826 = !DILocation(line: 288, column: 41, scope: !5798)
!5827 = !DILocation(line: 289, column: 9, scope: !5798)
!5828 = !DILocation(line: 289, column: 14, scope: !5798)
!5829 = !DILocation(line: 288, column: 6, scope: !5784)
!5830 = !DILocation(line: 308, column: 12, scope: !5796)
!5831 = !DILocation(line: 308, column: 17, scope: !5796)
!5832 = !DILocation(line: 308, column: 7, scope: !5797)
!5833 = !DILocation(line: 310, column: 6, scope: !5795)
!5834 = !DILocation(line: 309, column: 29, scope: !5795)
!5835 = !DILocation(line: 0, scope: !5795)
!5836 = !DILocation(line: 312, column: 8, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5795, file: !5617, line: 312, column: 8)
!5838 = !DILocation(line: 312, column: 8, scope: !5795)
!5839 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5840, file: !5341, line: 1099, type: !121)
!5840 = distinct !DISubprogram(name: "__set_PSP", scope: !5341, file: !5341, line: 1099, type: !5075, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5841)
!5841 = !{!5839}
!5842 = !DILocation(line: 0, scope: !5840, inlinedAt: !5843)
!5843 = distinct !DILocation(line: 338, column: 5, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5837, file: !5617, line: 312, column: 23)
!5845 = !DILocation(line: 1101, column: 3, scope: !5840, inlinedAt: !5843)
!5846 = !{i64 2476335}
!5847 = !DILocation(line: 341, column: 4, scope: !5844)
!5848 = !DILocation(line: 366, column: 12, scope: !5784)
!5849 = !DILocation(line: 369, column: 15, scope: !5784)
!5850 = !DILocation(line: 371, column: 2, scope: !5784)
!5851 = distinct !DISubprogram(name: "bus_fault", scope: !5617, file: !5617, line: 383, type: !5852, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5854)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!103, !2801, !103, !5684}
!5854 = !{!5855, !5856, !5857, !5858, !5859}
!5855 = !DILocalVariable(name: "esf", arg: 1, scope: !5851, file: !5617, line: 383, type: !2801)
!5856 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5851, file: !5617, line: 383, type: !103)
!5857 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5851, file: !5617, line: 383, type: !5684)
!5858 = !DILocalVariable(name: "reason", scope: !5851, file: !5617, line: 385, type: !121)
!5859 = !DILocalVariable(name: "bfar", scope: !5860, file: !5617, line: 405, type: !121)
!5860 = distinct !DILexicalBlock(scope: !5861, file: !5617, line: 395, column: 42)
!5861 = distinct !DILexicalBlock(scope: !5851, file: !5617, line: 395, column: 6)
!5862 = !DILocation(line: 0, scope: !5851)
!5863 = !DILocation(line: 389, column: 11, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5851, file: !5617, line: 389, column: 6)
!5865 = !DILocation(line: 392, column: 11, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5851, file: !5617, line: 392, column: 6)
!5867 = !DILocation(line: 395, column: 11, scope: !5861)
!5868 = !DILocation(line: 395, column: 16, scope: !5861)
!5869 = !DILocation(line: 395, column: 6, scope: !5851)
!5870 = !DILocation(line: 405, column: 3, scope: !5860)
!5871 = !DILocation(line: 0, scope: !5860)
!5872 = !DILocation(line: 407, column: 13, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5860, file: !5617, line: 407, column: 7)
!5874 = !DILocation(line: 407, column: 18, scope: !5873)
!5875 = !DILocation(line: 407, column: 44, scope: !5873)
!5876 = !DILocation(line: 407, column: 7, scope: !5860)
!5877 = !DILocation(line: 411, column: 15, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5879, file: !5617, line: 409, column: 30)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !5617, line: 409, column: 8)
!5880 = distinct !DILexicalBlock(scope: !5873, file: !5617, line: 407, column: 50)
!5881 = !DILocation(line: 412, column: 4, scope: !5878)
!5882 = !DILocation(line: 415, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5851, file: !5617, line: 415, column: 6)
!5884 = !DILocation(line: 418, column: 12, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5851, file: !5617, line: 418, column: 6)
!5886 = !DILocation(line: 524, column: 12, scope: !5851)
!5887 = !DILocation(line: 526, column: 15, scope: !5851)
!5888 = !DILocation(line: 528, column: 2, scope: !5851)
!5889 = distinct !DISubprogram(name: "usage_fault", scope: !5617, file: !5617, line: 539, type: !5890, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5894)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!121, !5892}
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 32)
!5893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2802)
!5894 = !{!5895, !5896}
!5895 = !DILocalVariable(name: "esf", arg: 1, scope: !5889, file: !5617, line: 539, type: !5892)
!5896 = !DILocalVariable(name: "reason", scope: !5889, file: !5617, line: 541, type: !121)
!5897 = !DILocation(line: 0, scope: !5889)
!5898 = !DILocation(line: 546, column: 12, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5889, file: !5617, line: 546, column: 6)
!5900 = !DILocation(line: 549, column: 12, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5889, file: !5617, line: 549, column: 6)
!5902 = !DILocation(line: 567, column: 12, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5889, file: !5617, line: 567, column: 6)
!5904 = !DILocation(line: 570, column: 12, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5889, file: !5617, line: 570, column: 6)
!5906 = !DILocation(line: 573, column: 12, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5889, file: !5617, line: 573, column: 6)
!5908 = !DILocation(line: 576, column: 12, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5889, file: !5617, line: 576, column: 6)
!5910 = !DILocation(line: 581, column: 12, scope: !5889)
!5911 = !DILocation(line: 583, column: 2, scope: !5889)
!5912 = distinct !DISubprogram(name: "debug_monitor", scope: !5617, file: !5617, line: 632, type: !5913, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5915)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{null, !2801, !5684}
!5915 = !{!5916, !5917}
!5916 = !DILocalVariable(name: "esf", arg: 1, scope: !5912, file: !5617, line: 632, type: !2801)
!5917 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5912, file: !5617, line: 632, type: !5684)
!5918 = !DILocation(line: 0, scope: !5912)
!5919 = !DILocation(line: 634, column: 15, scope: !5912)
!5920 = !DILocation(line: 652, column: 1, scope: !5912)
!5921 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5617, file: !5617, line: 658, type: !5922, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !5924)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!170, !2801}
!5924 = !{!5925, !5926, !5927}
!5925 = !DILocalVariable(name: "esf", arg: 1, scope: !5921, file: !5617, line: 658, type: !2801)
!5926 = !DILocalVariable(name: "ret_addr", scope: !5921, file: !5617, line: 660, type: !2844)
!5927 = !DILocalVariable(name: "fault_insn", scope: !5921, file: !5617, line: 686, type: !278)
!5928 = !DILocation(line: 0, scope: !5921)
!5929 = !DILocation(line: 660, column: 46, scope: !5921)
!5930 = !DILocation(line: 660, column: 23, scope: !5921)
!5931 = !DILocation(line: 682, column: 11, scope: !5921)
!5932 = !DILocation(line: 271, column: 3, scope: !5933, inlinedAt: !5934)
!5933 = distinct !DISubprogram(name: "__DSB", scope: !5341, file: !5341, line: 269, type: !3124, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !335)
!5934 = distinct !DILocation(line: 683, column: 2, scope: !5921)
!5935 = !{i64 2452470}
!5936 = !DILocation(line: 260, column: 3, scope: !5937, inlinedAt: !5938)
!5937 = distinct !DISubprogram(name: "__ISB", scope: !5341, file: !5341, line: 258, type: !3124, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !335)
!5938 = distinct !DILocation(line: 684, column: 2, scope: !5921)
!5939 = !{i64 2452187}
!5940 = !DILocation(line: 686, column: 35, scope: !5921)
!5941 = !DILocation(line: 686, column: 24, scope: !5921)
!5942 = !DILocation(line: 688, column: 11, scope: !5921)
!5943 = !DILocation(line: 271, column: 3, scope: !5933, inlinedAt: !5944)
!5944 = distinct !DILocation(line: 689, column: 2, scope: !5921)
!5945 = !DILocation(line: 260, column: 3, scope: !5937, inlinedAt: !5946)
!5946 = distinct !DILocation(line: 690, column: 2, scope: !5921)
!5947 = !DILocation(line: 693, column: 45, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5921, file: !5617, line: 693, column: 6)
!5949 = !DILocation(line: 699, column: 1, scope: !5921)
!5950 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5617, file: !5617, line: 1107, type: !3124, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !335)
!5951 = !DILocation(line: 1111, column: 11, scope: !5950)
!5952 = !DILocation(line: 1136, column: 1, scope: !5950)
!5953 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5954, file: !5954, line: 26, type: !3124, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !5955)
!5954 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5955 = !{!5956}
!5956 = !DILocalVariable(name: "irq", scope: !5953, file: !5954, line: 28, type: !103)
!5957 = !DILocation(line: 0, scope: !5953)
!5958 = !DILocation(line: 30, column: 2, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !5954, line: 30, column: 2)
!5960 = !DILocation(line: 31, column: 3, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !5954, line: 30, column: 39)
!5962 = distinct !DILexicalBlock(scope: !5959, file: !5954, line: 30, column: 2)
!5963 = !DILocation(line: 30, column: 35, scope: !5962)
!5964 = !DILocation(line: 30, column: 13, scope: !5962)
!5965 = distinct !{!5965, !5958, !5966}
!5966 = !DILocation(line: 32, column: 2, scope: !5959)
!5967 = !DILocation(line: 33, column: 1, scope: !5953)
!5968 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !5375, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !5969)
!5969 = !{!5970, !5971}
!5970 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5968, file: !369, line: 1638, type: !693)
!5971 = !DILocalVariable(name: "priority", arg: 2, scope: !5968, file: !369, line: 1638, type: !121)
!5972 = !DILocation(line: 0, scope: !5968)
!5973 = !DILocation(line: 1640, column: 7, scope: !5968)
!5974 = !DILocation(line: 0, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5968, file: !369, line: 1640, column: 7)
!5976 = !DILocation(line: 1648, column: 1, scope: !5968)
!5977 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5978, file: !5978, line: 27, type: !5979, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !6082)
!5978 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5979 = !DISubroutineType(types: !5980)
!5980 = !{null, !5981}
!5981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !5982)
!5982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5983, size: 32)
!5983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !5984)
!5984 = !{!5985, !6043, !6055, !6056, !6057, !6058, !6064, !6077}
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5983, file: !224, line: 247, baseType: !5986, size: 384)
!5986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !5987)
!5987 = !{!5988, !6012, !6019, !6020, !6021, !6030, !6031, !6032}
!5988 = !DIDerivedType(tag: DW_TAG_member, scope: !5986, file: !224, line: 60, baseType: !5989, size: 64)
!5989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5986, file: !224, line: 60, size: 64, elements: !5990)
!5990 = !{!5991, !6006}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5989, file: !224, line: 61, baseType: !5992, size: 64)
!5992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !5993)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !5994)
!5994 = !{!5995, !6001}
!5995 = !DIDerivedType(tag: DW_TAG_member, scope: !5993, file: !234, line: 38, baseType: !5996, size: 32)
!5996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5993, file: !234, line: 38, size: 32, elements: !5997)
!5997 = !{!5998, !6000}
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5996, file: !234, line: 39, baseType: !5999, size: 32)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5993, size: 32)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5996, file: !234, line: 40, baseType: !5999, size: 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, scope: !5993, file: !234, line: 42, baseType: !6002, size: 32, offset: 32)
!6002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5993, file: !234, line: 42, size: 32, elements: !6003)
!6003 = !{!6004, !6005}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6002, file: !234, line: 43, baseType: !5999, size: 32)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6002, file: !234, line: 44, baseType: !5999, size: 32)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5989, file: !224, line: 62, baseType: !6007, size: 64)
!6007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !6008)
!6008 = !{!6009}
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6007, file: !250, line: 50, baseType: !6010, size: 64)
!6010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6011, size: 64, elements: !255)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6007, size: 32)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5986, file: !224, line: 68, baseType: !6013, size: 32, offset: 64)
!6013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6014, size: 32)
!6014 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !6015)
!6015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !6016)
!6016 = !{!6017}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6015, file: !260, line: 232, baseType: !6018, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !5993)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5986, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5986, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!6021 = !DIDerivedType(tag: DW_TAG_member, scope: !5986, file: !224, line: 90, baseType: !6022, size: 16, offset: 112)
!6022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5986, file: !224, line: 90, size: 16, elements: !6023)
!6023 = !{!6024, !6029}
!6024 = !DIDerivedType(tag: DW_TAG_member, scope: !6022, file: !224, line: 91, baseType: !6025, size: 16)
!6025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6022, file: !224, line: 91, size: 16, elements: !6026)
!6026 = !{!6027, !6028}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6025, file: !224, line: 96, baseType: !274, size: 8)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6025, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6022, file: !224, line: 100, baseType: !278, size: 16)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5986, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5986, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5986, file: !224, line: 131, baseType: !6033, size: 192, offset: 192)
!6033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !6034)
!6034 = !{!6035, !6036, !6042}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6033, file: !260, line: 245, baseType: !5992, size: 64)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6033, file: !260, line: 246, baseType: !6037, size: 32, offset: 64)
!6037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !6038)
!6038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6039, size: 32)
!6039 = !DISubroutineType(types: !6040)
!6040 = !{null, !6041}
!6041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 32)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6033, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5983, file: !224, line: 250, baseType: !6044, size: 288, offset: 384)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !6045)
!6045 = !{!6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6044, file: !297, line: 26, baseType: !121, size: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6044, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6044, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6044, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6044, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6044, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6044, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6044, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6044, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5983, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5983, file: !224, line: 256, baseType: !6014, size: 64, offset: 704)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5983, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5983, file: !224, line: 300, baseType: !6059, size: 96, offset: 800)
!6059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !6060)
!6060 = !{!6061, !6062, !6063}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6059, file: !224, line: 153, baseType: !22, size: 32)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6059, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6059, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5983, file: !224, line: 325, baseType: !6065, size: 32, offset: 896)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 32)
!6066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !6067)
!6067 = !{!6068, !6074, !6075}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6066, file: !320, line: 5074, baseType: !6069, size: 96)
!6069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !6070)
!6070 = !{!6071, !6072, !6073}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6069, file: !324, line: 57, baseType: !327, size: 32)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6069, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6069, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6066, file: !320, line: 5075, baseType: !6014, size: 64, offset: 96)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6066, file: !320, line: 5076, baseType: !6076, offset: 160)
!6076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5983, file: !224, line: 343, baseType: !6078, size: 64, offset: 928)
!6078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !6079)
!6079 = !{!6080, !6081}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6078, file: !297, line: 63, baseType: !121, size: 32)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6078, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!6082 = !{!6083}
!6083 = !DILocalVariable(name: "thread", arg: 1, scope: !5977, file: !5978, line: 27, type: !5981)
!6084 = !DILocation(line: 0, scope: !5977)
!6085 = !DILocation(line: 29, column: 6, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !5977, file: !5978, line: 29, column: 6)
!6087 = !DILocation(line: 29, column: 15, scope: !6086)
!6088 = !DILocation(line: 29, column: 6, scope: !5977)
!6089 = !DILocation(line: 1031, column: 3, scope: !6090, inlinedAt: !6093)
!6090 = distinct !DISubprogram(name: "__get_IPSR", scope: !5341, file: !5341, line: 1027, type: !5097, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !6091)
!6091 = !{!6092}
!6092 = !DILocalVariable(name: "result", scope: !6090, file: !5341, line: 1029, type: !121)
!6093 = distinct !DILocation(line: 48, column: 10, scope: !6094, inlinedAt: !6098)
!6094 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6095, file: !6095, line: 46, type: !6096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !335)
!6095 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6096 = !DISubroutineType(types: !6097)
!6097 = !{!170}
!6098 = distinct !DILocation(line: 30, column: 7, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !5978, line: 30, column: 7)
!6100 = distinct !DILexicalBlock(scope: !6086, file: !5978, line: 29, column: 26)
!6101 = !{i64 2441318}
!6102 = !DILocation(line: 0, scope: !6090, inlinedAt: !6093)
!6103 = !DILocation(line: 48, column: 9, scope: !6094, inlinedAt: !6098)
!6104 = !DILocation(line: 30, column: 7, scope: !6100)
!6105 = !DILocation(line: 42, column: 14, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6099, file: !5978, line: 30, column: 25)
!6107 = !DILocation(line: 48, column: 15, scope: !6106)
!6108 = !DILocation(line: 49, column: 3, scope: !6106)
!6109 = !DILocation(line: 52, column: 2, scope: !5977)
!6110 = !DILocation(line: 53, column: 1, scope: !5977)
!6111 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !219, file: !219, line: 127, type: !3124, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !335)
!6112 = !DILocation(line: 134, column: 2, scope: !6111)
!6113 = !DILocation(line: 156, column: 1, scope: !6111)
!6114 = !DILocation(line: 0, scope: !218)
!6115 = !DILocation(line: 289, column: 36, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !218, file: !219, line: 285, column: 2)
!6117 = !DILocation(line: 289, column: 42, scope: !6116)
!6118 = !DILocation(line: 300, column: 36, scope: !218)
!6119 = !DILocation(line: 301, column: 35, scope: !218)
!6120 = !DILocation(line: 302, column: 37, scope: !218)
!6121 = !DILocation(line: 311, column: 2, scope: !218)
!6122 = !DILocation(line: 316, column: 1, scope: !218)
!6123 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !397, file: !397, line: 180, type: !3124, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!6124 = !DILocation(line: 188, column: 12, scope: !6123)
!6125 = !DILocation(line: 271, column: 3, scope: !6126, inlinedAt: !6127)
!6126 = distinct !DISubprogram(name: "__DSB", scope: !5341, file: !5341, line: 269, type: !3124, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!6127 = distinct !DILocation(line: 192, column: 2, scope: !6123)
!6128 = !{i64 2597169}
!6129 = !DILocation(line: 260, column: 3, scope: !6130, inlinedAt: !6131)
!6130 = distinct !DISubprogram(name: "__ISB", scope: !5341, file: !5341, line: 258, type: !3124, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!6131 = distinct !DILocation(line: 193, column: 2, scope: !6123)
!6132 = !{i64 2596886}
!6133 = !DILocation(line: 194, column: 1, scope: !6123)
!6134 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !397, file: !397, line: 199, type: !3124, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!6135 = !DILocation(line: 282, column: 3, scope: !6136, inlinedAt: !6137)
!6136 = distinct !DISubprogram(name: "__DMB", scope: !5341, file: !5341, line: 280, type: !3124, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!6137 = distinct !DILocation(line: 202, column: 2, scope: !6134)
!6138 = !{i64 2597445}
!6139 = !DILocation(line: 205, column: 12, scope: !6134)
!6140 = !DILocation(line: 206, column: 1, scope: !6134)
!6141 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !397, file: !397, line: 275, type: !6142, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6155)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{null, !6144, !1830, !5584, !5584}
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6146)
!6146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !348, line: 52, size: 96, elements: !6147)
!6147 = !{!6148, !6149, !6150}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6146, file: !348, line: 53, baseType: !22, size: 32)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6146, file: !348, line: 54, baseType: !213, size: 32, offset: 32)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6146, file: !348, line: 55, baseType: !6151, size: 32, offset: 64)
!6151 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !354, line: 151, baseType: !6152)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 149, size: 32, elements: !6153)
!6153 = !{!6154}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6152, file: !354, line: 150, baseType: !121, size: 32)
!6155 = !{!6156, !6157, !6158, !6159}
!6156 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6141, file: !397, line: 276, type: !6144)
!6157 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6141, file: !397, line: 276, type: !1830)
!6158 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6141, file: !397, line: 277, type: !5584)
!6159 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6141, file: !397, line: 277, type: !5584)
!6160 = !DILocation(line: 0, scope: !6141)
!6161 = !DILocation(line: 279, column: 6, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6141, file: !397, line: 279, column: 6)
!6163 = !DILocation(line: 285, column: 1, scope: !6141)
!6164 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6165, file: !6165, line: 220, type: !6166, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6168)
!6165 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6166 = !DISubroutineType(types: !6167)
!6167 = !{!103, !6144, !1830, !5584, !5584}
!6168 = !{!6169, !6170, !6171, !6172, !6173}
!6169 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6164, file: !6165, line: 221, type: !6144)
!6170 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6164, file: !6165, line: 221, type: !1830)
!6171 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6164, file: !6165, line: 222, type: !5584)
!6172 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6164, file: !6165, line: 223, type: !5584)
!6173 = !DILocalVariable(name: "mpu_reg_index", scope: !6164, file: !6165, line: 225, type: !103)
!6174 = !DILocation(line: 0, scope: !6164)
!6175 = !DILocation(line: 225, column: 22, scope: !6164)
!6176 = !DILocation(line: 233, column: 18, scope: !6164)
!6177 = !DILocation(line: 236, column: 23, scope: !6164)
!6178 = !DILocation(line: 236, column: 21, scope: !6164)
!6179 = !DILocation(line: 238, column: 2, scope: !6164)
!6180 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !397, file: !397, line: 105, type: !6181, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6183)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!103, !6144, !167, !167, !170}
!6183 = !{!6184, !6185, !6186, !6187, !6188, !6189}
!6184 = !DILocalVariable(name: "regions", arg: 1, scope: !6180, file: !397, line: 106, type: !6144)
!6185 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6180, file: !397, line: 106, type: !167)
!6186 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6180, file: !397, line: 106, type: !167)
!6187 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6180, file: !397, line: 107, type: !170)
!6188 = !DILocalVariable(name: "i", scope: !6180, file: !397, line: 109, type: !103)
!6189 = !DILocalVariable(name: "reg_index", scope: !6180, file: !397, line: 110, type: !103)
!6190 = !DILocation(line: 0, scope: !6180)
!6191 = !DILocation(line: 110, column: 18, scope: !6180)
!6192 = !DILocation(line: 112, column: 16, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !397, line: 112, column: 2)
!6194 = distinct !DILexicalBlock(scope: !6180, file: !397, line: 112, column: 2)
!6195 = !DILocation(line: 112, column: 2, scope: !6194)
!6196 = !DILocation(line: 113, column: 7, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !397, line: 113, column: 7)
!6198 = distinct !DILexicalBlock(scope: !6193, file: !397, line: 112, column: 36)
!6199 = !DILocation(line: 113, column: 18, scope: !6197)
!6200 = !DILocation(line: 113, column: 23, scope: !6197)
!6201 = !DILocation(line: 113, column: 7, scope: !6198)
!6202 = !DILocation(line: 118, column: 23, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6198, file: !397, line: 118, column: 7)
!6204 = !DILocation(line: 119, column: 7, scope: !6203)
!6205 = !DILocation(line: 118, column: 7, scope: !6198)
!6206 = !DILocation(line: 124, column: 36, scope: !6198)
!6207 = !DILocation(line: 124, column: 15, scope: !6198)
!6208 = !DILocation(line: 126, column: 17, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6198, file: !397, line: 126, column: 7)
!6210 = !DILocation(line: 126, column: 7, scope: !6198)
!6211 = !DILocation(line: 131, column: 12, scope: !6198)
!6212 = !DILocation(line: 132, column: 2, scope: !6198)
!6213 = !DILocation(line: 112, column: 32, scope: !6193)
!6214 = distinct !{!6214, !6195, !6215}
!6215 = !DILocation(line: 132, column: 2, scope: !6194)
!6216 = !DILocation(line: 135, column: 1, scope: !6180)
!6217 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6165, file: !6165, line: 63, type: !6218, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!103, !6144}
!6220 = !{!6221, !6222}
!6221 = !DILocalVariable(name: "part", arg: 1, scope: !6217, file: !6165, line: 63, type: !6144)
!6222 = !DILocalVariable(name: "partition_is_valid", scope: !6217, file: !6165, line: 70, type: !103)
!6223 = !DILocation(line: 0, scope: !6217)
!6224 = !DILocation(line: 71, column: 11, scope: !6217)
!6225 = !DILocation(line: 71, column: 37, scope: !6217)
!6226 = !{i32 0, i32 33}
!6227 = !DILocation(line: 72, column: 3, scope: !6217)
!6228 = !DILocation(line: 71, column: 30, scope: !6217)
!6229 = !DILocation(line: 75, column: 11, scope: !6217)
!6230 = !DILocation(line: 75, column: 17, scope: !6217)
!6231 = !DILocation(line: 75, column: 38, scope: !6217)
!6232 = !DILocation(line: 77, column: 2, scope: !6217)
!6233 = distinct !DISubprogram(name: "mpu_configure_region", scope: !397, file: !397, line: 79, type: !6234, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!103, !1830, !6144}
!6236 = !{!6237, !6238, !6239}
!6237 = !DILocalVariable(name: "index", arg: 1, scope: !6233, file: !397, line: 79, type: !1830)
!6238 = !DILocalVariable(name: "new_region", arg: 2, scope: !6233, file: !397, line: 80, type: !6144)
!6239 = !DILocalVariable(name: "region_conf", scope: !6233, file: !397, line: 82, type: !386)
!6240 = !DILocation(line: 0, scope: !6233)
!6241 = !DILocation(line: 82, column: 2, scope: !6233)
!6242 = !DILocation(line: 82, column: 24, scope: !6233)
!6243 = !DILocation(line: 87, column: 33, scope: !6233)
!6244 = !DILocation(line: 87, column: 14, scope: !6233)
!6245 = !DILocation(line: 87, column: 19, scope: !6233)
!6246 = !DILocation(line: 91, column: 55, scope: !6233)
!6247 = !DILocation(line: 92, column: 16, scope: !6233)
!6248 = !DILocation(line: 92, column: 53, scope: !6233)
!6249 = !DILocation(line: 91, column: 2, scope: !6233)
!6250 = !DILocation(line: 95, column: 9, scope: !6233)
!6251 = !DILocation(line: 97, column: 1, scope: !6233)
!6252 = !DILocation(line: 95, column: 2, scope: !6233)
!6253 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6165, file: !6165, line: 113, type: !6254, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6259)
!6254 = !DISubroutineType(types: !6255)
!6255 = !{null, !6256, !6257, !121, !121}
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6151)
!6259 = !{!6260, !6261, !6262, !6263}
!6260 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6253, file: !6165, line: 114, type: !6256)
!6261 = !DILocalVariable(name: "attr", arg: 2, scope: !6253, file: !6165, line: 115, type: !6257)
!6262 = !DILocalVariable(name: "base", arg: 3, scope: !6253, file: !6165, line: 115, type: !121)
!6263 = !DILocalVariable(name: "size", arg: 4, scope: !6253, file: !6165, line: 115, type: !121)
!6264 = !DILocation(line: 0, scope: !6253)
!6265 = !DILocation(line: 127, column: 23, scope: !6253)
!6266 = !DILocation(line: 127, column: 35, scope: !6253)
!6267 = !DILocation(line: 127, column: 33, scope: !6253)
!6268 = !DILocation(line: 127, column: 10, scope: !6253)
!6269 = !DILocation(line: 127, column: 15, scope: !6253)
!6270 = !DILocation(line: 129, column: 1, scope: !6253)
!6271 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !397, file: !397, line: 57, type: !6272, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6274)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!103, !1830, !384}
!6274 = !{!6275, !6276}
!6275 = !DILocalVariable(name: "index", arg: 1, scope: !6271, file: !397, line: 57, type: !1830)
!6276 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6271, file: !397, line: 58, type: !384)
!6277 = !DILocation(line: 0, scope: !6271)
!6278 = !DILocation(line: 61, column: 6, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6271, file: !397, line: 61, column: 6)
!6280 = !DILocation(line: 61, column: 12, scope: !6279)
!6281 = !DILocation(line: 61, column: 6, scope: !6271)
!6282 = !DILocation(line: 71, column: 2, scope: !6271)
!6283 = !DILocation(line: 73, column: 2, scope: !6271)
!6284 = !DILocation(line: 74, column: 1, scope: !6271)
!6285 = distinct !DISubprogram(name: "region_init", scope: !6165, file: !6165, line: 29, type: !6286, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6288)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{null, !5584, !384}
!6288 = !{!6289, !6290}
!6289 = !DILocalVariable(name: "index", arg: 1, scope: !6285, file: !6165, line: 29, type: !5584)
!6290 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6285, file: !6165, line: 30, type: !384)
!6291 = !DILocation(line: 0, scope: !6285)
!6292 = !DILocation(line: 33, column: 2, scope: !6285)
!6293 = !DILocation(line: 47, column: 28, scope: !6285)
!6294 = !DILocation(line: 47, column: 33, scope: !6285)
!6295 = !DILocation(line: 48, column: 26, scope: !6285)
!6296 = !DILocation(line: 47, column: 12, scope: !6285)
!6297 = !DILocation(line: 49, column: 32, scope: !6285)
!6298 = !DILocation(line: 49, column: 37, scope: !6285)
!6299 = !DILocation(line: 49, column: 12, scope: !6285)
!6300 = !DILocation(line: 53, column: 1, scope: !6285)
!6301 = distinct !DISubprogram(name: "set_region_number", scope: !6302, file: !6302, line: 32, type: !5075, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6303)
!6302 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6303 = !{!6304}
!6304 = !DILocalVariable(name: "index", arg: 1, scope: !6301, file: !6302, line: 32, type: !121)
!6305 = !DILocation(line: 0, scope: !6301)
!6306 = !DILocation(line: 34, column: 11, scope: !6301)
!6307 = !DILocation(line: 35, column: 1, scope: !6301)
!6308 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6165, file: !6165, line: 88, type: !6309, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6311)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!121, !121}
!6311 = !{!6312}
!6312 = !DILocalVariable(name: "size", arg: 1, scope: !6308, file: !6165, line: 88, type: !121)
!6313 = !DILocation(line: 0, scope: !6308)
!6314 = !DILocation(line: 91, column: 11, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6308, file: !6165, line: 91, column: 6)
!6316 = !DILocation(line: 91, column: 6, scope: !6308)
!6317 = !DILocation(line: 100, column: 11, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6308, file: !6165, line: 100, column: 6)
!6319 = !DILocation(line: 100, column: 6, scope: !6308)
!6320 = !DILocation(line: 104, column: 35, scope: !6308)
!6321 = !DILocation(line: 104, column: 16, scope: !6308)
!6322 = !DILocation(line: 104, column: 50, scope: !6308)
!6323 = !DILocation(line: 104, column: 72, scope: !6308)
!6324 = !DILocation(line: 104, column: 2, scope: !6308)
!6325 = !DILocation(line: 106, column: 1, scope: !6308)
!6326 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !397, file: !397, line: 307, type: !6327, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6329)
!6327 = !DISubroutineType(types: !6328)
!6328 = !{null, !6144, !167}
!6329 = !{!6330, !6331}
!6330 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6326, file: !397, line: 308, type: !6144)
!6331 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6326, file: !397, line: 308, type: !167)
!6332 = !DILocation(line: 0, scope: !6326)
!6333 = !DILocation(line: 310, column: 6, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6326, file: !397, line: 310, column: 6)
!6335 = !DILocation(line: 316, column: 1, scope: !6326)
!6336 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6165, file: !6165, line: 249, type: !6337, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6339)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!103, !6144, !167}
!6339 = !{!6340, !6341, !6342, !6343}
!6340 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6336, file: !6165, line: 250, type: !6144)
!6341 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6336, file: !6165, line: 250, type: !167)
!6342 = !DILocalVariable(name: "mpu_reg_index", scope: !6336, file: !6165, line: 252, type: !103)
!6343 = !DILocalVariable(name: "i", scope: !6344, file: !6165, line: 264, type: !103)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !6165, line: 264, column: 3)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !6165, line: 261, column: 32)
!6346 = distinct !DILexicalBlock(scope: !6336, file: !6165, line: 261, column: 6)
!6347 = !DILocation(line: 0, scope: !6336)
!6348 = !DILocation(line: 252, column: 22, scope: !6336)
!6349 = !DILocation(line: 258, column: 18, scope: !6336)
!6350 = !DILocation(line: 261, column: 20, scope: !6346)
!6351 = !DILocation(line: 261, column: 6, scope: !6336)
!6352 = !DILocation(line: 0, scope: !6344)
!6353 = !DILocation(line: 265, column: 4, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !6165, line: 264, column: 59)
!6355 = distinct !DILexicalBlock(scope: !6344, file: !6165, line: 264, column: 3)
!6356 = !DILocation(line: 264, column: 55, scope: !6355)
!6357 = !DILocation(line: 264, column: 33, scope: !6355)
!6358 = !DILocation(line: 264, column: 3, scope: !6344)
!6359 = distinct !{!6359, !6358, !6360}
!6360 = !DILocation(line: 266, column: 3, scope: !6344)
!6361 = !DILocation(line: 269, column: 2, scope: !6336)
!6362 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6363, file: !6363, line: 218, type: !5075, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6364)
!6363 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6364 = !{!6365}
!6365 = !DILocalVariable(name: "rnr", arg: 1, scope: !6362, file: !6363, line: 218, type: !121)
!6366 = !DILocation(line: 0, scope: !6362)
!6367 = !DILocation(line: 220, column: 12, scope: !6362)
!6368 = !DILocation(line: 221, column: 13, scope: !6362)
!6369 = !DILocation(line: 222, column: 1, scope: !6362)
!6370 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !397, file: !397, line: 326, type: !6371, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !6373)
!6371 = !DISubroutineType(types: !6372)
!6372 = !{!103}
!6373 = !{!6374}
!6374 = !DILocalVariable(name: "r_index", scope: !6370, file: !397, line: 328, type: !121)
!6375 = !DILocation(line: 330, column: 17, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6370, file: !397, line: 330, column: 6)
!6377 = !DILocation(line: 330, column: 29, scope: !6376)
!6378 = !DILocation(line: 330, column: 6, scope: !6370)
!6379 = !DILocation(line: 347, column: 2, scope: !6370)
!6380 = !DILocation(line: 0, scope: !6370)
!6381 = !DILocation(line: 364, column: 29, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !397, line: 364, column: 2)
!6383 = distinct !DILexicalBlock(scope: !6370, file: !397, line: 364, column: 2)
!6384 = !DILocation(line: 364, column: 2, scope: !6383)
!6385 = !DILocation(line: 365, column: 25, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6382, file: !397, line: 364, column: 66)
!6387 = !DILocation(line: 365, column: 3, scope: !6386)
!6388 = !DILocation(line: 364, column: 62, scope: !6382)
!6389 = distinct !{!6389, !6384, !6390}
!6390 = !DILocation(line: 366, column: 2, scope: !6383)
!6391 = !DILocation(line: 369, column: 23, scope: !6370)
!6392 = !DILocation(line: 369, column: 21, scope: !6370)
!6393 = !DILocation(line: 372, column: 2, scope: !6370)
!6394 = !DILocation(line: 443, column: 2, scope: !6370)
!6395 = !DILocation(line: 444, column: 1, scope: !6370)
!6396 = distinct !DISubprogram(name: "strcpy", scope: !6397, file: !6397, line: 20, type: !6398, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6402)
!6397 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!1019, !6400, !6401}
!6400 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1019)
!6401 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!6402 = !{!6403, !6404, !6405}
!6403 = !DILocalVariable(name: "d", arg: 1, scope: !6396, file: !6397, line: 20, type: !6400)
!6404 = !DILocalVariable(name: "s", arg: 2, scope: !6396, file: !6397, line: 20, type: !6401)
!6405 = !DILocalVariable(name: "dest", scope: !6396, file: !6397, line: 22, type: !1019)
!6406 = !DILocation(line: 0, scope: !6396)
!6407 = !DILocation(line: 24, column: 9, scope: !6396)
!6408 = !DILocation(line: 24, column: 12, scope: !6396)
!6409 = !DILocation(line: 24, column: 2, scope: !6396)
!6410 = !DILocation(line: 25, column: 6, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6396, file: !6397, line: 24, column: 21)
!6412 = !DILocation(line: 26, column: 4, scope: !6411)
!6413 = !DILocation(line: 27, column: 4, scope: !6411)
!6414 = distinct !{!6414, !6409, !6415}
!6415 = !DILocation(line: 28, column: 2, scope: !6396)
!6416 = !DILocation(line: 30, column: 5, scope: !6396)
!6417 = !DILocation(line: 32, column: 2, scope: !6396)
!6418 = distinct !DISubprogram(name: "strncpy", scope: !6397, file: !6397, line: 42, type: !6419, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6421)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!1019, !6400, !6401, !213}
!6421 = !{!6422, !6423, !6424, !6425}
!6422 = !DILocalVariable(name: "d", arg: 1, scope: !6418, file: !6397, line: 42, type: !6400)
!6423 = !DILocalVariable(name: "s", arg: 2, scope: !6418, file: !6397, line: 42, type: !6401)
!6424 = !DILocalVariable(name: "n", arg: 3, scope: !6418, file: !6397, line: 42, type: !213)
!6425 = !DILocalVariable(name: "dest", scope: !6418, file: !6397, line: 44, type: !1019)
!6426 = !DILocation(line: 0, scope: !6418)
!6427 = !DILocation(line: 46, column: 12, scope: !6418)
!6428 = !DILocation(line: 46, column: 17, scope: !6418)
!6429 = !DILocation(line: 46, column: 20, scope: !6418)
!6430 = !DILocation(line: 46, column: 23, scope: !6418)
!6431 = !DILocation(line: 46, column: 2, scope: !6418)
!6432 = !DILocation(line: 47, column: 6, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6418, file: !6397, line: 46, column: 32)
!6434 = !DILocation(line: 48, column: 4, scope: !6433)
!6435 = !DILocation(line: 49, column: 4, scope: !6433)
!6436 = !DILocation(line: 50, column: 4, scope: !6433)
!6437 = distinct !{!6437, !6431, !6438}
!6438 = !DILocation(line: 51, column: 2, scope: !6418)
!6439 = !DILocation(line: 54, column: 6, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6418, file: !6397, line: 53, column: 16)
!6441 = !DILocation(line: 55, column: 4, scope: !6440)
!6442 = !DILocation(line: 56, column: 4, scope: !6440)
!6443 = !DILocation(line: 53, column: 11, scope: !6418)
!6444 = !DILocation(line: 53, column: 2, scope: !6418)
!6445 = distinct !{!6445, !6444, !6446}
!6446 = !DILocation(line: 57, column: 2, scope: !6418)
!6447 = !DILocation(line: 59, column: 2, scope: !6418)
!6448 = distinct !DISubprogram(name: "strchr", scope: !6397, file: !6397, line: 69, type: !6449, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6451)
!6449 = !DISubroutineType(types: !6450)
!6450 = !{!1019, !157, !103}
!6451 = !{!6452, !6453, !6454}
!6452 = !DILocalVariable(name: "s", arg: 1, scope: !6448, file: !6397, line: 69, type: !157)
!6453 = !DILocalVariable(name: "c", arg: 2, scope: !6448, file: !6397, line: 69, type: !103)
!6454 = !DILocalVariable(name: "tmp", scope: !6448, file: !6397, line: 71, type: !159)
!6455 = !DILocation(line: 0, scope: !6448)
!6456 = !DILocation(line: 73, column: 2, scope: !6448)
!6457 = !DILocation(line: 73, column: 10, scope: !6448)
!6458 = !DILocation(line: 73, column: 13, scope: !6448)
!6459 = !DILocation(line: 73, column: 21, scope: !6448)
!6460 = !DILocation(line: 74, column: 4, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6448, file: !6397, line: 73, column: 38)
!6462 = distinct !{!6462, !6456, !6463}
!6463 = !DILocation(line: 75, column: 2, scope: !6448)
!6464 = !DILocation(line: 77, column: 9, scope: !6448)
!6465 = !DILocation(line: 77, column: 2, scope: !6448)
!6466 = distinct !DISubprogram(name: "strrchr", scope: !6397, file: !6397, line: 87, type: !6449, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6467)
!6467 = !{!6468, !6469, !6470}
!6468 = !DILocalVariable(name: "s", arg: 1, scope: !6466, file: !6397, line: 87, type: !157)
!6469 = !DILocalVariable(name: "c", arg: 2, scope: !6466, file: !6397, line: 87, type: !103)
!6470 = !DILocalVariable(name: "match", scope: !6466, file: !6397, line: 89, type: !1019)
!6471 = !DILocation(line: 0, scope: !6466)
!6472 = !DILocation(line: 91, column: 2, scope: !6466)
!6473 = !DILocation(line: 92, column: 7, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !6397, line: 92, column: 7)
!6475 = distinct !DILexicalBlock(scope: !6466, file: !6397, line: 91, column: 5)
!6476 = !DILocation(line: 92, column: 10, scope: !6474)
!6477 = !DILocation(line: 92, column: 7, scope: !6475)
!6478 = !DILocation(line: 95, column: 13, scope: !6466)
!6479 = !DILocation(line: 95, column: 2, scope: !6475)
!6480 = distinct !{!6480, !6472, !6481}
!6481 = !DILocation(line: 95, column: 15, scope: !6466)
!6482 = !DILocation(line: 97, column: 2, scope: !6466)
!6483 = distinct !DISubprogram(name: "strlen", scope: !6397, file: !6397, line: 107, type: !6484, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6486)
!6484 = !DISubroutineType(types: !6485)
!6485 = !{!213, !157}
!6486 = !{!6487, !6488}
!6487 = !DILocalVariable(name: "s", arg: 1, scope: !6483, file: !6397, line: 107, type: !157)
!6488 = !DILocalVariable(name: "n", scope: !6483, file: !6397, line: 109, type: !213)
!6489 = !DILocation(line: 0, scope: !6483)
!6490 = !DILocation(line: 111, column: 9, scope: !6483)
!6491 = !DILocation(line: 111, column: 12, scope: !6483)
!6492 = !DILocation(line: 111, column: 2, scope: !6483)
!6493 = !DILocation(line: 112, column: 4, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6483, file: !6397, line: 111, column: 21)
!6495 = !DILocation(line: 113, column: 4, scope: !6494)
!6496 = distinct !{!6496, !6492, !6497}
!6497 = !DILocation(line: 114, column: 2, scope: !6483)
!6498 = !DILocation(line: 116, column: 2, scope: !6483)
!6499 = distinct !DISubprogram(name: "strnlen", scope: !6397, file: !6397, line: 126, type: !6500, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!213, !157, !213}
!6502 = !{!6503, !6504, !6505}
!6503 = !DILocalVariable(name: "s", arg: 1, scope: !6499, file: !6397, line: 126, type: !157)
!6504 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6499, file: !6397, line: 126, type: !213)
!6505 = !DILocalVariable(name: "n", scope: !6499, file: !6397, line: 128, type: !213)
!6506 = !DILocation(line: 0, scope: !6499)
!6507 = !DILocation(line: 130, column: 9, scope: !6499)
!6508 = !DILocation(line: 130, column: 12, scope: !6499)
!6509 = !DILocation(line: 130, column: 20, scope: !6499)
!6510 = !DILocation(line: 130, column: 2, scope: !6499)
!6511 = !DILocation(line: 131, column: 4, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6499, file: !6397, line: 130, column: 35)
!6513 = !DILocation(line: 132, column: 4, scope: !6512)
!6514 = distinct !{!6514, !6510, !6515}
!6515 = !DILocation(line: 133, column: 2, scope: !6499)
!6516 = !DILocation(line: 135, column: 2, scope: !6499)
!6517 = distinct !DISubprogram(name: "strcmp", scope: !6397, file: !6397, line: 145, type: !6518, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6520)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{!103, !157, !157}
!6520 = !{!6521, !6522}
!6521 = !DILocalVariable(name: "s1", arg: 1, scope: !6517, file: !6397, line: 145, type: !157)
!6522 = !DILocalVariable(name: "s2", arg: 2, scope: !6517, file: !6397, line: 145, type: !157)
!6523 = !DILocation(line: 0, scope: !6517)
!6524 = !DILocation(line: 147, column: 10, scope: !6517)
!6525 = !DILocation(line: 147, column: 17, scope: !6517)
!6526 = !DILocation(line: 147, column: 14, scope: !6517)
!6527 = !DILocation(line: 147, column: 22, scope: !6517)
!6528 = !DILocation(line: 148, column: 5, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6517, file: !6397, line: 147, column: 40)
!6530 = !DILocation(line: 149, column: 5, scope: !6529)
!6531 = distinct !{!6531, !6532, !6533}
!6532 = !DILocation(line: 147, column: 2, scope: !6517)
!6533 = !DILocation(line: 150, column: 2, scope: !6517)
!6534 = !DILocation(line: 152, column: 9, scope: !6517)
!6535 = !DILocation(line: 152, column: 15, scope: !6517)
!6536 = !DILocation(line: 152, column: 13, scope: !6517)
!6537 = !DILocation(line: 152, column: 2, scope: !6517)
!6538 = distinct !DISubprogram(name: "strncmp", scope: !6397, file: !6397, line: 162, type: !6539, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6541)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!103, !157, !157, !213}
!6541 = !{!6542, !6543, !6544}
!6542 = !DILocalVariable(name: "s1", arg: 1, scope: !6538, file: !6397, line: 162, type: !157)
!6543 = !DILocalVariable(name: "s2", arg: 2, scope: !6538, file: !6397, line: 162, type: !157)
!6544 = !DILocalVariable(name: "n", arg: 3, scope: !6538, file: !6397, line: 162, type: !213)
!6545 = !DILocation(line: 0, scope: !6538)
!6546 = !DILocation(line: 164, column: 17, scope: !6538)
!6547 = !DILocation(line: 164, column: 21, scope: !6538)
!6548 = !DILocation(line: 164, column: 28, scope: !6538)
!6549 = !DILocation(line: 164, column: 25, scope: !6538)
!6550 = !DILocation(line: 164, column: 33, scope: !6538)
!6551 = !DILocation(line: 165, column: 5, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6538, file: !6397, line: 164, column: 51)
!6553 = !DILocation(line: 166, column: 5, scope: !6552)
!6554 = !DILocation(line: 167, column: 4, scope: !6552)
!6555 = distinct !{!6555, !6556, !6557}
!6556 = !DILocation(line: 164, column: 2, scope: !6538)
!6557 = !DILocation(line: 168, column: 2, scope: !6538)
!6558 = !DILocation(line: 170, column: 25, scope: !6538)
!6559 = !DILocation(line: 170, column: 31, scope: !6538)
!6560 = !DILocation(line: 170, column: 29, scope: !6538)
!6561 = !DILocation(line: 170, column: 9, scope: !6538)
!6562 = !DILocation(line: 170, column: 2, scope: !6538)
!6563 = distinct !DISubprogram(name: "strtok_r", scope: !6397, file: !6397, line: 180, type: !6564, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6567)
!6564 = !DISubroutineType(types: !6565)
!6565 = !{!1019, !1019, !157, !6566}
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!6567 = !{!6568, !6569, !6570, !6571, !6572}
!6568 = !DILocalVariable(name: "str", arg: 1, scope: !6563, file: !6397, line: 180, type: !1019)
!6569 = !DILocalVariable(name: "sep", arg: 2, scope: !6563, file: !6397, line: 180, type: !157)
!6570 = !DILocalVariable(name: "state", arg: 3, scope: !6563, file: !6397, line: 180, type: !6566)
!6571 = !DILocalVariable(name: "start", scope: !6563, file: !6397, line: 182, type: !1019)
!6572 = !DILocalVariable(name: "end", scope: !6563, file: !6397, line: 182, type: !1019)
!6573 = !DILocation(line: 0, scope: !6563)
!6574 = !DILocation(line: 184, column: 10, scope: !6563)
!6575 = !DILocation(line: 184, column: 22, scope: !6563)
!6576 = !DILocation(line: 187, column: 9, scope: !6563)
!6577 = !DILocation(line: 187, column: 16, scope: !6563)
!6578 = !DILocation(line: 187, column: 19, scope: !6563)
!6579 = !DILocation(line: 187, column: 2, scope: !6563)
!6580 = !DILocation(line: 188, column: 8, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6563, file: !6397, line: 187, column: 40)
!6582 = distinct !{!6582, !6579, !6583}
!6583 = !DILocation(line: 189, column: 2, scope: !6563)
!6584 = !DILocation(line: 198, column: 9, scope: !6563)
!6585 = !DILocation(line: 198, column: 18, scope: !6563)
!6586 = !DILocation(line: 198, column: 17, scope: !6563)
!6587 = !DILocation(line: 198, column: 2, scope: !6563)
!6588 = !DILocation(line: 199, column: 6, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6563, file: !6397, line: 198, column: 37)
!6590 = !DILocation(line: 198, column: 14, scope: !6563)
!6591 = distinct !{!6591, !6587, !6592}
!6592 = !DILocation(line: 200, column: 2, scope: !6563)
!6593 = !DILocation(line: 203, column: 8, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !6397, line: 202, column: 20)
!6595 = distinct !DILexicalBlock(scope: !6563, file: !6397, line: 202, column: 6)
!6596 = !DILocation(line: 204, column: 16, scope: !6594)
!6597 = !DILocation(line: 205, column: 2, scope: !6594)
!6598 = !DILocation(line: 210, column: 1, scope: !6563)
!6599 = distinct !DISubprogram(name: "strcat", scope: !6397, file: !6397, line: 212, type: !6398, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6600)
!6600 = !{!6601, !6602}
!6601 = !DILocalVariable(name: "dest", arg: 1, scope: !6599, file: !6397, line: 212, type: !6400)
!6602 = !DILocalVariable(name: "src", arg: 2, scope: !6599, file: !6397, line: 212, type: !6401)
!6603 = !DILocation(line: 0, scope: !6599)
!6604 = !DILocation(line: 214, column: 16, scope: !6599)
!6605 = !DILocation(line: 214, column: 14, scope: !6599)
!6606 = !DILocation(line: 214, column: 2, scope: !6599)
!6607 = !DILocation(line: 215, column: 2, scope: !6599)
!6608 = distinct !DISubprogram(name: "strncat", scope: !6397, file: !6397, line: 218, type: !6419, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6609)
!6609 = !{!6610, !6611, !6612, !6613, !6614}
!6610 = !DILocalVariable(name: "dest", arg: 1, scope: !6608, file: !6397, line: 218, type: !6400)
!6611 = !DILocalVariable(name: "src", arg: 2, scope: !6608, file: !6397, line: 218, type: !6401)
!6612 = !DILocalVariable(name: "n", arg: 3, scope: !6608, file: !6397, line: 219, type: !213)
!6613 = !DILocalVariable(name: "orig_dest", scope: !6608, file: !6397, line: 221, type: !1019)
!6614 = !DILocalVariable(name: "len", scope: !6608, file: !6397, line: 222, type: !213)
!6615 = !DILocation(line: 0, scope: !6608)
!6616 = !DILocation(line: 222, column: 15, scope: !6608)
!6617 = !DILocation(line: 224, column: 7, scope: !6608)
!6618 = !DILocation(line: 225, column: 14, scope: !6608)
!6619 = !DILocation(line: 225, column: 19, scope: !6608)
!6620 = !DILocation(line: 225, column: 11, scope: !6608)
!6621 = !DILocation(line: 225, column: 23, scope: !6608)
!6622 = !DILocation(line: 225, column: 28, scope: !6608)
!6623 = !DILocation(line: 225, column: 2, scope: !6608)
!6624 = !DILocation(line: 226, column: 17, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6608, file: !6397, line: 225, column: 38)
!6626 = !DILocation(line: 226, column: 8, scope: !6625)
!6627 = !DILocation(line: 226, column: 11, scope: !6625)
!6628 = distinct !{!6628, !6623, !6629}
!6629 = !DILocation(line: 227, column: 2, scope: !6608)
!6630 = !DILocation(line: 228, column: 8, scope: !6608)
!6631 = !DILocation(line: 230, column: 2, scope: !6608)
!6632 = distinct !DISubprogram(name: "memcmp", scope: !6397, file: !6397, line: 239, type: !6633, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6635)
!6633 = !DISubroutineType(types: !6634)
!6634 = !{!103, !13, !13, !213}
!6635 = !{!6636, !6637, !6638, !6639, !6640}
!6636 = !DILocalVariable(name: "m1", arg: 1, scope: !6632, file: !6397, line: 239, type: !13)
!6637 = !DILocalVariable(name: "m2", arg: 2, scope: !6632, file: !6397, line: 239, type: !13)
!6638 = !DILocalVariable(name: "n", arg: 3, scope: !6632, file: !6397, line: 239, type: !213)
!6639 = !DILocalVariable(name: "c1", scope: !6632, file: !6397, line: 241, type: !157)
!6640 = !DILocalVariable(name: "c2", scope: !6632, file: !6397, line: 242, type: !157)
!6641 = !DILocation(line: 0, scope: !6632)
!6642 = !DILocation(line: 244, column: 7, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6632, file: !6397, line: 244, column: 6)
!6644 = !DILocation(line: 244, column: 6, scope: !6632)
!6645 = !DILocation(line: 248, column: 10, scope: !6632)
!6646 = !DILocation(line: 248, column: 14, scope: !6632)
!6647 = !DILocation(line: 248, column: 19, scope: !6632)
!6648 = !DILocation(line: 248, column: 2, scope: !6632)
!6649 = !DILocation(line: 248, column: 23, scope: !6632)
!6650 = !DILocation(line: 248, column: 30, scope: !6632)
!6651 = !DILocation(line: 248, column: 27, scope: !6632)
!6652 = !DILocation(line: 249, column: 5, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6632, file: !6397, line: 248, column: 36)
!6654 = !DILocation(line: 250, column: 5, scope: !6653)
!6655 = distinct !{!6655, !6648, !6656}
!6656 = !DILocation(line: 251, column: 2, scope: !6632)
!6657 = !DILocation(line: 253, column: 9, scope: !6632)
!6658 = !DILocation(line: 253, column: 15, scope: !6632)
!6659 = !DILocation(line: 253, column: 13, scope: !6632)
!6660 = !DILocation(line: 253, column: 2, scope: !6632)
!6661 = !DILocation(line: 254, column: 1, scope: !6632)
!6662 = distinct !DISubprogram(name: "memmove", scope: !6397, file: !6397, line: 263, type: !6663, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6665)
!6663 = !DISubroutineType(types: !6664)
!6664 = !{!102, !102, !13, !213}
!6665 = !{!6666, !6667, !6668, !6669, !6670}
!6666 = !DILocalVariable(name: "d", arg: 1, scope: !6662, file: !6397, line: 263, type: !102)
!6667 = !DILocalVariable(name: "s", arg: 2, scope: !6662, file: !6397, line: 263, type: !13)
!6668 = !DILocalVariable(name: "n", arg: 3, scope: !6662, file: !6397, line: 263, type: !213)
!6669 = !DILocalVariable(name: "dest", scope: !6662, file: !6397, line: 265, type: !1019)
!6670 = !DILocalVariable(name: "src", scope: !6662, file: !6397, line: 266, type: !157)
!6671 = !DILocation(line: 0, scope: !6662)
!6672 = !DILocation(line: 268, column: 21, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6662, file: !6397, line: 268, column: 6)
!6674 = !DILocation(line: 268, column: 28, scope: !6673)
!6675 = !DILocation(line: 268, column: 6, scope: !6662)
!6676 = !DILocation(line: 280, column: 12, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6673, file: !6397, line: 278, column: 9)
!6678 = !DILocation(line: 280, column: 3, scope: !6677)
!6679 = !DILocation(line: 275, column: 5, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6397, line: 274, column: 17)
!6681 = distinct !DILexicalBlock(scope: !6673, file: !6397, line: 268, column: 33)
!6682 = !DILocation(line: 276, column: 14, scope: !6680)
!6683 = !DILocation(line: 276, column: 4, scope: !6680)
!6684 = !DILocation(line: 276, column: 12, scope: !6680)
!6685 = !DILocation(line: 274, column: 12, scope: !6681)
!6686 = !DILocation(line: 274, column: 3, scope: !6681)
!6687 = distinct !{!6687, !6686, !6688}
!6688 = !DILocation(line: 277, column: 3, scope: !6681)
!6689 = !DILocation(line: 281, column: 12, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6677, file: !6397, line: 280, column: 17)
!6691 = !DILocation(line: 281, column: 10, scope: !6690)
!6692 = !DILocation(line: 282, column: 8, scope: !6690)
!6693 = !DILocation(line: 283, column: 7, scope: !6690)
!6694 = !DILocation(line: 284, column: 5, scope: !6690)
!6695 = distinct !{!6695, !6678, !6696}
!6696 = !DILocation(line: 285, column: 3, scope: !6677)
!6697 = !DILocation(line: 288, column: 2, scope: !6662)
!6698 = distinct !DISubprogram(name: "memcpy", scope: !6397, file: !6397, line: 298, type: !6699, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6703)
!6699 = !DISubroutineType(types: !6700)
!6700 = !{!102, !6701, !6702, !213}
!6701 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6702 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6703 = !{!6704, !6705, !6706, !6707, !6708}
!6704 = !DILocalVariable(name: "d", arg: 1, scope: !6698, file: !6397, line: 298, type: !6701)
!6705 = !DILocalVariable(name: "s", arg: 2, scope: !6698, file: !6397, line: 298, type: !6702)
!6706 = !DILocalVariable(name: "n", arg: 3, scope: !6698, file: !6397, line: 298, type: !213)
!6707 = !DILocalVariable(name: "d_byte", scope: !6698, file: !6397, line: 302, type: !873)
!6708 = !DILocalVariable(name: "s_byte", scope: !6698, file: !6397, line: 303, type: !2921)
!6709 = !DILocation(line: 0, scope: !6698)
!6710 = !DILocation(line: 337, column: 11, scope: !6698)
!6711 = !DILocation(line: 337, column: 2, scope: !6698)
!6712 = !DILocation(line: 338, column: 25, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6698, file: !6397, line: 337, column: 16)
!6714 = !DILocation(line: 338, column: 17, scope: !6713)
!6715 = !DILocation(line: 338, column: 11, scope: !6713)
!6716 = !DILocation(line: 338, column: 15, scope: !6713)
!6717 = !DILocation(line: 339, column: 4, scope: !6713)
!6718 = distinct !{!6718, !6711, !6719}
!6719 = !DILocation(line: 340, column: 2, scope: !6698)
!6720 = !DILocation(line: 342, column: 2, scope: !6698)
!6721 = distinct !DISubprogram(name: "memset", scope: !6397, file: !6397, line: 352, type: !6722, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6724)
!6722 = !DISubroutineType(types: !6723)
!6723 = !{!102, !102, !103, !213}
!6724 = !{!6725, !6726, !6727, !6728, !6729}
!6725 = !DILocalVariable(name: "buf", arg: 1, scope: !6721, file: !6397, line: 352, type: !102)
!6726 = !DILocalVariable(name: "c", arg: 2, scope: !6721, file: !6397, line: 352, type: !103)
!6727 = !DILocalVariable(name: "n", arg: 3, scope: !6721, file: !6397, line: 352, type: !213)
!6728 = !DILocalVariable(name: "d_byte", scope: !6721, file: !6397, line: 356, type: !873)
!6729 = !DILocalVariable(name: "c_byte", scope: !6721, file: !6397, line: 357, type: !168)
!6730 = !DILocation(line: 0, scope: !6721)
!6731 = !DILocation(line: 357, column: 25, scope: !6721)
!6732 = !DILocation(line: 389, column: 11, scope: !6721)
!6733 = !DILocation(line: 389, column: 2, scope: !6721)
!6734 = !DILocation(line: 390, column: 11, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6721, file: !6397, line: 389, column: 16)
!6736 = !DILocation(line: 390, column: 15, scope: !6735)
!6737 = !DILocation(line: 391, column: 4, scope: !6735)
!6738 = distinct !{!6738, !6733, !6739}
!6739 = !DILocation(line: 392, column: 2, scope: !6721)
!6740 = !DILocation(line: 394, column: 2, scope: !6721)
!6741 = distinct !DISubprogram(name: "memchr", scope: !6397, file: !6397, line: 404, type: !6742, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !6744)
!6742 = !DISubroutineType(types: !6743)
!6743 = !{!102, !13, !103, !213}
!6744 = !{!6745, !6746, !6747, !6748}
!6745 = !DILocalVariable(name: "s", arg: 1, scope: !6741, file: !6397, line: 404, type: !13)
!6746 = !DILocalVariable(name: "c", arg: 2, scope: !6741, file: !6397, line: 404, type: !103)
!6747 = !DILocalVariable(name: "n", arg: 3, scope: !6741, file: !6397, line: 404, type: !213)
!6748 = !DILocalVariable(name: "p", scope: !6749, file: !6397, line: 407, type: !2921)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6397, line: 406, column: 14)
!6750 = distinct !DILexicalBlock(scope: !6741, file: !6397, line: 406, column: 6)
!6751 = !DILocation(line: 0, scope: !6741)
!6752 = !DILocation(line: 406, column: 8, scope: !6750)
!6753 = !DILocation(line: 406, column: 6, scope: !6741)
!6754 = !DILocation(line: 409, column: 3, scope: !6749)
!6755 = !DILocation(line: 0, scope: !6749)
!6756 = !DILocation(line: 410, column: 8, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !6397, line: 410, column: 8)
!6758 = distinct !DILexicalBlock(scope: !6749, file: !6397, line: 409, column: 6)
!6759 = !DILocation(line: 410, column: 13, scope: !6757)
!6760 = !DILocation(line: 410, column: 8, scope: !6758)
!6761 = distinct !{!6761, !6754, !6762}
!6762 = !DILocation(line: 414, column: 20, scope: !6749)
!6763 = !DILocation(line: 417, column: 2, scope: !6741)
!6764 = !DILocation(line: 418, column: 1, scope: !6741)
!6765 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !407, file: !407, line: 23, type: !3382, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6766)
!6766 = !{!6767}
!6767 = !DILocalVariable(name: "hook", arg: 1, scope: !6765, file: !407, line: 23, type: !106)
!6768 = !DILocation(line: 0, scope: !6765)
!6769 = !DILocation(line: 25, column: 15, scope: !6765)
!6770 = !DILocation(line: 26, column: 1, scope: !6765)
!6771 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !407, file: !407, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6772)
!6772 = !{!6773}
!6773 = !DILocalVariable(name: "c", arg: 1, scope: !6771, file: !407, line: 14, type: !103)
!6774 = !DILocation(line: 0, scope: !6771)
!6775 = !DILocation(line: 18, column: 2, scope: !6771)
!6776 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !407, file: !407, line: 28, type: !6777, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6779)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!103, !103, !403}
!6779 = !{!6780, !6781}
!6780 = !DILocalVariable(name: "c", arg: 1, scope: !6776, file: !407, line: 28, type: !103)
!6781 = !DILocalVariable(name: "stream", arg: 2, scope: !6776, file: !407, line: 28, type: !403)
!6782 = !DILocation(line: 0, scope: !6776)
!6783 = !DILocation(line: 30, column: 27, scope: !6776)
!6784 = !DILocation(line: 30, column: 50, scope: !6776)
!6785 = !DILocation(line: 30, column: 9, scope: !6776)
!6786 = !DILocation(line: 30, column: 2, scope: !6776)
!6787 = distinct !DISubprogram(name: "fputc", scope: !407, file: !407, line: 41, type: !6777, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6788)
!6788 = !{!6789, !6790}
!6789 = !DILocalVariable(name: "c", arg: 1, scope: !6787, file: !407, line: 41, type: !103)
!6790 = !DILocalVariable(name: "stream", arg: 2, scope: !6787, file: !407, line: 41, type: !403)
!6791 = !DILocation(line: 0, scope: !6787)
!6792 = !DILocation(line: 43, column: 9, scope: !6787)
!6793 = !DILocation(line: 43, column: 2, scope: !6787)
!6794 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6795, file: !6795, line: 72, type: !6777, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6796)
!6795 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!6796 = !{!6797, !6798}
!6797 = !DILocalVariable(name: "c", arg: 1, scope: !6794, file: !6795, line: 72, type: !103)
!6798 = !DILocalVariable(name: "stream", arg: 2, scope: !6794, file: !6795, line: 72, type: !403)
!6799 = !DILocation(line: 0, scope: !6794)
!6800 = !DILocation(line: 81, column: 2, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6794, file: !6795, line: 81, column: 2)
!6802 = !{i64 2152278029}
!6803 = !DILocation(line: 82, column: 9, scope: !6794)
!6804 = !DILocation(line: 82, column: 2, scope: !6794)
!6805 = distinct !DISubprogram(name: "fputs", scope: !407, file: !407, line: 46, type: !6806, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6809)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{!103, !6401, !6808}
!6808 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !403)
!6809 = !{!6810, !6811, !6812, !6813}
!6810 = !DILocalVariable(name: "s", arg: 1, scope: !6805, file: !407, line: 46, type: !6401)
!6811 = !DILocalVariable(name: "stream", arg: 2, scope: !6805, file: !407, line: 46, type: !6808)
!6812 = !DILocalVariable(name: "len", scope: !6805, file: !407, line: 48, type: !103)
!6813 = !DILocalVariable(name: "ret", scope: !6805, file: !407, line: 49, type: !103)
!6814 = !DILocation(line: 0, scope: !6805)
!6815 = !DILocation(line: 48, column: 12, scope: !6805)
!6816 = !DILocation(line: 51, column: 8, scope: !6805)
!6817 = !DILocation(line: 53, column: 13, scope: !6805)
!6818 = !DILocation(line: 53, column: 9, scope: !6805)
!6819 = !DILocation(line: 53, column: 2, scope: !6805)
!6820 = distinct !DISubprogram(name: "fwrite", scope: !407, file: !407, line: 99, type: !6821, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6823)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!213, !6702, !213, !213, !6808}
!6823 = !{!6824, !6825, !6826, !6827}
!6824 = !DILocalVariable(name: "ptr", arg: 1, scope: !6820, file: !407, line: 99, type: !6702)
!6825 = !DILocalVariable(name: "size", arg: 2, scope: !6820, file: !407, line: 99, type: !213)
!6826 = !DILocalVariable(name: "nitems", arg: 3, scope: !6820, file: !407, line: 99, type: !213)
!6827 = !DILocalVariable(name: "stream", arg: 4, scope: !6820, file: !407, line: 100, type: !6808)
!6828 = !DILocation(line: 0, scope: !6820)
!6829 = !DILocation(line: 102, column: 9, scope: !6820)
!6830 = !DILocation(line: 102, column: 2, scope: !6820)
!6831 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6795, file: !6795, line: 96, type: !6821, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6832)
!6832 = !{!6833, !6834, !6835, !6836}
!6833 = !DILocalVariable(name: "ptr", arg: 1, scope: !6831, file: !6795, line: 96, type: !6702)
!6834 = !DILocalVariable(name: "size", arg: 2, scope: !6831, file: !6795, line: 96, type: !213)
!6835 = !DILocalVariable(name: "nitems", arg: 3, scope: !6831, file: !6795, line: 96, type: !213)
!6836 = !DILocalVariable(name: "stream", arg: 4, scope: !6831, file: !6795, line: 96, type: !6808)
!6837 = !DILocation(line: 0, scope: !6831)
!6838 = !DILocation(line: 107, column: 2, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6831, file: !6795, line: 107, column: 2)
!6840 = !{i64 2152278133}
!6841 = !DILocation(line: 108, column: 9, scope: !6831)
!6842 = !DILocation(line: 108, column: 2, scope: !6831)
!6843 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !407, file: !407, line: 56, type: !6821, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6844)
!6844 = !{!6845, !6846, !6847, !6848, !6849, !6850, !6851, !6852}
!6845 = !DILocalVariable(name: "ptr", arg: 1, scope: !6843, file: !407, line: 56, type: !6702)
!6846 = !DILocalVariable(name: "size", arg: 2, scope: !6843, file: !407, line: 56, type: !213)
!6847 = !DILocalVariable(name: "nitems", arg: 3, scope: !6843, file: !407, line: 57, type: !213)
!6848 = !DILocalVariable(name: "stream", arg: 4, scope: !6843, file: !407, line: 57, type: !6808)
!6849 = !DILocalVariable(name: "i", scope: !6843, file: !407, line: 59, type: !213)
!6850 = !DILocalVariable(name: "j", scope: !6843, file: !407, line: 60, type: !213)
!6851 = !DILocalVariable(name: "p", scope: !6843, file: !407, line: 61, type: !2921)
!6852 = !DILabel(scope: !6843, name: "done", file: !407, line: 82)
!6853 = !DILocation(line: 0, scope: !6843)
!6854 = !DILocation(line: 63, column: 14, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6843, file: !407, line: 63, column: 6)
!6856 = !DILocation(line: 63, column: 24, scope: !6855)
!6857 = !DILocation(line: 72, column: 3, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6843, file: !407, line: 70, column: 5)
!6859 = !DILocation(line: 0, scope: !6858)
!6860 = !DILocation(line: 73, column: 8, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !407, line: 73, column: 8)
!6862 = distinct !DILexicalBlock(scope: !6858, file: !407, line: 72, column: 6)
!6863 = !DILocation(line: 73, column: 29, scope: !6861)
!6864 = !DILocation(line: 73, column: 27, scope: !6861)
!6865 = !DILocation(line: 73, column: 21, scope: !6861)
!6866 = !DILocation(line: 73, column: 33, scope: !6861)
!6867 = !DILocation(line: 73, column: 8, scope: !6862)
!6868 = !DILocation(line: 76, column: 5, scope: !6862)
!6869 = !DILocation(line: 77, column: 14, scope: !6858)
!6870 = !DILocation(line: 77, column: 3, scope: !6862)
!6871 = distinct !{!6871, !6857, !6872}
!6872 = !DILocation(line: 77, column: 17, scope: !6858)
!6873 = !DILocation(line: 79, column: 4, scope: !6858)
!6874 = !DILocation(line: 80, column: 13, scope: !6843)
!6875 = !DILocation(line: 80, column: 2, scope: !6858)
!6876 = distinct !{!6876, !6877, !6878}
!6877 = !DILocation(line: 70, column: 2, scope: !6843)
!6878 = !DILocation(line: 80, column: 16, scope: !6843)
!6879 = !DILocation(line: 82, column: 1, scope: !6843)
!6880 = !DILocation(line: 83, column: 17, scope: !6843)
!6881 = !DILocation(line: 83, column: 2, scope: !6843)
!6882 = !DILocation(line: 84, column: 1, scope: !6843)
!6883 = distinct !DISubprogram(name: "puts", scope: !407, file: !407, line: 106, type: !6884, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6886)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!103, !157}
!6886 = !{!6887}
!6887 = !DILocalVariable(name: "s", arg: 1, scope: !6883, file: !407, line: 106, type: !157)
!6888 = !DILocation(line: 0, scope: !6883)
!6889 = !DILocation(line: 108, column: 6, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6883, file: !407, line: 108, column: 6)
!6891 = !DILocation(line: 108, column: 23, scope: !6890)
!6892 = !DILocation(line: 108, column: 6, scope: !6883)
!6893 = !DILocation(line: 112, column: 9, scope: !6883)
!6894 = !DILocation(line: 112, column: 29, scope: !6883)
!6895 = !DILocation(line: 112, column: 2, scope: !6883)
!6896 = !DILocation(line: 113, column: 1, scope: !6883)
!6897 = distinct !DISubprogram(name: "rf_init", scope: !532, file: !532, line: 10, type: !538, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6898)
!6898 = !{!6899, !6900, !6908, !6909}
!6899 = !DILocalVariable(name: "dev", arg: 1, scope: !6897, file: !532, line: 10, type: !458)
!6900 = !DILocalVariable(name: "rf1", scope: !6897, file: !532, line: 12, type: !6901)
!6901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6902)
!6902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !439, line: 271, size: 64, elements: !6903)
!6903 = !{!6904, !6905, !6906}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6902, file: !439, line: 273, baseType: !458, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !6902, file: !439, line: 275, baseType: !473, size: 8, offset: 32)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !6902, file: !439, line: 277, baseType: !6907, size: 16, offset: 48)
!6907 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !439, line: 249, baseType: !278)
!6908 = !DILocalVariable(name: "rf2", scope: !6897, file: !532, line: 14, type: !6901)
!6909 = !DILocalVariable(name: "rf3", scope: !6897, file: !532, line: 16, type: !6901)
!6910 = !DILocation(line: 0, scope: !6897)
!6911 = !DILocation(line: 12, column: 2, scope: !6897)
!6912 = !DILocation(line: 12, column: 28, scope: !6897)
!6913 = !DILocation(line: 14, column: 2, scope: !6897)
!6914 = !DILocation(line: 14, column: 28, scope: !6897)
!6915 = !DILocation(line: 16, column: 2, scope: !6897)
!6916 = !DILocation(line: 16, column: 28, scope: !6897)
!6917 = !DILocation(line: 22, column: 27, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6897, file: !532, line: 22, column: 6)
!6919 = !DILocation(line: 22, column: 7, scope: !6918)
!6920 = !DILocation(line: 22, column: 33, scope: !6918)
!6921 = !DILocation(line: 23, column: 7, scope: !6918)
!6922 = !DILocation(line: 23, column: 33, scope: !6918)
!6923 = !DILocation(line: 24, column: 7, scope: !6918)
!6924 = !DILocation(line: 22, column: 6, scope: !6897)
!6925 = !DILocation(line: 28, column: 8, scope: !6897)
!6926 = !DILocation(line: 29, column: 8, scope: !6897)
!6927 = !DILocation(line: 30, column: 8, scope: !6897)
!6928 = !DILocation(line: 32, column: 2, scope: !6897)
!6929 = !DILocation(line: 33, column: 1, scope: !6897)
!6930 = distinct !DISubprogram(name: "device_is_ready", scope: !3359, file: !3359, line: 47, type: !6931, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6933)
!6931 = !DISubroutineType(types: !6932)
!6932 = !{!170, !458}
!6933 = !{!6934}
!6934 = !DILocalVariable(name: "dev", arg: 1, scope: !6930, file: !3359, line: 47, type: !458)
!6935 = !DILocation(line: 0, scope: !6930)
!6936 = !DILocation(line: 55, column: 2, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6930, file: !3359, line: 55, column: 2)
!6938 = !{i64 2148925806}
!6939 = !DILocation(line: 56, column: 9, scope: !6930)
!6940 = !DILocation(line: 56, column: 2, scope: !6930)
!6941 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !439, file: !439, line: 731, type: !6942, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6945)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{!103, !6944, !474}
!6944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6901, size: 32)
!6945 = !{!6946, !6947}
!6946 = !DILocalVariable(name: "spec", arg: 1, scope: !6941, file: !439, line: 731, type: !6944)
!6947 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !6941, file: !439, line: 732, type: !474)
!6948 = !DILocation(line: 0, scope: !6941)
!6949 = !DILocation(line: 734, column: 34, scope: !6941)
!6950 = !DILocation(line: 735, column: 13, scope: !6941)
!6951 = !DILocation(line: 736, column: 13, scope: !6941)
!6952 = !DILocation(line: 736, column: 7, scope: !6941)
!6953 = !DILocation(line: 736, column: 22, scope: !6941)
!6954 = !DILocation(line: 734, column: 9, scope: !6941)
!6955 = !DILocation(line: 734, column: 2, scope: !6941)
!6956 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !6957, file: !6957, line: 49, type: !456, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6958)
!6957 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!6958 = !{!6959, !6960, !6961}
!6959 = !DILocalVariable(name: "port", arg: 1, scope: !6956, file: !6957, line: 49, type: !458)
!6960 = !DILocalVariable(name: "pin", arg: 2, scope: !6956, file: !6957, line: 49, type: !473)
!6961 = !DILocalVariable(name: "flags", arg: 3, scope: !6956, file: !6957, line: 49, type: !474)
!6962 = !DILocation(line: 0, scope: !6956)
!6963 = !DILocation(line: 59, column: 2, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6956, file: !6957, line: 59, column: 2)
!6965 = !{i64 2148940176}
!6966 = !DILocation(line: 60, column: 9, scope: !6956)
!6967 = !DILocation(line: 60, column: 2, scope: !6956)
!6968 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !439, file: !439, line: 667, type: !456, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6969)
!6969 = !{!6970, !6971, !6972, !6973, !6974, !6976}
!6970 = !DILocalVariable(name: "port", arg: 1, scope: !6968, file: !439, line: 667, type: !458)
!6971 = !DILocalVariable(name: "pin", arg: 2, scope: !6968, file: !439, line: 668, type: !473)
!6972 = !DILocalVariable(name: "flags", arg: 3, scope: !6968, file: !439, line: 669, type: !474)
!6973 = !DILocalVariable(name: "api", scope: !6968, file: !439, line: 671, type: !450)
!6974 = !DILocalVariable(name: "cfg", scope: !6968, file: !439, line: 673, type: !6975)
!6975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !520)
!6976 = !DILocalVariable(name: "data", scope: !6968, file: !439, line: 675, type: !530)
!6977 = !DILocation(line: 0, scope: !6968)
!6978 = !DILocation(line: 672, column: 41, scope: !6968)
!6979 = !DILocation(line: 676, column: 36, scope: !6968)
!6980 = !DILocation(line: 701, column: 6, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6968, file: !439, line: 700, column: 6)
!6982 = !DILocation(line: 711, column: 13, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6968, file: !439, line: 711, column: 6)
!6984 = !DILocation(line: 711, column: 32, scope: !6983)
!6985 = !DILocation(line: 0, scope: !6983)
!6986 = !DILocation(line: 711, column: 6, scope: !6968)
!6987 = !DILocation(line: 712, column: 9, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !439, line: 711, column: 38)
!6989 = !DILocation(line: 712, column: 16, scope: !6988)
!6990 = !DILocation(line: 713, column: 2, scope: !6988)
!6991 = !DILocation(line: 714, column: 19, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6983, file: !439, line: 713, column: 9)
!6993 = !DILocation(line: 714, column: 9, scope: !6992)
!6994 = !DILocation(line: 714, column: 16, scope: !6992)
!6995 = !DILocation(line: 706, column: 8, scope: !6968)
!6996 = !DILocation(line: 717, column: 14, scope: !6968)
!6997 = !DILocation(line: 717, column: 9, scope: !6968)
!6998 = !DILocation(line: 717, column: 2, scope: !6968)
!6999 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !6931, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !7000)
!7000 = !{!7001}
!7001 = !DILocalVariable(name: "dev", arg: 1, scope: !6999, file: !154, line: 730, type: !458)
!7002 = !DILocation(line: 0, scope: !6999)
!7003 = !DILocation(line: 732, column: 9, scope: !6999)
!7004 = !DILocation(line: 732, column: 2, scope: !6999)
!7005 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !615, file: !615, line: 368, type: !668, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7006)
!7006 = !{!7007}
!7007 = !DILocalVariable(name: "dev", arg: 1, scope: !7005, file: !615, line: 368, type: !644)
!7008 = !DILocation(line: 0, scope: !7005)
!7009 = !DILocation(line: 370, column: 2, scope: !7005)
!7010 = !DILocation(line: 371, column: 1, scope: !7005)
!7011 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !615, file: !615, line: 243, type: !7012, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7014)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{null, !103, !103, !644}
!7014 = !{!7015, !7016, !7017, !7018, !7020}
!7015 = !DILocalVariable(name: "min", arg: 1, scope: !7011, file: !615, line: 243, type: !103)
!7016 = !DILocalVariable(name: "max", arg: 2, scope: !7011, file: !615, line: 243, type: !103)
!7017 = !DILocalVariable(name: "dev", arg: 3, scope: !7011, file: !615, line: 243, type: !644)
!7018 = !DILocalVariable(name: "data", scope: !7011, file: !615, line: 245, type: !7019)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 32)
!7020 = !DILocalVariable(name: "line", scope: !7011, file: !615, line: 246, type: !103)
!7021 = !DILocation(line: 0, scope: !7011)
!7022 = !DILocation(line: 245, column: 38, scope: !7011)
!7023 = !DILocation(line: 249, column: 24, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !615, line: 249, column: 2)
!7025 = distinct !DILexicalBlock(scope: !7011, file: !615, line: 249, column: 2)
!7026 = !DILocation(line: 249, column: 2, scope: !7025)
!7027 = !DILocation(line: 251, column: 7, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !615, line: 251, column: 7)
!7029 = distinct !DILexicalBlock(scope: !7024, file: !615, line: 249, column: 39)
!7030 = !DILocation(line: 251, column: 7, scope: !7029)
!7031 = !DILocation(line: 253, column: 4, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7028, file: !615, line: 251, column: 36)
!7033 = !DILocation(line: 256, column: 24, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7032, file: !615, line: 256, column: 8)
!7035 = !DILocation(line: 256, column: 9, scope: !7034)
!7036 = !DILocation(line: 256, column: 8, scope: !7032)
!7037 = !DILocation(line: 260, column: 43, scope: !7032)
!7038 = !DILocation(line: 260, column: 4, scope: !7032)
!7039 = !DILocation(line: 261, column: 3, scope: !7032)
!7040 = !DILocation(line: 249, column: 35, scope: !7024)
!7041 = distinct !{!7041, !7026, !7042}
!7042 = !DILocation(line: 262, column: 2, scope: !7025)
!7043 = !DILocation(line: 263, column: 1, scope: !7011)
!7044 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !615, file: !615, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7045)
!7045 = !{!7046}
!7046 = !DILocalVariable(name: "line", arg: 1, scope: !7044, file: !615, line: 158, type: !103)
!7047 = !DILocation(line: 0, scope: !7044)
!7048 = !DILocation(line: 170, column: 38, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !615, line: 160, column: 17)
!7050 = distinct !DILexicalBlock(scope: !7044, file: !615, line: 160, column: 6)
!7051 = !DILocation(line: 170, column: 10, scope: !7049)
!7052 = !DILocation(line: 176, column: 1, scope: !7044)
!7053 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !615, file: !615, line: 183, type: !7054, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7056)
!7054 = !DISubroutineType(types: !7055)
!7055 = !{null, !103}
!7056 = !{!7057}
!7057 = !DILocalVariable(name: "line", arg: 1, scope: !7053, file: !615, line: 183, type: !103)
!7058 = !DILocation(line: 0, scope: !7053)
!7059 = !DILocation(line: 195, column: 28, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !615, line: 185, column: 17)
!7061 = distinct !DILexicalBlock(scope: !7053, file: !615, line: 185, column: 6)
!7062 = !DILocation(line: 195, column: 3, scope: !7060)
!7063 = !DILocation(line: 200, column: 1, scope: !7053)
!7064 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7065, file: !7065, line: 971, type: !5075, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7066)
!7065 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7066 = !{!7067}
!7067 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7064, file: !7065, line: 971, type: !121)
!7068 = !DILocation(line: 0, scope: !7064)
!7069 = !DILocation(line: 973, column: 3, scope: !7064)
!7070 = !DILocation(line: 974, column: 1, scope: !7064)
!7071 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7065, file: !7065, line: 891, type: !6309, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7072)
!7072 = !{!7073}
!7073 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7071, file: !7065, line: 891, type: !121)
!7074 = !DILocation(line: 0, scope: !7071)
!7075 = !DILocation(line: 893, column: 11, scope: !7071)
!7076 = !DILocation(line: 893, column: 40, scope: !7071)
!7077 = !DILocation(line: 893, column: 3, scope: !7071)
!7078 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !615, file: !615, line: 304, type: !668, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7079)
!7079 = !{!7080}
!7080 = !DILocalVariable(name: "dev", arg: 1, scope: !7078, file: !615, line: 304, type: !644)
!7081 = !DILocation(line: 0, scope: !7078)
!7082 = !DILocation(line: 306, column: 2, scope: !7078)
!7083 = !DILocation(line: 307, column: 1, scope: !7078)
!7084 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !615, file: !615, line: 299, type: !668, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7085)
!7085 = !{!7086}
!7086 = !DILocalVariable(name: "dev", arg: 1, scope: !7084, file: !615, line: 299, type: !644)
!7087 = !DILocation(line: 0, scope: !7084)
!7088 = !DILocation(line: 301, column: 2, scope: !7084)
!7089 = !DILocation(line: 302, column: 1, scope: !7084)
!7090 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !615, file: !615, line: 294, type: !668, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7091)
!7091 = !{!7092}
!7092 = !DILocalVariable(name: "dev", arg: 1, scope: !7090, file: !615, line: 294, type: !644)
!7093 = !DILocation(line: 0, scope: !7090)
!7094 = !DILocation(line: 296, column: 2, scope: !7090)
!7095 = !DILocation(line: 297, column: 1, scope: !7090)
!7096 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !615, file: !615, line: 289, type: !668, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7097)
!7097 = !{!7098}
!7098 = !DILocalVariable(name: "dev", arg: 1, scope: !7096, file: !615, line: 289, type: !644)
!7099 = !DILocation(line: 0, scope: !7096)
!7100 = !DILocation(line: 291, column: 2, scope: !7096)
!7101 = !DILocation(line: 292, column: 1, scope: !7096)
!7102 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !615, file: !615, line: 373, type: !668, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7103)
!7103 = !{!7104}
!7104 = !DILocalVariable(name: "dev", arg: 1, scope: !7102, file: !615, line: 373, type: !644)
!7105 = !DILocation(line: 0, scope: !7102)
!7106 = !DILocation(line: 375, column: 2, scope: !7102)
!7107 = !DILocation(line: 376, column: 1, scope: !7102)
!7108 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !615, file: !615, line: 284, type: !668, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7109)
!7109 = !{!7110}
!7110 = !DILocalVariable(name: "dev", arg: 1, scope: !7108, file: !615, line: 284, type: !644)
!7111 = !DILocation(line: 0, scope: !7108)
!7112 = !DILocation(line: 286, column: 2, scope: !7108)
!7113 = !DILocation(line: 287, column: 1, scope: !7108)
!7114 = distinct !DISubprogram(name: "stm32_exti_init", scope: !615, file: !615, line: 416, type: !642, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7115)
!7115 = !{!7116}
!7116 = !DILocalVariable(name: "dev", arg: 1, scope: !7114, file: !615, line: 416, type: !644)
!7117 = !DILocation(line: 0, scope: !7114)
!7118 = !DILocation(line: 418, column: 2, scope: !7114)
!7119 = !DILocation(line: 420, column: 2, scope: !7114)
!7120 = !DILocation(line: 0, scope: !667)
!7121 = !DILocation(line: 493, column: 2, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !667, file: !615, line: 493, column: 2)
!7123 = !DILocation(line: 497, column: 2, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !667, file: !615, line: 497, column: 2)
!7125 = !DILocation(line: 507, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !667, file: !615, line: 507, column: 2)
!7127 = !DILocation(line: 512, column: 2, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !667, file: !615, line: 512, column: 2)
!7129 = !DILocation(line: 516, column: 2, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !667, file: !615, line: 516, column: 2)
!7131 = !DILocation(line: 523, column: 2, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !667, file: !615, line: 523, column: 2)
!7133 = !DILocation(line: 527, column: 2, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !667, file: !615, line: 527, column: 2)
!7135 = !DILocation(line: 607, column: 1, scope: !667)
!7136 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !615, file: !615, line: 112, type: !7054, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7137)
!7137 = !{!7138, !7139}
!7138 = !DILocalVariable(name: "line", arg: 1, scope: !7136, file: !615, line: 112, type: !103)
!7139 = !DILocalVariable(name: "irqnum", scope: !7136, file: !615, line: 114, type: !103)
!7140 = !DILocation(line: 0, scope: !7136)
!7141 = !DILocation(line: 121, column: 11, scope: !7136)
!7142 = !DILocation(line: 130, column: 26, scope: !7136)
!7143 = !DILocation(line: 130, column: 2, scope: !7136)
!7144 = !DILocation(line: 134, column: 2, scope: !7136)
!7145 = !DILocation(line: 135, column: 1, scope: !7136)
!7146 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7065, file: !7065, line: 274, type: !5075, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7147)
!7147 = !{!7148}
!7148 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7146, file: !7065, line: 274, type: !121)
!7149 = !DILocation(line: 0, scope: !7146)
!7150 = !DILocation(line: 276, column: 3, scope: !7146)
!7151 = !DILocation(line: 277, column: 1, scope: !7146)
!7152 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !615, file: !615, line: 137, type: !7054, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7153)
!7153 = !{!7154}
!7154 = !DILocalVariable(name: "line", arg: 1, scope: !7152, file: !615, line: 137, type: !103)
!7155 = !DILocation(line: 0, scope: !7152)
!7156 = !DILocation(line: 141, column: 11, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7152, file: !615, line: 141, column: 6)
!7158 = !DILocation(line: 141, column: 6, scope: !7152)
!7159 = !DILocation(line: 145, column: 28, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7157, file: !615, line: 141, column: 17)
!7161 = !DILocation(line: 145, column: 3, scope: !7160)
!7162 = !DILocation(line: 147, column: 2, scope: !7160)
!7163 = !DILocation(line: 151, column: 1, scope: !7152)
!7164 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7065, file: !7065, line: 322, type: !5075, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7165)
!7165 = !{!7166}
!7166 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7164, file: !7065, line: 322, type: !121)
!7167 = !DILocation(line: 0, scope: !7164)
!7168 = !DILocation(line: 324, column: 3, scope: !7164)
!7169 = !DILocation(line: 325, column: 1, scope: !7164)
!7170 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !615, file: !615, line: 202, type: !7171, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7173)
!7171 = !DISubroutineType(types: !7172)
!7172 = !{null, !103, !103}
!7173 = !{!7174, !7175}
!7174 = !DILocalVariable(name: "line", arg: 1, scope: !7170, file: !615, line: 202, type: !103)
!7175 = !DILocalVariable(name: "trigger", arg: 2, scope: !7170, file: !615, line: 202, type: !103)
!7176 = !DILocation(line: 0, scope: !7170)
!7177 = !DILocation(line: 211, column: 2, scope: !7170)
!7178 = !DILocation(line: 213, column: 36, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7170, file: !615, line: 211, column: 19)
!7180 = !DILocation(line: 213, column: 3, scope: !7179)
!7181 = !DILocation(line: 214, column: 3, scope: !7179)
!7182 = !DILocation(line: 215, column: 3, scope: !7179)
!7183 = !DILocation(line: 217, column: 35, scope: !7179)
!7184 = !DILocation(line: 217, column: 3, scope: !7179)
!7185 = !DILocation(line: 218, column: 3, scope: !7179)
!7186 = !DILocation(line: 219, column: 3, scope: !7179)
!7187 = !DILocation(line: 221, column: 36, scope: !7179)
!7188 = !DILocation(line: 221, column: 3, scope: !7179)
!7189 = !DILocation(line: 222, column: 3, scope: !7179)
!7190 = !DILocation(line: 223, column: 3, scope: !7179)
!7191 = !DILocation(line: 225, column: 35, scope: !7179)
!7192 = !DILocation(line: 225, column: 3, scope: !7179)
!7193 = !DILocation(line: 226, column: 3, scope: !7179)
!7194 = !DILocation(line: 227, column: 3, scope: !7179)
!7195 = !DILocation(line: 232, column: 1, scope: !7170)
!7196 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7065, file: !7065, line: 618, type: !5075, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7197)
!7197 = !{!7198}
!7198 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7196, file: !7065, line: 618, type: !121)
!7199 = !DILocation(line: 0, scope: !7196)
!7200 = !DILocation(line: 620, column: 3, scope: !7196)
!7201 = !DILocation(line: 622, column: 1, scope: !7196)
!7202 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7065, file: !7065, line: 754, type: !5075, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7203)
!7203 = !{!7204}
!7204 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7202, file: !7065, line: 754, type: !121)
!7205 = !DILocation(line: 0, scope: !7202)
!7206 = !DILocation(line: 756, column: 3, scope: !7202)
!7207 = !DILocation(line: 757, column: 1, scope: !7202)
!7208 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7065, file: !7065, line: 572, type: !5075, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7209)
!7209 = !{!7210}
!7210 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7208, file: !7065, line: 572, type: !121)
!7211 = !DILocation(line: 0, scope: !7208)
!7212 = !DILocation(line: 574, column: 3, scope: !7208)
!7213 = !DILocation(line: 576, column: 1, scope: !7208)
!7214 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7065, file: !7065, line: 710, type: !5075, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7215)
!7215 = !{!7216}
!7216 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7214, file: !7065, line: 710, type: !121)
!7217 = !DILocation(line: 0, scope: !7214)
!7218 = !DILocation(line: 712, column: 3, scope: !7214)
!7219 = !DILocation(line: 713, column: 1, scope: !7214)
!7220 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !615, file: !615, line: 433, type: !7221, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7223)
!7221 = !DISubroutineType(types: !7222)
!7222 = !{!103, !103, !655, !102}
!7223 = !{!7224, !7225, !7226, !7227, !7229}
!7224 = !DILocalVariable(name: "line", arg: 1, scope: !7220, file: !615, line: 433, type: !103)
!7225 = !DILocalVariable(name: "cb", arg: 2, scope: !7220, file: !615, line: 433, type: !655)
!7226 = !DILocalVariable(name: "arg", arg: 3, scope: !7220, file: !615, line: 433, type: !102)
!7227 = !DILocalVariable(name: "dev", scope: !7220, file: !615, line: 435, type: !7228)
!7228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !644)
!7229 = !DILocalVariable(name: "data", scope: !7220, file: !615, line: 436, type: !7019)
!7230 = !DILocation(line: 0, scope: !7220)
!7231 = !DILocation(line: 438, column: 21, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7220, file: !615, line: 438, column: 6)
!7233 = !DILocation(line: 438, column: 6, scope: !7232)
!7234 = !DILocation(line: 438, column: 6, scope: !7220)
!7235 = !DILocation(line: 442, column: 20, scope: !7220)
!7236 = !DILocation(line: 443, column: 17, scope: !7220)
!7237 = !DILocation(line: 443, column: 22, scope: !7220)
!7238 = !DILocation(line: 445, column: 2, scope: !7220)
!7239 = !DILocation(line: 446, column: 1, scope: !7220)
!7240 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !615, file: !615, line: 448, type: !7054, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7241)
!7241 = !{!7242, !7243, !7244}
!7242 = !DILocalVariable(name: "line", arg: 1, scope: !7240, file: !615, line: 448, type: !103)
!7243 = !DILocalVariable(name: "dev", scope: !7240, file: !615, line: 450, type: !7228)
!7244 = !DILocalVariable(name: "data", scope: !7240, file: !615, line: 451, type: !7019)
!7245 = !DILocation(line: 0, scope: !7240)
!7246 = !DILocation(line: 453, column: 17, scope: !7240)
!7247 = !DILocation(line: 453, column: 20, scope: !7240)
!7248 = !DILocation(line: 454, column: 17, scope: !7240)
!7249 = !DILocation(line: 454, column: 22, scope: !7240)
!7250 = !DILocation(line: 455, column: 1, scope: !7240)
!7251 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !772, file: !772, line: 183, type: !810, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7252)
!7252 = !{!7253, !7254, !7255, !7256, !7257}
!7253 = !DILocalVariable(name: "dev", arg: 1, scope: !7251, file: !772, line: 183, type: !801)
!7254 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7251, file: !772, line: 184, type: !812)
!7255 = !DILocalVariable(name: "pclken", scope: !7251, file: !772, line: 186, type: !762)
!7256 = !DILocalVariable(name: "reg", scope: !7251, file: !772, line: 187, type: !1851)
!7257 = !DILocalVariable(name: "reg_val", scope: !7251, file: !772, line: 188, type: !121)
!7258 = !DILocation(line: 0, scope: !7251)
!7259 = !DILocation(line: 192, column: 6, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7251, file: !772, line: 192, column: 6)
!7261 = !DILocation(line: 192, column: 6, scope: !7251)
!7262 = !DILocation(line: 197, column: 52, scope: !7251)
!7263 = !DILocation(line: 197, column: 8, scope: !7251)
!7264 = !DILocation(line: 198, column: 12, scope: !7251)
!7265 = !DILocation(line: 199, column: 21, scope: !7251)
!7266 = !DILocation(line: 199, column: 10, scope: !7251)
!7267 = !DILocation(line: 200, column: 7, scope: !7251)
!7268 = !DILocation(line: 202, column: 2, scope: !7251)
!7269 = !DILocation(line: 203, column: 1, scope: !7251)
!7270 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !772, file: !772, line: 205, type: !810, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7271)
!7271 = !{!7272, !7273, !7274, !7275, !7276}
!7272 = !DILocalVariable(name: "dev", arg: 1, scope: !7270, file: !772, line: 205, type: !801)
!7273 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7270, file: !772, line: 206, type: !812)
!7274 = !DILocalVariable(name: "pclken", scope: !7270, file: !772, line: 208, type: !762)
!7275 = !DILocalVariable(name: "reg", scope: !7270, file: !772, line: 209, type: !1851)
!7276 = !DILocalVariable(name: "reg_val", scope: !7270, file: !772, line: 210, type: !121)
!7277 = !DILocation(line: 0, scope: !7270)
!7278 = !DILocation(line: 214, column: 6, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7270, file: !772, line: 214, column: 6)
!7280 = !DILocation(line: 214, column: 6, scope: !7270)
!7281 = !DILocation(line: 219, column: 52, scope: !7270)
!7282 = !DILocation(line: 219, column: 8, scope: !7270)
!7283 = !DILocation(line: 220, column: 12, scope: !7270)
!7284 = !DILocation(line: 221, column: 22, scope: !7270)
!7285 = !DILocation(line: 221, column: 13, scope: !7270)
!7286 = !DILocation(line: 221, column: 10, scope: !7270)
!7287 = !DILocation(line: 222, column: 7, scope: !7270)
!7288 = !DILocation(line: 224, column: 2, scope: !7270)
!7289 = !DILocation(line: 225, column: 1, scope: !7270)
!7290 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !772, file: !772, line: 262, type: !826, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7291)
!7291 = !{!7292, !7293, !7294, !7295, !7296, !7297, !7298}
!7292 = !DILocalVariable(name: "clock", arg: 1, scope: !7290, file: !772, line: 262, type: !801)
!7293 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7290, file: !772, line: 263, type: !812)
!7294 = !DILocalVariable(name: "rate", arg: 3, scope: !7290, file: !772, line: 264, type: !768)
!7295 = !DILocalVariable(name: "pclken", scope: !7290, file: !772, line: 266, type: !762)
!7296 = !DILocalVariable(name: "ahb_clock", scope: !7290, file: !772, line: 273, type: !121)
!7297 = !DILocalVariable(name: "apb1_clock", scope: !7290, file: !772, line: 274, type: !121)
!7298 = !DILocalVariable(name: "apb2_clock", scope: !7290, file: !772, line: 276, type: !121)
!7299 = !DILocation(line: 0, scope: !7290)
!7300 = !DILocation(line: 273, column: 23, scope: !7290)
!7301 = !DILocation(line: 299, column: 18, scope: !7290)
!7302 = !DILocation(line: 299, column: 2, scope: !7290)
!7303 = !DILocation(line: 374, column: 3, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7290, file: !772, line: 299, column: 23)
!7305 = !DILocation(line: 379, column: 3, scope: !7304)
!7306 = !DILocation(line: 389, column: 3, scope: !7304)
!7307 = !DILocation(line: 0, scope: !7304)
!7308 = !DILocation(line: 396, column: 1, scope: !7290)
!7309 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !772, file: !772, line: 227, type: !842, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7310)
!7310 = !{!7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318}
!7311 = !DILocalVariable(name: "dev", arg: 1, scope: !7309, file: !772, line: 227, type: !801)
!7312 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7309, file: !772, line: 228, type: !812)
!7313 = !DILocalVariable(name: "data", arg: 3, scope: !7309, file: !772, line: 229, type: !102)
!7314 = !DILocalVariable(name: "pclken", scope: !7309, file: !772, line: 233, type: !762)
!7315 = !DILocalVariable(name: "reg", scope: !7309, file: !772, line: 234, type: !1851)
!7316 = !DILocalVariable(name: "reg_val", scope: !7309, file: !772, line: 235, type: !121)
!7317 = !DILocalVariable(name: "dt_val", scope: !7309, file: !772, line: 235, type: !121)
!7318 = !DILocalVariable(name: "err", scope: !7309, file: !772, line: 236, type: !103)
!7319 = !DILocation(line: 0, scope: !7309)
!7320 = !DILocation(line: 241, column: 30, scope: !7309)
!7321 = !DILocation(line: 241, column: 8, scope: !7309)
!7322 = !DILocation(line: 242, column: 10, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7309, file: !772, line: 242, column: 6)
!7324 = !DILocation(line: 242, column: 6, scope: !7309)
!7325 = !DILocation(line: 247, column: 11, scope: !7309)
!7326 = !DILocation(line: 248, column: 6, scope: !7309)
!7327 = !DILocation(line: 247, column: 44, scope: !7309)
!7328 = !DILocation(line: 250, column: 6, scope: !7309)
!7329 = !DILocation(line: 249, column: 52, scope: !7309)
!7330 = !DILocation(line: 249, column: 8, scope: !7309)
!7331 = !DILocation(line: 251, column: 12, scope: !7309)
!7332 = !DILocation(line: 252, column: 10, scope: !7309)
!7333 = !DILocation(line: 253, column: 7, scope: !7309)
!7334 = !DILocation(line: 255, column: 2, scope: !7309)
!7335 = !DILocation(line: 260, column: 1, scope: !7309)
!7336 = distinct !DISubprogram(name: "enabled_clock", scope: !772, file: !772, line: 100, type: !7337, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7339)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{!103, !121}
!7339 = !{!7340, !7341}
!7340 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7336, file: !772, line: 100, type: !121)
!7341 = !DILocalVariable(name: "r", scope: !7336, file: !772, line: 102, type: !103)
!7342 = !DILocation(line: 0, scope: !7336)
!7343 = !DILocation(line: 104, column: 2, scope: !7336)
!7344 = !DILocation(line: 180, column: 2, scope: !7336)
!7345 = !DILocation(line: 181, column: 1, scope: !7336)
!7346 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !772, file: !772, line: 641, type: !799, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7347)
!7347 = !{!7348, !7349, !7350}
!7348 = !DILocalVariable(name: "dev", arg: 1, scope: !7346, file: !772, line: 641, type: !801)
!7349 = !DILocalVariable(name: "old_flash_freq", scope: !7346, file: !772, line: 664, type: !121)
!7350 = !DILocalVariable(name: "new_flash_freq", scope: !7346, file: !772, line: 665, type: !121)
!7351 = !DILocation(line: 0, scope: !7346)
!7352 = !DILocation(line: 646, column: 2, scope: !7346)
!7353 = !DILocation(line: 667, column: 19, scope: !7346)
!7354 = !DILocation(line: 674, column: 21, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7346, file: !772, line: 674, column: 6)
!7356 = !DILocation(line: 674, column: 6, scope: !7346)
!7357 = !DILocation(line: 675, column: 3, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7355, file: !772, line: 674, column: 59)
!7359 = !DILocation(line: 676, column: 2, scope: !7358)
!7360 = !DILocation(line: 680, column: 2, scope: !7346)
!7361 = !DILocation(line: 683, column: 2, scope: !7346)
!7362 = !DILocation(line: 690, column: 3, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !772, line: 689, column: 9)
!7364 = distinct !DILexicalBlock(scope: !7346, file: !772, line: 685, column: 6)
!7365 = !DILocation(line: 695, column: 2, scope: !7346)
!7366 = !DILocation(line: 696, column: 2, scope: !7346)
!7367 = !DILocation(line: 696, column: 9, scope: !7346)
!7368 = !DILocation(line: 696, column: 34, scope: !7346)
!7369 = distinct !{!7369, !7366, !7370}
!7370 = !DILocation(line: 697, column: 2, scope: !7346)
!7371 = !DILocation(line: 720, column: 21, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7346, file: !772, line: 720, column: 6)
!7373 = !DILocation(line: 720, column: 6, scope: !7346)
!7374 = !DILocation(line: 721, column: 3, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7372, file: !772, line: 720, column: 60)
!7376 = !DILocation(line: 722, column: 2, scope: !7375)
!7377 = !DILocation(line: 725, column: 18, scope: !7346)
!7378 = !DILocation(line: 728, column: 2, scope: !7346)
!7379 = !DILocation(line: 730, column: 2, scope: !7346)
!7380 = !DILocation(line: 745, column: 2, scope: !7346)
!7381 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7382, file: !7382, line: 995, type: !5097, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7382 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7383 = !DILocation(line: 997, column: 21, scope: !7381)
!7384 = !DILocation(line: 997, column: 3, scope: !7381)
!7385 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !772, file: !772, line: 507, type: !3124, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7386 = !DILocation(line: 534, column: 7, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7388, file: !772, line: 534, column: 7)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !772, line: 532, column: 37)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !772, line: 532, column: 6)
!7390 = !DILocation(line: 534, column: 28, scope: !7387)
!7391 = !DILocation(line: 534, column: 7, scope: !7388)
!7392 = !DILocation(line: 536, column: 4, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7387, file: !772, line: 534, column: 34)
!7394 = !DILocation(line: 537, column: 4, scope: !7393)
!7395 = !DILocation(line: 537, column: 11, scope: !7393)
!7396 = !DILocation(line: 537, column: 32, scope: !7393)
!7397 = distinct !{!7397, !7394, !7398}
!7398 = !DILocation(line: 539, column: 4, scope: !7393)
!7399 = !DILocation(line: 583, column: 3, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !772, line: 577, column: 37)
!7401 = distinct !DILexicalBlock(scope: !7385, file: !772, line: 577, column: 6)
!7402 = !DILocation(line: 584, column: 3, scope: !7400)
!7403 = !DILocation(line: 584, column: 10, scope: !7400)
!7404 = !DILocation(line: 584, column: 31, scope: !7400)
!7405 = distinct !{!7405, !7402, !7406}
!7406 = !DILocation(line: 585, column: 3, scope: !7400)
!7407 = !DILocation(line: 627, column: 1, scope: !7385)
!7408 = distinct !DISubprogram(name: "set_up_plls", scope: !772, file: !772, line: 448, type: !3124, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7409 = !DILocation(line: 460, column: 6, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7408, file: !772, line: 460, column: 6)
!7411 = !DILocation(line: 460, column: 31, scope: !7410)
!7412 = !DILocation(line: 460, column: 6, scope: !7408)
!7413 = !DILocation(line: 461, column: 3, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7410, file: !772, line: 460, column: 67)
!7415 = !DILocation(line: 462, column: 3, scope: !7414)
!7416 = !DILocation(line: 463, column: 2, scope: !7414)
!7417 = !DILocation(line: 464, column: 2, scope: !7408)
!7418 = !DILocation(line: 496, column: 2, scope: !7408)
!7419 = !DILocation(line: 499, column: 2, scope: !7408)
!7420 = !DILocation(line: 500, column: 2, scope: !7408)
!7421 = !DILocation(line: 500, column: 9, scope: !7408)
!7422 = !DILocation(line: 500, column: 30, scope: !7408)
!7423 = distinct !{!7423, !7420, !7424}
!7424 = !DILocation(line: 502, column: 2, scope: !7408)
!7425 = !DILocation(line: 505, column: 1, scope: !7408)
!7426 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7382, file: !7382, line: 944, type: !5075, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7427)
!7427 = !{!7428}
!7428 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7426, file: !7382, line: 944, type: !121)
!7429 = !DILocation(line: 0, scope: !7426)
!7430 = !DILocation(line: 946, column: 3, scope: !7426)
!7431 = !DILocation(line: 947, column: 1, scope: !7426)
!7432 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7382, file: !7382, line: 910, type: !5075, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7433)
!7433 = !{!7434}
!7434 = !DILocalVariable(name: "Source", arg: 1, scope: !7432, file: !7382, line: 910, type: !121)
!7435 = !DILocation(line: 0, scope: !7432)
!7436 = !DILocation(line: 912, column: 3, scope: !7432)
!7437 = !DILocation(line: 913, column: 1, scope: !7432)
!7438 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7382, file: !7382, line: 924, type: !5097, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7439 = !DILocation(line: 926, column: 21, scope: !7438)
!7440 = !DILocation(line: 926, column: 3, scope: !7438)
!7441 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7382, file: !7382, line: 960, type: !5075, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7442)
!7442 = !{!7443}
!7443 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7441, file: !7382, line: 960, type: !121)
!7444 = !DILocation(line: 0, scope: !7441)
!7445 = !DILocation(line: 962, column: 3, scope: !7441)
!7446 = !DILocation(line: 963, column: 1, scope: !7441)
!7447 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7382, file: !7382, line: 976, type: !5075, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !7448)
!7448 = !{!7449}
!7449 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7447, file: !7382, line: 976, type: !121)
!7450 = !DILocation(line: 0, scope: !7447)
!7451 = !DILocation(line: 978, column: 3, scope: !7447)
!7452 = !DILocation(line: 979, column: 1, scope: !7447)
!7453 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !772, file: !772, line: 409, type: !3124, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7454 = !DILocation(line: 412, column: 6, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7453, file: !772, line: 412, column: 6)
!7456 = !DILocation(line: 412, column: 27, scope: !7455)
!7457 = !DILocation(line: 412, column: 6, scope: !7453)
!7458 = !DILocation(line: 414, column: 3, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !772, line: 412, column: 33)
!7460 = !DILocation(line: 415, column: 3, scope: !7459)
!7461 = !DILocation(line: 415, column: 10, scope: !7459)
!7462 = !DILocation(line: 415, column: 31, scope: !7459)
!7463 = distinct !{!7463, !7460, !7464}
!7464 = !DILocation(line: 417, column: 3, scope: !7459)
!7465 = !DILocation(line: 421, column: 2, scope: !7453)
!7466 = !DILocation(line: 422, column: 2, scope: !7453)
!7467 = !DILocation(line: 422, column: 9, scope: !7453)
!7468 = !DILocation(line: 422, column: 34, scope: !7453)
!7469 = distinct !{!7469, !7466, !7470}
!7470 = !DILocation(line: 423, column: 2, scope: !7453)
!7471 = !DILocation(line: 424, column: 1, scope: !7453)
!7472 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7382, file: !7382, line: 1180, type: !3124, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7473 = !DILocation(line: 1182, column: 3, scope: !7472)
!7474 = !DILocation(line: 1183, column: 1, scope: !7472)
!7475 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7382, file: !7382, line: 1169, type: !3124, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7476 = !DILocation(line: 1171, column: 3, scope: !7475)
!7477 = !DILocation(line: 1172, column: 1, scope: !7475)
!7478 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7382, file: !7382, line: 1190, type: !5097, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7479 = !DILocation(line: 1192, column: 12, scope: !7478)
!7480 = !DILocation(line: 1192, column: 11, scope: !7478)
!7481 = !DILocation(line: 1192, column: 3, scope: !7478)
!7482 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7382, file: !7382, line: 612, type: !5097, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7483 = !DILocation(line: 614, column: 12, scope: !7482)
!7484 = !DILocation(line: 614, column: 11, scope: !7482)
!7485 = !DILocation(line: 614, column: 3, scope: !7482)
!7486 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7382, file: !7382, line: 592, type: !3124, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7487 = !DILocation(line: 594, column: 3, scope: !7486)
!7488 = !DILocation(line: 595, column: 1, scope: !7486)
!7489 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7382, file: !7382, line: 760, type: !3124, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7490 = !DILocation(line: 762, column: 3, scope: !7489)
!7491 = !DILocation(line: 763, column: 1, scope: !7489)
!7492 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7382, file: !7382, line: 780, type: !5097, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !728, retainedNodes: !335)
!7493 = !DILocation(line: 782, column: 12, scope: !7492)
!7494 = !DILocation(line: 782, column: 11, scope: !7492)
!7495 = !DILocation(line: 782, column: 3, scope: !7492)
!7496 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7497, file: !7497, line: 48, type: !5097, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !335)
!7497 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7498 = !DILocation(line: 51, column: 3, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !7497, line: 50, column: 37)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !7497, line: 50, column: 6)
!7501 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7497, file: !7497, line: 64, type: !3124, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !335)
!7502 = !DILocation(line: 66, column: 2, scope: !7501)
!7503 = !DILocation(line: 69, column: 1, scope: !7501)
!7504 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7382, file: !7382, line: 1219, type: !7505, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7507)
!7505 = !DISubroutineType(types: !7506)
!7506 = !{null, !121, !121, !121}
!7507 = !{!7508, !7509, !7510}
!7508 = !DILocalVariable(name: "Source", arg: 1, scope: !7504, file: !7382, line: 1219, type: !121)
!7509 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !7504, file: !7382, line: 1219, type: !121)
!7510 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !7504, file: !7382, line: 1219, type: !121)
!7511 = !DILocation(line: 0, scope: !7504)
!7512 = !DILocation(line: 1221, column: 3, scope: !7504)
!7513 = !DILocation(line: 1222, column: 1, scope: !7504)
!7514 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !7497, file: !7497, line: 75, type: !5097, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !335)
!7515 = !DILocation(line: 77, column: 9, scope: !7514)
!7516 = !DILocation(line: 77, column: 2, scope: !7514)
!7517 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7497, file: !7497, line: 87, type: !3124, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !335)
!7518 = !DILocation(line: 93, column: 2, scope: !7517)
!7519 = !DILocation(line: 95, column: 1, scope: !7517)
!7520 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5074, file: !5074, line: 895, type: !5075, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7521)
!7521 = !{!7522, !7523}
!7522 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7520, file: !5074, line: 895, type: !121)
!7523 = !DILocalVariable(name: "tmpreg", scope: !7520, file: !5074, line: 897, type: !120)
!7524 = !DILocation(line: 0, scope: !7520)
!7525 = !DILocation(line: 897, column: 3, scope: !7520)
!7526 = !DILocation(line: 897, column: 17, scope: !7520)
!7527 = !DILocation(line: 898, column: 3, scope: !7520)
!7528 = !DILocation(line: 900, column: 12, scope: !7520)
!7529 = !DILocation(line: 900, column: 10, scope: !7520)
!7530 = !DILocation(line: 901, column: 9, scope: !7520)
!7531 = !DILocation(line: 902, column: 1, scope: !7520)
!7532 = distinct !DISubprogram(name: "uart_console_init", scope: !903, file: !903, line: 588, type: !880, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7533)
!7533 = !{!7534}
!7534 = !DILocalVariable(name: "arg", arg: 1, scope: !7532, file: !903, line: 588, type: !858)
!7535 = !DILocation(line: 0, scope: !7532)
!7536 = !DILocation(line: 593, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7532, file: !903, line: 593, column: 6)
!7538 = !DILocation(line: 593, column: 6, scope: !7532)
!7539 = !DILocation(line: 597, column: 2, scope: !7532)
!7540 = !DILocation(line: 599, column: 2, scope: !7532)
!7541 = !DILocation(line: 600, column: 1, scope: !7532)
!7542 = distinct !DISubprogram(name: "device_is_ready", scope: !3359, file: !3359, line: 47, type: !7543, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7545)
!7543 = !DISubroutineType(types: !7544)
!7544 = !{!170, !858}
!7545 = !{!7546}
!7546 = !DILocalVariable(name: "dev", arg: 1, scope: !7542, file: !3359, line: 47, type: !858)
!7547 = !DILocation(line: 0, scope: !7542)
!7548 = !DILocation(line: 55, column: 2, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7542, file: !3359, line: 55, column: 2)
!7550 = !{i64 2152409071}
!7551 = !DILocation(line: 56, column: 9, scope: !7542)
!7552 = !DILocation(line: 56, column: 2, scope: !7542)
!7553 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !903, file: !903, line: 573, type: !3124, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !335)
!7554 = !DILocation(line: 576, column: 2, scope: !7553)
!7555 = !DILocation(line: 579, column: 2, scope: !7553)
!7556 = !DILocation(line: 581, column: 1, scope: !7553)
!7557 = distinct !DISubprogram(name: "console_out", scope: !903, file: !903, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7558)
!7558 = !{!7559}
!7559 = !DILocalVariable(name: "c", arg: 1, scope: !7557, file: !903, line: 77, type: !103)
!7560 = !DILocation(line: 0, scope: !7557)
!7561 = !DILocation(line: 89, column: 11, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7557, file: !903, line: 89, column: 6)
!7563 = !DILocation(line: 89, column: 6, scope: !7557)
!7564 = !DILocation(line: 90, column: 3, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !903, line: 89, column: 17)
!7566 = !DILocation(line: 91, column: 2, scope: !7565)
!7567 = !DILocation(line: 92, column: 34, scope: !7557)
!7568 = !DILocation(line: 92, column: 2, scope: !7557)
!7569 = !DILocation(line: 94, column: 2, scope: !7557)
!7570 = distinct !DISubprogram(name: "uart_poll_out", scope: !7571, file: !7571, line: 95, type: !876, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7572)
!7571 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/eeprom")
!7572 = !{!7573, !7574}
!7573 = !DILocalVariable(name: "dev", arg: 1, scope: !7570, file: !7571, line: 95, type: !858)
!7574 = !DILocalVariable(name: "out_char", arg: 2, scope: !7570, file: !7571, line: 95, type: !168)
!7575 = !DILocation(line: 0, scope: !7570)
!7576 = !DILocation(line: 105, column: 2, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7570, file: !7571, line: 105, column: 2)
!7578 = !{i64 2152492462}
!7579 = !DILocation(line: 106, column: 2, scope: !7570)
!7580 = !DILocation(line: 107, column: 1, scope: !7570)
!7581 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !852, file: !852, line: 574, type: !876, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7582)
!7582 = !{!7583, !7584, !7585}
!7583 = !DILocalVariable(name: "dev", arg: 1, scope: !7581, file: !852, line: 574, type: !858)
!7584 = !DILocalVariable(name: "out_char", arg: 2, scope: !7581, file: !852, line: 575, type: !168)
!7585 = !DILocalVariable(name: "api", scope: !7581, file: !852, line: 577, type: !849)
!7586 = !DILocation(line: 0, scope: !7581)
!7587 = !DILocation(line: 578, column: 40, scope: !7581)
!7588 = !DILocation(line: 580, column: 7, scope: !7581)
!7589 = !DILocation(line: 580, column: 2, scope: !7581)
!7590 = !DILocation(line: 581, column: 1, scope: !7581)
!7591 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !7543, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7592)
!7592 = !{!7593}
!7593 = !DILocalVariable(name: "dev", arg: 1, scope: !7591, file: !154, line: 730, type: !858)
!7594 = !DILocation(line: 0, scope: !7591)
!7595 = !DILocation(line: 732, column: 9, scope: !7591)
!7596 = !DILocation(line: 732, column: 2, scope: !7591)
!7597 = distinct !DISubprogram(name: "uart_register_input", scope: !903, file: !903, line: 560, type: !7598, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !846, retainedNodes: !7643)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{null, !7600, !7600, !7640}
!7600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7601, size: 32)
!7601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !320, line: 2208, size: 128, elements: !7602)
!7602 = !{!7603}
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7601, file: !320, line: 2209, baseType: !7604, size: 128)
!7604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !320, line: 1709, size: 128, elements: !7605)
!7605 = !{!7606, !7619, !7621}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7604, file: !320, line: 1710, baseType: !7607, size: 64)
!7607 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7608, line: 46, baseType: !7609)
!7608 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7608, line: 41, size: 64, elements: !7610)
!7610 = !{!7611, !7618}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7609, file: !7608, line: 42, baseType: !7612, size: 32)
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 32)
!7613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7608, line: 39, baseType: !7614)
!7614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7608, line: 35, size: 32, elements: !7615)
!7615 = !{!7616}
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7614, file: !7608, line: 36, baseType: !7617, size: 32)
!7617 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7608, line: 32, baseType: !121)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7609, file: !7608, line: 43, baseType: !7612, size: 32, offset: 32)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7604, file: !320, line: 1711, baseType: !7620, offset: 64)
!7620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7604, file: !320, line: 1712, baseType: !7622, size: 64, offset: 64)
!7622 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !7623)
!7623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !7624)
!7624 = !{!7625}
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7623, file: !260, line: 232, baseType: !7626, size: 64)
!7626 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !7627)
!7627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !7628)
!7628 = !{!7629, !7635}
!7629 = !DIDerivedType(tag: DW_TAG_member, scope: !7627, file: !234, line: 38, baseType: !7630, size: 32)
!7630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7627, file: !234, line: 38, size: 32, elements: !7631)
!7631 = !{!7632, !7634}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7630, file: !234, line: 39, baseType: !7633, size: 32)
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 32)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7630, file: !234, line: 40, baseType: !7633, size: 32)
!7635 = !DIDerivedType(tag: DW_TAG_member, scope: !7627, file: !234, line: 42, baseType: !7636, size: 32, offset: 32)
!7636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7627, file: !234, line: 42, size: 32, elements: !7637)
!7637 = !{!7638, !7639}
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7636, file: !234, line: 43, baseType: !7633, size: 32)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7636, file: !234, line: 44, baseType: !7633, size: 32)
!7640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7641, size: 32)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!167, !1019, !167}
!7643 = !{!7644, !7645, !7646}
!7644 = !DILocalVariable(name: "avail", arg: 1, scope: !7597, file: !903, line: 560, type: !7600)
!7645 = !DILocalVariable(name: "lines", arg: 2, scope: !7597, file: !903, line: 560, type: !7600)
!7646 = !DILocalVariable(name: "completion", arg: 3, scope: !7597, file: !903, line: 561, type: !7640)
!7647 = !DILocation(line: 0, scope: !7597)
!7648 = !DILocation(line: 566, column: 1, scope: !7597)
!7649 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1063, file: !1063, line: 523, type: !928, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7650)
!7650 = !{!7651, !7652, !7653, !7654, !7655}
!7651 = !DILocalVariable(name: "dev", arg: 1, scope: !7649, file: !1063, line: 523, type: !930)
!7652 = !DILocalVariable(name: "pin", arg: 2, scope: !7649, file: !1063, line: 524, type: !473)
!7653 = !DILocalVariable(name: "flags", arg: 3, scope: !7649, file: !1063, line: 524, type: !474)
!7654 = !DILocalVariable(name: "err", scope: !7649, file: !1063, line: 526, type: !103)
!7655 = !DILocalVariable(name: "pincfg", scope: !7649, file: !1063, line: 527, type: !103)
!7656 = !DILocation(line: 0, scope: !7649)
!7657 = !DILocation(line: 527, column: 2, scope: !7649)
!7658 = !DILocation(line: 532, column: 8, scope: !7649)
!7659 = !DILocation(line: 533, column: 10, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7649, file: !1063, line: 533, column: 6)
!7661 = !DILocation(line: 533, column: 6, scope: !7649)
!7662 = !DILocation(line: 543, column: 13, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7649, file: !1063, line: 543, column: 6)
!7664 = !DILocation(line: 543, column: 28, scope: !7663)
!7665 = !DILocation(line: 543, column: 6, scope: !7649)
!7666 = !DILocation(line: 544, column: 14, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !1063, line: 544, column: 7)
!7668 = distinct !DILexicalBlock(scope: !7663, file: !1063, line: 543, column: 34)
!7669 = !DILocation(line: 544, column: 39, scope: !7667)
!7670 = !DILocation(line: 544, column: 7, scope: !7668)
!7671 = !DILocation(line: 545, column: 38, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7667, file: !1063, line: 544, column: 45)
!7673 = !DILocation(line: 545, column: 4, scope: !7672)
!7674 = !DILocation(line: 546, column: 3, scope: !7672)
!7675 = !DILocation(line: 546, column: 21, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7667, file: !1063, line: 546, column: 14)
!7677 = !DILocation(line: 546, column: 45, scope: !7676)
!7678 = !DILocation(line: 546, column: 14, scope: !7667)
!7679 = !DILocation(line: 547, column: 40, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7676, file: !1063, line: 546, column: 51)
!7681 = !DILocation(line: 547, column: 4, scope: !7680)
!7682 = !DILocation(line: 548, column: 3, scope: !7680)
!7683 = !DILocation(line: 551, column: 32, scope: !7649)
!7684 = !DILocation(line: 551, column: 37, scope: !7649)
!7685 = !DILocation(line: 551, column: 2, scope: !7649)
!7686 = !DILocation(line: 554, column: 6, scope: !7649)
!7687 = !DILocation(line: 562, column: 1, scope: !7649)
!7688 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1063, file: !1063, line: 410, type: !7689, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7691)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!103, !930, !768}
!7691 = !{!7692, !7693, !7694, !7696}
!7692 = !DILocalVariable(name: "dev", arg: 1, scope: !7688, file: !1063, line: 410, type: !930)
!7693 = !DILocalVariable(name: "value", arg: 2, scope: !7688, file: !1063, line: 410, type: !768)
!7694 = !DILocalVariable(name: "cfg", scope: !7688, file: !1063, line: 412, type: !7695)
!7695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!7696 = !DILocalVariable(name: "gpio", scope: !7688, file: !1063, line: 413, type: !997)
!7697 = !DILocation(line: 0, scope: !7688)
!7698 = !DILocation(line: 412, column: 45, scope: !7688)
!7699 = !DILocation(line: 413, column: 44, scope: !7688)
!7700 = !DILocation(line: 415, column: 11, scope: !7688)
!7701 = !DILocation(line: 415, column: 9, scope: !7688)
!7702 = !DILocation(line: 417, column: 2, scope: !7688)
!7703 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1063, file: !1063, line: 420, type: !951, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7704)
!7704 = !{!7705, !7706, !7707, !7708, !7709, !7710}
!7705 = !DILocalVariable(name: "dev", arg: 1, scope: !7703, file: !1063, line: 420, type: !930)
!7706 = !DILocalVariable(name: "mask", arg: 2, scope: !7703, file: !1063, line: 421, type: !485)
!7707 = !DILocalVariable(name: "value", arg: 3, scope: !7703, file: !1063, line: 422, type: !480)
!7708 = !DILocalVariable(name: "cfg", scope: !7703, file: !1063, line: 424, type: !7695)
!7709 = !DILocalVariable(name: "gpio", scope: !7703, file: !1063, line: 425, type: !997)
!7710 = !DILocalVariable(name: "port_value", scope: !7703, file: !1063, line: 426, type: !121)
!7711 = !DILocation(line: 0, scope: !7703)
!7712 = !DILocation(line: 424, column: 45, scope: !7703)
!7713 = !DILocation(line: 425, column: 44, scope: !7703)
!7714 = !DILocation(line: 430, column: 15, scope: !7703)
!7715 = !DILocation(line: 431, column: 46, scope: !7703)
!7716 = !DILocation(line: 431, column: 44, scope: !7703)
!7717 = !DILocation(line: 431, column: 61, scope: !7703)
!7718 = !DILocation(line: 431, column: 53, scope: !7703)
!7719 = !DILocation(line: 431, column: 2, scope: !7703)
!7720 = !DILocation(line: 435, column: 2, scope: !7703)
!7721 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1063, file: !1063, line: 438, type: !955, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7722)
!7722 = !{!7723, !7724, !7725, !7726}
!7723 = !DILocalVariable(name: "dev", arg: 1, scope: !7721, file: !1063, line: 438, type: !930)
!7724 = !DILocalVariable(name: "pins", arg: 2, scope: !7721, file: !1063, line: 439, type: !485)
!7725 = !DILocalVariable(name: "cfg", scope: !7721, file: !1063, line: 441, type: !7695)
!7726 = !DILocalVariable(name: "gpio", scope: !7721, file: !1063, line: 442, type: !997)
!7727 = !DILocation(line: 0, scope: !7721)
!7728 = !DILocation(line: 441, column: 45, scope: !7721)
!7729 = !DILocation(line: 442, column: 44, scope: !7721)
!7730 = !DILocation(line: 448, column: 2, scope: !7721)
!7731 = !DILocation(line: 450, column: 2, scope: !7721)
!7732 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1063, file: !1063, line: 453, type: !955, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7733)
!7733 = !{!7734, !7735, !7736, !7737}
!7734 = !DILocalVariable(name: "dev", arg: 1, scope: !7732, file: !1063, line: 453, type: !930)
!7735 = !DILocalVariable(name: "pins", arg: 2, scope: !7732, file: !1063, line: 454, type: !485)
!7736 = !DILocalVariable(name: "cfg", scope: !7732, file: !1063, line: 456, type: !7695)
!7737 = !DILocalVariable(name: "gpio", scope: !7732, file: !1063, line: 457, type: !997)
!7738 = !DILocation(line: 0, scope: !7732)
!7739 = !DILocation(line: 456, column: 45, scope: !7732)
!7740 = !DILocation(line: 457, column: 44, scope: !7732)
!7741 = !DILocation(line: 467, column: 2, scope: !7732)
!7742 = !DILocation(line: 470, column: 2, scope: !7732)
!7743 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1063, file: !1063, line: 473, type: !955, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7744)
!7744 = !{!7745, !7746, !7747, !7748}
!7745 = !DILocalVariable(name: "dev", arg: 1, scope: !7743, file: !1063, line: 473, type: !930)
!7746 = !DILocalVariable(name: "pins", arg: 2, scope: !7743, file: !1063, line: 474, type: !485)
!7747 = !DILocalVariable(name: "cfg", scope: !7743, file: !1063, line: 476, type: !7695)
!7748 = !DILocalVariable(name: "gpio", scope: !7743, file: !1063, line: 477, type: !997)
!7749 = !DILocation(line: 0, scope: !7743)
!7750 = !DILocation(line: 476, column: 45, scope: !7743)
!7751 = !DILocation(line: 477, column: 44, scope: !7743)
!7752 = !DILocation(line: 484, column: 2, scope: !7743)
!7753 = !DILocation(line: 487, column: 2, scope: !7743)
!7754 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1063, file: !1063, line: 594, type: !961, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7755)
!7755 = !{!7756, !7757, !7758, !7759, !7760, !7761, !7763, !7764, !7765}
!7756 = !DILocalVariable(name: "dev", arg: 1, scope: !7754, file: !1063, line: 594, type: !930)
!7757 = !DILocalVariable(name: "pin", arg: 2, scope: !7754, file: !1063, line: 595, type: !473)
!7758 = !DILocalVariable(name: "mode", arg: 3, scope: !7754, file: !1063, line: 596, type: !438)
!7759 = !DILocalVariable(name: "trig", arg: 4, scope: !7754, file: !1063, line: 597, type: !444)
!7760 = !DILocalVariable(name: "cfg", scope: !7754, file: !1063, line: 599, type: !7695)
!7761 = !DILocalVariable(name: "data", scope: !7754, file: !1063, line: 600, type: !7762)
!7762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!7763 = !DILocalVariable(name: "edge", scope: !7754, file: !1063, line: 601, type: !103)
!7764 = !DILocalVariable(name: "err", scope: !7754, file: !1063, line: 602, type: !103)
!7765 = !DILabel(scope: !7754, name: "exit", file: !1063, line: 643)
!7766 = !DILocation(line: 0, scope: !7754)
!7767 = !DILocation(line: 599, column: 45, scope: !7754)
!7768 = !DILocation(line: 604, column: 6, scope: !7754)
!7769 = !DILocation(line: 605, column: 34, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !1063, line: 605, column: 7)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !1063, line: 604, column: 38)
!7772 = distinct !DILexicalBlock(scope: !7754, file: !1063, line: 604, column: 6)
!7773 = !DILocation(line: 605, column: 7, scope: !7770)
!7774 = !DILocation(line: 605, column: 47, scope: !7770)
!7775 = !DILocation(line: 605, column: 39, scope: !7770)
!7776 = !DILocation(line: 605, column: 7, scope: !7771)
!7777 = !DILocation(line: 606, column: 4, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7770, file: !1063, line: 605, column: 53)
!7779 = !DILocation(line: 607, column: 4, scope: !7778)
!7780 = !DILocation(line: 608, column: 4, scope: !7778)
!7781 = !DILocation(line: 609, column: 3, scope: !7778)
!7782 = !DILocation(line: 600, column: 38, scope: !7754)
!7783 = !DILocation(line: 620, column: 30, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7754, file: !1063, line: 620, column: 6)
!7785 = !DILocation(line: 620, column: 6, scope: !7784)
!7786 = !DILocation(line: 620, column: 57, scope: !7784)
!7787 = !DILocation(line: 620, column: 6, scope: !7754)
!7788 = !DILocation(line: 625, column: 29, scope: !7754)
!7789 = !DILocation(line: 625, column: 2, scope: !7754)
!7790 = !DILocation(line: 627, column: 2, scope: !7754)
!7791 = !DILocation(line: 630, column: 3, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7754, file: !1063, line: 627, column: 16)
!7793 = !DILocation(line: 633, column: 3, scope: !7792)
!7794 = !DILocation(line: 636, column: 3, scope: !7792)
!7795 = !DILocation(line: 639, column: 2, scope: !7754)
!7796 = !DILocation(line: 641, column: 2, scope: !7754)
!7797 = !DILocation(line: 643, column: 1, scope: !7754)
!7798 = !DILocation(line: 644, column: 2, scope: !7754)
!7799 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1063, file: !1063, line: 647, type: !965, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7800)
!7800 = !{!7801, !7802, !7803, !7804}
!7801 = !DILocalVariable(name: "dev", arg: 1, scope: !7799, file: !1063, line: 647, type: !930)
!7802 = !DILocalVariable(name: "callback", arg: 2, scope: !7799, file: !1063, line: 648, type: !967)
!7803 = !DILocalVariable(name: "set", arg: 3, scope: !7799, file: !1063, line: 649, type: !170)
!7804 = !DILocalVariable(name: "data", scope: !7799, file: !1063, line: 651, type: !7762)
!7805 = !DILocation(line: 0, scope: !7799)
!7806 = !DILocation(line: 651, column: 38, scope: !7799)
!7807 = !DILocation(line: 653, column: 37, scope: !7799)
!7808 = !DILocation(line: 653, column: 9, scope: !7799)
!7809 = !DILocation(line: 653, column: 2, scope: !7799)
!7810 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7811, file: !7811, line: 38, type: !7812, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7815)
!7811 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!103, !7814, !967, !170}
!7814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!7815 = !{!7816, !7817, !7818}
!7816 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7810, file: !7811, line: 38, type: !7814)
!7817 = !DILocalVariable(name: "callback", arg: 2, scope: !7810, file: !7811, line: 39, type: !967)
!7818 = !DILocalVariable(name: "set", arg: 3, scope: !7810, file: !7811, line: 40, type: !170)
!7819 = !DILocation(line: 0, scope: !7810)
!7820 = !DILocation(line: 45, column: 7, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7810, file: !7811, line: 45, column: 6)
!7822 = !DILocation(line: 45, column: 6, scope: !7810)
!7823 = !DILocation(line: 46, column: 56, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7811, line: 46, column: 7)
!7825 = distinct !DILexicalBlock(scope: !7821, file: !7811, line: 45, column: 38)
!7826 = !DILocation(line: 46, column: 8, scope: !7824)
!7827 = !DILocation(line: 46, column: 7, scope: !7825)
!7828 = !DILocation(line: 51, column: 13, scope: !7821)
!7829 = !DILocation(line: 56, column: 43, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !7811, line: 55, column: 11)
!7831 = distinct !DILexicalBlock(scope: !7810, file: !7811, line: 55, column: 6)
!7832 = !DILocation(line: 56, column: 3, scope: !7830)
!7833 = !DILocation(line: 57, column: 2, scope: !7830)
!7834 = !DILocation(line: 60, column: 1, scope: !7810)
!7835 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !505, file: !505, line: 261, type: !7836, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7838)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!170, !7814}
!7838 = !{!7839}
!7839 = !DILocalVariable(name: "list", arg: 1, scope: !7835, file: !505, line: 261, type: !7814)
!7840 = !DILocation(line: 0, scope: !7835)
!7841 = !DILocation(line: 261, column: 1, scope: !7835)
!7842 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !505, file: !505, line: 417, type: !7843, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7845)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!170, !7814, !1133}
!7845 = !{!7846, !7847, !7848, !7849}
!7846 = !DILocalVariable(name: "list", arg: 1, scope: !7842, file: !505, line: 417, type: !7814)
!7847 = !DILocalVariable(name: "node", arg: 2, scope: !7842, file: !505, line: 417, type: !1133)
!7848 = !DILocalVariable(name: "prev", scope: !7842, file: !505, line: 417, type: !1133)
!7849 = !DILocalVariable(name: "test", scope: !7842, file: !505, line: 417, type: !1133)
!7850 = !DILocation(line: 0, scope: !7842)
!7851 = !DILocation(line: 417, column: 1, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7842, file: !505, line: 417, column: 1)
!7853 = !DILocation(line: 417, column: 1, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7852, file: !505, line: 417, column: 1)
!7855 = !DILocation(line: 417, column: 1, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !505, line: 417, column: 1)
!7857 = distinct !DILexicalBlock(scope: !7854, file: !505, line: 417, column: 1)
!7858 = !DILocation(line: 417, column: 1, scope: !7857)
!7859 = distinct !{!7859, !7851, !7851}
!7860 = !DILocation(line: 417, column: 1, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7856, file: !505, line: 417, column: 1)
!7862 = !DILocation(line: 417, column: 1, scope: !7842)
!7863 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !505, file: !505, line: 298, type: !7864, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7866)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{null, !7814, !1133}
!7866 = !{!7867, !7868}
!7867 = !DILocalVariable(name: "list", arg: 1, scope: !7863, file: !505, line: 298, type: !7814)
!7868 = !DILocalVariable(name: "node", arg: 2, scope: !7863, file: !505, line: 298, type: !1133)
!7869 = !DILocation(line: 0, scope: !7863)
!7870 = !DILocation(line: 298, column: 1, scope: !7863)
!7871 = !DILocation(line: 298, column: 1, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7863, file: !505, line: 298, column: 1)
!7873 = !DILocation(line: 298, column: 1, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7872, file: !505, line: 298, column: 1)
!7875 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !505, file: !505, line: 231, type: !7876, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7878)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!1133, !7814}
!7878 = !{!7879}
!7879 = !DILocalVariable(name: "list", arg: 1, scope: !7875, file: !505, line: 231, type: !7814)
!7880 = !DILocation(line: 0, scope: !7875)
!7881 = !DILocation(line: 233, column: 15, scope: !7875)
!7882 = !DILocation(line: 233, column: 2, scope: !7875)
!7883 = distinct !DISubprogram(name: "z_snode_next_set", scope: !505, file: !505, line: 209, type: !7884, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7886)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{null, !1133, !1133}
!7886 = !{!7887, !7888}
!7887 = !DILocalVariable(name: "parent", arg: 1, scope: !7883, file: !505, line: 209, type: !1133)
!7888 = !DILocalVariable(name: "child", arg: 2, scope: !7883, file: !505, line: 209, type: !1133)
!7889 = !DILocation(line: 0, scope: !7883)
!7890 = !DILocation(line: 211, column: 10, scope: !7883)
!7891 = !DILocation(line: 211, column: 15, scope: !7883)
!7892 = !DILocation(line: 212, column: 1, scope: !7883)
!7893 = distinct !DISubprogram(name: "z_slist_head_set", scope: !505, file: !505, line: 214, type: !7864, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7894)
!7894 = !{!7895, !7896}
!7895 = !DILocalVariable(name: "list", arg: 1, scope: !7893, file: !505, line: 214, type: !7814)
!7896 = !DILocalVariable(name: "node", arg: 2, scope: !7893, file: !505, line: 214, type: !1133)
!7897 = !DILocation(line: 0, scope: !7893)
!7898 = !DILocation(line: 216, column: 8, scope: !7893)
!7899 = !DILocation(line: 216, column: 13, scope: !7893)
!7900 = !DILocation(line: 217, column: 1, scope: !7893)
!7901 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !505, file: !505, line: 243, type: !7876, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7902)
!7902 = !{!7903}
!7903 = !DILocalVariable(name: "list", arg: 1, scope: !7901, file: !505, line: 243, type: !7814)
!7904 = !DILocation(line: 0, scope: !7901)
!7905 = !DILocation(line: 245, column: 15, scope: !7901)
!7906 = !DILocation(line: 245, column: 2, scope: !7901)
!7907 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !505, file: !505, line: 219, type: !7864, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7908)
!7908 = !{!7909, !7910}
!7909 = !DILocalVariable(name: "list", arg: 1, scope: !7907, file: !505, line: 219, type: !7814)
!7910 = !DILocalVariable(name: "node", arg: 2, scope: !7907, file: !505, line: 219, type: !1133)
!7911 = !DILocation(line: 0, scope: !7907)
!7912 = !DILocation(line: 221, column: 8, scope: !7907)
!7913 = !DILocation(line: 221, column: 13, scope: !7907)
!7914 = !DILocation(line: 222, column: 1, scope: !7907)
!7915 = distinct !DISubprogram(name: "sys_slist_remove", scope: !505, file: !505, line: 401, type: !7916, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7918)
!7916 = !DISubroutineType(types: !7917)
!7917 = !{null, !7814, !1133, !1133}
!7918 = !{!7919, !7920, !7921}
!7919 = !DILocalVariable(name: "list", arg: 1, scope: !7915, file: !505, line: 401, type: !7814)
!7920 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7915, file: !505, line: 401, type: !1133)
!7921 = !DILocalVariable(name: "node", arg: 3, scope: !7915, file: !505, line: 401, type: !1133)
!7922 = !DILocation(line: 0, scope: !7915)
!7923 = !DILocation(line: 401, column: 1, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7915, file: !505, line: 401, column: 1)
!7925 = !DILocation(line: 0, scope: !7924)
!7926 = !DILocation(line: 401, column: 1, scope: !7915)
!7927 = !DILocation(line: 401, column: 1, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7924, file: !505, line: 401, column: 1)
!7929 = !DILocation(line: 401, column: 1, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7928, file: !505, line: 401, column: 1)
!7931 = !DILocation(line: 401, column: 1, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7930, file: !505, line: 401, column: 1)
!7933 = !DILocation(line: 401, column: 1, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7924, file: !505, line: 401, column: 1)
!7935 = !DILocation(line: 401, column: 1, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7934, file: !505, line: 401, column: 1)
!7937 = !DILocation(line: 401, column: 1, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7936, file: !505, line: 401, column: 1)
!7939 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !505, file: !505, line: 285, type: !7940, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!1133, !1133}
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "node", arg: 1, scope: !7939, file: !505, line: 285, type: !1133)
!7944 = !DILocation(line: 0, scope: !7939)
!7945 = !DILocation(line: 285, column: 1, scope: !7939)
!7946 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !505, file: !505, line: 274, type: !7940, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7947)
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "node", arg: 1, scope: !7946, file: !505, line: 274, type: !1133)
!7949 = !DILocation(line: 0, scope: !7946)
!7950 = !DILocation(line: 274, column: 1, scope: !7946)
!7951 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !505, file: !505, line: 204, type: !7940, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7952)
!7952 = !{!7953}
!7953 = !DILocalVariable(name: "node", arg: 1, scope: !7951, file: !505, line: 204, type: !1133)
!7954 = !DILocation(line: 0, scope: !7951)
!7955 = !DILocation(line: 206, column: 15, scope: !7951)
!7956 = !DILocation(line: 206, column: 2, scope: !7951)
!7957 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1063, file: !1063, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7958)
!7958 = !{!7959, !7960, !7961}
!7959 = !DILocalVariable(name: "pin", arg: 1, scope: !7957, file: !1063, line: 342, type: !103)
!7960 = !DILocalVariable(name: "line", scope: !7957, file: !1063, line: 344, type: !121)
!7961 = !DILocalVariable(name: "port", scope: !7957, file: !1063, line: 345, type: !103)
!7962 = !DILocation(line: 0, scope: !7957)
!7963 = !DILocation(line: 344, column: 18, scope: !7957)
!7964 = !{i32 983040, i32 0}
!7965 = !DILocation(line: 356, column: 9, scope: !7957)
!7966 = !DILocation(line: 370, column: 2, scope: !7957)
!7967 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1063, file: !1063, line: 37, type: !658, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7968)
!7968 = !{!7969, !7970, !7971}
!7969 = !DILocalVariable(name: "line", arg: 1, scope: !7967, file: !1063, line: 37, type: !103)
!7970 = !DILocalVariable(name: "arg", arg: 2, scope: !7967, file: !1063, line: 37, type: !102)
!7971 = !DILocalVariable(name: "data", scope: !7967, file: !1063, line: 39, type: !7762)
!7972 = !DILocation(line: 0, scope: !7967)
!7973 = !DILocation(line: 41, column: 29, scope: !7967)
!7974 = !DILocation(line: 41, column: 39, scope: !7967)
!7975 = !DILocation(line: 41, column: 44, scope: !7967)
!7976 = !DILocation(line: 41, column: 2, scope: !7967)
!7977 = !DILocation(line: 42, column: 1, scope: !7967)
!7978 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1063, file: !1063, line: 376, type: !7979, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7981)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{!103, !103, !103}
!7981 = !{!7982, !7983, !7984, !7986, !7987}
!7982 = !DILocalVariable(name: "port", arg: 1, scope: !7978, file: !1063, line: 376, type: !103)
!7983 = !DILocalVariable(name: "pin", arg: 2, scope: !7978, file: !1063, line: 376, type: !103)
!7984 = !DILocalVariable(name: "clk", scope: !7978, file: !1063, line: 386, type: !7985)
!7985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!7986 = !DILocalVariable(name: "pclken", scope: !7978, file: !1063, line: 387, type: !1168)
!7987 = !DILocalVariable(name: "ret", scope: !7978, file: !1063, line: 396, type: !103)
!7988 = !DILocation(line: 0, scope: !7978)
!7989 = !DILocation(line: 387, column: 2, scope: !7978)
!7990 = !DILocation(line: 387, column: 22, scope: !7978)
!7991 = !DILocation(line: 399, column: 8, scope: !7978)
!7992 = !DILocation(line: 400, column: 10, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7978, file: !1063, line: 400, column: 6)
!7994 = !DILocation(line: 400, column: 6, scope: !7978)
!7995 = !DILocation(line: 405, column: 2, scope: !7978)
!7996 = !DILocation(line: 407, column: 2, scope: !7978)
!7997 = !DILocation(line: 408, column: 1, scope: !7978)
!7998 = distinct !DISubprogram(name: "clock_control_on", scope: !737, file: !737, line: 123, type: !1028, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !7999)
!7999 = !{!8000, !8001, !8002}
!8000 = !DILocalVariable(name: "dev", arg: 1, scope: !7998, file: !737, line: 123, type: !930)
!8001 = !DILocalVariable(name: "sys", arg: 2, scope: !7998, file: !737, line: 124, type: !812)
!8002 = !DILocalVariable(name: "api", scope: !7998, file: !737, line: 126, type: !1021)
!8003 = !DILocation(line: 0, scope: !7998)
!8004 = !DILocation(line: 127, column: 49, scope: !7998)
!8005 = !DILocation(line: 129, column: 14, scope: !7998)
!8006 = !DILocation(line: 129, column: 9, scope: !7998)
!8007 = !DILocation(line: 129, column: 2, scope: !7998)
!8008 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1063, file: !1063, line: 311, type: !7171, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8009)
!8009 = !{!8010, !8011, !8012}
!8010 = !DILocalVariable(name: "port", arg: 1, scope: !8008, file: !1063, line: 311, type: !103)
!8011 = !DILocalVariable(name: "pin", arg: 2, scope: !8008, file: !1063, line: 311, type: !103)
!8012 = !DILocalVariable(name: "line", scope: !8008, file: !1063, line: 313, type: !121)
!8013 = !DILocation(line: 0, scope: !8008)
!8014 = !DILocation(line: 313, column: 18, scope: !8008)
!8015 = !DILocation(line: 337, column: 2, scope: !8008)
!8016 = !DILocation(line: 340, column: 1, scope: !8008)
!8017 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1063, file: !1063, line: 295, type: !8018, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8020)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{!121, !103}
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "pin", arg: 1, scope: !8017, file: !1063, line: 295, type: !103)
!8022 = !DILocation(line: 0, scope: !8017)
!8023 = !DILocation(line: 307, column: 46, scope: !8017)
!8024 = !DILocation(line: 307, column: 27, scope: !8017)
!8025 = !DILocation(line: 307, column: 32, scope: !8017)
!8026 = !DILocation(line: 307, column: 14, scope: !8017)
!8027 = !DILocation(line: 307, column: 39, scope: !8017)
!8028 = !DILocation(line: 307, column: 2, scope: !8017)
!8029 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !8030, file: !8030, line: 621, type: !8031, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8033)
!8030 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8031 = !DISubroutineType(types: !8032)
!8032 = !{null, !121, !121}
!8033 = !{!8034, !8035}
!8034 = !DILocalVariable(name: "Port", arg: 1, scope: !8029, file: !8030, line: 621, type: !121)
!8035 = !DILocalVariable(name: "Line", arg: 2, scope: !8029, file: !8030, line: 621, type: !121)
!8036 = !DILocation(line: 0, scope: !8029)
!8037 = !DILocation(line: 623, column: 3, scope: !8029)
!8038 = !DILocalVariable(name: "value", arg: 1, scope: !8039, file: !5341, line: 373, type: !121)
!8039 = distinct !DISubprogram(name: "__RBIT", scope: !5341, file: !5341, line: 373, type: !6309, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8040)
!8040 = !{!8038, !8041}
!8041 = !DILocalVariable(name: "result", scope: !8039, file: !5341, line: 375, type: !121)
!8042 = !DILocation(line: 0, scope: !8039, inlinedAt: !8043)
!8043 = distinct !DILocation(line: 623, column: 3, scope: !8029)
!8044 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8043)
!8045 = !{i64 2448618}
!8046 = !DILocalVariable(name: "value", arg: 1, scope: !8047, file: !5341, line: 403, type: !121)
!8047 = distinct !DISubprogram(name: "__CLZ", scope: !5341, file: !5341, line: 403, type: !8048, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!167, !121}
!8050 = !{!8046}
!8051 = !DILocation(line: 0, scope: !8047, inlinedAt: !8052)
!8052 = distinct !DILocation(line: 623, column: 3, scope: !8029)
!8053 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8052)
!8054 = !DILocation(line: 624, column: 1, scope: !8029)
!8055 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7811, file: !7811, line: 69, type: !8056, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8058)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{null, !7814, !930, !121}
!8058 = !{!8059, !8060, !8061, !8062, !8063}
!8059 = !DILocalVariable(name: "list", arg: 1, scope: !8055, file: !7811, line: 69, type: !7814)
!8060 = !DILocalVariable(name: "port", arg: 2, scope: !8055, file: !7811, line: 70, type: !930)
!8061 = !DILocalVariable(name: "pins", arg: 3, scope: !8055, file: !7811, line: 71, type: !121)
!8062 = !DILocalVariable(name: "cb", scope: !8055, file: !7811, line: 73, type: !967)
!8063 = !DILocalVariable(name: "tmp", scope: !8055, file: !7811, line: 73, type: !967)
!8064 = !DILocation(line: 0, scope: !8055)
!8065 = !DILocation(line: 75, column: 2, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8055, file: !7811, line: 75, column: 2)
!8067 = !DILocation(line: 0, scope: !8066)
!8068 = !DILocation(line: 76, column: 11, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7811, line: 76, column: 7)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7811, line: 75, column: 57)
!8071 = distinct !DILexicalBlock(scope: !8066, file: !7811, line: 75, column: 2)
!8072 = !DILocation(line: 76, column: 20, scope: !8069)
!8073 = !DILocation(line: 76, column: 7, scope: !8070)
!8074 = !DILocation(line: 78, column: 8, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8069, file: !7811, line: 76, column: 28)
!8076 = !DILocation(line: 78, column: 4, scope: !8075)
!8077 = !DILocation(line: 79, column: 3, scope: !8075)
!8078 = !DILocation(line: 75, column: 2, scope: !8071)
!8079 = !DILocation(line: 81, column: 1, scope: !8055)
!8080 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !8030, file: !8030, line: 721, type: !6309, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8081)
!8081 = !{!8082}
!8082 = !DILocalVariable(name: "Line", arg: 1, scope: !8080, file: !8030, line: 721, type: !121)
!8083 = !DILocation(line: 0, scope: !8080)
!8084 = !DILocation(line: 723, column: 21, scope: !8080)
!8085 = !DILocation(line: 0, scope: !8039, inlinedAt: !8086)
!8086 = distinct !DILocation(line: 723, column: 76, scope: !8080)
!8087 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8086)
!8088 = !DILocation(line: 0, scope: !8047, inlinedAt: !8089)
!8089 = distinct !DILocation(line: 723, column: 76, scope: !8080)
!8090 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8089)
!8091 = !DILocation(line: 723, column: 73, scope: !8080)
!8092 = !DILocation(line: 723, column: 3, scope: !8080)
!8093 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8094, file: !8094, line: 913, type: !8095, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8097)
!8094 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8095 = !DISubroutineType(types: !8096)
!8096 = !{null, !997, !121}
!8097 = !{!8098, !8099}
!8098 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8093, file: !8094, line: 913, type: !997)
!8099 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8093, file: !8094, line: 913, type: !121)
!8100 = !DILocation(line: 0, scope: !8093)
!8101 = !DILocation(line: 918, column: 3, scope: !8093)
!8102 = !DILocation(line: 920, column: 1, scope: !8093)
!8103 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8094, file: !8094, line: 825, type: !8104, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8106)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!121, !997}
!8106 = !{!8107}
!8107 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8103, file: !8094, line: 825, type: !997)
!8108 = !DILocation(line: 0, scope: !8103)
!8109 = !DILocation(line: 827, column: 21, scope: !8103)
!8110 = !DILocation(line: 827, column: 3, scope: !8103)
!8111 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8094, file: !8094, line: 814, type: !8095, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8112)
!8112 = !{!8113, !8114}
!8113 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8111, file: !8094, line: 814, type: !997)
!8114 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8111, file: !8094, line: 814, type: !121)
!8115 = !DILocation(line: 0, scope: !8111)
!8116 = !DILocation(line: 816, column: 3, scope: !8111)
!8117 = !DILocation(line: 817, column: 1, scope: !8111)
!8118 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8094, file: !8094, line: 773, type: !8104, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8119)
!8119 = !{!8120}
!8120 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8118, file: !8094, line: 773, type: !997)
!8121 = !DILocation(line: 0, scope: !8118)
!8122 = !DILocation(line: 775, column: 21, scope: !8118)
!8123 = !DILocation(line: 775, column: 3, scope: !8118)
!8124 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1063, file: !1063, line: 47, type: !8125, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8127)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{!103, !474, !2601}
!8127 = !{!8128, !8129}
!8128 = !DILocalVariable(name: "flags", arg: 1, scope: !8124, file: !1063, line: 47, type: !474)
!8129 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8124, file: !1063, line: 47, type: !2601)
!8130 = !DILocation(line: 0, scope: !8124)
!8131 = !DILocation(line: 50, column: 13, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8124, file: !1063, line: 50, column: 6)
!8133 = !DILocation(line: 50, column: 28, scope: !8132)
!8134 = !DILocation(line: 50, column: 6, scope: !8124)
!8135 = !DILocation(line: 53, column: 11, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !1063, line: 50, column: 34)
!8137 = !DILocation(line: 55, column: 14, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8136, file: !1063, line: 55, column: 7)
!8139 = !DILocation(line: 55, column: 35, scope: !8138)
!8140 = !DILocation(line: 55, column: 7, scope: !8136)
!8141 = !DILocation(line: 56, column: 14, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !1063, line: 56, column: 8)
!8143 = distinct !DILexicalBlock(scope: !8138, file: !1063, line: 55, column: 41)
!8144 = !DILocation(line: 56, column: 8, scope: !8143)
!8145 = !DILocation(line: 0, scope: !8138)
!8146 = !DILocation(line: 66, column: 14, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8136, file: !1063, line: 66, column: 7)
!8148 = !DILocation(line: 66, column: 30, scope: !8147)
!8149 = !DILocation(line: 66, column: 7, scope: !8136)
!8150 = !DILocation(line: 67, column: 12, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8147, file: !1063, line: 66, column: 36)
!8152 = !DILocation(line: 68, column: 3, scope: !8151)
!8153 = !DILocation(line: 68, column: 21, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8147, file: !1063, line: 68, column: 14)
!8155 = !DILocation(line: 68, column: 39, scope: !8154)
!8156 = !DILocation(line: 68, column: 14, scope: !8147)
!8157 = !DILocation(line: 69, column: 12, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !1063, line: 68, column: 45)
!8159 = !DILocation(line: 70, column: 3, scope: !8158)
!8160 = !DILocation(line: 72, column: 21, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8132, file: !1063, line: 72, column: 14)
!8162 = !DILocation(line: 72, column: 35, scope: !8161)
!8163 = !DILocation(line: 72, column: 14, scope: !8132)
!8164 = !DILocation(line: 77, column: 14, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !1063, line: 77, column: 7)
!8166 = distinct !DILexicalBlock(scope: !8161, file: !1063, line: 72, column: 41)
!8167 = !DILocation(line: 77, column: 30, scope: !8165)
!8168 = !DILocation(line: 77, column: 7, scope: !8166)
!8169 = !DILocation(line: 0, scope: !8132)
!8170 = !DILocation(line: 90, column: 1, scope: !8124)
!8171 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1063, file: !1063, line: 157, type: !8172, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8174)
!8172 = !DISubroutineType(types: !8173)
!8173 = !{null, !930, !103, !103, !103}
!8174 = !{!8175, !8176, !8177, !8178, !8179, !8180, !8181, !8182, !8183, !8184, !8185}
!8175 = !DILocalVariable(name: "dev", arg: 1, scope: !8171, file: !1063, line: 157, type: !930)
!8176 = !DILocalVariable(name: "pin", arg: 2, scope: !8171, file: !1063, line: 157, type: !103)
!8177 = !DILocalVariable(name: "conf", arg: 3, scope: !8171, file: !1063, line: 158, type: !103)
!8178 = !DILocalVariable(name: "func", arg: 4, scope: !8171, file: !1063, line: 158, type: !103)
!8179 = !DILocalVariable(name: "cfg", scope: !8171, file: !1063, line: 160, type: !7695)
!8180 = !DILocalVariable(name: "gpio", scope: !8171, file: !1063, line: 161, type: !997)
!8181 = !DILocalVariable(name: "pin_ll", scope: !8171, file: !1063, line: 163, type: !103)
!8182 = !DILocalVariable(name: "mode", scope: !8171, file: !1063, line: 227, type: !32)
!8183 = !DILocalVariable(name: "otype", scope: !8171, file: !1063, line: 227, type: !32)
!8184 = !DILocalVariable(name: "ospeed", scope: !8171, file: !1063, line: 227, type: !32)
!8185 = !DILocalVariable(name: "pupd", scope: !8171, file: !1063, line: 227, type: !32)
!8186 = !DILocation(line: 0, scope: !8171)
!8187 = !DILocation(line: 160, column: 45, scope: !8171)
!8188 = !DILocation(line: 161, column: 44, scope: !8171)
!8189 = !DILocation(line: 163, column: 15, scope: !8171)
!8190 = !DILocation(line: 229, column: 14, scope: !8171)
!8191 = !DILocation(line: 246, column: 47, scope: !8171)
!8192 = !DILocation(line: 246, column: 2, scope: !8171)
!8193 = !DILocation(line: 248, column: 43, scope: !8171)
!8194 = !DILocation(line: 248, column: 2, scope: !8171)
!8195 = !DILocation(line: 250, column: 40, scope: !8171)
!8196 = !DILocation(line: 250, column: 2, scope: !8171)
!8197 = !DILocation(line: 252, column: 11, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8171, file: !1063, line: 252, column: 6)
!8199 = !DILocation(line: 252, column: 6, scope: !8171)
!8200 = !DILocation(line: 253, column: 11, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !1063, line: 253, column: 7)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !1063, line: 252, column: 36)
!8203 = !DILocation(line: 253, column: 7, scope: !8202)
!8204 = !DILocation(line: 254, column: 4, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8201, file: !1063, line: 253, column: 16)
!8206 = !DILocation(line: 255, column: 3, scope: !8205)
!8207 = !DILocation(line: 256, column: 4, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8201, file: !1063, line: 255, column: 10)
!8209 = !DILocation(line: 260, column: 40, scope: !8171)
!8210 = !DILocation(line: 260, column: 2, scope: !8171)
!8211 = !DILocation(line: 265, column: 1, scope: !8171)
!8212 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1063, file: !1063, line: 137, type: !8018, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8213)
!8213 = !{!8214, !8215}
!8214 = !DILocalVariable(name: "pin", arg: 1, scope: !8212, file: !1063, line: 137, type: !103)
!8215 = !DILocalVariable(name: "pinval", scope: !8212, file: !1063, line: 139, type: !121)
!8216 = !DILocation(line: 0, scope: !8212)
!8217 = !DILocation(line: 149, column: 13, scope: !8212)
!8218 = !DILocation(line: 151, column: 2, scope: !8212)
!8219 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8094, file: !8094, line: 343, type: !8220, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8222)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{null, !997, !121, !121}
!8222 = !{!8223, !8224, !8225}
!8223 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8219, file: !8094, line: 343, type: !997)
!8224 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8219, file: !8094, line: 343, type: !121)
!8225 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8219, file: !8094, line: 343, type: !121)
!8226 = !DILocation(line: 0, scope: !8219)
!8227 = !DILocation(line: 345, column: 3, scope: !8219)
!8228 = !DILocation(line: 346, column: 1, scope: !8219)
!8229 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8094, file: !8094, line: 414, type: !8220, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8230)
!8230 = !{!8231, !8232, !8233}
!8231 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8229, file: !8094, line: 414, type: !997)
!8232 = !DILocalVariable(name: "Pin", arg: 2, scope: !8229, file: !8094, line: 414, type: !121)
!8233 = !DILocalVariable(name: "Speed", arg: 3, scope: !8229, file: !8094, line: 414, type: !121)
!8234 = !DILocation(line: 0, scope: !8229)
!8235 = !DILocation(line: 416, column: 3, scope: !8229)
!8236 = !DILocation(line: 0, scope: !8039, inlinedAt: !8237)
!8237 = distinct !DILocation(line: 416, column: 3, scope: !8229)
!8238 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8237)
!8239 = !DILocation(line: 0, scope: !8047, inlinedAt: !8240)
!8240 = distinct !DILocation(line: 416, column: 3, scope: !8229)
!8241 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8240)
!8242 = !DILocation(line: 0, scope: !8039, inlinedAt: !8243)
!8243 = distinct !DILocation(line: 416, column: 3, scope: !8229)
!8244 = !DILocation(line: 0, scope: !8047, inlinedAt: !8245)
!8245 = distinct !DILocation(line: 416, column: 3, scope: !8229)
!8246 = !DILocation(line: 418, column: 1, scope: !8229)
!8247 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8094, file: !8094, line: 485, type: !8220, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8248)
!8248 = !{!8249, !8250, !8251}
!8249 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8247, file: !8094, line: 485, type: !997)
!8250 = !DILocalVariable(name: "Pin", arg: 2, scope: !8247, file: !8094, line: 485, type: !121)
!8251 = !DILocalVariable(name: "Pull", arg: 3, scope: !8247, file: !8094, line: 485, type: !121)
!8252 = !DILocation(line: 0, scope: !8247)
!8253 = !DILocation(line: 487, column: 3, scope: !8247)
!8254 = !DILocation(line: 0, scope: !8039, inlinedAt: !8255)
!8255 = distinct !DILocation(line: 487, column: 3, scope: !8247)
!8256 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8255)
!8257 = !DILocation(line: 0, scope: !8047, inlinedAt: !8258)
!8258 = distinct !DILocation(line: 487, column: 3, scope: !8247)
!8259 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8258)
!8260 = !DILocation(line: 0, scope: !8039, inlinedAt: !8261)
!8261 = distinct !DILocation(line: 487, column: 3, scope: !8247)
!8262 = !DILocation(line: 0, scope: !8047, inlinedAt: !8263)
!8263 = distinct !DILocation(line: 487, column: 3, scope: !8247)
!8264 = !DILocation(line: 488, column: 1, scope: !8247)
!8265 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8094, file: !8094, line: 557, type: !8220, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8266)
!8266 = !{!8267, !8268, !8269}
!8267 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8265, file: !8094, line: 557, type: !997)
!8268 = !DILocalVariable(name: "Pin", arg: 2, scope: !8265, file: !8094, line: 557, type: !121)
!8269 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8265, file: !8094, line: 557, type: !121)
!8270 = !DILocation(line: 0, scope: !8265)
!8271 = !DILocation(line: 559, column: 3, scope: !8265)
!8272 = !DILocation(line: 0, scope: !8039, inlinedAt: !8273)
!8273 = distinct !DILocation(line: 559, column: 3, scope: !8265)
!8274 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8273)
!8275 = !DILocation(line: 0, scope: !8047, inlinedAt: !8276)
!8276 = distinct !DILocation(line: 559, column: 3, scope: !8265)
!8277 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8276)
!8278 = !DILocation(line: 0, scope: !8039, inlinedAt: !8279)
!8279 = distinct !DILocation(line: 559, column: 3, scope: !8265)
!8280 = !DILocation(line: 0, scope: !8047, inlinedAt: !8281)
!8281 = distinct !DILocation(line: 559, column: 3, scope: !8265)
!8282 = !DILocation(line: 561, column: 1, scope: !8265)
!8283 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8094, file: !8094, line: 634, type: !8220, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8284)
!8284 = !{!8285, !8286, !8287}
!8285 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8283, file: !8094, line: 634, type: !997)
!8286 = !DILocalVariable(name: "Pin", arg: 2, scope: !8283, file: !8094, line: 634, type: !121)
!8287 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8283, file: !8094, line: 634, type: !121)
!8288 = !DILocation(line: 0, scope: !8283)
!8289 = !DILocation(line: 636, column: 3, scope: !8283)
!8290 = !DILocation(line: 0, scope: !8039, inlinedAt: !8291)
!8291 = distinct !DILocation(line: 636, column: 3, scope: !8283)
!8292 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8291)
!8293 = !DILocation(line: 0, scope: !8047, inlinedAt: !8294)
!8294 = distinct !DILocation(line: 636, column: 3, scope: !8283)
!8295 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8294)
!8296 = !DILocation(line: 0, scope: !8039, inlinedAt: !8297)
!8297 = distinct !DILocation(line: 636, column: 3, scope: !8283)
!8298 = !DILocation(line: 0, scope: !8047, inlinedAt: !8299)
!8299 = distinct !DILocation(line: 636, column: 3, scope: !8283)
!8300 = !DILocation(line: 638, column: 1, scope: !8283)
!8301 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8094, file: !8094, line: 274, type: !8220, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8302)
!8302 = !{!8303, !8304, !8305}
!8303 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8301, file: !8094, line: 274, type: !997)
!8304 = !DILocalVariable(name: "Pin", arg: 2, scope: !8301, file: !8094, line: 274, type: !121)
!8305 = !DILocalVariable(name: "Mode", arg: 3, scope: !8301, file: !8094, line: 274, type: !121)
!8306 = !DILocation(line: 0, scope: !8301)
!8307 = !DILocation(line: 276, column: 3, scope: !8301)
!8308 = !DILocation(line: 0, scope: !8039, inlinedAt: !8309)
!8309 = distinct !DILocation(line: 276, column: 3, scope: !8301)
!8310 = !DILocation(line: 380, column: 4, scope: !8039, inlinedAt: !8309)
!8311 = !DILocation(line: 0, scope: !8047, inlinedAt: !8312)
!8312 = distinct !DILocation(line: 276, column: 3, scope: !8301)
!8313 = !DILocation(line: 414, column: 7, scope: !8047, inlinedAt: !8312)
!8314 = !DILocation(line: 0, scope: !8039, inlinedAt: !8315)
!8315 = distinct !DILocation(line: 276, column: 3, scope: !8301)
!8316 = !DILocation(line: 0, scope: !8047, inlinedAt: !8317)
!8317 = distinct !DILocation(line: 276, column: 3, scope: !8301)
!8318 = !DILocation(line: 277, column: 1, scope: !8301)
!8319 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1063, file: !1063, line: 698, type: !1076, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8320)
!8320 = !{!8321, !8322, !8323}
!8321 = !DILocalVariable(name: "dev", arg: 1, scope: !8319, file: !1063, line: 698, type: !930)
!8322 = !DILocalVariable(name: "data", scope: !8319, file: !1063, line: 700, type: !7762)
!8323 = !DILocalVariable(name: "ret", scope: !8319, file: !1063, line: 701, type: !103)
!8324 = !DILocation(line: 0, scope: !8319)
!8325 = !DILocation(line: 700, column: 38, scope: !8319)
!8326 = !DILocation(line: 703, column: 8, scope: !8319)
!8327 = !DILocation(line: 703, column: 12, scope: !8319)
!8328 = !DILocation(line: 705, column: 7, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8319, file: !1063, line: 705, column: 6)
!8330 = !DILocation(line: 705, column: 6, scope: !8319)
!8331 = !DILocation(line: 722, column: 8, scope: !8319)
!8332 = !DILocation(line: 723, column: 10, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8319, file: !1063, line: 723, column: 6)
!8334 = !DILocation(line: 723, column: 6, scope: !8319)
!8335 = !DILocation(line: 731, column: 1, scope: !8319)
!8336 = distinct !DISubprogram(name: "device_is_ready", scope: !3359, file: !3359, line: 47, type: !8337, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!170, !930}
!8339 = !{!8340}
!8340 = !DILocalVariable(name: "dev", arg: 1, scope: !8336, file: !3359, line: 47, type: !930)
!8341 = !DILocation(line: 0, scope: !8336)
!8342 = !DILocation(line: 55, column: 2, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8336, file: !3359, line: 55, column: 2)
!8344 = !{i64 2152400278}
!8345 = !DILocation(line: 56, column: 9, scope: !8336)
!8346 = !DILocation(line: 56, column: 2, scope: !8336)
!8347 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1063, file: !1063, line: 270, type: !8348, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8350)
!8348 = !DISubroutineType(types: !8349)
!8349 = !{!103, !930, !170}
!8350 = !{!8351, !8352, !8353, !8354, !8355}
!8351 = !DILocalVariable(name: "dev", arg: 1, scope: !8347, file: !1063, line: 270, type: !930)
!8352 = !DILocalVariable(name: "on", arg: 2, scope: !8347, file: !1063, line: 270, type: !170)
!8353 = !DILocalVariable(name: "cfg", scope: !8347, file: !1063, line: 272, type: !7695)
!8354 = !DILocalVariable(name: "ret", scope: !8347, file: !1063, line: 273, type: !103)
!8355 = !DILocalVariable(name: "clk", scope: !8347, file: !1063, line: 278, type: !7985)
!8356 = !DILocation(line: 0, scope: !8347)
!8357 = !DILocation(line: 272, column: 45, scope: !8347)
!8358 = !DILocation(line: 282, column: 38, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !1063, line: 280, column: 10)
!8360 = distinct !DILexicalBlock(scope: !8347, file: !1063, line: 280, column: 6)
!8361 = !DILocation(line: 282, column: 6, scope: !8359)
!8362 = !DILocation(line: 281, column: 9, scope: !8359)
!8363 = !DILocation(line: 293, column: 1, scope: !8347)
!8364 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !8337, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8365)
!8365 = !{!8366}
!8366 = !DILocalVariable(name: "dev", arg: 1, scope: !8364, file: !154, line: 730, type: !930)
!8367 = !DILocation(line: 0, scope: !8364)
!8368 = !DILocation(line: 732, column: 9, scope: !8364)
!8369 = !DILocation(line: 732, column: 2, scope: !8364)
!8370 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1063, file: !1063, line: 496, type: !8371, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !912, retainedNodes: !8373)
!8371 = !DISubroutineType(types: !8372)
!8372 = !{!103, !930, !103, !103, !103}
!8373 = !{!8374, !8375, !8376, !8377, !8378, !8379}
!8374 = !DILocalVariable(name: "dev", arg: 1, scope: !8370, file: !1063, line: 496, type: !930)
!8375 = !DILocalVariable(name: "pin", arg: 2, scope: !8370, file: !1063, line: 496, type: !103)
!8376 = !DILocalVariable(name: "conf", arg: 3, scope: !8370, file: !1063, line: 496, type: !103)
!8377 = !DILocalVariable(name: "func", arg: 4, scope: !8370, file: !1063, line: 496, type: !103)
!8378 = !DILocalVariable(name: "ret", scope: !8370, file: !1063, line: 498, type: !103)
!8379 = !DILocalVariable(name: "gpio_out", scope: !8380, file: !1063, line: 508, type: !121)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !1063, line: 507, column: 27)
!8381 = distinct !DILexicalBlock(scope: !8370, file: !1063, line: 507, column: 6)
!8382 = !DILocation(line: 0, scope: !8370)
!8383 = !DILocation(line: 505, column: 2, scope: !8370)
!8384 = !DILocation(line: 507, column: 11, scope: !8381)
!8385 = !DILocation(line: 507, column: 6, scope: !8370)
!8386 = !DILocation(line: 508, column: 28, scope: !8380)
!8387 = !DILocation(line: 0, scope: !8380)
!8388 = !DILocation(line: 510, column: 16, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8380, file: !1063, line: 510, column: 7)
!8390 = !DILocation(line: 0, scope: !8389)
!8391 = !DILocation(line: 510, column: 7, scope: !8380)
!8392 = !DILocation(line: 511, column: 4, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !1063, line: 510, column: 32)
!8394 = !DILocation(line: 512, column: 3, scope: !8393)
!8395 = !DILocation(line: 513, column: 4, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !1063, line: 512, column: 39)
!8397 = distinct !DILexicalBlock(scope: !8389, file: !1063, line: 512, column: 14)
!8398 = !DILocation(line: 514, column: 3, scope: !8396)
!8399 = !DILocation(line: 518, column: 1, scope: !8370)
!8400 = distinct !DISubprogram(name: "eeprom_stm32_read", scope: !1238, file: !1238, line: 24, type: !1201, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !8401)
!8401 = !{!8402, !8403, !8404, !8405, !8406, !8408}
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8400, file: !1238, line: 24, type: !1203)
!8403 = !DILocalVariable(name: "offset", arg: 2, scope: !8400, file: !1238, line: 24, type: !1218)
!8404 = !DILocalVariable(name: "buf", arg: 3, scope: !8400, file: !1238, line: 25, type: !102)
!8405 = !DILocalVariable(name: "len", arg: 4, scope: !8400, file: !1238, line: 26, type: !213)
!8406 = !DILocalVariable(name: "config", scope: !8400, file: !1238, line: 28, type: !8407)
!8407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!8408 = !DILocalVariable(name: "pbuf", scope: !8400, file: !1238, line: 29, type: !1925)
!8409 = !DILocation(line: 0, scope: !8400)
!8410 = !DILocation(line: 28, column: 50, scope: !8400)
!8411 = !DILocation(line: 31, column: 7, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8400, file: !1238, line: 31, column: 6)
!8413 = !DILocation(line: 31, column: 6, scope: !8400)
!8414 = !DILocation(line: 35, column: 14, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8400, file: !1238, line: 35, column: 6)
!8416 = !DILocation(line: 35, column: 31, scope: !8415)
!8417 = !DILocation(line: 35, column: 21, scope: !8415)
!8418 = !DILocation(line: 35, column: 6, scope: !8400)
!8419 = !DILocation(line: 40, column: 2, scope: !8400)
!8420 = !DILocation(line: 42, column: 2, scope: !8400)
!8421 = !DILocation(line: 43, column: 36, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8400, file: !1238, line: 42, column: 14)
!8423 = !DILocation(line: 43, column: 41, scope: !8422)
!8424 = !DILocation(line: 43, column: 12, scope: !8422)
!8425 = !DILocation(line: 43, column: 11, scope: !8422)
!8426 = !DILocation(line: 43, column: 9, scope: !8422)
!8427 = !DILocation(line: 45, column: 7, scope: !8422)
!8428 = !DILocation(line: 46, column: 9, scope: !8422)
!8429 = !DILocation(line: 47, column: 6, scope: !8422)
!8430 = distinct !{!8430, !8420, !8431}
!8431 = !DILocation(line: 48, column: 2, scope: !8400)
!8432 = !DILocation(line: 50, column: 2, scope: !8400)
!8433 = !DILocation(line: 52, column: 2, scope: !8400)
!8434 = !DILocation(line: 53, column: 1, scope: !8400)
!8435 = distinct !DISubprogram(name: "eeprom_stm32_write", scope: !1238, file: !1238, line: 55, type: !1224, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !8436)
!8436 = !{!8437, !8438, !8439, !8440, !8441, !8442, !8444}
!8437 = !DILocalVariable(name: "dev", arg: 1, scope: !8435, file: !1238, line: 55, type: !1203)
!8438 = !DILocalVariable(name: "offset", arg: 2, scope: !8435, file: !1238, line: 55, type: !1218)
!8439 = !DILocalVariable(name: "buf", arg: 3, scope: !8435, file: !1238, line: 56, type: !13)
!8440 = !DILocalVariable(name: "len", arg: 4, scope: !8435, file: !1238, line: 56, type: !213)
!8441 = !DILocalVariable(name: "config", scope: !8435, file: !1238, line: 58, type: !8407)
!8442 = !DILocalVariable(name: "pbuf", scope: !8435, file: !1238, line: 59, type: !8443)
!8443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!8444 = !DILocalVariable(name: "ret", scope: !8435, file: !1238, line: 60, type: !8445)
!8445 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !1186, line: 45, baseType: !1185)
!8446 = !DILocation(line: 0, scope: !8435)
!8447 = !DILocation(line: 58, column: 50, scope: !8435)
!8448 = !DILocation(line: 62, column: 7, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8435, file: !1238, line: 62, column: 6)
!8450 = !DILocation(line: 62, column: 6, scope: !8435)
!8451 = !DILocation(line: 66, column: 14, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8435, file: !1238, line: 66, column: 6)
!8453 = !DILocation(line: 66, column: 31, scope: !8452)
!8454 = !DILocation(line: 66, column: 21, scope: !8452)
!8455 = !DILocation(line: 66, column: 6, scope: !8435)
!8456 = !DILocation(line: 71, column: 2, scope: !8435)
!8457 = !DILocation(line: 73, column: 2, scope: !8435)
!8458 = !DILocation(line: 75, column: 2, scope: !8435)
!8459 = !DILocation(line: 78, column: 15, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8435, file: !1238, line: 75, column: 14)
!8461 = !DILocation(line: 78, column: 20, scope: !8460)
!8462 = !DILocation(line: 78, column: 30, scope: !8460)
!8463 = !DILocation(line: 76, column: 9, scope: !8460)
!8464 = !DILocation(line: 79, column: 7, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8460, file: !1238, line: 79, column: 7)
!8466 = !DILocation(line: 79, column: 7, scope: !8460)
!8467 = !DILocation(line: 81, column: 4, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8465, file: !1238, line: 79, column: 12)
!8469 = !DILocation(line: 83, column: 4, scope: !8468)
!8470 = !DILocation(line: 86, column: 7, scope: !8460)
!8471 = !DILocation(line: 87, column: 9, scope: !8460)
!8472 = !DILocation(line: 88, column: 6, scope: !8460)
!8473 = distinct !{!8473, !8458, !8474}
!8474 = !DILocation(line: 89, column: 2, scope: !8435)
!8475 = !DILocation(line: 91, column: 8, scope: !8435)
!8476 = !DILocation(line: 101, column: 1, scope: !8435)
!8477 = distinct !DISubprogram(name: "eeprom_stm32_size", scope: !1238, file: !1238, line: 103, type: !1229, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !8478)
!8478 = !{!8479, !8480}
!8479 = !DILocalVariable(name: "dev", arg: 1, scope: !8477, file: !1238, line: 103, type: !1203)
!8480 = !DILocalVariable(name: "config", scope: !8477, file: !1238, line: 105, type: !8407)
!8481 = !DILocation(line: 0, scope: !8477)
!8482 = !DILocation(line: 105, column: 50, scope: !8477)
!8483 = !DILocation(line: 107, column: 17, scope: !8477)
!8484 = !DILocation(line: 107, column: 2, scope: !8477)
!8485 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3686, file: !3686, line: 927, type: !8486, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !8493)
!8486 = !DISubroutineType(types: !8487)
!8487 = !{!103, !8488, !8489}
!8488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!8489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1232, line: 67, baseType: !8490)
!8490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1232, line: 65, size: 64, elements: !8491)
!8491 = !{!8492}
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8490, file: !1232, line: 66, baseType: !1231, size: 64)
!8493 = !{!8494, !8495}
!8494 = !DILocalVariable(name: "mutex", arg: 1, scope: !8485, file: !3686, line: 927, type: !8488)
!8495 = !DILocalVariable(name: "timeout", arg: 2, scope: !8485, file: !3686, line: 927, type: !8489)
!8496 = !DILocation(line: 0, scope: !8485)
!8497 = !DILocation(line: 936, column: 2, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8485, file: !3686, line: 936, column: 2)
!8499 = !{i64 2152401320}
!8500 = !DILocation(line: 937, column: 9, scope: !8485)
!8501 = !DILocation(line: 937, column: 2, scope: !8485)
!8502 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3686, file: !3686, line: 944, type: !8503, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !8505)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{!103, !8488}
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "mutex", arg: 1, scope: !8502, file: !3686, line: 944, type: !8488)
!8507 = !DILocation(line: 0, scope: !8502)
!8508 = !DILocation(line: 952, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8502, file: !3686, line: 952, column: 2)
!8510 = !{i64 2152401388}
!8511 = !DILocation(line: 953, column: 9, scope: !8502)
!8512 = !DILocation(line: 953, column: 2, scope: !8502)
!8513 = distinct !DISubprogram(name: "eeprom_stm32_init", scope: !1238, file: !1238, line: 110, type: !1248, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !8514)
!8514 = !{!8515}
!8515 = !DILocalVariable(name: "dev", arg: 1, scope: !8513, file: !1238, line: 110, type: !1203)
!8516 = !DILocation(line: 0, scope: !8513)
!8517 = !DILocation(line: 112, column: 2, scope: !8513)
!8518 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1508, file: !1508, line: 526, type: !1412, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8519)
!8519 = !{!8520, !8521, !8522}
!8520 = !DILocalVariable(name: "dev", arg: 1, scope: !8518, file: !1508, line: 526, type: !1414)
!8521 = !DILocalVariable(name: "c", arg: 2, scope: !8518, file: !1508, line: 526, type: !873)
!8522 = !DILocalVariable(name: "config", scope: !8518, file: !1508, line: 528, type: !8523)
!8523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!8524 = !DILocation(line: 0, scope: !8518)
!8525 = !DILocation(line: 528, column: 48, scope: !8518)
!8526 = !DILocation(line: 531, column: 40, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8518, file: !1508, line: 531, column: 6)
!8528 = !DILocation(line: 531, column: 6, scope: !8527)
!8529 = !DILocation(line: 531, column: 6, scope: !8518)
!8530 = !DILocation(line: 532, column: 34, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8527, file: !1508, line: 531, column: 48)
!8532 = !DILocation(line: 532, column: 3, scope: !8531)
!8533 = !DILocation(line: 533, column: 2, scope: !8531)
!8534 = !DILocation(line: 539, column: 42, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8518, file: !1508, line: 539, column: 6)
!8536 = !DILocation(line: 539, column: 7, scope: !8535)
!8537 = !DILocation(line: 539, column: 6, scope: !8518)
!8538 = !DILocation(line: 543, column: 52, scope: !8518)
!8539 = !DILocation(line: 543, column: 22, scope: !8518)
!8540 = !DILocation(line: 543, column: 5, scope: !8518)
!8541 = !DILocation(line: 545, column: 2, scope: !8518)
!8542 = !DILocation(line: 546, column: 1, scope: !8518)
!8543 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1508, file: !1508, line: 548, type: !1431, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8544)
!8544 = !{!8545, !8546, !8547, !8548}
!8545 = !DILocalVariable(name: "dev", arg: 1, scope: !8543, file: !1508, line: 548, type: !1414)
!8546 = !DILocalVariable(name: "c", arg: 2, scope: !8543, file: !1508, line: 549, type: !168)
!8547 = !DILocalVariable(name: "config", scope: !8543, file: !1508, line: 551, type: !8523)
!8548 = !DILocalVariable(name: "key", scope: !8543, file: !1508, line: 555, type: !32)
!8549 = !DILocation(line: 0, scope: !8543)
!8550 = !DILocation(line: 551, column: 48, scope: !8543)
!8551 = !DILocation(line: 562, column: 2, scope: !8543)
!8552 = !DILocation(line: 563, column: 41, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !1508, line: 563, column: 7)
!8554 = distinct !DILexicalBlock(scope: !8543, file: !1508, line: 562, column: 12)
!8555 = !DILocation(line: 563, column: 7, scope: !8553)
!8556 = !DILocation(line: 563, column: 7, scope: !8554)
!8557 = !DILocation(line: 55, column: 2, scope: !8558, inlinedAt: !8562)
!8558 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8559)
!8559 = !{!8560, !8561}
!8560 = !DILocalVariable(name: "key", scope: !8558, file: !5051, line: 44, type: !32)
!8561 = !DILocalVariable(name: "tmp", scope: !8558, file: !5051, line: 53, type: !32)
!8562 = distinct !DILocation(line: 564, column: 10, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8553, file: !1508, line: 563, column: 49)
!8564 = !{i64 1697967}
!8565 = !DILocation(line: 0, scope: !8558, inlinedAt: !8562)
!8566 = !DILocation(line: 565, column: 42, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8563, file: !1508, line: 565, column: 8)
!8568 = !DILocation(line: 565, column: 8, scope: !8567)
!8569 = !DILocation(line: 565, column: 8, scope: !8563)
!8570 = !DILocalVariable(name: "key", arg: 1, scope: !8571, file: !5051, line: 84, type: !32)
!8571 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8572)
!8572 = !{!8570}
!8573 = !DILocation(line: 0, scope: !8571, inlinedAt: !8574)
!8574 = distinct !DILocation(line: 568, column: 4, scope: !8563)
!8575 = !DILocation(line: 95, column: 2, scope: !8571, inlinedAt: !8574)
!8576 = !{i64 1698784}
!8577 = !DILocation(line: 569, column: 3, scope: !8563)
!8578 = distinct !{!8578, !8551, !8579}
!8579 = !DILocation(line: 570, column: 2, scope: !8543)
!8580 = !DILocation(line: 592, column: 33, scope: !8543)
!8581 = !DILocation(line: 592, column: 2, scope: !8543)
!8582 = !DILocation(line: 0, scope: !8571, inlinedAt: !8583)
!8583 = distinct !DILocation(line: 593, column: 2, scope: !8543)
!8584 = !DILocation(line: 95, column: 2, scope: !8571, inlinedAt: !8583)
!8585 = !DILocation(line: 594, column: 1, scope: !8543)
!8586 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1508, file: !1508, line: 596, type: !1435, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8587)
!8587 = !{!8588, !8589, !8590}
!8588 = !DILocalVariable(name: "dev", arg: 1, scope: !8586, file: !1508, line: 596, type: !1414)
!8589 = !DILocalVariable(name: "config", scope: !8586, file: !1508, line: 598, type: !8523)
!8590 = !DILocalVariable(name: "err", scope: !8586, file: !1508, line: 599, type: !121)
!8591 = !DILocation(line: 0, scope: !8586)
!8592 = !DILocation(line: 598, column: 48, scope: !8586)
!8593 = !DILocation(line: 606, column: 40, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 606, column: 6)
!8595 = !DILocation(line: 606, column: 6, scope: !8594)
!8596 = !DILocation(line: 606, column: 6, scope: !8586)
!8597 = !DILocation(line: 610, column: 39, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 610, column: 6)
!8599 = !DILocation(line: 610, column: 6, scope: !8598)
!8600 = !DILocation(line: 610, column: 6, scope: !8586)
!8601 = !DILocation(line: 614, column: 39, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 614, column: 6)
!8603 = !DILocation(line: 614, column: 6, scope: !8602)
!8604 = !DILocation(line: 614, column: 6, scope: !8586)
!8605 = !DILocation(line: 619, column: 40, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 619, column: 6)
!8607 = !DILocation(line: 619, column: 6, scope: !8606)
!8608 = !DILocation(line: 619, column: 6, scope: !8586)
!8609 = !DILocation(line: 623, column: 10, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 623, column: 6)
!8611 = !DILocation(line: 623, column: 6, scope: !8586)
!8612 = !DILocation(line: 624, column: 34, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !1508, line: 623, column: 24)
!8614 = !DILocation(line: 624, column: 3, scope: !8613)
!8615 = !DILocation(line: 625, column: 2, scope: !8613)
!8616 = !DILocation(line: 632, column: 10, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 632, column: 6)
!8618 = !DILocation(line: 632, column: 6, scope: !8586)
!8619 = !DILocation(line: 633, column: 34, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8617, file: !1508, line: 632, column: 32)
!8621 = !DILocation(line: 633, column: 3, scope: !8620)
!8622 = !DILocation(line: 634, column: 2, scope: !8620)
!8623 = !DILocation(line: 636, column: 10, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 636, column: 6)
!8625 = !DILocation(line: 636, column: 6, scope: !8586)
!8626 = !DILocation(line: 637, column: 33, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8624, file: !1508, line: 636, column: 31)
!8628 = !DILocation(line: 637, column: 3, scope: !8627)
!8629 = !DILocation(line: 638, column: 2, scope: !8627)
!8630 = !DILocation(line: 640, column: 10, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8586, file: !1508, line: 640, column: 6)
!8632 = !DILocation(line: 640, column: 6, scope: !8586)
!8633 = !DILocation(line: 641, column: 33, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8631, file: !1508, line: 640, column: 32)
!8635 = !DILocation(line: 641, column: 3, scope: !8634)
!8636 = !DILocation(line: 642, column: 2, scope: !8634)
!8637 = !DILocation(line: 646, column: 32, scope: !8586)
!8638 = !DILocation(line: 646, column: 2, scope: !8586)
!8639 = !DILocation(line: 648, column: 2, scope: !8586)
!8640 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1508, file: !1508, line: 419, type: !1439, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8641)
!8641 = !{!8642, !8643, !8644, !8645, !8647, !8648, !8649, !8650}
!8642 = !DILocalVariable(name: "dev", arg: 1, scope: !8640, file: !1508, line: 419, type: !1414)
!8643 = !DILocalVariable(name: "cfg", arg: 2, scope: !8640, file: !1508, line: 420, type: !1441)
!8644 = !DILocalVariable(name: "config", scope: !8640, file: !1508, line: 422, type: !8523)
!8645 = !DILocalVariable(name: "data", scope: !8640, file: !1508, line: 423, type: !8646)
!8646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!8647 = !DILocalVariable(name: "parity", scope: !8640, file: !1508, line: 424, type: !5584)
!8648 = !DILocalVariable(name: "stopbits", scope: !8640, file: !1508, line: 425, type: !5584)
!8649 = !DILocalVariable(name: "databits", scope: !8640, file: !1508, line: 426, type: !5584)
!8650 = !DILocalVariable(name: "flowctrl", scope: !8640, file: !1508, line: 428, type: !5584)
!8651 = !DILocation(line: 0, scope: !8640)
!8652 = !DILocation(line: 422, column: 48, scope: !8640)
!8653 = !DILocation(line: 423, column: 38, scope: !8640)
!8654 = !DILocation(line: 424, column: 56, scope: !8640)
!8655 = !DILocation(line: 424, column: 51, scope: !8640)
!8656 = !DILocation(line: 424, column: 26, scope: !8640)
!8657 = !DILocation(line: 425, column: 60, scope: !8640)
!8658 = !DILocation(line: 425, column: 55, scope: !8640)
!8659 = !DILocation(line: 425, column: 28, scope: !8640)
!8660 = !DILocation(line: 426, column: 60, scope: !8640)
!8661 = !DILocation(line: 426, column: 55, scope: !8640)
!8662 = !DILocation(line: 426, column: 28, scope: !8640)
!8663 = !DILocation(line: 428, column: 58, scope: !8640)
!8664 = !DILocation(line: 428, column: 53, scope: !8640)
!8665 = !DILocation(line: 428, column: 28, scope: !8640)
!8666 = !DILocation(line: 431, column: 44, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 431, column: 6)
!8668 = !DILocation(line: 438, column: 22, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 437, column: 6)
!8670 = !DILocation(line: 437, column: 6, scope: !8640)
!8671 = !DILocation(line: 448, column: 6, scope: !8640)
!8672 = !DILocation(line: 465, column: 47, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 465, column: 6)
!8674 = !DILocation(line: 475, column: 21, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 475, column: 6)
!8676 = !DILocation(line: 475, column: 6, scope: !8640)
!8677 = !DILocation(line: 476, column: 8, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !1508, line: 476, column: 7)
!8679 = distinct !DILexicalBlock(scope: !8675, file: !1508, line: 475, column: 49)
!8680 = !DILocation(line: 477, column: 34, scope: !8678)
!8681 = !DILocation(line: 476, column: 7, scope: !8679)
!8682 = !DILocation(line: 482, column: 27, scope: !8640)
!8683 = !DILocation(line: 482, column: 2, scope: !8640)
!8684 = !DILocation(line: 484, column: 16, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 484, column: 6)
!8686 = !DILocation(line: 484, column: 13, scope: !8685)
!8687 = !DILocation(line: 484, column: 6, scope: !8640)
!8688 = !DILocation(line: 485, column: 3, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8685, file: !1508, line: 484, column: 44)
!8690 = !DILocation(line: 486, column: 2, scope: !8689)
!8691 = !DILocation(line: 488, column: 18, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 488, column: 6)
!8693 = !DILocation(line: 488, column: 15, scope: !8692)
!8694 = !DILocation(line: 488, column: 6, scope: !8640)
!8695 = !DILocation(line: 489, column: 3, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !1508, line: 488, column: 48)
!8697 = !DILocation(line: 490, column: 2, scope: !8696)
!8698 = !DILocation(line: 492, column: 18, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 492, column: 6)
!8700 = !DILocation(line: 492, column: 15, scope: !8699)
!8701 = !DILocation(line: 492, column: 6, scope: !8640)
!8702 = !DILocation(line: 493, column: 3, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8699, file: !1508, line: 492, column: 48)
!8704 = !DILocation(line: 494, column: 2, scope: !8703)
!8705 = !DILocation(line: 496, column: 18, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 496, column: 6)
!8707 = !DILocation(line: 496, column: 15, scope: !8706)
!8708 = !DILocation(line: 496, column: 6, scope: !8640)
!8709 = !DILocation(line: 497, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8706, file: !1508, line: 496, column: 46)
!8711 = !DILocation(line: 498, column: 2, scope: !8710)
!8712 = !DILocation(line: 500, column: 11, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8640, file: !1508, line: 500, column: 6)
!8714 = !DILocation(line: 500, column: 29, scope: !8713)
!8715 = !DILocation(line: 500, column: 20, scope: !8713)
!8716 = !DILocation(line: 500, column: 6, scope: !8640)
!8717 = !DILocation(line: 501, column: 3, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8713, file: !1508, line: 500, column: 40)
!8719 = !DILocation(line: 502, column: 26, scope: !8718)
!8720 = !DILocation(line: 502, column: 19, scope: !8718)
!8721 = !DILocation(line: 503, column: 2, scope: !8718)
!8722 = !DILocation(line: 505, column: 26, scope: !8640)
!8723 = !DILocation(line: 505, column: 2, scope: !8640)
!8724 = !DILocation(line: 506, column: 2, scope: !8640)
!8725 = !DILocation(line: 507, column: 1, scope: !8640)
!8726 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1508, file: !1508, line: 509, type: !1452, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8727)
!8727 = !{!8728, !8729, !8730}
!8728 = !DILocalVariable(name: "dev", arg: 1, scope: !8726, file: !1508, line: 509, type: !1414)
!8729 = !DILocalVariable(name: "cfg", arg: 2, scope: !8726, file: !1508, line: 510, type: !1454)
!8730 = !DILocalVariable(name: "data", scope: !8726, file: !1508, line: 512, type: !8646)
!8731 = !DILocation(line: 0, scope: !8726)
!8732 = !DILocation(line: 512, column: 38, scope: !8726)
!8733 = !DILocation(line: 514, column: 24, scope: !8726)
!8734 = !DILocation(line: 514, column: 7, scope: !8726)
!8735 = !DILocation(line: 514, column: 16, scope: !8726)
!8736 = !DILocation(line: 515, column: 41, scope: !8726)
!8737 = !{i32 0, i32 1537}
!8738 = !DILocation(line: 515, column: 16, scope: !8726)
!8739 = !DILocation(line: 515, column: 7, scope: !8726)
!8740 = !DILocation(line: 515, column: 14, scope: !8726)
!8741 = !DILocation(line: 517, column: 3, scope: !8726)
!8742 = !{i32 0, i32 12289}
!8743 = !DILocation(line: 516, column: 19, scope: !8726)
!8744 = !DILocation(line: 516, column: 7, scope: !8726)
!8745 = !DILocation(line: 516, column: 17, scope: !8726)
!8746 = !DILocation(line: 519, column: 3, scope: !8726)
!8747 = !DILocation(line: 519, column: 33, scope: !8726)
!8748 = !DILocation(line: 518, column: 19, scope: !8726)
!8749 = !DILocation(line: 518, column: 7, scope: !8726)
!8750 = !DILocation(line: 518, column: 17, scope: !8726)
!8751 = !DILocation(line: 521, column: 3, scope: !8726)
!8752 = !{i32 0, i32 769}
!8753 = !DILocation(line: 520, column: 19, scope: !8726)
!8754 = !DILocation(line: 520, column: 7, scope: !8726)
!8755 = !DILocation(line: 520, column: 17, scope: !8726)
!8756 = !DILocation(line: 522, column: 2, scope: !8726)
!8757 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1508, file: !1508, line: 205, type: !8758, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8760)
!8758 = !DISubroutineType(types: !8759)
!8759 = !{!121, !1414}
!8760 = !{!8761, !8762}
!8761 = !DILocalVariable(name: "dev", arg: 1, scope: !8757, file: !1508, line: 205, type: !1414)
!8762 = !DILocalVariable(name: "config", scope: !8757, file: !1508, line: 207, type: !8523)
!8763 = !DILocation(line: 0, scope: !8757)
!8764 = !DILocation(line: 207, column: 48, scope: !8757)
!8765 = !DILocation(line: 209, column: 36, scope: !8757)
!8766 = !DILocation(line: 209, column: 9, scope: !8757)
!8767 = !DILocation(line: 209, column: 2, scope: !8757)
!8768 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1508, file: !1508, line: 270, type: !8769, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8771)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{!1380, !121}
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "parity", arg: 1, scope: !8768, file: !1508, line: 270, type: !121)
!8773 = !DILocation(line: 0, scope: !8768)
!8774 = !DILocation(line: 272, column: 2, scope: !8768)
!8775 = !DILocation(line: 281, column: 1, scope: !8768)
!8776 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1508, file: !1508, line: 220, type: !8758, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8777)
!8777 = !{!8778, !8779}
!8778 = !DILocalVariable(name: "dev", arg: 1, scope: !8776, file: !1508, line: 220, type: !1414)
!8779 = !DILocalVariable(name: "config", scope: !8776, file: !1508, line: 222, type: !8523)
!8780 = !DILocation(line: 0, scope: !8776)
!8781 = !DILocation(line: 222, column: 48, scope: !8776)
!8782 = !DILocation(line: 224, column: 44, scope: !8776)
!8783 = !DILocation(line: 224, column: 9, scope: !8776)
!8784 = !DILocation(line: 224, column: 2, scope: !8776)
!8785 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1508, file: !1508, line: 304, type: !8786, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8788)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!1394, !121}
!8788 = !{!8789}
!8789 = !DILocalVariable(name: "sb", arg: 1, scope: !8785, file: !1508, line: 304, type: !121)
!8790 = !DILocation(line: 0, scope: !8785)
!8791 = !DILocation(line: 306, column: 2, scope: !8785)
!8792 = !DILocation(line: 0, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8785, file: !1508, line: 306, column: 14)
!8794 = !DILocation(line: 323, column: 1, scope: !8785)
!8795 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1508, file: !1508, line: 235, type: !8758, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8796)
!8796 = !{!8797, !8798}
!8797 = !DILocalVariable(name: "dev", arg: 1, scope: !8795, file: !1508, line: 235, type: !1414)
!8798 = !DILocalVariable(name: "config", scope: !8795, file: !1508, line: 237, type: !8523)
!8799 = !DILocation(line: 0, scope: !8795)
!8800 = !DILocation(line: 237, column: 48, scope: !8795)
!8801 = !DILocation(line: 239, column: 39, scope: !8795)
!8802 = !DILocation(line: 239, column: 9, scope: !8795)
!8803 = !DILocation(line: 239, column: 2, scope: !8795)
!8804 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1508, file: !1508, line: 355, type: !8805, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8807)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!1387, !121, !121}
!8807 = !{!8808, !8809}
!8808 = !DILocalVariable(name: "db", arg: 1, scope: !8804, file: !1508, line: 355, type: !121)
!8809 = !DILocalVariable(name: "p", arg: 2, scope: !8804, file: !1508, line: 356, type: !121)
!8810 = !DILocation(line: 0, scope: !8804)
!8811 = !DILocation(line: 358, column: 2, scope: !8804)
!8812 = !DILocation(line: 384, column: 1, scope: !8804)
!8813 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1508, file: !1508, line: 250, type: !8758, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8814)
!8814 = !{!8815, !8816}
!8815 = !DILocalVariable(name: "dev", arg: 1, scope: !8813, file: !1508, line: 250, type: !1414)
!8816 = !DILocalVariable(name: "config", scope: !8813, file: !1508, line: 252, type: !8523)
!8817 = !DILocation(line: 0, scope: !8813)
!8818 = !DILocation(line: 252, column: 48, scope: !8813)
!8819 = !DILocation(line: 254, column: 40, scope: !8813)
!8820 = !DILocation(line: 254, column: 9, scope: !8813)
!8821 = !DILocation(line: 254, column: 2, scope: !8813)
!8822 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1508, file: !1508, line: 409, type: !8823, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8825)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!1400, !121}
!8825 = !{!8826}
!8826 = !DILocalVariable(name: "fc", arg: 1, scope: !8822, file: !1508, line: 409, type: !121)
!8827 = !DILocation(line: 0, scope: !8822)
!8828 = !DILocation(line: 411, column: 9, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8822, file: !1508, line: 411, column: 6)
!8830 = !DILocation(line: 416, column: 1, scope: !8822)
!8831 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8832, file: !8832, line: 966, type: !8833, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8835)
!8832 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8833 = !DISubroutineType(types: !8834)
!8834 = !{!121, !1455}
!8835 = !{!8836}
!8836 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8831, file: !8832, line: 966, type: !1455)
!8837 = !DILocation(line: 0, scope: !8831)
!8838 = !DILocation(line: 968, column: 21, scope: !8831)
!8839 = !DILocation(line: 968, column: 3, scope: !8831)
!8840 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8832, file: !8832, line: 600, type: !8833, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8841)
!8841 = !{!8842}
!8842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8840, file: !8832, line: 600, type: !1455)
!8843 = !DILocation(line: 0, scope: !8840)
!8844 = !DILocation(line: 602, column: 21, scope: !8840)
!8845 = !DILocation(line: 602, column: 3, scope: !8840)
!8846 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8832, file: !8832, line: 819, type: !8833, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8847)
!8847 = !{!8848}
!8848 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8846, file: !8832, line: 819, type: !1455)
!8849 = !DILocation(line: 0, scope: !8846)
!8850 = !DILocation(line: 821, column: 21, scope: !8846)
!8851 = !DILocation(line: 821, column: 3, scope: !8846)
!8852 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8832, file: !8832, line: 546, type: !8833, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8853)
!8853 = !{!8854}
!8854 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8852, file: !8832, line: 546, type: !1455)
!8855 = !DILocation(line: 0, scope: !8852)
!8856 = !DILocation(line: 548, column: 21, scope: !8852)
!8857 = !DILocation(line: 548, column: 3, scope: !8852)
!8858 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1508, file: !1508, line: 257, type: !8859, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8861)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!121, !1380}
!8861 = !{!8862}
!8862 = !DILocalVariable(name: "parity", arg: 1, scope: !8858, file: !1508, line: 257, type: !1380)
!8863 = !DILocation(line: 0, scope: !8858)
!8864 = !DILocation(line: 259, column: 2, scope: !8858)
!8865 = !DILocation(line: 268, column: 1, scope: !8858)
!8866 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1508, file: !1508, line: 283, type: !8867, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8869)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{!121, !1394}
!8869 = !{!8870}
!8870 = !DILocalVariable(name: "sb", arg: 1, scope: !8866, file: !1508, line: 283, type: !1394)
!8871 = !DILocation(line: 0, scope: !8866)
!8872 = !DILocation(line: 285, column: 2, scope: !8866)
!8873 = !DILocation(line: 0, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8866, file: !1508, line: 285, column: 14)
!8875 = !DILocation(line: 302, column: 1, scope: !8866)
!8876 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1508, file: !1508, line: 325, type: !8877, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8879)
!8877 = !DISubroutineType(types: !8878)
!8878 = !{!121, !1387, !1380}
!8879 = !{!8880, !8881}
!8880 = !DILocalVariable(name: "db", arg: 1, scope: !8876, file: !1508, line: 325, type: !1387)
!8881 = !DILocalVariable(name: "p", arg: 2, scope: !8876, file: !1508, line: 326, type: !1380)
!8882 = !DILocation(line: 0, scope: !8876)
!8883 = !DILocation(line: 328, column: 2, scope: !8876)
!8884 = !DILocation(line: 353, column: 1, scope: !8876)
!8885 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1508, file: !1508, line: 393, type: !8886, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8888)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!121, !1400}
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "fc", arg: 1, scope: !8885, file: !1508, line: 393, type: !1400)
!8890 = !DILocation(line: 0, scope: !8885)
!8891 = !DILocation(line: 395, column: 9, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8885, file: !1508, line: 395, column: 6)
!8893 = !DILocation(line: 400, column: 1, scope: !8885)
!8894 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8832, file: !8832, line: 423, type: !8895, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8897)
!8895 = !DISubroutineType(types: !8896)
!8896 = !{null, !1455}
!8897 = !{!8898}
!8898 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8894, file: !8832, line: 423, type: !1455)
!8899 = !DILocation(line: 0, scope: !8894)
!8900 = !DILocation(line: 425, column: 3, scope: !8894)
!8901 = !DILocation(line: 426, column: 1, scope: !8894)
!8902 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1508, file: !1508, line: 197, type: !8903, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8905)
!8903 = !DISubroutineType(types: !8904)
!8904 = !{null, !1414, !121}
!8905 = !{!8906, !8907, !8908}
!8906 = !DILocalVariable(name: "dev", arg: 1, scope: !8902, file: !1508, line: 197, type: !1414)
!8907 = !DILocalVariable(name: "parity", arg: 2, scope: !8902, file: !1508, line: 198, type: !121)
!8908 = !DILocalVariable(name: "config", scope: !8902, file: !1508, line: 200, type: !8523)
!8909 = !DILocation(line: 0, scope: !8902)
!8910 = !DILocation(line: 200, column: 48, scope: !8902)
!8911 = !DILocation(line: 202, column: 29, scope: !8902)
!8912 = !DILocation(line: 202, column: 2, scope: !8902)
!8913 = !DILocation(line: 203, column: 1, scope: !8902)
!8914 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1508, file: !1508, line: 212, type: !8903, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8915)
!8915 = !{!8916, !8917, !8918}
!8916 = !DILocalVariable(name: "dev", arg: 1, scope: !8914, file: !1508, line: 212, type: !1414)
!8917 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8914, file: !1508, line: 213, type: !121)
!8918 = !DILocalVariable(name: "config", scope: !8914, file: !1508, line: 215, type: !8523)
!8919 = !DILocation(line: 0, scope: !8914)
!8920 = !DILocation(line: 215, column: 48, scope: !8914)
!8921 = !DILocation(line: 217, column: 37, scope: !8914)
!8922 = !DILocation(line: 217, column: 2, scope: !8914)
!8923 = !DILocation(line: 218, column: 1, scope: !8914)
!8924 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1508, file: !1508, line: 227, type: !8903, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8925)
!8925 = !{!8926, !8927, !8928}
!8926 = !DILocalVariable(name: "dev", arg: 1, scope: !8924, file: !1508, line: 227, type: !1414)
!8927 = !DILocalVariable(name: "databits", arg: 2, scope: !8924, file: !1508, line: 228, type: !121)
!8928 = !DILocalVariable(name: "config", scope: !8924, file: !1508, line: 230, type: !8523)
!8929 = !DILocation(line: 0, scope: !8924)
!8930 = !DILocation(line: 230, column: 48, scope: !8924)
!8931 = !DILocation(line: 232, column: 32, scope: !8924)
!8932 = !DILocation(line: 232, column: 2, scope: !8924)
!8933 = !DILocation(line: 233, column: 1, scope: !8924)
!8934 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1508, file: !1508, line: 242, type: !8903, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8935)
!8935 = !{!8936, !8937, !8938}
!8936 = !DILocalVariable(name: "dev", arg: 1, scope: !8934, file: !1508, line: 242, type: !1414)
!8937 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8934, file: !1508, line: 243, type: !121)
!8938 = !DILocalVariable(name: "config", scope: !8934, file: !1508, line: 245, type: !8523)
!8939 = !DILocation(line: 0, scope: !8934)
!8940 = !DILocation(line: 245, column: 48, scope: !8934)
!8941 = !DILocation(line: 247, column: 33, scope: !8934)
!8942 = !DILocation(line: 247, column: 2, scope: !8934)
!8943 = !DILocation(line: 248, column: 1, scope: !8934)
!8944 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1508, file: !1508, line: 107, type: !8903, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8945)
!8945 = !{!8946, !8947, !8948, !8949, !8950}
!8946 = !DILocalVariable(name: "dev", arg: 1, scope: !8944, file: !1508, line: 107, type: !1414)
!8947 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8944, file: !1508, line: 107, type: !121)
!8948 = !DILocalVariable(name: "config", scope: !8944, file: !1508, line: 109, type: !8523)
!8949 = !DILocalVariable(name: "data", scope: !8944, file: !1508, line: 110, type: !8646)
!8950 = !DILocalVariable(name: "clock_rate", scope: !8944, file: !1508, line: 112, type: !121)
!8951 = !DILocation(line: 0, scope: !8944)
!8952 = !DILocation(line: 109, column: 48, scope: !8944)
!8953 = !DILocation(line: 110, column: 38, scope: !8944)
!8954 = !DILocation(line: 112, column: 2, scope: !8944)
!8955 = !DILocation(line: 123, column: 36, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8957, file: !1508, line: 123, column: 7)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !1508, line: 122, column: 9)
!8958 = distinct !DILexicalBlock(scope: !8944, file: !1508, line: 115, column: 6)
!8959 = !DILocation(line: 124, column: 42, scope: !8956)
!8960 = !DILocation(line: 123, column: 7, scope: !8956)
!8961 = !DILocation(line: 125, column: 22, scope: !8956)
!8962 = !DILocation(line: 123, column: 7, scope: !8957)
!8963 = !DILocation(line: 176, column: 36, scope: !8944)
!8964 = !DILocation(line: 176, column: 3, scope: !8944)
!8965 = !DILocation(line: 179, column: 32, scope: !8944)
!8966 = !DILocation(line: 180, column: 10, scope: !8944)
!8967 = !DILocation(line: 179, column: 3, scope: !8944)
!8968 = !DILocation(line: 195, column: 1, scope: !8944)
!8969 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8832, file: !8832, line: 409, type: !8895, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8970)
!8970 = !{!8971}
!8971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8969, file: !8832, line: 409, type: !1455)
!8972 = !DILocation(line: 0, scope: !8969)
!8973 = !DILocation(line: 411, column: 3, scope: !8969)
!8974 = !DILocation(line: 412, column: 1, scope: !8969)
!8975 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !737, file: !737, line: 216, type: !1488, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8976)
!8976 = !{!8977, !8978, !8979, !8980}
!8977 = !DILocalVariable(name: "dev", arg: 1, scope: !8975, file: !737, line: 216, type: !1414)
!8978 = !DILocalVariable(name: "sys", arg: 2, scope: !8975, file: !737, line: 217, type: !812)
!8979 = !DILocalVariable(name: "rate", arg: 3, scope: !8975, file: !737, line: 218, type: !768)
!8980 = !DILocalVariable(name: "api", scope: !8975, file: !737, line: 220, type: !1466)
!8981 = !DILocation(line: 0, scope: !8975)
!8982 = !DILocation(line: 221, column: 49, scope: !8975)
!8983 = !DILocation(line: 223, column: 11, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8975, file: !737, line: 223, column: 6)
!8985 = !DILocation(line: 223, column: 20, scope: !8984)
!8986 = !DILocation(line: 223, column: 6, scope: !8975)
!8987 = !DILocation(line: 227, column: 9, scope: !8975)
!8988 = !DILocation(line: 227, column: 2, scope: !8975)
!8989 = !DILocation(line: 228, column: 1, scope: !8975)
!8990 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8832, file: !8832, line: 614, type: !8991, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !8993)
!8991 = !DISubroutineType(types: !8992)
!8992 = !{null, !1455, !121}
!8993 = !{!8994, !8995}
!8994 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8990, file: !8832, line: 614, type: !1455)
!8995 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8990, file: !8832, line: 614, type: !121)
!8996 = !DILocation(line: 0, scope: !8990)
!8997 = !DILocation(line: 616, column: 3, scope: !8990)
!8998 = !DILocation(line: 617, column: 1, scope: !8990)
!8999 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8832, file: !8832, line: 1019, type: !9000, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9002)
!9000 = !DISubroutineType(types: !9001)
!9001 = !{null, !1455, !121, !121, !121}
!9002 = !{!9003, !9004, !9005, !9006}
!9003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8999, file: !8832, line: 1019, type: !1455)
!9004 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8999, file: !8832, line: 1019, type: !121)
!9005 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8999, file: !8832, line: 1019, type: !121)
!9006 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8999, file: !8832, line: 1020, type: !121)
!9007 = !DILocation(line: 0, scope: !8999)
!9008 = !DILocation(line: 1028, column: 30, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !8832, line: 1027, column: 3)
!9010 = distinct !DILexicalBlock(scope: !8999, file: !8832, line: 1022, column: 7)
!9011 = !DILocation(line: 1028, column: 19, scope: !9009)
!9012 = !DILocation(line: 1028, column: 13, scope: !9009)
!9013 = !DILocation(line: 1028, column: 17, scope: !9009)
!9014 = !DILocation(line: 1030, column: 1, scope: !8999)
!9015 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8832, file: !8832, line: 948, type: !8991, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9016)
!9016 = !{!9017, !9018}
!9017 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9015, file: !8832, line: 948, type: !1455)
!9018 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9015, file: !8832, line: 948, type: !121)
!9019 = !DILocation(line: 0, scope: !9015)
!9020 = !DILocation(line: 950, column: 3, scope: !9015)
!9021 = !DILocation(line: 951, column: 1, scope: !9015)
!9022 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8832, file: !8832, line: 587, type: !8991, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9023)
!9023 = !{!9024, !9025}
!9024 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9022, file: !8832, line: 587, type: !1455)
!9025 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9022, file: !8832, line: 587, type: !121)
!9026 = !DILocation(line: 0, scope: !9022)
!9027 = !DILocation(line: 589, column: 3, scope: !9022)
!9028 = !DILocation(line: 590, column: 1, scope: !9022)
!9029 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8832, file: !8832, line: 804, type: !8991, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9030)
!9030 = !{!9031, !9032}
!9031 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9029, file: !8832, line: 804, type: !1455)
!9032 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9029, file: !8832, line: 804, type: !121)
!9033 = !DILocation(line: 0, scope: !9029)
!9034 = !DILocation(line: 806, column: 3, scope: !9029)
!9035 = !DILocation(line: 807, column: 1, scope: !9029)
!9036 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8832, file: !8832, line: 531, type: !8991, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9037)
!9037 = !{!9038, !9039}
!9038 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9036, file: !8832, line: 531, type: !1455)
!9039 = !DILocalVariable(name: "Parity", arg: 2, scope: !9036, file: !8832, line: 531, type: !121)
!9040 = !DILocation(line: 0, scope: !9036)
!9041 = !DILocation(line: 533, column: 3, scope: !9036)
!9042 = !DILocation(line: 534, column: 1, scope: !9036)
!9043 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8832, file: !8832, line: 1769, type: !8833, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9044)
!9044 = !{!9045}
!9045 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9043, file: !8832, line: 1769, type: !1455)
!9046 = !DILocation(line: 0, scope: !9043)
!9047 = !DILocation(line: 1771, column: 11, scope: !9043)
!9048 = !DILocation(line: 1771, column: 46, scope: !9043)
!9049 = !DILocation(line: 1771, column: 3, scope: !9043)
!9050 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8832, file: !8832, line: 1736, type: !8833, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9051)
!9051 = !{!9052}
!9052 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9050, file: !8832, line: 1736, type: !1455)
!9053 = !DILocation(line: 0, scope: !9050)
!9054 = !DILocation(line: 1738, column: 11, scope: !9050)
!9055 = !DILocation(line: 1738, column: 3, scope: !9050)
!9056 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8832, file: !8832, line: 1747, type: !8833, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9057)
!9057 = !{!9058}
!9058 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9056, file: !8832, line: 1747, type: !1455)
!9059 = !DILocation(line: 0, scope: !9056)
!9060 = !DILocation(line: 1749, column: 11, scope: !9056)
!9061 = !DILocation(line: 1749, column: 45, scope: !9056)
!9062 = !DILocation(line: 1749, column: 3, scope: !9056)
!9063 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8832, file: !8832, line: 1826, type: !8833, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9064)
!9064 = !{!9065}
!9065 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9063, file: !8832, line: 1826, type: !1455)
!9066 = !DILocation(line: 0, scope: !9063)
!9067 = !DILocation(line: 1828, column: 11, scope: !9063)
!9068 = !DILocation(line: 1828, column: 46, scope: !9063)
!9069 = !DILocation(line: 1828, column: 3, scope: !9063)
!9070 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8832, file: !8832, line: 1991, type: !8895, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9071)
!9071 = !{!9072}
!9072 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9070, file: !8832, line: 1991, type: !1455)
!9073 = !DILocation(line: 0, scope: !9070)
!9074 = !DILocation(line: 1993, column: 3, scope: !9070)
!9075 = !DILocation(line: 1994, column: 1, scope: !9070)
!9076 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8832, file: !8832, line: 1933, type: !8895, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9077)
!9077 = !{!9078, !9079}
!9078 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9076, file: !8832, line: 1933, type: !1455)
!9079 = !DILocalVariable(name: "tmpreg", scope: !9076, file: !8832, line: 1935, type: !120)
!9080 = !DILocation(line: 0, scope: !9076)
!9081 = !DILocation(line: 1935, column: 3, scope: !9076)
!9082 = !DILocation(line: 1935, column: 17, scope: !9076)
!9083 = !DILocation(line: 1936, column: 20, scope: !9076)
!9084 = !DILocation(line: 1936, column: 10, scope: !9076)
!9085 = !DILocation(line: 1937, column: 10, scope: !9076)
!9086 = !DILocation(line: 1938, column: 20, scope: !9076)
!9087 = !DILocation(line: 1938, column: 10, scope: !9076)
!9088 = !DILocation(line: 1939, column: 10, scope: !9076)
!9089 = !DILocation(line: 1940, column: 1, scope: !9076)
!9090 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8832, file: !8832, line: 1876, type: !8895, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9091)
!9091 = !{!9092, !9093}
!9092 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9090, file: !8832, line: 1876, type: !1455)
!9093 = !DILocalVariable(name: "tmpreg", scope: !9090, file: !8832, line: 1878, type: !120)
!9094 = !DILocation(line: 0, scope: !9090)
!9095 = !DILocation(line: 1878, column: 3, scope: !9090)
!9096 = !DILocation(line: 1878, column: 17, scope: !9090)
!9097 = !DILocation(line: 1879, column: 20, scope: !9090)
!9098 = !DILocation(line: 1879, column: 10, scope: !9090)
!9099 = !DILocation(line: 1880, column: 10, scope: !9090)
!9100 = !DILocation(line: 1881, column: 20, scope: !9090)
!9101 = !DILocation(line: 1881, column: 10, scope: !9090)
!9102 = !DILocation(line: 1882, column: 10, scope: !9090)
!9103 = !DILocation(line: 1883, column: 1, scope: !9090)
!9104 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8832, file: !8832, line: 1895, type: !8895, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9105)
!9105 = !{!9106, !9107}
!9106 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9104, file: !8832, line: 1895, type: !1455)
!9107 = !DILocalVariable(name: "tmpreg", scope: !9104, file: !8832, line: 1897, type: !120)
!9108 = !DILocation(line: 0, scope: !9104)
!9109 = !DILocation(line: 1897, column: 3, scope: !9104)
!9110 = !DILocation(line: 1897, column: 17, scope: !9104)
!9111 = !DILocation(line: 1898, column: 20, scope: !9104)
!9112 = !DILocation(line: 1898, column: 10, scope: !9104)
!9113 = !DILocation(line: 1899, column: 10, scope: !9104)
!9114 = !DILocation(line: 1900, column: 20, scope: !9104)
!9115 = !DILocation(line: 1900, column: 10, scope: !9104)
!9116 = !DILocation(line: 1901, column: 10, scope: !9104)
!9117 = !DILocation(line: 1902, column: 1, scope: !9104)
!9118 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8832, file: !8832, line: 1914, type: !8895, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9119)
!9119 = !{!9120, !9121}
!9120 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9118, file: !8832, line: 1914, type: !1455)
!9121 = !DILocalVariable(name: "tmpreg", scope: !9118, file: !8832, line: 1916, type: !120)
!9122 = !DILocation(line: 0, scope: !9118)
!9123 = !DILocation(line: 1916, column: 3, scope: !9118)
!9124 = !DILocation(line: 1916, column: 17, scope: !9118)
!9125 = !DILocation(line: 1917, column: 20, scope: !9118)
!9126 = !DILocation(line: 1917, column: 10, scope: !9118)
!9127 = !DILocation(line: 1918, column: 10, scope: !9118)
!9128 = !DILocation(line: 1919, column: 20, scope: !9118)
!9129 = !DILocation(line: 1919, column: 10, scope: !9118)
!9130 = !DILocation(line: 1920, column: 10, scope: !9118)
!9131 = !DILocation(line: 1921, column: 1, scope: !9118)
!9132 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8832, file: !8832, line: 1813, type: !8833, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9133)
!9133 = !{!9134}
!9134 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9132, file: !8832, line: 1813, type: !1455)
!9135 = !DILocation(line: 0, scope: !9132)
!9136 = !DILocation(line: 1815, column: 11, scope: !9132)
!9137 = !DILocation(line: 1815, column: 46, scope: !9132)
!9138 = !DILocation(line: 1815, column: 3, scope: !9132)
!9139 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8832, file: !8832, line: 2425, type: !9140, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9142)
!9140 = !DISubroutineType(types: !9141)
!9141 = !{null, !1455, !167}
!9142 = !{!9143, !9144}
!9143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9139, file: !8832, line: 2425, type: !1455)
!9144 = !DILocalVariable(name: "Value", arg: 2, scope: !9139, file: !8832, line: 2425, type: !167)
!9145 = !DILocation(line: 0, scope: !9139)
!9146 = !DILocation(line: 2427, column: 16, scope: !9139)
!9147 = !DILocation(line: 2427, column: 11, scope: !9139)
!9148 = !DILocation(line: 2427, column: 14, scope: !9139)
!9149 = !DILocation(line: 2428, column: 1, scope: !9139)
!9150 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8832, file: !8832, line: 1791, type: !8833, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9151)
!9151 = !{!9152}
!9152 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9150, file: !8832, line: 1791, type: !1455)
!9153 = !DILocation(line: 0, scope: !9150)
!9154 = !DILocation(line: 1793, column: 11, scope: !9150)
!9155 = !DILocation(line: 1793, column: 47, scope: !9150)
!9156 = !DILocation(line: 1793, column: 3, scope: !9150)
!9157 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8832, file: !8832, line: 2402, type: !9158, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9160)
!9158 = !DISubroutineType(types: !9159)
!9159 = !{!167, !1455}
!9160 = !{!9161}
!9161 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9157, file: !8832, line: 2402, type: !1455)
!9162 = !DILocation(line: 0, scope: !9157)
!9163 = !DILocation(line: 2404, column: 20, scope: !9157)
!9164 = !DILocation(line: 2404, column: 10, scope: !9157)
!9165 = !DILocation(line: 2404, column: 3, scope: !9157)
!9166 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1508, file: !1508, line: 1583, type: !1435, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9167)
!9167 = !{!9168, !9169, !9170, !9171, !9172, !9173}
!9168 = !DILocalVariable(name: "dev", arg: 1, scope: !9166, file: !1508, line: 1583, type: !1414)
!9169 = !DILocalVariable(name: "config", scope: !9166, file: !1508, line: 1585, type: !8523)
!9170 = !DILocalVariable(name: "data", scope: !9166, file: !1508, line: 1586, type: !8646)
!9171 = !DILocalVariable(name: "ll_parity", scope: !9166, file: !1508, line: 1587, type: !121)
!9172 = !DILocalVariable(name: "ll_datawidth", scope: !9166, file: !1508, line: 1588, type: !121)
!9173 = !DILocalVariable(name: "err", scope: !9166, file: !1508, line: 1589, type: !103)
!9174 = !DILocation(line: 0, scope: !9166)
!9175 = !DILocation(line: 1585, column: 48, scope: !9166)
!9176 = !DILocation(line: 1586, column: 38, scope: !9166)
!9177 = !DILocation(line: 1591, column: 2, scope: !9166)
!9178 = !DILocation(line: 1593, column: 29, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9166, file: !1508, line: 1593, column: 6)
!9180 = !DILocation(line: 1593, column: 7, scope: !9179)
!9181 = !DILocation(line: 1593, column: 6, scope: !9166)
!9182 = !DILocation(line: 1599, column: 31, scope: !9166)
!9183 = !DILocation(line: 1599, column: 71, scope: !9166)
!9184 = !DILocation(line: 1599, column: 8, scope: !9166)
!9185 = !DILocation(line: 1600, column: 10, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9166, file: !1508, line: 1600, column: 6)
!9187 = !DILocation(line: 1600, column: 6, scope: !9166)
!9188 = !DILocation(line: 1616, column: 36, scope: !9166)
!9189 = !DILocation(line: 1616, column: 8, scope: !9166)
!9190 = !DILocation(line: 1617, column: 10, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9166, file: !1508, line: 1617, column: 6)
!9192 = !DILocation(line: 1617, column: 6, scope: !9166)
!9193 = !DILocation(line: 1621, column: 27, scope: !9166)
!9194 = !DILocation(line: 1621, column: 2, scope: !9166)
!9195 = !DILocation(line: 1624, column: 40, scope: !9166)
!9196 = !DILocation(line: 1624, column: 2, scope: !9166)
!9197 = !DILocation(line: 1630, column: 14, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9166, file: !1508, line: 1630, column: 6)
!9199 = !DILocation(line: 1630, column: 6, scope: !9166)
!9200 = !DILocation(line: 1638, column: 2, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !1508, line: 1634, column: 34)
!9202 = distinct !DILexicalBlock(scope: !9198, file: !1508, line: 1634, column: 13)
!9203 = !DILocation(line: 0, scope: !9198)
!9204 = !DILocation(line: 1649, column: 35, scope: !9166)
!9205 = !DILocation(line: 1649, column: 2, scope: !9166)
!9206 = !DILocation(line: 1654, column: 14, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9166, file: !1508, line: 1654, column: 6)
!9208 = !DILocation(line: 1654, column: 6, scope: !9166)
!9209 = !DILocation(line: 1655, column: 3, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9207, file: !1508, line: 1654, column: 31)
!9211 = !DILocation(line: 1656, column: 2, scope: !9210)
!9212 = !DILocation(line: 1659, column: 37, scope: !9166)
!9213 = !DILocation(line: 1659, column: 2, scope: !9166)
!9214 = !DILocation(line: 1662, column: 14, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9166, file: !1508, line: 1662, column: 6)
!9216 = !DILocation(line: 1662, column: 6, scope: !9166)
!9217 = !DILocation(line: 1663, column: 37, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !1508, line: 1662, column: 27)
!9219 = !DILocation(line: 1663, column: 3, scope: !9218)
!9220 = !DILocation(line: 1664, column: 2, scope: !9218)
!9221 = !DILocation(line: 1684, column: 26, scope: !9166)
!9222 = !DILocation(line: 1684, column: 2, scope: !9166)
!9223 = !DILocation(line: 1722, column: 2, scope: !9166)
!9224 = !DILocation(line: 1724, column: 1, scope: !9166)
!9225 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1508, file: !1508, line: 651, type: !9226, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9228)
!9226 = !DISubroutineType(types: !9227)
!9227 = !{null, !1414}
!9228 = !{!9229, !9230, !9231}
!9229 = !DILocalVariable(name: "dev", arg: 1, scope: !9225, file: !1508, line: 651, type: !1414)
!9230 = !DILocalVariable(name: "data", scope: !9225, file: !1508, line: 653, type: !8646)
!9231 = !DILocalVariable(name: "clk", scope: !9225, file: !1508, line: 654, type: !9232)
!9232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!9233 = !DILocation(line: 0, scope: !9225)
!9234 = !DILocation(line: 653, column: 38, scope: !9225)
!9235 = !DILocation(line: 656, column: 8, scope: !9225)
!9236 = !DILocation(line: 656, column: 14, scope: !9225)
!9237 = !DILocation(line: 657, column: 1, scope: !9225)
!9238 = distinct !DISubprogram(name: "device_is_ready", scope: !3359, file: !3359, line: 47, type: !9239, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9241)
!9239 = !DISubroutineType(types: !9240)
!9240 = !{!170, !1414}
!9241 = !{!9242}
!9242 = !DILocalVariable(name: "dev", arg: 1, scope: !9238, file: !3359, line: 47, type: !1414)
!9243 = !DILocation(line: 0, scope: !9238)
!9244 = !DILocation(line: 55, column: 2, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9238, file: !3359, line: 55, column: 2)
!9246 = !{i64 2152491441}
!9247 = !DILocation(line: 56, column: 9, scope: !9238)
!9248 = !DILocation(line: 56, column: 2, scope: !9238)
!9249 = distinct !DISubprogram(name: "clock_control_on", scope: !737, file: !737, line: 123, type: !1473, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9250)
!9250 = !{!9251, !9252, !9253}
!9251 = !DILocalVariable(name: "dev", arg: 1, scope: !9249, file: !737, line: 123, type: !1414)
!9252 = !DILocalVariable(name: "sys", arg: 2, scope: !9249, file: !737, line: 124, type: !812)
!9253 = !DILocalVariable(name: "api", scope: !9249, file: !737, line: 126, type: !1466)
!9254 = !DILocation(line: 0, scope: !9249)
!9255 = !DILocation(line: 127, column: 49, scope: !9249)
!9256 = !DILocation(line: 129, column: 14, scope: !9249)
!9257 = !DILocation(line: 129, column: 9, scope: !9249)
!9258 = !DILocation(line: 129, column: 2, scope: !9249)
!9259 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1540, file: !1540, line: 342, type: !9260, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9262)
!9260 = !DISubroutineType(types: !9261)
!9261 = !{!103, !1590, !167}
!9262 = !{!9263, !9264, !9265, !9266}
!9263 = !DILocalVariable(name: "config", arg: 1, scope: !9259, file: !1540, line: 342, type: !1590)
!9264 = !DILocalVariable(name: "id", arg: 2, scope: !9259, file: !1540, line: 343, type: !167)
!9265 = !DILocalVariable(name: "ret", scope: !9259, file: !1540, line: 345, type: !103)
!9266 = !DILocalVariable(name: "state", scope: !9259, file: !1540, line: 346, type: !1543)
!9267 = !DILocation(line: 0, scope: !9259)
!9268 = !DILocation(line: 346, column: 2, scope: !9259)
!9269 = !DILocation(line: 348, column: 8, scope: !9259)
!9270 = !DILocation(line: 349, column: 10, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9259, file: !1540, line: 349, column: 6)
!9272 = !DILocation(line: 349, column: 6, scope: !9259)
!9273 = !DILocation(line: 353, column: 44, scope: !9259)
!9274 = !DILocation(line: 353, column: 9, scope: !9259)
!9275 = !DILocation(line: 353, column: 2, scope: !9259)
!9276 = !DILocation(line: 354, column: 1, scope: !9259)
!9277 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8832, file: !8832, line: 496, type: !8991, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9278)
!9278 = !{!9279, !9280}
!9279 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9277, file: !8832, line: 496, type: !1455)
!9280 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9277, file: !8832, line: 496, type: !121)
!9281 = !DILocation(line: 0, scope: !9277)
!9282 = !DILocation(line: 498, column: 3, scope: !9277)
!9283 = !DILocation(line: 499, column: 1, scope: !9277)
!9284 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8832, file: !8832, line: 849, type: !9000, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9285)
!9285 = !{!9286, !9287, !9288, !9289}
!9286 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9284, file: !8832, line: 849, type: !1455)
!9287 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9284, file: !8832, line: 849, type: !121)
!9288 = !DILocalVariable(name: "Parity", arg: 3, scope: !9284, file: !8832, line: 849, type: !121)
!9289 = !DILocalVariable(name: "StopBits", arg: 4, scope: !9284, file: !8832, line: 850, type: !121)
!9290 = !DILocation(line: 0, scope: !9284)
!9291 = !DILocation(line: 852, column: 3, scope: !9284)
!9292 = !DILocation(line: 853, column: 3, scope: !9284)
!9293 = !DILocation(line: 854, column: 1, scope: !9284)
!9294 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8832, file: !8832, line: 1336, type: !8895, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9295)
!9295 = !{!9296}
!9296 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9294, file: !8832, line: 1336, type: !1455)
!9297 = !DILocation(line: 0, scope: !9294)
!9298 = !DILocation(line: 1338, column: 3, scope: !9294)
!9299 = !DILocation(line: 1339, column: 1, scope: !9294)
!9300 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1540, file: !1540, line: 316, type: !9301, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9303)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{!103, !1590, !1543}
!9303 = !{!9304, !9305, !9306}
!9304 = !DILocalVariable(name: "config", arg: 1, scope: !9300, file: !1540, line: 317, type: !1590)
!9305 = !DILocalVariable(name: "state", arg: 2, scope: !9300, file: !1540, line: 318, type: !1543)
!9306 = !DILocalVariable(name: "reg", scope: !9300, file: !1540, line: 320, type: !22)
!9307 = !DILocation(line: 0, scope: !9300)
!9308 = !DILocation(line: 329, column: 39, scope: !9300)
!9309 = !DILocation(line: 329, column: 52, scope: !9300)
!9310 = !DILocation(line: 329, column: 9, scope: !9300)
!9311 = !DILocation(line: 329, column: 2, scope: !9300)
!9312 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !9239, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1370, retainedNodes: !9313)
!9313 = !{!9314}
!9314 = !DILocalVariable(name: "dev", arg: 1, scope: !9312, file: !154, line: 730, type: !1414)
!9315 = !DILocation(line: 0, scope: !9312)
!9316 = !DILocation(line: 732, column: 9, scope: !9312)
!9317 = !DILocation(line: 732, column: 2, scope: !9312)
!9318 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1680, file: !1680, line: 270, type: !1686, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9319)
!9319 = !{!9320}
!9320 = !DILocalVariable(name: "dev", arg: 1, scope: !9318, file: !1680, line: 270, type: !1688)
!9321 = !DILocation(line: 0, scope: !9318)
!9322 = !DILocation(line: 274, column: 2, scope: !9318)
!9323 = !DILocation(line: 275, column: 12, scope: !9318)
!9324 = !DILocation(line: 276, column: 15, scope: !9318)
!9325 = !DILocation(line: 277, column: 16, scope: !9318)
!9326 = !DILocation(line: 278, column: 15, scope: !9318)
!9327 = !DILocation(line: 279, column: 16, scope: !9318)
!9328 = !DILocation(line: 282, column: 2, scope: !9318)
!9329 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !5375, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9330)
!9330 = !{!9331, !9332}
!9331 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9329, file: !369, line: 1638, type: !693)
!9332 = !DILocalVariable(name: "priority", arg: 2, scope: !9329, file: !369, line: 1638, type: !121)
!9333 = !DILocation(line: 0, scope: !9329)
!9334 = !DILocation(line: 1646, column: 46, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !369, line: 1645, column: 3)
!9336 = distinct !DILexicalBlock(scope: !9329, file: !369, line: 1640, column: 7)
!9337 = !DILocation(line: 1648, column: 1, scope: !9329)
!9338 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1680, file: !1680, line: 118, type: !5278, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9339)
!9339 = !{!9340, !9341}
!9340 = !DILocalVariable(name: "arg", arg: 1, scope: !9338, file: !1680, line: 118, type: !102)
!9341 = !DILocalVariable(name: "dticks", scope: !9338, file: !1680, line: 121, type: !121)
!9342 = !DILocation(line: 0, scope: !9338)
!9343 = !DILocation(line: 124, column: 2, scope: !9338)
!9344 = !DILocation(line: 129, column: 17, scope: !9338)
!9345 = !DILocation(line: 129, column: 14, scope: !9338)
!9346 = !DILocation(line: 130, column: 15, scope: !9338)
!9347 = !DILocation(line: 145, column: 27, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9349, file: !1680, line: 132, column: 16)
!9349 = distinct !DILexicalBlock(scope: !9338, file: !1680, line: 132, column: 6)
!9350 = !DILocation(line: 145, column: 25, scope: !9348)
!9351 = !DILocation(line: 145, column: 45, scope: !9348)
!9352 = !DILocation(line: 146, column: 30, scope: !9348)
!9353 = !DILocation(line: 146, column: 20, scope: !9348)
!9354 = !DILocation(line: 147, column: 3, scope: !9348)
!9355 = !DILocation(line: 151, column: 2, scope: !9338)
!9356 = !DILocation(line: 152, column: 1, scope: !9338)
!9357 = distinct !DISubprogram(name: "elapsed", scope: !1680, file: !1680, line: 85, type: !5097, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9358)
!9358 = !{!9359, !9360, !9361}
!9359 = !DILocalVariable(name: "val1", scope: !9357, file: !1680, line: 87, type: !121)
!9360 = !DILocalVariable(name: "ctrl", scope: !9357, file: !1680, line: 88, type: !121)
!9361 = !DILocalVariable(name: "val2", scope: !9357, file: !1680, line: 89, type: !121)
!9362 = !DILocation(line: 87, column: 27, scope: !9357)
!9363 = !DILocation(line: 0, scope: !9357)
!9364 = !DILocation(line: 88, column: 27, scope: !9357)
!9365 = !DILocation(line: 89, column: 27, scope: !9357)
!9366 = !DILocation(line: 105, column: 12, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9357, file: !1680, line: 105, column: 6)
!9368 = !DILocation(line: 106, column: 6, scope: !9367)
!9369 = !DILocation(line: 107, column: 16, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9367, file: !1680, line: 106, column: 24)
!9371 = !DILocation(line: 111, column: 18, scope: !9370)
!9372 = !DILocation(line: 112, column: 2, scope: !9370)
!9373 = !DILocation(line: 114, column: 20, scope: !9357)
!9374 = !DILocation(line: 114, column: 30, scope: !9357)
!9375 = !DILocation(line: 114, column: 28, scope: !9357)
!9376 = !DILocation(line: 114, column: 2, scope: !9357)
!9377 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1680, file: !1680, line: 154, type: !9378, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{null, !675, !170}
!9380 = !{!9381, !9382, !9383, !9384, !9385, !9386, !9387, !9392, !9393}
!9381 = !DILocalVariable(name: "ticks", arg: 1, scope: !9377, file: !1680, line: 154, type: !675)
!9382 = !DILocalVariable(name: "idle", arg: 2, scope: !9377, file: !1680, line: 154, type: !170)
!9383 = !DILocalVariable(name: "delay", scope: !9377, file: !1680, line: 169, type: !121)
!9384 = !DILocalVariable(name: "val1", scope: !9377, file: !1680, line: 170, type: !121)
!9385 = !DILocalVariable(name: "val2", scope: !9377, file: !1680, line: 170, type: !121)
!9386 = !DILocalVariable(name: "last_load_", scope: !9377, file: !1680, line: 171, type: !121)
!9387 = !DILocalVariable(name: "key", scope: !9377, file: !1680, line: 176, type: !9388)
!9388 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !9389)
!9389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !9390)
!9390 = !{!9391}
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9389, file: !334, line: 33, baseType: !103, size: 32)
!9392 = !DILocalVariable(name: "pending", scope: !9377, file: !1680, line: 178, type: !121)
!9393 = !DILocalVariable(name: "unannounced", scope: !9377, file: !1680, line: 185, type: !121)
!9394 = !DILocation(line: 0, scope: !9377)
!9395 = !DILocation(line: 162, column: 49, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9377, file: !1680, line: 162, column: 6)
!9397 = !DILocation(line: 163, column: 17, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9396, file: !1680, line: 162, column: 78)
!9399 = !DILocation(line: 164, column: 13, scope: !9398)
!9400 = !DILocation(line: 165, column: 3, scope: !9398)
!9401 = !DILocation(line: 171, column: 24, scope: !9377)
!9402 = !DILocation(line: 173, column: 10, scope: !9377)
!9403 = !DILocation(line: 174, column: 10, scope: !9377)
!9404 = !DILocalVariable(name: "l", arg: 1, scope: !9405, file: !334, line: 136, type: !9408)
!9405 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !9406, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9409)
!9406 = !DISubroutineType(types: !9407)
!9407 = !{!9388, !9408}
!9408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!9409 = !{!9404, !9410}
!9410 = !DILocalVariable(name: "k", scope: !9405, file: !334, line: 139, type: !9388)
!9411 = !DILocation(line: 0, scope: !9405, inlinedAt: !9412)
!9412 = distinct !DILocation(line: 176, column: 25, scope: !9377)
!9413 = !DILocation(line: 55, column: 2, scope: !9414, inlinedAt: !9418)
!9414 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9415)
!9415 = !{!9416, !9417}
!9416 = !DILocalVariable(name: "key", scope: !9414, file: !5051, line: 44, type: !32)
!9417 = !DILocalVariable(name: "tmp", scope: !9414, file: !5051, line: 53, type: !32)
!9418 = distinct !DILocation(line: 145, column: 10, scope: !9405, inlinedAt: !9412)
!9419 = !{i64 1617525}
!9420 = !DILocation(line: 0, scope: !9414, inlinedAt: !9418)
!9421 = !DILocation(line: 178, column: 21, scope: !9377)
!9422 = !DILocation(line: 180, column: 18, scope: !9377)
!9423 = !DILocation(line: 182, column: 14, scope: !9377)
!9424 = !DILocation(line: 183, column: 15, scope: !9377)
!9425 = !DILocation(line: 185, column: 39, scope: !9377)
!9426 = !DILocation(line: 185, column: 37, scope: !9377)
!9427 = !DILocation(line: 187, column: 27, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9377, file: !1680, line: 187, column: 6)
!9429 = !DILocation(line: 187, column: 6, scope: !9377)
!9430 = !DILocation(line: 202, column: 27, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9428, file: !1680, line: 195, column: 9)
!9432 = !DILocation(line: 202, column: 48, scope: !9431)
!9433 = !DILocation(line: 203, column: 9, scope: !9431)
!9434 = !DILocation(line: 204, column: 11, scope: !9431)
!9435 = !DILocation(line: 205, column: 13, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9431, file: !1680, line: 205, column: 7)
!9437 = !DILocation(line: 205, column: 7, scope: !9431)
!9438 = !DILocation(line: 0, scope: !9428)
!9439 = !DILocation(line: 212, column: 18, scope: !9377)
!9440 = !DILocation(line: 214, column: 28, scope: !9377)
!9441 = !DILocation(line: 214, column: 16, scope: !9377)
!9442 = !DILocation(line: 215, column: 15, scope: !9377)
!9443 = !DILocation(line: 227, column: 11, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9377, file: !1680, line: 227, column: 6)
!9445 = !DILocation(line: 227, column: 6, scope: !9377)
!9446 = !DILocation(line: 228, column: 15, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9444, file: !1680, line: 227, column: 19)
!9448 = !DILocation(line: 228, column: 38, scope: !9447)
!9449 = !DILocation(line: 228, column: 24, scope: !9447)
!9450 = !DILocation(line: 229, column: 2, scope: !9447)
!9451 = !DILocation(line: 230, column: 24, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9444, file: !1680, line: 229, column: 9)
!9453 = !DILocation(line: 230, column: 15, scope: !9452)
!9454 = !DILocation(line: 0, scope: !9444)
!9455 = !DILocalVariable(name: "key", arg: 2, scope: !9456, file: !334, line: 190, type: !9388)
!9456 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !9457, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9459)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{null, !9408, !9388}
!9459 = !{!9460, !9455}
!9460 = !DILocalVariable(name: "l", arg: 1, scope: !9456, file: !334, line: 189, type: !9408)
!9461 = !DILocation(line: 0, scope: !9456, inlinedAt: !9462)
!9462 = distinct !DILocation(line: 232, column: 2, scope: !9377)
!9463 = !DILocalVariable(name: "key", arg: 1, scope: !9464, file: !5051, line: 84, type: !32)
!9464 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9465)
!9465 = !{!9463}
!9466 = !DILocation(line: 0, scope: !9464, inlinedAt: !9467)
!9467 = distinct !DILocation(line: 215, column: 2, scope: !9456, inlinedAt: !9462)
!9468 = !DILocation(line: 95, column: 2, scope: !9464, inlinedAt: !9467)
!9469 = !{i64 1618342}
!9470 = !DILocation(line: 234, column: 1, scope: !9377)
!9471 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1680, file: !1680, line: 236, type: !5097, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9472)
!9472 = !{!9473, !9474}
!9473 = !DILocalVariable(name: "key", scope: !9471, file: !1680, line: 242, type: !9388)
!9474 = !DILocalVariable(name: "cyc", scope: !9471, file: !1680, line: 243, type: !121)
!9475 = !DILocation(line: 0, scope: !9405, inlinedAt: !9476)
!9476 = distinct !DILocation(line: 242, column: 25, scope: !9471)
!9477 = !DILocation(line: 55, column: 2, scope: !9414, inlinedAt: !9478)
!9478 = distinct !DILocation(line: 145, column: 10, scope: !9405, inlinedAt: !9476)
!9479 = !DILocation(line: 0, scope: !9414, inlinedAt: !9478)
!9480 = !DILocation(line: 0, scope: !9471)
!9481 = !DILocation(line: 243, column: 17, scope: !9471)
!9482 = !DILocation(line: 243, column: 29, scope: !9471)
!9483 = !DILocation(line: 243, column: 27, scope: !9471)
!9484 = !DILocation(line: 243, column: 43, scope: !9471)
!9485 = !DILocation(line: 243, column: 41, scope: !9471)
!9486 = !DILocation(line: 0, scope: !9456, inlinedAt: !9487)
!9487 = distinct !DILocation(line: 245, column: 2, scope: !9471)
!9488 = !DILocation(line: 0, scope: !9464, inlinedAt: !9489)
!9489 = distinct !DILocation(line: 215, column: 2, scope: !9456, inlinedAt: !9487)
!9490 = !DILocation(line: 95, column: 2, scope: !9464, inlinedAt: !9489)
!9491 = !DILocation(line: 246, column: 13, scope: !9471)
!9492 = !DILocation(line: 246, column: 2, scope: !9471)
!9493 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1680, file: !1680, line: 249, type: !5097, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !9494)
!9494 = !{!9495, !9496}
!9495 = !DILocalVariable(name: "key", scope: !9493, file: !1680, line: 251, type: !9388)
!9496 = !DILocalVariable(name: "ret", scope: !9493, file: !1680, line: 252, type: !121)
!9497 = !DILocation(line: 0, scope: !9405, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 251, column: 25, scope: !9493)
!9499 = !DILocation(line: 55, column: 2, scope: !9414, inlinedAt: !9500)
!9500 = distinct !DILocation(line: 145, column: 10, scope: !9405, inlinedAt: !9498)
!9501 = !DILocation(line: 0, scope: !9414, inlinedAt: !9500)
!9502 = !DILocation(line: 0, scope: !9493)
!9503 = !DILocation(line: 252, column: 17, scope: !9493)
!9504 = !DILocation(line: 252, column: 29, scope: !9493)
!9505 = !DILocation(line: 252, column: 27, scope: !9493)
!9506 = !DILocation(line: 0, scope: !9456, inlinedAt: !9507)
!9507 = distinct !DILocation(line: 254, column: 2, scope: !9493)
!9508 = !DILocation(line: 0, scope: !9464, inlinedAt: !9509)
!9509 = distinct !DILocation(line: 215, column: 2, scope: !9456, inlinedAt: !9507)
!9510 = !DILocation(line: 95, column: 2, scope: !9464, inlinedAt: !9509)
!9511 = !DILocation(line: 255, column: 2, scope: !9493)
!9512 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1680, file: !1680, line: 258, type: !3124, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !335)
!9513 = !DILocation(line: 260, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9512, file: !1680, line: 260, column: 6)
!9515 = !DILocation(line: 260, column: 16, scope: !9514)
!9516 = !DILocation(line: 260, column: 6, scope: !9512)
!9517 = !DILocation(line: 261, column: 17, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9514, file: !1680, line: 260, column: 34)
!9519 = !DILocation(line: 262, column: 2, scope: !9518)
!9520 = !DILocation(line: 263, column: 1, scope: !9512)
!9521 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1680, file: !1680, line: 265, type: !3124, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1603, retainedNodes: !335)
!9522 = !DILocation(line: 267, column: 16, scope: !9521)
!9523 = !DILocation(line: 268, column: 1, scope: !9521)
!9524 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9525, file: !9525, line: 9, type: !9526, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2944, retainedNodes: !9549)
!9525 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9526 = !DISubroutineType(types: !9527)
!9527 = !{!103, !9528, !167, !9548}
!9528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9529, size: 32)
!9529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9530)
!9530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1540, line: 60, size: 64, elements: !9531)
!9531 = !{!9532, !9547}
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9530, file: !1540, line: 69, baseType: !9533, size: 32)
!9533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9534, size: 32)
!9534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9535)
!9535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1540, line: 50, size: 64, elements: !9536)
!9536 = !{!9537, !9545, !9546}
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9535, file: !1540, line: 52, baseType: !9538, size: 32)
!9538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9539, size: 32)
!9539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9540)
!9540 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1551, line: 37, baseType: !9541)
!9541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1551, line: 32, size: 64, elements: !9542)
!9542 = !{!9543, !9544}
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9541, file: !1551, line: 34, baseType: !121, size: 32)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9541, file: !1551, line: 36, baseType: !121, size: 32, offset: 32)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9535, file: !1540, line: 54, baseType: !167, size: 8, offset: 32)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9535, file: !1540, line: 56, baseType: !167, size: 8, offset: 40)
!9547 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9530, file: !1540, line: 71, baseType: !167, size: 8, offset: 32)
!9548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9533, size: 32)
!9549 = !{!9550, !9551, !9552}
!9550 = !DILocalVariable(name: "config", arg: 1, scope: !9524, file: !9525, line: 9, type: !9528)
!9551 = !DILocalVariable(name: "id", arg: 2, scope: !9524, file: !9525, line: 9, type: !167)
!9552 = !DILocalVariable(name: "state", arg: 3, scope: !9524, file: !9525, line: 10, type: !9548)
!9553 = !DILocation(line: 0, scope: !9524)
!9554 = !DILocation(line: 12, column: 20, scope: !9524)
!9555 = !DILocation(line: 13, column: 27, scope: !9524)
!9556 = !DILocation(line: 13, column: 42, scope: !9524)
!9557 = !DILocation(line: 13, column: 19, scope: !9524)
!9558 = !DILocation(line: 13, column: 16, scope: !9524)
!9559 = !DILocation(line: 13, column: 2, scope: !9524)
!9560 = distinct !{!9560, !9559, !9561}
!9561 = !DILocation(line: 19, column: 2, scope: !9524)
!9562 = !DILocation(line: 14, column: 23, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !9525, line: 14, column: 7)
!9564 = distinct !DILexicalBlock(scope: !9524, file: !9525, line: 13, column: 54)
!9565 = !DILocation(line: 14, column: 10, scope: !9563)
!9566 = !DILocation(line: 18, column: 11, scope: !9564)
!9567 = !DILocation(line: 14, column: 7, scope: !9564)
!9568 = !DILocation(line: 22, column: 1, scope: !9524)
!9569 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1796, file: !1796, line: 193, type: !9570, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !9579)
!9570 = !DISubroutineType(types: !9571)
!9571 = !{!103, !9572, !167, !22}
!9572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9573, size: 32)
!9573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9574)
!9574 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1551, line: 37, baseType: !9575)
!9575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1551, line: 32, size: 64, elements: !9576)
!9576 = !{!9577, !9578}
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9575, file: !1551, line: 34, baseType: !121, size: 32)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9575, file: !1551, line: 36, baseType: !121, size: 32, offset: 32)
!9579 = !{!9580, !9581, !9582, !9583, !9584, !9585, !9586, !9587, !9589}
!9580 = !DILocalVariable(name: "pins", arg: 1, scope: !9569, file: !1796, line: 193, type: !9572)
!9581 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9569, file: !1796, line: 193, type: !167)
!9582 = !DILocalVariable(name: "reg", arg: 3, scope: !9569, file: !1796, line: 194, type: !22)
!9583 = !DILocalVariable(name: "pin", scope: !9569, file: !1796, line: 196, type: !121)
!9584 = !DILocalVariable(name: "mux", scope: !9569, file: !1796, line: 196, type: !121)
!9585 = !DILocalVariable(name: "pin_cgf", scope: !9569, file: !1796, line: 197, type: !121)
!9586 = !DILocalVariable(name: "ret", scope: !9569, file: !1796, line: 198, type: !103)
!9587 = !DILocalVariable(name: "i", scope: !9588, file: !1796, line: 209, type: !167)
!9588 = distinct !DILexicalBlock(scope: !9569, file: !1796, line: 209, column: 2)
!9589 = !DILocalVariable(name: "gpio_out", scope: !9590, file: !1796, line: 239, type: !121)
!9590 = distinct !DILexicalBlock(scope: !9591, file: !1796, line: 238, column: 55)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !1796, line: 238, column: 14)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !1796, line: 236, column: 14)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !1796, line: 234, column: 7)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !1796, line: 209, column: 41)
!9595 = distinct !DILexicalBlock(scope: !9588, file: !1796, line: 209, column: 2)
!9596 = !DILocation(line: 0, scope: !9569)
!9597 = !DILocation(line: 0, scope: !9588)
!9598 = !DILocation(line: 209, column: 25, scope: !9595)
!9599 = !DILocation(line: 209, column: 2, scope: !9588)
!9600 = distinct !{!9600, !9599, !9601}
!9601 = !DILocation(line: 259, column: 2, scope: !9588)
!9602 = !DILocation(line: 210, column: 17, scope: !9594)
!9603 = !DILocation(line: 234, column: 7, scope: !9593)
!9604 = !DILocation(line: 234, column: 33, scope: !9593)
!9605 = !DILocation(line: 234, column: 7, scope: !9594)
!9606 = !DILocation(line: 235, column: 22, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9593, file: !1796, line: 234, column: 49)
!9608 = !DILocation(line: 235, column: 29, scope: !9607)
!9609 = !DILocation(line: 236, column: 3, scope: !9607)
!9610 = !DILocation(line: 236, column: 14, scope: !9593)
!9611 = !DILocation(line: 239, column: 32, scope: !9590)
!9612 = !DILocation(line: 0, scope: !9590)
!9613 = !DILocation(line: 241, column: 8, scope: !9590)
!9614 = !DILocation(line: 246, column: 3, scope: !9590)
!9615 = !DILocation(line: 252, column: 9, scope: !9594)
!9616 = !DILocation(line: 255, column: 9, scope: !9594)
!9617 = !DILocation(line: 256, column: 11, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9594, file: !1796, line: 256, column: 7)
!9619 = !DILocation(line: 209, column: 37, scope: !9595)
!9620 = !DILocation(line: 256, column: 7, scope: !9594)
!9621 = !DILocation(line: 262, column: 1, scope: !9569)
!9622 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1796, file: !1796, line: 176, type: !9623, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !9625)
!9623 = !DISubroutineType(types: !9624)
!9624 = !{!103, !121, !121, !121}
!9625 = !{!9626, !9627, !9628, !9629}
!9626 = !DILocalVariable(name: "pin", arg: 1, scope: !9622, file: !1796, line: 176, type: !121)
!9627 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9622, file: !1796, line: 176, type: !121)
!9628 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9622, file: !1796, line: 176, type: !121)
!9629 = !DILocalVariable(name: "port_device", scope: !9622, file: !1796, line: 178, type: !1726)
!9630 = !DILocation(line: 0, scope: !9622)
!9631 = !DILocation(line: 180, column: 22, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9622, file: !1796, line: 180, column: 6)
!9633 = !DILocation(line: 180, column: 6, scope: !9622)
!9634 = !DILocation(line: 180, column: 6, scope: !9632)
!9635 = !DILocation(line: 184, column: 16, scope: !9622)
!9636 = !DILocation(line: 186, column: 19, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9622, file: !1796, line: 186, column: 6)
!9638 = !DILocation(line: 186, column: 28, scope: !9637)
!9639 = !DILocation(line: 186, column: 33, scope: !9637)
!9640 = !DILocation(line: 186, column: 6, scope: !9622)
!9641 = !DILocation(line: 190, column: 43, scope: !9622)
!9642 = !DILocation(line: 190, column: 9, scope: !9622)
!9643 = !DILocation(line: 190, column: 2, scope: !9622)
!9644 = !DILocation(line: 191, column: 1, scope: !9622)
!9645 = distinct !DISubprogram(name: "device_is_ready", scope: !3359, file: !3359, line: 47, type: !9646, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !9648)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{!170, !1726}
!9648 = !{!9649}
!9649 = !DILocalVariable(name: "dev", arg: 1, scope: !9645, file: !3359, line: 47, type: !1726)
!9650 = !DILocation(line: 0, scope: !9645)
!9651 = !DILocation(line: 55, column: 2, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9645, file: !3359, line: 55, column: 2)
!9653 = !{i64 2148851534}
!9654 = !DILocation(line: 56, column: 9, scope: !9645)
!9655 = !DILocation(line: 56, column: 2, scope: !9645)
!9656 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !9646, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !9657)
!9657 = !{!9658}
!9658 = !DILocalVariable(name: "dev", arg: 1, scope: !9656, file: !154, line: 730, type: !1726)
!9659 = !DILocation(line: 0, scope: !9656)
!9660 = !DILocation(line: 732, column: 9, scope: !9656)
!9661 = !DILocation(line: 732, column: 2, scope: !9656)
!9662 = distinct !DISubprogram(name: "SystemInit", scope: !1826, file: !1826, line: 160, type: !3124, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !335)
!9663 = !DILocation(line: 170, column: 1, scope: !9662)
!9664 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1826, file: !1826, line: 210, type: !3124, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1802, retainedNodes: !9665)
!9665 = !{!9666, !9667, !9668, !9669, !9670}
!9666 = !DILocalVariable(name: "tmp", scope: !9664, file: !1826, line: 212, type: !121)
!9667 = !DILocalVariable(name: "pllmul", scope: !9664, file: !1826, line: 212, type: !121)
!9668 = !DILocalVariable(name: "plldiv", scope: !9664, file: !1826, line: 212, type: !121)
!9669 = !DILocalVariable(name: "pllsource", scope: !9664, file: !1826, line: 212, type: !121)
!9670 = !DILocalVariable(name: "msirange", scope: !9664, file: !1826, line: 212, type: !121)
!9671 = !DILocation(line: 0, scope: !9664)
!9672 = !DILocation(line: 215, column: 14, scope: !9664)
!9673 = !DILocation(line: 217, column: 3, scope: !9664)
!9674 = !DILocation(line: 220, column: 24, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9664, file: !1826, line: 218, column: 3)
!9676 = !DILocation(line: 220, column: 52, scope: !9675)
!9677 = !DILocation(line: 221, column: 32, scope: !9675)
!9678 = !DILocation(line: 222, column: 7, scope: !9675)
!9679 = !DILocation(line: 228, column: 7, scope: !9675)
!9680 = !DILocation(line: 231, column: 21, scope: !9675)
!9681 = !DILocation(line: 232, column: 21, scope: !9675)
!9682 = !DILocation(line: 233, column: 36, scope: !9675)
!9683 = !DILocation(line: 233, column: 16, scope: !9675)
!9684 = !DILocation(line: 234, column: 24, scope: !9675)
!9685 = !DILocation(line: 234, column: 31, scope: !9675)
!9686 = !DILocation(line: 236, column: 24, scope: !9675)
!9687 = !DILocation(line: 236, column: 29, scope: !9675)
!9688 = !DILocation(line: 238, column: 21, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9675, file: !1826, line: 238, column: 11)
!9690 = !DILocation(line: 238, column: 11, scope: !9675)
!9691 = !DILocation(line: 241, column: 41, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9689, file: !1826, line: 239, column: 7)
!9693 = !DILocation(line: 241, column: 51, scope: !9692)
!9694 = !DILocation(line: 242, column: 7, scope: !9692)
!9695 = !DILocation(line: 246, column: 41, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9689, file: !1826, line: 244, column: 7)
!9697 = !DILocation(line: 246, column: 51, scope: !9696)
!9698 = !DILocation(line: 0, scope: !9675)
!9699 = !DILocation(line: 256, column: 30, scope: !9664)
!9700 = !DILocation(line: 256, column: 52, scope: !9664)
!9701 = !DILocation(line: 256, column: 9, scope: !9664)
!9702 = !DILocation(line: 258, column: 19, scope: !9664)
!9703 = !DILocation(line: 259, column: 1, scope: !9664)
!9704 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9705, file: !9705, line: 228, type: !9706, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !9708)
!9705 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!8445}
!9708 = !{!9709, !9710}
!9709 = !DILocalVariable(name: "tickstart", scope: !9704, file: !9705, line: 230, type: !121)
!9710 = !DILocalVariable(name: "status", scope: !9704, file: !9705, line: 231, type: !8445)
!9711 = !DILocation(line: 234, column: 3, scope: !9704)
!9712 = !DILocation(line: 238, column: 3, scope: !9704)
!9713 = !DILocation(line: 241, column: 15, scope: !9704)
!9714 = !DILocation(line: 0, scope: !9704)
!9715 = !DILocation(line: 244, column: 3, scope: !9704)
!9716 = !DILocation(line: 244, column: 10, scope: !9704)
!9717 = !DILocation(line: 244, column: 43, scope: !9704)
!9718 = !DILocation(line: 246, column: 10, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9720, file: !9705, line: 246, column: 9)
!9720 = distinct !DILexicalBlock(scope: !9704, file: !9705, line: 245, column: 3)
!9721 = !DILocation(line: 246, column: 24, scope: !9719)
!9722 = !DILocation(line: 246, column: 37, scope: !9719)
!9723 = !DILocation(line: 246, column: 9, scope: !9720)
!9724 = distinct !{!9724, !9715, !9725}
!9725 = !DILocation(line: 250, column: 3, scope: !9704)
!9726 = !DILocation(line: 253, column: 3, scope: !9704)
!9727 = !DILocation(line: 256, column: 3, scope: !9704)
!9728 = !DILocation(line: 256, column: 10, scope: !9704)
!9729 = !DILocation(line: 256, column: 44, scope: !9704)
!9730 = !DILocation(line: 258, column: 10, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !9705, line: 258, column: 9)
!9732 = distinct !DILexicalBlock(scope: !9704, file: !9705, line: 257, column: 3)
!9733 = !DILocation(line: 258, column: 24, scope: !9731)
!9734 = !DILocation(line: 258, column: 37, scope: !9731)
!9735 = !DILocation(line: 258, column: 9, scope: !9732)
!9736 = distinct !{!9736, !9727, !9737}
!9737 = !DILocation(line: 262, column: 3, scope: !9704)
!9738 = !DILocation(line: 265, column: 19, scope: !9704)
!9739 = !DILocation(line: 268, column: 25, scope: !9704)
!9740 = !DILocation(line: 268, column: 12, scope: !9704)
!9741 = !DILocation(line: 269, column: 13, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9704, file: !9705, line: 269, column: 6)
!9743 = !DILocation(line: 269, column: 6, scope: !9704)
!9744 = !DILocation(line: 275, column: 3, scope: !9704)
!9745 = !DILocation(line: 277, column: 3, scope: !9704)
!9746 = !DILocation(line: 280, column: 15, scope: !9704)
!9747 = !DILocation(line: 283, column: 3, scope: !9704)
!9748 = !DILocation(line: 283, column: 10, scope: !9704)
!9749 = !DILocation(line: 283, column: 43, scope: !9704)
!9750 = !DILocation(line: 285, column: 10, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !9705, line: 285, column: 9)
!9752 = distinct !DILexicalBlock(scope: !9704, file: !9705, line: 284, column: 3)
!9753 = !DILocation(line: 285, column: 24, scope: !9751)
!9754 = !DILocation(line: 285, column: 37, scope: !9751)
!9755 = !DILocation(line: 285, column: 9, scope: !9752)
!9756 = distinct !{!9756, !9747, !9757}
!9757 = !DILocation(line: 289, column: 3, scope: !9704)
!9758 = !DILocation(line: 292, column: 3, scope: !9704)
!9759 = !DILocation(line: 295, column: 3, scope: !9704)
!9760 = !DILocation(line: 299, column: 3, scope: !9704)
!9761 = !DILocation(line: 305, column: 3, scope: !9704)
!9762 = !DILocation(line: 307, column: 3, scope: !9704)
!9763 = !DILocation(line: 308, column: 1, scope: !9704)
!9764 = !DISubprogram(name: "HAL_InitTick", scope: !9765, file: !9765, line: 932, type: !9766, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!9765 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9766 = !DISubroutineType(types: !9767)
!9767 = !{!8445, !121}
!9768 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9705, file: !9705, line: 324, type: !9769, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !9793)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{!8445, !9771}
!9771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9772, size: 32)
!9772 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9773, line: 283, baseType: !9774)
!9773 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9773, line: 252, size: 416, elements: !9775)
!9775 = !{!9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785}
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9774, file: !9773, line: 254, baseType: !121, size: 32)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9774, file: !9773, line: 257, baseType: !121, size: 32, offset: 32)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9774, file: !9773, line: 260, baseType: !121, size: 32, offset: 64)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9774, file: !9773, line: 263, baseType: !121, size: 32, offset: 96)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9774, file: !9773, line: 266, baseType: !121, size: 32, offset: 128)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9774, file: !9773, line: 269, baseType: !121, size: 32, offset: 160)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !9774, file: !9773, line: 272, baseType: !121, size: 32, offset: 192)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !9774, file: !9773, line: 275, baseType: !121, size: 32, offset: 224)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !9774, file: !9773, line: 278, baseType: !121, size: 32, offset: 256)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9774, file: !9773, line: 281, baseType: !9786, size: 128, offset: 288)
!9786 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9773, line: 247, baseType: !9787)
!9787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9773, line: 234, size: 128, elements: !9788)
!9788 = !{!9789, !9790, !9791, !9792}
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9787, file: !9773, line: 236, baseType: !121, size: 32)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9787, file: !9773, line: 239, baseType: !121, size: 32, offset: 32)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !9787, file: !9773, line: 242, baseType: !121, size: 32, offset: 64)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !9787, file: !9773, line: 245, baseType: !121, size: 32, offset: 96)
!9793 = !{!9794, !9795, !9796, !9797, !9798, !9799, !9803}
!9794 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9768, file: !9705, line: 324, type: !9771)
!9795 = !DILocalVariable(name: "tickstart", scope: !9768, file: !9705, line: 326, type: !121)
!9796 = !DILocalVariable(name: "status", scope: !9768, file: !9705, line: 327, type: !8445)
!9797 = !DILocalVariable(name: "sysclk_source", scope: !9768, file: !9705, line: 328, type: !121)
!9798 = !DILocalVariable(name: "pll_config", scope: !9768, file: !9705, line: 328, type: !121)
!9799 = !DILocalVariable(name: "pwrclkchanged", scope: !9800, file: !9705, line: 613, type: !9802)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !9705, line: 612, column: 3)
!9801 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 611, column: 6)
!9802 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !732, line: 181, baseType: !2953)
!9803 = !DILocalVariable(name: "tmpreg", scope: !9804, file: !9705, line: 622, type: !120)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !9705, line: 622, column: 7)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !9705, line: 621, column: 5)
!9806 = distinct !DILexicalBlock(scope: !9800, file: !9705, line: 620, column: 8)
!9807 = !DILocation(line: 0, scope: !9768)
!9808 = !DILocation(line: 331, column: 24, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 331, column: 6)
!9810 = !DILocation(line: 331, column: 6, scope: !9768)
!9811 = !DILocation(line: 338, column: 19, scope: !9768)
!9812 = !DILocation(line: 339, column: 16, scope: !9768)
!9813 = !DILocation(line: 342, column: 27, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 342, column: 6)
!9815 = !DILocation(line: 342, column: 43, scope: !9814)
!9816 = !DILocation(line: 342, column: 69, scope: !9814)
!9817 = !DILocation(line: 342, column: 6, scope: !9768)
!9818 = !DILocation(line: 348, column: 23, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9820, file: !9705, line: 348, column: 8)
!9820 = distinct !DILexicalBlock(scope: !9814, file: !9705, line: 343, column: 3)
!9821 = !DILocation(line: 349, column: 8, scope: !9819)
!9822 = !DILocation(line: 349, column: 27, scope: !9819)
!9823 = !DILocation(line: 349, column: 62, scope: !9819)
!9824 = !DILocation(line: 351, column: 11, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !9705, line: 351, column: 10)
!9826 = distinct !DILexicalBlock(scope: !9819, file: !9705, line: 350, column: 5)
!9827 = !DILocation(line: 351, column: 47, scope: !9825)
!9828 = !DILocation(line: 351, column: 54, scope: !9825)
!9829 = !DILocation(line: 351, column: 77, scope: !9825)
!9830 = !DILocation(line: 351, column: 86, scope: !9825)
!9831 = !DILocation(line: 351, column: 10, scope: !9826)
!9832 = !DILocation(line: 359, column: 7, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !9705, line: 359, column: 7)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !9705, line: 359, column: 7)
!9835 = distinct !DILexicalBlock(scope: !9819, file: !9705, line: 357, column: 5)
!9836 = !DILocation(line: 359, column: 7, scope: !9834)
!9837 = !DILocation(line: 359, column: 7, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9833, file: !9705, line: 359, column: 7)
!9839 = !DILocation(line: 359, column: 7, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !9705, line: 359, column: 7)
!9841 = distinct !DILexicalBlock(scope: !9833, file: !9705, line: 359, column: 7)
!9842 = !DILocation(line: 359, column: 7, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !9705, line: 359, column: 7)
!9844 = distinct !DILexicalBlock(scope: !9841, file: !9705, line: 359, column: 7)
!9845 = !DILocation(line: 359, column: 7, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9844, file: !9705, line: 359, column: 7)
!9847 = !DILocation(line: 0, scope: !9833)
!9848 = !DILocation(line: 362, column: 29, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9835, file: !9705, line: 362, column: 10)
!9850 = !DILocation(line: 362, column: 38, scope: !9849)
!9851 = !DILocation(line: 0, scope: !9849)
!9852 = !DILocation(line: 362, column: 10, scope: !9835)
!9853 = !DILocation(line: 368, column: 15, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9849, file: !9705, line: 363, column: 7)
!9855 = !DILocation(line: 368, column: 51, scope: !9854)
!9856 = !DILocation(line: 368, column: 9, scope: !9854)
!9857 = !DILocation(line: 370, column: 15, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9859, file: !9705, line: 370, column: 14)
!9859 = distinct !DILexicalBlock(scope: !9854, file: !9705, line: 369, column: 9)
!9860 = !DILocation(line: 370, column: 29, scope: !9858)
!9861 = !DILocation(line: 370, column: 43, scope: !9858)
!9862 = !DILocation(line: 370, column: 14, scope: !9859)
!9863 = distinct !{!9863, !9856, !9864}
!9864 = !DILocation(line: 374, column: 9, scope: !9854)
!9865 = !DILocation(line: 382, column: 15, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9849, file: !9705, line: 377, column: 7)
!9867 = !DILocation(line: 382, column: 51, scope: !9866)
!9868 = !DILocation(line: 382, column: 9, scope: !9866)
!9869 = !DILocation(line: 384, column: 16, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !9705, line: 384, column: 15)
!9871 = distinct !DILexicalBlock(scope: !9866, file: !9705, line: 383, column: 9)
!9872 = !DILocation(line: 384, column: 30, scope: !9870)
!9873 = !DILocation(line: 384, column: 44, scope: !9870)
!9874 = !DILocation(line: 384, column: 15, scope: !9871)
!9875 = distinct !{!9875, !9868, !9876}
!9876 = !DILocation(line: 388, column: 9, scope: !9866)
!9877 = !DILocation(line: 393, column: 27, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 393, column: 6)
!9879 = !DILocation(line: 393, column: 43, scope: !9878)
!9880 = !DILocation(line: 393, column: 69, scope: !9878)
!9881 = !DILocation(line: 393, column: 6, scope: !9768)
!9882 = !DILocation(line: 400, column: 23, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9884, file: !9705, line: 400, column: 8)
!9884 = distinct !DILexicalBlock(scope: !9878, file: !9705, line: 394, column: 3)
!9885 = !DILocation(line: 401, column: 8, scope: !9883)
!9886 = !DILocation(line: 401, column: 27, scope: !9883)
!9887 = !DILocation(line: 401, column: 62, scope: !9883)
!9888 = !DILocation(line: 404, column: 11, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !9705, line: 404, column: 10)
!9890 = distinct !DILexicalBlock(scope: !9883, file: !9705, line: 402, column: 5)
!9891 = !DILocation(line: 404, column: 47, scope: !9889)
!9892 = !DILocation(line: 404, column: 54, scope: !9889)
!9893 = !DILocation(line: 404, column: 77, scope: !9889)
!9894 = !DILocation(line: 404, column: 86, scope: !9889)
!9895 = !DILocation(line: 404, column: 10, scope: !9890)
!9896 = !DILocation(line: 418, column: 29, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !9705, line: 418, column: 10)
!9898 = distinct !DILexicalBlock(scope: !9883, file: !9705, line: 416, column: 5)
!9899 = !DILocation(line: 418, column: 38, scope: !9897)
!9900 = !DILocation(line: 418, column: 10, scope: !9898)
!9901 = !DILocation(line: 421, column: 9, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9897, file: !9705, line: 419, column: 7)
!9903 = !DILocation(line: 424, column: 21, scope: !9902)
!9904 = !DILocation(line: 427, column: 9, scope: !9902)
!9905 = !DILocation(line: 427, column: 15, scope: !9902)
!9906 = !DILocation(line: 427, column: 51, scope: !9902)
!9907 = !DILocation(line: 429, column: 15, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !9705, line: 429, column: 14)
!9909 = distinct !DILexicalBlock(scope: !9902, file: !9705, line: 428, column: 9)
!9910 = !DILocation(line: 429, column: 29, scope: !9908)
!9911 = !DILocation(line: 429, column: 43, scope: !9908)
!9912 = !DILocation(line: 429, column: 14, scope: !9909)
!9913 = distinct !{!9913, !9904, !9914}
!9914 = !DILocation(line: 433, column: 9, scope: !9902)
!9915 = !DILocation(line: 441, column: 9, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9897, file: !9705, line: 439, column: 7)
!9917 = !DILocation(line: 444, column: 21, scope: !9916)
!9918 = !DILocation(line: 447, column: 9, scope: !9916)
!9919 = !DILocation(line: 447, column: 15, scope: !9916)
!9920 = !DILocation(line: 447, column: 51, scope: !9916)
!9921 = !DILocation(line: 449, column: 15, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !9705, line: 449, column: 14)
!9923 = distinct !DILexicalBlock(scope: !9916, file: !9705, line: 448, column: 9)
!9924 = !DILocation(line: 449, column: 29, scope: !9922)
!9925 = !DILocation(line: 449, column: 43, scope: !9922)
!9926 = !DILocation(line: 449, column: 14, scope: !9923)
!9927 = distinct !{!9927, !9918, !9928}
!9928 = !DILocation(line: 453, column: 9, scope: !9916)
!9929 = !DILocation(line: 0, scope: !9883)
!9930 = !DILocation(line: 458, column: 27, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 458, column: 6)
!9932 = !DILocation(line: 458, column: 43, scope: !9931)
!9933 = !DILocation(line: 458, column: 69, scope: !9931)
!9934 = !DILocation(line: 458, column: 6, scope: !9768)
!9935 = !DILocation(line: 461, column: 22, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !9705, line: 461, column: 8)
!9937 = distinct !DILexicalBlock(scope: !9931, file: !9705, line: 459, column: 3)
!9938 = !DILocation(line: 461, column: 8, scope: !9937)
!9939 = !DILocation(line: 463, column: 11, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !9705, line: 463, column: 10)
!9941 = distinct !DILexicalBlock(scope: !9936, file: !9705, line: 462, column: 5)
!9942 = !DILocation(line: 463, column: 47, scope: !9940)
!9943 = !DILocation(line: 463, column: 54, scope: !9940)
!9944 = !DILocation(line: 463, column: 77, scope: !9940)
!9945 = !DILocation(line: 463, column: 86, scope: !9940)
!9946 = !DILocation(line: 463, column: 10, scope: !9941)
!9947 = !DILocation(line: 477, column: 31, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !9705, line: 477, column: 12)
!9949 = distinct !DILexicalBlock(scope: !9940, file: !9705, line: 469, column: 7)
!9950 = !DILocation(line: 477, column: 47, scope: !9948)
!9951 = !DILocation(line: 477, column: 45, scope: !9948)
!9952 = !DILocation(line: 477, column: 12, scope: !9949)
!9953 = !DILocation(line: 480, column: 14, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9955, file: !9705, line: 480, column: 14)
!9955 = distinct !DILexicalBlock(scope: !9948, file: !9705, line: 478, column: 9)
!9956 = !DILocation(line: 480, column: 80, scope: !9954)
!9957 = !DILocation(line: 480, column: 14, scope: !9955)
!9958 = !DILocation(line: 486, column: 11, scope: !9955)
!9959 = !DILocation(line: 488, column: 11, scope: !9955)
!9960 = !DILocation(line: 489, column: 9, scope: !9955)
!9961 = !DILocation(line: 494, column: 11, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9948, file: !9705, line: 491, column: 9)
!9963 = !DILocation(line: 496, column: 11, scope: !9962)
!9964 = !DILocation(line: 499, column: 65, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9962, file: !9705, line: 499, column: 14)
!9966 = !DILocation(line: 499, column: 14, scope: !9965)
!9967 = !DILocation(line: 499, column: 80, scope: !9965)
!9968 = !DILocation(line: 499, column: 14, scope: !9962)
!9969 = !DILocation(line: 506, column: 67, scope: !9949)
!9970 = !DILocation(line: 506, column: 81, scope: !9949)
!9971 = !DILocation(line: 506, column: 36, scope: !9949)
!9972 = !DILocation(line: 507, column: 52, scope: !9949)
!9973 = !DILocation(line: 507, column: 74, scope: !9949)
!9974 = !DILocation(line: 507, column: 31, scope: !9949)
!9975 = !DILocation(line: 507, column: 28, scope: !9949)
!9976 = !DILocation(line: 506, column: 25, scope: !9949)
!9977 = !DILocation(line: 510, column: 31, scope: !9949)
!9978 = !DILocation(line: 510, column: 18, scope: !9949)
!9979 = !DILocation(line: 511, column: 19, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9949, file: !9705, line: 511, column: 12)
!9981 = !DILocation(line: 511, column: 12, scope: !9949)
!9982 = !DILocation(line: 523, column: 29, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !9705, line: 523, column: 10)
!9984 = distinct !DILexicalBlock(scope: !9936, file: !9705, line: 518, column: 5)
!9985 = !DILocation(line: 523, column: 38, scope: !9983)
!9986 = !DILocation(line: 523, column: 10, scope: !9984)
!9987 = !DILocation(line: 526, column: 9, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9983, file: !9705, line: 524, column: 7)
!9989 = !DILocation(line: 529, column: 21, scope: !9988)
!9990 = !DILocation(line: 532, column: 9, scope: !9988)
!9991 = !DILocation(line: 532, column: 15, scope: !9988)
!9992 = !DILocation(line: 532, column: 51, scope: !9988)
!9993 = !DILocation(line: 534, column: 15, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !9705, line: 534, column: 14)
!9995 = distinct !DILexicalBlock(scope: !9988, file: !9705, line: 533, column: 9)
!9996 = !DILocation(line: 534, column: 29, scope: !9994)
!9997 = !DILocation(line: 534, column: 42, scope: !9994)
!9998 = !DILocation(line: 534, column: 14, scope: !9995)
!9999 = distinct !{!9999, !9990, !10000}
!10000 = !DILocation(line: 538, column: 9, scope: !9988)
!10001 = !DILocation(line: 544, column: 9, scope: !9988)
!10002 = !DILocation(line: 546, column: 9, scope: !9988)
!10003 = !DILocation(line: 548, column: 7, scope: !9988)
!10004 = !DILocation(line: 552, column: 9, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9983, file: !9705, line: 550, column: 7)
!10006 = !DILocation(line: 555, column: 21, scope: !10005)
!10007 = !DILocation(line: 558, column: 9, scope: !10005)
!10008 = !DILocation(line: 558, column: 15, scope: !10005)
!10009 = !DILocation(line: 558, column: 51, scope: !10005)
!10010 = !DILocation(line: 560, column: 15, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10012, file: !9705, line: 560, column: 14)
!10012 = distinct !DILexicalBlock(scope: !10005, file: !9705, line: 559, column: 9)
!10013 = !DILocation(line: 560, column: 29, scope: !10011)
!10014 = !DILocation(line: 560, column: 42, scope: !10011)
!10015 = !DILocation(line: 560, column: 14, scope: !10012)
!10016 = distinct !{!10016, !10007, !10017}
!10017 = !DILocation(line: 564, column: 9, scope: !10005)
!10018 = !DILocation(line: 569, column: 27, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 569, column: 6)
!10020 = !DILocation(line: 569, column: 43, scope: !10019)
!10021 = !DILocation(line: 569, column: 69, scope: !10019)
!10022 = !DILocation(line: 569, column: 6, scope: !9768)
!10023 = !DILocation(line: 575, column: 27, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !9705, line: 575, column: 8)
!10025 = distinct !DILexicalBlock(scope: !10019, file: !9705, line: 570, column: 3)
!10026 = !DILocation(line: 575, column: 36, scope: !10024)
!10027 = !DILocation(line: 575, column: 8, scope: !10025)
!10028 = !DILocation(line: 578, column: 7, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10024, file: !9705, line: 576, column: 5)
!10030 = !DILocation(line: 581, column: 19, scope: !10029)
!10031 = !DILocation(line: 584, column: 7, scope: !10029)
!10032 = !DILocation(line: 584, column: 13, scope: !10029)
!10033 = !DILocation(line: 584, column: 49, scope: !10029)
!10034 = !DILocation(line: 586, column: 13, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !9705, line: 586, column: 12)
!10036 = distinct !DILexicalBlock(scope: !10029, file: !9705, line: 585, column: 7)
!10037 = !DILocation(line: 586, column: 27, scope: !10035)
!10038 = !DILocation(line: 586, column: 41, scope: !10035)
!10039 = !DILocation(line: 586, column: 12, scope: !10036)
!10040 = distinct !{!10040, !10031, !10041}
!10041 = !DILocation(line: 590, column: 7, scope: !10029)
!10042 = !DILocation(line: 595, column: 7, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10024, file: !9705, line: 593, column: 5)
!10044 = !DILocation(line: 598, column: 19, scope: !10043)
!10045 = !DILocation(line: 601, column: 7, scope: !10043)
!10046 = !DILocation(line: 601, column: 13, scope: !10043)
!10047 = !DILocation(line: 601, column: 49, scope: !10043)
!10048 = !DILocation(line: 603, column: 13, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !9705, line: 603, column: 12)
!10050 = distinct !DILexicalBlock(scope: !10043, file: !9705, line: 602, column: 7)
!10051 = !DILocation(line: 603, column: 27, scope: !10049)
!10052 = !DILocation(line: 603, column: 41, scope: !10049)
!10053 = !DILocation(line: 603, column: 12, scope: !10050)
!10054 = distinct !{!10054, !10045, !10055}
!10055 = !DILocation(line: 607, column: 7, scope: !10043)
!10056 = !DILocation(line: 611, column: 27, scope: !9801)
!10057 = !DILocation(line: 611, column: 43, scope: !9801)
!10058 = !DILocation(line: 611, column: 69, scope: !9801)
!10059 = !DILocation(line: 611, column: 6, scope: !9768)
!10060 = !DILocation(line: 0, scope: !9800)
!10061 = !DILocation(line: 620, column: 8, scope: !9806)
!10062 = !DILocation(line: 620, column: 8, scope: !9800)
!10063 = !DILocation(line: 622, column: 7, scope: !9804)
!10064 = !DILocation(line: 622, column: 7, scope: !9805)
!10065 = !DILocation(line: 624, column: 5, scope: !9805)
!10066 = !DILocation(line: 626, column: 8, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !9800, file: !9705, line: 626, column: 8)
!10068 = !DILocation(line: 626, column: 8, scope: !9800)
!10069 = !DILocation(line: 629, column: 7, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10067, file: !9705, line: 627, column: 5)
!10071 = !DILocation(line: 632, column: 19, scope: !10070)
!10072 = !DILocation(line: 634, column: 7, scope: !10070)
!10073 = !DILocation(line: 634, column: 13, scope: !10070)
!10074 = !DILocation(line: 636, column: 13, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10076, file: !9705, line: 636, column: 12)
!10076 = distinct !DILexicalBlock(scope: !10070, file: !9705, line: 635, column: 7)
!10077 = !DILocation(line: 636, column: 27, scope: !10075)
!10078 = !DILocation(line: 636, column: 40, scope: !10075)
!10079 = !DILocation(line: 636, column: 12, scope: !10076)
!10080 = distinct !{!10080, !10072, !10081}
!10081 = !DILocation(line: 640, column: 7, scope: !10070)
!10082 = !DILocation(line: 644, column: 5, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10084, file: !9705, line: 644, column: 5)
!10084 = distinct !DILexicalBlock(scope: !9800, file: !9705, line: 644, column: 5)
!10085 = !DILocation(line: 644, column: 5, scope: !10084)
!10086 = !DILocation(line: 644, column: 5, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !9705, line: 644, column: 5)
!10088 = !DILocation(line: 644, column: 5, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !9705, line: 644, column: 5)
!10090 = distinct !DILexicalBlock(scope: !10083, file: !9705, line: 644, column: 5)
!10091 = !DILocation(line: 644, column: 5, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !9705, line: 644, column: 5)
!10093 = distinct !DILexicalBlock(scope: !10090, file: !9705, line: 644, column: 5)
!10094 = !DILocation(line: 644, column: 5, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10093, file: !9705, line: 644, column: 5)
!10096 = !DILocation(line: 0, scope: !10083)
!10097 = !DILocation(line: 646, column: 27, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !9800, file: !9705, line: 646, column: 8)
!10099 = !DILocation(line: 646, column: 36, scope: !10098)
!10100 = !DILocation(line: 0, scope: !10098)
!10101 = !DILocation(line: 646, column: 8, scope: !9800)
!10102 = !DILocation(line: 652, column: 13, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10098, file: !9705, line: 647, column: 5)
!10104 = !DILocation(line: 652, column: 49, scope: !10103)
!10105 = !DILocation(line: 652, column: 7, scope: !10103)
!10106 = !DILocation(line: 654, column: 13, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10108, file: !9705, line: 654, column: 12)
!10108 = distinct !DILexicalBlock(scope: !10103, file: !9705, line: 653, column: 7)
!10109 = !DILocation(line: 654, column: 27, scope: !10107)
!10110 = !DILocation(line: 654, column: 41, scope: !10107)
!10111 = !DILocation(line: 654, column: 12, scope: !10108)
!10112 = distinct !{!10112, !10105, !10113}
!10113 = !DILocation(line: 658, column: 7, scope: !10103)
!10114 = !DILocation(line: 666, column: 13, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10098, file: !9705, line: 661, column: 5)
!10116 = !DILocation(line: 666, column: 49, scope: !10115)
!10117 = !DILocation(line: 666, column: 7, scope: !10115)
!10118 = !DILocation(line: 668, column: 13, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !9705, line: 668, column: 12)
!10120 = distinct !DILexicalBlock(scope: !10115, file: !9705, line: 667, column: 7)
!10121 = !DILocation(line: 668, column: 27, scope: !10119)
!10122 = !DILocation(line: 668, column: 41, scope: !10119)
!10123 = !DILocation(line: 668, column: 12, scope: !10120)
!10124 = distinct !{!10124, !10117, !10125}
!10125 = !DILocation(line: 672, column: 7, scope: !10115)
!10126 = !DILocation(line: 676, column: 8, scope: !9800)
!10127 = !DILocation(line: 678, column: 7, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !9705, line: 677, column: 5)
!10129 = distinct !DILexicalBlock(scope: !9800, file: !9705, line: 676, column: 8)
!10130 = !DILocation(line: 679, column: 5, scope: !10128)
!10131 = !DILocation(line: 685, column: 31, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !9768, file: !9705, line: 685, column: 7)
!10133 = !DILocation(line: 685, column: 41, scope: !10132)
!10134 = !DILocation(line: 685, column: 7, scope: !9768)
!10135 = !DILocation(line: 688, column: 22, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !9705, line: 688, column: 8)
!10137 = distinct !DILexicalBlock(scope: !10132, file: !9705, line: 686, column: 3)
!10138 = !DILocation(line: 688, column: 8, scope: !10137)
!10139 = !DILocation(line: 690, column: 44, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !9705, line: 690, column: 10)
!10141 = distinct !DILexicalBlock(scope: !10136, file: !9705, line: 689, column: 5)
!10142 = !DILocation(line: 0, scope: !10140)
!10143 = !DILocation(line: 690, column: 10, scope: !10141)
!10144 = !DILocation(line: 704, column: 15, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10140, file: !9705, line: 691, column: 7)
!10146 = !DILocation(line: 704, column: 51, scope: !10145)
!10147 = !DILocation(line: 704, column: 9, scope: !10145)
!10148 = !DILocation(line: 706, column: 15, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !9705, line: 706, column: 14)
!10150 = distinct !DILexicalBlock(scope: !10145, file: !9705, line: 705, column: 9)
!10151 = !DILocation(line: 706, column: 29, scope: !10149)
!10152 = !DILocation(line: 706, column: 43, scope: !10149)
!10153 = !DILocation(line: 706, column: 14, scope: !10150)
!10154 = distinct !{!10154, !10147, !10155}
!10155 = !DILocation(line: 710, column: 9, scope: !10145)
!10156 = !DILocation(line: 713, column: 9, scope: !10145)
!10157 = !DILocation(line: 717, column: 9, scope: !10145)
!10158 = !DILocation(line: 720, column: 21, scope: !10145)
!10159 = !DILocation(line: 723, column: 9, scope: !10145)
!10160 = !DILocation(line: 723, column: 15, scope: !10145)
!10161 = !DILocation(line: 723, column: 51, scope: !10145)
!10162 = !DILocation(line: 725, column: 15, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !9705, line: 725, column: 14)
!10164 = distinct !DILexicalBlock(scope: !10145, file: !9705, line: 724, column: 9)
!10165 = !DILocation(line: 725, column: 29, scope: !10163)
!10166 = !DILocation(line: 725, column: 43, scope: !10163)
!10167 = !DILocation(line: 725, column: 14, scope: !10164)
!10168 = distinct !{!10168, !10159, !10169}
!10169 = !DILocation(line: 729, column: 9, scope: !10145)
!10170 = !DILocation(line: 740, column: 15, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10140, file: !9705, line: 732, column: 7)
!10172 = !DILocation(line: 740, column: 51, scope: !10171)
!10173 = !DILocation(line: 740, column: 9, scope: !10171)
!10174 = !DILocation(line: 742, column: 15, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10176, file: !9705, line: 742, column: 14)
!10176 = distinct !DILexicalBlock(scope: !10171, file: !9705, line: 741, column: 9)
!10177 = !DILocation(line: 742, column: 29, scope: !10175)
!10178 = !DILocation(line: 742, column: 43, scope: !10175)
!10179 = !DILocation(line: 742, column: 14, scope: !10176)
!10180 = distinct !{!10180, !10173, !10181}
!10181 = !DILocation(line: 746, column: 9, scope: !10171)
!10182 = !DILocation(line: 752, column: 44, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !9705, line: 752, column: 10)
!10184 = distinct !DILexicalBlock(scope: !10136, file: !9705, line: 750, column: 5)
!10185 = !DILocation(line: 752, column: 10, scope: !10184)
!10186 = !DILocation(line: 759, column: 27, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10183, file: !9705, line: 757, column: 7)
!10188 = !DILocation(line: 760, column: 13, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10187, file: !9705, line: 760, column: 12)
!10190 = !DILocation(line: 760, column: 77, scope: !10189)
!10191 = !DILocation(line: 760, column: 51, scope: !10189)
!10192 = !DILocation(line: 760, column: 88, scope: !10189)
!10193 = !DILocation(line: 761, column: 13, scope: !10189)
!10194 = !DILocation(line: 761, column: 77, scope: !10189)
!10195 = !DILocation(line: 761, column: 51, scope: !10189)
!10196 = !DILocation(line: 761, column: 85, scope: !10189)
!10197 = !DILocation(line: 762, column: 13, scope: !10189)
!10198 = !DILocation(line: 762, column: 77, scope: !10189)
!10199 = !DILocation(line: 762, column: 51, scope: !10189)
!10200 = !DILocation(line: 760, column: 12, scope: !10187)
!10201 = !DILocation(line: 770, column: 3, scope: !9768)
!10202 = !DILocation(line: 771, column: 1, scope: !9768)
!10203 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !9705, file: !9705, line: 1343, type: !9766, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !10204)
!10204 = !{!10205, !10206, !10207, !10208}
!10205 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !10203, file: !9705, line: 1343, type: !121)
!10206 = !DILocalVariable(name: "vos", scope: !10203, file: !9705, line: 1345, type: !121)
!10207 = !DILocalVariable(name: "latency", scope: !10203, file: !9705, line: 1346, type: !121)
!10208 = !DILocalVariable(name: "tmpreg", scope: !10209, file: !9705, line: 1357, type: !120)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !9705, line: 1357, column: 7)
!10210 = distinct !DILexicalBlock(scope: !10211, file: !9705, line: 1356, column: 5)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !9705, line: 1351, column: 8)
!10212 = distinct !DILexicalBlock(scope: !10213, file: !9705, line: 1350, column: 3)
!10213 = distinct !DILexicalBlock(scope: !10203, file: !9705, line: 1349, column: 7)
!10214 = !DILocation(line: 0, scope: !10203)
!10215 = !DILocation(line: 1349, column: 7, scope: !10213)
!10216 = !DILocation(line: 1349, column: 42, scope: !10213)
!10217 = !DILocation(line: 1349, column: 7, scope: !10203)
!10218 = !DILocation(line: 1351, column: 8, scope: !10211)
!10219 = !DILocation(line: 1351, column: 8, scope: !10212)
!10220 = !DILocation(line: 1353, column: 13, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10211, file: !9705, line: 1352, column: 5)
!10222 = !DILocation(line: 1354, column: 5, scope: !10221)
!10223 = !DILocation(line: 1357, column: 7, scope: !10209)
!10224 = !DILocation(line: 1357, column: 7, scope: !10210)
!10225 = !DILocation(line: 1358, column: 13, scope: !10210)
!10226 = !DILocation(line: 1359, column: 7, scope: !10210)
!10227 = !DILocation(line: 0, scope: !10211)
!10228 = !DILocation(line: 1363, column: 13, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10212, file: !9705, line: 1363, column: 8)
!10230 = !DILocation(line: 1363, column: 46, scope: !10229)
!10231 = !DILocation(line: 1369, column: 3, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10203, file: !9705, line: 1369, column: 3)
!10233 = !DILocation(line: 1369, column: 3, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !9705, line: 1369, column: 3)
!10235 = distinct !DILexicalBlock(scope: !10232, file: !9705, line: 1369, column: 3)
!10236 = !DILocation(line: 1373, column: 6, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10203, file: !9705, line: 1373, column: 6)
!10238 = !DILocation(line: 1379, column: 1, scope: !10203)
!10239 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9705, file: !9705, line: 799, type: !10240, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !10251)
!10240 = !DISubroutineType(types: !10241)
!10241 = !{!8445, !10242, !121}
!10242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10243, size: 32)
!10243 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9773, line: 304, baseType: !10244)
!10244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9773, line: 288, size: 160, elements: !10245)
!10245 = !{!10246, !10247, !10248, !10249, !10250}
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10244, file: !9773, line: 290, baseType: !121, size: 32)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10244, file: !9773, line: 293, baseType: !121, size: 32, offset: 32)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10244, file: !9773, line: 296, baseType: !121, size: 32, offset: 64)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10244, file: !9773, line: 299, baseType: !121, size: 32, offset: 96)
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10244, file: !9773, line: 302, baseType: !121, size: 32, offset: 128)
!10251 = !{!10252, !10253, !10254, !10255}
!10252 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10239, file: !9705, line: 799, type: !10242)
!10253 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10239, file: !9705, line: 799, type: !121)
!10254 = !DILocalVariable(name: "tickstart", scope: !10239, file: !9705, line: 801, type: !121)
!10255 = !DILocalVariable(name: "status", scope: !10239, file: !9705, line: 802, type: !8445)
!10256 = !DILocation(line: 0, scope: !10239)
!10257 = !DILocation(line: 805, column: 24, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 805, column: 6)
!10259 = !DILocation(line: 805, column: 6, scope: !10239)
!10260 = !DILocation(line: 817, column: 17, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 817, column: 6)
!10262 = !DILocation(line: 817, column: 15, scope: !10261)
!10263 = !DILocation(line: 817, column: 6, scope: !10239)
!10264 = !DILocation(line: 820, column: 5, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10266, file: !9705, line: 820, column: 5)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !9705, line: 820, column: 5)
!10267 = distinct !DILexicalBlock(scope: !10261, file: !9705, line: 818, column: 3)
!10268 = !DILocation(line: 820, column: 5, scope: !10266)
!10269 = !DILocation(line: 820, column: 5, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10265, file: !9705, line: 820, column: 5)
!10271 = !DILocation(line: 824, column: 8, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10267, file: !9705, line: 824, column: 8)
!10273 = !DILocation(line: 824, column: 34, scope: !10272)
!10274 = !DILocation(line: 824, column: 8, scope: !10267)
!10275 = !DILocation(line: 831, column: 27, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 831, column: 6)
!10277 = !DILocation(line: 831, column: 38, scope: !10276)
!10278 = !DILocation(line: 831, column: 60, scope: !10276)
!10279 = !DILocation(line: 831, column: 6, scope: !10239)
!10280 = !DILocation(line: 834, column: 5, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10276, file: !9705, line: 832, column: 3)
!10282 = !DILocation(line: 838, column: 27, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 838, column: 6)
!10284 = !DILocation(line: 835, column: 3, scope: !10281)
!10285 = !DILocation(line: 838, column: 38, scope: !10283)
!10286 = !DILocation(line: 838, column: 62, scope: !10283)
!10287 = !DILocation(line: 838, column: 6, scope: !10239)
!10288 = !DILocation(line: 843, column: 27, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !9705, line: 843, column: 8)
!10290 = distinct !DILexicalBlock(scope: !10283, file: !9705, line: 839, column: 3)
!10291 = !DILocation(line: 843, column: 8, scope: !10290)
!10292 = !DILocation(line: 846, column: 10, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !9705, line: 846, column: 10)
!10294 = distinct !DILexicalBlock(scope: !10289, file: !9705, line: 844, column: 5)
!10295 = !DILocation(line: 846, column: 46, scope: !10293)
!10296 = !DILocation(line: 846, column: 10, scope: !10294)
!10297 = !DILocation(line: 855, column: 10, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10299, file: !9705, line: 855, column: 10)
!10299 = distinct !DILexicalBlock(scope: !10300, file: !9705, line: 853, column: 5)
!10300 = distinct !DILexicalBlock(scope: !10289, file: !9705, line: 852, column: 13)
!10301 = !DILocation(line: 855, column: 46, scope: !10298)
!10302 = !DILocation(line: 855, column: 10, scope: !10299)
!10303 = !DILocation(line: 864, column: 10, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !9705, line: 864, column: 10)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !9705, line: 862, column: 5)
!10306 = distinct !DILexicalBlock(scope: !10300, file: !9705, line: 861, column: 13)
!10307 = !DILocation(line: 864, column: 46, scope: !10304)
!10308 = !DILocation(line: 864, column: 10, scope: !10305)
!10309 = !DILocation(line: 873, column: 10, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !9705, line: 873, column: 10)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !9705, line: 871, column: 5)
!10312 = !DILocation(line: 873, column: 46, scope: !10310)
!10313 = !DILocation(line: 873, column: 10, scope: !10311)
!10314 = !DILocation(line: 878, column: 5, scope: !10290)
!10315 = !DILocation(line: 881, column: 17, scope: !10290)
!10316 = !DILocation(line: 883, column: 27, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10290, file: !9705, line: 883, column: 8)
!10318 = !DILocation(line: 883, column: 8, scope: !10290)
!10319 = !DILocation(line: 885, column: 14, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10317, file: !9705, line: 884, column: 5)
!10321 = !DILocation(line: 885, column: 44, scope: !10320)
!10322 = !DILocation(line: 885, column: 7, scope: !10320)
!10323 = !DILocation(line: 887, column: 13, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !9705, line: 887, column: 12)
!10325 = distinct !DILexicalBlock(scope: !10320, file: !9705, line: 886, column: 7)
!10326 = !DILocation(line: 887, column: 27, scope: !10324)
!10327 = !DILocation(line: 887, column: 41, scope: !10324)
!10328 = !DILocation(line: 887, column: 12, scope: !10325)
!10329 = distinct !{!10329, !10322, !10330}
!10330 = !DILocation(line: 891, column: 7, scope: !10320)
!10331 = !DILocation(line: 895, column: 14, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !9705, line: 894, column: 5)
!10333 = distinct !DILexicalBlock(scope: !10317, file: !9705, line: 893, column: 13)
!10334 = !DILocation(line: 895, column: 44, scope: !10332)
!10335 = !DILocation(line: 895, column: 7, scope: !10332)
!10336 = !DILocation(line: 897, column: 13, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !9705, line: 897, column: 12)
!10338 = distinct !DILexicalBlock(scope: !10332, file: !9705, line: 896, column: 7)
!10339 = !DILocation(line: 897, column: 27, scope: !10337)
!10340 = !DILocation(line: 897, column: 41, scope: !10337)
!10341 = !DILocation(line: 897, column: 12, scope: !10338)
!10342 = distinct !{!10342, !10335, !10343}
!10343 = !DILocation(line: 901, column: 7, scope: !10332)
!10344 = !DILocation(line: 905, column: 14, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !9705, line: 904, column: 5)
!10346 = distinct !DILexicalBlock(scope: !10333, file: !9705, line: 903, column: 13)
!10347 = !DILocation(line: 905, column: 44, scope: !10345)
!10348 = !DILocation(line: 905, column: 7, scope: !10345)
!10349 = !DILocation(line: 907, column: 13, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !9705, line: 907, column: 12)
!10351 = distinct !DILexicalBlock(scope: !10345, file: !9705, line: 906, column: 7)
!10352 = !DILocation(line: 907, column: 27, scope: !10350)
!10353 = !DILocation(line: 907, column: 41, scope: !10350)
!10354 = !DILocation(line: 907, column: 12, scope: !10351)
!10355 = distinct !{!10355, !10348, !10356}
!10356 = !DILocation(line: 911, column: 7, scope: !10345)
!10357 = !DILocation(line: 915, column: 13, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10346, file: !9705, line: 914, column: 5)
!10359 = !DILocation(line: 915, column: 43, scope: !10358)
!10360 = !DILocation(line: 915, column: 7, scope: !10358)
!10361 = !DILocation(line: 917, column: 13, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !9705, line: 917, column: 12)
!10363 = distinct !DILexicalBlock(scope: !10358, file: !9705, line: 916, column: 7)
!10364 = !DILocation(line: 917, column: 27, scope: !10362)
!10365 = !DILocation(line: 917, column: 41, scope: !10362)
!10366 = !DILocation(line: 917, column: 12, scope: !10363)
!10367 = distinct !{!10367, !10360, !10368}
!10368 = !DILocation(line: 921, column: 7, scope: !10358)
!10369 = !DILocation(line: 925, column: 17, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 925, column: 6)
!10371 = !DILocation(line: 925, column: 15, scope: !10370)
!10372 = !DILocation(line: 925, column: 6, scope: !10239)
!10373 = !DILocation(line: 928, column: 5, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !9705, line: 928, column: 5)
!10375 = distinct !DILexicalBlock(scope: !10370, file: !9705, line: 926, column: 3)
!10376 = !DILocation(line: 932, column: 8, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10375, file: !9705, line: 932, column: 8)
!10378 = !DILocation(line: 932, column: 34, scope: !10377)
!10379 = !DILocation(line: 932, column: 8, scope: !10375)
!10380 = !DILocation(line: 939, column: 27, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 939, column: 6)
!10382 = !DILocation(line: 939, column: 38, scope: !10381)
!10383 = !DILocation(line: 939, column: 61, scope: !10381)
!10384 = !DILocation(line: 939, column: 6, scope: !10239)
!10385 = !DILocation(line: 942, column: 5, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10381, file: !9705, line: 940, column: 3)
!10387 = !DILocation(line: 946, column: 27, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10239, file: !9705, line: 946, column: 6)
!10389 = !DILocation(line: 943, column: 3, scope: !10386)
!10390 = !DILocation(line: 946, column: 38, scope: !10388)
!10391 = !DILocation(line: 946, column: 61, scope: !10388)
!10392 = !DILocation(line: 946, column: 6, scope: !10239)
!10393 = !DILocation(line: 949, column: 5, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10388, file: !9705, line: 947, column: 3)
!10395 = !DILocation(line: 950, column: 3, scope: !10394)
!10396 = !DILocation(line: 953, column: 21, scope: !10239)
!10397 = !DILocation(line: 953, column: 70, scope: !10239)
!10398 = !DILocation(line: 953, column: 91, scope: !10239)
!10399 = !DILocation(line: 953, column: 50, scope: !10239)
!10400 = !DILocation(line: 953, column: 47, scope: !10239)
!10401 = !DILocation(line: 953, column: 19, scope: !10239)
!10402 = !DILocation(line: 956, column: 25, scope: !10239)
!10403 = !DILocation(line: 956, column: 12, scope: !10239)
!10404 = !DILocation(line: 958, column: 3, scope: !10239)
!10405 = !DILocation(line: 959, column: 1, scope: !10239)
!10406 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9705, file: !9705, line: 1083, type: !5097, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !10407)
!10407 = !{!10408, !10409, !10410, !10411, !10412, !10413}
!10408 = !DILocalVariable(name: "tmpreg", scope: !10406, file: !9705, line: 1085, type: !121)
!10409 = !DILocalVariable(name: "pllm", scope: !10406, file: !9705, line: 1085, type: !121)
!10410 = !DILocalVariable(name: "plld", scope: !10406, file: !9705, line: 1085, type: !121)
!10411 = !DILocalVariable(name: "pllvco", scope: !10406, file: !9705, line: 1085, type: !121)
!10412 = !DILocalVariable(name: "msiclkrange", scope: !10406, file: !9705, line: 1085, type: !121)
!10413 = !DILocalVariable(name: "sysclockfreq", scope: !10406, file: !9705, line: 1085, type: !121)
!10414 = !DILocation(line: 1087, column: 17, scope: !10406)
!10415 = !DILocation(line: 0, scope: !10406)
!10416 = !DILocation(line: 1090, column: 3, scope: !10406)
!10417 = !DILocation(line: 1100, column: 7, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !9705, line: 1098, column: 5)
!10419 = distinct !DILexicalBlock(scope: !10406, file: !9705, line: 1091, column: 3)
!10420 = !DILocation(line: 1104, column: 63, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10419, file: !9705, line: 1103, column: 5)
!10422 = !DILocation(line: 1104, column: 14, scope: !10421)
!10423 = !DILocation(line: 1105, column: 52, scope: !10421)
!10424 = !DILocation(line: 1105, column: 76, scope: !10421)
!10425 = !DILocation(line: 1106, column: 11, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10421, file: !9705, line: 1106, column: 11)
!10427 = !DILocation(line: 1106, column: 41, scope: !10426)
!10428 = !DILocation(line: 1106, column: 11, scope: !10421)
!10429 = !DILocation(line: 0, scope: !10426)
!10430 = !DILocation(line: 1117, column: 7, scope: !10421)
!10431 = !DILocation(line: 1122, column: 27, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10419, file: !9705, line: 1121, column: 5)
!10433 = !DILocation(line: 1122, column: 56, scope: !10432)
!10434 = !DILocation(line: 1123, column: 30, scope: !10432)
!10435 = !DILocation(line: 1124, column: 7, scope: !10432)
!10436 = !DILocation(line: 0, scope: !10419)
!10437 = !DILocation(line: 1127, column: 3, scope: !10406)
!10438 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9705, file: !9705, line: 1005, type: !7505, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !10439)
!10439 = !{!10440, !10441, !10442, !10443, !10453}
!10440 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !10438, file: !9705, line: 1005, type: !121)
!10441 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !10438, file: !9705, line: 1005, type: !121)
!10442 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !10438, file: !9705, line: 1005, type: !121)
!10443 = !DILocalVariable(name: "gpio", scope: !10438, file: !9705, line: 1007, type: !10444)
!10444 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !10445, line: 64, baseType: !10446)
!10445 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10445, line: 48, size: 160, elements: !10447)
!10447 = !{!10448, !10449, !10450, !10451, !10452}
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !10446, file: !10445, line: 50, baseType: !121, size: 32)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !10446, file: !10445, line: 53, baseType: !121, size: 32, offset: 32)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !10446, file: !10445, line: 56, baseType: !121, size: 32, offset: 64)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !10446, file: !10445, line: 59, baseType: !121, size: 32, offset: 96)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !10446, file: !10445, line: 62, baseType: !121, size: 32, offset: 128)
!10453 = !DILocalVariable(name: "tmpreg", scope: !10454, file: !9705, line: 1022, type: !120)
!10454 = distinct !DILexicalBlock(scope: !10438, file: !9705, line: 1022, column: 3)
!10455 = !DILocation(line: 0, scope: !10438)
!10456 = !DILocation(line: 1007, column: 3, scope: !10438)
!10457 = !DILocation(line: 1007, column: 20, scope: !10438)
!10458 = !DILocation(line: 1015, column: 8, scope: !10438)
!10459 = !DILocation(line: 1015, column: 18, scope: !10438)
!10460 = !DILocation(line: 1016, column: 8, scope: !10438)
!10461 = !DILocation(line: 1016, column: 18, scope: !10438)
!10462 = !DILocation(line: 1017, column: 8, scope: !10438)
!10463 = !DILocation(line: 1017, column: 18, scope: !10438)
!10464 = !DILocation(line: 1018, column: 8, scope: !10438)
!10465 = !DILocation(line: 1018, column: 18, scope: !10438)
!10466 = !DILocation(line: 1019, column: 8, scope: !10438)
!10467 = !DILocation(line: 1019, column: 18, scope: !10438)
!10468 = !DILocation(line: 1022, column: 3, scope: !10454)
!10469 = !DILocation(line: 1022, column: 3, scope: !10438)
!10470 = !DILocation(line: 1024, column: 3, scope: !10438)
!10471 = !DILocation(line: 1027, column: 3, scope: !10438)
!10472 = !DILocation(line: 1028, column: 1, scope: !10438)
!10473 = !DISubprogram(name: "HAL_GPIO_Init", scope: !10445, file: !10445, line: 293, type: !10474, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{null, !2995, !10476}
!10476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10444, size: 32)
!10477 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9705, file: !9705, line: 1039, type: !3124, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10478 = !DILocation(line: 1041, column: 38, scope: !10477)
!10479 = !DILocation(line: 1042, column: 1, scope: !10477)
!10480 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9705, file: !9705, line: 1048, type: !3124, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10481 = !DILocation(line: 1050, column: 38, scope: !10480)
!10482 = !DILocation(line: 1051, column: 1, scope: !10480)
!10483 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9705, file: !9705, line: 1139, type: !5097, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10484 = !DILocation(line: 1141, column: 10, scope: !10483)
!10485 = !DILocation(line: 1141, column: 3, scope: !10483)
!10486 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9705, file: !9705, line: 1150, type: !5097, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10487 = !DILocation(line: 1153, column: 11, scope: !10486)
!10488 = !DILocation(line: 1153, column: 56, scope: !10486)
!10489 = !DILocation(line: 1153, column: 79, scope: !10486)
!10490 = !DILocation(line: 1153, column: 36, scope: !10486)
!10491 = !DILocation(line: 1153, column: 33, scope: !10486)
!10492 = !DILocation(line: 1153, column: 3, scope: !10486)
!10493 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9705, file: !9705, line: 1162, type: !5097, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10494 = !DILocation(line: 1165, column: 11, scope: !10493)
!10495 = !DILocation(line: 1165, column: 55, scope: !10493)
!10496 = !DILocation(line: 1165, column: 78, scope: !10493)
!10497 = !DILocation(line: 1165, column: 35, scope: !10493)
!10498 = !DILocation(line: 1165, column: 32, scope: !10493)
!10499 = !DILocation(line: 1165, column: 3, scope: !10493)
!10500 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9705, file: !9705, line: 1175, type: !10501, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !10503)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{null, !9771}
!10503 = !{!10504}
!10504 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10500, file: !9705, line: 1175, type: !9771)
!10505 = !DILocation(line: 0, scope: !10500)
!10506 = !DILocation(line: 1181, column: 22, scope: !10500)
!10507 = !DILocation(line: 1181, column: 37, scope: !10500)
!10508 = !DILocation(line: 1186, column: 12, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10500, file: !9705, line: 1186, column: 6)
!10510 = !DILocation(line: 1186, column: 15, scope: !10509)
!10511 = !DILocation(line: 1186, column: 31, scope: !10509)
!10512 = !DILocation(line: 1186, column: 6, scope: !10500)
!10513 = !DILocation(line: 1188, column: 24, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10509, file: !9705, line: 1187, column: 3)
!10515 = !DILocation(line: 1188, column: 33, scope: !10514)
!10516 = !DILocation(line: 1189, column: 3, scope: !10514)
!10517 = !DILocation(line: 1190, column: 17, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10509, file: !9705, line: 1190, column: 11)
!10519 = !DILocation(line: 1190, column: 20, scope: !10518)
!10520 = !DILocation(line: 1190, column: 35, scope: !10518)
!10521 = !DILocation(line: 0, scope: !10518)
!10522 = !DILocation(line: 1190, column: 11, scope: !10509)
!10523 = !DILocation(line: 1192, column: 33, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10518, file: !9705, line: 1191, column: 3)
!10525 = !DILocation(line: 1193, column: 3, scope: !10524)
!10526 = !DILocation(line: 1196, column: 33, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10518, file: !9705, line: 1195, column: 3)
!10528 = !DILocation(line: 1200, column: 12, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10500, file: !9705, line: 1200, column: 6)
!10530 = !DILocation(line: 1200, column: 15, scope: !10529)
!10531 = !DILocation(line: 1206, column: 24, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10529, file: !9705, line: 1205, column: 3)
!10533 = !DILocation(line: 1206, column: 33, scope: !10532)
!10534 = !DILocation(line: 1209, column: 61, scope: !10500)
!10535 = !DILocation(line: 1209, column: 88, scope: !10500)
!10536 = !DILocation(line: 1209, column: 22, scope: !10500)
!10537 = !DILocation(line: 1209, column: 42, scope: !10500)
!10538 = !DILocation(line: 1212, column: 12, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10500, file: !9705, line: 1212, column: 6)
!10540 = !DILocation(line: 1212, column: 6, scope: !10500)
!10541 = !DILocation(line: 1218, column: 24, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10539, file: !9705, line: 1217, column: 3)
!10543 = !DILocation(line: 1218, column: 33, scope: !10542)
!10544 = !DILocation(line: 1221, column: 61, scope: !10500)
!10545 = !DILocation(line: 1221, column: 88, scope: !10500)
!10546 = !DILocation(line: 1221, column: 22, scope: !10500)
!10547 = !DILocation(line: 1221, column: 42, scope: !10500)
!10548 = !DILocation(line: 1222, column: 55, scope: !10500)
!10549 = !DILocation(line: 1222, column: 61, scope: !10500)
!10550 = !DILocation(line: 1222, column: 22, scope: !10500)
!10551 = !DILocation(line: 1222, column: 36, scope: !10500)
!10552 = !DILocation(line: 1225, column: 12, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10500, file: !9705, line: 1225, column: 6)
!10554 = !DILocation(line: 1225, column: 16, scope: !10553)
!10555 = !DILocation(line: 1225, column: 33, scope: !10553)
!10556 = !DILocation(line: 1225, column: 6, scope: !10500)
!10557 = !DILocation(line: 1227, column: 24, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10553, file: !9705, line: 1226, column: 3)
!10559 = !DILocation(line: 1227, column: 33, scope: !10558)
!10560 = !DILocation(line: 1228, column: 3, scope: !10558)
!10561 = !DILocation(line: 1229, column: 17, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10553, file: !9705, line: 1229, column: 11)
!10563 = !DILocation(line: 1229, column: 21, scope: !10562)
!10564 = !DILocation(line: 1229, column: 37, scope: !10562)
!10565 = !DILocation(line: 0, scope: !10562)
!10566 = !DILocation(line: 1229, column: 11, scope: !10553)
!10567 = !DILocation(line: 1231, column: 33, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10562, file: !9705, line: 1230, column: 3)
!10569 = !DILocation(line: 1232, column: 3, scope: !10568)
!10570 = !DILocation(line: 1235, column: 33, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10562, file: !9705, line: 1234, column: 3)
!10572 = !DILocation(line: 1239, column: 12, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10500, file: !9705, line: 1239, column: 6)
!10574 = !DILocation(line: 1239, column: 16, scope: !10573)
!10575 = !DILocation(line: 1245, column: 24, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10573, file: !9705, line: 1244, column: 3)
!10577 = !DILocation(line: 1245, column: 33, scope: !10576)
!10578 = !DILocation(line: 1250, column: 12, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10500, file: !9705, line: 1250, column: 6)
!10580 = !DILocation(line: 1250, column: 15, scope: !10579)
!10581 = !DILocation(line: 1250, column: 30, scope: !10579)
!10582 = !DILocation(line: 1250, column: 6, scope: !10500)
!10583 = !DILocation(line: 1256, column: 28, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10579, file: !9705, line: 1255, column: 3)
!10585 = !DILocation(line: 1256, column: 37, scope: !10584)
!10586 = !DILocation(line: 1258, column: 54, scope: !10500)
!10587 = !DILocation(line: 1258, column: 59, scope: !10500)
!10588 = !DILocation(line: 1258, column: 26, scope: !10500)
!10589 = !DILocation(line: 1258, column: 36, scope: !10500)
!10590 = !DILocation(line: 1259, column: 51, scope: !10500)
!10591 = !DILocation(line: 1259, column: 56, scope: !10500)
!10592 = !DILocation(line: 1259, column: 26, scope: !10500)
!10593 = !DILocation(line: 1259, column: 33, scope: !10500)
!10594 = !DILocation(line: 1260, column: 51, scope: !10500)
!10595 = !DILocation(line: 1260, column: 56, scope: !10500)
!10596 = !DILocation(line: 1260, column: 26, scope: !10500)
!10597 = !DILocation(line: 1260, column: 33, scope: !10500)
!10598 = !DILocation(line: 1261, column: 1, scope: !10500)
!10599 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9705, file: !9705, line: 1271, type: !10600, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !10602)
!10600 = !DISubroutineType(types: !10601)
!10601 = !{null, !10242, !768}
!10602 = !{!10603, !10604}
!10603 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10599, file: !9705, line: 1271, type: !10242)
!10604 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !10599, file: !9705, line: 1271, type: !768)
!10605 = !DILocation(line: 0, scope: !10599)
!10606 = !DILocation(line: 1278, column: 22, scope: !10599)
!10607 = !DILocation(line: 1278, column: 32, scope: !10599)
!10608 = !DILocation(line: 1281, column: 53, scope: !10599)
!10609 = !DILocation(line: 1281, column: 58, scope: !10599)
!10610 = !DILocation(line: 1281, column: 22, scope: !10599)
!10611 = !DILocation(line: 1281, column: 35, scope: !10599)
!10612 = !DILocation(line: 1284, column: 54, scope: !10599)
!10613 = !DILocation(line: 1284, column: 59, scope: !10599)
!10614 = !DILocation(line: 1284, column: 22, scope: !10599)
!10615 = !DILocation(line: 1284, column: 36, scope: !10599)
!10616 = !DILocation(line: 1287, column: 55, scope: !10599)
!10617 = !DILocation(line: 1287, column: 60, scope: !10599)
!10618 = !DILocation(line: 1287, column: 22, scope: !10599)
!10619 = !DILocation(line: 1287, column: 37, scope: !10599)
!10620 = !DILocation(line: 1290, column: 56, scope: !10599)
!10621 = !DILocation(line: 1290, column: 79, scope: !10599)
!10622 = !DILocation(line: 1290, column: 22, scope: !10599)
!10623 = !DILocation(line: 1290, column: 37, scope: !10599)
!10624 = !DILocation(line: 1293, column: 16, scope: !10599)
!10625 = !DILocation(line: 1293, column: 14, scope: !10599)
!10626 = !DILocation(line: 1294, column: 1, scope: !10599)
!10627 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9705, file: !9705, line: 1301, type: !3124, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10628 = !DILocation(line: 1304, column: 6, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10627, file: !9705, line: 1304, column: 6)
!10630 = !DILocation(line: 1304, column: 6, scope: !10627)
!10631 = !DILocation(line: 1307, column: 5, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10629, file: !9705, line: 1305, column: 3)
!10633 = !DILocation(line: 1310, column: 5, scope: !10632)
!10634 = !DILocation(line: 1311, column: 3, scope: !10632)
!10635 = !DILocation(line: 1312, column: 1, scope: !10627)
!10636 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9705, file: !9705, line: 1318, type: !3124, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2946, retainedNodes: !335)
!10637 = !DILocation(line: 1323, column: 1, scope: !10636)
!10638 = distinct !DISubprogram(name: "HAL_FLASH_Program", scope: !1866, file: !1866, line: 231, type: !10639, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10641)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{!8445, !121, !121, !121}
!10641 = !{!10642, !10643, !10644, !10645}
!10642 = !DILocalVariable(name: "TypeProgram", arg: 1, scope: !10638, file: !1866, line: 231, type: !121)
!10643 = !DILocalVariable(name: "Address", arg: 2, scope: !10638, file: !1866, line: 231, type: !121)
!10644 = !DILocalVariable(name: "Data", arg: 3, scope: !10638, file: !1866, line: 231, type: !121)
!10645 = !DILocalVariable(name: "status", scope: !10638, file: !1866, line: 233, type: !8445)
!10646 = !DILocation(line: 0, scope: !10638)
!10647 = !DILocation(line: 236, column: 3, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1866, line: 236, column: 3)
!10649 = distinct !DILexicalBlock(scope: !10638, file: !1866, line: 236, column: 3)
!10650 = !DILocation(line: 236, column: 3, scope: !10649)
!10651 = !DILocation(line: 236, column: 3, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10648, file: !1866, line: 236, column: 3)
!10653 = !DILocation(line: 243, column: 12, scope: !10638)
!10654 = !DILocation(line: 245, column: 13, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10638, file: !1866, line: 245, column: 6)
!10656 = !DILocation(line: 245, column: 6, scope: !10638)
!10657 = !DILocation(line: 248, column: 22, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10655, file: !1866, line: 246, column: 3)
!10659 = !DILocation(line: 251, column: 6, scope: !10658)
!10660 = !DILocation(line: 251, column: 31, scope: !10658)
!10661 = !DILocation(line: 254, column: 14, scope: !10658)
!10662 = !DILocation(line: 255, column: 3, scope: !10658)
!10663 = !DILocation(line: 258, column: 3, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10638, file: !1866, line: 258, column: 3)
!10665 = !DILocation(line: 260, column: 3, scope: !10638)
!10666 = !DILocation(line: 261, column: 1, scope: !10638)
!10667 = distinct !DISubprogram(name: "FLASH_WaitForLastOperation", scope: !1866, file: !1866, line: 619, type: !9766, scopeLine: 620, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10668)
!10668 = !{!10669, !10670}
!10669 = !DILocalVariable(name: "Timeout", arg: 1, scope: !10667, file: !1866, line: 619, type: !121)
!10670 = !DILocalVariable(name: "tickstart", scope: !10667, file: !1866, line: 625, type: !121)
!10671 = !DILocation(line: 0, scope: !10667)
!10672 = !DILocation(line: 625, column: 24, scope: !10667)
!10673 = !DILocation(line: 627, column: 9, scope: !10667)
!10674 = !DILocation(line: 627, column: 3, scope: !10667)
!10675 = !DILocation(line: 629, column: 9, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10667, file: !1866, line: 628, column: 3)
!10677 = !DILocation(line: 631, column: 31, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10679, file: !1866, line: 631, column: 10)
!10679 = distinct !DILexicalBlock(scope: !10680, file: !1866, line: 630, column: 5)
!10680 = distinct !DILexicalBlock(scope: !10676, file: !1866, line: 629, column: 9)
!10681 = !DILocation(line: 631, column: 44, scope: !10678)
!10682 = !DILocation(line: 631, column: 56, scope: !10678)
!10683 = !DILocation(line: 631, column: 10, scope: !10679)
!10684 = distinct !{!10684, !10674, !10685}
!10685 = !DILocation(line: 636, column: 3, scope: !10667)
!10686 = !DILocation(line: 639, column: 7, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10667, file: !1866, line: 639, column: 7)
!10688 = !DILocation(line: 639, column: 7, scope: !10667)
!10689 = !DILocation(line: 642, column: 5, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10687, file: !1866, line: 640, column: 3)
!10691 = !DILocation(line: 643, column: 3, scope: !10690)
!10692 = !DILocation(line: 645, column: 6, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10667, file: !1866, line: 645, column: 6)
!10694 = !DILocation(line: 645, column: 47, scope: !10693)
!10695 = !DILocation(line: 646, column: 6, scope: !10693)
!10696 = !DILocation(line: 646, column: 47, scope: !10693)
!10697 = !DILocation(line: 648, column: 7, scope: !10693)
!10698 = !DILocation(line: 648, column: 46, scope: !10693)
!10699 = !DILocation(line: 653, column: 6, scope: !10693)
!10700 = !DILocation(line: 653, column: 46, scope: !10693)
!10701 = !DILocation(line: 654, column: 6, scope: !10693)
!10702 = !DILocation(line: 645, column: 6, scope: !10667)
!10703 = !DILocation(line: 657, column: 5, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10693, file: !1866, line: 655, column: 3)
!10705 = !DILocation(line: 658, column: 5, scope: !10704)
!10706 = !DILocation(line: 663, column: 1, scope: !10667)
!10707 = distinct !DISubprogram(name: "FLASH_SetErrorCode", scope: !1866, file: !1866, line: 670, type: !3124, scopeLine: 671, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10708)
!10708 = !{!10709}
!10709 = !DILocalVariable(name: "flags", scope: !10707, file: !1866, line: 672, type: !121)
!10710 = !DILocation(line: 0, scope: !10707)
!10711 = !DILocation(line: 674, column: 6, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10707, file: !1866, line: 674, column: 6)
!10713 = !DILocation(line: 674, column: 6, scope: !10707)
!10714 = !DILocation(line: 676, column: 22, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10712, file: !1866, line: 675, column: 3)
!10716 = !DILocation(line: 678, column: 3, scope: !10715)
!10717 = !DILocation(line: 679, column: 6, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10707, file: !1866, line: 679, column: 6)
!10719 = !DILocation(line: 679, column: 6, scope: !10707)
!10720 = !DILocation(line: 681, column: 22, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10718, file: !1866, line: 680, column: 3)
!10722 = !DILocation(line: 682, column: 11, scope: !10721)
!10723 = !DILocation(line: 683, column: 3, scope: !10721)
!10724 = !DILocation(line: 684, column: 6, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10707, file: !1866, line: 684, column: 6)
!10726 = !DILocation(line: 684, column: 6, scope: !10707)
!10727 = !DILocation(line: 686, column: 22, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10725, file: !1866, line: 685, column: 3)
!10729 = !DILocation(line: 687, column: 11, scope: !10728)
!10730 = !DILocation(line: 688, column: 3, scope: !10728)
!10731 = !DILocation(line: 691, column: 6, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10707, file: !1866, line: 691, column: 6)
!10733 = !DILocation(line: 691, column: 6, scope: !10707)
!10734 = !DILocation(line: 693, column: 22, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10732, file: !1866, line: 692, column: 3)
!10736 = !DILocation(line: 694, column: 11, scope: !10735)
!10737 = !DILocation(line: 695, column: 3, scope: !10735)
!10738 = !DILocation(line: 704, column: 6, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10707, file: !1866, line: 704, column: 6)
!10740 = !DILocation(line: 704, column: 6, scope: !10707)
!10741 = !DILocation(line: 706, column: 22, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10739, file: !1866, line: 705, column: 3)
!10743 = !DILocation(line: 707, column: 11, scope: !10742)
!10744 = !DILocation(line: 708, column: 3, scope: !10742)
!10745 = !DILocation(line: 710, column: 3, scope: !10707)
!10746 = !DILocation(line: 711, column: 1, scope: !10707)
!10747 = distinct !DISubprogram(name: "HAL_FLASH_Program_IT", scope: !1866, file: !1866, line: 273, type: !10639, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10748)
!10748 = !{!10749, !10750, !10751, !10752}
!10749 = !DILocalVariable(name: "TypeProgram", arg: 1, scope: !10747, file: !1866, line: 273, type: !121)
!10750 = !DILocalVariable(name: "Address", arg: 2, scope: !10747, file: !1866, line: 273, type: !121)
!10751 = !DILocalVariable(name: "Data", arg: 3, scope: !10747, file: !1866, line: 273, type: !121)
!10752 = !DILocalVariable(name: "status", scope: !10747, file: !1866, line: 275, type: !8445)
!10753 = !DILocation(line: 0, scope: !10747)
!10754 = !DILocation(line: 278, column: 3, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10756, file: !1866, line: 278, column: 3)
!10756 = distinct !DILexicalBlock(scope: !10747, file: !1866, line: 278, column: 3)
!10757 = !DILocation(line: 278, column: 3, scope: !10756)
!10758 = !DILocation(line: 278, column: 3, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !1866, line: 278, column: 3)
!10760 = !DILocation(line: 285, column: 3, scope: !10747)
!10761 = !DILocation(line: 287, column: 18, scope: !10747)
!10762 = !DILocation(line: 288, column: 27, scope: !10747)
!10763 = !DILocation(line: 290, column: 20, scope: !10747)
!10764 = !DILocation(line: 292, column: 18, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10747, file: !1866, line: 292, column: 6)
!10766 = !DILocation(line: 292, column: 6, scope: !10747)
!10767 = !DILocation(line: 295, column: 6, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10765, file: !1866, line: 293, column: 3)
!10769 = !DILocation(line: 295, column: 31, scope: !10768)
!10770 = !DILocation(line: 296, column: 3, scope: !10768)
!10771 = !DILocation(line: 298, column: 1, scope: !10747)
!10772 = distinct !DISubprogram(name: "HAL_FLASH_IRQHandler", scope: !1866, file: !1866, line: 304, type: !3124, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10773)
!10773 = !{!10774}
!10774 = !DILocalVariable(name: "addresstmp", scope: !10772, file: !1866, line: 306, type: !121)
!10775 = !DILocation(line: 0, scope: !10772)
!10776 = !DILocation(line: 309, column: 7, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10772, file: !1866, line: 309, column: 7)
!10778 = !DILocation(line: 309, column: 51, scope: !10777)
!10779 = !DILocation(line: 310, column: 7, scope: !10777)
!10780 = !DILocation(line: 310, column: 51, scope: !10777)
!10781 = !DILocation(line: 311, column: 7, scope: !10777)
!10782 = !DILocation(line: 311, column: 51, scope: !10777)
!10783 = !DILocation(line: 313, column: 7, scope: !10777)
!10784 = !DILocation(line: 313, column: 51, scope: !10777)
!10785 = !DILocation(line: 318, column: 7, scope: !10777)
!10786 = !DILocation(line: 309, column: 7, scope: !10772)
!10787 = !DILocation(line: 320, column: 15, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !1866, line: 320, column: 8)
!10789 = distinct !DILexicalBlock(scope: !10777, file: !1866, line: 319, column: 3)
!10790 = !DILocation(line: 320, column: 32, scope: !10788)
!10791 = !DILocation(line: 320, column: 8, scope: !10789)
!10792 = !DILocation(line: 323, column: 27, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10788, file: !1866, line: 321, column: 5)
!10794 = !DILocation(line: 324, column: 19, scope: !10793)
!10795 = !DILocation(line: 325, column: 5, scope: !10793)
!10796 = !DILocation(line: 329, column: 27, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10788, file: !1866, line: 327, column: 5)
!10798 = !DILocation(line: 0, scope: !10788)
!10799 = !DILocation(line: 332, column: 5, scope: !10789)
!10800 = !DILocation(line: 335, column: 5, scope: !10789)
!10801 = !DILocation(line: 338, column: 29, scope: !10789)
!10802 = !DILocation(line: 339, column: 3, scope: !10789)
!10803 = !DILocation(line: 342, column: 6, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10772, file: !1866, line: 342, column: 6)
!10805 = !DILocation(line: 342, column: 6, scope: !10772)
!10806 = !DILocation(line: 345, column: 5, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10804, file: !1866, line: 343, column: 3)
!10808 = !DILocation(line: 348, column: 15, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10807, file: !1866, line: 348, column: 8)
!10810 = !DILocation(line: 348, column: 32, scope: !10809)
!10811 = !DILocation(line: 348, column: 8, scope: !10807)
!10812 = !DILocation(line: 350, column: 17, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !1866, line: 350, column: 10)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !1866, line: 349, column: 5)
!10815 = !DILocation(line: 350, column: 34, scope: !10813)
!10816 = !DILocation(line: 350, column: 10, scope: !10814)
!10817 = !DILocation(line: 353, column: 30, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10813, file: !1866, line: 351, column: 7)
!10819 = !DILocation(line: 356, column: 19, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10818, file: !1866, line: 356, column: 12)
!10821 = !DILocation(line: 356, column: 34, scope: !10820)
!10822 = !DILocation(line: 356, column: 12, scope: !10818)
!10823 = !DILocation(line: 358, column: 31, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10820, file: !1866, line: 357, column: 9)
!10825 = !DILocation(line: 360, column: 11, scope: !10824)
!10826 = !DILocation(line: 363, column: 31, scope: !10824)
!10827 = !DILocation(line: 363, column: 36, scope: !10824)
!10828 = !DILocation(line: 364, column: 23, scope: !10824)
!10829 = !DILocation(line: 367, column: 11, scope: !10824)
!10830 = !DILocation(line: 369, column: 11, scope: !10824)
!10831 = !DILocation(line: 370, column: 9, scope: !10824)
!10832 = !DILocation(line: 375, column: 23, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10820, file: !1866, line: 372, column: 9)
!10834 = !DILocation(line: 376, column: 35, scope: !10833)
!10835 = !DILocation(line: 378, column: 11, scope: !10833)
!10836 = !DILocation(line: 384, column: 11, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10813, file: !1866, line: 382, column: 7)
!10838 = !DILocation(line: 388, column: 51, scope: !10837)
!10839 = !DILocation(line: 388, column: 11, scope: !10837)
!10840 = !DILocation(line: 391, column: 26, scope: !10837)
!10841 = !DILocation(line: 392, column: 35, scope: !10837)
!10842 = !DILocation(line: 398, column: 13, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10772, file: !1866, line: 398, column: 6)
!10844 = !DILocation(line: 398, column: 30, scope: !10843)
!10845 = !DILocation(line: 398, column: 6, scope: !10772)
!10846 = !DILocation(line: 401, column: 5, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10843, file: !1866, line: 399, column: 3)
!10848 = !DILocation(line: 404, column: 5, scope: !10847)
!10849 = !DILocation(line: 407, column: 5, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10847, file: !1866, line: 407, column: 5)
!10851 = !DILocation(line: 408, column: 3, scope: !10847)
!10852 = !DILocation(line: 409, column: 1, scope: !10772)
!10853 = distinct !DISubprogram(name: "HAL_FLASH_OperationErrorCallback", scope: !1866, file: !1866, line: 436, type: !5075, scopeLine: 437, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10854)
!10854 = !{!10855}
!10855 = !DILocalVariable(name: "ReturnValue", arg: 1, scope: !10853, file: !1866, line: 436, type: !121)
!10856 = !DILocation(line: 0, scope: !10853)
!10857 = !DILocation(line: 444, column: 1, scope: !10853)
!10858 = distinct !DISubprogram(name: "HAL_FLASH_EndOfOperationCallback", scope: !1866, file: !1866, line: 419, type: !5075, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10859)
!10859 = !{!10860}
!10860 = !DILocalVariable(name: "ReturnValue", arg: 1, scope: !10858, file: !1866, line: 419, type: !121)
!10861 = !DILocation(line: 0, scope: !10858)
!10862 = !DILocation(line: 427, column: 1, scope: !10858)
!10863 = distinct !DISubprogram(name: "HAL_FLASH_Unlock", scope: !1866, file: !1866, line: 469, type: !9706, scopeLine: 470, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !335)
!10864 = !DILocation(line: 471, column: 7, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10863, file: !1866, line: 471, column: 7)
!10866 = !DILocation(line: 471, column: 7, scope: !10863)
!10867 = !DILocation(line: 474, column: 8, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !1866, line: 474, column: 8)
!10869 = distinct !DILexicalBlock(scope: !10865, file: !1866, line: 472, column: 3)
!10870 = !DILocation(line: 474, column: 8, scope: !10869)
!10871 = !DILocation(line: 476, column: 7, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10868, file: !1866, line: 475, column: 5)
!10873 = !DILocation(line: 477, column: 7, scope: !10872)
!10874 = !DILocation(line: 480, column: 10, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10872, file: !1866, line: 480, column: 10)
!10876 = !DILocation(line: 480, column: 10, scope: !10872)
!10877 = !DILocation(line: 487, column: 5, scope: !10869)
!10878 = !DILocation(line: 488, column: 5, scope: !10869)
!10879 = !DILocation(line: 491, column: 9, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10869, file: !1866, line: 491, column: 9)
!10881 = !DILocation(line: 491, column: 9, scope: !10869)
!10882 = !DILocation(line: 497, column: 3, scope: !10863)
!10883 = !DILocation(line: 0, scope: !10863)
!10884 = !DILocation(line: 498, column: 1, scope: !10863)
!10885 = distinct !DISubprogram(name: "HAL_FLASH_Lock", scope: !1866, file: !1866, line: 504, type: !9706, scopeLine: 505, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !335)
!10886 = !DILocation(line: 507, column: 3, scope: !10885)
!10887 = !DILocation(line: 509, column: 3, scope: !10885)
!10888 = distinct !DISubprogram(name: "HAL_FLASH_OB_Unlock", scope: !1866, file: !1866, line: 516, type: !9706, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !335)
!10889 = !DILocation(line: 518, column: 6, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10888, file: !1866, line: 518, column: 6)
!10891 = !DILocation(line: 518, column: 6, scope: !10888)
!10892 = !DILocation(line: 521, column: 8, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !1866, line: 521, column: 8)
!10894 = distinct !DILexicalBlock(scope: !10890, file: !1866, line: 519, column: 3)
!10895 = !DILocation(line: 521, column: 8, scope: !10894)
!10896 = !DILocation(line: 524, column: 7, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10893, file: !1866, line: 522, column: 5)
!10898 = !DILocation(line: 525, column: 7, scope: !10897)
!10899 = !DILocation(line: 528, column: 10, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10897, file: !1866, line: 528, column: 10)
!10901 = !DILocation(line: 528, column: 10, scope: !10897)
!10902 = !DILocation(line: 535, column: 5, scope: !10894)
!10903 = !DILocation(line: 536, column: 5, scope: !10894)
!10904 = !DILocation(line: 539, column: 9, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10894, file: !1866, line: 539, column: 9)
!10906 = !DILocation(line: 539, column: 9, scope: !10894)
!10907 = !DILocation(line: 545, column: 3, scope: !10888)
!10908 = !DILocation(line: 0, scope: !10888)
!10909 = !DILocation(line: 546, column: 1, scope: !10888)
!10910 = distinct !DISubprogram(name: "HAL_FLASH_OB_Lock", scope: !1866, file: !1866, line: 552, type: !9706, scopeLine: 553, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !335)
!10911 = !DILocation(line: 555, column: 3, scope: !10910)
!10912 = !DILocation(line: 557, column: 3, scope: !10910)
!10913 = distinct !DISubprogram(name: "HAL_FLASH_OB_Launch", scope: !1866, file: !1866, line: 565, type: !9706, scopeLine: 566, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !335)
!10914 = !DILocation(line: 568, column: 3, scope: !10913)
!10915 = !DILocation(line: 571, column: 10, scope: !10913)
!10916 = !DILocation(line: 571, column: 3, scope: !10913)
!10917 = distinct !DISubprogram(name: "HAL_FLASH_GetError", scope: !1866, file: !1866, line: 597, type: !5097, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !335)
!10918 = !DILocation(line: 599, column: 18, scope: !10917)
!10919 = !DILocation(line: 599, column: 4, scope: !10917)
!10920 = distinct !DISubprogram(name: "HAL_FLASHEx_Erase", scope: !10921, file: !10921, line: 187, type: !10922, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !10932)
!10921 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_flash_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10922 = !DISubroutineType(types: !10923)
!10923 = !{!8445, !10924, !768}
!10924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10925, size: 32)
!10925 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_EraseInitTypeDef", file: !10926, line: 218, baseType: !10927)
!10926 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_flash_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10926, line: 207, size: 96, elements: !10928)
!10928 = !{!10929, !10930, !10931}
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "TypeErase", scope: !10927, file: !10926, line: 209, baseType: !121, size: 32)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "PageAddress", scope: !10927, file: !10926, line: 212, baseType: !121, size: 32, offset: 32)
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "NbPages", scope: !10927, file: !10926, line: 215, baseType: !121, size: 32, offset: 64)
!10932 = !{!10933, !10934, !10935, !10936}
!10933 = !DILocalVariable(name: "pEraseInit", arg: 1, scope: !10920, file: !10921, line: 187, type: !10924)
!10934 = !DILocalVariable(name: "PageError", arg: 2, scope: !10920, file: !10921, line: 187, type: !768)
!10935 = !DILocalVariable(name: "status", scope: !10920, file: !10921, line: 189, type: !8445)
!10936 = !DILocalVariable(name: "address", scope: !10920, file: !10921, line: 190, type: !121)
!10937 = !DILocation(line: 0, scope: !10920)
!10938 = !DILocation(line: 193, column: 3, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !10921, line: 193, column: 3)
!10940 = distinct !DILexicalBlock(scope: !10920, file: !10921, line: 193, column: 3)
!10941 = !DILocation(line: 193, column: 3, scope: !10940)
!10942 = !DILocation(line: 193, column: 3, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !10921, line: 193, column: 3)
!10944 = !DILocation(line: 196, column: 12, scope: !10920)
!10945 = !DILocation(line: 198, column: 14, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10920, file: !10921, line: 198, column: 7)
!10947 = !DILocation(line: 198, column: 7, scope: !10920)
!10948 = !DILocation(line: 201, column: 16, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10946, file: !10921, line: 199, column: 3)
!10950 = !DILocation(line: 240, column: 31, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10949, file: !10921, line: 240, column: 5)
!10952 = !DILocation(line: 241, column: 33, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10951, file: !10921, line: 240, column: 5)
!10954 = !DILocation(line: 241, column: 41, scope: !10953)
!10955 = !DILocation(line: 241, column: 60, scope: !10953)
!10956 = !DILocation(line: 241, column: 17, scope: !10953)
!10957 = !DILocation(line: 240, column: 5, scope: !10951)
!10958 = !DILocation(line: 244, column: 7, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10953, file: !10921, line: 243, column: 5)
!10960 = !DILocation(line: 247, column: 16, scope: !10959)
!10961 = !DILocation(line: 250, column: 7, scope: !10959)
!10962 = !DILocation(line: 251, column: 7, scope: !10959)
!10963 = !DILocation(line: 253, column: 18, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10959, file: !10921, line: 253, column: 11)
!10965 = !DILocation(line: 253, column: 11, scope: !10959)
!10966 = !DILocation(line: 256, column: 20, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10964, file: !10921, line: 254, column: 7)
!10968 = !DILocation(line: 257, column: 9, scope: !10967)
!10969 = !DILocation(line: 242, column: 17, scope: !10953)
!10970 = !DILocation(line: 241, column: 74, scope: !10953)
!10971 = distinct !{!10971, !10957, !10972}
!10972 = !DILocation(line: 259, column: 5, scope: !10951)
!10973 = !DILocation(line: 263, column: 3, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10920, file: !10921, line: 263, column: 3)
!10975 = !DILocation(line: 265, column: 3, scope: !10920)
!10976 = !DILocation(line: 266, column: 1, scope: !10920)
!10977 = distinct !DISubprogram(name: "FLASH_PageErase", scope: !10921, file: !10921, line: 1845, type: !5075, scopeLine: 1846, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !10978)
!10978 = !{!10979}
!10979 = !DILocalVariable(name: "PageAddress", arg: 1, scope: !10977, file: !10921, line: 1845, type: !121)
!10980 = !DILocation(line: 0, scope: !10977)
!10981 = !DILocation(line: 1848, column: 20, scope: !10977)
!10982 = !DILocation(line: 1851, column: 3, scope: !10977)
!10983 = !DILocation(line: 1854, column: 3, scope: !10977)
!10984 = !DILocation(line: 1857, column: 44, scope: !10977)
!10985 = !DILocation(line: 1857, column: 4, scope: !10977)
!10986 = !DILocation(line: 1857, column: 70, scope: !10977)
!10987 = !DILocation(line: 1858, column: 1, scope: !10977)
!10988 = distinct !DISubprogram(name: "HAL_FLASHEx_Erase_IT", scope: !10921, file: !10921, line: 283, type: !10989, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !10991)
!10989 = !DISubroutineType(types: !10990)
!10990 = !{!8445, !10924}
!10991 = !{!10992, !10993}
!10992 = !DILocalVariable(name: "pEraseInit", arg: 1, scope: !10988, file: !10921, line: 283, type: !10924)
!10993 = !DILocalVariable(name: "status", scope: !10988, file: !10921, line: 285, type: !8445)
!10994 = !DILocation(line: 0, scope: !10988)
!10995 = !DILocation(line: 288, column: 14, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10988, file: !10921, line: 288, column: 7)
!10997 = !DILocation(line: 288, column: 31, scope: !10996)
!10998 = !DILocation(line: 288, column: 7, scope: !10988)
!10999 = !DILocation(line: 300, column: 3, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !10921, line: 300, column: 3)
!11001 = distinct !DILexicalBlock(scope: !10988, file: !10921, line: 300, column: 3)
!11002 = !DILocation(line: 300, column: 3, scope: !11001)
!11003 = !DILocation(line: 300, column: 3, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !10921, line: 300, column: 3)
!11005 = !DILocation(line: 333, column: 12, scope: !10988)
!11006 = !DILocation(line: 335, column: 14, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10988, file: !10921, line: 335, column: 7)
!11008 = !DILocation(line: 335, column: 7, scope: !10988)
!11009 = !DILocation(line: 338, column: 5, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !11007, file: !10921, line: 336, column: 3)
!11011 = !DILocation(line: 340, column: 29, scope: !11010)
!11012 = !DILocation(line: 341, column: 41, scope: !11010)
!11013 = !DILocation(line: 341, column: 27, scope: !11010)
!11014 = !DILocation(line: 342, column: 31, scope: !11010)
!11015 = !DILocation(line: 342, column: 17, scope: !11010)
!11016 = !DILocation(line: 345, column: 33, scope: !11010)
!11017 = !DILocation(line: 345, column: 5, scope: !11010)
!11018 = !DILocation(line: 346, column: 3, scope: !11010)
!11019 = !DILocation(line: 350, column: 5, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !10921, line: 350, column: 5)
!11021 = distinct !DILexicalBlock(scope: !11007, file: !10921, line: 348, column: 3)
!11022 = !DILocation(line: 354, column: 1, scope: !10988)
!11023 = distinct !DISubprogram(name: "HAL_FLASHEx_OBProgram", scope: !10921, file: !10921, line: 406, type: !11024, scopeLine: 407, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11036)
!11024 = !DISubroutineType(types: !11025)
!11025 = !{!8445, !11026}
!11026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11027, size: 32)
!11027 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_OBProgramInitTypeDef", file: !10926, line: 265, baseType: !11028)
!11028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10926, line: 223, size: 128, elements: !11029)
!11029 = !{!11030, !11031, !11032, !11033, !11034, !11035}
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "OptionType", scope: !11028, file: !10926, line: 225, baseType: !121, size: 32)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "WRPState", scope: !11028, file: !10926, line: 228, baseType: !121, size: 32, offset: 32)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "WRPSector0To31", scope: !11028, file: !10926, line: 231, baseType: !121, size: 32, offset: 64)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "RDPLevel", scope: !11028, file: !10926, line: 256, baseType: !167, size: 8, offset: 96)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "BORLevel", scope: !11028, file: !10926, line: 259, baseType: !167, size: 8, offset: 104)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "USERConfig", scope: !11028, file: !10926, line: 262, baseType: !167, size: 8, offset: 112)
!11036 = !{!11037, !11038}
!11037 = !DILocalVariable(name: "pOBInit", arg: 1, scope: !11023, file: !10921, line: 406, type: !11026)
!11038 = !DILocalVariable(name: "status", scope: !11023, file: !10921, line: 408, type: !8445)
!11039 = !DILocation(line: 0, scope: !11023)
!11040 = !DILocation(line: 411, column: 3, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !10921, line: 411, column: 3)
!11042 = distinct !DILexicalBlock(scope: !11023, file: !10921, line: 411, column: 3)
!11043 = !DILocation(line: 411, column: 3, scope: !11042)
!11044 = !DILocation(line: 411, column: 3, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11041, file: !10921, line: 411, column: 3)
!11046 = !DILocation(line: 417, column: 16, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11023, file: !10921, line: 417, column: 6)
!11048 = !DILocation(line: 417, column: 27, scope: !11047)
!11049 = !DILocation(line: 417, column: 45, scope: !11047)
!11050 = !DILocation(line: 417, column: 6, scope: !11023)
!11051 = !DILocation(line: 420, column: 18, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !10921, line: 420, column: 9)
!11053 = distinct !DILexicalBlock(scope: !11047, file: !10921, line: 418, column: 3)
!11054 = !DILocation(line: 420, column: 27, scope: !11052)
!11055 = !DILocation(line: 0, scope: !11052)
!11056 = !DILocation(line: 430, column: 16, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !10921, line: 430, column: 9)
!11058 = !DILocation(line: 430, column: 9, scope: !11053)
!11059 = !DILocation(line: 439, column: 16, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11023, file: !10921, line: 439, column: 6)
!11061 = !DILocation(line: 439, column: 27, scope: !11060)
!11062 = !DILocation(line: 439, column: 45, scope: !11060)
!11063 = !DILocation(line: 439, column: 6, scope: !11023)
!11064 = !DILocation(line: 441, column: 42, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11060, file: !10921, line: 440, column: 3)
!11066 = !DILocation(line: 441, column: 14, scope: !11065)
!11067 = !DILocation(line: 442, column: 16, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11065, file: !10921, line: 442, column: 9)
!11069 = !DILocation(line: 442, column: 9, scope: !11065)
!11070 = !DILocation(line: 451, column: 16, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11023, file: !10921, line: 451, column: 6)
!11072 = !DILocation(line: 451, column: 27, scope: !11071)
!11073 = !DILocation(line: 451, column: 46, scope: !11071)
!11074 = !DILocation(line: 451, column: 6, scope: !11023)
!11075 = !DILocation(line: 453, column: 43, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11071, file: !10921, line: 452, column: 3)
!11077 = !DILocation(line: 453, column: 54, scope: !11076)
!11078 = !DILocation(line: 454, column: 54, scope: !11076)
!11079 = !DILocation(line: 455, column: 54, scope: !11076)
!11080 = !DILocation(line: 453, column: 14, scope: !11076)
!11081 = !DILocation(line: 456, column: 16, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11076, file: !10921, line: 456, column: 9)
!11083 = !DILocation(line: 456, column: 9, scope: !11076)
!11084 = !DILocation(line: 465, column: 16, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11023, file: !10921, line: 465, column: 6)
!11086 = !DILocation(line: 465, column: 27, scope: !11085)
!11087 = !DILocation(line: 465, column: 45, scope: !11085)
!11088 = !DILocation(line: 465, column: 6, scope: !11023)
!11089 = !DILocation(line: 467, column: 42, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11085, file: !10921, line: 466, column: 3)
!11091 = !DILocation(line: 467, column: 14, scope: !11090)
!11092 = !DILocation(line: 468, column: 16, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11090, file: !10921, line: 468, column: 9)
!11094 = !DILocation(line: 468, column: 9, scope: !11090)
!11095 = !DILocation(line: 478, column: 3, scope: !11023)
!11096 = !DILocation(line: 479, column: 1, scope: !11023)
!11097 = distinct !DISubprogram(name: "FLASH_OB_WRPConfig", scope: !10921, file: !10921, line: 1106, type: !11098, scopeLine: 1107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11101)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{!8445, !11026, !11100}
!11100 = !DIDerivedType(tag: DW_TAG_typedef, name: "FunctionalState", file: !732, line: 187, baseType: !2949)
!11101 = !{!11102, !11103, !11104}
!11102 = !DILocalVariable(name: "pOBInit", arg: 1, scope: !11097, file: !10921, line: 1106, type: !11026)
!11103 = !DILocalVariable(name: "NewState", arg: 2, scope: !11097, file: !10921, line: 1106, type: !11100)
!11104 = !DILocalVariable(name: "status", scope: !11097, file: !10921, line: 1108, type: !8445)
!11105 = !DILocation(line: 0, scope: !11097)
!11106 = !DILocation(line: 1111, column: 12, scope: !11097)
!11107 = !DILocation(line: 1113, column: 13, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11097, file: !10921, line: 1113, column: 6)
!11109 = !DILocation(line: 1113, column: 6, scope: !11097)
!11110 = !DILocation(line: 1116, column: 22, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11108, file: !10921, line: 1114, column: 3)
!11112 = !DILocation(line: 1119, column: 18, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11111, file: !10921, line: 1119, column: 9)
!11114 = !DILocation(line: 1119, column: 33, scope: !11113)
!11115 = !DILocation(line: 1119, column: 9, scope: !11111)
!11116 = !DILocation(line: 1121, column: 7, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11113, file: !10921, line: 1120, column: 5)
!11118 = !DILocation(line: 1122, column: 5, scope: !11117)
!11119 = !DILocation(line: 1164, column: 14, scope: !11111)
!11120 = !DILocation(line: 1165, column: 3, scope: !11111)
!11121 = !DILocation(line: 1168, column: 3, scope: !11097)
!11122 = distinct !DISubprogram(name: "FLASH_OB_RDPConfig", scope: !10921, file: !10921, line: 958, type: !11123, scopeLine: 959, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11125)
!11123 = !DISubroutineType(types: !11124)
!11124 = !{!8445, !167}
!11125 = !{!11126, !11127, !11128, !11129, !11130}
!11126 = !DILocalVariable(name: "OB_RDP", arg: 1, scope: !11122, file: !10921, line: 958, type: !167)
!11127 = !DILocalVariable(name: "status", scope: !11122, file: !10921, line: 960, type: !8445)
!11128 = !DILocalVariable(name: "tmp1", scope: !11122, file: !10921, line: 961, type: !121)
!11129 = !DILocalVariable(name: "tmp2", scope: !11122, file: !10921, line: 961, type: !121)
!11130 = !DILocalVariable(name: "tmp3", scope: !11122, file: !10921, line: 961, type: !121)
!11131 = !DILocation(line: 0, scope: !11122)
!11132 = !DILocation(line: 966, column: 25, scope: !11122)
!11133 = !DILocation(line: 966, column: 29, scope: !11122)
!11134 = !DILocation(line: 973, column: 13, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11122, file: !10921, line: 973, column: 7)
!11136 = !DILocation(line: 973, column: 32, scope: !11135)
!11137 = !DILocation(line: 982, column: 27, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11135, file: !10921, line: 979, column: 3)
!11139 = !DILocation(line: 982, column: 31, scope: !11138)
!11140 = !DILocation(line: 986, column: 33, scope: !11138)
!11141 = !DILocation(line: 990, column: 14, scope: !11138)
!11142 = !DILocation(line: 992, column: 15, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11138, file: !10921, line: 992, column: 8)
!11144 = !DILocation(line: 992, column: 8, scope: !11138)
!11145 = !DILocation(line: 986, column: 13, scope: !11138)
!11146 = !DILocation(line: 987, column: 52, scope: !11138)
!11147 = !DILocation(line: 987, column: 61, scope: !11138)
!11148 = !DILocation(line: 995, column: 24, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11143, file: !10921, line: 993, column: 5)
!11150 = !DILocation(line: 998, column: 15, scope: !11149)
!11151 = !DILocation(line: 1001, column: 16, scope: !11149)
!11152 = !DILocation(line: 1002, column: 5, scope: !11149)
!11153 = !DILocation(line: 0, scope: !11135)
!11154 = !DILocation(line: 1006, column: 3, scope: !11122)
!11155 = distinct !DISubprogram(name: "FLASH_OB_UserConfig", scope: !10921, file: !10921, line: 1424, type: !11156, scopeLine: 1425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11158)
!11156 = !DISubroutineType(types: !11157)
!11157 = !{!8445, !167, !167, !167}
!11158 = !{!11159, !11160, !11161, !11162, !11163, !11164}
!11159 = !DILocalVariable(name: "OB_IWDG", arg: 1, scope: !11155, file: !10921, line: 1424, type: !167)
!11160 = !DILocalVariable(name: "OB_STOP", arg: 2, scope: !11155, file: !10921, line: 1424, type: !167)
!11161 = !DILocalVariable(name: "OB_STDBY", arg: 3, scope: !11155, file: !10921, line: 1424, type: !167)
!11162 = !DILocalVariable(name: "status", scope: !11155, file: !10921, line: 1426, type: !8445)
!11163 = !DILocalVariable(name: "tmp", scope: !11155, file: !10921, line: 1427, type: !121)
!11164 = !DILocalVariable(name: "tmp1", scope: !11155, file: !10921, line: 1427, type: !121)
!11165 = !DILocation(line: 0, scope: !11155)
!11166 = !DILocation(line: 1435, column: 14, scope: !11155)
!11167 = !DILocation(line: 1435, column: 19, scope: !11155)
!11168 = !DILocation(line: 1438, column: 64, scope: !11155)
!11169 = !DILocation(line: 1438, column: 86, scope: !11155)
!11170 = !DILocation(line: 1438, column: 109, scope: !11155)
!11171 = !DILocation(line: 1442, column: 12, scope: !11155)
!11172 = !DILocation(line: 1444, column: 13, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11155, file: !10921, line: 1444, column: 6)
!11174 = !DILocation(line: 1444, column: 6, scope: !11155)
!11175 = !DILocation(line: 1438, column: 31, scope: !11155)
!11176 = !DILocation(line: 1438, column: 119, scope: !11155)
!11177 = !DILocation(line: 1439, column: 7, scope: !11155)
!11178 = !DILocation(line: 1447, column: 22, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11173, file: !10921, line: 1445, column: 3)
!11180 = !DILocation(line: 1450, column: 14, scope: !11179)
!11181 = !DILocation(line: 1453, column: 14, scope: !11179)
!11182 = !DILocation(line: 1454, column: 3, scope: !11179)
!11183 = !DILocation(line: 1457, column: 3, scope: !11155)
!11184 = distinct !DISubprogram(name: "FLASH_OB_BORConfig", scope: !10921, file: !10921, line: 1022, type: !11123, scopeLine: 1023, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11185)
!11185 = !{!11186, !11187, !11188, !11189}
!11186 = !DILocalVariable(name: "OB_BOR", arg: 1, scope: !11184, file: !10921, line: 1022, type: !167)
!11187 = !DILocalVariable(name: "status", scope: !11184, file: !10921, line: 1024, type: !8445)
!11188 = !DILocalVariable(name: "tmp", scope: !11184, file: !10921, line: 1025, type: !121)
!11189 = !DILocalVariable(name: "tmp1", scope: !11184, file: !10921, line: 1025, type: !121)
!11190 = !DILocation(line: 0, scope: !11184)
!11191 = !DILocation(line: 1031, column: 14, scope: !11184)
!11192 = !DILocation(line: 1031, column: 19, scope: !11184)
!11193 = !DILocation(line: 1034, column: 22, scope: !11184)
!11194 = !DILocation(line: 1034, column: 29, scope: !11184)
!11195 = !DILocation(line: 1038, column: 12, scope: !11184)
!11196 = !DILocation(line: 1040, column: 13, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11184, file: !10921, line: 1040, column: 6)
!11198 = !DILocation(line: 1040, column: 6, scope: !11184)
!11199 = !DILocation(line: 1034, column: 19, scope: !11184)
!11200 = !DILocation(line: 1034, column: 38, scope: !11184)
!11201 = !DILocation(line: 1035, column: 7, scope: !11184)
!11202 = !DILocation(line: 1043, column: 22, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11197, file: !10921, line: 1041, column: 3)
!11204 = !DILocation(line: 1046, column: 14, scope: !11203)
!11205 = !DILocation(line: 1049, column: 14, scope: !11203)
!11206 = !DILocation(line: 1050, column: 3, scope: !11203)
!11207 = !DILocation(line: 1053, column: 3, scope: !11184)
!11208 = distinct !DISubprogram(name: "FLASH_OB_WRPConfigWRP1OrPCROP1", scope: !10921, file: !10921, line: 1237, type: !11209, scopeLine: 1238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11211)
!11209 = !DISubroutineType(types: !11210)
!11210 = !{null, !121, !11100}
!11211 = !{!11212, !11213, !11214, !11215, !11216, !11217}
!11212 = !DILocalVariable(name: "WRP1OrPCROP1", arg: 1, scope: !11208, file: !10921, line: 1237, type: !121)
!11213 = !DILocalVariable(name: "NewState", arg: 2, scope: !11208, file: !10921, line: 1237, type: !11100)
!11214 = !DILocalVariable(name: "wrp01data", scope: !11208, file: !10921, line: 1239, type: !121)
!11215 = !DILocalVariable(name: "wrp23data", scope: !11208, file: !10921, line: 1239, type: !121)
!11216 = !DILocalVariable(name: "tmp1", scope: !11208, file: !10921, line: 1241, type: !121)
!11217 = !DILocalVariable(name: "tmp2", scope: !11208, file: !10921, line: 1241, type: !121)
!11218 = !DILocation(line: 0, scope: !11208)
!11219 = !DILocation(line: 1247, column: 16, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11208, file: !10921, line: 1247, column: 7)
!11221 = !DILocation(line: 1247, column: 7, scope: !11208)
!11222 = !DILocation(line: 1249, column: 65, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11220, file: !10921, line: 1248, column: 3)
!11224 = !DILocation(line: 1249, column: 59, scope: !11223)
!11225 = !DILocation(line: 1250, column: 60, scope: !11223)
!11226 = !DILocation(line: 1250, column: 72, scope: !11223)
!11227 = !DILocation(line: 1250, column: 17, scope: !11223)
!11228 = !DILocation(line: 1256, column: 3, scope: !11223)
!11229 = !DILocation(line: 1259, column: 28, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11220, file: !10921, line: 1258, column: 3)
!11231 = !DILocation(line: 1259, column: 64, scope: !11230)
!11232 = !DILocation(line: 1259, column: 42, scope: !11230)
!11233 = !DILocation(line: 1260, column: 61, scope: !11230)
!11234 = !DILocation(line: 1260, column: 73, scope: !11230)
!11235 = !DILocation(line: 1260, column: 67, scope: !11230)
!11236 = !DILocation(line: 0, scope: !11220)
!11237 = !DILocation(line: 1268, column: 1, scope: !11208)
!11238 = distinct !DISubprogram(name: "HAL_FLASHEx_OBGetConfig", scope: !10921, file: !10921, line: 488, type: !11239, scopeLine: 489, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11241)
!11239 = !DISubroutineType(types: !11240)
!11240 = !{null, !11026}
!11241 = !{!11242}
!11242 = !DILocalVariable(name: "pOBInit", arg: 1, scope: !11238, file: !10921, line: 488, type: !11026)
!11243 = !DILocation(line: 0, scope: !11238)
!11244 = !DILocation(line: 490, column: 12, scope: !11238)
!11245 = !DILocation(line: 490, column: 23, scope: !11238)
!11246 = !DILocation(line: 493, column: 47, scope: !11238)
!11247 = !DILocation(line: 493, column: 12, scope: !11238)
!11248 = !DILocation(line: 493, column: 27, scope: !11238)
!11249 = !DILocation(line: 523, column: 25, scope: !11238)
!11250 = !DILocation(line: 523, column: 12, scope: !11238)
!11251 = !DILocation(line: 523, column: 23, scope: !11238)
!11252 = !DILocation(line: 526, column: 25, scope: !11238)
!11253 = !DILocation(line: 526, column: 12, scope: !11238)
!11254 = !DILocation(line: 526, column: 23, scope: !11238)
!11255 = !DILocation(line: 529, column: 25, scope: !11238)
!11256 = !DILocation(line: 529, column: 12, scope: !11238)
!11257 = !DILocation(line: 529, column: 23, scope: !11238)
!11258 = !DILocation(line: 530, column: 1, scope: !11238)
!11259 = distinct !DISubprogram(name: "FLASH_OB_GetRDP", scope: !10921, file: !10921, line: 1074, type: !11260, scopeLine: 1075, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11262)
!11260 = !DISubroutineType(types: !11261)
!11261 = !{!167}
!11262 = !{!11263}
!11263 = !DILocalVariable(name: "rdp_level", scope: !11259, file: !10921, line: 1076, type: !167)
!11264 = !DILocation(line: 1076, column: 40, scope: !11259)
!11265 = !DILocation(line: 0, scope: !11259)
!11266 = !DILocation(line: 1078, column: 37, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11259, file: !10921, line: 1078, column: 7)
!11268 = !DILocation(line: 1086, column: 1, scope: !11259)
!11269 = distinct !DISubprogram(name: "FLASH_OB_GetUser", scope: !10921, file: !10921, line: 1060, type: !11260, scopeLine: 1061, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !335)
!11270 = !DILocation(line: 1063, column: 28, scope: !11269)
!11271 = !DILocation(line: 1063, column: 100, scope: !11269)
!11272 = !DILocation(line: 1063, column: 10, scope: !11269)
!11273 = !DILocation(line: 1063, column: 3, scope: !11269)
!11274 = distinct !DISubprogram(name: "FLASH_OB_GetBOR", scope: !10921, file: !10921, line: 1092, type: !11260, scopeLine: 1093, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !335)
!11275 = !DILocation(line: 1095, column: 28, scope: !11274)
!11276 = !DILocation(line: 1095, column: 63, scope: !11274)
!11277 = !DILocation(line: 1095, column: 10, scope: !11274)
!11278 = !DILocation(line: 1095, column: 3, scope: !11274)
!11279 = distinct !DISubprogram(name: "HAL_FLASHEx_AdvOBProgram", scope: !10921, file: !10921, line: 542, type: !11280, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11289)
!11280 = !DISubroutineType(types: !11281)
!11281 = !{!8445, !11282}
!11282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11283, size: 32)
!11283 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_AdvOBProgramInitTypeDef", file: !10926, line: 293, baseType: !11284)
!11284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10926, line: 271, size: 96, elements: !11285)
!11285 = !{!11286, !11287, !11288}
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "OptionType", scope: !11284, file: !10926, line: 273, baseType: !121, size: 32)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "PCROPState", scope: !11284, file: !10926, line: 277, baseType: !121, size: 32, offset: 32)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "PCROPSector0To31", scope: !11284, file: !10926, line: 280, baseType: !121, size: 32, offset: 64)
!11289 = !{!11290, !11291}
!11290 = !DILocalVariable(name: "pAdvOBInit", arg: 1, scope: !11279, file: !10921, line: 542, type: !11282)
!11291 = !DILocalVariable(name: "status", scope: !11279, file: !10921, line: 544, type: !8445)
!11292 = !DILocation(line: 0, scope: !11279)
!11293 = !DILocation(line: 552, column: 20, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11279, file: !10921, line: 552, column: 7)
!11295 = !DILocation(line: 552, column: 31, scope: !11294)
!11296 = !DILocation(line: 552, column: 51, scope: !11294)
!11297 = !DILocation(line: 552, column: 7, scope: !11279)
!11298 = !DILocation(line: 556, column: 21, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !10921, line: 556, column: 9)
!11300 = distinct !DILexicalBlock(scope: !11294, file: !10921, line: 553, column: 3)
!11301 = !DILocation(line: 556, column: 32, scope: !11299)
!11302 = !DILocation(line: 556, column: 9, scope: !11300)
!11303 = !DILocation(line: 559, column: 16, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11299, file: !10921, line: 557, column: 5)
!11305 = !DILocation(line: 560, column: 18, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11304, file: !10921, line: 560, column: 11)
!11307 = !DILocation(line: 560, column: 11, scope: !11304)
!11308 = !DILocation(line: 568, column: 16, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11299, file: !10921, line: 566, column: 5)
!11310 = !DILocation(line: 569, column: 18, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11309, file: !10921, line: 569, column: 11)
!11312 = !DILocation(line: 569, column: 11, scope: !11309)
!11313 = !DILocation(line: 588, column: 3, scope: !11279)
!11314 = !DILocation(line: 589, column: 1, scope: !11279)
!11315 = distinct !DISubprogram(name: "FLASH_OB_PCROPConfig", scope: !10921, file: !10921, line: 1183, type: !11316, scopeLine: 1184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11318)
!11316 = !DISubroutineType(types: !11317)
!11317 = !{!8445, !11282, !11100}
!11318 = !{!11319, !11320, !11321, !11322}
!11319 = !DILocalVariable(name: "pAdvOBInit", arg: 1, scope: !11315, file: !10921, line: 1183, type: !11282)
!11320 = !DILocalVariable(name: "NewState", arg: 2, scope: !11315, file: !10921, line: 1183, type: !11100)
!11321 = !DILocalVariable(name: "status", scope: !11315, file: !10921, line: 1185, type: !8445)
!11322 = !DILocalVariable(name: "pcropstate", scope: !11315, file: !10921, line: 1186, type: !11100)
!11323 = !DILocation(line: 0, scope: !11315)
!11324 = !DILocation(line: 1189, column: 12, scope: !11315)
!11325 = !DILocation(line: 1192, column: 16, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11315, file: !10921, line: 1192, column: 7)
!11327 = !DILocation(line: 1192, column: 7, scope: !11315)
!11328 = !DILocation(line: 1197, column: 13, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11315, file: !10921, line: 1197, column: 6)
!11330 = !DILocation(line: 1197, column: 6, scope: !11315)
!11331 = !DILocation(line: 1200, column: 22, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11329, file: !10921, line: 1198, column: 3)
!11333 = !DILocation(line: 1204, column: 21, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11332, file: !10921, line: 1204, column: 9)
!11335 = !DILocation(line: 1204, column: 38, scope: !11334)
!11336 = !DILocation(line: 1204, column: 9, scope: !11332)
!11337 = !DILocation(line: 1206, column: 7, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !10921, line: 1205, column: 5)
!11339 = !DILocation(line: 1207, column: 5, scope: !11338)
!11340 = !DILocation(line: 1221, column: 14, scope: !11332)
!11341 = !DILocation(line: 1222, column: 3, scope: !11332)
!11342 = !DILocation(line: 1225, column: 3, scope: !11315)
!11343 = distinct !DISubprogram(name: "HAL_FLASHEx_AdvOBGetConfig", scope: !10921, file: !10921, line: 599, type: !11344, scopeLine: 600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11346)
!11344 = !DISubroutineType(types: !11345)
!11345 = !{null, !11282}
!11346 = !{!11347}
!11347 = !DILocalVariable(name: "pAdvOBInit", arg: 1, scope: !11343, file: !10921, line: 599, type: !11282)
!11348 = !DILocation(line: 0, scope: !11343)
!11349 = !DILocation(line: 601, column: 15, scope: !11343)
!11350 = !DILocation(line: 605, column: 26, scope: !11343)
!11351 = !DILocation(line: 608, column: 36, scope: !11343)
!11352 = !DILocation(line: 608, column: 40, scope: !11343)
!11353 = !DILocalVariable(name: "value", arg: 1, scope: !11354, file: !5341, line: 373, type: !121)
!11354 = distinct !DISubprogram(name: "__RBIT", scope: !5341, file: !5341, line: 373, type: !6309, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11355)
!11355 = !{!11353, !11356}
!11356 = !DILocalVariable(name: "result", scope: !11354, file: !5341, line: 375, type: !121)
!11357 = !DILocation(line: 0, scope: !11354, inlinedAt: !11358)
!11358 = distinct !DILocation(line: 608, column: 63, scope: !11343)
!11359 = !DILocation(line: 380, column: 4, scope: !11354, inlinedAt: !11358)
!11360 = !{i64 982585}
!11361 = !DILocalVariable(name: "value", arg: 1, scope: !11362, file: !5341, line: 403, type: !121)
!11362 = distinct !DISubprogram(name: "__CLZ", scope: !5341, file: !5341, line: 403, type: !8048, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11363)
!11363 = !{!11361}
!11364 = !DILocation(line: 0, scope: !11362, inlinedAt: !11365)
!11365 = distinct !DILocation(line: 608, column: 63, scope: !11343)
!11366 = !DILocation(line: 414, column: 7, scope: !11362, inlinedAt: !11365)
!11367 = !DILocation(line: 608, column: 60, scope: !11343)
!11368 = !DILocation(line: 608, column: 15, scope: !11343)
!11369 = !DILocation(line: 608, column: 26, scope: !11343)
!11370 = !DILocation(line: 611, column: 41, scope: !11343)
!11371 = !DILocation(line: 611, column: 15, scope: !11343)
!11372 = !DILocation(line: 611, column: 32, scope: !11343)
!11373 = !DILocation(line: 629, column: 1, scope: !11343)
!11374 = distinct !DISubprogram(name: "HAL_FLASHEx_OB_SelectPCROP", scope: !10921, file: !10921, line: 642, type: !9706, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11375)
!11375 = !{!11376, !11377, !11378, !11379, !11380}
!11376 = !DILocalVariable(name: "status", scope: !11374, file: !10921, line: 644, type: !8445)
!11377 = !DILocalVariable(name: "tmp1", scope: !11374, file: !10921, line: 645, type: !278)
!11378 = !DILocalVariable(name: "tmp2", scope: !11374, file: !10921, line: 646, type: !121)
!11379 = !DILocalVariable(name: "optiontmp", scope: !11374, file: !10921, line: 647, type: !167)
!11380 = !DILocalVariable(name: "optiontmp2", scope: !11374, file: !10921, line: 648, type: !278)
!11381 = !DILocation(line: 0, scope: !11374)
!11382 = !DILocation(line: 650, column: 12, scope: !11374)
!11383 = !DILocation(line: 653, column: 26, scope: !11374)
!11384 = !DILocation(line: 662, column: 13, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11374, file: !10921, line: 662, column: 6)
!11386 = !DILocation(line: 662, column: 6, scope: !11374)
!11387 = !DILocation(line: 656, column: 47, scope: !11374)
!11388 = !DILocation(line: 656, column: 45, scope: !11374)
!11389 = !DILocation(line: 660, column: 50, scope: !11374)
!11390 = !DILocation(line: 660, column: 59, scope: !11374)
!11391 = !DILocation(line: 665, column: 22, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11385, file: !10921, line: 663, column: 3)
!11393 = !DILocation(line: 668, column: 13, scope: !11392)
!11394 = !DILocation(line: 671, column: 14, scope: !11392)
!11395 = !DILocation(line: 672, column: 3, scope: !11392)
!11396 = !DILocation(line: 675, column: 3, scope: !11374)
!11397 = distinct !DISubprogram(name: "HAL_FLASHEx_OB_DeSelectPCROP", scope: !10921, file: !10921, line: 685, type: !9706, scopeLine: 686, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11398)
!11398 = !{!11399, !11400, !11401, !11402, !11403}
!11399 = !DILocalVariable(name: "status", scope: !11397, file: !10921, line: 687, type: !8445)
!11400 = !DILocalVariable(name: "tmp1", scope: !11397, file: !10921, line: 688, type: !278)
!11401 = !DILocalVariable(name: "tmp2", scope: !11397, file: !10921, line: 689, type: !121)
!11402 = !DILocalVariable(name: "optiontmp", scope: !11397, file: !10921, line: 690, type: !167)
!11403 = !DILocalVariable(name: "optiontmp2", scope: !11397, file: !10921, line: 691, type: !278)
!11404 = !DILocation(line: 0, scope: !11397)
!11405 = !DILocation(line: 693, column: 12, scope: !11397)
!11406 = !DILocation(line: 696, column: 26, scope: !11397)
!11407 = !DILocation(line: 705, column: 13, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11397, file: !10921, line: 705, column: 6)
!11409 = !DILocation(line: 705, column: 6, scope: !11397)
!11410 = !DILocation(line: 702, column: 10, scope: !11397)
!11411 = !DILocation(line: 703, column: 50, scope: !11397)
!11412 = !DILocation(line: 703, column: 59, scope: !11397)
!11413 = !DILocation(line: 708, column: 22, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11408, file: !10921, line: 706, column: 3)
!11415 = !DILocation(line: 711, column: 13, scope: !11414)
!11416 = !DILocation(line: 714, column: 14, scope: !11414)
!11417 = !DILocation(line: 715, column: 3, scope: !11414)
!11418 = !DILocation(line: 718, column: 3, scope: !11397)
!11419 = distinct !DISubprogram(name: "HAL_FLASHEx_DATAEEPROM_Unlock", scope: !10921, file: !10921, line: 751, type: !9706, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !335)
!11420 = !DILocation(line: 753, column: 14, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11419, file: !10921, line: 753, column: 6)
!11422 = !DILocation(line: 753, column: 19, scope: !11421)
!11423 = !DILocation(line: 753, column: 40, scope: !11421)
!11424 = !DILocation(line: 753, column: 6, scope: !11419)
!11425 = !DILocation(line: 756, column: 19, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11421, file: !10921, line: 754, column: 3)
!11427 = !DILocation(line: 757, column: 19, scope: !11426)
!11428 = !DILocation(line: 763, column: 3, scope: !11419)
!11429 = !DILocation(line: 0, scope: !11419)
!11430 = !DILocation(line: 764, column: 1, scope: !11419)
!11431 = distinct !DISubprogram(name: "HAL_FLASHEx_DATAEEPROM_Lock", scope: !10921, file: !10921, line: 770, type: !9706, scopeLine: 771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !335)
!11432 = !DILocation(line: 773, column: 3, scope: !11431)
!11433 = !DILocation(line: 775, column: 3, scope: !11431)
!11434 = distinct !DISubprogram(name: "HAL_FLASHEx_DATAEEPROM_Erase", scope: !10921, file: !10921, line: 790, type: !11435, scopeLine: 791, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!8445, !121, !121}
!11437 = !{!11438, !11439, !11440}
!11438 = !DILocalVariable(name: "TypeErase", arg: 1, scope: !11434, file: !10921, line: 790, type: !121)
!11439 = !DILocalVariable(name: "Address", arg: 2, scope: !11434, file: !10921, line: 790, type: !121)
!11440 = !DILocalVariable(name: "status", scope: !11434, file: !10921, line: 792, type: !8445)
!11441 = !DILocation(line: 0, scope: !11434)
!11442 = !DILocation(line: 799, column: 12, scope: !11434)
!11443 = !DILocation(line: 801, column: 13, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11434, file: !10921, line: 801, column: 6)
!11445 = !DILocation(line: 801, column: 6, scope: !11434)
!11446 = !DILocation(line: 804, column: 22, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11444, file: !10921, line: 802, column: 3)
!11448 = !DILocation(line: 806, column: 8, scope: !11447)
!11449 = !DILocation(line: 809, column: 8, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !10921, line: 807, column: 5)
!11451 = distinct !DILexicalBlock(scope: !11447, file: !10921, line: 806, column: 8)
!11452 = !DILocation(line: 809, column: 34, scope: !11450)
!11453 = !DILocation(line: 812, column: 8, scope: !11447)
!11454 = !DILocation(line: 815, column: 8, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !10921, line: 813, column: 5)
!11456 = distinct !DILexicalBlock(scope: !11447, file: !10921, line: 812, column: 8)
!11457 = !DILocation(line: 815, column: 34, scope: !11455)
!11458 = !DILocation(line: 818, column: 8, scope: !11447)
!11459 = !DILocation(line: 821, column: 8, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !10921, line: 819, column: 5)
!11461 = distinct !DILexicalBlock(scope: !11447, file: !10921, line: 818, column: 8)
!11462 = !DILocation(line: 821, column: 33, scope: !11460)
!11463 = !DILocation(line: 822, column: 5, scope: !11460)
!11464 = !DILocation(line: 824, column: 14, scope: !11447)
!11465 = !DILocation(line: 825, column: 3, scope: !11447)
!11466 = !DILocation(line: 828, column: 3, scope: !11434)
!11467 = distinct !DISubprogram(name: "HAL_FLASHEx_DATAEEPROM_Program", scope: !10921, file: !10921, line: 848, type: !10639, scopeLine: 849, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11468)
!11468 = !{!11469, !11470, !11471, !11472}
!11469 = !DILocalVariable(name: "TypeProgram", arg: 1, scope: !11467, file: !10921, line: 848, type: !121)
!11470 = !DILocalVariable(name: "Address", arg: 2, scope: !11467, file: !10921, line: 848, type: !121)
!11471 = !DILocalVariable(name: "Data", arg: 3, scope: !11467, file: !10921, line: 848, type: !121)
!11472 = !DILocalVariable(name: "status", scope: !11467, file: !10921, line: 850, type: !8445)
!11473 = !DILocation(line: 0, scope: !11467)
!11474 = !DILocation(line: 853, column: 3, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !10921, line: 853, column: 3)
!11476 = distinct !DILexicalBlock(scope: !11467, file: !10921, line: 853, column: 3)
!11477 = !DILocation(line: 853, column: 3, scope: !11476)
!11478 = !DILocation(line: 853, column: 3, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11475, file: !10921, line: 853, column: 3)
!11480 = !DILocation(line: 859, column: 12, scope: !11467)
!11481 = !DILocation(line: 861, column: 13, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11467, file: !10921, line: 861, column: 6)
!11483 = !DILocation(line: 861, column: 6, scope: !11467)
!11484 = !DILocation(line: 864, column: 22, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11482, file: !10921, line: 862, column: 3)
!11486 = !DILocation(line: 866, column: 8, scope: !11485)
!11487 = !DILocation(line: 869, column: 16, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !10921, line: 867, column: 5)
!11489 = distinct !DILexicalBlock(scope: !11485, file: !10921, line: 866, column: 8)
!11490 = !DILocation(line: 870, column: 5, scope: !11488)
!11491 = !DILocation(line: 874, column: 58, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !10921, line: 872, column: 5)
!11493 = distinct !DILexicalBlock(scope: !11489, file: !10921, line: 871, column: 13)
!11494 = !DILocation(line: 874, column: 16, scope: !11492)
!11495 = !DILocation(line: 875, column: 5, scope: !11492)
!11496 = !DILocation(line: 879, column: 54, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !10921, line: 877, column: 5)
!11498 = distinct !DILexicalBlock(scope: !11493, file: !10921, line: 876, column: 13)
!11499 = !DILocation(line: 879, column: 16, scope: !11497)
!11500 = !DILocation(line: 880, column: 5, scope: !11497)
!11501 = !DILocation(line: 884, column: 58, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !10921, line: 882, column: 5)
!11503 = distinct !DILexicalBlock(scope: !11498, file: !10921, line: 881, column: 13)
!11504 = !DILocation(line: 884, column: 16, scope: !11502)
!11505 = !DILocation(line: 885, column: 5, scope: !11502)
!11506 = !DILocation(line: 889, column: 62, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !10921, line: 887, column: 5)
!11508 = distinct !DILexicalBlock(scope: !11503, file: !10921, line: 886, column: 13)
!11509 = !DILocation(line: 889, column: 16, scope: !11507)
!11510 = !DILocation(line: 890, column: 5, scope: !11507)
!11511 = !DILocation(line: 894, column: 16, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !10921, line: 892, column: 5)
!11513 = distinct !DILexicalBlock(scope: !11508, file: !10921, line: 891, column: 13)
!11514 = !DILocation(line: 895, column: 5, scope: !11512)
!11515 = !DILocation(line: 904, column: 3, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11467, file: !10921, line: 904, column: 3)
!11517 = !DILocation(line: 906, column: 3, scope: !11467)
!11518 = !DILocation(line: 907, column: 1, scope: !11467)
!11519 = distinct !DISubprogram(name: "FLASH_DATAEEPROM_ProgramWord", scope: !10921, file: !10921, line: 1800, type: !11435, scopeLine: 1801, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11520)
!11520 = !{!11521, !11522, !11523}
!11521 = !DILocalVariable(name: "Address", arg: 1, scope: !11519, file: !10921, line: 1800, type: !121)
!11522 = !DILocalVariable(name: "Data", arg: 2, scope: !11519, file: !10921, line: 1800, type: !121)
!11523 = !DILocalVariable(name: "status", scope: !11519, file: !10921, line: 1802, type: !8445)
!11524 = !DILocation(line: 0, scope: !11519)
!11525 = !DILocation(line: 1808, column: 12, scope: !11519)
!11526 = !DILocation(line: 1810, column: 13, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11519, file: !10921, line: 1810, column: 6)
!11528 = !DILocation(line: 1810, column: 6, scope: !11519)
!11529 = !DILocation(line: 1812, column: 6, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11527, file: !10921, line: 1811, column: 3)
!11531 = !DILocation(line: 1812, column: 31, scope: !11530)
!11532 = !DILocation(line: 1815, column: 14, scope: !11530)
!11533 = !DILocation(line: 1816, column: 3, scope: !11530)
!11534 = !DILocation(line: 1818, column: 3, scope: !11519)
!11535 = distinct !DISubprogram(name: "FLASH_DATAEEPROM_ProgramHalfWord", scope: !10921, file: !10921, line: 1739, type: !11536, scopeLine: 1740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11538)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{!8445, !121, !278}
!11538 = !{!11539, !11540, !11541}
!11539 = !DILocalVariable(name: "Address", arg: 1, scope: !11535, file: !10921, line: 1739, type: !121)
!11540 = !DILocalVariable(name: "Data", arg: 2, scope: !11535, file: !10921, line: 1739, type: !278)
!11541 = !DILocalVariable(name: "status", scope: !11535, file: !10921, line: 1741, type: !8445)
!11542 = !DILocation(line: 0, scope: !11535)
!11543 = !DILocation(line: 1750, column: 12, scope: !11535)
!11544 = !DILocation(line: 1752, column: 13, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11535, file: !10921, line: 1752, column: 6)
!11546 = !DILocation(line: 1752, column: 6, scope: !11535)
!11547 = !DILocation(line: 1784, column: 6, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11545, file: !10921, line: 1753, column: 3)
!11549 = !DILocation(line: 1784, column: 31, scope: !11548)
!11550 = !DILocation(line: 1787, column: 14, scope: !11548)
!11551 = !DILocation(line: 1789, column: 3, scope: !11548)
!11552 = !DILocation(line: 1791, column: 3, scope: !11535)
!11553 = distinct !DISubprogram(name: "FLASH_DATAEEPROM_ProgramByte", scope: !10921, file: !10921, line: 1685, type: !11554, scopeLine: 1686, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11556)
!11554 = !DISubroutineType(types: !11555)
!11555 = !{!8445, !121, !167}
!11556 = !{!11557, !11558, !11559}
!11557 = !DILocalVariable(name: "Address", arg: 1, scope: !11553, file: !10921, line: 1685, type: !121)
!11558 = !DILocalVariable(name: "Data", arg: 2, scope: !11553, file: !10921, line: 1685, type: !167)
!11559 = !DILocalVariable(name: "status", scope: !11553, file: !10921, line: 1687, type: !8445)
!11560 = !DILocation(line: 0, scope: !11553)
!11561 = !DILocation(line: 1696, column: 12, scope: !11553)
!11562 = !DILocation(line: 1698, column: 13, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11553, file: !10921, line: 1698, column: 6)
!11564 = !DILocation(line: 1698, column: 6, scope: !11553)
!11565 = !DILocation(line: 1723, column: 6, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11563, file: !10921, line: 1699, column: 3)
!11567 = !DILocation(line: 1723, column: 30, scope: !11566)
!11568 = !DILocation(line: 1726, column: 14, scope: !11566)
!11569 = !DILocation(line: 1728, column: 3, scope: !11566)
!11570 = !DILocation(line: 1730, column: 3, scope: !11553)
!11571 = distinct !DISubprogram(name: "FLASH_DATAEEPROM_FastProgramByte", scope: !10921, file: !10921, line: 1526, type: !11554, scopeLine: 1527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11572)
!11572 = !{!11573, !11574, !11575}
!11573 = !DILocalVariable(name: "Address", arg: 1, scope: !11571, file: !10921, line: 1526, type: !121)
!11574 = !DILocalVariable(name: "Data", arg: 2, scope: !11571, file: !10921, line: 1526, type: !167)
!11575 = !DILocalVariable(name: "status", scope: !11571, file: !10921, line: 1528, type: !8445)
!11576 = !DILocation(line: 0, scope: !11571)
!11577 = !DILocation(line: 1537, column: 12, scope: !11571)
!11578 = !DILocation(line: 1539, column: 13, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11571, file: !10921, line: 1539, column: 6)
!11580 = !DILocation(line: 1539, column: 6, scope: !11571)
!11581 = !DILocation(line: 1542, column: 5, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11579, file: !10921, line: 1540, column: 3)
!11583 = !DILocation(line: 1569, column: 6, scope: !11582)
!11584 = !DILocation(line: 1569, column: 30, scope: !11582)
!11585 = !DILocation(line: 1572, column: 14, scope: !11582)
!11586 = !DILocation(line: 1574, column: 3, scope: !11582)
!11587 = !DILocation(line: 1576, column: 3, scope: !11571)
!11588 = distinct !DISubprogram(name: "FLASH_DATAEEPROM_FastProgramHalfWord", scope: !10921, file: !10921, line: 1586, type: !11536, scopeLine: 1587, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11589)
!11589 = !{!11590, !11591, !11592}
!11590 = !DILocalVariable(name: "Address", arg: 1, scope: !11588, file: !10921, line: 1586, type: !121)
!11591 = !DILocalVariable(name: "Data", arg: 2, scope: !11588, file: !10921, line: 1586, type: !278)
!11592 = !DILocalVariable(name: "status", scope: !11588, file: !10921, line: 1588, type: !8445)
!11593 = !DILocation(line: 0, scope: !11588)
!11594 = !DILocation(line: 1597, column: 12, scope: !11588)
!11595 = !DILocation(line: 1599, column: 13, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11588, file: !10921, line: 1599, column: 6)
!11597 = !DILocation(line: 1599, column: 6, scope: !11588)
!11598 = !DILocation(line: 1602, column: 5, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11596, file: !10921, line: 1600, column: 3)
!11600 = !DILocation(line: 1637, column: 6, scope: !11599)
!11601 = !DILocation(line: 1637, column: 31, scope: !11599)
!11602 = !DILocation(line: 1640, column: 14, scope: !11599)
!11603 = !DILocation(line: 1642, column: 3, scope: !11599)
!11604 = !DILocation(line: 1644, column: 3, scope: !11588)
!11605 = distinct !DISubprogram(name: "FLASH_DATAEEPROM_FastProgramWord", scope: !10921, file: !10921, line: 1654, type: !11435, scopeLine: 1655, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !11606)
!11606 = !{!11607, !11608, !11609}
!11607 = !DILocalVariable(name: "Address", arg: 1, scope: !11605, file: !10921, line: 1654, type: !121)
!11608 = !DILocalVariable(name: "Data", arg: 2, scope: !11605, file: !10921, line: 1654, type: !121)
!11609 = !DILocalVariable(name: "status", scope: !11605, file: !10921, line: 1656, type: !8445)
!11610 = !DILocation(line: 0, scope: !11605)
!11611 = !DILocation(line: 1662, column: 12, scope: !11605)
!11612 = !DILocation(line: 1664, column: 13, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11605, file: !10921, line: 1664, column: 6)
!11614 = !DILocation(line: 1664, column: 6, scope: !11605)
!11615 = !DILocation(line: 1667, column: 5, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11613, file: !10921, line: 1665, column: 3)
!11617 = !DILocation(line: 1670, column: 6, scope: !11616)
!11618 = !DILocation(line: 1670, column: 31, scope: !11616)
!11619 = !DILocation(line: 1673, column: 14, scope: !11616)
!11620 = !DILocation(line: 1674, column: 3, scope: !11616)
!11621 = !DILocation(line: 1676, column: 3, scope: !11605)
!11622 = distinct !DISubprogram(name: "HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram", scope: !10921, file: !10921, line: 913, type: !3124, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !335)
!11623 = !DILocation(line: 915, column: 3, scope: !11622)
!11624 = !DILocation(line: 916, column: 1, scope: !11622)
!11625 = distinct !DISubprogram(name: "HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram", scope: !10921, file: !10921, line: 922, type: !3124, scopeLine: 923, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3008, retainedNodes: !335)
!11626 = !DILocation(line: 924, column: 3, scope: !11625)
!11627 = !DILocation(line: 925, column: 1, scope: !11625)
!11628 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11629, file: !11629, line: 147, type: !5075, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11630)
!11629 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11630 = !{!11631}
!11631 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11628, file: !11629, line: 147, type: !121)
!11632 = !DILocation(line: 0, scope: !11628)
!11633 = !DILocation(line: 150, column: 3, scope: !11628)
!11634 = !DILocation(line: 151, column: 1, scope: !11628)
!11635 = distinct !DISubprogram(name: "LL_InitTick", scope: !11636, file: !11636, line: 222, type: !8031, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11637)
!11636 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11637 = !{!11638, !11639}
!11638 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11635, file: !11636, line: 222, type: !121)
!11639 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11635, file: !11636, line: 222, type: !121)
!11640 = !DILocation(line: 0, scope: !11635)
!11641 = !DILocation(line: 225, column: 46, scope: !11635)
!11642 = !DILocation(line: 225, column: 55, scope: !11635)
!11643 = !DILocation(line: 225, column: 18, scope: !11635)
!11644 = !DILocation(line: 226, column: 18, scope: !11635)
!11645 = !DILocation(line: 227, column: 18, scope: !11635)
!11646 = !DILocation(line: 229, column: 1, scope: !11635)
!11647 = distinct !DISubprogram(name: "LL_mDelay", scope: !11629, file: !11629, line: 163, type: !5075, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11648)
!11648 = !{!11649, !11650, !11651}
!11649 = !DILocalVariable(name: "Delay", arg: 1, scope: !11647, file: !11629, line: 163, type: !121)
!11650 = !DILocalVariable(name: "tmp", scope: !11647, file: !11629, line: 165, type: !120)
!11651 = !DILocalVariable(name: "tmpDelay", scope: !11647, file: !11629, line: 166, type: !121)
!11652 = !DILocation(line: 0, scope: !11647)
!11653 = !DILocation(line: 165, column: 3, scope: !11647)
!11654 = !DILocation(line: 165, column: 18, scope: !11647)
!11655 = !DILocation(line: 165, column: 33, scope: !11647)
!11656 = !DILocation(line: 169, column: 10, scope: !11647)
!11657 = !DILocation(line: 172, column: 15, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11647, file: !11629, line: 172, column: 6)
!11659 = !DILocation(line: 177, column: 3, scope: !11647)
!11660 = !DILocation(line: 179, column: 18, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11662, file: !11629, line: 179, column: 8)
!11662 = distinct !DILexicalBlock(scope: !11647, file: !11629, line: 178, column: 3)
!11663 = !DILocation(line: 177, column: 19, scope: !11647)
!11664 = !DILocation(line: 184, column: 1, scope: !11647)
!11665 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11629, file: !11629, line: 227, type: !5075, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11666)
!11666 = !{!11667}
!11667 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11665, file: !11629, line: 227, type: !121)
!11668 = !DILocation(line: 0, scope: !11665)
!11669 = !DILocation(line: 230, column: 19, scope: !11665)
!11670 = !DILocation(line: 231, column: 1, scope: !11665)
!11671 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11629, file: !11629, line: 242, type: !11672, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11675)
!11672 = !DISubroutineType(types: !11673)
!11673 = !{!11674, !121}
!11674 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !732, line: 194, baseType: !731)
!11675 = !{!11676, !11677, !11678}
!11676 = !DILocalVariable(name: "Frequency", arg: 1, scope: !11671, file: !11629, line: 242, type: !121)
!11677 = !DILocalVariable(name: "status", scope: !11671, file: !11629, line: 244, type: !11674)
!11678 = !DILocalVariable(name: "latency", scope: !11671, file: !11629, line: 246, type: !121)
!11679 = !DILocation(line: 0, scope: !11671)
!11680 = !DILocation(line: 249, column: 25, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11671, file: !11629, line: 249, column: 7)
!11682 = !DILocation(line: 255, column: 9, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !11629, line: 255, column: 9)
!11684 = distinct !DILexicalBlock(scope: !11681, file: !11629, line: 254, column: 3)
!11685 = !DILocation(line: 255, column: 41, scope: !11683)
!11686 = !DILocation(line: 255, column: 9, scope: !11684)
!11687 = !DILocation(line: 257, column: 21, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11689, file: !11629, line: 257, column: 11)
!11689 = distinct !DILexicalBlock(scope: !11683, file: !11629, line: 256, column: 5)
!11690 = !DILocation(line: 284, column: 9, scope: !11684)
!11691 = !DILocation(line: 264, column: 14, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11683, file: !11629, line: 264, column: 14)
!11693 = !DILocation(line: 264, column: 46, scope: !11692)
!11694 = !DILocation(line: 264, column: 14, scope: !11683)
!11695 = !DILocation(line: 266, column: 21, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !11629, line: 266, column: 11)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !11629, line: 265, column: 5)
!11698 = !DILocation(line: 275, column: 21, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11700, file: !11629, line: 275, column: 11)
!11700 = distinct !DILexicalBlock(scope: !11692, file: !11629, line: 274, column: 5)
!11701 = !DILocation(line: 286, column: 7, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !11629, line: 285, column: 5)
!11703 = distinct !DILexicalBlock(scope: !11684, file: !11629, line: 284, column: 9)
!11704 = !DILocation(line: 287, column: 5, scope: !11702)
!11705 = !DILocation(line: 289, column: 5, scope: !11684)
!11706 = !DILocation(line: 293, column: 9, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11684, file: !11629, line: 293, column: 9)
!11708 = !DILocation(line: 293, column: 31, scope: !11707)
!11709 = !DILocation(line: 293, column: 9, scope: !11684)
!11710 = !DILocation(line: 298, column: 3, scope: !11671)
!11711 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5089, file: !5089, line: 285, type: !5097, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11712 = !DILocation(line: 287, column: 21, scope: !11711)
!11713 = !DILocation(line: 287, column: 3, scope: !11711)
!11714 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !8030, file: !8030, line: 1897, type: !3124, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11715 = !DILocation(line: 1899, column: 3, scope: !11714)
!11716 = !DILocation(line: 1900, column: 1, scope: !11714)
!11717 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !8030, file: !8030, line: 1843, type: !5075, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11718)
!11718 = !{!11719}
!11719 = !DILocalVariable(name: "Latency", arg: 1, scope: !11717, file: !8030, line: 1843, type: !121)
!11720 = !DILocation(line: 0, scope: !11717)
!11721 = !DILocation(line: 1845, column: 3, scope: !11717)
!11722 = !DILocation(line: 1846, column: 1, scope: !11717)
!11723 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !8030, file: !8030, line: 1855, type: !5097, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11724 = !DILocation(line: 1857, column: 21, scope: !11723)
!11725 = !DILocation(line: 1857, column: 3, scope: !11723)
!11726 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11629, file: !11629, line: 323, type: !11727, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11742)
!11727 = !DISubroutineType(types: !11728)
!11728 = !{!11674, !11729, !11735}
!11729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11730, size: 32)
!11730 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11636, line: 103, baseType: !11731)
!11731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11636, line: 90, size: 64, elements: !11732)
!11732 = !{!11733, !11734}
!11733 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !11731, file: !11636, line: 92, baseType: !121, size: 32)
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !11731, file: !11636, line: 98, baseType: !121, size: 32, offset: 32)
!11735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11736, size: 32)
!11736 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11636, line: 128, baseType: !11737)
!11737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11636, line: 108, size: 96, elements: !11738)
!11738 = !{!11739, !11740, !11741}
!11739 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11737, file: !11636, line: 110, baseType: !121, size: 32)
!11740 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11737, file: !11636, line: 116, baseType: !121, size: 32, offset: 32)
!11741 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11737, file: !11636, line: 122, baseType: !121, size: 32, offset: 64)
!11742 = !{!11743, !11744, !11745, !11746}
!11743 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11726, file: !11629, line: 323, type: !11729)
!11744 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11726, file: !11629, line: 324, type: !11735)
!11745 = !DILocalVariable(name: "status", scope: !11726, file: !11629, line: 326, type: !11674)
!11746 = !DILocalVariable(name: "pllfreq", scope: !11726, file: !11629, line: 327, type: !121)
!11747 = !DILocation(line: 0, scope: !11726)
!11748 = !DILocation(line: 330, column: 7, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11726, file: !11629, line: 330, column: 7)
!11750 = !DILocation(line: 330, column: 26, scope: !11749)
!11751 = !DILocation(line: 330, column: 7, scope: !11726)
!11752 = !DILocation(line: 333, column: 15, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11749, file: !11629, line: 331, column: 3)
!11754 = !DILocation(line: 336, column: 9, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11753, file: !11629, line: 336, column: 9)
!11756 = !DILocation(line: 336, column: 30, scope: !11755)
!11757 = !DILocation(line: 336, column: 9, scope: !11753)
!11758 = !DILocation(line: 338, column: 7, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11755, file: !11629, line: 337, column: 5)
!11760 = !DILocation(line: 339, column: 7, scope: !11759)
!11761 = !DILocation(line: 339, column: 14, scope: !11759)
!11762 = !DILocation(line: 339, column: 35, scope: !11759)
!11763 = distinct !{!11763, !11760, !11764}
!11764 = !DILocation(line: 342, column: 7, scope: !11759)
!11765 = !DILocation(line: 346, column: 76, scope: !11753)
!11766 = !DILocation(line: 346, column: 105, scope: !11753)
!11767 = !DILocation(line: 346, column: 5, scope: !11753)
!11768 = !DILocation(line: 349, column: 14, scope: !11753)
!11769 = !DILocation(line: 350, column: 3, scope: !11753)
!11770 = !DILocation(line: 0, scope: !11749)
!11771 = !DILocation(line: 357, column: 3, scope: !11726)
!11772 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11629, file: !11629, line: 487, type: !11773, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11775)
!11773 = !DISubroutineType(types: !11774)
!11774 = !{!11674}
!11775 = !{!11776}
!11776 = !DILocalVariable(name: "status", scope: !11772, file: !11629, line: 489, type: !11674)
!11777 = !DILocation(line: 0, scope: !11772)
!11778 = !DILocation(line: 492, column: 7, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11772, file: !11629, line: 492, column: 7)
!11780 = !DILocation(line: 492, column: 28, scope: !11779)
!11781 = !DILocation(line: 492, column: 7, scope: !11772)
!11782 = !DILocation(line: 498, column: 3, scope: !11772)
!11783 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11629, file: !11629, line: 457, type: !11784, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11786)
!11784 = !DISubroutineType(types: !11785)
!11785 = !{!121, !121, !11729}
!11786 = !{!11787, !11788, !11789}
!11787 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11783, file: !11629, line: 457, type: !121)
!11788 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11783, file: !11629, line: 457, type: !11729)
!11789 = !DILocalVariable(name: "pllfreq", scope: !11783, file: !11629, line: 459, type: !121)
!11790 = !DILocation(line: 0, scope: !11783)
!11791 = !DILocation(line: 470, column: 68, scope: !11783)
!11792 = !DILocation(line: 470, column: 75, scope: !11783)
!11793 = !DILocation(line: 470, column: 35, scope: !11783)
!11794 = !DILocation(line: 470, column: 34, scope: !11783)
!11795 = !DILocation(line: 470, column: 32, scope: !11783)
!11796 = !DILocation(line: 475, column: 46, scope: !11783)
!11797 = !DILocation(line: 475, column: 53, scope: !11783)
!11798 = !DILocation(line: 475, column: 76, scope: !11783)
!11799 = !DILocation(line: 475, column: 21, scope: !11783)
!11800 = !DILocation(line: 478, column: 3, scope: !11783)
!11801 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7382, file: !7382, line: 612, type: !5097, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11802 = !DILocation(line: 614, column: 12, scope: !11801)
!11803 = !DILocation(line: 614, column: 11, scope: !11801)
!11804 = !DILocation(line: 614, column: 3, scope: !11801)
!11805 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7382, file: !7382, line: 592, type: !3124, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11806 = !DILocation(line: 594, column: 3, scope: !11805)
!11807 = !DILocation(line: 595, column: 1, scope: !11805)
!11808 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7382, file: !7382, line: 1219, type: !7505, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11809)
!11809 = !{!11810, !11811, !11812}
!11810 = !DILocalVariable(name: "Source", arg: 1, scope: !11808, file: !7382, line: 1219, type: !121)
!11811 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !11808, file: !7382, line: 1219, type: !121)
!11812 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !11808, file: !7382, line: 1219, type: !121)
!11813 = !DILocation(line: 0, scope: !11808)
!11814 = !DILocation(line: 1221, column: 3, scope: !11808)
!11815 = !DILocation(line: 1222, column: 1, scope: !11808)
!11816 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11629, file: !11629, line: 510, type: !11817, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11819)
!11817 = !DISubroutineType(types: !11818)
!11818 = !{!11674, !121, !11735}
!11819 = !{!11820, !11821, !11822, !11823}
!11820 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11816, file: !11629, line: 510, type: !121)
!11821 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11816, file: !11629, line: 510, type: !11735)
!11822 = !DILocalVariable(name: "status", scope: !11816, file: !11629, line: 512, type: !11674)
!11823 = !DILocalVariable(name: "hclk_frequency", scope: !11816, file: !11629, line: 513, type: !121)
!11824 = !DILocation(line: 0, scope: !11816)
!11825 = !DILocation(line: 520, column: 20, scope: !11816)
!11826 = !DILocation(line: 523, column: 7, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11816, file: !11629, line: 523, column: 7)
!11828 = !DILocation(line: 523, column: 23, scope: !11827)
!11829 = !DILocation(line: 523, column: 7, scope: !11816)
!11830 = !DILocation(line: 526, column: 14, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11827, file: !11629, line: 524, column: 3)
!11832 = !DILocation(line: 530, column: 14, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11816, file: !11629, line: 530, column: 7)
!11834 = !DILocation(line: 530, column: 7, scope: !11816)
!11835 = !DILocation(line: 533, column: 5, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11833, file: !11629, line: 531, column: 3)
!11837 = !DILocation(line: 534, column: 5, scope: !11836)
!11838 = !DILocation(line: 534, column: 12, scope: !11836)
!11839 = !DILocation(line: 534, column: 33, scope: !11836)
!11840 = distinct !{!11840, !11837, !11841}
!11841 = !DILocation(line: 537, column: 5, scope: !11836)
!11842 = !DILocation(line: 540, column: 49, scope: !11836)
!11843 = !DILocation(line: 540, column: 5, scope: !11836)
!11844 = !DILocation(line: 541, column: 5, scope: !11836)
!11845 = !DILocation(line: 542, column: 5, scope: !11836)
!11846 = !DILocation(line: 542, column: 12, scope: !11836)
!11847 = !DILocation(line: 542, column: 37, scope: !11836)
!11848 = distinct !{!11848, !11845, !11849}
!11849 = !DILocation(line: 545, column: 5, scope: !11836)
!11850 = !DILocation(line: 548, column: 50, scope: !11836)
!11851 = !DILocation(line: 548, column: 5, scope: !11836)
!11852 = !DILocation(line: 549, column: 50, scope: !11836)
!11853 = !DILocation(line: 549, column: 5, scope: !11836)
!11854 = !DILocation(line: 550, column: 3, scope: !11836)
!11855 = !DILocation(line: 553, column: 7, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11816, file: !11629, line: 553, column: 7)
!11857 = !DILocation(line: 553, column: 23, scope: !11856)
!11858 = !DILocation(line: 553, column: 7, scope: !11816)
!11859 = !DILocation(line: 556, column: 14, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11856, file: !11629, line: 554, column: 3)
!11861 = !DILocation(line: 557, column: 3, scope: !11860)
!11862 = !DILocation(line: 560, column: 14, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11816, file: !11629, line: 560, column: 7)
!11864 = !DILocation(line: 560, column: 7, scope: !11816)
!11865 = !DILocation(line: 562, column: 5, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11863, file: !11629, line: 561, column: 3)
!11867 = !DILocation(line: 563, column: 3, scope: !11866)
!11868 = !DILocation(line: 565, column: 3, scope: !11816)
!11869 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7382, file: !7382, line: 1169, type: !3124, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11870 = !DILocation(line: 1171, column: 3, scope: !11869)
!11871 = !DILocation(line: 1172, column: 1, scope: !11869)
!11872 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7382, file: !7382, line: 1190, type: !5097, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11873 = !DILocation(line: 1192, column: 12, scope: !11872)
!11874 = !DILocation(line: 1192, column: 11, scope: !11872)
!11875 = !DILocation(line: 1192, column: 3, scope: !11872)
!11876 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7382, file: !7382, line: 944, type: !5075, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11877)
!11877 = !{!11878}
!11878 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11876, file: !7382, line: 944, type: !121)
!11879 = !DILocation(line: 0, scope: !11876)
!11880 = !DILocation(line: 946, column: 3, scope: !11876)
!11881 = !DILocation(line: 947, column: 1, scope: !11876)
!11882 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7382, file: !7382, line: 910, type: !5075, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11883)
!11883 = !{!11884}
!11884 = !DILocalVariable(name: "Source", arg: 1, scope: !11882, file: !7382, line: 910, type: !121)
!11885 = !DILocation(line: 0, scope: !11882)
!11886 = !DILocation(line: 912, column: 3, scope: !11882)
!11887 = !DILocation(line: 913, column: 1, scope: !11882)
!11888 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7382, file: !7382, line: 924, type: !5097, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11889 = !DILocation(line: 926, column: 21, scope: !11888)
!11890 = !DILocation(line: 926, column: 3, scope: !11888)
!11891 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7382, file: !7382, line: 960, type: !5075, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11892)
!11892 = !{!11893}
!11893 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11891, file: !7382, line: 960, type: !121)
!11894 = !DILocation(line: 0, scope: !11891)
!11895 = !DILocation(line: 962, column: 3, scope: !11891)
!11896 = !DILocation(line: 963, column: 1, scope: !11891)
!11897 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7382, file: !7382, line: 976, type: !5075, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11898)
!11898 = !{!11899}
!11899 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11897, file: !7382, line: 976, type: !121)
!11900 = !DILocation(line: 0, scope: !11897)
!11901 = !DILocation(line: 978, column: 3, scope: !11897)
!11902 = !DILocation(line: 979, column: 1, scope: !11897)
!11903 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11629, file: !11629, line: 385, type: !11904, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !11906)
!11904 = !DISubroutineType(types: !11905)
!11905 = !{!11674, !121, !121, !11729, !11735}
!11906 = !{!11907, !11908, !11909, !11910, !11911, !11912}
!11907 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11903, file: !11629, line: 385, type: !121)
!11908 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11903, file: !11629, line: 385, type: !121)
!11909 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11903, file: !11629, line: 386, type: !11729)
!11910 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11903, file: !11629, line: 386, type: !11735)
!11911 = !DILocalVariable(name: "status", scope: !11903, file: !11629, line: 388, type: !11674)
!11912 = !DILocalVariable(name: "pllfreq", scope: !11903, file: !11629, line: 389, type: !121)
!11913 = !DILocation(line: 0, scope: !11903)
!11914 = !DILocation(line: 396, column: 7, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11903, file: !11629, line: 396, column: 7)
!11916 = !DILocation(line: 396, column: 26, scope: !11915)
!11917 = !DILocation(line: 396, column: 7, scope: !11903)
!11918 = !DILocation(line: 400, column: 15, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11915, file: !11629, line: 397, column: 3)
!11920 = !DILocation(line: 403, column: 9, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11919, file: !11629, line: 403, column: 9)
!11922 = !DILocation(line: 403, column: 30, scope: !11921)
!11923 = !DILocation(line: 403, column: 9, scope: !11919)
!11924 = !DILocation(line: 406, column: 21, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11926, file: !11629, line: 406, column: 11)
!11926 = distinct !DILexicalBlock(scope: !11921, file: !11629, line: 404, column: 5)
!11927 = !DILocation(line: 406, column: 11, scope: !11926)
!11928 = !DILocation(line: 408, column: 9, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11925, file: !11629, line: 407, column: 7)
!11930 = !DILocation(line: 409, column: 7, scope: !11929)
!11931 = !DILocation(line: 412, column: 9, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11925, file: !11629, line: 411, column: 7)
!11933 = !DILocation(line: 416, column: 7, scope: !11926)
!11934 = !DILocation(line: 417, column: 7, scope: !11926)
!11935 = !DILocation(line: 417, column: 14, scope: !11926)
!11936 = !DILocation(line: 417, column: 35, scope: !11926)
!11937 = distinct !{!11937, !11934, !11938}
!11938 = !DILocation(line: 420, column: 7, scope: !11926)
!11939 = !DILocation(line: 424, column: 78, scope: !11919)
!11940 = !DILocation(line: 424, column: 107, scope: !11919)
!11941 = !DILocation(line: 424, column: 7, scope: !11919)
!11942 = !DILocation(line: 427, column: 14, scope: !11919)
!11943 = !DILocation(line: 428, column: 3, scope: !11919)
!11944 = !DILocation(line: 0, scope: !11915)
!11945 = !DILocation(line: 435, column: 3, scope: !11903)
!11946 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7382, file: !7382, line: 545, type: !5097, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11947 = !DILocation(line: 547, column: 12, scope: !11946)
!11948 = !DILocation(line: 547, column: 11, scope: !11946)
!11949 = !DILocation(line: 547, column: 3, scope: !11946)
!11950 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7382, file: !7382, line: 505, type: !3124, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11951 = !DILocation(line: 507, column: 3, scope: !11950)
!11952 = !DILocation(line: 508, column: 1, scope: !11950)
!11953 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7382, file: !7382, line: 515, type: !3124, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11954 = !DILocation(line: 517, column: 3, scope: !11953)
!11955 = !DILocation(line: 518, column: 1, scope: !11953)
!11956 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7382, file: !7382, line: 525, type: !3124, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !335)
!11957 = !DILocation(line: 527, column: 3, scope: !11956)
!11958 = !DILocation(line: 528, column: 1, scope: !11956)
!11959 = distinct !DISubprogram(name: "z_device_state_init", scope: !11960, file: !11960, line: 23, type: !3124, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !11961)
!11960 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11961 = !{!11962}
!11962 = !DILocalVariable(name: "dev", scope: !11959, file: !11960, line: 25, type: !11963)
!11963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11964, size: 32)
!11964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11965)
!11965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !11966)
!11966 = !{!11967, !11968, !11969, !11970, !11976, !11977}
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11965, file: !154, line: 380, baseType: !157, size: 32)
!11968 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11965, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11965, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11965, file: !154, line: 386, baseType: !11971, size: 32, offset: 96)
!11971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11972, size: 32)
!11972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !11973)
!11973 = !{!11974, !11975}
!11974 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11972, file: !154, line: 359, baseType: !167, size: 8)
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11972, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11965, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11965, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!11978 = !DILocation(line: 0, scope: !11959)
!11979 = !DILocation(line: 31, column: 1, scope: !11959)
!11980 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11960, file: !11960, line: 33, type: !11981, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !11983)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!11963, !157}
!11983 = !{!11984, !11985}
!11984 = !DILocalVariable(name: "name", arg: 1, scope: !11980, file: !11960, line: 33, type: !157)
!11985 = !DILocalVariable(name: "dev", scope: !11980, file: !11960, line: 35, type: !11963)
!11986 = !DILocation(line: 0, scope: !11980)
!11987 = !DILocation(line: 40, column: 12, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11980, file: !11960, line: 40, column: 6)
!11989 = !DILocation(line: 40, column: 21, scope: !11988)
!11990 = !DILocation(line: 40, column: 25, scope: !11988)
!11991 = !DILocation(line: 40, column: 33, scope: !11988)
!11992 = !DILocation(line: 40, column: 6, scope: !11980)
!11993 = !DILocation(line: 55, column: 2, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11980, file: !11960, line: 55, column: 2)
!11995 = !DILocation(line: 50, column: 7, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !11960, line: 50, column: 7)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !11960, line: 49, column: 57)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !11960, line: 49, column: 2)
!11999 = distinct !DILexicalBlock(scope: !11980, file: !11960, line: 49, column: 2)
!12000 = !DILocation(line: 50, column: 30, scope: !11996)
!12001 = !DILocation(line: 50, column: 39, scope: !11996)
!12002 = !DILocation(line: 50, column: 44, scope: !11996)
!12003 = !DILocation(line: 50, column: 7, scope: !11997)
!12004 = !DILocation(line: 49, column: 53, scope: !11998)
!12005 = !DILocation(line: 49, column: 33, scope: !11998)
!12006 = !DILocation(line: 49, column: 2, scope: !11999)
!12007 = distinct !{!12007, !12006, !12008}
!12008 = !DILocation(line: 53, column: 2, scope: !11999)
!12009 = !DILocation(line: 56, column: 7, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12011, file: !11960, line: 56, column: 7)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !11960, line: 55, column: 57)
!12012 = distinct !DILexicalBlock(scope: !11994, file: !11960, line: 55, column: 2)
!12013 = !DILocation(line: 56, column: 30, scope: !12010)
!12014 = !DILocation(line: 56, column: 52, scope: !12010)
!12015 = !DILocation(line: 56, column: 34, scope: !12010)
!12016 = !DILocation(line: 56, column: 58, scope: !12010)
!12017 = !DILocation(line: 56, column: 7, scope: !12011)
!12018 = !DILocation(line: 55, column: 53, scope: !12012)
!12019 = !DILocation(line: 55, column: 33, scope: !12012)
!12020 = distinct !{!12020, !11993, !12021}
!12021 = !DILocation(line: 59, column: 2, scope: !11994)
!12022 = !DILocation(line: 62, column: 1, scope: !11980)
!12023 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11960, file: !11960, line: 93, type: !12024, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12026)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{!170, !11963}
!12026 = !{!12027}
!12027 = !DILocalVariable(name: "dev", arg: 1, scope: !12023, file: !11960, line: 93, type: !11963)
!12028 = !DILocation(line: 0, scope: !12023)
!12029 = !DILocation(line: 99, column: 10, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12023, file: !11960, line: 99, column: 6)
!12031 = !DILocation(line: 99, column: 6, scope: !12023)
!12032 = !DILocation(line: 103, column: 14, scope: !12023)
!12033 = !DILocation(line: 103, column: 21, scope: !12023)
!12034 = !DILocation(line: 103, column: 33, scope: !12023)
!12035 = !DILocation(line: 103, column: 49, scope: !12023)
!12036 = !DILocation(line: 103, column: 58, scope: !12023)
!12037 = !DILocation(line: 104, column: 1, scope: !12023)
!12038 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11960, file: !11960, line: 87, type: !12039, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12042)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{!213, !12041}
!12041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11963, size: 32)
!12042 = !{!12043}
!12043 = !DILocalVariable(name: "devices", arg: 1, scope: !12038, file: !11960, line: 87, type: !12041)
!12044 = !DILocation(line: 0, scope: !12038)
!12045 = !DILocation(line: 89, column: 11, scope: !12038)
!12046 = !DILocation(line: 90, column: 2, scope: !12038)
!12047 = distinct !DISubprogram(name: "device_required_foreach", scope: !11960, file: !11960, line: 125, type: !12048, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12054)
!12048 = !DISubroutineType(types: !12049)
!12049 = !{!103, !11963, !12050, !102}
!12050 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !154, line: 471, baseType: !12051)
!12051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12052, size: 32)
!12052 = !DISubroutineType(types: !12053)
!12053 = !{!103, !11963, !102}
!12054 = !{!12055, !12056, !12057, !12058, !12059}
!12055 = !DILocalVariable(name: "dev", arg: 1, scope: !12047, file: !11960, line: 125, type: !11963)
!12056 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12047, file: !11960, line: 126, type: !12050)
!12057 = !DILocalVariable(name: "context", arg: 3, scope: !12047, file: !11960, line: 127, type: !102)
!12058 = !DILocalVariable(name: "handle_count", scope: !12047, file: !11960, line: 129, type: !213)
!12059 = !DILocalVariable(name: "handles", scope: !12047, file: !11960, line: 130, type: !173)
!12060 = !DILocation(line: 0, scope: !12047)
!12061 = !DILocation(line: 129, column: 2, scope: !12047)
!12062 = !DILocation(line: 129, column: 9, scope: !12047)
!12063 = !DILocation(line: 130, column: 35, scope: !12047)
!12064 = !DILocation(line: 132, column: 33, scope: !12047)
!12065 = !DILocation(line: 132, column: 9, scope: !12047)
!12066 = !DILocation(line: 133, column: 1, scope: !12047)
!12067 = !DILocation(line: 132, column: 2, scope: !12047)
!12068 = distinct !DISubprogram(name: "device_required_handles_get", scope: !154, file: !154, line: 493, type: !12069, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12071)
!12069 = !DISubroutineType(types: !12070)
!12070 = !{!173, !11963, !2607}
!12071 = !{!12072, !12073, !12074, !12075}
!12072 = !DILocalVariable(name: "dev", arg: 1, scope: !12068, file: !154, line: 493, type: !11963)
!12073 = !DILocalVariable(name: "count", arg: 2, scope: !12068, file: !154, line: 493, type: !2607)
!12074 = !DILocalVariable(name: "rv", scope: !12068, file: !154, line: 495, type: !173)
!12075 = !DILocalVariable(name: "i", scope: !12076, file: !154, line: 498, type: !213)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !154, line: 497, column: 18)
!12077 = distinct !DILexicalBlock(scope: !12068, file: !154, line: 497, column: 6)
!12078 = !DILocation(line: 0, scope: !12068)
!12079 = !DILocation(line: 495, column: 35, scope: !12068)
!12080 = !DILocation(line: 497, column: 9, scope: !12077)
!12081 = !DILocation(line: 497, column: 6, scope: !12068)
!12082 = !DILocation(line: 0, scope: !12076)
!12083 = !DILocation(line: 500, column: 11, scope: !12076)
!12084 = !DILocation(line: 500, column: 40, scope: !12076)
!12085 = !DILocation(line: 502, column: 4, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12076, file: !154, line: 501, column: 40)
!12087 = distinct !{!12087, !12088, !12089}
!12088 = !DILocation(line: 500, column: 3, scope: !12076)
!12089 = !DILocation(line: 503, column: 3, scope: !12076)
!12090 = !DILocation(line: 504, column: 10, scope: !12076)
!12091 = !DILocation(line: 505, column: 2, scope: !12076)
!12092 = !DILocation(line: 507, column: 2, scope: !12068)
!12093 = distinct !DISubprogram(name: "device_visitor", scope: !11960, file: !11960, line: 106, type: !12094, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12096)
!12094 = !DISubroutineType(types: !12095)
!12095 = !{!103, !173, !213, !12050, !102}
!12096 = !{!12097, !12098, !12099, !12100, !12101, !12103, !12106, !12107}
!12097 = !DILocalVariable(name: "handles", arg: 1, scope: !12093, file: !11960, line: 106, type: !173)
!12098 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12093, file: !11960, line: 107, type: !213)
!12099 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12093, file: !11960, line: 108, type: !12050)
!12100 = !DILocalVariable(name: "context", arg: 4, scope: !12093, file: !11960, line: 109, type: !102)
!12101 = !DILocalVariable(name: "i", scope: !12102, file: !11960, line: 112, type: !213)
!12102 = distinct !DILexicalBlock(scope: !12093, file: !11960, line: 112, column: 2)
!12103 = !DILocalVariable(name: "dh", scope: !12104, file: !11960, line: 113, type: !175)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !11960, line: 112, column: 44)
!12105 = distinct !DILexicalBlock(scope: !12102, file: !11960, line: 112, column: 2)
!12106 = !DILocalVariable(name: "rdev", scope: !12104, file: !11960, line: 114, type: !11963)
!12107 = !DILocalVariable(name: "rc", scope: !12104, file: !11960, line: 115, type: !103)
!12108 = !DILocation(line: 0, scope: !12093)
!12109 = !DILocation(line: 0, scope: !12102)
!12110 = !DILocation(line: 112, column: 23, scope: !12105)
!12111 = !DILocation(line: 112, column: 2, scope: !12102)
!12112 = distinct !{!12112, !12111, !12113}
!12113 = !DILocation(line: 120, column: 2, scope: !12102)
!12114 = !DILocation(line: 113, column: 24, scope: !12104)
!12115 = !DILocation(line: 0, scope: !12104)
!12116 = !DILocation(line: 114, column: 31, scope: !12104)
!12117 = !DILocation(line: 115, column: 12, scope: !12104)
!12118 = !DILocation(line: 117, column: 10, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12104, file: !11960, line: 117, column: 7)
!12120 = !DILocation(line: 112, column: 39, scope: !12105)
!12121 = !DILocation(line: 123, column: 1, scope: !12093)
!12122 = distinct !DISubprogram(name: "device_from_handle", scope: !154, file: !154, line: 439, type: !12123, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12125)
!12123 = !DISubroutineType(types: !12124)
!12124 = !{!11963, !175}
!12125 = !{!12126, !12127, !12128}
!12126 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12122, file: !154, line: 439, type: !175)
!12127 = !DILocalVariable(name: "dev", scope: !12122, file: !154, line: 443, type: !11963)
!12128 = !DILocalVariable(name: "numdev", scope: !12122, file: !154, line: 444, type: !213)
!12129 = !DILocation(line: 0, scope: !12122)
!12130 = !DILocation(line: 446, column: 7, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12122, file: !154, line: 446, column: 6)
!12132 = !DILocation(line: 446, column: 18, scope: !12131)
!12133 = !DILocation(line: 446, column: 23, scope: !12131)
!12134 = !DILocation(line: 450, column: 2, scope: !12122)
!12135 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11960, file: !11960, line: 135, type: !12048, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12136)
!12136 = !{!12137, !12138, !12139, !12140, !12141}
!12137 = !DILocalVariable(name: "dev", arg: 1, scope: !12135, file: !11960, line: 135, type: !11963)
!12138 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12135, file: !11960, line: 136, type: !12050)
!12139 = !DILocalVariable(name: "context", arg: 3, scope: !12135, file: !11960, line: 137, type: !102)
!12140 = !DILocalVariable(name: "handle_count", scope: !12135, file: !11960, line: 139, type: !213)
!12141 = !DILocalVariable(name: "handles", scope: !12135, file: !11960, line: 140, type: !173)
!12142 = !DILocation(line: 0, scope: !12135)
!12143 = !DILocation(line: 139, column: 2, scope: !12135)
!12144 = !DILocation(line: 139, column: 9, scope: !12135)
!12145 = !DILocation(line: 140, column: 35, scope: !12135)
!12146 = !DILocation(line: 142, column: 33, scope: !12135)
!12147 = !DILocation(line: 142, column: 9, scope: !12135)
!12148 = !DILocation(line: 143, column: 1, scope: !12135)
!12149 = !DILocation(line: 142, column: 2, scope: !12135)
!12150 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !154, file: !154, line: 573, type: !12069, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !12151)
!12151 = !{!12152, !12153, !12154, !12155, !12156}
!12152 = !DILocalVariable(name: "dev", arg: 1, scope: !12150, file: !154, line: 573, type: !11963)
!12153 = !DILocalVariable(name: "count", arg: 2, scope: !12150, file: !154, line: 573, type: !2607)
!12154 = !DILocalVariable(name: "rv", scope: !12150, file: !154, line: 575, type: !173)
!12155 = !DILocalVariable(name: "region", scope: !12150, file: !154, line: 576, type: !213)
!12156 = !DILocalVariable(name: "i", scope: !12150, file: !154, line: 577, type: !213)
!12157 = !DILocation(line: 0, scope: !12150)
!12158 = !DILocation(line: 575, column: 35, scope: !12150)
!12159 = !DILocation(line: 579, column: 9, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12150, file: !154, line: 579, column: 6)
!12161 = !DILocation(line: 579, column: 6, scope: !12150)
!12162 = !DILocation(line: 582, column: 8, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !154, line: 582, column: 8)
!12164 = distinct !DILexicalBlock(scope: !12165, file: !154, line: 581, column: 23)
!12165 = distinct !DILexicalBlock(scope: !12160, file: !154, line: 579, column: 18)
!12166 = !DILocation(line: 582, column: 12, scope: !12163)
!12167 = !DILocation(line: 585, column: 6, scope: !12164)
!12168 = !DILocation(line: 0, scope: !12165)
!12169 = !DILocation(line: 581, column: 17, scope: !12165)
!12170 = !DILocation(line: 581, column: 3, scope: !12165)
!12171 = !DILocation(line: 588, column: 10, scope: !12165)
!12172 = !DILocation(line: 588, column: 16, scope: !12165)
!12173 = !DILocation(line: 589, column: 4, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12165, file: !154, line: 588, column: 39)
!12175 = !DILocation(line: 588, column: 3, scope: !12165)
!12176 = distinct !{!12176, !12175, !12177}
!12177 = !DILocation(line: 590, column: 3, scope: !12165)
!12178 = !DILocation(line: 591, column: 10, scope: !12165)
!12179 = !DILocation(line: 592, column: 2, scope: !12165)
!12180 = !DILocation(line: 575, column: 25, scope: !12150)
!12181 = !DILocation(line: 594, column: 2, scope: !12150)
!12182 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1884, file: !1884, line: 49, type: !12183, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1881, retainedNodes: !335)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{!2601}
!12185 = !DILocation(line: 51, column: 10, scope: !12182)
!12186 = !DILocation(line: 51, column: 20, scope: !12182)
!12187 = !DILocation(line: 51, column: 2, scope: !12182)
!12188 = distinct !DISubprogram(name: "coredump", scope: !3091, file: !3091, line: 209, type: !12189, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12335)
!12189 = !DISubroutineType(types: !12190)
!12190 = !{null, !32, !12191, !12235}
!12191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12192, size: 32)
!12192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12193)
!12193 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2735, line: 141, baseType: !12194)
!12194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2735, line: 97, size: 256, elements: !12195)
!12195 = !{!12196}
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12194, file: !2735, line: 107, baseType: !12197, size: 256)
!12197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2735, line: 98, size: 256, elements: !12198)
!12198 = !{!12199, !12204, !12209, !12214, !12219, !12224, !12229, !12234}
!12199 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 99, baseType: !12200, size: 32)
!12200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 99, size: 32, elements: !12201)
!12201 = !{!12202, !12203}
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12200, file: !2735, line: 99, baseType: !121, size: 32)
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12200, file: !2735, line: 99, baseType: !121, size: 32)
!12204 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 100, baseType: !12205, size: 32, offset: 32)
!12205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 100, size: 32, elements: !12206)
!12206 = !{!12207, !12208}
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12205, file: !2735, line: 100, baseType: !121, size: 32)
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12205, file: !2735, line: 100, baseType: !121, size: 32)
!12209 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 101, baseType: !12210, size: 32, offset: 64)
!12210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 101, size: 32, elements: !12211)
!12211 = !{!12212, !12213}
!12212 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12210, file: !2735, line: 101, baseType: !121, size: 32)
!12213 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12210, file: !2735, line: 101, baseType: !121, size: 32)
!12214 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 102, baseType: !12215, size: 32, offset: 96)
!12215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 102, size: 32, elements: !12216)
!12216 = !{!12217, !12218}
!12217 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12215, file: !2735, line: 102, baseType: !121, size: 32)
!12218 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12215, file: !2735, line: 102, baseType: !121, size: 32)
!12219 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 103, baseType: !12220, size: 32, offset: 128)
!12220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 103, size: 32, elements: !12221)
!12221 = !{!12222, !12223}
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12220, file: !2735, line: 103, baseType: !121, size: 32)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12220, file: !2735, line: 103, baseType: !121, size: 32)
!12224 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 104, baseType: !12225, size: 32, offset: 160)
!12225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 104, size: 32, elements: !12226)
!12226 = !{!12227, !12228}
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12225, file: !2735, line: 104, baseType: !121, size: 32)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12225, file: !2735, line: 104, baseType: !121, size: 32)
!12229 = !DIDerivedType(tag: DW_TAG_member, scope: !12197, file: !2735, line: 105, baseType: !12230, size: 32, offset: 192)
!12230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12197, file: !2735, line: 105, size: 32, elements: !12231)
!12231 = !{!12232, !12233}
!12232 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12230, file: !2735, line: 105, baseType: !121, size: 32)
!12233 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12230, file: !2735, line: 105, baseType: !121, size: 32)
!12234 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12197, file: !2735, line: 106, baseType: !121, size: 32, offset: 224)
!12235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12236, size: 32)
!12236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !12237)
!12237 = !{!12238, !12296, !12308, !12309, !12310, !12311, !12317, !12330}
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12236, file: !224, line: 247, baseType: !12239, size: 384)
!12239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !12240)
!12240 = !{!12241, !12265, !12272, !12273, !12274, !12283, !12284, !12285}
!12241 = !DIDerivedType(tag: DW_TAG_member, scope: !12239, file: !224, line: 60, baseType: !12242, size: 64)
!12242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12239, file: !224, line: 60, size: 64, elements: !12243)
!12243 = !{!12244, !12259}
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12242, file: !224, line: 61, baseType: !12245, size: 64)
!12245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !12246)
!12246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !12247)
!12247 = !{!12248, !12254}
!12248 = !DIDerivedType(tag: DW_TAG_member, scope: !12246, file: !234, line: 38, baseType: !12249, size: 32)
!12249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12246, file: !234, line: 38, size: 32, elements: !12250)
!12250 = !{!12251, !12253}
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12249, file: !234, line: 39, baseType: !12252, size: 32)
!12252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12246, size: 32)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12249, file: !234, line: 40, baseType: !12252, size: 32)
!12254 = !DIDerivedType(tag: DW_TAG_member, scope: !12246, file: !234, line: 42, baseType: !12255, size: 32, offset: 32)
!12255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12246, file: !234, line: 42, size: 32, elements: !12256)
!12256 = !{!12257, !12258}
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12255, file: !234, line: 43, baseType: !12252, size: 32)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12255, file: !234, line: 44, baseType: !12252, size: 32)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12242, file: !224, line: 62, baseType: !12260, size: 64)
!12260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !12261)
!12261 = !{!12262}
!12262 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12260, file: !250, line: 50, baseType: !12263, size: 64)
!12263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12264, size: 64, elements: !255)
!12264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12260, size: 32)
!12265 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12239, file: !224, line: 68, baseType: !12266, size: 32, offset: 64)
!12266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12267, size: 32)
!12267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !12268)
!12268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !12269)
!12269 = !{!12270}
!12270 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12268, file: !260, line: 232, baseType: !12271, size: 64)
!12271 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !12246)
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12239, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!12273 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12239, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!12274 = !DIDerivedType(tag: DW_TAG_member, scope: !12239, file: !224, line: 90, baseType: !12275, size: 16, offset: 112)
!12275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12239, file: !224, line: 90, size: 16, elements: !12276)
!12276 = !{!12277, !12282}
!12277 = !DIDerivedType(tag: DW_TAG_member, scope: !12275, file: !224, line: 91, baseType: !12278, size: 16)
!12278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12275, file: !224, line: 91, size: 16, elements: !12279)
!12279 = !{!12280, !12281}
!12280 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12278, file: !224, line: 96, baseType: !274, size: 8)
!12281 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12278, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!12282 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12275, file: !224, line: 100, baseType: !278, size: 16)
!12283 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12239, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!12284 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12239, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12239, file: !224, line: 131, baseType: !12286, size: 192, offset: 192)
!12286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !12287)
!12287 = !{!12288, !12289, !12295}
!12288 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12286, file: !260, line: 245, baseType: !12245, size: 64)
!12289 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12286, file: !260, line: 246, baseType: !12290, size: 32, offset: 64)
!12290 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !12291)
!12291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12292, size: 32)
!12292 = !DISubroutineType(types: !12293)
!12293 = !{null, !12294}
!12294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12286, size: 32)
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12286, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!12296 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12236, file: !224, line: 250, baseType: !12297, size: 288, offset: 384)
!12297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !12298)
!12298 = !{!12299, !12300, !12301, !12302, !12303, !12304, !12305, !12306, !12307}
!12299 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12297, file: !297, line: 26, baseType: !121, size: 32)
!12300 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12297, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!12301 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12297, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!12302 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12297, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!12303 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12297, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!12304 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12297, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!12305 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12297, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!12306 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12297, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12297, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!12308 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12236, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!12309 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12236, file: !224, line: 256, baseType: !12267, size: 64, offset: 704)
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12236, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12236, file: !224, line: 300, baseType: !12312, size: 96, offset: 800)
!12312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !12313)
!12313 = !{!12314, !12315, !12316}
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12312, file: !224, line: 153, baseType: !22, size: 32)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12312, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12312, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12236, file: !224, line: 325, baseType: !12318, size: 32, offset: 896)
!12318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12319, size: 32)
!12319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !12320)
!12320 = !{!12321, !12327, !12328}
!12321 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12319, file: !320, line: 5074, baseType: !12322, size: 96)
!12322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !12323)
!12323 = !{!12324, !12325, !12326}
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12322, file: !324, line: 57, baseType: !327, size: 32)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12322, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12322, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12319, file: !320, line: 5075, baseType: !12267, size: 64, offset: 96)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12319, file: !320, line: 5076, baseType: !12329, offset: 160)
!12329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!12330 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12236, file: !224, line: 343, baseType: !12331, size: 64, offset: 928)
!12331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !12332)
!12332 = !{!12333, !12334}
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12331, file: !297, line: 63, baseType: !121, size: 32)
!12334 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12331, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!12335 = !{!12336, !12337, !12338}
!12336 = !DILocalVariable(name: "reason", arg: 1, scope: !12188, file: !3091, line: 209, type: !32)
!12337 = !DILocalVariable(name: "esf", arg: 2, scope: !12188, file: !3091, line: 209, type: !12191)
!12338 = !DILocalVariable(name: "thread", arg: 3, scope: !12188, file: !3091, line: 210, type: !12235)
!12339 = !DILocation(line: 0, scope: !12188)
!12340 = !DILocation(line: 212, column: 1, scope: !12188)
!12341 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3091, file: !3091, line: 214, type: !12342, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12344)
!12342 = !DISubroutineType(types: !12343)
!12343 = !{null, !22, !22}
!12344 = !{!12345, !12346}
!12345 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12341, file: !3091, line: 214, type: !22)
!12346 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12341, file: !3091, line: 214, type: !22)
!12347 = !DILocation(line: 0, scope: !12341)
!12348 = !DILocation(line: 216, column: 1, scope: !12341)
!12349 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3091, file: !3091, line: 218, type: !12350, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12352)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{null, !1925, !213}
!12352 = !{!12353, !12354}
!12353 = !DILocalVariable(name: "buf", arg: 1, scope: !12349, file: !3091, line: 218, type: !1925)
!12354 = !DILocalVariable(name: "buflen", arg: 2, scope: !12349, file: !3091, line: 218, type: !213)
!12355 = !DILocation(line: 0, scope: !12349)
!12356 = !DILocation(line: 220, column: 1, scope: !12349)
!12357 = distinct !DISubprogram(name: "coredump_query", scope: !3091, file: !3091, line: 222, type: !12358, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12360)
!12358 = !DISubroutineType(types: !12359)
!12359 = !{!103, !3090, !102}
!12360 = !{!12361, !12362}
!12361 = !DILocalVariable(name: "query_id", arg: 1, scope: !12357, file: !3091, line: 222, type: !3090)
!12362 = !DILocalVariable(name: "arg", arg: 2, scope: !12357, file: !3091, line: 222, type: !102)
!12363 = !DILocation(line: 0, scope: !12357)
!12364 = !DILocation(line: 224, column: 2, scope: !12357)
!12365 = distinct !DISubprogram(name: "coredump_cmd", scope: !3091, file: !3091, line: 227, type: !12366, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12368)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!103, !3097, !102}
!12368 = !{!12369, !12370}
!12369 = !DILocalVariable(name: "query_id", arg: 1, scope: !12365, file: !3091, line: 227, type: !3097)
!12370 = !DILocalVariable(name: "arg", arg: 2, scope: !12365, file: !3091, line: 227, type: !102)
!12371 = !DILocation(line: 0, scope: !12365)
!12372 = !DILocation(line: 229, column: 2, scope: !12365)
!12373 = distinct !DISubprogram(name: "arch_system_halt", scope: !12374, file: !12374, line: 23, type: !5062, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12375)
!12374 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12375 = !{!12376}
!12376 = !DILocalVariable(name: "reason", arg: 1, scope: !12373, file: !12374, line: 23, type: !32)
!12377 = !DILocation(line: 0, scope: !12373)
!12378 = !DILocation(line: 55, column: 2, scope: !12379, inlinedAt: !12383)
!12379 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12380)
!12380 = !{!12381, !12382}
!12381 = !DILocalVariable(name: "key", scope: !12379, file: !5051, line: 44, type: !32)
!12382 = !DILocalVariable(name: "tmp", scope: !12379, file: !5051, line: 53, type: !32)
!12383 = distinct !DILocation(line: 31, column: 8, scope: !12373)
!12384 = !{i64 1650527}
!12385 = !DILocation(line: 0, scope: !12379, inlinedAt: !12383)
!12386 = !DILocation(line: 32, column: 2, scope: !12373)
!12387 = !DILocation(line: 32, column: 2, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !12374, line: 32, column: 2)
!12389 = distinct !DILexicalBlock(scope: !12373, file: !12374, line: 32, column: 2)
!12390 = distinct !{!12390, !12391, !12392}
!12391 = !DILocation(line: 32, column: 2, scope: !12389)
!12392 = !DILocation(line: 34, column: 2, scope: !12389)
!12393 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12374, file: !12374, line: 39, type: !12394, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12396)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{null, !32, !12191}
!12396 = !{!12397, !12398}
!12397 = !DILocalVariable(name: "reason", arg: 1, scope: !12393, file: !12374, line: 39, type: !32)
!12398 = !DILocalVariable(name: "esf", arg: 2, scope: !12393, file: !12374, line: 40, type: !12191)
!12399 = !DILocation(line: 0, scope: !12393)
!12400 = !DILocation(line: 46, column: 2, scope: !12393)
!12401 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12374, file: !12374, line: 81, type: !5062, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12402)
!12402 = !{!12403}
!12403 = !DILocalVariable(name: "reason", arg: 1, scope: !12401, file: !12374, line: 81, type: !32)
!12404 = !DILocation(line: 0, scope: !12401)
!12405 = !DILocation(line: 83, column: 2, scope: !12401)
!12406 = distinct !DISubprogram(name: "z_fatal_error", scope: !12374, file: !12374, line: 96, type: !12394, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12407)
!12407 = !{!12408, !12409, !12410, !12411}
!12408 = !DILocalVariable(name: "reason", arg: 1, scope: !12406, file: !12374, line: 96, type: !32)
!12409 = !DILocalVariable(name: "esf", arg: 2, scope: !12406, file: !12374, line: 96, type: !12191)
!12410 = !DILocalVariable(name: "key", scope: !12406, file: !12374, line: 102, type: !32)
!12411 = !DILocalVariable(name: "thread", scope: !12406, file: !12374, line: 103, type: !12235)
!12412 = !DILocation(line: 0, scope: !12406)
!12413 = !DILocation(line: 55, column: 2, scope: !12379, inlinedAt: !12414)
!12414 = distinct !DILocation(line: 102, column: 21, scope: !12406)
!12415 = !DILocation(line: 0, scope: !12379, inlinedAt: !12414)
!12416 = !DILocation(line: 119, column: 11, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12406, file: !12374, line: 119, column: 6)
!12418 = !DILocation(line: 119, column: 20, scope: !12417)
!12419 = !DILocation(line: 131, column: 2, scope: !12406)
!12420 = !DILocation(line: 151, column: 7, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !12374, line: 146, column: 32)
!12422 = distinct !DILexicalBlock(scope: !12406, file: !12374, line: 146, column: 6)
!12423 = !DILocation(line: 151, column: 21, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12421, file: !12374, line: 151, column: 7)
!12425 = !DILocation(line: 104, column: 4, scope: !12406)
!12426 = !DILocalVariable(name: "key", arg: 1, scope: !12427, file: !5051, line: 84, type: !32)
!12427 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12428)
!12428 = !{!12426}
!12429 = !DILocation(line: 0, scope: !12427, inlinedAt: !12430)
!12430 = distinct !DILocation(line: 186, column: 2, scope: !12406)
!12431 = !DILocation(line: 95, column: 2, scope: !12427, inlinedAt: !12430)
!12432 = !{i64 1651344}
!12433 = !DILocation(line: 189, column: 3, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12435, file: !12374, line: 188, column: 41)
!12435 = distinct !DILexicalBlock(scope: !12406, file: !12374, line: 188, column: 6)
!12436 = !DILocation(line: 191, column: 1, scope: !12406)
!12437 = distinct !DISubprogram(name: "k_current_get", scope: !320, file: !320, line: 530, type: !12438, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !335)
!12438 = !DISubroutineType(types: !12439)
!12439 = !{!12440}
!12440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !12235)
!12441 = !DILocation(line: 535, column: 9, scope: !12437)
!12442 = !DILocation(line: 535, column: 2, scope: !12437)
!12443 = distinct !DISubprogram(name: "k_thread_abort", scope: !3686, file: !3686, line: 188, type: !12444, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !12446)
!12444 = !DISubroutineType(types: !12445)
!12445 = !{null, !12440}
!12446 = !{!12447}
!12447 = !DILocalVariable(name: "thread", arg: 1, scope: !12443, file: !3686, line: 188, type: !12440)
!12448 = !DILocation(line: 0, scope: !12443)
!12449 = !DILocation(line: 197, column: 2, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12443, file: !3686, line: 197, column: 2)
!12451 = !{i64 2152216185}
!12452 = !DILocation(line: 198, column: 2, scope: !12443)
!12453 = !DILocation(line: 199, column: 1, scope: !12443)
!12454 = distinct !DISubprogram(name: "z_current_get", scope: !3686, file: !3686, line: 173, type: !12438, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3087, retainedNodes: !335)
!12455 = !DILocation(line: 180, column: 2, scope: !12456)
!12456 = distinct !DILexicalBlock(scope: !12454, file: !3686, line: 180, column: 2)
!12457 = !{i64 2152216117}
!12458 = !DILocation(line: 181, column: 9, scope: !12454)
!12459 = !DILocation(line: 181, column: 2, scope: !12454)
!12460 = distinct !DISubprogram(name: "z_early_memset", scope: !1892, file: !1892, line: 108, type: !12461, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12463)
!12461 = !DISubroutineType(types: !12462)
!12462 = !{null, !102, !103, !213}
!12463 = !{!12464, !12465, !12466}
!12464 = !DILocalVariable(name: "dst", arg: 1, scope: !12460, file: !1892, line: 108, type: !102)
!12465 = !DILocalVariable(name: "c", arg: 2, scope: !12460, file: !1892, line: 108, type: !103)
!12466 = !DILocalVariable(name: "n", arg: 3, scope: !12460, file: !1892, line: 108, type: !213)
!12467 = !DILocation(line: 0, scope: !12460)
!12468 = !DILocation(line: 110, column: 9, scope: !12460)
!12469 = !DILocation(line: 111, column: 1, scope: !12460)
!12470 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1892, file: !1892, line: 121, type: !12471, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12473)
!12471 = !DISubroutineType(types: !12472)
!12472 = !{null, !102, !13, !213}
!12473 = !{!12474, !12475, !12476}
!12474 = !DILocalVariable(name: "dst", arg: 1, scope: !12470, file: !1892, line: 121, type: !102)
!12475 = !DILocalVariable(name: "src", arg: 2, scope: !12470, file: !1892, line: 121, type: !13)
!12476 = !DILocalVariable(name: "n", arg: 3, scope: !12470, file: !1892, line: 121, type: !213)
!12477 = !DILocation(line: 0, scope: !12470)
!12478 = !DILocation(line: 123, column: 9, scope: !12470)
!12479 = !DILocation(line: 124, column: 1, scope: !12470)
!12480 = distinct !DISubprogram(name: "z_bss_zero", scope: !1892, file: !1892, line: 132, type: !3124, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !335)
!12481 = !DILocation(line: 143, column: 2, scope: !12480)
!12482 = !DILocation(line: 168, column: 1, scope: !12480)
!12483 = distinct !DISubprogram(name: "z_init_cpu", scope: !1892, file: !1892, line: 372, type: !7054, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12484)
!12484 = !{!12485}
!12485 = !DILocalVariable(name: "id", arg: 1, scope: !12483, file: !1892, line: 372, type: !103)
!12486 = !DILocation(line: 0, scope: !12483)
!12487 = !DILocation(line: 374, column: 2, scope: !12483)
!12488 = !DILocation(line: 375, column: 34, scope: !12483)
!12489 = !DILocation(line: 375, column: 19, scope: !12483)
!12490 = !DILocation(line: 375, column: 31, scope: !12483)
!12491 = !DILocation(line: 376, column: 24, scope: !12483)
!12492 = !DILocation(line: 376, column: 19, scope: !12483)
!12493 = !DILocation(line: 376, column: 22, scope: !12483)
!12494 = !DILocation(line: 378, column: 26, scope: !12483)
!12495 = !DILocation(line: 378, column: 4, scope: !12483)
!12496 = !DILocation(line: 378, column: 50, scope: !12483)
!12497 = !DILocation(line: 377, column: 19, scope: !12483)
!12498 = !DILocation(line: 377, column: 29, scope: !12483)
!12499 = !DILocation(line: 384, column: 1, scope: !12483)
!12500 = distinct !DISubprogram(name: "init_idle_thread", scope: !1892, file: !1892, line: 343, type: !7054, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12501)
!12501 = !{!12502, !12503, !12504, !12507}
!12502 = !DILocalVariable(name: "i", arg: 1, scope: !12500, file: !1892, line: 343, type: !103)
!12503 = !DILocalVariable(name: "thread", scope: !12500, file: !1892, line: 345, type: !1985)
!12504 = !DILocalVariable(name: "stack", scope: !12500, file: !1892, line: 346, type: !12505)
!12505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12506, size: 32)
!12506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3565, line: 44, baseType: !2099)
!12507 = !DILocalVariable(name: "tname", scope: !12500, file: !1892, line: 358, type: !1019)
!12508 = !DILocation(line: 0, scope: !12500)
!12509 = !DILocation(line: 345, column: 29, scope: !12500)
!12510 = !DILocation(line: 346, column: 28, scope: !12500)
!12511 = !DILocation(line: 362, column: 37, scope: !12500)
!12512 = !DILocation(line: 362, column: 36, scope: !12500)
!12513 = !DILocation(line: 361, column: 2, scope: !12500)
!12514 = !DILocation(line: 365, column: 2, scope: !12500)
!12515 = !DILocation(line: 370, column: 1, scope: !12500)
!12516 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2100, file: !2100, line: 331, type: !12517, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12519)
!12517 = !DISubroutineType(types: !12518)
!12518 = !{!1019, !12505}
!12519 = !{!12520}
!12520 = !DILocalVariable(name: "sym", arg: 1, scope: !12516, file: !2100, line: 331, type: !12505)
!12521 = !DILocation(line: 0, scope: !12516)
!12522 = !DILocation(line: 333, column: 21, scope: !12516)
!12523 = !DILocation(line: 333, column: 2, scope: !12516)
!12524 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12525, file: !12525, line: 155, type: !12526, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12528)
!12525 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12526 = !DISubroutineType(types: !12527)
!12527 = !{null, !1985}
!12528 = !{!12529}
!12529 = !DILocalVariable(name: "thread", arg: 1, scope: !12524, file: !12525, line: 155, type: !1985)
!12530 = !DILocation(line: 0, scope: !12524)
!12531 = !DILocation(line: 157, column: 15, scope: !12524)
!12532 = !DILocation(line: 157, column: 28, scope: !12524)
!12533 = !DILocation(line: 158, column: 1, scope: !12524)
!12534 = distinct !DISubprogram(name: "z_cstart", scope: !1892, file: !1892, line: 501, type: !3124, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12535)
!12535 = !{!12536}
!12536 = !DILocalVariable(name: "dummy_thread", scope: !12534, file: !1892, line: 518, type: !1986)
!12537 = !DILocation(line: 507, column: 2, scope: !12534)
!12538 = !DILocation(line: 43, column: 14, scope: !12539, inlinedAt: !12543)
!12539 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12540, file: !12540, line: 40, type: !3124, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12541)
!12540 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12541 = !{!12542}
!12542 = !DILocalVariable(name: "msp", scope: !12539, file: !12540, line: 42, type: !121)
!12543 = distinct !DILocation(line: 44, column: 2, scope: !12544, inlinedAt: !12546)
!12544 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12545, file: !12545, line: 42, type: !3124, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !335)
!12545 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12546 = distinct !DILocation(line: 510, column: 2, scope: !12534)
!12547 = !DILocation(line: 43, column: 3, scope: !12539, inlinedAt: !12543)
!12548 = !DILocation(line: 43, column: 60, scope: !12539, inlinedAt: !12543)
!12549 = !DILocation(line: 0, scope: !12539, inlinedAt: !12543)
!12550 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12551, file: !5341, line: 1153, type: !121)
!12551 = distinct !DISubprogram(name: "__set_MSP", scope: !5341, file: !5341, line: 1153, type: !5075, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12552)
!12552 = !{!12550}
!12553 = !DILocation(line: 0, scope: !12551, inlinedAt: !12554)
!12554 = distinct !DILocation(line: 46, column: 2, scope: !12539, inlinedAt: !12543)
!12555 = !DILocation(line: 1155, column: 3, scope: !12551, inlinedAt: !12554)
!12556 = !{i64 2463967}
!12557 = !DILocation(line: 62, column: 11, scope: !12539, inlinedAt: !12543)
!12558 = !DILocation(line: 102, column: 2, scope: !12559, inlinedAt: !12560)
!12559 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6095, file: !6095, line: 97, type: !3124, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !335)
!12560 = distinct !DILocation(line: 45, column: 2, scope: !12544, inlinedAt: !12546)
!12561 = !DILocation(line: 108, column: 2, scope: !12559, inlinedAt: !12560)
!12562 = !DILocation(line: 112, column: 2, scope: !12559, inlinedAt: !12560)
!12563 = !DILocation(line: 113, column: 2, scope: !12559, inlinedAt: !12560)
!12564 = !DILocation(line: 114, column: 2, scope: !12559, inlinedAt: !12560)
!12565 = !DILocation(line: 116, column: 2, scope: !12559, inlinedAt: !12560)
!12566 = !DILocation(line: 123, column: 13, scope: !12559, inlinedAt: !12560)
!12567 = !DILocation(line: 46, column: 2, scope: !12544, inlinedAt: !12546)
!12568 = !DILocation(line: 47, column: 2, scope: !12544, inlinedAt: !12546)
!12569 = !DILocation(line: 174, column: 12, scope: !12570, inlinedAt: !12571)
!12570 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6095, file: !6095, line: 169, type: !3124, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !335)
!12571 = distinct !DILocation(line: 48, column: 2, scope: !12544, inlinedAt: !12546)
!12572 = !DILocation(line: 179, column: 12, scope: !12570, inlinedAt: !12571)
!12573 = !DILocation(line: 50, column: 2, scope: !12544, inlinedAt: !12546)
!12574 = !DILocation(line: 57, column: 2, scope: !12544, inlinedAt: !12546)
!12575 = !DILocation(line: 518, column: 2, scope: !12534)
!12576 = !DILocation(line: 518, column: 18, scope: !12534)
!12577 = !DILocation(line: 520, column: 2, scope: !12534)
!12578 = !DILocation(line: 523, column: 2, scope: !12534)
!12579 = !DILocation(line: 526, column: 2, scope: !12534)
!12580 = !DILocation(line: 527, column: 2, scope: !12534)
!12581 = !DILocation(line: 543, column: 24, scope: !12534)
!12582 = !DILocation(line: 543, column: 2, scope: !12534)
!12583 = !DILocation(line: 0, scope: !2119)
!12584 = !DILocation(line: 246, column: 15, scope: !2137)
!12585 = !DILocation(line: 246, column: 36, scope: !2136)
!12586 = !DILocation(line: 246, column: 2, scope: !2137)
!12587 = !DILocation(line: 247, column: 37, scope: !2135)
!12588 = !DILocation(line: 0, scope: !2135)
!12589 = !DILocation(line: 248, column: 19, scope: !2135)
!12590 = !DILocation(line: 248, column: 12, scope: !2135)
!12591 = !DILocation(line: 250, column: 11, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !2135, file: !1892, line: 250, column: 7)
!12593 = !DILocation(line: 250, column: 7, scope: !2135)
!12594 = !DILocation(line: 254, column: 11, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !1892, line: 254, column: 8)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !1892, line: 250, column: 20)
!12597 = !DILocation(line: 254, column: 8, scope: !12596)
!12598 = !DILocation(line: 255, column: 9, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12595, file: !1892, line: 254, column: 17)
!12600 = !DILocation(line: 258, column: 9, scope: !12599)
!12601 = !DILocation(line: 261, column: 28, scope: !12599)
!12602 = !DILocation(line: 261, column: 10, scope: !12599)
!12603 = !DILocation(line: 261, column: 17, scope: !12599)
!12604 = !DILocation(line: 261, column: 26, scope: !12599)
!12605 = !DILocation(line: 262, column: 4, scope: !12599)
!12606 = !DILocation(line: 263, column: 9, scope: !12596)
!12607 = !DILocation(line: 263, column: 16, scope: !12596)
!12608 = !DILocation(line: 263, column: 28, scope: !12596)
!12609 = !DILocation(line: 264, column: 3, scope: !12596)
!12610 = !DILocation(line: 246, column: 60, scope: !2136)
!12611 = distinct !{!12611, !12586, !12612}
!12612 = !DILocation(line: 265, column: 2, scope: !2137)
!12613 = !DILocation(line: 266, column: 1, scope: !2119)
!12614 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !5375, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12615)
!12615 = !{!12616, !12617}
!12616 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12614, file: !369, line: 1638, type: !693)
!12617 = !DILocalVariable(name: "priority", arg: 2, scope: !12614, file: !369, line: 1638, type: !121)
!12618 = !DILocation(line: 0, scope: !12614)
!12619 = !DILocation(line: 1646, column: 48, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !369, line: 1645, column: 3)
!12621 = distinct !DILexicalBlock(scope: !12614, file: !369, line: 1640, column: 7)
!12622 = !DILocation(line: 1646, column: 32, scope: !12620)
!12623 = !DILocation(line: 1646, column: 40, scope: !12620)
!12624 = !DILocation(line: 1646, column: 5, scope: !12620)
!12625 = !DILocation(line: 1646, column: 46, scope: !12620)
!12626 = !DILocation(line: 1648, column: 1, scope: !12614)
!12627 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12545, file: !12545, line: 32, type: !3124, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!12628 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12629, file: !12629, line: 215, type: !12526, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12630)
!12629 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12630 = !{!12631}
!12631 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12628, file: !12629, line: 215, type: !1985)
!12632 = !DILocation(line: 0, scope: !12628)
!12633 = !DILocation(line: 217, column: 21, scope: !12628)
!12634 = !DILocation(line: 217, column: 34, scope: !12628)
!12635 = !DILocation(line: 221, column: 21, scope: !12628)
!12636 = !DILocation(line: 221, column: 34, scope: !12628)
!12637 = !DILocation(line: 223, column: 27, scope: !12628)
!12638 = !DILocation(line: 223, column: 33, scope: !12628)
!12639 = !DILocation(line: 224, column: 27, scope: !12628)
!12640 = !DILocation(line: 224, column: 32, scope: !12628)
!12641 = !DILocation(line: 232, column: 16, scope: !12628)
!12642 = !DILocation(line: 232, column: 30, scope: !12628)
!12643 = !DILocation(line: 239, column: 24, scope: !12628)
!12644 = !DILocation(line: 240, column: 1, scope: !12628)
!12645 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1892, file: !1892, line: 399, type: !12646, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12648)
!12646 = !DISubroutineType(types: !12647)
!12647 = !{!1019}
!12648 = !{!12649}
!12649 = !DILocalVariable(name: "stack_ptr", scope: !12645, file: !1892, line: 401, type: !1019)
!12650 = !DILocation(line: 404, column: 2, scope: !12645)
!12651 = !DILocation(line: 416, column: 24, scope: !12645)
!12652 = !DILocation(line: 418, column: 14, scope: !12645)
!12653 = !DILocation(line: 0, scope: !12645)
!12654 = !DILocation(line: 423, column: 2, scope: !12645)
!12655 = !DILocation(line: 424, column: 2, scope: !12645)
!12656 = !DILocation(line: 426, column: 2, scope: !12645)
!12657 = !DILocation(line: 428, column: 2, scope: !12645)
!12658 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1892, file: !1892, line: 432, type: !12659, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12661)
!12659 = !DISubroutineType(types: !12660)
!12660 = !{null, !1019}
!12661 = !{!12662}
!12662 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12658, file: !1892, line: 432, type: !1019)
!12663 = !DILocation(line: 0, scope: !12658)
!12664 = !DILocation(line: 435, column: 2, scope: !12658)
!12665 = !DILocation(line: 445, column: 2, scope: !12658)
!12666 = distinct !DISubprogram(name: "bg_thread_main", scope: !1892, file: !1892, line: 277, type: !3567, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1888, retainedNodes: !12667)
!12667 = !{!12668, !12669, !12670}
!12668 = !DILocalVariable(name: "unused1", arg: 1, scope: !12666, file: !1892, line: 277, type: !102)
!12669 = !DILocalVariable(name: "unused2", arg: 2, scope: !12666, file: !1892, line: 277, type: !102)
!12670 = !DILocalVariable(name: "unused3", arg: 3, scope: !12666, file: !1892, line: 277, type: !102)
!12671 = !DILocation(line: 0, scope: !12666)
!12672 = !DILocation(line: 291, column: 20, scope: !12666)
!12673 = !DILocation(line: 293, column: 2, scope: !12666)
!12674 = !DILocation(line: 297, column: 2, scope: !12666)
!12675 = !DILocation(line: 305, column: 2, scope: !12666)
!12676 = !DILocation(line: 307, column: 2, scope: !12666)
!12677 = !DILocation(line: 330, column: 8, scope: !12666)
!12678 = !DILocation(line: 333, column: 34, scope: !12666)
!12679 = !DILocation(line: 339, column: 1, scope: !12666)
!12680 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2146, file: !2146, line: 45, type: !12681, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12689)
!12681 = !DISubroutineType(types: !12682)
!12682 = !{null, !12683, !102}
!12683 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !320, line: 103, baseType: !12684)
!12684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12685, size: 32)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{null, !12687, !102}
!12687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12688, size: 32)
!12688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2151)
!12689 = !{!12690, !12691}
!12690 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12680, file: !2146, line: 45, type: !12683)
!12691 = !DILocalVariable(name: "user_data", arg: 2, scope: !12680, file: !2146, line: 45, type: !102)
!12692 = !DILocation(line: 0, scope: !12680)
!12693 = !DILocation(line: 71, column: 1, scope: !12680)
!12694 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2146, file: !2146, line: 73, type: !12681, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12695)
!12695 = !{!12696, !12697}
!12696 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12694, file: !2146, line: 73, type: !12683)
!12697 = !DILocalVariable(name: "user_data", arg: 2, scope: !12694, file: !2146, line: 73, type: !102)
!12698 = !DILocation(line: 0, scope: !12694)
!12699 = !DILocation(line: 95, column: 1, scope: !12694)
!12700 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2146, file: !2146, line: 97, type: !6096, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!12701 = !DILocation(line: 1031, column: 3, scope: !12702, inlinedAt: !12705)
!12702 = distinct !DISubprogram(name: "__get_IPSR", scope: !5341, file: !5341, line: 1027, type: !5097, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12703)
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "result", scope: !12702, file: !5341, line: 1029, type: !121)
!12705 = distinct !DILocation(line: 48, column: 10, scope: !12706, inlinedAt: !12707)
!12706 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6095, file: !6095, line: 46, type: !6096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!12707 = distinct !DILocation(line: 99, column: 9, scope: !12700)
!12708 = !{i64 2469618}
!12709 = !DILocation(line: 0, scope: !12702, inlinedAt: !12705)
!12710 = !DILocation(line: 48, column: 9, scope: !12706, inlinedAt: !12707)
!12711 = !DILocation(line: 99, column: 2, scope: !12700)
!12712 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2146, file: !2146, line: 106, type: !3124, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!12713 = !DILocation(line: 108, column: 2, scope: !12712)
!12714 = !DILocation(line: 108, column: 17, scope: !12712)
!12715 = !DILocation(line: 108, column: 30, scope: !12712)
!12716 = !DILocation(line: 109, column: 1, scope: !12712)
!12717 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2146, file: !2146, line: 116, type: !3124, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!12718 = !DILocation(line: 118, column: 2, scope: !12717)
!12719 = !DILocation(line: 118, column: 17, scope: !12717)
!12720 = !DILocation(line: 118, column: 30, scope: !12717)
!12721 = !DILocation(line: 119, column: 1, scope: !12717)
!12722 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2146, file: !2146, line: 126, type: !6096, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!12723 = !DILocation(line: 128, column: 10, scope: !12722)
!12724 = !DILocation(line: 128, column: 25, scope: !12722)
!12725 = !DILocation(line: 128, column: 38, scope: !12722)
!12726 = !DILocation(line: 128, column: 53, scope: !12722)
!12727 = !DILocation(line: 128, column: 2, scope: !12722)
!12728 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2146, file: !2146, line: 187, type: !12729, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12731)
!12729 = !DISubroutineType(types: !12730)
!12730 = !{!103, !2150, !157}
!12731 = !{!12732, !12733}
!12732 = !DILocalVariable(name: "thread", arg: 1, scope: !12728, file: !2146, line: 187, type: !2150)
!12733 = !DILocalVariable(name: "value", arg: 2, scope: !12728, file: !2146, line: 187, type: !157)
!12734 = !DILocation(line: 0, scope: !12728)
!12735 = !DILocation(line: 206, column: 2, scope: !12728)
!12736 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2146, file: !2146, line: 238, type: !12737, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12739)
!12737 = !DISubroutineType(types: !12738)
!12738 = !{!157, !2150}
!12739 = !{!12740}
!12740 = !DILocalVariable(name: "thread", arg: 1, scope: !12736, file: !2146, line: 238, type: !2150)
!12741 = !DILocation(line: 0, scope: !12736)
!12742 = !DILocation(line: 244, column: 2, scope: !12736)
!12743 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2146, file: !2146, line: 248, type: !12744, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12746)
!12744 = !DISubroutineType(types: !12745)
!12745 = !{!103, !2149, !1019, !213}
!12746 = !{!12747, !12748, !12749}
!12747 = !DILocalVariable(name: "thread", arg: 1, scope: !12743, file: !2146, line: 248, type: !2149)
!12748 = !DILocalVariable(name: "buf", arg: 2, scope: !12743, file: !2146, line: 248, type: !1019)
!12749 = !DILocalVariable(name: "size", arg: 3, scope: !12743, file: !2146, line: 248, type: !213)
!12750 = !DILocation(line: 0, scope: !12743)
!12751 = !DILocation(line: 257, column: 2, scope: !12743)
!12752 = !DILocation(line: 0, scope: !2145)
!12753 = !DILocation(line: 281, column: 11, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !2145, file: !2146, line: 281, column: 6)
!12755 = !DILocation(line: 281, column: 20, scope: !12754)
!12756 = !DILocation(line: 275, column: 45, scope: !2145)
!12757 = !DILocation(line: 285, column: 10, scope: !2145)
!12758 = !DILocation(line: 0, scope: !2268)
!12759 = !DILocation(line: 293, column: 39, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !2268, file: !2146, line: 293, column: 2)
!12761 = !DILocation(line: 293, column: 2, scope: !2268)
!12762 = !DILocation(line: 273, column: 14, scope: !2145)
!12763 = !DILocation(line: 309, column: 2, scope: !2145)
!12764 = !DILocation(line: 309, column: 11, scope: !2145)
!12765 = !DILocation(line: 311, column: 2, scope: !2145)
!12766 = !DILocation(line: 293, column: 26, scope: !12760)
!12767 = !DILocation(line: 294, column: 9, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12760, file: !2146, line: 293, column: 54)
!12769 = !DILocation(line: 295, column: 21, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12768, file: !2146, line: 295, column: 7)
!12771 = !DILocation(line: 295, column: 28, scope: !12770)
!12772 = !DILocation(line: 295, column: 7, scope: !12768)
!12773 = !DILocation(line: 299, column: 25, scope: !12768)
!12774 = !DILocation(line: 299, column: 41, scope: !12768)
!12775 = !DILocation(line: 300, column: 7, scope: !12768)
!12776 = !DILocation(line: 300, column: 26, scope: !12768)
!12777 = !DILocation(line: 299, column: 10, scope: !12768)
!12778 = !DILocation(line: 299, column: 7, scope: !12768)
!12779 = !DILocation(line: 302, column: 16, scope: !12768)
!12780 = !DILocation(line: 304, column: 20, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12768, file: !2146, line: 304, column: 7)
!12782 = !DILocation(line: 304, column: 7, scope: !12768)
!12783 = !DILocation(line: 305, column: 26, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12781, file: !2146, line: 304, column: 26)
!12785 = !DILocation(line: 305, column: 42, scope: !12784)
!12786 = !DILocation(line: 305, column: 11, scope: !12784)
!12787 = !DILocation(line: 305, column: 8, scope: !12784)
!12788 = !DILocation(line: 306, column: 3, scope: !12784)
!12789 = !DILocation(line: 293, column: 50, scope: !12760)
!12790 = !DILocation(line: 312, column: 1, scope: !2145)
!12791 = distinct !DISubprogram(name: "copy_bytes", scope: !2146, file: !2146, line: 261, type: !12792, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12794)
!12792 = !DISubroutineType(types: !12793)
!12793 = !{!213, !1019, !213, !157, !213}
!12794 = !{!12795, !12796, !12797, !12798, !12799}
!12795 = !DILocalVariable(name: "dest", arg: 1, scope: !12791, file: !2146, line: 261, type: !1019)
!12796 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12791, file: !2146, line: 261, type: !213)
!12797 = !DILocalVariable(name: "src", arg: 3, scope: !12791, file: !2146, line: 261, type: !157)
!12798 = !DILocalVariable(name: "src_size", arg: 4, scope: !12791, file: !2146, line: 261, type: !213)
!12799 = !DILocalVariable(name: "bytes_to_copy", scope: !12791, file: !2146, line: 263, type: !213)
!12800 = !DILocation(line: 0, scope: !12791)
!12801 = !DILocation(line: 265, column: 18, scope: !12791)
!12802 = !DILocation(line: 266, column: 2, scope: !12791)
!12803 = !DILocation(line: 268, column: 2, scope: !12791)
!12804 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2146, file: !2146, line: 383, type: !12805, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12807)
!12805 = !DISubroutineType(types: !12806)
!12806 = !{null, !2150}
!12807 = !{!12808}
!12808 = !DILocalVariable(name: "thread", arg: 1, scope: !12804, file: !2146, line: 383, type: !2150)
!12809 = !DILocation(line: 0, scope: !12804)
!12810 = !DILocation(line: 387, column: 2, scope: !12804)
!12811 = !DILocation(line: 388, column: 1, scope: !12804)
!12812 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2146, file: !2146, line: 528, type: !12813, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12820)
!12813 = !DISubroutineType(types: !12814)
!12814 = !{!1019, !2150, !12815, !213, !3564, !102, !102, !102, !103, !121, !157}
!12815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12816, size: 32)
!12816 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3565, line: 44, baseType: !12817)
!12817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2100, line: 47, size: 8, elements: !12818)
!12818 = !{!12819}
!12819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12817, file: !2100, line: 48, baseType: !159, size: 8)
!12820 = !{!12821, !12822, !12823, !12824, !12825, !12826, !12827, !12828, !12829, !12830, !12831}
!12821 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12812, file: !2146, line: 528, type: !2150)
!12822 = !DILocalVariable(name: "stack", arg: 2, scope: !12812, file: !2146, line: 529, type: !12815)
!12823 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12812, file: !2146, line: 529, type: !213)
!12824 = !DILocalVariable(name: "entry", arg: 4, scope: !12812, file: !2146, line: 530, type: !3564)
!12825 = !DILocalVariable(name: "p1", arg: 5, scope: !12812, file: !2146, line: 531, type: !102)
!12826 = !DILocalVariable(name: "p2", arg: 6, scope: !12812, file: !2146, line: 531, type: !102)
!12827 = !DILocalVariable(name: "p3", arg: 7, scope: !12812, file: !2146, line: 531, type: !102)
!12828 = !DILocalVariable(name: "prio", arg: 8, scope: !12812, file: !2146, line: 532, type: !103)
!12829 = !DILocalVariable(name: "options", arg: 9, scope: !12812, file: !2146, line: 532, type: !121)
!12830 = !DILocalVariable(name: "name", arg: 10, scope: !12812, file: !2146, line: 532, type: !157)
!12831 = !DILocalVariable(name: "stack_ptr", scope: !12812, file: !2146, line: 534, type: !1019)
!12832 = !DILocation(line: 0, scope: !12812)
!12833 = !DILocation(line: 550, column: 28, scope: !12812)
!12834 = !DILocation(line: 550, column: 2, scope: !12812)
!12835 = !DILocation(line: 553, column: 34, scope: !12812)
!12836 = !DILocation(line: 553, column: 2, scope: !12812)
!12837 = !DILocation(line: 554, column: 14, scope: !12812)
!12838 = !DILocation(line: 564, column: 2, scope: !12812)
!12839 = !DILocation(line: 567, column: 14, scope: !12812)
!12840 = !DILocation(line: 567, column: 24, scope: !12812)
!12841 = !DILocation(line: 612, column: 7, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12812, file: !2146, line: 612, column: 6)
!12843 = !DILocation(line: 612, column: 6, scope: !12812)
!12844 = !DILocation(line: 627, column: 40, scope: !12812)
!12845 = !DILocation(line: 637, column: 2, scope: !12812)
!12846 = !DILocation(line: 613, column: 15, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12842, file: !2146, line: 612, column: 17)
!12848 = !DILocation(line: 613, column: 29, scope: !12847)
!12849 = !DILocation(line: 638, column: 1, scope: !12812)
!12850 = distinct !DISubprogram(name: "z_waitq_init", scope: !12851, file: !12851, line: 47, type: !12852, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12854)
!12851 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12852 = !DISubroutineType(types: !12853)
!12853 = !{null, !2181}
!12854 = !{!12855}
!12855 = !DILocalVariable(name: "w", arg: 1, scope: !12850, file: !12851, line: 47, type: !2181)
!12856 = !DILocation(line: 0, scope: !12850)
!12857 = !DILocation(line: 49, column: 21, scope: !12850)
!12858 = !DILocation(line: 49, column: 2, scope: !12850)
!12859 = !DILocation(line: 50, column: 1, scope: !12850)
!12860 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2146, file: !2146, line: 791, type: !12861, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12864)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !12863, !103, !121, !32}
!12863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 32)
!12864 = !{!12865, !12866, !12867, !12868}
!12865 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12860, file: !2146, line: 791, type: !12863)
!12866 = !DILocalVariable(name: "priority", arg: 2, scope: !12860, file: !2146, line: 791, type: !103)
!12867 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12860, file: !2146, line: 792, type: !121)
!12868 = !DILocalVariable(name: "options", arg: 4, scope: !12860, file: !2146, line: 792, type: !32)
!12869 = !DILocation(line: 0, scope: !12860)
!12870 = !DILocation(line: 795, column: 15, scope: !12860)
!12871 = !DILocation(line: 795, column: 25, scope: !12860)
!12872 = !DILocation(line: 796, column: 30, scope: !12860)
!12873 = !DILocation(line: 796, column: 15, scope: !12860)
!12874 = !DILocation(line: 796, column: 28, scope: !12860)
!12875 = !DILocation(line: 797, column: 30, scope: !12860)
!12876 = !DILocation(line: 797, column: 15, scope: !12860)
!12877 = !DILocation(line: 797, column: 28, scope: !12860)
!12878 = !DILocation(line: 799, column: 22, scope: !12860)
!12879 = !DILocation(line: 799, column: 15, scope: !12860)
!12880 = !DILocation(line: 799, column: 20, scope: !12860)
!12881 = !DILocation(line: 801, column: 15, scope: !12860)
!12882 = !DILocation(line: 801, column: 28, scope: !12860)
!12883 = !DILocation(line: 814, column: 2, scope: !12860)
!12884 = !DILocation(line: 815, column: 1, scope: !12860)
!12885 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2146, file: !2146, line: 449, type: !12886, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12888)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{!1019, !2150, !12815, !213}
!12888 = !{!12889, !12890, !12891, !12892, !12893, !12894, !12895, !12896}
!12889 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12885, file: !2146, line: 449, type: !2150)
!12890 = !DILocalVariable(name: "stack", arg: 2, scope: !12885, file: !2146, line: 450, type: !12815)
!12891 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12885, file: !2146, line: 450, type: !213)
!12892 = !DILocalVariable(name: "stack_obj_size", scope: !12885, file: !2146, line: 452, type: !213)
!12893 = !DILocalVariable(name: "stack_buf_size", scope: !12885, file: !2146, line: 452, type: !213)
!12894 = !DILocalVariable(name: "stack_ptr", scope: !12885, file: !2146, line: 453, type: !1019)
!12895 = !DILocalVariable(name: "stack_buf_start", scope: !12885, file: !2146, line: 453, type: !1019)
!12896 = !DILocalVariable(name: "delta", scope: !12885, file: !2146, line: 454, type: !213)
!12897 = !DILocation(line: 0, scope: !12885)
!12898 = !DILocation(line: 465, column: 20, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12885, file: !2146, line: 463, column: 2)
!12900 = !DILocation(line: 466, column: 21, scope: !12899)
!12901 = !DILocation(line: 473, column: 28, scope: !12885)
!12902 = !DILocation(line: 514, column: 33, scope: !12885)
!12903 = !DILocation(line: 514, column: 25, scope: !12885)
!12904 = !DILocation(line: 514, column: 31, scope: !12885)
!12905 = !DILocation(line: 515, column: 25, scope: !12885)
!12906 = !DILocation(line: 515, column: 30, scope: !12885)
!12907 = !DILocation(line: 516, column: 25, scope: !12885)
!12908 = !DILocation(line: 516, column: 31, scope: !12885)
!12909 = !DILocation(line: 520, column: 2, scope: !12885)
!12910 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2100, file: !2100, line: 331, type: !12911, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12913)
!12911 = !DISubroutineType(types: !12912)
!12912 = !{!1019, !12815}
!12913 = !{!12914}
!12914 = !DILocalVariable(name: "sym", arg: 1, scope: !12910, file: !2100, line: 331, type: !12815)
!12915 = !DILocation(line: 0, scope: !12910)
!12916 = !DILocation(line: 333, column: 21, scope: !12910)
!12917 = !DILocation(line: 333, column: 2, scope: !12910)
!12918 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12919, file: !12919, line: 40, type: !12920, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12922)
!12919 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12920 = !DISubroutineType(types: !12921)
!12921 = !{null, !12863}
!12922 = !{!12923}
!12923 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12918, file: !12919, line: 40, type: !12863)
!12924 = !DILocation(line: 0, scope: !12918)
!12925 = !DILocation(line: 42, column: 31, scope: !12918)
!12926 = !DILocation(line: 42, column: 2, scope: !12918)
!12927 = !DILocation(line: 43, column: 1, scope: !12918)
!12928 = distinct !DISubprogram(name: "z_init_timeout", scope: !12919, file: !12919, line: 25, type: !2207, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12929)
!12929 = !{!12930}
!12930 = !DILocalVariable(name: "to", arg: 1, scope: !12928, file: !12919, line: 25, type: !2209)
!12931 = !DILocation(line: 0, scope: !12928)
!12932 = !DILocation(line: 27, column: 22, scope: !12928)
!12933 = !DILocation(line: 27, column: 2, scope: !12928)
!12934 = !DILocation(line: 28, column: 1, scope: !12928)
!12935 = distinct !DISubprogram(name: "sys_dnode_init", scope: !234, file: !234, line: 211, type: !12936, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12938)
!12936 = !DISubroutineType(types: !12937)
!12937 = !{null, !2253}
!12938 = !{!12939}
!12939 = !DILocalVariable(name: "node", arg: 1, scope: !12935, file: !234, line: 211, type: !2253)
!12940 = !DILocation(line: 0, scope: !12935)
!12941 = !DILocation(line: 213, column: 8, scope: !12935)
!12942 = !DILocation(line: 213, column: 13, scope: !12935)
!12943 = !DILocation(line: 214, column: 8, scope: !12935)
!12944 = !DILocation(line: 214, column: 13, scope: !12935)
!12945 = !DILocation(line: 215, column: 1, scope: !12935)
!12946 = distinct !DISubprogram(name: "sys_dlist_init", scope: !234, file: !234, line: 197, type: !12947, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12950)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{null, !12949}
!12949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!12950 = !{!12951}
!12951 = !DILocalVariable(name: "list", arg: 1, scope: !12946, file: !234, line: 197, type: !12949)
!12952 = !DILocation(line: 0, scope: !12946)
!12953 = !DILocation(line: 199, column: 8, scope: !12946)
!12954 = !DILocation(line: 199, column: 13, scope: !12946)
!12955 = !DILocation(line: 200, column: 8, scope: !12946)
!12956 = !DILocation(line: 200, column: 13, scope: !12946)
!12957 = !DILocation(line: 201, column: 1, scope: !12946)
!12958 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2146, file: !2146, line: 641, type: !12959, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12965)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{!2149, !2150, !12815, !213, !3564, !102, !102, !102, !103, !121, !12961}
!12961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1232, line: 67, baseType: !12962)
!12962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1232, line: 65, size: 64, elements: !12963)
!12963 = !{!12964}
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12962, file: !1232, line: 66, baseType: !1231, size: 64)
!12965 = !{!12966, !12967, !12968, !12969, !12970, !12971, !12972, !12973, !12974, !12975}
!12966 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12958, file: !2146, line: 641, type: !2150)
!12967 = !DILocalVariable(name: "stack", arg: 2, scope: !12958, file: !2146, line: 642, type: !12815)
!12968 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12958, file: !2146, line: 643, type: !213)
!12969 = !DILocalVariable(name: "entry", arg: 4, scope: !12958, file: !2146, line: 643, type: !3564)
!12970 = !DILocalVariable(name: "p1", arg: 5, scope: !12958, file: !2146, line: 644, type: !102)
!12971 = !DILocalVariable(name: "p2", arg: 6, scope: !12958, file: !2146, line: 644, type: !102)
!12972 = !DILocalVariable(name: "p3", arg: 7, scope: !12958, file: !2146, line: 644, type: !102)
!12973 = !DILocalVariable(name: "prio", arg: 8, scope: !12958, file: !2146, line: 645, type: !103)
!12974 = !DILocalVariable(name: "options", arg: 9, scope: !12958, file: !2146, line: 645, type: !121)
!12975 = !DILocalVariable(name: "delay", arg: 10, scope: !12958, file: !2146, line: 645, type: !12961)
!12976 = !DILocation(line: 0, scope: !12958)
!12977 = !DILocation(line: 649, column: 2, scope: !12958)
!12978 = !DILocation(line: 652, column: 7, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12958, file: !2146, line: 652, column: 6)
!12980 = !DILocation(line: 652, column: 6, scope: !12958)
!12981 = !DILocation(line: 653, column: 3, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12979, file: !2146, line: 652, column: 39)
!12983 = !DILocation(line: 654, column: 2, scope: !12982)
!12984 = !DILocation(line: 656, column: 2, scope: !12958)
!12985 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2146, file: !2146, line: 401, type: !12986, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !12988)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{null, !2150, !12961}
!12988 = !{!12989, !12990}
!12989 = !DILocalVariable(name: "thread", arg: 1, scope: !12985, file: !2146, line: 401, type: !2150)
!12990 = !DILocalVariable(name: "delay", arg: 2, scope: !12985, file: !2146, line: 401, type: !12961)
!12991 = !DILocation(line: 0, scope: !12985)
!12992 = !DILocation(line: 404, column: 6, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12985, file: !2146, line: 404, column: 6)
!12994 = !DILocation(line: 404, column: 6, scope: !12985)
!12995 = !DILocation(line: 405, column: 3, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12993, file: !2146, line: 404, column: 38)
!12997 = !DILocation(line: 406, column: 2, scope: !12996)
!12998 = !DILocation(line: 407, column: 3, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12993, file: !2146, line: 406, column: 9)
!13000 = !DILocation(line: 413, column: 1, scope: !12985)
!13001 = distinct !DISubprogram(name: "k_thread_start", scope: !3686, file: !3686, line: 205, type: !13002, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13004)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{null, !2149}
!13004 = !{!13005}
!13005 = !DILocalVariable(name: "thread", arg: 1, scope: !13001, file: !3686, line: 205, type: !2149)
!13006 = !DILocation(line: 0, scope: !13001)
!13007 = !DILocation(line: 214, column: 2, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13001, file: !3686, line: 214, column: 2)
!13009 = !{i64 2152241409}
!13010 = !DILocation(line: 215, column: 2, scope: !13001)
!13011 = !DILocation(line: 216, column: 1, scope: !13001)
!13012 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12919, file: !12919, line: 47, type: !12986, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13013)
!13013 = !{!13014, !13015}
!13014 = !DILocalVariable(name: "thread", arg: 1, scope: !13012, file: !12919, line: 47, type: !2150)
!13015 = !DILocalVariable(name: "ticks", arg: 2, scope: !13012, file: !12919, line: 47, type: !12961)
!13016 = !DILocation(line: 0, scope: !13012)
!13017 = !DILocation(line: 49, column: 30, scope: !13012)
!13018 = !DILocation(line: 49, column: 2, scope: !13012)
!13019 = !DILocation(line: 50, column: 1, scope: !13012)
!13020 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2146, file: !2146, line: 748, type: !3124, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13021)
!13021 = !{!13022, !13040}
!13022 = !DILocalVariable(name: "thread_data", scope: !13023, file: !2146, line: 750, type: !13024)
!13023 = distinct !DILexicalBlock(scope: !13020, file: !2146, line: 750, column: 2)
!13024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13025, size: 32)
!13025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !320, line: 620, size: 384, elements: !13026)
!13026 = !{!13027, !13028, !13029, !13030, !13031, !13032, !13033, !13034, !13035, !13036, !13037, !13039}
!13027 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13025, file: !320, line: 621, baseType: !2150, size: 32)
!13028 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13025, file: !320, line: 622, baseType: !12815, size: 32, offset: 32)
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13025, file: !320, line: 623, baseType: !32, size: 32, offset: 64)
!13030 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13025, file: !320, line: 624, baseType: !3564, size: 32, offset: 96)
!13031 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13025, file: !320, line: 625, baseType: !102, size: 32, offset: 128)
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13025, file: !320, line: 626, baseType: !102, size: 32, offset: 160)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13025, file: !320, line: 627, baseType: !102, size: 32, offset: 192)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13025, file: !320, line: 628, baseType: !103, size: 32, offset: 224)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13025, file: !320, line: 629, baseType: !121, size: 32, offset: 256)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13025, file: !320, line: 630, baseType: !675, size: 32, offset: 288)
!13037 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13025, file: !320, line: 631, baseType: !13038, size: 32, offset: 320)
!13038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 32)
!13039 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13025, file: !320, line: 632, baseType: !157, size: 32, offset: 352)
!13040 = !DILocalVariable(name: "thread_data", scope: !13041, file: !2146, line: 781, type: !13024)
!13041 = distinct !DILexicalBlock(scope: !13020, file: !2146, line: 781, column: 2)
!13042 = !DILocation(line: 0, scope: !13023)
!13043 = !DILocation(line: 750, column: 2, scope: !13023)
!13044 = !DILocation(line: 780, column: 2, scope: !13020)
!13045 = !DILocation(line: 0, scope: !13041)
!13046 = !DILocation(line: 781, column: 2, scope: !13041)
!13047 = !DILocation(line: 752, column: 17, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !2146, line: 750, column: 38)
!13049 = distinct !DILexicalBlock(scope: !13023, file: !2146, line: 750, column: 2)
!13050 = !DILocation(line: 753, column: 17, scope: !13048)
!13051 = !DILocation(line: 754, column: 17, scope: !13048)
!13052 = !DILocation(line: 755, column: 17, scope: !13048)
!13053 = !DILocation(line: 756, column: 17, scope: !13048)
!13054 = !DILocation(line: 757, column: 17, scope: !13048)
!13055 = !DILocation(line: 758, column: 17, scope: !13048)
!13056 = !DILocation(line: 759, column: 17, scope: !13048)
!13057 = !DILocation(line: 760, column: 17, scope: !13048)
!13058 = !DILocation(line: 751, column: 3, scope: !13048)
!13059 = !DILocation(line: 763, column: 16, scope: !13048)
!13060 = !DILocation(line: 763, column: 29, scope: !13048)
!13061 = !DILocation(line: 763, column: 39, scope: !13048)
!13062 = !DILocation(line: 750, column: 2, scope: !13049)
!13063 = !DILocation(line: 750, column: 2, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13049, file: !2146, line: 750, column: 2)
!13065 = distinct !{!13065, !13043, !13066}
!13066 = !DILocation(line: 764, column: 2, scope: !13023)
!13067 = !DILocation(line: 787, column: 2, scope: !13020)
!13068 = !DILocation(line: 788, column: 1, scope: !13020)
!13069 = !DILocation(line: 782, column: 20, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !2146, line: 782, column: 7)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !2146, line: 781, column: 38)
!13072 = distinct !DILexicalBlock(scope: !13041, file: !2146, line: 781, column: 2)
!13073 = !DILocation(line: 782, column: 31, scope: !13070)
!13074 = !DILocation(line: 782, column: 7, scope: !13071)
!13075 = !DILocation(line: 783, column: 37, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13070, file: !2146, line: 782, column: 51)
!13077 = !DILocation(line: 784, column: 10, scope: !13076)
!13078 = !DILocation(line: 783, column: 4, scope: !13076)
!13079 = !DILocation(line: 785, column: 3, scope: !13076)
!13080 = !DILocation(line: 781, column: 2, scope: !13072)
!13081 = !DILocation(line: 781, column: 2, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13072, file: !2146, line: 781, column: 2)
!13083 = distinct !{!13083, !13046, !13084}
!13084 = !DILocation(line: 786, column: 2, scope: !13041)
!13085 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5118, file: !5118, line: 403, type: !5119, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13086)
!13086 = !{!13087}
!13087 = !DILocalVariable(name: "t", arg: 1, scope: !13085, file: !5118, line: 403, type: !2254)
!13088 = !DILocation(line: 0, scope: !13085)
!13089 = !DILocalVariable(name: "t", arg: 1, scope: !13090, file: !5118, line: 102, type: !2254)
!13090 = distinct !DISubprogram(name: "z_tmcvt", scope: !5118, file: !5118, line: 102, type: !5126, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13091)
!13091 = !{!13089, !13092, !13093, !13094, !13095, !13096, !13097, !13098, !13099, !13100, !13101}
!13092 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13090, file: !5118, line: 102, type: !121)
!13093 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13090, file: !5118, line: 103, type: !121)
!13094 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13090, file: !5118, line: 103, type: !170)
!13095 = !DILocalVariable(name: "result32", arg: 5, scope: !13090, file: !5118, line: 104, type: !170)
!13096 = !DILocalVariable(name: "round_up", arg: 6, scope: !13090, file: !5118, line: 104, type: !170)
!13097 = !DILocalVariable(name: "round_off", arg: 7, scope: !13090, file: !5118, line: 105, type: !170)
!13098 = !DILocalVariable(name: "mul_ratio", scope: !13090, file: !5118, line: 107, type: !170)
!13099 = !DILocalVariable(name: "div_ratio", scope: !13090, file: !5118, line: 109, type: !170)
!13100 = !DILocalVariable(name: "off", scope: !13090, file: !5118, line: 116, type: !2254)
!13101 = !DILocalVariable(name: "rdivisor", scope: !13102, file: !5118, line: 119, type: !121)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !5118, line: 118, column: 18)
!13103 = distinct !DILexicalBlock(scope: !13090, file: !5118, line: 118, column: 6)
!13104 = !DILocation(line: 0, scope: !13090, inlinedAt: !13105)
!13105 = distinct !DILocation(line: 406, column: 9, scope: !13085)
!13106 = !DILocation(line: 145, column: 13, scope: !13107, inlinedAt: !13105)
!13107 = distinct !DILexicalBlock(scope: !13108, file: !5118, line: 144, column: 10)
!13108 = distinct !DILexicalBlock(scope: !13109, file: !5118, line: 142, column: 7)
!13109 = distinct !DILexicalBlock(scope: !13110, file: !5118, line: 141, column: 24)
!13110 = distinct !DILexicalBlock(scope: !13111, file: !5118, line: 141, column: 13)
!13111 = distinct !DILexicalBlock(scope: !13090, file: !5118, line: 134, column: 6)
!13112 = !DILocation(line: 406, column: 2, scope: !13085)
!13113 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2146, file: !2146, line: 817, type: !3562, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13114)
!13114 = !{!13115, !13116, !13117, !13118}
!13115 = !DILocalVariable(name: "entry", arg: 1, scope: !13113, file: !2146, line: 817, type: !3564)
!13116 = !DILocalVariable(name: "p1", arg: 2, scope: !13113, file: !2146, line: 818, type: !102)
!13117 = !DILocalVariable(name: "p2", arg: 3, scope: !13113, file: !2146, line: 818, type: !102)
!13118 = !DILocalVariable(name: "p3", arg: 4, scope: !13113, file: !2146, line: 818, type: !102)
!13119 = !DILocation(line: 0, scope: !13113)
!13120 = !DILocation(line: 822, column: 2, scope: !13113)
!13121 = !DILocation(line: 822, column: 17, scope: !13113)
!13122 = !DILocation(line: 822, column: 30, scope: !13113)
!13123 = !DILocation(line: 823, column: 2, scope: !13113)
!13124 = !DILocation(line: 845, column: 2, scope: !13113)
!13125 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2146, file: !2146, line: 888, type: !13126, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13128)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{!103, !2150}
!13128 = !{!13129}
!13129 = !DILocalVariable(name: "thread", arg: 1, scope: !13125, file: !2146, line: 888, type: !2150)
!13130 = !DILocation(line: 0, scope: !13125)
!13131 = !DILocation(line: 893, column: 2, scope: !13125)
!13132 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2146, file: !2146, line: 897, type: !13133, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13135)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{!103, !2150, !32}
!13135 = !{!13136, !13137}
!13136 = !DILocalVariable(name: "thread", arg: 1, scope: !13132, file: !2146, line: 897, type: !2150)
!13137 = !DILocalVariable(name: "options", arg: 2, scope: !13132, file: !2146, line: 897, type: !32)
!13138 = !DILocation(line: 0, scope: !13132)
!13139 = !DILocation(line: 902, column: 2, scope: !13132)
!13140 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2146, file: !2146, line: 1072, type: !13141, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13146)
!13141 = !DISubroutineType(types: !13142)
!13142 = !{!103, !2149, !13143}
!13143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13144, size: 32)
!13144 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !224, line: 234, baseType: !13145)
!13145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !224, line: 192, elements: !335)
!13146 = !{!13147, !13148}
!13147 = !DILocalVariable(name: "thread", arg: 1, scope: !13140, file: !2146, line: 1072, type: !2149)
!13148 = !DILocalVariable(name: "stats", arg: 2, scope: !13140, file: !2146, line: 1073, type: !13143)
!13149 = !DILocation(line: 0, scope: !13140)
!13150 = !DILocation(line: 1075, column: 14, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13140, file: !2146, line: 1075, column: 6)
!13152 = !DILocation(line: 1075, column: 23, scope: !13151)
!13153 = !DILocation(line: 1086, column: 1, scope: !13140)
!13154 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2146, file: !2146, line: 1088, type: !13155, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !13157)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{!103, !13143}
!13157 = !{!13158}
!13158 = !DILocalVariable(name: "stats", arg: 1, scope: !13154, file: !2146, line: 1088, type: !13143)
!13159 = !DILocation(line: 0, scope: !13154)
!13160 = !DILocation(line: 1094, column: 12, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13154, file: !2146, line: 1094, column: 6)
!13162 = !DILocation(line: 1120, column: 1, scope: !13154)
!13163 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13164, file: !13164, line: 20, type: !3124, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !335)
!13164 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13165 = !DILocation(line: 30, column: 2, scope: !13163)
!13166 = !DILocation(line: 31, column: 1, scope: !13163)
!13167 = distinct !DISubprogram(name: "idle", scope: !13164, file: !13164, line: 33, type: !3567, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !13168)
!13168 = !{!13169, !13170, !13171}
!13169 = !DILocalVariable(name: "unused1", arg: 1, scope: !13167, file: !13164, line: 33, type: !102)
!13170 = !DILocalVariable(name: "unused2", arg: 2, scope: !13167, file: !13164, line: 33, type: !102)
!13171 = !DILocalVariable(name: "unused3", arg: 3, scope: !13167, file: !13164, line: 33, type: !102)
!13172 = !DILocation(line: 0, scope: !13167)
!13173 = !DILocation(line: 41, column: 2, scope: !13167)
!13174 = !DILocation(line: 55, column: 2, scope: !13175, inlinedAt: !13179)
!13175 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !13176)
!13176 = !{!13177, !13178}
!13177 = !DILocalVariable(name: "key", scope: !13175, file: !5051, line: 44, type: !32)
!13178 = !DILocalVariable(name: "tmp", scope: !13175, file: !5051, line: 53, type: !32)
!13179 = distinct !DILocation(line: 62, column: 10, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13167, file: !13164, line: 41, column: 15)
!13181 = !{i64 1648869}
!13182 = !DILocation(line: 0, scope: !13175, inlinedAt: !13179)
!13183 = !DILocation(line: 86, column: 3, scope: !13180)
!13184 = distinct !{!13184, !13173, !13185}
!13185 = !DILocation(line: 105, column: 2, scope: !13167)
!13186 = distinct !DISubprogram(name: "k_cpu_idle", scope: !320, file: !320, line: 5627, type: !3124, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3105, retainedNodes: !335)
!13187 = !DILocation(line: 5629, column: 2, scope: !13186)
!13188 = !DILocation(line: 5630, column: 1, scope: !13186)
!13189 = !DISubprogram(name: "arch_cpu_idle", scope: !3565, file: !3565, line: 167, type: !3124, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!13190 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2377, file: !2377, line: 49, type: !13191, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13200)
!13191 = !DISubroutineType(types: !13192)
!13192 = !{!103, !13193}
!13193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13194, size: 32)
!13194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !320, line: 2720, size: 160, elements: !13195)
!13195 = !{!13196, !13197, !13198, !13199}
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13194, file: !320, line: 2722, baseType: !2308, size: 64)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13194, file: !320, line: 2724, baseType: !2290, size: 32, offset: 64)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13194, file: !320, line: 2727, baseType: !121, size: 32, offset: 96)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13194, file: !320, line: 2730, baseType: !103, size: 32, offset: 128)
!13200 = !{!13201}
!13201 = !DILocalVariable(name: "mutex", arg: 1, scope: !13190, file: !2377, line: 49, type: !13193)
!13202 = !DILocation(line: 0, scope: !13190)
!13203 = !DILocation(line: 51, column: 9, scope: !13190)
!13204 = !DILocation(line: 51, column: 15, scope: !13190)
!13205 = !DILocation(line: 52, column: 9, scope: !13190)
!13206 = !DILocation(line: 52, column: 20, scope: !13190)
!13207 = !DILocation(line: 54, column: 23, scope: !13190)
!13208 = !DILocation(line: 54, column: 2, scope: !13190)
!13209 = !DILocation(line: 60, column: 2, scope: !13190)
!13210 = distinct !DISubprogram(name: "z_waitq_init", scope: !12851, file: !12851, line: 47, type: !13211, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13213)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{null, !2307}
!13213 = !{!13214}
!13214 = !DILocalVariable(name: "w", arg: 1, scope: !13210, file: !12851, line: 47, type: !2307)
!13215 = !DILocation(line: 0, scope: !13210)
!13216 = !DILocation(line: 49, column: 21, scope: !13210)
!13217 = !DILocation(line: 49, column: 2, scope: !13210)
!13218 = !DILocation(line: 50, column: 1, scope: !13210)
!13219 = distinct !DISubprogram(name: "sys_dlist_init", scope: !234, file: !234, line: 197, type: !13220, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13223)
!13220 = !DISubroutineType(types: !13221)
!13221 = !{null, !13222}
!13222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!13223 = !{!13224}
!13224 = !DILocalVariable(name: "list", arg: 1, scope: !13219, file: !234, line: 197, type: !13222)
!13225 = !DILocation(line: 0, scope: !13219)
!13226 = !DILocation(line: 199, column: 8, scope: !13219)
!13227 = !DILocation(line: 199, column: 13, scope: !13219)
!13228 = !DILocation(line: 200, column: 8, scope: !13219)
!13229 = !DILocation(line: 200, column: 13, scope: !13219)
!13230 = !DILocation(line: 201, column: 1, scope: !13219)
!13231 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2377, file: !2377, line: 95, type: !13232, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13238)
!13232 = !DISubroutineType(types: !13233)
!13233 = !{!103, !13193, !13234}
!13234 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1232, line: 67, baseType: !13235)
!13235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1232, line: 65, size: 64, elements: !13236)
!13236 = !{!13237}
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13235, file: !1232, line: 66, baseType: !1231, size: 64)
!13238 = !{!13239, !13240, !13241, !13242, !13247, !13248, !13249}
!13239 = !DILocalVariable(name: "mutex", arg: 1, scope: !13231, file: !2377, line: 95, type: !13193)
!13240 = !DILocalVariable(name: "timeout", arg: 2, scope: !13231, file: !2377, line: 95, type: !13234)
!13241 = !DILocalVariable(name: "new_prio", scope: !13231, file: !2377, line: 97, type: !103)
!13242 = !DILocalVariable(name: "key", scope: !13231, file: !2377, line: 98, type: !13243)
!13243 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13244)
!13244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13245)
!13245 = !{!13246}
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13244, file: !334, line: 33, baseType: !103, size: 32)
!13247 = !DILocalVariable(name: "resched", scope: !13231, file: !2377, line: 99, type: !170)
!13248 = !DILocalVariable(name: "got_mutex", scope: !13231, file: !2377, line: 146, type: !103)
!13249 = !DILocalVariable(name: "waiter", scope: !13250, file: !2377, line: 169, type: !2290)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !2377, line: 168, column: 36)
!13251 = distinct !DILexicalBlock(scope: !13231, file: !2377, line: 168, column: 6)
!13252 = !DILocation(line: 0, scope: !13231)
!13253 = !DILocalVariable(name: "l", arg: 1, scope: !13254, file: !334, line: 136, type: !13257)
!13254 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13255, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13258)
!13255 = !DISubroutineType(types: !13256)
!13256 = !{!13243, !13257}
!13257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!13258 = !{!13253, !13259}
!13259 = !DILocalVariable(name: "k", scope: !13254, file: !334, line: 139, type: !13243)
!13260 = !DILocation(line: 0, scope: !13254, inlinedAt: !13261)
!13261 = distinct !DILocation(line: 105, column: 8, scope: !13231)
!13262 = !DILocation(line: 55, column: 2, scope: !13263, inlinedAt: !13267)
!13263 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13264)
!13264 = !{!13265, !13266}
!13265 = !DILocalVariable(name: "key", scope: !13263, file: !5051, line: 44, type: !32)
!13266 = !DILocalVariable(name: "tmp", scope: !13263, file: !5051, line: 53, type: !32)
!13267 = distinct !DILocation(line: 145, column: 10, scope: !13254, inlinedAt: !13261)
!13268 = !{i64 1653277}
!13269 = !DILocation(line: 0, scope: !13263, inlinedAt: !13267)
!13270 = !DILocation(line: 107, column: 6, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13231, file: !2377, line: 107, column: 6)
!13272 = !DILocation(line: 107, column: 6, scope: !13231)
!13273 = !{!"branch_weights", i32 2000, i32 1}
!13274 = !DILocation(line: 110, column: 6, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13271, file: !2377, line: 107, column: 71)
!13276 = !DILocation(line: 110, column: 21, scope: !13275)
!13277 = !DILocation(line: 109, column: 28, scope: !13275)
!13278 = !DILocation(line: 111, column: 13, scope: !13275)
!13279 = !DILocation(line: 114, column: 18, scope: !13275)
!13280 = !DILocation(line: 109, column: 10, scope: !13275)
!13281 = !DILocation(line: 109, column: 26, scope: !13275)
!13282 = !DILocation(line: 113, column: 20, scope: !13275)
!13283 = !DILocation(line: 114, column: 10, scope: !13275)
!13284 = !DILocation(line: 114, column: 16, scope: !13275)
!13285 = !DILocalVariable(name: "key", arg: 2, scope: !13286, file: !334, line: 190, type: !13243)
!13286 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !13287, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13289)
!13287 = !DISubroutineType(types: !13288)
!13288 = !{null, !13257, !13243}
!13289 = !{!13290, !13285}
!13290 = !DILocalVariable(name: "l", arg: 1, scope: !13286, file: !334, line: 189, type: !13257)
!13291 = !DILocation(line: 0, scope: !13286, inlinedAt: !13292)
!13292 = distinct !DILocation(line: 120, column: 3, scope: !13275)
!13293 = !DILocalVariable(name: "key", arg: 1, scope: !13294, file: !5051, line: 84, type: !32)
!13294 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13295)
!13295 = !{!13293}
!13296 = !DILocation(line: 0, scope: !13294, inlinedAt: !13297)
!13297 = distinct !DILocation(line: 215, column: 2, scope: !13286, inlinedAt: !13292)
!13298 = !DILocation(line: 95, column: 2, scope: !13294, inlinedAt: !13297)
!13299 = !{i64 1654094}
!13300 = !DILocation(line: 124, column: 3, scope: !13275)
!13301 = !DILocation(line: 127, column: 6, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13231, file: !2377, line: 127, column: 6)
!13303 = !DILocation(line: 127, column: 6, scope: !13231)
!13304 = !{!"branch_weights", i32 1, i32 2000}
!13305 = !DILocation(line: 0, scope: !13286, inlinedAt: !13306)
!13306 = distinct !DILocation(line: 128, column: 3, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13302, file: !2377, line: 127, column: 50)
!13308 = !DILocation(line: 0, scope: !13294, inlinedAt: !13309)
!13309 = distinct !DILocation(line: 215, column: 2, scope: !13286, inlinedAt: !13306)
!13310 = !DILocation(line: 95, column: 2, scope: !13294, inlinedAt: !13309)
!13311 = !DILocation(line: 132, column: 3, scope: !13307)
!13312 = !DILocation(line: 137, column: 53, scope: !13231)
!13313 = !DILocation(line: 137, column: 38, scope: !13231)
!13314 = !DILocation(line: 138, column: 29, scope: !13231)
!13315 = !DILocation(line: 138, column: 10, scope: !13231)
!13316 = !DILocation(line: 137, column: 13, scope: !13231)
!13317 = !DILocation(line: 142, column: 6, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13231, file: !2377, line: 142, column: 6)
!13319 = !DILocation(line: 142, column: 6, scope: !13231)
!13320 = !DILocation(line: 143, column: 13, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13318, file: !2377, line: 142, column: 59)
!13322 = !DILocation(line: 144, column: 2, scope: !13321)
!13323 = !DILocation(line: 146, column: 50, scope: !13231)
!13324 = !DILocation(line: 146, column: 18, scope: !13231)
!13325 = !DILocation(line: 153, column: 16, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13231, file: !2377, line: 153, column: 6)
!13327 = !DILocation(line: 153, column: 6, scope: !13231)
!13328 = !DILocation(line: 0, scope: !13254, inlinedAt: !13329)
!13329 = distinct !DILocation(line: 162, column: 8, scope: !13231)
!13330 = !DILocation(line: 55, column: 2, scope: !13263, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 145, column: 10, scope: !13254, inlinedAt: !13329)
!13332 = !DILocation(line: 0, scope: !13263, inlinedAt: !13331)
!13333 = !DILocation(line: 168, column: 6, scope: !13251)
!13334 = !DILocation(line: 168, column: 6, scope: !13231)
!13335 = !DILocation(line: 169, column: 29, scope: !13250)
!13336 = !DILocation(line: 0, scope: !13250)
!13337 = !DILocation(line: 171, column: 22, scope: !13250)
!13338 = !DILocation(line: 171, column: 14, scope: !13250)
!13339 = !DILocation(line: 172, column: 42, scope: !13250)
!13340 = !DILocation(line: 172, column: 29, scope: !13250)
!13341 = !DILocation(line: 172, column: 55, scope: !13250)
!13342 = !DILocation(line: 172, column: 4, scope: !13250)
!13343 = !DILocation(line: 173, column: 11, scope: !13250)
!13344 = !DILocation(line: 177, column: 13, scope: !13250)
!13345 = !DILocation(line: 177, column: 48, scope: !13250)
!13346 = !DILocation(line: 180, column: 6, scope: !13231)
!13347 = !DILocation(line: 181, column: 3, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13349, file: !2377, line: 180, column: 15)
!13349 = distinct !DILexicalBlock(scope: !13231, file: !2377, line: 180, column: 6)
!13350 = !DILocation(line: 182, column: 2, scope: !13348)
!13351 = !DILocation(line: 0, scope: !13286, inlinedAt: !13352)
!13352 = distinct !DILocation(line: 183, column: 3, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13349, file: !2377, line: 182, column: 9)
!13354 = !DILocation(line: 0, scope: !13294, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 215, column: 2, scope: !13286, inlinedAt: !13352)
!13356 = !DILocation(line: 95, column: 2, scope: !13294, inlinedAt: !13355)
!13357 = !DILocation(line: 189, column: 1, scope: !13231)
!13358 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2377, file: !2377, line: 72, type: !13359, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13361)
!13359 = !DISubroutineType(types: !13360)
!13360 = !{!675, !675, !675}
!13361 = !{!13362, !13363, !13364}
!13362 = !DILocalVariable(name: "target", arg: 1, scope: !13358, file: !2377, line: 72, type: !675)
!13363 = !DILocalVariable(name: "limit", arg: 2, scope: !13358, file: !2377, line: 72, type: !675)
!13364 = !DILocalVariable(name: "new_prio", scope: !13358, file: !2377, line: 74, type: !103)
!13365 = !DILocation(line: 0, scope: !13358)
!13366 = !DILocation(line: 74, column: 17, scope: !13358)
!13367 = !DILocation(line: 76, column: 13, scope: !13358)
!13368 = !DILocation(line: 78, column: 2, scope: !13358)
!13369 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12525, file: !12525, line: 211, type: !13370, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{!170, !103, !103}
!13372 = !{!13373, !13374}
!13373 = !DILocalVariable(name: "prio", arg: 1, scope: !13369, file: !12525, line: 211, type: !103)
!13374 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13369, file: !12525, line: 211, type: !103)
!13375 = !DILocation(line: 0, scope: !13369)
!13376 = !DILocation(line: 213, column: 9, scope: !13369)
!13377 = !DILocation(line: 213, column: 2, scope: !13369)
!13378 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2377, file: !2377, line: 81, type: !13379, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13381)
!13379 = !DISubroutineType(types: !13380)
!13380 = !{!170, !13193, !675}
!13381 = !{!13382, !13383}
!13382 = !DILocalVariable(name: "mutex", arg: 1, scope: !13378, file: !2377, line: 81, type: !13193)
!13383 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13378, file: !2377, line: 81, type: !675)
!13384 = !DILocation(line: 0, scope: !13378)
!13385 = !DILocation(line: 83, column: 13, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13378, file: !2377, line: 83, column: 6)
!13387 = !DILocation(line: 83, column: 25, scope: !13386)
!13388 = !DILocation(line: 83, column: 6, scope: !13386)
!13389 = !DILocation(line: 83, column: 30, scope: !13386)
!13390 = !DILocation(line: 83, column: 6, scope: !13378)
!13391 = !DILocation(line: 90, column: 10, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13386, file: !2377, line: 83, column: 43)
!13393 = !DILocation(line: 90, column: 3, scope: !13392)
!13394 = !DILocation(line: 93, column: 1, scope: !13378)
!13395 = distinct !DISubprogram(name: "z_waitq_head", scope: !12851, file: !12851, line: 52, type: !13396, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13398)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{!2290, !2307}
!13398 = !{!13399}
!13399 = !DILocalVariable(name: "w", arg: 1, scope: !13395, file: !12851, line: 52, type: !2307)
!13400 = !DILocation(line: 0, scope: !13395)
!13401 = !DILocation(line: 54, column: 52, scope: !13395)
!13402 = !DILocation(line: 54, column: 28, scope: !13395)
!13403 = !DILocation(line: 54, column: 9, scope: !13395)
!13404 = !DILocation(line: 54, column: 2, scope: !13395)
!13405 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !234, file: !234, line: 294, type: !13406, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13408)
!13406 = !DISubroutineType(types: !13407)
!13407 = !{!2275, !13222}
!13408 = !{!13409}
!13409 = !DILocalVariable(name: "list", arg: 1, scope: !13405, file: !234, line: 294, type: !13222)
!13410 = !DILocation(line: 0, scope: !13405)
!13411 = !DILocation(line: 296, column: 9, scope: !13405)
!13412 = !DILocation(line: 296, column: 49, scope: !13405)
!13413 = !DILocation(line: 296, column: 2, scope: !13405)
!13414 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !234, file: !234, line: 266, type: !13415, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13417)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{!170, !13222}
!13417 = !{!13418}
!13418 = !DILocalVariable(name: "list", arg: 1, scope: !13414, file: !234, line: 266, type: !13222)
!13419 = !DILocation(line: 0, scope: !13414)
!13420 = !DILocation(line: 268, column: 15, scope: !13414)
!13421 = !DILocation(line: 268, column: 20, scope: !13414)
!13422 = !DILocation(line: 268, column: 2, scope: !13414)
!13423 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12525, file: !12525, line: 206, type: !13370, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13424)
!13424 = !{!13425, !13426}
!13425 = !DILocalVariable(name: "prio1", arg: 1, scope: !13423, file: !12525, line: 206, type: !103)
!13426 = !DILocalVariable(name: "prio2", arg: 2, scope: !13423, file: !12525, line: 206, type: !103)
!13427 = !DILocation(line: 0, scope: !13423)
!13428 = !DILocation(line: 208, column: 15, scope: !13423)
!13429 = !DILocation(line: 208, column: 2, scope: !13423)
!13430 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12525, file: !12525, line: 186, type: !107, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13431)
!13431 = !{!13432}
!13432 = !DILocalVariable(name: "prio", arg: 1, scope: !13430, file: !12525, line: 186, type: !103)
!13433 = !DILocation(line: 0, scope: !13430)
!13434 = !DILocation(line: 188, column: 9, scope: !13430)
!13435 = !DILocation(line: 188, column: 2, scope: !13430)
!13436 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12525, file: !12525, line: 181, type: !13437, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13439)
!13437 = !DISubroutineType(types: !13438)
!13438 = !{!170, !103}
!13439 = !{!13440}
!13440 = !DILocalVariable(name: "prio", arg: 1, scope: !13436, file: !12525, line: 181, type: !103)
!13441 = !DILocation(line: 0, scope: !13436)
!13442 = !DILocation(line: 183, column: 14, scope: !13436)
!13443 = !DILocation(line: 183, column: 2, scope: !13436)
!13444 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2377, file: !2377, line: 201, type: !13191, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13445)
!13445 = !{!13446, !13447, !13448, !13449}
!13446 = !DILocalVariable(name: "mutex", arg: 1, scope: !13444, file: !2377, line: 201, type: !13193)
!13447 = !DILocalVariable(name: "new_owner", scope: !13444, file: !2377, line: 203, type: !2290)
!13448 = !DILocalVariable(name: "key", scope: !13444, file: !2377, line: 242, type: !13243)
!13449 = !DILabel(scope: !13444, name: "k_mutex_unlock_return", file: !2377, line: 270)
!13450 = !DILocation(line: 0, scope: !13444)
!13451 = !DILocation(line: 209, column: 2, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13444, file: !2377, line: 209, column: 2)
!13453 = !DILocation(line: 209, column: 2, scope: !13444)
!13454 = !DILocation(line: 217, column: 2, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13444, file: !2377, line: 217, column: 2)
!13456 = !DILocation(line: 217, column: 2, scope: !13444)
!13457 = !DILocation(line: 237, column: 13, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13444, file: !2377, line: 237, column: 6)
!13459 = !DILocation(line: 237, column: 24, scope: !13458)
!13460 = !DILocation(line: 237, column: 6, scope: !13444)
!13461 = !DILocation(line: 238, column: 20, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13458, file: !2377, line: 237, column: 30)
!13463 = !DILocation(line: 239, column: 3, scope: !13462)
!13464 = !DILocation(line: 0, scope: !13254, inlinedAt: !13465)
!13465 = distinct !DILocation(line: 242, column: 25, scope: !13444)
!13466 = !DILocation(line: 55, column: 2, scope: !13263, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 145, column: 10, scope: !13254, inlinedAt: !13465)
!13468 = !DILocation(line: 0, scope: !13263, inlinedAt: !13467)
!13469 = !DILocation(line: 244, column: 34, scope: !13444)
!13470 = !DILocation(line: 244, column: 2, scope: !13444)
!13471 = !DILocation(line: 247, column: 44, scope: !13444)
!13472 = !DILocation(line: 247, column: 14, scope: !13444)
!13473 = !DILocation(line: 249, column: 15, scope: !13444)
!13474 = !DILocation(line: 254, column: 16, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13444, file: !2377, line: 254, column: 6)
!13476 = !DILocation(line: 254, column: 6, scope: !13444)
!13477 = !DILocation(line: 260, column: 44, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13475, file: !2377, line: 254, column: 25)
!13479 = !DILocation(line: 260, column: 28, scope: !13478)
!13480 = !DILocation(line: 260, column: 26, scope: !13478)
!13481 = !DILocalVariable(name: "thread", arg: 1, scope: !13482, file: !12545, line: 65, type: !2290)
!13482 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12545, file: !12545, line: 65, type: !13483, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2272, retainedNodes: !13485)
!13483 = !DISubroutineType(types: !13484)
!13484 = !{null, !2290, !32}
!13485 = !{!13481, !13486}
!13486 = !DILocalVariable(name: "value", arg: 2, scope: !13482, file: !12545, line: 65, type: !32)
!13487 = !DILocation(line: 0, scope: !13482, inlinedAt: !13488)
!13488 = distinct !DILocation(line: 261, column: 3, scope: !13478)
!13489 = !DILocation(line: 67, column: 15, scope: !13482, inlinedAt: !13488)
!13490 = !DILocation(line: 67, column: 33, scope: !13482, inlinedAt: !13488)
!13491 = !DILocation(line: 262, column: 3, scope: !13478)
!13492 = !DILocation(line: 263, column: 3, scope: !13478)
!13493 = !DILocation(line: 264, column: 2, scope: !13478)
!13494 = !DILocation(line: 265, column: 21, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13475, file: !2377, line: 264, column: 9)
!13496 = !DILocation(line: 0, scope: !13286, inlinedAt: !13497)
!13497 = distinct !DILocation(line: 266, column: 3, scope: !13495)
!13498 = !DILocation(line: 0, scope: !13294, inlinedAt: !13499)
!13499 = distinct !DILocation(line: 215, column: 2, scope: !13286, inlinedAt: !13497)
!13500 = !DILocation(line: 95, column: 2, scope: !13294, inlinedAt: !13499)
!13501 = !DILocation(line: 274, column: 1, scope: !13444)
!13502 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2488, file: !2488, line: 93, type: !13503, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13505)
!13503 = !DISubroutineType(types: !13504)
!13504 = !{!675, !2383, !2383}
!13505 = !{!13506, !13507, !13508, !13509}
!13506 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13502, file: !2488, line: 93, type: !2383)
!13507 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13502, file: !2488, line: 94, type: !2383)
!13508 = !DILocalVariable(name: "b1", scope: !13502, file: !2488, line: 97, type: !675)
!13509 = !DILocalVariable(name: "b2", scope: !13502, file: !2488, line: 98, type: !675)
!13510 = !DILocation(line: 0, scope: !13502)
!13511 = !DILocation(line: 97, column: 30, scope: !13502)
!13512 = !DILocation(line: 98, column: 30, scope: !13502)
!13513 = !DILocation(line: 100, column: 9, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13502, file: !2488, line: 100, column: 6)
!13515 = !DILocation(line: 100, column: 6, scope: !13502)
!13516 = !DILocation(line: 125, column: 1, scope: !13502)
!13517 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2488, file: !2488, line: 428, type: !13518, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13520)
!13518 = !DISubroutineType(types: !13519)
!13519 = !{null, !2383}
!13520 = !{!13521}
!13521 = !DILocalVariable(name: "curr", arg: 1, scope: !13517, file: !2488, line: 428, type: !2383)
!13522 = !DILocation(line: 0, scope: !13517)
!13523 = !DILocation(line: 434, column: 6, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13517, file: !2488, line: 434, column: 6)
!13525 = !DILocation(line: 434, column: 23, scope: !13524)
!13526 = !DILocation(line: 434, column: 6, scope: !13517)
!13527 = !DILocation(line: 435, column: 50, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13524, file: !2488, line: 434, column: 29)
!13529 = !DILocation(line: 435, column: 48, scope: !13528)
!13530 = !DILocation(line: 435, column: 29, scope: !13528)
!13531 = !DILocation(line: 436, column: 24, scope: !13528)
!13532 = !DILocation(line: 436, column: 3, scope: !13528)
!13533 = !DILocation(line: 437, column: 2, scope: !13528)
!13534 = !DILocation(line: 438, column: 1, scope: !13517)
!13535 = distinct !DISubprogram(name: "slice_time", scope: !2488, file: !2488, line: 407, type: !13536, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13538)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{!103, !2383}
!13538 = !{!13539, !13540}
!13539 = !DILocalVariable(name: "curr", arg: 1, scope: !13535, file: !2488, line: 407, type: !2383)
!13540 = !DILocalVariable(name: "ret", scope: !13535, file: !2488, line: 409, type: !103)
!13541 = !DILocation(line: 0, scope: !13535)
!13542 = !DILocation(line: 409, column: 12, scope: !13535)
!13543 = !DILocation(line: 416, column: 2, scope: !13535)
!13544 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2488, file: !2488, line: 440, type: !13545, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13547)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{null, !675, !103}
!13547 = !{!13548, !13549, !13550, !13556}
!13548 = !DILocalVariable(name: "slice", arg: 1, scope: !13544, file: !2488, line: 440, type: !675)
!13549 = !DILocalVariable(name: "prio", arg: 2, scope: !13544, file: !2488, line: 440, type: !103)
!13550 = !DILocalVariable(name: "__i", scope: !13551, file: !2488, line: 442, type: !13552)
!13551 = distinct !DILexicalBlock(scope: !13544, file: !2488, line: 442, column: 2)
!13552 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13553)
!13553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13554)
!13554 = !{!13555}
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13553, file: !334, line: 33, baseType: !103, size: 32)
!13556 = !DILocalVariable(name: "__key", scope: !13551, file: !2488, line: 442, type: !13552)
!13557 = !DILocation(line: 0, scope: !13544)
!13558 = !DILocation(line: 0, scope: !13551)
!13559 = !DILocalVariable(name: "l", arg: 1, scope: !13560, file: !334, line: 136, type: !13563)
!13560 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13561, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13564)
!13561 = !DISubroutineType(types: !13562)
!13562 = !{!13552, !13563}
!13563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!13564 = !{!13559, !13565}
!13565 = !DILocalVariable(name: "k", scope: !13560, file: !334, line: 139, type: !13552)
!13566 = !DILocation(line: 0, scope: !13560, inlinedAt: !13567)
!13567 = distinct !DILocation(line: 442, column: 2, scope: !13551)
!13568 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !13573)
!13569 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13570)
!13570 = !{!13571, !13572}
!13571 = !DILocalVariable(name: "key", scope: !13569, file: !5051, line: 44, type: !32)
!13572 = !DILocalVariable(name: "tmp", scope: !13569, file: !5051, line: 53, type: !32)
!13573 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !13567)
!13574 = !{i64 1692840}
!13575 = !DILocation(line: 0, scope: !13569, inlinedAt: !13573)
!13576 = !DILocation(line: 443, column: 29, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !2488, line: 442, column: 26)
!13578 = distinct !DILexicalBlock(scope: !13551, file: !2488, line: 442, column: 2)
!13579 = !DILocation(line: 444, column: 17, scope: !13577)
!13580 = !DILocation(line: 445, column: 51, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13577, file: !2488, line: 445, column: 7)
!13582 = !DILocation(line: 445, column: 7, scope: !13577)
!13583 = !DILocation(line: 0, scope: !13577)
!13584 = !DILocation(line: 451, column: 18, scope: !13577)
!13585 = !DILocation(line: 452, column: 3, scope: !13577)
!13586 = !DILocalVariable(name: "key", arg: 2, scope: !13587, file: !334, line: 190, type: !13552)
!13587 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !13588, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13590)
!13588 = !DISubroutineType(types: !13589)
!13589 = !{null, !13563, !13552}
!13590 = !{!13591, !13586}
!13591 = !DILocalVariable(name: "l", arg: 1, scope: !13587, file: !334, line: 189, type: !13563)
!13592 = !DILocation(line: 0, scope: !13587, inlinedAt: !13593)
!13593 = distinct !DILocation(line: 442, column: 2, scope: !13578)
!13594 = !DILocalVariable(name: "key", arg: 1, scope: !13595, file: !5051, line: 84, type: !32)
!13595 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13596)
!13596 = !{!13594}
!13597 = !DILocation(line: 0, scope: !13595, inlinedAt: !13598)
!13598 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !13593)
!13599 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !13598)
!13600 = !{i64 1693657}
!13601 = !DILocation(line: 454, column: 1, scope: !13544)
!13602 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !5118, file: !5118, line: 389, type: !6309, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13603)
!13603 = !{!13604}
!13604 = !DILocalVariable(name: "t", arg: 1, scope: !13602, file: !5118, line: 389, type: !121)
!13605 = !DILocation(line: 0, scope: !13602)
!13606 = !DILocalVariable(name: "t", arg: 1, scope: !13607, file: !5118, line: 102, type: !2254)
!13607 = distinct !DISubprogram(name: "z_tmcvt", scope: !5118, file: !5118, line: 102, type: !5126, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13608)
!13608 = !{!13606, !13609, !13610, !13611, !13612, !13613, !13614, !13615, !13616, !13617, !13618}
!13609 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13607, file: !5118, line: 102, type: !121)
!13610 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13607, file: !5118, line: 103, type: !121)
!13611 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13607, file: !5118, line: 103, type: !170)
!13612 = !DILocalVariable(name: "result32", arg: 5, scope: !13607, file: !5118, line: 104, type: !170)
!13613 = !DILocalVariable(name: "round_up", arg: 6, scope: !13607, file: !5118, line: 104, type: !170)
!13614 = !DILocalVariable(name: "round_off", arg: 7, scope: !13607, file: !5118, line: 105, type: !170)
!13615 = !DILocalVariable(name: "mul_ratio", scope: !13607, file: !5118, line: 107, type: !170)
!13616 = !DILocalVariable(name: "div_ratio", scope: !13607, file: !5118, line: 109, type: !170)
!13617 = !DILocalVariable(name: "off", scope: !13607, file: !5118, line: 116, type: !2254)
!13618 = !DILocalVariable(name: "rdivisor", scope: !13619, file: !5118, line: 119, type: !121)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !5118, line: 118, column: 18)
!13620 = distinct !DILexicalBlock(scope: !13607, file: !5118, line: 118, column: 6)
!13621 = !DILocation(line: 0, scope: !13607, inlinedAt: !13622)
!13622 = distinct !DILocation(line: 392, column: 9, scope: !13602)
!13623 = !DILocation(line: 143, column: 25, scope: !13624, inlinedAt: !13622)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !5118, line: 142, column: 17)
!13625 = distinct !DILexicalBlock(scope: !13626, file: !5118, line: 142, column: 7)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !5118, line: 141, column: 24)
!13627 = distinct !DILexicalBlock(scope: !13628, file: !5118, line: 141, column: 13)
!13628 = distinct !DILexicalBlock(scope: !13607, file: !5118, line: 134, column: 6)
!13629 = !DILocation(line: 392, column: 2, scope: !13602)
!13630 = distinct !DISubprogram(name: "z_time_slice", scope: !2488, file: !2488, line: 502, type: !7054, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13631)
!13631 = !{!13632, !13633}
!13632 = !DILocalVariable(name: "ticks", arg: 1, scope: !13630, file: !2488, line: 502, type: !103)
!13633 = !DILocalVariable(name: "key", scope: !13630, file: !2488, line: 511, type: !13552)
!13634 = !DILocation(line: 0, scope: !13630)
!13635 = !DILocation(line: 0, scope: !13560, inlinedAt: !13636)
!13636 = distinct !DILocation(line: 511, column: 25, scope: !13630)
!13637 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !13638)
!13638 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !13636)
!13639 = !DILocation(line: 0, scope: !13569, inlinedAt: !13638)
!13640 = !DILocation(line: 514, column: 6, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13630, file: !2488, line: 514, column: 6)
!13642 = !DILocation(line: 514, column: 25, scope: !13641)
!13643 = !DILocation(line: 514, column: 22, scope: !13641)
!13644 = !DILocation(line: 514, column: 6, scope: !13630)
!13645 = !DILocation(line: 515, column: 3, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13641, file: !2488, line: 514, column: 35)
!13647 = !DILocation(line: 0, scope: !13587, inlinedAt: !13648)
!13648 = distinct !DILocation(line: 516, column: 3, scope: !13646)
!13649 = !DILocation(line: 0, scope: !13595, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !13648)
!13651 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !13650)
!13652 = !DILocation(line: 517, column: 3, scope: !13646)
!13653 = !DILocation(line: 519, column: 18, scope: !13630)
!13654 = !DILocation(line: 522, column: 6, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13630, file: !2488, line: 522, column: 6)
!13656 = !DILocation(line: 522, column: 27, scope: !13655)
!13657 = !DILocation(line: 522, column: 30, scope: !13655)
!13658 = !DILocation(line: 522, column: 6, scope: !13630)
!13659 = !DILocation(line: 523, column: 30, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13661, file: !2488, line: 523, column: 7)
!13661 = distinct !DILexicalBlock(scope: !13655, file: !2488, line: 522, column: 51)
!13662 = !DILocation(line: 523, column: 13, scope: !13660)
!13663 = !DILocation(line: 523, column: 7, scope: !13661)
!13664 = !DILocation(line: 530, column: 10, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13660, file: !2488, line: 523, column: 43)
!13666 = !DILocation(line: 531, column: 3, scope: !13665)
!13667 = !DILocation(line: 532, column: 30, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13660, file: !2488, line: 531, column: 10)
!13669 = !DILocation(line: 535, column: 29, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13655, file: !2488, line: 534, column: 9)
!13671 = !DILocation(line: 0, scope: !13587, inlinedAt: !13672)
!13672 = distinct !DILocation(line: 537, column: 2, scope: !13630)
!13673 = !DILocation(line: 0, scope: !13595, inlinedAt: !13674)
!13674 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !13672)
!13675 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !13674)
!13676 = !DILocation(line: 538, column: 1, scope: !13630)
!13677 = distinct !DISubprogram(name: "sliceable", scope: !2488, file: !2488, line: 468, type: !13678, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13680)
!13678 = !DISubroutineType(types: !13679)
!13679 = !{!170, !2383}
!13680 = !{!13681, !13682}
!13681 = !DILocalVariable(name: "thread", arg: 1, scope: !13677, file: !2488, line: 468, type: !2383)
!13682 = !DILocalVariable(name: "ret", scope: !13677, file: !2488, line: 470, type: !170)
!13683 = !DILocation(line: 0, scope: !13677)
!13684 = !DILocation(line: 470, column: 13, scope: !13677)
!13685 = !DILocation(line: 471, column: 3, scope: !13677)
!13686 = !DILocation(line: 471, column: 7, scope: !13677)
!13687 = !DILocation(line: 472, column: 3, scope: !13677)
!13688 = !DILocation(line: 472, column: 37, scope: !13677)
!13689 = !DILocation(line: 472, column: 24, scope: !13677)
!13690 = !DILocation(line: 472, column: 43, scope: !13677)
!13691 = !DILocation(line: 472, column: 7, scope: !13677)
!13692 = !DILocation(line: 473, column: 3, scope: !13677)
!13693 = !DILocation(line: 473, column: 7, scope: !13677)
!13694 = !DILocation(line: 473, column: 6, scope: !13677)
!13695 = !DILocation(line: 479, column: 2, scope: !13677)
!13696 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2488, file: !2488, line: 482, type: !13697, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13699)
!13697 = !DISubroutineType(types: !13698)
!13698 = !{!13552, !13552}
!13699 = !{!13700, !13701}
!13700 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13696, file: !2488, line: 482, type: !13552)
!13701 = !DILocalVariable(name: "curr", scope: !13696, file: !2488, line: 484, type: !2383)
!13702 = !DILocation(line: 0, scope: !13696)
!13703 = !DILocation(line: 484, column: 26, scope: !13696)
!13704 = !DILocation(line: 493, column: 7, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13696, file: !2488, line: 493, column: 6)
!13706 = !DILocation(line: 493, column: 6, scope: !13696)
!13707 = !DILocation(line: 494, column: 3, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13705, file: !2488, line: 493, column: 49)
!13709 = !DILocation(line: 495, column: 2, scope: !13708)
!13710 = !DILocation(line: 496, column: 2, scope: !13696)
!13711 = !DILocation(line: 499, column: 1, scope: !13696)
!13712 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12525, file: !12525, line: 106, type: !13678, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13713)
!13713 = !{!13714, !13715}
!13714 = !DILocalVariable(name: "thread", arg: 1, scope: !13712, file: !12525, line: 106, type: !2383)
!13715 = !DILocalVariable(name: "state", scope: !13712, file: !12525, line: 108, type: !167)
!13716 = !DILocation(line: 0, scope: !13712)
!13717 = !DILocation(line: 108, column: 31, scope: !13712)
!13718 = !DILocation(line: 110, column: 16, scope: !13712)
!13719 = !DILocation(line: 111, column: 41, scope: !13712)
!13720 = !DILocation(line: 110, column: 2, scope: !13712)
!13721 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2488, file: !2488, line: 393, type: !13518, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13722)
!13722 = !{!13723}
!13723 = !DILocalVariable(name: "thread", arg: 1, scope: !13721, file: !2488, line: 393, type: !2383)
!13724 = !DILocation(line: 0, scope: !13721)
!13725 = !DILocation(line: 395, column: 6, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13721, file: !2488, line: 395, column: 6)
!13727 = !DILocation(line: 395, column: 6, scope: !13721)
!13728 = !DILocalVariable(name: "thread", arg: 1, scope: !13729, file: !2488, line: 264, type: !2383)
!13729 = distinct !DISubprogram(name: "dequeue_thread", scope: !2488, file: !2488, line: 264, type: !13518, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13730)
!13730 = !{!13728}
!13731 = !DILocation(line: 0, scope: !13729, inlinedAt: !13732)
!13732 = distinct !DILocation(line: 396, column: 3, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13726, file: !2488, line: 395, column: 34)
!13734 = !DILocation(line: 266, column: 15, scope: !13729, inlinedAt: !13732)
!13735 = !DILocation(line: 266, column: 28, scope: !13729, inlinedAt: !13732)
!13736 = !DILocalVariable(name: "thread", arg: 1, scope: !13737, file: !2488, line: 232, type: !2383)
!13737 = distinct !DISubprogram(name: "runq_remove", scope: !2488, file: !2488, line: 232, type: !13518, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13738)
!13738 = !{!13736}
!13739 = !DILocation(line: 0, scope: !13737, inlinedAt: !13740)
!13740 = distinct !DILocation(line: 268, column: 3, scope: !13741, inlinedAt: !13732)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !2488, line: 267, column: 35)
!13742 = distinct !DILexicalBlock(scope: !13729, file: !2488, line: 267, column: 6)
!13743 = !DILocation(line: 234, column: 2, scope: !13737, inlinedAt: !13740)
!13744 = !DILocation(line: 397, column: 2, scope: !13733)
!13745 = !DILocalVariable(name: "thread", arg: 1, scope: !13746, file: !2488, line: 250, type: !2383)
!13746 = distinct !DISubprogram(name: "queue_thread", scope: !2488, file: !2488, line: 250, type: !13518, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13747)
!13747 = !{!13745}
!13748 = !DILocation(line: 0, scope: !13746, inlinedAt: !13749)
!13749 = distinct !DILocation(line: 398, column: 2, scope: !13721)
!13750 = !DILocation(line: 252, column: 15, scope: !13746, inlinedAt: !13749)
!13751 = !DILocation(line: 252, column: 28, scope: !13746, inlinedAt: !13749)
!13752 = !DILocalVariable(name: "thread", arg: 1, scope: !13753, file: !2488, line: 227, type: !2383)
!13753 = distinct !DISubprogram(name: "runq_add", scope: !2488, file: !2488, line: 227, type: !13518, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13754)
!13754 = !{!13752}
!13755 = !DILocation(line: 0, scope: !13753, inlinedAt: !13756)
!13756 = distinct !DILocation(line: 254, column: 3, scope: !13757, inlinedAt: !13749)
!13757 = distinct !DILexicalBlock(scope: !13758, file: !2488, line: 253, column: 35)
!13758 = distinct !DILexicalBlock(scope: !13746, file: !2488, line: 253, column: 6)
!13759 = !DILocalVariable(name: "pq", arg: 1, scope: !13760, file: !2488, line: 181, type: !13763)
!13760 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2488, file: !2488, line: 181, type: !13761, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13764)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{null, !13763, !2383}
!13763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!13764 = !{!13759, !13765, !13766}
!13765 = !DILocalVariable(name: "thread", arg: 2, scope: !13760, file: !2488, line: 182, type: !2383)
!13766 = !DILocalVariable(name: "t", scope: !13760, file: !2488, line: 184, type: !2383)
!13767 = !DILocation(line: 0, scope: !13760, inlinedAt: !13768)
!13768 = distinct !DILocation(line: 229, column: 2, scope: !13753, inlinedAt: !13756)
!13769 = !DILocation(line: 188, column: 2, scope: !13770, inlinedAt: !13768)
!13770 = distinct !DILexicalBlock(scope: !13760, file: !2488, line: 188, column: 2)
!13771 = !DILocation(line: 188, column: 2, scope: !13772, inlinedAt: !13768)
!13772 = distinct !DILexicalBlock(scope: !13770, file: !2488, line: 188, column: 2)
!13773 = !DILocation(line: 0, scope: !13770, inlinedAt: !13768)
!13774 = !DILocation(line: 189, column: 7, scope: !13775, inlinedAt: !13768)
!13775 = distinct !DILexicalBlock(scope: !13776, file: !2488, line: 189, column: 7)
!13776 = distinct !DILexicalBlock(scope: !13772, file: !2488, line: 188, column: 56)
!13777 = !DILocation(line: 189, column: 35, scope: !13775, inlinedAt: !13768)
!13778 = !DILocation(line: 189, column: 7, scope: !13776, inlinedAt: !13768)
!13779 = !DILocation(line: 191, column: 21, scope: !13780, inlinedAt: !13768)
!13780 = distinct !DILexicalBlock(scope: !13775, file: !2488, line: 189, column: 40)
!13781 = !DILocation(line: 190, column: 4, scope: !13780, inlinedAt: !13768)
!13782 = !DILocation(line: 192, column: 4, scope: !13780, inlinedAt: !13768)
!13783 = distinct !{!13783, !13769, !13784}
!13784 = !DILocation(line: 194, column: 2, scope: !13770, inlinedAt: !13768)
!13785 = !DILocation(line: 196, column: 37, scope: !13760, inlinedAt: !13768)
!13786 = !DILocation(line: 196, column: 2, scope: !13760, inlinedAt: !13768)
!13787 = !DILocation(line: 197, column: 1, scope: !13760, inlinedAt: !13768)
!13788 = !DILocation(line: 399, column: 25, scope: !13721)
!13789 = !DILocation(line: 399, column: 22, scope: !13721)
!13790 = !DILocation(line: 399, column: 2, scope: !13721)
!13791 = !DILocation(line: 400, column: 1, scope: !13721)
!13792 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12525, file: !12525, line: 136, type: !13678, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13793)
!13793 = !{!13794}
!13794 = !DILocalVariable(name: "thread", arg: 1, scope: !13792, file: !12525, line: 136, type: !2383)
!13795 = !DILocation(line: 0, scope: !13792)
!13796 = !DILocation(line: 138, column: 9, scope: !13792)
!13797 = !DILocation(line: 138, column: 2, scope: !13792)
!13798 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2488, file: !2488, line: 1137, type: !13761, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13799)
!13799 = !{!13800, !13801}
!13800 = !DILocalVariable(name: "pq", arg: 1, scope: !13798, file: !2488, line: 1137, type: !13763)
!13801 = !DILocalVariable(name: "thread", arg: 2, scope: !13798, file: !2488, line: 1137, type: !2383)
!13802 = !DILocation(line: 0, scope: !13798)
!13803 = !DILocation(line: 1141, column: 33, scope: !13798)
!13804 = !DILocation(line: 1141, column: 2, scope: !13798)
!13805 = !DILocation(line: 1142, column: 1, scope: !13798)
!13806 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !234, file: !234, line: 294, type: !13807, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13809)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{!2484, !13763}
!13809 = !{!13810}
!13810 = !DILocalVariable(name: "list", arg: 1, scope: !13806, file: !234, line: 294, type: !13763)
!13811 = !DILocation(line: 0, scope: !13806)
!13812 = !DILocation(line: 296, column: 9, scope: !13806)
!13813 = !DILocation(line: 296, column: 49, scope: !13806)
!13814 = !DILocation(line: 296, column: 2, scope: !13806)
!13815 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !234, file: !234, line: 443, type: !13816, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{null, !2484, !2484}
!13818 = !{!13819, !13820, !13821}
!13819 = !DILocalVariable(name: "successor", arg: 1, scope: !13815, file: !234, line: 443, type: !2484)
!13820 = !DILocalVariable(name: "node", arg: 2, scope: !13815, file: !234, line: 443, type: !2484)
!13821 = !DILocalVariable(name: "prev", scope: !13815, file: !234, line: 445, type: !13822)
!13822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!13823 = !DILocation(line: 0, scope: !13815)
!13824 = !DILocation(line: 445, column: 39, scope: !13815)
!13825 = !DILocation(line: 447, column: 8, scope: !13815)
!13826 = !DILocation(line: 447, column: 13, scope: !13815)
!13827 = !DILocation(line: 448, column: 8, scope: !13815)
!13828 = !DILocation(line: 448, column: 13, scope: !13815)
!13829 = !DILocation(line: 449, column: 8, scope: !13815)
!13830 = !DILocation(line: 449, column: 13, scope: !13815)
!13831 = !DILocation(line: 450, column: 18, scope: !13815)
!13832 = !DILocation(line: 451, column: 1, scope: !13815)
!13833 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !234, file: !234, line: 341, type: !13834, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13836)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{!2484, !13763, !2484}
!13836 = !{!13837, !13838}
!13837 = !DILocalVariable(name: "list", arg: 1, scope: !13833, file: !234, line: 341, type: !13763)
!13838 = !DILocalVariable(name: "node", arg: 2, scope: !13833, file: !234, line: 342, type: !2484)
!13839 = !DILocation(line: 0, scope: !13833)
!13840 = !DILocation(line: 344, column: 15, scope: !13833)
!13841 = !DILocation(line: 344, column: 9, scope: !13833)
!13842 = !DILocation(line: 344, column: 26, scope: !13833)
!13843 = !DILocation(line: 344, column: 2, scope: !13833)
!13844 = distinct !DISubprogram(name: "sys_dlist_append", scope: !234, file: !234, line: 404, type: !13845, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{null, !13763, !2484}
!13847 = !{!13848, !13849, !13850}
!13848 = !DILocalVariable(name: "list", arg: 1, scope: !13844, file: !234, line: 404, type: !13763)
!13849 = !DILocalVariable(name: "node", arg: 2, scope: !13844, file: !234, line: 404, type: !2484)
!13850 = !DILocalVariable(name: "tail", scope: !13844, file: !234, line: 406, type: !13822)
!13851 = !DILocation(line: 0, scope: !13844)
!13852 = !DILocation(line: 406, column: 34, scope: !13844)
!13853 = !DILocation(line: 408, column: 8, scope: !13844)
!13854 = !DILocation(line: 408, column: 13, scope: !13844)
!13855 = !DILocation(line: 409, column: 8, scope: !13844)
!13856 = !DILocation(line: 409, column: 13, scope: !13844)
!13857 = !DILocation(line: 411, column: 8, scope: !13844)
!13858 = !DILocation(line: 411, column: 13, scope: !13844)
!13859 = !DILocation(line: 412, column: 13, scope: !13844)
!13860 = !DILocation(line: 413, column: 1, scope: !13844)
!13861 = distinct !DISubprogram(name: "update_cache", scope: !2488, file: !2488, line: 559, type: !7054, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13862)
!13862 = !{!13863, !13864}
!13863 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13861, file: !2488, line: 559, type: !103)
!13864 = !DILocalVariable(name: "thread", scope: !13861, file: !2488, line: 562, type: !2383)
!13865 = !DILocation(line: 0, scope: !13861)
!13866 = !DILocation(line: 239, column: 9, scope: !13867, inlinedAt: !13870)
!13867 = distinct !DISubprogram(name: "runq_best", scope: !2488, file: !2488, line: 237, type: !13868, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!13868 = !DISubroutineType(types: !13869)
!13869 = !{!2383}
!13870 = distinct !DILocation(line: 314, column: 28, scope: !13871, inlinedAt: !13874)
!13871 = distinct !DISubprogram(name: "next_up", scope: !2488, file: !2488, line: 312, type: !13868, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13872)
!13872 = !{!13873}
!13873 = !DILocalVariable(name: "thread", scope: !13871, file: !2488, line: 314, type: !2383)
!13874 = distinct !DILocation(line: 562, column: 28, scope: !13861)
!13875 = !DILocation(line: 0, scope: !13871, inlinedAt: !13874)
!13876 = !DILocation(line: 340, column: 17, scope: !13871, inlinedAt: !13874)
!13877 = !DILocation(line: 340, column: 9, scope: !13871, inlinedAt: !13874)
!13878 = !DILocalVariable(name: "thread", arg: 1, scope: !13879, file: !2488, line: 127, type: !2383)
!13879 = distinct !DISubprogram(name: "should_preempt", scope: !2488, file: !2488, line: 127, type: !13880, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13882)
!13880 = !DISubroutineType(types: !13881)
!13881 = !{!170, !2383, !103}
!13882 = !{!13878, !13883}
!13883 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13879, file: !2488, line: 128, type: !103)
!13884 = !DILocation(line: 0, scope: !13879, inlinedAt: !13885)
!13885 = distinct !DILocation(line: 564, column: 6, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13861, file: !2488, line: 564, column: 6)
!13887 = !DILocation(line: 133, column: 17, scope: !13888, inlinedAt: !13885)
!13888 = distinct !DILexicalBlock(scope: !13879, file: !2488, line: 133, column: 6)
!13889 = !DILocation(line: 0, scope: !13886)
!13890 = !DILocation(line: 133, column: 6, scope: !13879, inlinedAt: !13885)
!13891 = !DILocation(line: 140, column: 6, scope: !13892, inlinedAt: !13885)
!13892 = distinct !DILexicalBlock(scope: !13879, file: !2488, line: 140, column: 6)
!13893 = !DILocation(line: 140, column: 6, scope: !13879, inlinedAt: !13885)
!13894 = !DILocation(line: 150, column: 9, scope: !13895, inlinedAt: !13885)
!13895 = distinct !DILexicalBlock(scope: !13879, file: !2488, line: 149, column: 6)
!13896 = !DILocation(line: 149, column: 6, scope: !13879, inlinedAt: !13885)
!13897 = !DILocation(line: 157, column: 6, scope: !13898, inlinedAt: !13885)
!13898 = distinct !DILexicalBlock(scope: !13879, file: !2488, line: 157, column: 6)
!13899 = !DILocation(line: 564, column: 6, scope: !13861)
!13900 = !DILocation(line: 566, column: 14, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13902, file: !2488, line: 566, column: 7)
!13902 = distinct !DILexicalBlock(scope: !13886, file: !2488, line: 564, column: 42)
!13903 = !DILocation(line: 566, column: 7, scope: !13902)
!13904 = !DILocation(line: 567, column: 4, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13901, file: !2488, line: 566, column: 27)
!13906 = !DILocation(line: 568, column: 3, scope: !13905)
!13907 = !DILocation(line: 585, column: 1, scope: !13861)
!13908 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2488, file: !2488, line: 1144, type: !13909, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{!2383, !13763}
!13911 = !{!13912, !13913, !13914}
!13912 = !DILocalVariable(name: "pq", arg: 1, scope: !13908, file: !2488, line: 1144, type: !13763)
!13913 = !DILocalVariable(name: "thread", scope: !13908, file: !2488, line: 1146, type: !2383)
!13914 = !DILocalVariable(name: "n", scope: !13908, file: !2488, line: 1147, type: !2484)
!13915 = !DILocation(line: 0, scope: !13908)
!13916 = !DILocation(line: 1147, column: 19, scope: !13908)
!13917 = !DILocation(line: 1152, column: 2, scope: !13908)
!13918 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12525, file: !12525, line: 115, type: !13678, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13919)
!13919 = !{!13920}
!13920 = !DILocalVariable(name: "thread", arg: 1, scope: !13918, file: !12525, line: 115, type: !2383)
!13921 = !DILocation(line: 0, scope: !13918)
!13922 = !DILocation(line: 117, column: 46, scope: !13918)
!13923 = !DILocation(line: 117, column: 10, scope: !13918)
!13924 = !DILocation(line: 117, column: 9, scope: !13918)
!13925 = !DILocation(line: 117, column: 2, scope: !13918)
!13926 = distinct !DISubprogram(name: "is_preempt", scope: !2488, file: !2488, line: 62, type: !13536, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13927)
!13927 = !{!13928}
!13928 = !DILocalVariable(name: "thread", arg: 1, scope: !13926, file: !2488, line: 62, type: !2383)
!13929 = !DILocation(line: 0, scope: !13926)
!13930 = !DILocation(line: 65, column: 22, scope: !13926)
!13931 = !DILocation(line: 65, column: 30, scope: !13926)
!13932 = !DILocation(line: 65, column: 2, scope: !13926)
!13933 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12919, file: !12919, line: 35, type: !13934, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13938)
!13934 = !DISubroutineType(types: !13935)
!13935 = !{!170, !13936}
!13936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13937, size: 32)
!13937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2434)
!13938 = !{!13939}
!13939 = !DILocalVariable(name: "to", arg: 1, scope: !13933, file: !12919, line: 35, type: !13936)
!13940 = !DILocation(line: 0, scope: !13933)
!13941 = !DILocation(line: 37, column: 35, scope: !13933)
!13942 = !DILocation(line: 37, column: 10, scope: !13933)
!13943 = !DILocation(line: 37, column: 9, scope: !13933)
!13944 = !DILocation(line: 37, column: 2, scope: !13933)
!13945 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !234, file: !234, line: 225, type: !13946, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13950)
!13946 = !DISubroutineType(types: !13947)
!13947 = !{!170, !13948}
!13948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13949, size: 32)
!13949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2393)
!13950 = !{!13951}
!13951 = !DILocalVariable(name: "node", arg: 1, scope: !13945, file: !234, line: 225, type: !13948)
!13952 = !DILocation(line: 0, scope: !13945)
!13953 = !DILocation(line: 227, column: 15, scope: !13945)
!13954 = !DILocation(line: 227, column: 20, scope: !13945)
!13955 = !DILocation(line: 227, column: 2, scope: !13945)
!13956 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !234, file: !234, line: 325, type: !13834, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13957)
!13957 = !{!13958, !13959}
!13958 = !DILocalVariable(name: "list", arg: 1, scope: !13956, file: !234, line: 325, type: !13763)
!13959 = !DILocalVariable(name: "node", arg: 2, scope: !13956, file: !234, line: 326, type: !2484)
!13960 = !DILocation(line: 0, scope: !13956)
!13961 = !DILocation(line: 328, column: 24, scope: !13956)
!13962 = !DILocation(line: 328, column: 15, scope: !13956)
!13963 = !DILocation(line: 328, column: 9, scope: !13956)
!13964 = !DILocation(line: 328, column: 45, scope: !13956)
!13965 = !DILocation(line: 328, column: 2, scope: !13956)
!13966 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !234, file: !234, line: 266, type: !13967, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13969)
!13967 = !DISubroutineType(types: !13968)
!13968 = !{!170, !13763}
!13969 = !{!13970}
!13970 = !DILocalVariable(name: "list", arg: 1, scope: !13966, file: !234, line: 266, type: !13763)
!13971 = !DILocation(line: 0, scope: !13966)
!13972 = !DILocation(line: 268, column: 15, scope: !13966)
!13973 = !DILocation(line: 268, column: 20, scope: !13966)
!13974 = !DILocation(line: 268, column: 2, scope: !13966)
!13975 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !234, file: !234, line: 496, type: !13976, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{null, !2484}
!13978 = !{!13979, !13980, !13981}
!13979 = !DILocalVariable(name: "node", arg: 1, scope: !13975, file: !234, line: 496, type: !2484)
!13980 = !DILocalVariable(name: "prev", scope: !13975, file: !234, line: 498, type: !13822)
!13981 = !DILocalVariable(name: "next", scope: !13975, file: !234, line: 499, type: !13822)
!13982 = !DILocation(line: 0, scope: !13975)
!13983 = !DILocation(line: 498, column: 34, scope: !13975)
!13984 = !DILocation(line: 499, column: 34, scope: !13975)
!13985 = !DILocation(line: 501, column: 8, scope: !13975)
!13986 = !DILocation(line: 501, column: 13, scope: !13975)
!13987 = !DILocation(line: 502, column: 8, scope: !13975)
!13988 = !DILocation(line: 502, column: 13, scope: !13975)
!13989 = !DILocation(line: 503, column: 2, scope: !13975)
!13990 = !DILocation(line: 504, column: 1, scope: !13975)
!13991 = distinct !DISubprogram(name: "sys_dnode_init", scope: !234, file: !234, line: 211, type: !13976, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !13992)
!13992 = !{!13993}
!13993 = !DILocalVariable(name: "node", arg: 1, scope: !13991, file: !234, line: 211, type: !2484)
!13994 = !DILocation(line: 0, scope: !13991)
!13995 = !DILocation(line: 213, column: 8, scope: !13991)
!13996 = !DILocation(line: 213, column: 13, scope: !13991)
!13997 = !DILocation(line: 214, column: 8, scope: !13991)
!13998 = !DILocation(line: 214, column: 13, scope: !13991)
!13999 = !DILocation(line: 215, column: 1, scope: !13991)
!14000 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12525, file: !12525, line: 131, type: !14001, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14003)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!170, !2383, !121}
!14003 = !{!14004, !14005}
!14004 = !DILocalVariable(name: "thread", arg: 1, scope: !14000, file: !12525, line: 131, type: !2383)
!14005 = !DILocalVariable(name: "state", arg: 2, scope: !14000, file: !12525, line: 131, type: !121)
!14006 = !DILocation(line: 0, scope: !14000)
!14007 = !DILocation(line: 133, column: 23, scope: !14000)
!14008 = !DILocation(line: 133, column: 45, scope: !14000)
!14009 = !DILocation(line: 133, column: 2, scope: !14000)
!14010 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12525, file: !12525, line: 211, type: !13370, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14011)
!14011 = !{!14012, !14013}
!14012 = !DILocalVariable(name: "prio", arg: 1, scope: !14010, file: !12525, line: 211, type: !103)
!14013 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14010, file: !12525, line: 211, type: !103)
!14014 = !DILocation(line: 0, scope: !14010)
!14015 = !DILocation(line: 213, column: 9, scope: !14010)
!14016 = !DILocation(line: 213, column: 2, scope: !14010)
!14017 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12525, file: !12525, line: 83, type: !13678, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14018)
!14018 = !{!14019}
!14019 = !DILocalVariable(name: "thread", arg: 1, scope: !14017, file: !12525, line: 83, type: !2383)
!14020 = !DILocation(line: 0, scope: !14017)
!14021 = !DILocation(line: 89, column: 16, scope: !14017)
!14022 = !DILocation(line: 89, column: 2, scope: !14017)
!14023 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12525, file: !12525, line: 206, type: !13370, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14024)
!14024 = !{!14025, !14026}
!14025 = !DILocalVariable(name: "prio1", arg: 1, scope: !14023, file: !12525, line: 206, type: !103)
!14026 = !DILocalVariable(name: "prio2", arg: 2, scope: !14023, file: !12525, line: 206, type: !103)
!14027 = !DILocation(line: 0, scope: !14023)
!14028 = !DILocation(line: 208, column: 15, scope: !14023)
!14029 = !DILocation(line: 208, column: 2, scope: !14023)
!14030 = distinct !DISubprogram(name: "z_ready_thread", scope: !2488, file: !2488, line: 635, type: !13518, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14031)
!14031 = !{!14032, !14033, !14035}
!14032 = !DILocalVariable(name: "thread", arg: 1, scope: !14030, file: !2488, line: 635, type: !2383)
!14033 = !DILocalVariable(name: "__i", scope: !14034, file: !2488, line: 637, type: !13552)
!14034 = distinct !DILexicalBlock(scope: !14030, file: !2488, line: 637, column: 2)
!14035 = !DILocalVariable(name: "__key", scope: !14034, file: !2488, line: 637, type: !13552)
!14036 = !DILocation(line: 0, scope: !14030)
!14037 = !DILocation(line: 0, scope: !14034)
!14038 = !DILocation(line: 0, scope: !13560, inlinedAt: !14039)
!14039 = distinct !DILocation(line: 637, column: 2, scope: !14034)
!14040 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14041)
!14041 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14039)
!14042 = !DILocation(line: 0, scope: !13569, inlinedAt: !14041)
!14043 = !DILocation(line: 639, column: 4, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !2488, line: 638, column: 41)
!14045 = distinct !DILexicalBlock(scope: !14046, file: !2488, line: 638, column: 7)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !2488, line: 637, column: 26)
!14047 = distinct !DILexicalBlock(scope: !14034, file: !2488, line: 637, column: 2)
!14048 = !DILocation(line: 0, scope: !13587, inlinedAt: !14049)
!14049 = distinct !DILocation(line: 637, column: 2, scope: !14047)
!14050 = !DILocation(line: 0, scope: !13595, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14049)
!14052 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14051)
!14053 = !DILocation(line: 642, column: 1, scope: !14030)
!14054 = distinct !DISubprogram(name: "ready_thread", scope: !2488, file: !2488, line: 617, type: !13518, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14055)
!14055 = !{!14056}
!14056 = !DILocalVariable(name: "thread", arg: 1, scope: !14054, file: !2488, line: 617, type: !2383)
!14057 = !DILocation(line: 0, scope: !14054)
!14058 = !DILocation(line: 626, column: 7, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14054, file: !2488, line: 626, column: 6)
!14060 = !DILocation(line: 626, column: 34, scope: !14059)
!14061 = !DILocation(line: 626, column: 37, scope: !14059)
!14062 = !DILocation(line: 626, column: 6, scope: !14054)
!14063 = !DILocation(line: 0, scope: !13746, inlinedAt: !14064)
!14064 = distinct !DILocation(line: 629, column: 3, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14059, file: !2488, line: 626, column: 64)
!14066 = !DILocation(line: 252, column: 15, scope: !13746, inlinedAt: !14064)
!14067 = !DILocation(line: 252, column: 28, scope: !13746, inlinedAt: !14064)
!14068 = !DILocation(line: 0, scope: !13753, inlinedAt: !14069)
!14069 = distinct !DILocation(line: 254, column: 3, scope: !13757, inlinedAt: !14064)
!14070 = !DILocation(line: 0, scope: !13760, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 229, column: 2, scope: !13753, inlinedAt: !14069)
!14072 = !DILocation(line: 188, column: 2, scope: !13770, inlinedAt: !14071)
!14073 = !DILocation(line: 188, column: 2, scope: !13772, inlinedAt: !14071)
!14074 = !DILocation(line: 0, scope: !13770, inlinedAt: !14071)
!14075 = !DILocation(line: 189, column: 7, scope: !13775, inlinedAt: !14071)
!14076 = !DILocation(line: 189, column: 35, scope: !13775, inlinedAt: !14071)
!14077 = !DILocation(line: 189, column: 7, scope: !13776, inlinedAt: !14071)
!14078 = !DILocation(line: 191, column: 21, scope: !13780, inlinedAt: !14071)
!14079 = !DILocation(line: 190, column: 4, scope: !13780, inlinedAt: !14071)
!14080 = !DILocation(line: 192, column: 4, scope: !13780, inlinedAt: !14071)
!14081 = distinct !{!14081, !14072, !14082}
!14082 = !DILocation(line: 194, column: 2, scope: !13770, inlinedAt: !14071)
!14083 = !DILocation(line: 196, column: 37, scope: !13760, inlinedAt: !14071)
!14084 = !DILocation(line: 196, column: 2, scope: !13760, inlinedAt: !14071)
!14085 = !DILocation(line: 197, column: 1, scope: !13760, inlinedAt: !14071)
!14086 = !DILocation(line: 630, column: 3, scope: !14065)
!14087 = !DILocation(line: 632, column: 2, scope: !14065)
!14088 = !DILocation(line: 633, column: 1, scope: !14054)
!14089 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12525, file: !12525, line: 120, type: !13678, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14090)
!14090 = !{!14091}
!14091 = !DILocalVariable(name: "thread", arg: 1, scope: !14089, file: !12525, line: 120, type: !2383)
!14092 = !DILocation(line: 0, scope: !14089)
!14093 = !DILocation(line: 122, column: 12, scope: !14089)
!14094 = !DILocation(line: 122, column: 62, scope: !14089)
!14095 = !DILocation(line: 123, column: 4, scope: !14089)
!14096 = !DILocation(line: 122, column: 2, scope: !14089)
!14097 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2488, file: !2488, line: 644, type: !13518, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14098)
!14098 = !{!14099, !14100, !14102}
!14099 = !DILocalVariable(name: "thread", arg: 1, scope: !14097, file: !2488, line: 644, type: !2383)
!14100 = !DILocalVariable(name: "__i", scope: !14101, file: !2488, line: 646, type: !13552)
!14101 = distinct !DILexicalBlock(scope: !14097, file: !2488, line: 646, column: 2)
!14102 = !DILocalVariable(name: "__key", scope: !14101, file: !2488, line: 646, type: !13552)
!14103 = !DILocation(line: 0, scope: !14097)
!14104 = !DILocation(line: 0, scope: !14101)
!14105 = !DILocation(line: 0, scope: !13560, inlinedAt: !14106)
!14106 = distinct !DILocation(line: 646, column: 2, scope: !14101)
!14107 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14106)
!14109 = !DILocation(line: 0, scope: !13569, inlinedAt: !14108)
!14110 = !DILocation(line: 647, column: 3, scope: !14111)
!14111 = distinct !DILexicalBlock(scope: !14112, file: !2488, line: 646, column: 26)
!14112 = distinct !DILexicalBlock(scope: !14101, file: !2488, line: 646, column: 2)
!14113 = !DILocation(line: 0, scope: !13587, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 646, column: 2, scope: !14112)
!14115 = !DILocation(line: 0, scope: !13595, inlinedAt: !14116)
!14116 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14114)
!14117 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14116)
!14118 = !DILocation(line: 649, column: 1, scope: !14097)
!14119 = distinct !DISubprogram(name: "z_sched_start", scope: !2488, file: !2488, line: 651, type: !13518, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14120)
!14120 = !{!14121, !14122}
!14121 = !DILocalVariable(name: "thread", arg: 1, scope: !14119, file: !2488, line: 651, type: !2383)
!14122 = !DILocalVariable(name: "key", scope: !14119, file: !2488, line: 653, type: !13552)
!14123 = !DILocation(line: 0, scope: !14119)
!14124 = !DILocation(line: 0, scope: !13560, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 653, column: 25, scope: !14119)
!14126 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14125)
!14128 = !DILocation(line: 0, scope: !13569, inlinedAt: !14127)
!14129 = !DILocation(line: 655, column: 6, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14119, file: !2488, line: 655, column: 6)
!14131 = !DILocation(line: 655, column: 6, scope: !14119)
!14132 = !DILocation(line: 0, scope: !13587, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 656, column: 3, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14130, file: !2488, line: 655, column: 36)
!14135 = !DILocation(line: 0, scope: !13595, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14133)
!14137 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14136)
!14138 = !DILocation(line: 657, column: 3, scope: !14134)
!14139 = !DILocation(line: 660, column: 2, scope: !14119)
!14140 = !DILocation(line: 661, column: 2, scope: !14119)
!14141 = !DILocation(line: 662, column: 2, scope: !14119)
!14142 = !DILocation(line: 663, column: 1, scope: !14119)
!14143 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12525, file: !12525, line: 126, type: !13678, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14144)
!14144 = !{!14145}
!14145 = !DILocalVariable(name: "thread", arg: 1, scope: !14143, file: !12525, line: 126, type: !2383)
!14146 = !DILocation(line: 0, scope: !14143)
!14147 = !DILocation(line: 128, column: 23, scope: !14143)
!14148 = !DILocation(line: 128, column: 36, scope: !14143)
!14149 = !DILocation(line: 128, column: 56, scope: !14143)
!14150 = !DILocation(line: 128, column: 2, scope: !14143)
!14151 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12525, file: !12525, line: 155, type: !13518, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14152)
!14152 = !{!14153}
!14153 = !DILocalVariable(name: "thread", arg: 1, scope: !14151, file: !12525, line: 155, type: !2383)
!14154 = !DILocation(line: 0, scope: !14151)
!14155 = !DILocation(line: 157, column: 15, scope: !14151)
!14156 = !DILocation(line: 157, column: 28, scope: !14151)
!14157 = !DILocation(line: 158, column: 1, scope: !14151)
!14158 = distinct !DISubprogram(name: "z_reschedule", scope: !2488, file: !2488, line: 967, type: !13588, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14159)
!14159 = !{!14160, !14161}
!14160 = !DILocalVariable(name: "lock", arg: 1, scope: !14158, file: !2488, line: 967, type: !13563)
!14161 = !DILocalVariable(name: "key", arg: 2, scope: !14158, file: !2488, line: 967, type: !13552)
!14162 = !DILocation(line: 0, scope: !14158)
!14163 = !DILocation(line: 969, column: 6, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14158, file: !2488, line: 969, column: 6)
!14165 = !DILocation(line: 969, column: 23, scope: !14164)
!14166 = !DILocation(line: 969, column: 26, scope: !14164)
!14167 = !DILocation(line: 969, column: 6, scope: !14158)
!14168 = !DILocalVariable(name: "key", arg: 2, scope: !14169, file: !12629, line: 193, type: !13552)
!14169 = distinct !DISubprogram(name: "z_swap", scope: !12629, file: !12629, line: 193, type: !14170, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14172)
!14170 = !DISubroutineType(types: !14171)
!14171 = !{!103, !13563, !13552}
!14172 = !{!14173, !14168}
!14173 = !DILocalVariable(name: "lock", arg: 1, scope: !14169, file: !12629, line: 193, type: !13563)
!14174 = !DILocation(line: 0, scope: !14169, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 970, column: 3, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14164, file: !2488, line: 969, column: 39)
!14177 = !DILocation(line: 196, column: 9, scope: !14169, inlinedAt: !14175)
!14178 = !DILocation(line: 971, column: 2, scope: !14176)
!14179 = !DILocation(line: 0, scope: !13587, inlinedAt: !14180)
!14180 = distinct !DILocation(line: 972, column: 3, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14164, file: !2488, line: 971, column: 9)
!14182 = !DILocation(line: 0, scope: !13595, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14180)
!14184 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14183)
!14185 = !DILocation(line: 975, column: 1, scope: !14158)
!14186 = distinct !DISubprogram(name: "resched", scope: !2488, file: !2488, line: 940, type: !14187, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14189)
!14187 = !DISubroutineType(types: !14188)
!14188 = !{!170, !121}
!14189 = !{!14190}
!14190 = !DILocalVariable(name: "key", arg: 1, scope: !14186, file: !2488, line: 940, type: !121)
!14191 = !DILocation(line: 0, scope: !14186)
!14192 = !DILocalVariable(name: "key", arg: 1, scope: !14193, file: !5051, line: 112, type: !32)
!14193 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5051, file: !5051, line: 112, type: !14194, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14196)
!14194 = !DISubroutineType(types: !14195)
!14195 = !{!170, !32}
!14196 = !{!14192}
!14197 = !DILocation(line: 0, scope: !14193, inlinedAt: !14198)
!14198 = distinct !DILocation(line: 946, column: 9, scope: !14186)
!14199 = !DILocation(line: 115, column: 13, scope: !14193, inlinedAt: !14198)
!14200 = !DILocation(line: 946, column: 32, scope: !14186)
!14201 = !DILocation(line: 1031, column: 3, scope: !14202, inlinedAt: !14205)
!14202 = distinct !DISubprogram(name: "__get_IPSR", scope: !5341, file: !5341, line: 1027, type: !5097, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14203)
!14203 = !{!14204}
!14204 = !DILocalVariable(name: "result", scope: !14202, file: !5341, line: 1029, type: !121)
!14205 = distinct !DILocation(line: 48, column: 10, scope: !14206, inlinedAt: !14207)
!14206 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6095, file: !6095, line: 46, type: !6096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!14207 = distinct !DILocation(line: 946, column: 36, scope: !14186)
!14208 = !{i64 2486775}
!14209 = !DILocation(line: 0, scope: !14202, inlinedAt: !14205)
!14210 = !DILocation(line: 48, column: 9, scope: !14206, inlinedAt: !14207)
!14211 = !DILocation(line: 946, column: 2, scope: !14186)
!14212 = distinct !DISubprogram(name: "need_swap", scope: !2488, file: !2488, line: 953, type: !6096, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14213)
!14213 = !{!14214}
!14214 = !DILocalVariable(name: "new_thread", scope: !14212, file: !2488, line: 959, type: !2383)
!14215 = !DILocation(line: 962, column: 31, scope: !14212)
!14216 = !DILocation(line: 0, scope: !14212)
!14217 = !DILocation(line: 963, column: 23, scope: !14212)
!14218 = !DILocation(line: 963, column: 20, scope: !14212)
!14219 = !DILocation(line: 963, column: 2, scope: !14212)
!14220 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12629, file: !12629, line: 181, type: !5351, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14221)
!14221 = !{!14222, !14223}
!14222 = !DILocalVariable(name: "key", arg: 1, scope: !14220, file: !12629, line: 181, type: !32)
!14223 = !DILocalVariable(name: "ret", scope: !14220, file: !12629, line: 183, type: !103)
!14224 = !DILocation(line: 0, scope: !14220)
!14225 = !DILocation(line: 185, column: 8, scope: !14220)
!14226 = !DILocation(line: 186, column: 2, scope: !14220)
!14227 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2488, file: !2488, line: 665, type: !13518, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14228)
!14228 = !{!14229, !14230, !14232}
!14229 = !DILocalVariable(name: "thread", arg: 1, scope: !14227, file: !2488, line: 665, type: !2383)
!14230 = !DILocalVariable(name: "__i", scope: !14231, file: !2488, line: 671, type: !13552)
!14231 = distinct !DILexicalBlock(scope: !14227, file: !2488, line: 671, column: 2)
!14232 = !DILocalVariable(name: "__key", scope: !14231, file: !2488, line: 671, type: !13552)
!14233 = !DILocation(line: 0, scope: !14227)
!14234 = !DILocation(line: 669, column: 8, scope: !14227)
!14235 = !DILocation(line: 0, scope: !14231)
!14236 = !DILocation(line: 0, scope: !13560, inlinedAt: !14237)
!14237 = distinct !DILocation(line: 671, column: 2, scope: !14231)
!14238 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14239)
!14239 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14237)
!14240 = !DILocation(line: 0, scope: !13569, inlinedAt: !14239)
!14241 = !DILocation(line: 672, column: 7, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !2488, line: 672, column: 7)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2488, line: 671, column: 26)
!14244 = distinct !DILexicalBlock(scope: !14231, file: !2488, line: 671, column: 2)
!14245 = !DILocation(line: 672, column: 7, scope: !14243)
!14246 = !DILocation(line: 0, scope: !13729, inlinedAt: !14247)
!14247 = distinct !DILocation(line: 673, column: 4, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14242, file: !2488, line: 672, column: 35)
!14249 = !DILocation(line: 266, column: 15, scope: !13729, inlinedAt: !14247)
!14250 = !DILocation(line: 266, column: 28, scope: !13729, inlinedAt: !14247)
!14251 = !DILocation(line: 0, scope: !13737, inlinedAt: !14252)
!14252 = distinct !DILocation(line: 268, column: 3, scope: !13741, inlinedAt: !14247)
!14253 = !DILocation(line: 234, column: 2, scope: !13737, inlinedAt: !14252)
!14254 = !DILocation(line: 674, column: 3, scope: !14248)
!14255 = !DILocation(line: 675, column: 3, scope: !14243)
!14256 = !DILocation(line: 676, column: 26, scope: !14243)
!14257 = !DILocation(line: 676, column: 23, scope: !14243)
!14258 = !DILocation(line: 676, column: 3, scope: !14243)
!14259 = !DILocation(line: 0, scope: !13587, inlinedAt: !14260)
!14260 = distinct !DILocation(line: 671, column: 2, scope: !14244)
!14261 = !DILocation(line: 0, scope: !13595, inlinedAt: !14262)
!14262 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14260)
!14263 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14262)
!14264 = !DILocation(line: 679, column: 16, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14227, file: !2488, line: 679, column: 6)
!14266 = !DILocation(line: 679, column: 13, scope: !14265)
!14267 = !DILocation(line: 679, column: 6, scope: !14227)
!14268 = !DILocation(line: 680, column: 3, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14265, file: !2488, line: 679, column: 26)
!14270 = !DILocation(line: 681, column: 2, scope: !14269)
!14271 = !DILocation(line: 684, column: 1, scope: !14227)
!14272 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12919, file: !12919, line: 52, type: !13536, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14273)
!14273 = !{!14274}
!14274 = !DILocalVariable(name: "thread", arg: 1, scope: !14272, file: !12919, line: 52, type: !2383)
!14275 = !DILocation(line: 0, scope: !14272)
!14276 = !DILocation(line: 54, column: 39, scope: !14272)
!14277 = !DILocation(line: 54, column: 9, scope: !14272)
!14278 = !DILocation(line: 54, column: 2, scope: !14272)
!14279 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12525, file: !12525, line: 141, type: !13518, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14280)
!14280 = !{!14281}
!14281 = !DILocalVariable(name: "thread", arg: 1, scope: !14279, file: !12525, line: 141, type: !2383)
!14282 = !DILocation(line: 0, scope: !14279)
!14283 = !DILocation(line: 143, column: 15, scope: !14279)
!14284 = !DILocation(line: 143, column: 28, scope: !14279)
!14285 = !DILocation(line: 146, column: 1, scope: !14279)
!14286 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12525, file: !12525, line: 73, type: !3124, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!14287 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14288)
!14288 = distinct !DILocation(line: 75, column: 30, scope: !14286)
!14289 = !DILocation(line: 0, scope: !13569, inlinedAt: !14288)
!14290 = !DILocation(line: 75, column: 9, scope: !14286)
!14291 = !DILocation(line: 76, column: 1, scope: !14286)
!14292 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2488, file: !2488, line: 977, type: !5075, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14293)
!14293 = !{!14294}
!14294 = !DILocalVariable(name: "key", arg: 1, scope: !14292, file: !2488, line: 977, type: !121)
!14295 = !DILocation(line: 0, scope: !14292)
!14296 = !DILocation(line: 979, column: 6, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14292, file: !2488, line: 979, column: 6)
!14298 = !DILocation(line: 979, column: 6, scope: !14292)
!14299 = !DILocation(line: 980, column: 3, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14297, file: !2488, line: 979, column: 20)
!14301 = !DILocation(line: 981, column: 2, scope: !14300)
!14302 = !DILocation(line: 0, scope: !13595, inlinedAt: !14303)
!14303 = distinct !DILocation(line: 982, column: 3, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14297, file: !2488, line: 981, column: 9)
!14305 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14303)
!14306 = !DILocation(line: 985, column: 1, scope: !14292)
!14307 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2488, file: !2488, line: 695, type: !13518, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14308)
!14308 = !{!14309, !14310}
!14309 = !DILocalVariable(name: "thread", arg: 1, scope: !14307, file: !2488, line: 695, type: !2383)
!14310 = !DILocalVariable(name: "key", scope: !14307, file: !2488, line: 699, type: !13552)
!14311 = !DILocation(line: 0, scope: !14307)
!14312 = !DILocation(line: 0, scope: !13560, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 699, column: 25, scope: !14307)
!14314 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14315)
!14315 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14313)
!14316 = !DILocation(line: 0, scope: !13569, inlinedAt: !14315)
!14317 = !DILocation(line: 702, column: 7, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14307, file: !2488, line: 702, column: 6)
!14319 = !DILocation(line: 702, column: 6, scope: !14307)
!14320 = !DILocation(line: 0, scope: !13587, inlinedAt: !14321)
!14321 = distinct !DILocation(line: 703, column: 3, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14318, file: !2488, line: 702, column: 38)
!14323 = !DILocation(line: 0, scope: !13595, inlinedAt: !14324)
!14324 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14321)
!14325 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14324)
!14326 = !DILocation(line: 704, column: 3, scope: !14322)
!14327 = !DILocation(line: 707, column: 2, scope: !14307)
!14328 = !DILocation(line: 708, column: 2, scope: !14307)
!14329 = !DILocation(line: 710, column: 2, scope: !14307)
!14330 = !DILocation(line: 713, column: 1, scope: !14307)
!14331 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12525, file: !12525, line: 96, type: !13678, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14332)
!14332 = !{!14333}
!14333 = !DILocalVariable(name: "thread", arg: 1, scope: !14331, file: !12525, line: 96, type: !2383)
!14334 = !DILocation(line: 0, scope: !14331)
!14335 = !DILocation(line: 98, column: 23, scope: !14331)
!14336 = !DILocation(line: 98, column: 36, scope: !14331)
!14337 = !DILocation(line: 98, column: 57, scope: !14331)
!14338 = !DILocation(line: 98, column: 2, scope: !14331)
!14339 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12525, file: !12525, line: 148, type: !13518, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14340)
!14340 = !{!14341}
!14341 = !DILocalVariable(name: "thread", arg: 1, scope: !14339, file: !12525, line: 148, type: !2383)
!14342 = !DILocation(line: 0, scope: !14339)
!14343 = !DILocation(line: 150, column: 15, scope: !14339)
!14344 = !DILocation(line: 150, column: 28, scope: !14339)
!14345 = !DILocation(line: 153, column: 1, scope: !14339)
!14346 = distinct !DISubprogram(name: "z_pend_thread", scope: !2488, file: !2488, line: 770, type: !14347, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14353)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{null, !2383, !2414, !14349}
!14349 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1232, line: 67, baseType: !14350)
!14350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1232, line: 65, size: 64, elements: !14351)
!14351 = !{!14352}
!14352 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14350, file: !1232, line: 66, baseType: !1231, size: 64)
!14353 = !{!14354, !14355, !14356, !14357, !14359}
!14354 = !DILocalVariable(name: "thread", arg: 1, scope: !14346, file: !2488, line: 770, type: !2383)
!14355 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14346, file: !2488, line: 770, type: !2414)
!14356 = !DILocalVariable(name: "timeout", arg: 3, scope: !14346, file: !2488, line: 771, type: !14349)
!14357 = !DILocalVariable(name: "__i", scope: !14358, file: !2488, line: 774, type: !13552)
!14358 = distinct !DILexicalBlock(scope: !14346, file: !2488, line: 774, column: 2)
!14359 = !DILocalVariable(name: "__key", scope: !14358, file: !2488, line: 774, type: !13552)
!14360 = !DILocation(line: 0, scope: !14346)
!14361 = !DILocation(line: 0, scope: !14358)
!14362 = !DILocation(line: 0, scope: !13560, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 774, column: 2, scope: !14358)
!14364 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14363)
!14366 = !DILocation(line: 0, scope: !13569, inlinedAt: !14365)
!14367 = !DILocation(line: 775, column: 3, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14369, file: !2488, line: 774, column: 26)
!14369 = distinct !DILexicalBlock(scope: !14358, file: !2488, line: 774, column: 2)
!14370 = !DILocation(line: 0, scope: !13587, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 774, column: 2, scope: !14369)
!14372 = !DILocation(line: 0, scope: !13595, inlinedAt: !14373)
!14373 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14371)
!14374 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14373)
!14375 = !DILocation(line: 777, column: 1, scope: !14346)
!14376 = distinct !DISubprogram(name: "pend_locked", scope: !2488, file: !2488, line: 760, type: !14347, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14377)
!14377 = !{!14378, !14379, !14380}
!14378 = !DILocalVariable(name: "thread", arg: 1, scope: !14376, file: !2488, line: 760, type: !2383)
!14379 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14376, file: !2488, line: 760, type: !2414)
!14380 = !DILocalVariable(name: "timeout", arg: 3, scope: !14376, file: !2488, line: 761, type: !14349)
!14381 = !DILocation(line: 0, scope: !14376)
!14382 = !DILocation(line: 766, column: 2, scope: !14376)
!14383 = !DILocation(line: 767, column: 2, scope: !14376)
!14384 = !DILocation(line: 768, column: 1, scope: !14376)
!14385 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2488, file: !2488, line: 740, type: !14386, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14388)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !2383, !2414}
!14388 = !{!14389, !14390}
!14389 = !DILocalVariable(name: "thread", arg: 1, scope: !14385, file: !2488, line: 740, type: !2383)
!14390 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14385, file: !2488, line: 740, type: !2414)
!14391 = !DILocation(line: 0, scope: !14385)
!14392 = !DILocation(line: 742, column: 2, scope: !14385)
!14393 = !DILocation(line: 743, column: 2, scope: !14385)
!14394 = !DILocation(line: 747, column: 13, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14385, file: !2488, line: 747, column: 6)
!14396 = !DILocation(line: 747, column: 6, scope: !14385)
!14397 = !DILocation(line: 748, column: 16, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14395, file: !2488, line: 747, column: 22)
!14399 = !DILocation(line: 748, column: 26, scope: !14398)
!14400 = !DILocation(line: 749, column: 28, scope: !14398)
!14401 = !DILocation(line: 0, scope: !13760, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 749, column: 3, scope: !14398)
!14403 = !DILocation(line: 188, column: 2, scope: !13770, inlinedAt: !14402)
!14404 = !DILocation(line: 188, column: 2, scope: !13772, inlinedAt: !14402)
!14405 = !DILocation(line: 0, scope: !13770, inlinedAt: !14402)
!14406 = !DILocation(line: 189, column: 7, scope: !13775, inlinedAt: !14402)
!14407 = !DILocation(line: 189, column: 35, scope: !13775, inlinedAt: !14402)
!14408 = !DILocation(line: 189, column: 7, scope: !13776, inlinedAt: !14402)
!14409 = !DILocation(line: 191, column: 21, scope: !13780, inlinedAt: !14402)
!14410 = !DILocation(line: 190, column: 4, scope: !13780, inlinedAt: !14402)
!14411 = !DILocation(line: 192, column: 4, scope: !13780, inlinedAt: !14402)
!14412 = distinct !{!14412, !14403, !14413}
!14413 = !DILocation(line: 194, column: 2, scope: !13770, inlinedAt: !14402)
!14414 = !DILocation(line: 196, column: 37, scope: !13760, inlinedAt: !14402)
!14415 = !DILocation(line: 196, column: 2, scope: !13760, inlinedAt: !14402)
!14416 = !DILocation(line: 197, column: 1, scope: !13760, inlinedAt: !14402)
!14417 = !DILocation(line: 751, column: 1, scope: !14385)
!14418 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2488, file: !2488, line: 753, type: !14419, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14421)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{null, !2383, !14349}
!14421 = !{!14422, !14423}
!14422 = !DILocalVariable(name: "thread", arg: 1, scope: !14418, file: !2488, line: 753, type: !2383)
!14423 = !DILocalVariable(name: "timeout", arg: 2, scope: !14418, file: !2488, line: 753, type: !14349)
!14424 = !DILocation(line: 0, scope: !14418)
!14425 = !DILocation(line: 755, column: 7, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14418, file: !2488, line: 755, column: 6)
!14427 = !DILocation(line: 755, column: 6, scope: !14418)
!14428 = !DILocation(line: 756, column: 3, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14426, file: !2488, line: 755, column: 41)
!14430 = !DILocation(line: 757, column: 2, scope: !14429)
!14431 = !DILocation(line: 758, column: 1, scope: !14418)
!14432 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12919, file: !12919, line: 47, type: !14419, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14433)
!14433 = !{!14434, !14435}
!14434 = !DILocalVariable(name: "thread", arg: 1, scope: !14432, file: !12919, line: 47, type: !2383)
!14435 = !DILocalVariable(name: "ticks", arg: 2, scope: !14432, file: !12919, line: 47, type: !14349)
!14436 = !DILocation(line: 0, scope: !14432)
!14437 = !DILocation(line: 49, column: 30, scope: !14432)
!14438 = !DILocation(line: 49, column: 2, scope: !14432)
!14439 = !DILocation(line: 50, column: 1, scope: !14432)
!14440 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2488, file: !2488, line: 795, type: !2440, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14441)
!14441 = !{!14442, !14443, !14444, !14446, !14447}
!14442 = !DILocalVariable(name: "timeout", arg: 1, scope: !14440, file: !2488, line: 795, type: !2442)
!14443 = !DILocalVariable(name: "thread", scope: !14440, file: !2488, line: 797, type: !2383)
!14444 = !DILocalVariable(name: "__i", scope: !14445, file: !2488, line: 800, type: !13552)
!14445 = distinct !DILexicalBlock(scope: !14440, file: !2488, line: 800, column: 2)
!14446 = !DILocalVariable(name: "__key", scope: !14445, file: !2488, line: 800, type: !13552)
!14447 = !DILocalVariable(name: "killed", scope: !14448, file: !2488, line: 801, type: !170)
!14448 = distinct !DILexicalBlock(scope: !14449, file: !2488, line: 800, column: 26)
!14449 = distinct !DILexicalBlock(scope: !14445, file: !2488, line: 800, column: 2)
!14450 = !DILocation(line: 0, scope: !14440)
!14451 = !DILocation(line: 797, column: 28, scope: !14440)
!14452 = !DILocation(line: 0, scope: !14445)
!14453 = !DILocation(line: 0, scope: !13560, inlinedAt: !14454)
!14454 = distinct !DILocation(line: 800, column: 2, scope: !14445)
!14455 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14456)
!14456 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14454)
!14457 = !DILocation(line: 0, scope: !13569, inlinedAt: !14456)
!14458 = !DILocation(line: 801, column: 27, scope: !14448)
!14459 = !DILocation(line: 801, column: 32, scope: !14448)
!14460 = !DILocation(line: 801, column: 61, scope: !14448)
!14461 = !DILocation(line: 0, scope: !14448)
!14462 = !DILocation(line: 804, column: 7, scope: !14448)
!14463 = !DILocation(line: 805, column: 21, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !2488, line: 805, column: 8)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !2488, line: 804, column: 16)
!14466 = distinct !DILexicalBlock(scope: !14448, file: !2488, line: 804, column: 7)
!14467 = !DILocation(line: 805, column: 31, scope: !14464)
!14468 = !DILocation(line: 805, column: 8, scope: !14465)
!14469 = !DILocation(line: 806, column: 5, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14464, file: !2488, line: 805, column: 40)
!14471 = !DILocation(line: 807, column: 4, scope: !14470)
!14472 = !DILocation(line: 808, column: 4, scope: !14465)
!14473 = !DILocation(line: 809, column: 4, scope: !14465)
!14474 = !DILocation(line: 810, column: 4, scope: !14465)
!14475 = !DILocation(line: 811, column: 3, scope: !14465)
!14476 = !DILocation(line: 0, scope: !13587, inlinedAt: !14477)
!14477 = distinct !DILocation(line: 800, column: 2, scope: !14449)
!14478 = !DILocation(line: 0, scope: !13595, inlinedAt: !14479)
!14479 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14477)
!14480 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14479)
!14481 = !DILocation(line: 813, column: 1, scope: !14440)
!14482 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2488, file: !2488, line: 779, type: !13518, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14483)
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !2488, line: 779, type: !2383)
!14485 = !DILocation(line: 0, scope: !14482)
!14486 = !DILocation(line: 781, column: 2, scope: !14482)
!14487 = !DILocation(line: 782, column: 2, scope: !14482)
!14488 = !DILocation(line: 783, column: 15, scope: !14482)
!14489 = !DILocation(line: 783, column: 25, scope: !14482)
!14490 = !DILocation(line: 784, column: 1, scope: !14482)
!14491 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12525, file: !12525, line: 165, type: !13518, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14492)
!14492 = !{!14493}
!14493 = !DILocalVariable(name: "thread", arg: 1, scope: !14491, file: !12525, line: 165, type: !2383)
!14494 = !DILocation(line: 0, scope: !14491)
!14495 = !DILocation(line: 167, column: 15, scope: !14491)
!14496 = !DILocation(line: 167, column: 28, scope: !14491)
!14497 = !DILocation(line: 168, column: 1, scope: !14491)
!14498 = distinct !DISubprogram(name: "unready_thread", scope: !2488, file: !2488, line: 731, type: !13518, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14499)
!14499 = !{!14500}
!14500 = !DILocalVariable(name: "thread", arg: 1, scope: !14498, file: !2488, line: 731, type: !2383)
!14501 = !DILocation(line: 0, scope: !14498)
!14502 = !DILocation(line: 733, column: 6, scope: !14503)
!14503 = distinct !DILexicalBlock(scope: !14498, file: !2488, line: 733, column: 6)
!14504 = !DILocation(line: 733, column: 6, scope: !14498)
!14505 = !DILocation(line: 0, scope: !13729, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 734, column: 3, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14503, file: !2488, line: 733, column: 34)
!14508 = !DILocation(line: 266, column: 15, scope: !13729, inlinedAt: !14506)
!14509 = !DILocation(line: 266, column: 28, scope: !13729, inlinedAt: !14506)
!14510 = !DILocation(line: 0, scope: !13737, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 268, column: 3, scope: !13741, inlinedAt: !14506)
!14512 = !DILocation(line: 234, column: 2, scope: !13737, inlinedAt: !14511)
!14513 = !DILocation(line: 735, column: 2, scope: !14507)
!14514 = !DILocation(line: 736, column: 25, scope: !14498)
!14515 = !DILocation(line: 736, column: 22, scope: !14498)
!14516 = !DILocation(line: 736, column: 2, scope: !14498)
!14517 = !DILocation(line: 737, column: 1, scope: !14498)
!14518 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12525, file: !12525, line: 160, type: !13518, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14519)
!14519 = !{!14520}
!14520 = !DILocalVariable(name: "thread", arg: 1, scope: !14518, file: !12525, line: 160, type: !2383)
!14521 = !DILocation(line: 0, scope: !14518)
!14522 = !DILocation(line: 162, column: 15, scope: !14518)
!14523 = !DILocation(line: 162, column: 28, scope: !14518)
!14524 = !DILocation(line: 163, column: 1, scope: !14518)
!14525 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2488, file: !2488, line: 786, type: !13518, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14526)
!14526 = !{!14527, !14528, !14530}
!14527 = !DILocalVariable(name: "thread", arg: 1, scope: !14525, file: !2488, line: 786, type: !2383)
!14528 = !DILocalVariable(name: "__i", scope: !14529, file: !2488, line: 788, type: !13552)
!14529 = distinct !DILexicalBlock(scope: !14525, file: !2488, line: 788, column: 2)
!14530 = !DILocalVariable(name: "__key", scope: !14529, file: !2488, line: 788, type: !13552)
!14531 = !DILocation(line: 0, scope: !14525)
!14532 = !DILocation(line: 0, scope: !14529)
!14533 = !DILocation(line: 0, scope: !13560, inlinedAt: !14534)
!14534 = distinct !DILocation(line: 788, column: 2, scope: !14529)
!14535 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14536)
!14536 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14534)
!14537 = !DILocation(line: 0, scope: !13569, inlinedAt: !14536)
!14538 = !DILocation(line: 789, column: 3, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !2488, line: 788, column: 26)
!14540 = distinct !DILexicalBlock(scope: !14529, file: !2488, line: 788, column: 2)
!14541 = !DILocation(line: 0, scope: !13587, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 788, column: 2, scope: !14540)
!14543 = !DILocation(line: 0, scope: !13595, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14542)
!14545 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14544)
!14546 = !DILocation(line: 791, column: 1, scope: !14525)
!14547 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2488, file: !2488, line: 816, type: !14548, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14550)
!14548 = !DISubroutineType(types: !14549)
!14549 = !{!103, !121, !2414, !14349}
!14550 = !{!14551, !14552, !14553, !14554, !14555, !14557}
!14551 = !DILocalVariable(name: "key", arg: 1, scope: !14547, file: !2488, line: 816, type: !121)
!14552 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14547, file: !2488, line: 816, type: !2414)
!14553 = !DILocalVariable(name: "timeout", arg: 3, scope: !14547, file: !2488, line: 816, type: !14349)
!14554 = !DILocalVariable(name: "ret", scope: !14547, file: !2488, line: 828, type: !103)
!14555 = !DILocalVariable(name: "__i", scope: !14556, file: !2488, line: 829, type: !13552)
!14556 = distinct !DILexicalBlock(scope: !14547, file: !2488, line: 829, column: 2)
!14557 = !DILocalVariable(name: "__key", scope: !14556, file: !2488, line: 829, type: !13552)
!14558 = !DILocation(line: 0, scope: !14547)
!14559 = !DILocation(line: 823, column: 14, scope: !14547)
!14560 = !DILocation(line: 823, column: 2, scope: !14547)
!14561 = !DILocation(line: 826, column: 20, scope: !14547)
!14562 = !DILocation(line: 826, column: 18, scope: !14547)
!14563 = !DILocation(line: 828, column: 12, scope: !14547)
!14564 = !DILocation(line: 0, scope: !14556)
!14565 = !DILocation(line: 0, scope: !13560, inlinedAt: !14566)
!14566 = distinct !DILocation(line: 829, column: 2, scope: !14556)
!14567 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14566)
!14569 = !DILocation(line: 0, scope: !13569, inlinedAt: !14568)
!14570 = !DILocation(line: 830, column: 7, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14572, file: !2488, line: 830, column: 7)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !2488, line: 829, column: 26)
!14573 = distinct !DILexicalBlock(scope: !14556, file: !2488, line: 829, column: 2)
!14574 = !DILocation(line: 830, column: 26, scope: !14571)
!14575 = !DILocation(line: 830, column: 23, scope: !14571)
!14576 = !DILocation(line: 830, column: 7, scope: !14572)
!14577 = !DILocation(line: 831, column: 20, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14571, file: !2488, line: 830, column: 36)
!14579 = !DILocation(line: 832, column: 3, scope: !14578)
!14580 = !DILocation(line: 0, scope: !13587, inlinedAt: !14581)
!14581 = distinct !DILocation(line: 829, column: 2, scope: !14573)
!14582 = !DILocation(line: 0, scope: !13595, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14581)
!14584 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14583)
!14585 = !DILocation(line: 834, column: 2, scope: !14547)
!14586 = distinct !DISubprogram(name: "z_pend_curr", scope: !2488, file: !2488, line: 840, type: !14587, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14589)
!14587 = !DISubroutineType(types: !14588)
!14588 = !{!103, !13563, !13552, !2414, !14349}
!14589 = !{!14590, !14591, !14592, !14593}
!14590 = !DILocalVariable(name: "lock", arg: 1, scope: !14586, file: !2488, line: 840, type: !13563)
!14591 = !DILocalVariable(name: "key", arg: 2, scope: !14586, file: !2488, line: 840, type: !13552)
!14592 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14586, file: !2488, line: 841, type: !2414)
!14593 = !DILocalVariable(name: "timeout", arg: 4, scope: !14586, file: !2488, line: 841, type: !14349)
!14594 = !DILocation(line: 0, scope: !14586)
!14595 = !DILocation(line: 844, column: 20, scope: !14586)
!14596 = !DILocation(line: 844, column: 18, scope: !14586)
!14597 = !DILocation(line: 0, scope: !13560, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 856, column: 9, scope: !14586)
!14599 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14598)
!14601 = !DILocation(line: 0, scope: !13569, inlinedAt: !14600)
!14602 = !DILocation(line: 857, column: 14, scope: !14586)
!14603 = !DILocation(line: 857, column: 2, scope: !14586)
!14604 = !DILocation(line: 0, scope: !14169, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 859, column: 9, scope: !14586)
!14606 = !DILocation(line: 196, column: 9, scope: !14169, inlinedAt: !14605)
!14607 = !DILocation(line: 859, column: 2, scope: !14586)
!14608 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2488, file: !2488, line: 862, type: !14609, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14611)
!14609 = !DISubroutineType(types: !14610)
!14610 = !{!2383, !2414}
!14611 = !{!14612, !14613, !14614, !14616}
!14612 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14608, file: !2488, line: 862, type: !2414)
!14613 = !DILocalVariable(name: "thread", scope: !14608, file: !2488, line: 864, type: !2383)
!14614 = !DILocalVariable(name: "__i", scope: !14615, file: !2488, line: 866, type: !13552)
!14615 = distinct !DILexicalBlock(scope: !14608, file: !2488, line: 866, column: 2)
!14616 = !DILocalVariable(name: "__key", scope: !14615, file: !2488, line: 866, type: !13552)
!14617 = !DILocation(line: 0, scope: !14608)
!14618 = !DILocation(line: 0, scope: !14615)
!14619 = !DILocation(line: 0, scope: !13560, inlinedAt: !14620)
!14620 = distinct !DILocation(line: 866, column: 2, scope: !14615)
!14621 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14620)
!14623 = !DILocation(line: 0, scope: !13569, inlinedAt: !14622)
!14624 = !DILocation(line: 867, column: 12, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !2488, line: 866, column: 26)
!14626 = distinct !DILexicalBlock(scope: !14615, file: !2488, line: 866, column: 2)
!14627 = !DILocation(line: 869, column: 14, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14625, file: !2488, line: 869, column: 7)
!14629 = !DILocation(line: 869, column: 7, scope: !14625)
!14630 = !DILocation(line: 870, column: 4, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14628, file: !2488, line: 869, column: 23)
!14632 = !DILocation(line: 871, column: 3, scope: !14631)
!14633 = !DILocation(line: 0, scope: !13587, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 866, column: 2, scope: !14626)
!14635 = !DILocation(line: 0, scope: !13595, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14634)
!14637 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14636)
!14638 = !DILocation(line: 874, column: 2, scope: !14608)
!14639 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2488, file: !2488, line: 877, type: !14609, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14640)
!14640 = !{!14641, !14642, !14643, !14645}
!14641 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14639, file: !2488, line: 877, type: !2414)
!14642 = !DILocalVariable(name: "thread", scope: !14639, file: !2488, line: 879, type: !2383)
!14643 = !DILocalVariable(name: "__i", scope: !14644, file: !2488, line: 881, type: !13552)
!14644 = distinct !DILexicalBlock(scope: !14639, file: !2488, line: 881, column: 2)
!14645 = !DILocalVariable(name: "__key", scope: !14644, file: !2488, line: 881, type: !13552)
!14646 = !DILocation(line: 0, scope: !14639)
!14647 = !DILocation(line: 0, scope: !14644)
!14648 = !DILocation(line: 0, scope: !13560, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 881, column: 2, scope: !14644)
!14650 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14651)
!14651 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14649)
!14652 = !DILocation(line: 0, scope: !13569, inlinedAt: !14651)
!14653 = !DILocation(line: 882, column: 12, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !2488, line: 881, column: 26)
!14655 = distinct !DILexicalBlock(scope: !14644, file: !2488, line: 881, column: 2)
!14656 = !DILocation(line: 884, column: 14, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14654, file: !2488, line: 884, column: 7)
!14658 = !DILocation(line: 884, column: 7, scope: !14654)
!14659 = !DILocation(line: 885, column: 4, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14657, file: !2488, line: 884, column: 23)
!14661 = !DILocation(line: 886, column: 10, scope: !14660)
!14662 = !DILocation(line: 887, column: 3, scope: !14660)
!14663 = !DILocation(line: 0, scope: !13587, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 881, column: 2, scope: !14655)
!14665 = !DILocation(line: 0, scope: !13595, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14664)
!14667 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14666)
!14668 = !DILocation(line: 890, column: 2, scope: !14639)
!14669 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2488, file: !2488, line: 893, type: !13518, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14670)
!14670 = !{!14671}
!14671 = !DILocalVariable(name: "thread", arg: 1, scope: !14669, file: !2488, line: 893, type: !2383)
!14672 = !DILocation(line: 0, scope: !14669)
!14673 = !DILocation(line: 0, scope: !14525, inlinedAt: !14674)
!14674 = distinct !DILocation(line: 895, column: 2, scope: !14669)
!14675 = !DILocation(line: 0, scope: !14529, inlinedAt: !14674)
!14676 = !DILocation(line: 0, scope: !13560, inlinedAt: !14677)
!14677 = distinct !DILocation(line: 788, column: 2, scope: !14529, inlinedAt: !14674)
!14678 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14679)
!14679 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14677)
!14680 = !DILocation(line: 0, scope: !13569, inlinedAt: !14679)
!14681 = !DILocation(line: 789, column: 3, scope: !14539, inlinedAt: !14674)
!14682 = !DILocation(line: 0, scope: !13587, inlinedAt: !14683)
!14683 = distinct !DILocation(line: 788, column: 2, scope: !14540, inlinedAt: !14674)
!14684 = !DILocation(line: 0, scope: !13595, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14683)
!14686 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14685)
!14687 = !DILocation(line: 896, column: 8, scope: !14669)
!14688 = !DILocation(line: 897, column: 1, scope: !14669)
!14689 = distinct !DISubprogram(name: "z_set_prio", scope: !2488, file: !2488, line: 902, type: !13880, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14690)
!14690 = !{!14691, !14692, !14693, !14694, !14696}
!14691 = !DILocalVariable(name: "thread", arg: 1, scope: !14689, file: !2488, line: 902, type: !2383)
!14692 = !DILocalVariable(name: "prio", arg: 2, scope: !14689, file: !2488, line: 902, type: !103)
!14693 = !DILocalVariable(name: "need_sched", scope: !14689, file: !2488, line: 904, type: !170)
!14694 = !DILocalVariable(name: "__i", scope: !14695, file: !2488, line: 906, type: !13552)
!14695 = distinct !DILexicalBlock(scope: !14689, file: !2488, line: 906, column: 2)
!14696 = !DILocalVariable(name: "__key", scope: !14695, file: !2488, line: 906, type: !13552)
!14697 = !DILocation(line: 0, scope: !14689)
!14698 = !DILocation(line: 0, scope: !14695)
!14699 = !DILocation(line: 0, scope: !13560, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 906, column: 2, scope: !14695)
!14701 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14700)
!14703 = !DILocation(line: 0, scope: !13569, inlinedAt: !14702)
!14704 = !DILocation(line: 907, column: 16, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14706, file: !2488, line: 906, column: 26)
!14706 = distinct !DILexicalBlock(scope: !14695, file: !2488, line: 906, column: 2)
!14707 = !DILocation(line: 909, column: 7, scope: !14705)
!14708 = !DILocation(line: 0, scope: !13729, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 912, column: 5, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !2488, line: 911, column: 63)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !2488, line: 911, column: 8)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !2488, line: 909, column: 19)
!14713 = distinct !DILexicalBlock(scope: !14705, file: !2488, line: 909, column: 7)
!14714 = !DILocation(line: 266, column: 28, scope: !13729, inlinedAt: !14709)
!14715 = !DILocation(line: 0, scope: !13737, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 268, column: 3, scope: !13741, inlinedAt: !14709)
!14717 = !DILocation(line: 234, column: 2, scope: !13737, inlinedAt: !14716)
!14718 = !DILocation(line: 913, column: 23, scope: !14710)
!14719 = !DILocation(line: 0, scope: !13746, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 914, column: 5, scope: !14710)
!14721 = !DILocation(line: 252, column: 28, scope: !13746, inlinedAt: !14720)
!14722 = !DILocation(line: 0, scope: !13753, inlinedAt: !14723)
!14723 = distinct !DILocation(line: 254, column: 3, scope: !13757, inlinedAt: !14720)
!14724 = !DILocation(line: 0, scope: !13760, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 229, column: 2, scope: !13753, inlinedAt: !14723)
!14726 = !DILocation(line: 188, column: 2, scope: !13770, inlinedAt: !14725)
!14727 = !DILocation(line: 188, column: 2, scope: !13772, inlinedAt: !14725)
!14728 = !DILocation(line: 0, scope: !13770, inlinedAt: !14725)
!14729 = !DILocation(line: 189, column: 7, scope: !13775, inlinedAt: !14725)
!14730 = !DILocation(line: 189, column: 35, scope: !13775, inlinedAt: !14725)
!14731 = !DILocation(line: 189, column: 7, scope: !13776, inlinedAt: !14725)
!14732 = !DILocation(line: 190, column: 4, scope: !13780, inlinedAt: !14725)
!14733 = !DILocation(line: 192, column: 4, scope: !13780, inlinedAt: !14725)
!14734 = distinct !{!14734, !14726, !14735}
!14735 = !DILocation(line: 194, column: 2, scope: !13770, inlinedAt: !14725)
!14736 = !DILocation(line: 196, column: 2, scope: !13760, inlinedAt: !14725)
!14737 = !DILocation(line: 197, column: 1, scope: !13760, inlinedAt: !14725)
!14738 = !DILocation(line: 918, column: 4, scope: !14712)
!14739 = !DILocation(line: 919, column: 3, scope: !14712)
!14740 = !DILocation(line: 920, column: 22, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14713, file: !2488, line: 919, column: 10)
!14742 = !DILocation(line: 0, scope: !13587, inlinedAt: !14743)
!14743 = distinct !DILocation(line: 906, column: 2, scope: !14706)
!14744 = !DILocation(line: 0, scope: !13595, inlinedAt: !14745)
!14745 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14743)
!14746 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14745)
!14747 = !DILocation(line: 926, column: 2, scope: !14689)
!14748 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2488, file: !2488, line: 929, type: !14749, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14751)
!14749 = !DISubroutineType(types: !14750)
!14750 = !{null, !2383, !103}
!14751 = !{!14752, !14753, !14754}
!14752 = !DILocalVariable(name: "thread", arg: 1, scope: !14748, file: !2488, line: 929, type: !2383)
!14753 = !DILocalVariable(name: "prio", arg: 2, scope: !14748, file: !2488, line: 929, type: !103)
!14754 = !DILocalVariable(name: "need_sched", scope: !14748, file: !2488, line: 931, type: !170)
!14755 = !DILocation(line: 0, scope: !14748)
!14756 = !DILocation(line: 931, column: 20, scope: !14748)
!14757 = !DILocation(line: 935, column: 17, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14748, file: !2488, line: 935, column: 6)
!14759 = !DILocation(line: 935, column: 20, scope: !14758)
!14760 = !DILocation(line: 935, column: 35, scope: !14758)
!14761 = !DILocation(line: 935, column: 48, scope: !14758)
!14762 = !DILocation(line: 935, column: 6, scope: !14748)
!14763 = !DILocation(line: 936, column: 3, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14758, file: !2488, line: 935, column: 55)
!14765 = !DILocation(line: 937, column: 2, scope: !14764)
!14766 = !DILocation(line: 938, column: 1, scope: !14748)
!14767 = distinct !DISubprogram(name: "k_sched_lock", scope: !2488, file: !2488, line: 987, type: !3124, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14768)
!14768 = !{!14769, !14771}
!14769 = !DILocalVariable(name: "__i", scope: !14770, file: !2488, line: 989, type: !13552)
!14770 = distinct !DILexicalBlock(scope: !14767, file: !2488, line: 989, column: 2)
!14771 = !DILocalVariable(name: "__key", scope: !14770, file: !2488, line: 989, type: !13552)
!14772 = !DILocation(line: 0, scope: !14770)
!14773 = !DILocation(line: 0, scope: !13560, inlinedAt: !14774)
!14774 = distinct !DILocation(line: 989, column: 2, scope: !14770)
!14775 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14774)
!14777 = !DILocation(line: 0, scope: !13569, inlinedAt: !14776)
!14778 = !DILocation(line: 992, column: 3, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14780, file: !2488, line: 989, column: 26)
!14780 = distinct !DILexicalBlock(scope: !14770, file: !2488, line: 989, column: 2)
!14781 = !DILocation(line: 0, scope: !13587, inlinedAt: !14782)
!14782 = distinct !DILocation(line: 989, column: 2, scope: !14780)
!14783 = !DILocation(line: 0, scope: !13595, inlinedAt: !14784)
!14784 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14782)
!14785 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14784)
!14786 = !DILocation(line: 994, column: 1, scope: !14767)
!14787 = distinct !DISubprogram(name: "z_sched_lock", scope: !12525, file: !12525, line: 251, type: !3124, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!14788 = !DILocation(line: 256, column: 4, scope: !14787)
!14789 = !DILocation(line: 256, column: 19, scope: !14787)
!14790 = !DILocation(line: 256, column: 2, scope: !14787)
!14791 = !DILocation(line: 258, column: 2, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14787, file: !12525, line: 258, column: 2)
!14793 = !{i64 2152340585}
!14794 = !DILocation(line: 259, column: 1, scope: !14787)
!14795 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2488, file: !2488, line: 996, type: !3124, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14796)
!14796 = !{!14797, !14799}
!14797 = !DILocalVariable(name: "__i", scope: !14798, file: !2488, line: 998, type: !13552)
!14798 = distinct !DILexicalBlock(scope: !14795, file: !2488, line: 998, column: 2)
!14799 = !DILocalVariable(name: "__key", scope: !14798, file: !2488, line: 998, type: !13552)
!14800 = !DILocation(line: 0, scope: !14798)
!14801 = !DILocation(line: 0, scope: !13560, inlinedAt: !14802)
!14802 = distinct !DILocation(line: 998, column: 2, scope: !14798)
!14803 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !14802)
!14805 = !DILocation(line: 0, scope: !13569, inlinedAt: !14804)
!14806 = !DILocation(line: 1002, column: 5, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !2488, line: 998, column: 26)
!14808 = distinct !DILexicalBlock(scope: !14798, file: !2488, line: 998, column: 2)
!14809 = !DILocation(line: 1002, column: 20, scope: !14807)
!14810 = !DILocation(line: 1002, column: 3, scope: !14807)
!14811 = !DILocation(line: 1003, column: 3, scope: !14807)
!14812 = !DILocation(line: 0, scope: !13587, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 998, column: 2, scope: !14808)
!14814 = !DILocation(line: 0, scope: !13595, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !14813)
!14816 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !14815)
!14817 = !DILocation(line: 1011, column: 2, scope: !14795)
!14818 = !DILocation(line: 1012, column: 1, scope: !14795)
!14819 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2488, file: !2488, line: 1014, type: !13868, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!14820 = !DILocation(line: 1028, column: 25, scope: !14819)
!14821 = !DILocation(line: 1028, column: 2, scope: !14819)
!14822 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2488, file: !2488, line: 1155, type: !14823, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14825)
!14823 = !DISubroutineType(types: !14824)
!14824 = !{!170, !2412, !2412}
!14825 = !{!14826, !14827, !14828, !14829, !14830}
!14826 = !DILocalVariable(name: "a", arg: 1, scope: !14822, file: !2488, line: 1155, type: !2412)
!14827 = !DILocalVariable(name: "b", arg: 2, scope: !14822, file: !2488, line: 1155, type: !2412)
!14828 = !DILocalVariable(name: "thread_a", scope: !14822, file: !2488, line: 1157, type: !2383)
!14829 = !DILocalVariable(name: "thread_b", scope: !14822, file: !2488, line: 1157, type: !2383)
!14830 = !DILocalVariable(name: "cmp", scope: !14822, file: !2488, line: 1158, type: !675)
!14831 = !DILocation(line: 0, scope: !14822)
!14832 = !DILocation(line: 1160, column: 13, scope: !14822)
!14833 = !DILocation(line: 1161, column: 13, scope: !14822)
!14834 = !DILocation(line: 1163, column: 8, scope: !14822)
!14835 = !DILocation(line: 1165, column: 10, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14822, file: !2488, line: 1165, column: 6)
!14837 = !DILocation(line: 1165, column: 6, scope: !14822)
!14838 = !DILocation(line: 1167, column: 17, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14836, file: !2488, line: 1167, column: 13)
!14840 = !DILocation(line: 1167, column: 13, scope: !14836)
!14841 = !DILocation(line: 1170, column: 25, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14839, file: !2488, line: 1169, column: 9)
!14843 = !DILocation(line: 1170, column: 52, scope: !14842)
!14844 = !DILocation(line: 1170, column: 35, scope: !14842)
!14845 = !DILocation(line: 1170, column: 3, scope: !14842)
!14846 = !DILocation(line: 0, scope: !14836)
!14847 = !DILocation(line: 1173, column: 1, scope: !14822)
!14848 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2488, file: !2488, line: 1175, type: !14849, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14864)
!14849 = !DISubroutineType(types: !14850)
!14850 = !{null, !14851, !2383}
!14851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14852, size: 32)
!14852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14853, line: 37, size: 128, elements: !14854)
!14853 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14854 = !{!14855, !14863}
!14855 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14852, file: !14853, line: 38, baseType: !14856, size: 96)
!14856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !250, line: 83, size: 96, elements: !14857)
!14857 = !{!14858, !14859, !14862}
!14858 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14856, file: !250, line: 84, baseType: !2412, size: 32)
!14859 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14856, file: !250, line: 85, baseType: !14860, size: 32, offset: 32)
!14860 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !250, line: 81, baseType: !14861)
!14861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14823, size: 32)
!14862 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14856, file: !250, line: 86, baseType: !103, size: 32, offset: 64)
!14863 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14852, file: !14853, line: 39, baseType: !103, size: 32, offset: 96)
!14864 = !{!14865, !14866, !14867, !14868, !14877}
!14865 = !DILocalVariable(name: "pq", arg: 1, scope: !14848, file: !2488, line: 1175, type: !14851)
!14866 = !DILocalVariable(name: "thread", arg: 2, scope: !14848, file: !2488, line: 1175, type: !2383)
!14867 = !DILocalVariable(name: "t", scope: !14848, file: !2488, line: 1177, type: !2383)
!14868 = !DILocalVariable(name: "__f", scope: !14869, file: !2488, line: 1190, type: !14872)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !2488, line: 1190, column: 3)
!14870 = distinct !DILexicalBlock(scope: !14871, file: !2488, line: 1189, column: 27)
!14871 = distinct !DILexicalBlock(scope: !14848, file: !2488, line: 1189, column: 6)
!14872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !250, line: 155, size: 96, elements: !14873)
!14873 = !{!14874, !14875, !14876}
!14874 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14872, file: !250, line: 156, baseType: !2483, size: 32)
!14875 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14872, file: !250, line: 157, baseType: !1925, size: 32, offset: 32)
!14876 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14872, file: !250, line: 158, baseType: !675, size: 32, offset: 64)
!14877 = !DILocalVariable(name: "n", scope: !14878, file: !2488, line: 1190, type: !2412)
!14878 = distinct !DILexicalBlock(scope: !14879, file: !2488, line: 1190, column: 3)
!14879 = distinct !DILexicalBlock(scope: !14869, file: !2488, line: 1190, column: 3)
!14880 = !DILocation(line: 0, scope: !14848)
!14881 = !DILocation(line: 1181, column: 31, scope: !14848)
!14882 = !DILocation(line: 1181, column: 45, scope: !14848)
!14883 = !DILocation(line: 1181, column: 15, scope: !14848)
!14884 = !DILocation(line: 1181, column: 25, scope: !14848)
!14885 = !DILocation(line: 1189, column: 11, scope: !14871)
!14886 = !DILocation(line: 1189, column: 7, scope: !14871)
!14887 = !DILocation(line: 1189, column: 6, scope: !14848)
!14888 = !DILocation(line: 1190, column: 3, scope: !14869)
!14889 = !DILocation(line: 1190, column: 3, scope: !14878)
!14890 = !DILocation(line: 0, scope: !14878)
!14891 = !DILocation(line: 1190, column: 3, scope: !14879)
!14892 = !DILocation(line: 1193, column: 2, scope: !14870)
!14893 = !DILocation(line: 1191, column: 42, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14879, file: !2488, line: 1190, column: 54)
!14895 = !DILocation(line: 1191, column: 12, scope: !14894)
!14896 = !DILocation(line: 1191, column: 22, scope: !14894)
!14897 = distinct !{!14897, !14888, !14898}
!14898 = !DILocation(line: 1192, column: 3, scope: !14869)
!14899 = !DILocation(line: 1195, column: 17, scope: !14848)
!14900 = !DILocation(line: 1195, column: 37, scope: !14848)
!14901 = !DILocation(line: 1195, column: 2, scope: !14848)
!14902 = !DILocation(line: 1196, column: 1, scope: !14848)
!14903 = !DISubprogram(name: "z_rb_foreach_next", scope: !250, file: !250, line: 176, type: !14904, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{!2412, !14906, !14907}
!14906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14856, size: 32)
!14907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14872, size: 32)
!14908 = !DISubprogram(name: "rb_insert", scope: !250, file: !250, line: 105, type: !14909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!14909 = !DISubroutineType(types: !14910)
!14910 = !{null, !14906, !2412}
!14911 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2488, file: !2488, line: 1198, type: !14849, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14912)
!14912 = !{!14913, !14914}
!14913 = !DILocalVariable(name: "pq", arg: 1, scope: !14911, file: !2488, line: 1198, type: !14851)
!14914 = !DILocalVariable(name: "thread", arg: 2, scope: !14911, file: !2488, line: 1198, type: !2383)
!14915 = !DILocation(line: 0, scope: !14911)
!14916 = !DILocation(line: 1202, column: 17, scope: !14911)
!14917 = !DILocation(line: 1202, column: 37, scope: !14911)
!14918 = !DILocation(line: 1202, column: 2, scope: !14911)
!14919 = !DILocation(line: 1204, column: 16, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14911, file: !2488, line: 1204, column: 6)
!14921 = !DILocation(line: 1204, column: 7, scope: !14920)
!14922 = !DILocation(line: 1204, column: 6, scope: !14911)
!14923 = !DILocation(line: 1205, column: 7, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14920, file: !2488, line: 1204, column: 22)
!14925 = !DILocation(line: 1205, column: 22, scope: !14924)
!14926 = !DILocation(line: 1206, column: 2, scope: !14924)
!14927 = !DILocation(line: 1207, column: 1, scope: !14911)
!14928 = !DISubprogram(name: "rb_remove", scope: !250, file: !250, line: 110, type: !14909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!14929 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2488, file: !2488, line: 1209, type: !14930, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14932)
!14930 = !DISubroutineType(types: !14931)
!14931 = !{!2383, !14851}
!14932 = !{!14933, !14934, !14935}
!14933 = !DILocalVariable(name: "pq", arg: 1, scope: !14929, file: !2488, line: 1209, type: !14851)
!14934 = !DILocalVariable(name: "thread", scope: !14929, file: !2488, line: 1211, type: !2383)
!14935 = !DILocalVariable(name: "n", scope: !14929, file: !2488, line: 1212, type: !2412)
!14936 = !DILocation(line: 0, scope: !14929)
!14937 = !DILocation(line: 1212, column: 37, scope: !14929)
!14938 = !DILocation(line: 1212, column: 21, scope: !14929)
!14939 = !DILocation(line: 1217, column: 2, scope: !14929)
!14940 = distinct !DISubprogram(name: "rb_get_min", scope: !250, file: !250, line: 115, type: !14941, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14943)
!14941 = !DISubroutineType(types: !14942)
!14942 = !{!2412, !14906}
!14943 = !{!14944}
!14944 = !DILocalVariable(name: "tree", arg: 1, scope: !14940, file: !250, line: 115, type: !14906)
!14945 = !DILocation(line: 0, scope: !14940)
!14946 = !DILocation(line: 117, column: 9, scope: !14940)
!14947 = !DILocation(line: 117, column: 2, scope: !14940)
!14948 = !DISubprogram(name: "z_rb_get_minmax", scope: !250, file: !250, line: 100, type: !14949, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!14949 = !DISubroutineType(types: !14950)
!14950 = !{!2412, !14906, !167}
!14951 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2488, file: !2488, line: 1246, type: !14952, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14960)
!14952 = !DISubroutineType(types: !14953)
!14953 = !{!2383, !14954}
!14954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14955, size: 32)
!14955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14853, line: 53, size: 2080, elements: !14956)
!14956 = !{!14957, !14959}
!14957 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14955, file: !14853, line: 54, baseType: !14958, size: 2048)
!14958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2419, size: 2048, elements: !774)
!14959 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14955, file: !14853, line: 55, baseType: !32, size: 32, offset: 2048)
!14960 = !{!14961, !14962, !14963, !14964}
!14961 = !DILocalVariable(name: "pq", arg: 1, scope: !14951, file: !2488, line: 1246, type: !14954)
!14962 = !DILocalVariable(name: "thread", scope: !14951, file: !2488, line: 1252, type: !2383)
!14963 = !DILocalVariable(name: "l", scope: !14951, file: !2488, line: 1253, type: !13763)
!14964 = !DILocalVariable(name: "n", scope: !14951, file: !2488, line: 1254, type: !2484)
!14965 = !DILocation(line: 0, scope: !14951)
!14966 = !DILocation(line: 1248, column: 11, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14951, file: !2488, line: 1248, column: 6)
!14968 = !DILocation(line: 1248, column: 7, scope: !14967)
!14969 = !DILocation(line: 1248, column: 6, scope: !14951)
!14970 = !DILocation(line: 1253, column: 31, scope: !14951)
!14971 = !DILocation(line: 1253, column: 20, scope: !14951)
!14972 = !DILocation(line: 1254, column: 19, scope: !14951)
!14973 = !DILocation(line: 1260, column: 1, scope: !14951)
!14974 = distinct !DISubprogram(name: "z_unpend_all", scope: !2488, file: !2488, line: 1262, type: !14975, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14977)
!14975 = !DISubroutineType(types: !14976)
!14976 = !{!103, !2414}
!14977 = !{!14978, !14979, !14980}
!14978 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14974, file: !2488, line: 1262, type: !2414)
!14979 = !DILocalVariable(name: "need_sched", scope: !14974, file: !2488, line: 1264, type: !103)
!14980 = !DILocalVariable(name: "thread", scope: !14974, file: !2488, line: 1265, type: !2383)
!14981 = !DILocation(line: 0, scope: !14974)
!14982 = !DILocation(line: 1267, column: 19, scope: !14974)
!14983 = !DILocation(line: 1267, column: 41, scope: !14974)
!14984 = !DILocation(line: 1267, column: 2, scope: !14974)
!14985 = !DILocation(line: 1268, column: 3, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14974, file: !2488, line: 1267, column: 50)
!14987 = !DILocation(line: 1269, column: 3, scope: !14986)
!14988 = distinct !{!14988, !14984, !14989}
!14989 = !DILocation(line: 1271, column: 2, scope: !14974)
!14990 = !DILocation(line: 1273, column: 2, scope: !14974)
!14991 = distinct !DISubprogram(name: "z_waitq_head", scope: !12851, file: !12851, line: 52, type: !14609, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !14992)
!14992 = !{!14993}
!14993 = !DILocalVariable(name: "w", arg: 1, scope: !14991, file: !12851, line: 52, type: !2414)
!14994 = !DILocation(line: 0, scope: !14991)
!14995 = !DILocation(line: 54, column: 52, scope: !14991)
!14996 = !DILocation(line: 54, column: 28, scope: !14991)
!14997 = !DILocation(line: 54, column: 9, scope: !14991)
!14998 = !DILocation(line: 54, column: 2, scope: !14991)
!14999 = distinct !DISubprogram(name: "init_ready_q", scope: !2488, file: !2488, line: 1276, type: !15000, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15007)
!15000 = !DISubroutineType(types: !15001)
!15001 = !{null, !15002}
!15002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15003, size: 32)
!15003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !260, line: 83, size: 96, elements: !15004)
!15004 = !{!15005, !15006}
!15005 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15003, file: !260, line: 86, baseType: !2383, size: 32)
!15006 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15003, file: !260, line: 90, baseType: !2419, size: 64, offset: 32)
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "rq", arg: 1, scope: !14999, file: !2488, line: 1276, type: !15002)
!15009 = !DILocation(line: 0, scope: !14999)
!15010 = !DILocation(line: 1289, column: 22, scope: !14999)
!15011 = !DILocation(line: 1289, column: 2, scope: !14999)
!15012 = !DILocation(line: 1291, column: 1, scope: !14999)
!15013 = distinct !DISubprogram(name: "sys_dlist_init", scope: !234, file: !234, line: 197, type: !15014, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15016)
!15014 = !DISubroutineType(types: !15015)
!15015 = !{null, !13763}
!15016 = !{!15017}
!15017 = !DILocalVariable(name: "list", arg: 1, scope: !15013, file: !234, line: 197, type: !13763)
!15018 = !DILocation(line: 0, scope: !15013)
!15019 = !DILocation(line: 199, column: 8, scope: !15013)
!15020 = !DILocation(line: 199, column: 13, scope: !15013)
!15021 = !DILocation(line: 200, column: 8, scope: !15013)
!15022 = !DILocation(line: 200, column: 13, scope: !15013)
!15023 = !DILocation(line: 201, column: 1, scope: !15013)
!15024 = distinct !DISubprogram(name: "z_sched_init", scope: !2488, file: !2488, line: 1293, type: !3124, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!15025 = !DILocation(line: 1302, column: 2, scope: !15024)
!15026 = !DILocation(line: 1306, column: 2, scope: !15024)
!15027 = !DILocation(line: 1309, column: 1, scope: !15024)
!15028 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2488, file: !2488, line: 1311, type: !15029, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15032)
!15029 = !DISubroutineType(types: !15030)
!15030 = !{!103, !15031}
!15031 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !2383)
!15032 = !{!15033}
!15033 = !DILocalVariable(name: "thread", arg: 1, scope: !15028, file: !2488, line: 1311, type: !15031)
!15034 = !DILocation(line: 0, scope: !15028)
!15035 = !DILocation(line: 1313, column: 22, scope: !15028)
!15036 = !DILocation(line: 1313, column: 9, scope: !15028)
!15037 = !DILocation(line: 1313, column: 2, scope: !15028)
!15038 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2488, file: !2488, line: 1325, type: !15039, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15041)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{null, !15031, !103}
!15041 = !{!15042, !15043, !15044}
!15042 = !DILocalVariable(name: "thread", arg: 1, scope: !15038, file: !2488, line: 1325, type: !15031)
!15043 = !DILocalVariable(name: "prio", arg: 2, scope: !15038, file: !2488, line: 1325, type: !103)
!15044 = !DILocalVariable(name: "th", scope: !15038, file: !2488, line: 1334, type: !2383)
!15045 = !DILocation(line: 0, scope: !15038)
!15046 = !DILocation(line: 1336, column: 2, scope: !15038)
!15047 = !DILocation(line: 1337, column: 1, scope: !15038)
!15048 = distinct !DISubprogram(name: "k_can_yield", scope: !2488, file: !2488, line: 1384, type: !6096, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!15049 = !DILocation(line: 1386, column: 11, scope: !15048)
!15050 = !DILocation(line: 1386, column: 29, scope: !15048)
!15051 = !DILocation(line: 1386, column: 32, scope: !15048)
!15052 = !DILocation(line: 1386, column: 46, scope: !15048)
!15053 = !DILocation(line: 1387, column: 28, scope: !15048)
!15054 = !DILocation(line: 1387, column: 4, scope: !15048)
!15055 = !DILocation(line: 1386, column: 2, scope: !15048)
!15056 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !320, file: !320, line: 989, type: !6096, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!15057 = !DILocation(line: 993, column: 10, scope: !15056)
!15058 = !DILocation(line: 993, column: 2, scope: !15056)
!15059 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2488, file: !2488, line: 1390, type: !3124, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15060)
!15060 = !{!15061}
!15061 = !DILocalVariable(name: "key", scope: !15059, file: !2488, line: 1396, type: !13552)
!15062 = !DILocation(line: 0, scope: !13560, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 1396, column: 25, scope: !15059)
!15064 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !15065)
!15065 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !15063)
!15066 = !DILocation(line: 0, scope: !13569, inlinedAt: !15065)
!15067 = !DILocation(line: 0, scope: !15059)
!15068 = !DILocation(line: 1400, column: 18, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15070, file: !2488, line: 1399, column: 36)
!15070 = distinct !DILexicalBlock(scope: !15059, file: !2488, line: 1398, column: 6)
!15071 = !DILocation(line: 0, scope: !13729, inlinedAt: !15072)
!15072 = distinct !DILocation(line: 1400, column: 3, scope: !15069)
!15073 = !DILocation(line: 266, column: 15, scope: !13729, inlinedAt: !15072)
!15074 = !DILocation(line: 266, column: 28, scope: !13729, inlinedAt: !15072)
!15075 = !DILocation(line: 0, scope: !13737, inlinedAt: !15076)
!15076 = distinct !DILocation(line: 268, column: 3, scope: !13741, inlinedAt: !15072)
!15077 = !DILocation(line: 234, column: 2, scope: !13737, inlinedAt: !15076)
!15078 = !DILocation(line: 1402, column: 15, scope: !15059)
!15079 = !DILocation(line: 0, scope: !13746, inlinedAt: !15080)
!15080 = distinct !DILocation(line: 1402, column: 2, scope: !15059)
!15081 = !DILocation(line: 252, column: 15, scope: !13746, inlinedAt: !15080)
!15082 = !DILocation(line: 252, column: 28, scope: !13746, inlinedAt: !15080)
!15083 = !DILocation(line: 0, scope: !13753, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 254, column: 3, scope: !13757, inlinedAt: !15080)
!15085 = !DILocation(line: 0, scope: !13760, inlinedAt: !15086)
!15086 = distinct !DILocation(line: 229, column: 2, scope: !13753, inlinedAt: !15084)
!15087 = !DILocation(line: 188, column: 2, scope: !13770, inlinedAt: !15086)
!15088 = !DILocation(line: 188, column: 2, scope: !13772, inlinedAt: !15086)
!15089 = !DILocation(line: 0, scope: !13770, inlinedAt: !15086)
!15090 = !DILocation(line: 189, column: 7, scope: !13775, inlinedAt: !15086)
!15091 = !DILocation(line: 189, column: 35, scope: !13775, inlinedAt: !15086)
!15092 = !DILocation(line: 189, column: 7, scope: !13776, inlinedAt: !15086)
!15093 = !DILocation(line: 191, column: 21, scope: !13780, inlinedAt: !15086)
!15094 = !DILocation(line: 190, column: 4, scope: !13780, inlinedAt: !15086)
!15095 = !DILocation(line: 192, column: 4, scope: !13780, inlinedAt: !15086)
!15096 = distinct !{!15096, !15087, !15097}
!15097 = !DILocation(line: 194, column: 2, scope: !13770, inlinedAt: !15086)
!15098 = !DILocation(line: 196, column: 37, scope: !13760, inlinedAt: !15086)
!15099 = !DILocation(line: 196, column: 2, scope: !13760, inlinedAt: !15086)
!15100 = !DILocation(line: 197, column: 1, scope: !13760, inlinedAt: !15086)
!15101 = !DILocation(line: 1403, column: 2, scope: !15059)
!15102 = !DILocation(line: 0, scope: !14169, inlinedAt: !15103)
!15103 = distinct !DILocation(line: 1404, column: 2, scope: !15059)
!15104 = !DILocation(line: 196, column: 9, scope: !14169, inlinedAt: !15103)
!15105 = !DILocation(line: 1405, column: 1, scope: !15059)
!15106 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2488, file: !2488, line: 1459, type: !15107, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15109)
!15107 = !DISubroutineType(types: !15108)
!15108 = !{!675, !14349}
!15109 = !{!15110, !15111, !15112}
!15110 = !DILocalVariable(name: "timeout", arg: 1, scope: !15106, file: !2488, line: 1459, type: !14349)
!15111 = !DILocalVariable(name: "ticks", scope: !15106, file: !2488, line: 1461, type: !1231)
!15112 = !DILocalVariable(name: "ret", scope: !15106, file: !2488, line: 1480, type: !675)
!15113 = !DILocation(line: 0, scope: !15106)
!15114 = !DILocation(line: 1468, column: 6, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15106, file: !2488, line: 1468, column: 6)
!15116 = !DILocation(line: 1468, column: 6, scope: !15106)
!15117 = !DILocation(line: 1469, column: 20, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15115, file: !2488, line: 1468, column: 40)
!15119 = !DILocation(line: 1469, column: 3, scope: !15118)
!15120 = !DILocation(line: 1473, column: 3, scope: !15118)
!15121 = !DILocation(line: 1478, column: 10, scope: !15106)
!15122 = !DILocation(line: 1480, column: 16, scope: !15106)
!15123 = !DILocation(line: 1485, column: 1, scope: !15106)
!15124 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3686, file: !3686, line: 310, type: !15125, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15127)
!15125 = !DISubroutineType(types: !15126)
!15126 = !{null, !15031}
!15127 = !{!15128}
!15128 = !DILocalVariable(name: "thread", arg: 1, scope: !15124, file: !3686, line: 310, type: !15031)
!15129 = !DILocation(line: 0, scope: !15124)
!15130 = !DILocation(line: 319, column: 2, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15124, file: !3686, line: 319, column: 2)
!15132 = !{i64 2152258974}
!15133 = !DILocation(line: 320, column: 2, scope: !15124)
!15134 = !DILocation(line: 321, column: 1, scope: !15124)
!15135 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2488, file: !2488, line: 1415, type: !15136, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15138)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!675, !1231}
!15138 = !{!15139, !15140, !15141, !15142}
!15139 = !DILocalVariable(name: "ticks", arg: 1, scope: !15135, file: !2488, line: 1415, type: !1231)
!15140 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15135, file: !2488, line: 1418, type: !121)
!15141 = !DILocalVariable(name: "timeout", scope: !15135, file: !2488, line: 1430, type: !14349)
!15142 = !DILocalVariable(name: "key", scope: !15135, file: !2488, line: 1437, type: !13552)
!15143 = !DILocation(line: 0, scope: !15135)
!15144 = !DILocation(line: 1425, column: 12, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15135, file: !2488, line: 1425, column: 6)
!15146 = !DILocation(line: 1425, column: 6, scope: !15135)
!15147 = !DILocation(line: 1426, column: 3, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15145, file: !2488, line: 1425, column: 18)
!15149 = !DILocation(line: 1427, column: 3, scope: !15148)
!15150 = !DILocation(line: 1431, column: 24, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15135, file: !2488, line: 1431, column: 6)
!15152 = !DILocation(line: 1431, column: 6, scope: !15135)
!15153 = !DILocation(line: 1432, column: 35, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15151, file: !2488, line: 1431, column: 30)
!15155 = !DILocation(line: 1432, column: 27, scope: !15154)
!15156 = !DILocation(line: 1433, column: 2, scope: !15154)
!15157 = !DILocation(line: 1434, column: 27, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15151, file: !2488, line: 1433, column: 9)
!15159 = !DILocation(line: 0, scope: !15151)
!15160 = !DILocation(line: 0, scope: !13560, inlinedAt: !15161)
!15161 = distinct !DILocation(line: 1437, column: 25, scope: !15135)
!15162 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !15163)
!15163 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !15161)
!15164 = !DILocation(line: 0, scope: !13569, inlinedAt: !15163)
!15165 = !DILocation(line: 1440, column: 20, scope: !15135)
!15166 = !DILocation(line: 1440, column: 18, scope: !15135)
!15167 = !DILocation(line: 1442, column: 2, scope: !15135)
!15168 = !DILocation(line: 1443, column: 23, scope: !15135)
!15169 = !DILocation(line: 1443, column: 2, scope: !15135)
!15170 = !DILocation(line: 1444, column: 29, scope: !15135)
!15171 = !DILocation(line: 1444, column: 2, scope: !15135)
!15172 = !DILocation(line: 0, scope: !14169, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 1446, column: 8, scope: !15135)
!15174 = !DILocation(line: 196, column: 9, scope: !14169, inlinedAt: !15173)
!15175 = !DILocation(line: 1450, column: 10, scope: !15135)
!15176 = !DILocation(line: 1450, column: 45, scope: !15135)
!15177 = !DILocation(line: 1450, column: 43, scope: !15135)
!15178 = !DILocation(line: 1451, column: 6, scope: !15135)
!15179 = !DILocation(line: 1457, column: 1, scope: !15135)
!15180 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5118, file: !5118, line: 1103, type: !5119, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15181)
!15181 = !{!15182}
!15182 = !DILocalVariable(name: "t", arg: 1, scope: !15180, file: !5118, line: 1103, type: !2254)
!15183 = !DILocation(line: 0, scope: !15180)
!15184 = !DILocation(line: 0, scope: !13607, inlinedAt: !15185)
!15185 = distinct !DILocation(line: 1106, column: 9, scope: !15180)
!15186 = !DILocation(line: 139, column: 13, scope: !15187, inlinedAt: !15185)
!15187 = distinct !DILexicalBlock(scope: !15188, file: !5118, line: 138, column: 10)
!15188 = distinct !DILexicalBlock(scope: !15189, file: !5118, line: 136, column: 7)
!15189 = distinct !DILexicalBlock(scope: !13628, file: !5118, line: 134, column: 17)
!15190 = !DILocation(line: 1106, column: 2, scope: !15180)
!15191 = distinct !DISubprogram(name: "k_yield", scope: !3686, file: !3686, line: 140, type: !3124, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!15192 = !DILocation(line: 148, column: 2, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15191, file: !3686, line: 148, column: 2)
!15194 = !{i64 2152258294}
!15195 = !DILocation(line: 149, column: 2, scope: !15191)
!15196 = !DILocation(line: 150, column: 1, scope: !15191)
!15197 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2488, file: !2488, line: 1495, type: !15198, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15200)
!15198 = !DISubroutineType(types: !15199)
!15199 = !{!675, !103}
!15200 = !{!15201, !15202}
!15201 = !DILocalVariable(name: "us", arg: 1, scope: !15197, file: !2488, line: 1495, type: !103)
!15202 = !DILocalVariable(name: "ticks", scope: !15197, file: !2488, line: 1497, type: !675)
!15203 = !DILocation(line: 0, scope: !15197)
!15204 = !DILocation(line: 1501, column: 31, scope: !15197)
!15205 = !DILocation(line: 1501, column: 10, scope: !15197)
!15206 = !DILocation(line: 1502, column: 23, scope: !15197)
!15207 = !DILocation(line: 1502, column: 10, scope: !15197)
!15208 = !DILocation(line: 1506, column: 31, scope: !15197)
!15209 = !DILocation(line: 1506, column: 9, scope: !15197)
!15210 = !DILocation(line: 1506, column: 2, scope: !15197)
!15211 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !5118, file: !5118, line: 571, type: !5119, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15212)
!15212 = !{!15213}
!15213 = !DILocalVariable(name: "t", arg: 1, scope: !15211, file: !5118, line: 571, type: !2254)
!15214 = !DILocation(line: 0, scope: !15211)
!15215 = !DILocation(line: 0, scope: !13607, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 574, column: 9, scope: !15211)
!15217 = !DILocation(line: 135, column: 5, scope: !15189, inlinedAt: !15216)
!15218 = !DILocation(line: 139, column: 13, scope: !15187, inlinedAt: !15216)
!15219 = !DILocation(line: 574, column: 2, scope: !15211)
!15220 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !5118, file: !5118, line: 1187, type: !5119, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15221)
!15221 = !{!15222}
!15222 = !DILocalVariable(name: "t", arg: 1, scope: !15220, file: !5118, line: 1187, type: !2254)
!15223 = !DILocation(line: 0, scope: !15220)
!15224 = !DILocation(line: 0, scope: !13607, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 1190, column: 9, scope: !15220)
!15226 = !DILocation(line: 145, column: 13, scope: !15227, inlinedAt: !15225)
!15227 = distinct !DILexicalBlock(scope: !13625, file: !5118, line: 144, column: 10)
!15228 = !DILocation(line: 1190, column: 2, scope: !15220)
!15229 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2488, file: !2488, line: 1517, type: !15125, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15230)
!15230 = !{!15231}
!15231 = !DILocalVariable(name: "thread", arg: 1, scope: !15229, file: !2488, line: 1517, type: !15031)
!15232 = !DILocation(line: 0, scope: !15229)
!15233 = !DILocation(line: 1521, column: 6, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15229, file: !2488, line: 1521, column: 6)
!15235 = !DILocation(line: 1521, column: 6, scope: !15229)
!15236 = !DILocation(line: 1525, column: 6, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15229, file: !2488, line: 1525, column: 6)
!15238 = !DILocation(line: 1525, column: 37, scope: !15237)
!15239 = !DILocation(line: 1525, column: 6, scope: !15229)
!15240 = !DILocation(line: 1527, column: 20, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15242, file: !2488, line: 1527, column: 7)
!15242 = distinct !DILexicalBlock(scope: !15237, file: !2488, line: 1525, column: 42)
!15243 = !DILocation(line: 1527, column: 33, scope: !15241)
!15244 = !DILocation(line: 1527, column: 7, scope: !15242)
!15245 = !DILocation(line: 1532, column: 2, scope: !15229)
!15246 = !DILocation(line: 1533, column: 2, scope: !15229)
!15247 = !DILocation(line: 1031, column: 3, scope: !14202, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 48, column: 10, scope: !14206, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 1537, column: 7, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15229, file: !2488, line: 1537, column: 6)
!15251 = !DILocation(line: 0, scope: !14202, inlinedAt: !15248)
!15252 = !DILocation(line: 48, column: 9, scope: !14206, inlinedAt: !15249)
!15253 = !DILocation(line: 1537, column: 6, scope: !15229)
!15254 = !DILocation(line: 1538, column: 3, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15250, file: !2488, line: 1537, column: 25)
!15256 = !DILocation(line: 1539, column: 2, scope: !15255)
!15257 = !DILocation(line: 1540, column: 1, scope: !15229)
!15258 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12525, file: !12525, line: 101, type: !13678, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15259)
!15259 = !{!15260}
!15260 = !DILocalVariable(name: "thread", arg: 1, scope: !15258, file: !12525, line: 101, type: !2383)
!15261 = !DILocation(line: 0, scope: !15258)
!15262 = !DILocation(line: 103, column: 23, scope: !15258)
!15263 = !DILocation(line: 103, column: 36, scope: !15258)
!15264 = !DILocation(line: 103, column: 55, scope: !15258)
!15265 = !DILocation(line: 103, column: 2, scope: !15258)
!15266 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2488, file: !2488, line: 1567, type: !15267, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15269)
!15267 = !DISubroutineType(types: !15268)
!15268 = !{!15031}
!15269 = !{!15270}
!15270 = !DILocalVariable(name: "ret", scope: !15266, file: !2488, line: 1577, type: !15031)
!15271 = !DILocation(line: 1577, column: 30, scope: !15266)
!15272 = !DILocation(line: 0, scope: !15266)
!15273 = !DILocation(line: 1582, column: 2, scope: !15266)
!15274 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2488, file: !2488, line: 1593, type: !6371, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !335)
!15275 = !DILocation(line: 1031, column: 3, scope: !14202, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 48, column: 10, scope: !14206, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 1595, column: 10, scope: !15274)
!15278 = !DILocation(line: 0, scope: !14202, inlinedAt: !15276)
!15279 = !DILocation(line: 48, column: 9, scope: !14206, inlinedAt: !15277)
!15280 = !DILocation(line: 1595, column: 27, scope: !15274)
!15281 = !DILocation(line: 1595, column: 41, scope: !15274)
!15282 = !DILocation(line: 1595, column: 30, scope: !15274)
!15283 = !DILocation(line: 1595, column: 2, scope: !15274)
!15284 = distinct !DISubprogram(name: "z_thread_abort", scope: !2488, file: !2488, line: 1725, type: !13518, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15285)
!15285 = !{!15286, !15287}
!15286 = !DILocalVariable(name: "thread", arg: 1, scope: !15284, file: !2488, line: 1725, type: !2383)
!15287 = !DILocalVariable(name: "key", scope: !15284, file: !2488, line: 1727, type: !13552)
!15288 = !DILocation(line: 0, scope: !15284)
!15289 = !DILocation(line: 0, scope: !13560, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 1727, column: 25, scope: !15284)
!15291 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !15290)
!15293 = !DILocation(line: 0, scope: !13569, inlinedAt: !15292)
!15294 = !DILocation(line: 1729, column: 20, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15284, file: !2488, line: 1729, column: 6)
!15296 = !DILocation(line: 1729, column: 33, scope: !15295)
!15297 = !DILocation(line: 1729, column: 48, scope: !15295)
!15298 = !DILocation(line: 1729, column: 6, scope: !15284)
!15299 = !DILocation(line: 0, scope: !13587, inlinedAt: !15300)
!15300 = distinct !DILocation(line: 1730, column: 3, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15295, file: !2488, line: 1729, column: 54)
!15302 = !DILocation(line: 0, scope: !13595, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !15300)
!15304 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !15303)
!15305 = !DILocation(line: 1732, column: 3, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15301, file: !2488, line: 1732, column: 3)
!15307 = !{i64 2152995704, i64 2152995720, i64 2152995746, i64 2152995774, i64 2152995794}
!15308 = !DILocation(line: 1733, column: 3, scope: !15301)
!15309 = !DILocation(line: 1736, column: 20, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15284, file: !2488, line: 1736, column: 6)
!15311 = !DILocation(line: 1736, column: 33, scope: !15310)
!15312 = !DILocation(line: 1736, column: 49, scope: !15310)
!15313 = !DILocation(line: 1736, column: 6, scope: !15284)
!15314 = !DILocation(line: 0, scope: !13587, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 1737, column: 3, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15310, file: !2488, line: 1736, column: 56)
!15317 = !DILocation(line: 0, scope: !13595, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !15315)
!15319 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !15318)
!15320 = !DILocation(line: 1738, column: 3, scope: !15316)
!15321 = !DILocation(line: 1775, column: 2, scope: !15284)
!15322 = !DILocation(line: 1776, column: 16, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15284, file: !2488, line: 1776, column: 6)
!15324 = !DILocation(line: 1776, column: 13, scope: !15323)
!15325 = !DILocation(line: 1776, column: 25, scope: !15323)
!15326 = !DILocation(line: 1031, column: 3, scope: !14202, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 48, column: 10, scope: !14206, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 1776, column: 29, scope: !15323)
!15329 = !DILocation(line: 0, scope: !14202, inlinedAt: !15327)
!15330 = !DILocation(line: 48, column: 9, scope: !14206, inlinedAt: !15328)
!15331 = !DILocation(line: 1776, column: 6, scope: !15284)
!15332 = !DILocation(line: 0, scope: !14169, inlinedAt: !15333)
!15333 = distinct !DILocation(line: 1777, column: 3, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15323, file: !2488, line: 1776, column: 47)
!15335 = !DILocation(line: 196, column: 9, scope: !14169, inlinedAt: !15333)
!15336 = !DILocation(line: 1779, column: 2, scope: !15334)
!15337 = !DILocation(line: 0, scope: !13587, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 1780, column: 2, scope: !15284)
!15339 = !DILocation(line: 0, scope: !13595, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !15338)
!15341 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !15340)
!15342 = !DILocation(line: 1781, column: 1, scope: !15284)
!15343 = distinct !DISubprogram(name: "end_thread", scope: !2488, file: !2488, line: 1690, type: !13518, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15344)
!15344 = !{!15345}
!15345 = !DILocalVariable(name: "thread", arg: 1, scope: !15343, file: !2488, line: 1690, type: !2383)
!15346 = !DILocation(line: 0, scope: !15343)
!15347 = !DILocation(line: 1695, column: 20, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15343, file: !2488, line: 1695, column: 6)
!15349 = !DILocation(line: 1695, column: 33, scope: !15348)
!15350 = !DILocation(line: 1695, column: 49, scope: !15348)
!15351 = !DILocation(line: 1695, column: 6, scope: !15343)
!15352 = !DILocation(line: 1697, column: 29, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15348, file: !2488, line: 1695, column: 56)
!15354 = !DILocation(line: 1698, column: 7, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15353, file: !2488, line: 1698, column: 7)
!15356 = !DILocation(line: 1698, column: 7, scope: !15353)
!15357 = !DILocation(line: 0, scope: !13729, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 1699, column: 4, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15355, file: !2488, line: 1698, column: 35)
!15360 = !DILocation(line: 266, column: 28, scope: !13729, inlinedAt: !15358)
!15361 = !DILocation(line: 0, scope: !13737, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 268, column: 3, scope: !13741, inlinedAt: !15358)
!15363 = !DILocation(line: 234, column: 2, scope: !13737, inlinedAt: !15362)
!15364 = !DILocation(line: 1700, column: 3, scope: !15359)
!15365 = !DILocation(line: 1701, column: 20, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15353, file: !2488, line: 1701, column: 7)
!15367 = !DILocation(line: 1701, column: 30, scope: !15366)
!15368 = !DILocation(line: 1701, column: 7, scope: !15353)
!15369 = !DILocation(line: 1702, column: 4, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15366, file: !2488, line: 1701, column: 39)
!15371 = !DILocation(line: 1703, column: 3, scope: !15370)
!15372 = !DILocation(line: 1704, column: 9, scope: !15353)
!15373 = !DILocation(line: 1705, column: 23, scope: !15353)
!15374 = !DILocation(line: 1705, column: 3, scope: !15353)
!15375 = !DILocation(line: 1706, column: 3, scope: !15353)
!15376 = !DILocation(line: 1722, column: 2, scope: !15353)
!15377 = !DILocation(line: 1723, column: 1, scope: !15343)
!15378 = distinct !DISubprogram(name: "unpend_all", scope: !2488, file: !2488, line: 1674, type: !15379, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15381)
!15379 = !DISubroutineType(types: !15380)
!15380 = !{null, !2414}
!15381 = !{!15382, !15383}
!15382 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15378, file: !2488, line: 1674, type: !2414)
!15383 = !DILocalVariable(name: "thread", scope: !15378, file: !2488, line: 1676, type: !2383)
!15384 = !DILocation(line: 0, scope: !15378)
!15385 = !DILocation(line: 1678, column: 19, scope: !15378)
!15386 = !DILocation(line: 1678, column: 41, scope: !15378)
!15387 = !DILocation(line: 1678, column: 2, scope: !15378)
!15388 = !DILocation(line: 1679, column: 3, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15378, file: !2488, line: 1678, column: 50)
!15390 = !DILocation(line: 1680, column: 9, scope: !15389)
!15391 = !DILocalVariable(name: "thread", arg: 1, scope: !15392, file: !12545, line: 65, type: !2383)
!15392 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12545, file: !12545, line: 65, type: !15393, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15395)
!15393 = !DISubroutineType(types: !15394)
!15394 = !{null, !2383, !32}
!15395 = !{!15391, !15396}
!15396 = !DILocalVariable(name: "value", arg: 2, scope: !15392, file: !12545, line: 65, type: !32)
!15397 = !DILocation(line: 0, scope: !15392, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 1681, column: 3, scope: !15389)
!15399 = !DILocation(line: 67, column: 15, scope: !15392, inlinedAt: !15398)
!15400 = !DILocation(line: 67, column: 33, scope: !15392, inlinedAt: !15398)
!15401 = !DILocation(line: 1682, column: 3, scope: !15389)
!15402 = distinct !{!15402, !15387, !15403}
!15403 = !DILocation(line: 1683, column: 2, scope: !15378)
!15404 = !DILocation(line: 1684, column: 1, scope: !15378)
!15405 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2488, file: !2488, line: 1794, type: !15406, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15408)
!15406 = !DISubroutineType(types: !15407)
!15407 = !{!103, !2383, !14349}
!15408 = !{!15409, !15410, !15411, !15412}
!15409 = !DILocalVariable(name: "thread", arg: 1, scope: !15405, file: !2488, line: 1794, type: !2383)
!15410 = !DILocalVariable(name: "timeout", arg: 2, scope: !15405, file: !2488, line: 1794, type: !14349)
!15411 = !DILocalVariable(name: "key", scope: !15405, file: !2488, line: 1796, type: !13552)
!15412 = !DILocalVariable(name: "ret", scope: !15405, file: !2488, line: 1797, type: !103)
!15413 = !DILocation(line: 0, scope: !15405)
!15414 = !DILocation(line: 0, scope: !13560, inlinedAt: !15415)
!15415 = distinct !DILocation(line: 1796, column: 25, scope: !15405)
!15416 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !15415)
!15418 = !DILocation(line: 0, scope: !13569, inlinedAt: !15417)
!15419 = !DILocation(line: 1801, column: 20, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15405, file: !2488, line: 1801, column: 6)
!15421 = !DILocation(line: 1801, column: 33, scope: !15420)
!15422 = !DILocation(line: 1801, column: 49, scope: !15420)
!15423 = !DILocation(line: 1801, column: 6, scope: !15405)
!15424 = !DILocation(line: 1803, column: 13, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15420, file: !2488, line: 1803, column: 13)
!15426 = !DILocation(line: 1803, column: 13, scope: !15420)
!15427 = !DILocation(line: 1805, column: 24, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15425, file: !2488, line: 1805, column: 13)
!15429 = !DILocation(line: 1805, column: 21, scope: !15428)
!15430 = !DILocation(line: 1805, column: 34, scope: !15428)
!15431 = !DILocation(line: 1806, column: 20, scope: !15428)
!15432 = !DILocation(line: 1806, column: 44, scope: !15428)
!15433 = !DILocation(line: 1806, column: 30, scope: !15428)
!15434 = !DILocation(line: 1805, column: 13, scope: !15425)
!15435 = !DILocation(line: 1810, column: 42, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15428, file: !2488, line: 1808, column: 9)
!15437 = !DILocation(line: 1810, column: 3, scope: !15436)
!15438 = !DILocation(line: 1811, column: 22, scope: !15436)
!15439 = !DILocation(line: 1811, column: 3, scope: !15436)
!15440 = !DILocation(line: 0, scope: !14169, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 1814, column: 9, scope: !15436)
!15442 = !DILocation(line: 196, column: 9, scope: !14169, inlinedAt: !15441)
!15443 = !DILocation(line: 1817, column: 3, scope: !15436)
!15444 = !DILocation(line: 0, scope: !15420)
!15445 = !DILocation(line: 0, scope: !13587, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 1822, column: 2, scope: !15405)
!15447 = !DILocation(line: 0, scope: !13595, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !15446)
!15449 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !15448)
!15450 = !DILocation(line: 1823, column: 2, scope: !15405)
!15451 = !DILocation(line: 1824, column: 1, scope: !15405)
!15452 = distinct !DISubprogram(name: "z_sched_wake", scope: !2488, file: !2488, line: 1882, type: !15453, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15455)
!15453 = !DISubroutineType(types: !15454)
!15454 = !{!170, !2414, !103, !102}
!15455 = !{!15456, !15457, !15458, !15459, !15460, !15461, !15463}
!15456 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15452, file: !2488, line: 1882, type: !2414)
!15457 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15452, file: !2488, line: 1882, type: !103)
!15458 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15452, file: !2488, line: 1882, type: !102)
!15459 = !DILocalVariable(name: "thread", scope: !15452, file: !2488, line: 1884, type: !2383)
!15460 = !DILocalVariable(name: "ret", scope: !15452, file: !2488, line: 1885, type: !170)
!15461 = !DILocalVariable(name: "__i", scope: !15462, file: !2488, line: 1887, type: !13552)
!15462 = distinct !DILexicalBlock(scope: !15452, file: !2488, line: 1887, column: 2)
!15463 = !DILocalVariable(name: "__key", scope: !15462, file: !2488, line: 1887, type: !13552)
!15464 = !DILocation(line: 0, scope: !15452)
!15465 = !DILocation(line: 0, scope: !15462)
!15466 = !DILocation(line: 0, scope: !13560, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 1887, column: 2, scope: !15462)
!15468 = !DILocation(line: 55, column: 2, scope: !13569, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 145, column: 10, scope: !13560, inlinedAt: !15467)
!15470 = !DILocation(line: 0, scope: !13569, inlinedAt: !15469)
!15471 = !DILocation(line: 1888, column: 12, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !2488, line: 1887, column: 26)
!15473 = distinct !DILexicalBlock(scope: !15462, file: !2488, line: 1887, column: 2)
!15474 = !DILocation(line: 1890, column: 14, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15472, file: !2488, line: 1890, column: 7)
!15476 = !DILocation(line: 1890, column: 7, scope: !15472)
!15477 = !DILocalVariable(name: "thread", arg: 1, scope: !15478, file: !15479, line: 134, type: !2383)
!15478 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15479, file: !15479, line: 134, type: !15480, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15482)
!15479 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15480 = !DISubroutineType(types: !15481)
!15481 = !{null, !2383, !32, !102}
!15482 = !{!15477, !15483, !15484}
!15483 = !DILocalVariable(name: "value", arg: 2, scope: !15478, file: !15479, line: 135, type: !32)
!15484 = !DILocalVariable(name: "data", arg: 3, scope: !15478, file: !15479, line: 136, type: !102)
!15485 = !DILocation(line: 0, scope: !15478, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 1891, column: 4, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15475, file: !2488, line: 1890, column: 23)
!15488 = !DILocation(line: 0, scope: !15392, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 138, column: 2, scope: !15478, inlinedAt: !15486)
!15490 = !DILocation(line: 67, column: 15, scope: !15392, inlinedAt: !15489)
!15491 = !DILocation(line: 67, column: 33, scope: !15392, inlinedAt: !15489)
!15492 = !DILocation(line: 139, column: 15, scope: !15478, inlinedAt: !15486)
!15493 = !DILocation(line: 139, column: 25, scope: !15478, inlinedAt: !15486)
!15494 = !DILocation(line: 1894, column: 4, scope: !15487)
!15495 = !DILocation(line: 1895, column: 10, scope: !15487)
!15496 = !DILocation(line: 1896, column: 4, scope: !15487)
!15497 = !DILocation(line: 1898, column: 3, scope: !15487)
!15498 = !DILocation(line: 0, scope: !13587, inlinedAt: !15499)
!15499 = distinct !DILocation(line: 1887, column: 2, scope: !15473)
!15500 = !DILocation(line: 0, scope: !13595, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 215, column: 2, scope: !13587, inlinedAt: !15499)
!15502 = !DILocation(line: 95, column: 2, scope: !13595, inlinedAt: !15501)
!15503 = !DILocation(line: 1901, column: 2, scope: !15452)
!15504 = distinct !DISubprogram(name: "z_sched_wait", scope: !2488, file: !2488, line: 1904, type: !15505, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !15508)
!15505 = !DISubroutineType(types: !15506)
!15506 = !{!103, !13563, !13552, !2414, !14349, !15507}
!15507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15508 = !{!15509, !15510, !15511, !15512, !15513, !15514}
!15509 = !DILocalVariable(name: "lock", arg: 1, scope: !15504, file: !2488, line: 1904, type: !13563)
!15510 = !DILocalVariable(name: "key", arg: 2, scope: !15504, file: !2488, line: 1904, type: !13552)
!15511 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15504, file: !2488, line: 1905, type: !2414)
!15512 = !DILocalVariable(name: "timeout", arg: 4, scope: !15504, file: !2488, line: 1905, type: !14349)
!15513 = !DILocalVariable(name: "data", arg: 5, scope: !15504, file: !2488, line: 1905, type: !15507)
!15514 = !DILocalVariable(name: "ret", scope: !15504, file: !2488, line: 1907, type: !103)
!15515 = !DILocation(line: 0, scope: !15504)
!15516 = !DILocation(line: 1907, column: 12, scope: !15504)
!15517 = !DILocation(line: 1909, column: 11, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15504, file: !2488, line: 1909, column: 6)
!15519 = !DILocation(line: 1909, column: 6, scope: !15504)
!15520 = !DILocation(line: 1910, column: 11, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15518, file: !2488, line: 1909, column: 20)
!15522 = !DILocation(line: 1910, column: 26, scope: !15521)
!15523 = !DILocation(line: 1910, column: 9, scope: !15521)
!15524 = !DILocation(line: 1911, column: 2, scope: !15521)
!15525 = !DILocation(line: 1912, column: 2, scope: !15504)
!15526 = distinct !DISubprogram(name: "z_data_copy", scope: !15527, file: !15527, line: 22, type: !3124, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3107, retainedNodes: !335)
!15527 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15528 = !DILocation(line: 24, column: 2, scope: !15526)
!15529 = !DILocation(line: 27, column: 2, scope: !15526)
!15530 = !DILocation(line: 71, column: 1, scope: !15526)
!15531 = distinct !DISubprogram(name: "z_add_timeout", scope: !2525, file: !2525, line: 88, type: !15532, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15538)
!15532 = !DISubroutineType(types: !15533)
!15533 = !{null, !2498, !2517, !15534}
!15534 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1232, line: 67, baseType: !15535)
!15535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1232, line: 65, size: 64, elements: !15536)
!15536 = !{!15537}
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15535, file: !1232, line: 66, baseType: !1231, size: 64)
!15538 = !{!15539, !15540, !15541, !15542, !15548, !15549, !15552, !15555}
!15539 = !DILocalVariable(name: "to", arg: 1, scope: !15531, file: !2525, line: 88, type: !2498)
!15540 = !DILocalVariable(name: "fn", arg: 2, scope: !15531, file: !2525, line: 88, type: !2517)
!15541 = !DILocalVariable(name: "timeout", arg: 3, scope: !15531, file: !2525, line: 89, type: !15534)
!15542 = !DILocalVariable(name: "__i", scope: !15543, file: !2525, line: 102, type: !15544)
!15543 = distinct !DILexicalBlock(scope: !15531, file: !2525, line: 102, column: 2)
!15544 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !15545)
!15545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !15546)
!15546 = !{!15547}
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15545, file: !334, line: 33, baseType: !103, size: 32)
!15548 = !DILocalVariable(name: "__key", scope: !15543, file: !2525, line: 102, type: !15544)
!15549 = !DILocalVariable(name: "t", scope: !15550, file: !2525, line: 103, type: !2498)
!15550 = distinct !DILexicalBlock(scope: !15551, file: !2525, line: 102, column: 24)
!15551 = distinct !DILexicalBlock(scope: !15543, file: !2525, line: 102, column: 2)
!15552 = !DILocalVariable(name: "ticks", scope: !15553, file: !2525, line: 107, type: !1231)
!15553 = distinct !DILexicalBlock(scope: !15554, file: !2525, line: 106, column: 39)
!15554 = distinct !DILexicalBlock(scope: !15550, file: !2525, line: 105, column: 7)
!15555 = !DILocalVariable(name: "next_time", scope: !15556, file: !2525, line: 137, type: !675)
!15556 = distinct !DILexicalBlock(scope: !15557, file: !2525, line: 127, column: 22)
!15557 = distinct !DILexicalBlock(scope: !15550, file: !2525, line: 127, column: 7)
!15558 = !DILocation(line: 0, scope: !15531)
!15559 = !DILocation(line: 91, column: 6, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15531, file: !2525, line: 91, column: 6)
!15561 = !DILocation(line: 91, column: 6, scope: !15531)
!15562 = !DILocation(line: 100, column: 6, scope: !15531)
!15563 = !DILocation(line: 100, column: 9, scope: !15531)
!15564 = !DILocation(line: 0, scope: !15543)
!15565 = !DILocalVariable(name: "l", arg: 1, scope: !15566, file: !334, line: 136, type: !15569)
!15566 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !15567, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15570)
!15567 = !DISubroutineType(types: !15568)
!15568 = !{!15544, !15569}
!15569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!15570 = !{!15565, !15571}
!15571 = !DILocalVariable(name: "k", scope: !15566, file: !334, line: 139, type: !15544)
!15572 = !DILocation(line: 0, scope: !15566, inlinedAt: !15573)
!15573 = distinct !DILocation(line: 102, column: 2, scope: !15543)
!15574 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !15579)
!15575 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5051, file: !5051, line: 42, type: !5052, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15576)
!15576 = !{!15577, !15578}
!15577 = !DILocalVariable(name: "key", scope: !15575, file: !5051, line: 44, type: !32)
!15578 = !DILocalVariable(name: "tmp", scope: !15575, file: !5051, line: 53, type: !32)
!15579 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !15573)
!15580 = !{i64 1654382}
!15581 = !DILocation(line: 0, scope: !15575, inlinedAt: !15579)
!15582 = !DILocation(line: 106, column: 33, scope: !15554)
!15583 = !DILocation(line: 105, column: 7, scope: !15550)
!15584 = !DILocation(line: 107, column: 50, scope: !15553)
!15585 = !DILocation(line: 107, column: 48, scope: !15553)
!15586 = !DILocation(line: 0, scope: !15553)
!15587 = !DILocation(line: 109, column: 17, scope: !15553)
!15588 = !DILocation(line: 110, column: 3, scope: !15553)
!15589 = !DILocation(line: 111, column: 31, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15554, file: !2525, line: 110, column: 10)
!15591 = !DILocation(line: 111, column: 37, scope: !15590)
!15592 = !DILocation(line: 111, column: 35, scope: !15590)
!15593 = !DILocation(line: 0, scope: !15554)
!15594 = !DILocation(line: 109, column: 8, scope: !15553)
!15595 = !DILocation(line: 109, column: 15, scope: !15553)
!15596 = !DILocation(line: 114, column: 12, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15550, file: !2525, line: 114, column: 3)
!15598 = !DILocation(line: 0, scope: !15550)
!15599 = !DILocation(line: 114, column: 3, scope: !15597)
!15600 = !DILocation(line: 115, column: 24, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15602, file: !2525, line: 115, column: 8)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !2525, line: 114, column: 45)
!15603 = distinct !DILexicalBlock(scope: !15597, file: !2525, line: 114, column: 3)
!15604 = !DILocation(line: 115, column: 11, scope: !15601)
!15605 = !DILocation(line: 115, column: 18, scope: !15601)
!15606 = !DILocation(line: 115, column: 8, scope: !15602)
!15607 = !DILocation(line: 116, column: 15, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15601, file: !2525, line: 115, column: 32)
!15609 = !DILocation(line: 117, column: 26, scope: !15608)
!15610 = !DILocation(line: 117, column: 37, scope: !15608)
!15611 = !DILocation(line: 117, column: 5, scope: !15608)
!15612 = !DILocation(line: 123, column: 7, scope: !15550)
!15613 = !DILocation(line: 120, column: 15, scope: !15602)
!15614 = !DILocation(line: 114, column: 36, scope: !15603)
!15615 = distinct !{!15615, !15599, !15616}
!15616 = !DILocation(line: 121, column: 3, scope: !15597)
!15617 = !DILocation(line: 124, column: 41, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15619, file: !2525, line: 123, column: 18)
!15619 = distinct !DILexicalBlock(scope: !15550, file: !2525, line: 123, column: 7)
!15620 = !DILocation(line: 124, column: 4, scope: !15618)
!15621 = !DILocation(line: 125, column: 3, scope: !15618)
!15622 = !DILocation(line: 127, column: 13, scope: !15557)
!15623 = !DILocation(line: 127, column: 10, scope: !15557)
!15624 = !DILocation(line: 127, column: 7, scope: !15550)
!15625 = !DILocation(line: 137, column: 24, scope: !15556)
!15626 = !DILocation(line: 0, scope: !15556)
!15627 = !DILocation(line: 139, column: 18, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15556, file: !2525, line: 139, column: 8)
!15629 = !DILocation(line: 139, column: 23, scope: !15628)
!15630 = !DILocation(line: 141, column: 5, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15628, file: !2525, line: 140, column: 48)
!15632 = !DILocation(line: 142, column: 4, scope: !15631)
!15633 = !DILocalVariable(name: "key", arg: 2, scope: !15634, file: !334, line: 190, type: !15544)
!15634 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !15635, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15637)
!15635 = !DISubroutineType(types: !15636)
!15636 = !{null, !15569, !15544}
!15637 = !{!15638, !15633}
!15638 = !DILocalVariable(name: "l", arg: 1, scope: !15634, file: !334, line: 189, type: !15569)
!15639 = !DILocation(line: 0, scope: !15634, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 102, column: 2, scope: !15551)
!15641 = !DILocalVariable(name: "key", arg: 1, scope: !15642, file: !5051, line: 84, type: !32)
!15642 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5051, file: !5051, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15643)
!15643 = !{!15641}
!15644 = !DILocation(line: 0, scope: !15642, inlinedAt: !15645)
!15645 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !15640)
!15646 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !15645)
!15647 = !{i64 1655199}
!15648 = !DILocation(line: 148, column: 1, scope: !15531)
!15649 = distinct !DISubprogram(name: "elapsed", scope: !2525, file: !2525, line: 62, type: !15650, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !335)
!15650 = !DISubroutineType(types: !15651)
!15651 = !{!675}
!15652 = !DILocation(line: 64, column: 9, scope: !15649)
!15653 = !DILocation(line: 64, column: 28, scope: !15649)
!15654 = !DILocation(line: 64, column: 35, scope: !15649)
!15655 = !DILocation(line: 64, column: 2, scope: !15649)
!15656 = distinct !DISubprogram(name: "first", scope: !2525, file: !2525, line: 39, type: !15657, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15659)
!15657 = !DISubroutineType(types: !15658)
!15658 = !{!2498}
!15659 = !{!15660}
!15660 = !DILocalVariable(name: "t", scope: !15656, file: !2525, line: 41, type: !15661)
!15661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!15662 = !DILocation(line: 41, column: 19, scope: !15656)
!15663 = !DILocation(line: 0, scope: !15656)
!15664 = !DILocation(line: 43, column: 9, scope: !15656)
!15665 = !DILocation(line: 43, column: 2, scope: !15656)
!15666 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !234, file: !234, line: 443, type: !15667, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15669)
!15667 = !DISubroutineType(types: !15668)
!15668 = !{null, !15661, !15661}
!15669 = !{!15670, !15671, !15672}
!15670 = !DILocalVariable(name: "successor", arg: 1, scope: !15666, file: !234, line: 443, type: !15661)
!15671 = !DILocalVariable(name: "node", arg: 2, scope: !15666, file: !234, line: 443, type: !15661)
!15672 = !DILocalVariable(name: "prev", scope: !15666, file: !234, line: 445, type: !15673)
!15673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15661)
!15674 = !DILocation(line: 0, scope: !15666)
!15675 = !DILocation(line: 445, column: 39, scope: !15666)
!15676 = !DILocation(line: 447, column: 8, scope: !15666)
!15677 = !DILocation(line: 447, column: 13, scope: !15666)
!15678 = !DILocation(line: 448, column: 8, scope: !15666)
!15679 = !DILocation(line: 448, column: 13, scope: !15666)
!15680 = !DILocation(line: 449, column: 8, scope: !15666)
!15681 = !DILocation(line: 449, column: 13, scope: !15666)
!15682 = !DILocation(line: 450, column: 18, scope: !15666)
!15683 = !DILocation(line: 451, column: 1, scope: !15666)
!15684 = distinct !DISubprogram(name: "next", scope: !2525, file: !2525, line: 46, type: !15685, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15687)
!15685 = !DISubroutineType(types: !15686)
!15686 = !{!2498, !2498}
!15687 = !{!15688, !15689}
!15688 = !DILocalVariable(name: "t", arg: 1, scope: !15684, file: !2525, line: 46, type: !2498)
!15689 = !DILocalVariable(name: "n", scope: !15684, file: !2525, line: 48, type: !15661)
!15690 = !DILocation(line: 0, scope: !15684)
!15691 = !DILocation(line: 48, column: 58, scope: !15684)
!15692 = !DILocation(line: 48, column: 19, scope: !15684)
!15693 = !DILocation(line: 50, column: 9, scope: !15684)
!15694 = !DILocation(line: 50, column: 2, scope: !15684)
!15695 = distinct !DISubprogram(name: "sys_dlist_append", scope: !234, file: !234, line: 404, type: !15696, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15699)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{null, !15698, !15661}
!15698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!15699 = !{!15700, !15701, !15702}
!15700 = !DILocalVariable(name: "list", arg: 1, scope: !15695, file: !234, line: 404, type: !15698)
!15701 = !DILocalVariable(name: "node", arg: 2, scope: !15695, file: !234, line: 404, type: !15661)
!15702 = !DILocalVariable(name: "tail", scope: !15695, file: !234, line: 406, type: !15673)
!15703 = !DILocation(line: 0, scope: !15695)
!15704 = !DILocation(line: 406, column: 34, scope: !15695)
!15705 = !DILocation(line: 408, column: 8, scope: !15695)
!15706 = !DILocation(line: 408, column: 13, scope: !15695)
!15707 = !DILocation(line: 409, column: 8, scope: !15695)
!15708 = !DILocation(line: 409, column: 13, scope: !15695)
!15709 = !DILocation(line: 411, column: 8, scope: !15695)
!15710 = !DILocation(line: 411, column: 13, scope: !15695)
!15711 = !DILocation(line: 412, column: 13, scope: !15695)
!15712 = !DILocation(line: 413, column: 1, scope: !15695)
!15713 = distinct !DISubprogram(name: "next_timeout", scope: !2525, file: !2525, line: 67, type: !15650, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15714)
!15714 = !{!15715, !15716, !15717}
!15715 = !DILocalVariable(name: "to", scope: !15713, file: !2525, line: 69, type: !2498)
!15716 = !DILocalVariable(name: "ticks_elapsed", scope: !15713, file: !2525, line: 70, type: !675)
!15717 = !DILocalVariable(name: "ret", scope: !15713, file: !2525, line: 71, type: !675)
!15718 = !DILocation(line: 69, column: 24, scope: !15713)
!15719 = !DILocation(line: 0, scope: !15713)
!15720 = !DILocation(line: 70, column: 26, scope: !15713)
!15721 = !DILocation(line: 73, column: 10, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15713, file: !2525, line: 73, column: 6)
!15723 = !DILocation(line: 73, column: 19, scope: !15722)
!15724 = !DILocation(line: 74, column: 21, scope: !15722)
!15725 = !DILocation(line: 74, column: 30, scope: !15722)
!15726 = !DILocation(line: 74, column: 28, scope: !15722)
!15727 = !DILocation(line: 74, column: 45, scope: !15722)
!15728 = !DILocation(line: 73, column: 6, scope: !15713)
!15729 = !DILocation(line: 77, column: 9, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15722, file: !2525, line: 76, column: 9)
!15731 = !DILocation(line: 0, scope: !15722)
!15732 = !DILocation(line: 81, column: 20, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15713, file: !2525, line: 81, column: 6)
!15734 = !DILocation(line: 81, column: 6, scope: !15733)
!15735 = !DILocation(line: 81, column: 32, scope: !15733)
!15736 = !DILocation(line: 85, column: 2, scope: !15713)
!15737 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !234, file: !234, line: 341, type: !15738, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15740)
!15738 = !DISubroutineType(types: !15739)
!15739 = !{!15661, !15698, !15661}
!15740 = !{!15741, !15742}
!15741 = !DILocalVariable(name: "list", arg: 1, scope: !15737, file: !234, line: 341, type: !15698)
!15742 = !DILocalVariable(name: "node", arg: 2, scope: !15737, file: !234, line: 342, type: !15661)
!15743 = !DILocation(line: 0, scope: !15737)
!15744 = !DILocation(line: 344, column: 15, scope: !15737)
!15745 = !DILocation(line: 344, column: 9, scope: !15737)
!15746 = !DILocation(line: 344, column: 26, scope: !15737)
!15747 = !DILocation(line: 344, column: 2, scope: !15737)
!15748 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !234, file: !234, line: 325, type: !15738, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15749)
!15749 = !{!15750, !15751}
!15750 = !DILocalVariable(name: "list", arg: 1, scope: !15748, file: !234, line: 325, type: !15698)
!15751 = !DILocalVariable(name: "node", arg: 2, scope: !15748, file: !234, line: 326, type: !15661)
!15752 = !DILocation(line: 0, scope: !15748)
!15753 = !DILocation(line: 328, column: 24, scope: !15748)
!15754 = !DILocation(line: 328, column: 15, scope: !15748)
!15755 = !DILocation(line: 328, column: 9, scope: !15748)
!15756 = !DILocation(line: 328, column: 45, scope: !15748)
!15757 = !DILocation(line: 328, column: 2, scope: !15748)
!15758 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !234, file: !234, line: 294, type: !15759, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15761)
!15759 = !DISubroutineType(types: !15760)
!15760 = !{!15661, !15698}
!15761 = !{!15762}
!15762 = !DILocalVariable(name: "list", arg: 1, scope: !15758, file: !234, line: 294, type: !15698)
!15763 = !DILocation(line: 0, scope: !15758)
!15764 = !DILocation(line: 296, column: 9, scope: !15758)
!15765 = !DILocation(line: 296, column: 2, scope: !15758)
!15766 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !234, file: !234, line: 266, type: !15767, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15769)
!15767 = !DISubroutineType(types: !15768)
!15768 = !{!170, !15698}
!15769 = !{!15770}
!15770 = !DILocalVariable(name: "list", arg: 1, scope: !15766, file: !234, line: 266, type: !15698)
!15771 = !DILocation(line: 0, scope: !15766)
!15772 = !DILocation(line: 268, column: 15, scope: !15766)
!15773 = !DILocation(line: 268, column: 20, scope: !15766)
!15774 = !DILocation(line: 268, column: 2, scope: !15766)
!15775 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2525, file: !2525, line: 150, type: !15776, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15778)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{!103, !2498}
!15778 = !{!15779, !15780, !15781, !15783}
!15779 = !DILocalVariable(name: "to", arg: 1, scope: !15775, file: !2525, line: 150, type: !2498)
!15780 = !DILocalVariable(name: "ret", scope: !15775, file: !2525, line: 152, type: !103)
!15781 = !DILocalVariable(name: "__i", scope: !15782, file: !2525, line: 154, type: !15544)
!15782 = distinct !DILexicalBlock(scope: !15775, file: !2525, line: 154, column: 2)
!15783 = !DILocalVariable(name: "__key", scope: !15782, file: !2525, line: 154, type: !15544)
!15784 = !DILocation(line: 0, scope: !15775)
!15785 = !DILocation(line: 0, scope: !15782)
!15786 = !DILocation(line: 0, scope: !15566, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 154, column: 2, scope: !15782)
!15788 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !15787)
!15790 = !DILocation(line: 0, scope: !15575, inlinedAt: !15789)
!15791 = !DILocation(line: 155, column: 7, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !2525, line: 155, column: 7)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !2525, line: 154, column: 24)
!15794 = distinct !DILexicalBlock(scope: !15782, file: !2525, line: 154, column: 2)
!15795 = !DILocation(line: 155, column: 7, scope: !15793)
!15796 = !DILocation(line: 156, column: 4, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15792, file: !2525, line: 155, column: 39)
!15798 = !DILocation(line: 158, column: 3, scope: !15797)
!15799 = !DILocation(line: 0, scope: !15634, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 154, column: 2, scope: !15794)
!15801 = !DILocation(line: 0, scope: !15642, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !15800)
!15803 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !15802)
!15804 = !DILocation(line: 161, column: 2, scope: !15775)
!15805 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !234, file: !234, line: 225, type: !15806, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15810)
!15806 = !DISubroutineType(types: !15807)
!15807 = !{!170, !15808}
!15808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15809, size: 32)
!15809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2502)
!15810 = !{!15811}
!15811 = !DILocalVariable(name: "node", arg: 1, scope: !15805, file: !234, line: 225, type: !15808)
!15812 = !DILocation(line: 0, scope: !15805)
!15813 = !DILocation(line: 227, column: 15, scope: !15805)
!15814 = !DILocation(line: 227, column: 20, scope: !15805)
!15815 = !DILocation(line: 227, column: 2, scope: !15805)
!15816 = distinct !DISubprogram(name: "remove_timeout", scope: !2525, file: !2525, line: 53, type: !2519, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15817)
!15817 = !{!15818}
!15818 = !DILocalVariable(name: "t", arg: 1, scope: !15816, file: !2525, line: 53, type: !2498)
!15819 = !DILocation(line: 0, scope: !15816)
!15820 = !DILocation(line: 55, column: 6, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15816, file: !2525, line: 55, column: 6)
!15822 = !DILocation(line: 55, column: 14, scope: !15821)
!15823 = !DILocation(line: 55, column: 6, scope: !15816)
!15824 = !DILocation(line: 56, column: 25, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15821, file: !2525, line: 55, column: 23)
!15826 = !DILocation(line: 56, column: 12, scope: !15825)
!15827 = !DILocation(line: 56, column: 19, scope: !15825)
!15828 = !DILocation(line: 57, column: 2, scope: !15825)
!15829 = !DILocation(line: 59, column: 23, scope: !15816)
!15830 = !DILocation(line: 59, column: 2, scope: !15816)
!15831 = !DILocation(line: 60, column: 1, scope: !15816)
!15832 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !234, file: !234, line: 496, type: !15833, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15835)
!15833 = !DISubroutineType(types: !15834)
!15834 = !{null, !15661}
!15835 = !{!15836, !15837, !15838}
!15836 = !DILocalVariable(name: "node", arg: 1, scope: !15832, file: !234, line: 496, type: !15661)
!15837 = !DILocalVariable(name: "prev", scope: !15832, file: !234, line: 498, type: !15673)
!15838 = !DILocalVariable(name: "next", scope: !15832, file: !234, line: 499, type: !15673)
!15839 = !DILocation(line: 0, scope: !15832)
!15840 = !DILocation(line: 498, column: 34, scope: !15832)
!15841 = !DILocation(line: 499, column: 34, scope: !15832)
!15842 = !DILocation(line: 501, column: 8, scope: !15832)
!15843 = !DILocation(line: 501, column: 13, scope: !15832)
!15844 = !DILocation(line: 502, column: 8, scope: !15832)
!15845 = !DILocation(line: 502, column: 13, scope: !15832)
!15846 = !DILocation(line: 503, column: 2, scope: !15832)
!15847 = !DILocation(line: 504, column: 1, scope: !15832)
!15848 = distinct !DISubprogram(name: "sys_dnode_init", scope: !234, file: !234, line: 211, type: !15833, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15849)
!15849 = !{!15850}
!15850 = !DILocalVariable(name: "node", arg: 1, scope: !15848, file: !234, line: 211, type: !15661)
!15851 = !DILocation(line: 0, scope: !15848)
!15852 = !DILocation(line: 213, column: 8, scope: !15848)
!15853 = !DILocation(line: 213, column: 13, scope: !15848)
!15854 = !DILocation(line: 214, column: 8, scope: !15848)
!15855 = !DILocation(line: 214, column: 13, scope: !15848)
!15856 = !DILocation(line: 215, column: 1, scope: !15848)
!15857 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2525, file: !2525, line: 183, type: !15858, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15862)
!15858 = !DISubroutineType(types: !15859)
!15859 = !{!1231, !15860}
!15860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15861, size: 32)
!15861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2499)
!15862 = !{!15863, !15864, !15865, !15867}
!15863 = !DILocalVariable(name: "timeout", arg: 1, scope: !15857, file: !2525, line: 183, type: !15860)
!15864 = !DILocalVariable(name: "ticks", scope: !15857, file: !2525, line: 185, type: !1231)
!15865 = !DILocalVariable(name: "__i", scope: !15866, file: !2525, line: 187, type: !15544)
!15866 = distinct !DILexicalBlock(scope: !15857, file: !2525, line: 187, column: 2)
!15867 = !DILocalVariable(name: "__key", scope: !15866, file: !2525, line: 187, type: !15544)
!15868 = !DILocation(line: 0, scope: !15857)
!15869 = !DILocation(line: 0, scope: !15866)
!15870 = !DILocation(line: 0, scope: !15566, inlinedAt: !15871)
!15871 = distinct !DILocation(line: 187, column: 2, scope: !15866)
!15872 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !15871)
!15874 = !DILocation(line: 0, scope: !15575, inlinedAt: !15873)
!15875 = !DILocation(line: 188, column: 11, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15877, file: !2525, line: 187, column: 24)
!15877 = distinct !DILexicalBlock(scope: !15866, file: !2525, line: 187, column: 2)
!15878 = !DILocation(line: 0, scope: !15634, inlinedAt: !15879)
!15879 = distinct !DILocation(line: 187, column: 2, scope: !15877)
!15880 = !DILocation(line: 0, scope: !15642, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !15879)
!15882 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !15881)
!15883 = !DILocation(line: 191, column: 2, scope: !15857)
!15884 = distinct !DISubprogram(name: "timeout_rem", scope: !2525, file: !2525, line: 165, type: !15858, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15885)
!15885 = !{!15886, !15887, !15888}
!15886 = !DILocalVariable(name: "timeout", arg: 1, scope: !15884, file: !2525, line: 165, type: !15860)
!15887 = !DILocalVariable(name: "ticks", scope: !15884, file: !2525, line: 167, type: !1231)
!15888 = !DILocalVariable(name: "t", scope: !15889, file: !2525, line: 173, type: !2498)
!15889 = distinct !DILexicalBlock(scope: !15884, file: !2525, line: 173, column: 2)
!15890 = !DILocation(line: 0, scope: !15884)
!15891 = !DILocation(line: 169, column: 6, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15884, file: !2525, line: 169, column: 6)
!15893 = !DILocation(line: 169, column: 6, scope: !15884)
!15894 = !DILocation(line: 173, column: 28, scope: !15889)
!15895 = !DILocation(line: 0, scope: !15889)
!15896 = !DILocation(line: 173, column: 39, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15889, file: !2525, line: 173, column: 2)
!15898 = !DILocation(line: 173, column: 2, scope: !15889)
!15899 = !DILocation(line: 174, column: 15, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15897, file: !2525, line: 173, column: 61)
!15901 = !DILocation(line: 174, column: 9, scope: !15900)
!15902 = !DILocation(line: 175, column: 15, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15900, file: !2525, line: 175, column: 7)
!15904 = !DILocation(line: 175, column: 7, scope: !15900)
!15905 = !DILocation(line: 173, column: 52, scope: !15897)
!15906 = distinct !{!15906, !15898, !15907}
!15907 = !DILocation(line: 178, column: 2, scope: !15889)
!15908 = !DILocation(line: 180, column: 17, scope: !15884)
!15909 = !DILocation(line: 180, column: 15, scope: !15884)
!15910 = !DILocation(line: 180, column: 2, scope: !15884)
!15911 = !DILocation(line: 181, column: 1, scope: !15884)
!15912 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12919, file: !12919, line: 35, type: !15913, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15915)
!15913 = !DISubroutineType(types: !15914)
!15914 = !{!170, !15860}
!15915 = !{!15916}
!15916 = !DILocalVariable(name: "to", arg: 1, scope: !15912, file: !12919, line: 35, type: !15860)
!15917 = !DILocation(line: 0, scope: !15912)
!15918 = !DILocation(line: 37, column: 35, scope: !15912)
!15919 = !DILocation(line: 37, column: 10, scope: !15912)
!15920 = !DILocation(line: 37, column: 9, scope: !15912)
!15921 = !DILocation(line: 37, column: 2, scope: !15912)
!15922 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2525, file: !2525, line: 194, type: !15858, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15923)
!15923 = !{!15924, !15925, !15926, !15928}
!15924 = !DILocalVariable(name: "timeout", arg: 1, scope: !15922, file: !2525, line: 194, type: !15860)
!15925 = !DILocalVariable(name: "ticks", scope: !15922, file: !2525, line: 196, type: !1231)
!15926 = !DILocalVariable(name: "__i", scope: !15927, file: !2525, line: 198, type: !15544)
!15927 = distinct !DILexicalBlock(scope: !15922, file: !2525, line: 198, column: 2)
!15928 = !DILocalVariable(name: "__key", scope: !15927, file: !2525, line: 198, type: !15544)
!15929 = !DILocation(line: 0, scope: !15922)
!15930 = !DILocation(line: 0, scope: !15927)
!15931 = !DILocation(line: 0, scope: !15566, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 198, column: 2, scope: !15927)
!15933 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !15932)
!15935 = !DILocation(line: 0, scope: !15575, inlinedAt: !15934)
!15936 = !DILocation(line: 199, column: 11, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15938, file: !2525, line: 198, column: 24)
!15938 = distinct !DILexicalBlock(scope: !15927, file: !2525, line: 198, column: 2)
!15939 = !DILocation(line: 199, column: 23, scope: !15937)
!15940 = !DILocation(line: 0, scope: !15634, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 198, column: 2, scope: !15938)
!15942 = !DILocation(line: 0, scope: !15642, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !15941)
!15944 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !15943)
!15945 = !DILocation(line: 199, column: 21, scope: !15937)
!15946 = !DILocation(line: 202, column: 2, scope: !15922)
!15947 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2525, file: !2525, line: 205, type: !15650, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15948)
!15948 = !{!15949, !15950, !15952}
!15949 = !DILocalVariable(name: "ret", scope: !15947, file: !2525, line: 207, type: !675)
!15950 = !DILocalVariable(name: "__i", scope: !15951, file: !2525, line: 209, type: !15544)
!15951 = distinct !DILexicalBlock(scope: !15947, file: !2525, line: 209, column: 2)
!15952 = !DILocalVariable(name: "__key", scope: !15951, file: !2525, line: 209, type: !15544)
!15953 = !DILocation(line: 0, scope: !15947)
!15954 = !DILocation(line: 0, scope: !15951)
!15955 = !DILocation(line: 0, scope: !15566, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 209, column: 2, scope: !15951)
!15957 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !15958)
!15958 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !15956)
!15959 = !DILocation(line: 0, scope: !15575, inlinedAt: !15958)
!15960 = !DILocation(line: 210, column: 9, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !2525, line: 209, column: 24)
!15962 = distinct !DILexicalBlock(scope: !15951, file: !2525, line: 209, column: 2)
!15963 = !DILocation(line: 0, scope: !15634, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 209, column: 2, scope: !15962)
!15965 = !DILocation(line: 0, scope: !15642, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !15964)
!15967 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !15966)
!15968 = !DILocation(line: 212, column: 2, scope: !15947)
!15969 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2525, file: !2525, line: 215, type: !9378, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !15970)
!15970 = !{!15971, !15972, !15973, !15975, !15976, !15979, !15980}
!15971 = !DILocalVariable(name: "ticks", arg: 1, scope: !15969, file: !2525, line: 215, type: !675)
!15972 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15969, file: !2525, line: 215, type: !170)
!15973 = !DILocalVariable(name: "__i", scope: !15974, file: !2525, line: 217, type: !15544)
!15974 = distinct !DILexicalBlock(scope: !15969, file: !2525, line: 217, column: 2)
!15975 = !DILocalVariable(name: "__key", scope: !15974, file: !2525, line: 217, type: !15544)
!15976 = !DILocalVariable(name: "next_to", scope: !15977, file: !2525, line: 218, type: !103)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !2525, line: 217, column: 24)
!15978 = distinct !DILexicalBlock(scope: !15974, file: !2525, line: 217, column: 2)
!15979 = !DILocalVariable(name: "sooner", scope: !15977, file: !2525, line: 219, type: !170)
!15980 = !DILocalVariable(name: "imminent", scope: !15977, file: !2525, line: 221, type: !170)
!15981 = !DILocation(line: 0, scope: !15969)
!15982 = !DILocation(line: 0, scope: !15974)
!15983 = !DILocation(line: 0, scope: !15566, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 217, column: 2, scope: !15974)
!15985 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !15984)
!15987 = !DILocation(line: 0, scope: !15575, inlinedAt: !15986)
!15988 = !DILocation(line: 218, column: 17, scope: !15977)
!15989 = !DILocation(line: 0, scope: !15977)
!15990 = !DILocation(line: 221, column: 27, scope: !15977)
!15991 = !DILocation(line: 233, column: 17, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15977, file: !2525, line: 233, column: 7)
!15993 = !DILocation(line: 234, column: 26, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15992, file: !2525, line: 233, column: 56)
!15995 = !DILocation(line: 234, column: 4, scope: !15994)
!15996 = !DILocation(line: 235, column: 3, scope: !15994)
!15997 = !DILocation(line: 0, scope: !15634, inlinedAt: !15998)
!15998 = distinct !DILocation(line: 217, column: 2, scope: !15978)
!15999 = !DILocation(line: 0, scope: !15642, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !15998)
!16001 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !16000)
!16002 = !DILocation(line: 237, column: 1, scope: !15969)
!16003 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2525, file: !2525, line: 239, type: !16004, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16006)
!16004 = !DISubroutineType(types: !16005)
!16005 = !{null, !675}
!16006 = !{!16007, !16008, !16009, !16011}
!16007 = !DILocalVariable(name: "ticks", arg: 1, scope: !16003, file: !2525, line: 239, type: !675)
!16008 = !DILocalVariable(name: "key", scope: !16003, file: !2525, line: 245, type: !15544)
!16009 = !DILocalVariable(name: "t", scope: !16010, file: !2525, line: 262, type: !2498)
!16010 = distinct !DILexicalBlock(scope: !16003, file: !2525, line: 261, column: 67)
!16011 = !DILocalVariable(name: "dt", scope: !16010, file: !2525, line: 263, type: !103)
!16012 = !DILocation(line: 0, scope: !16003)
!16013 = !DILocation(line: 242, column: 2, scope: !16003)
!16014 = !DILocation(line: 0, scope: !15566, inlinedAt: !16015)
!16015 = distinct !DILocation(line: 245, column: 25, scope: !16003)
!16016 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !16015)
!16018 = !DILocation(line: 0, scope: !15575, inlinedAt: !16017)
!16019 = !DILocation(line: 261, column: 9, scope: !16003)
!16020 = !DILocation(line: 261, column: 17, scope: !16003)
!16021 = !DILocation(line: 261, column: 25, scope: !16003)
!16022 = !DILocation(line: 261, column: 37, scope: !16003)
!16023 = !DILocation(line: 261, column: 47, scope: !16003)
!16024 = !DILocation(line: 261, column: 44, scope: !16003)
!16025 = !DILocation(line: 261, column: 2, scope: !16003)
!16026 = !DILocation(line: 0, scope: !16010)
!16027 = !DILocation(line: 263, column: 12, scope: !16010)
!16028 = !DILocation(line: 265, column: 16, scope: !16010)
!16029 = !DILocation(line: 265, column: 13, scope: !16010)
!16030 = !DILocation(line: 266, column: 13, scope: !16010)
!16031 = !DILocation(line: 267, column: 3, scope: !16010)
!16032 = !DILocation(line: 0, scope: !15634, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 269, column: 3, scope: !16010)
!16034 = !DILocation(line: 0, scope: !15642, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !16033)
!16036 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !16035)
!16037 = !DILocation(line: 270, column: 6, scope: !16010)
!16038 = !DILocation(line: 270, column: 3, scope: !16010)
!16039 = !DILocation(line: 0, scope: !15566, inlinedAt: !16040)
!16040 = distinct !DILocation(line: 271, column: 9, scope: !16010)
!16041 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !16042)
!16042 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !16040)
!16043 = !DILocation(line: 0, scope: !15575, inlinedAt: !16042)
!16044 = !DILocation(line: 272, column: 22, scope: !16010)
!16045 = distinct !{!16045, !16025, !16046}
!16046 = !DILocation(line: 273, column: 2, scope: !16003)
!16047 = !DILocation(line: 276, column: 19, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16049, file: !2525, line: 275, column: 23)
!16049 = distinct !DILexicalBlock(scope: !16003, file: !2525, line: 275, column: 6)
!16050 = !DILocation(line: 277, column: 2, scope: !16048)
!16051 = !DILocation(line: 279, column: 15, scope: !16003)
!16052 = !DILocation(line: 279, column: 12, scope: !16003)
!16053 = !DILocation(line: 280, column: 21, scope: !16003)
!16054 = !DILocation(line: 282, column: 24, scope: !16003)
!16055 = !DILocation(line: 282, column: 2, scope: !16003)
!16056 = !DILocation(line: 0, scope: !15634, inlinedAt: !16057)
!16057 = distinct !DILocation(line: 284, column: 2, scope: !16003)
!16058 = !DILocation(line: 0, scope: !15642, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !16057)
!16060 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !16059)
!16061 = !DILocation(line: 285, column: 1, scope: !16003)
!16062 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2525, file: !2525, line: 287, type: !5106, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16063)
!16063 = !{!16064, !16065, !16067}
!16064 = !DILocalVariable(name: "t", scope: !16062, file: !2525, line: 289, type: !2254)
!16065 = !DILocalVariable(name: "__i", scope: !16066, file: !2525, line: 291, type: !15544)
!16066 = distinct !DILexicalBlock(scope: !16062, file: !2525, line: 291, column: 2)
!16067 = !DILocalVariable(name: "__key", scope: !16066, file: !2525, line: 291, type: !15544)
!16068 = !DILocation(line: 0, scope: !16062)
!16069 = !DILocation(line: 0, scope: !16066)
!16070 = !DILocation(line: 0, scope: !15566, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 291, column: 2, scope: !16066)
!16072 = !DILocation(line: 55, column: 2, scope: !15575, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 145, column: 10, scope: !15566, inlinedAt: !16071)
!16074 = !DILocation(line: 0, scope: !15575, inlinedAt: !16073)
!16075 = !DILocation(line: 292, column: 7, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16077, file: !2525, line: 291, column: 24)
!16077 = distinct !DILexicalBlock(scope: !16066, file: !2525, line: 291, column: 2)
!16078 = !DILocation(line: 292, column: 19, scope: !16076)
!16079 = !DILocation(line: 0, scope: !15634, inlinedAt: !16080)
!16080 = distinct !DILocation(line: 291, column: 2, scope: !16077)
!16081 = !DILocation(line: 0, scope: !15642, inlinedAt: !16082)
!16082 = distinct !DILocation(line: 215, column: 2, scope: !15634, inlinedAt: !16080)
!16083 = !DILocation(line: 95, column: 2, scope: !15642, inlinedAt: !16082)
!16084 = !DILocation(line: 292, column: 17, scope: !16076)
!16085 = !DILocation(line: 294, column: 2, scope: !16062)
!16086 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2525, file: !2525, line: 297, type: !5097, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !335)
!16087 = !DILocation(line: 300, column: 19, scope: !16086)
!16088 = !DILocation(line: 300, column: 9, scope: !16086)
!16089 = !DILocation(line: 300, column: 2, scope: !16086)
!16090 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2525, file: !2525, line: 306, type: !5106, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !335)
!16091 = !DILocation(line: 308, column: 9, scope: !16090)
!16092 = !DILocation(line: 308, column: 2, scope: !16090)
!16093 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2525, file: !2525, line: 319, type: !5075, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16094)
!16094 = !{!16095, !16096, !16097, !16098}
!16095 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16093, file: !2525, line: 319, type: !121)
!16096 = !DILocalVariable(name: "start_cycles", scope: !16093, file: !2525, line: 328, type: !121)
!16097 = !DILocalVariable(name: "cycles_to_wait", scope: !16093, file: !2525, line: 331, type: !121)
!16098 = !DILocalVariable(name: "current_cycles", scope: !16099, file: !2525, line: 338, type: !121)
!16099 = distinct !DILexicalBlock(scope: !16100, file: !2525, line: 337, column: 11)
!16100 = distinct !DILexicalBlock(scope: !16101, file: !2525, line: 337, column: 2)
!16101 = distinct !DILexicalBlock(scope: !16093, file: !2525, line: 337, column: 2)
!16102 = !DILocation(line: 0, scope: !16093)
!16103 = !DILocation(line: 322, column: 19, scope: !16104)
!16104 = distinct !DILexicalBlock(scope: !16093, file: !2525, line: 322, column: 6)
!16105 = !DILocation(line: 322, column: 6, scope: !16093)
!16106 = !DILocation(line: 328, column: 26, scope: !16093)
!16107 = !DILocation(line: 333, column: 43, scope: !16093)
!16108 = !DILocation(line: 337, column: 2, scope: !16093)
!16109 = !DILocation(line: 338, column: 29, scope: !16099)
!16110 = !DILocation(line: 0, scope: !16099)
!16111 = !DILocation(line: 341, column: 23, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16099, file: !2525, line: 341, column: 7)
!16113 = !DILocation(line: 341, column: 39, scope: !16112)
!16114 = !DILocation(line: 349, column: 1, scope: !16093)
!16115 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !320, file: !320, line: 1675, type: !5097, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !335)
!16116 = !DILocation(line: 1677, column: 9, scope: !16115)
!16117 = !DILocation(line: 1677, column: 2, scope: !16115)
!16118 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16119, file: !16119, line: 24, type: !5097, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !335)
!16119 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16120 = !DILocation(line: 26, column: 9, scope: !16118)
!16121 = !DILocation(line: 26, column: 2, scope: !16118)
!16122 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2525, file: !2525, line: 364, type: !16123, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !16125)
!16123 = !DISubroutineType(types: !16124)
!16124 = !{!2254, !15534}
!16125 = !{!16126, !16127}
!16126 = !DILocalVariable(name: "timeout", arg: 1, scope: !16122, file: !2525, line: 364, type: !15534)
!16127 = !DILocalVariable(name: "dt", scope: !16122, file: !2525, line: 366, type: !1231)
!16128 = !DILocation(line: 0, scope: !16122)
!16129 = !DILocation(line: 368, column: 6, scope: !16122)
!16130 = !DILocation(line: 371, column: 10, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16132, file: !2525, line: 370, column: 47)
!16132 = distinct !DILexicalBlock(scope: !16133, file: !2525, line: 370, column: 13)
!16133 = distinct !DILexicalBlock(scope: !16122, file: !2525, line: 368, column: 6)
!16134 = !DILocation(line: 371, column: 3, scope: !16131)
!16135 = !DILocation(line: 376, column: 58, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16137, file: !2525, line: 376, column: 7)
!16137 = distinct !DILexicalBlock(scope: !16132, file: !2525, line: 372, column: 9)
!16138 = !DILocation(line: 376, column: 7, scope: !16137)
!16139 = !DILocation(line: 376, column: 43, scope: !16136)
!16140 = !DILocation(line: 377, column: 4, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16136, file: !2525, line: 376, column: 64)
!16142 = !DILocation(line: 379, column: 10, scope: !16137)
!16143 = !DILocation(line: 379, column: 33, scope: !16137)
!16144 = !DILocation(line: 379, column: 31, scope: !16137)
!16145 = !DILocation(line: 379, column: 3, scope: !16137)
!16146 = !DILocation(line: 0, scope: !16133)
!16147 = !DILocation(line: 381, column: 1, scope: !16122)
!16148 = distinct !DISubprogram(name: "boot_banner", scope: !16149, file: !16149, line: 26, type: !3124, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3110, retainedNodes: !335)
!16149 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16150 = !DILocation(line: 34, column: 2, scope: !16148)
!16151 = !DILocation(line: 36, column: 1, scope: !16148)
