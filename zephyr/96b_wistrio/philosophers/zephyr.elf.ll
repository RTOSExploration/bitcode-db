; ModuleID = 'build/96b_wistrio/philosophers/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, %struct.__thread_entry, %struct.k_thread*, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__thread_entry = type { void (i8*, i8*, i8*)*, i8*, i8*, i8* }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q, %struct.k_thread* }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._priq_rb }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236929 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236919 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236909 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236899 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236889 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236879 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238264 to i8*), void (i8*)* inttoptr (i32 134236869 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@forks = internal unnamed_addr constant [6 x %struct.k_mutex*] [%struct.k_mutex* getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 20) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 40) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 60) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 80) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 100) to %struct.k_mutex*)], align 4, !dbg !25
@.str = private unnamed_addr constant [23 x i8] c"       STARVING       \00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"   HOLDING ONE FORK   \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"  EATING  [ %s%d ms ] \00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"   DROPPED ONE FORK   \00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c" THINKING [ %s%d ms ] \00", align 1
@fork_objs = dso_local global [6 x %struct.k_mutex] zeroinitializer, align 4, !dbg !114
@.str.5 = private unnamed_addr constant [26 x i8] c"Philosopher %d [%s:%s%d] \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"\1B[%d;%dH\00", align 1
@.str.12 = private unnamed_addr constant [328 x i8] c"\1B[2J\1B[15;1HDemo Description\0A----------------\0AAn implementation of a solution to the Dining Philosophers\0Aproblem (a classic multi-thread synchronization problem).\0AThis particular implementation demonstrates the usage of multiple\0Apreemptible and cooperative threads of differing priorities, as\0Awell as %s %s and thread sleeping.\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"mutexes\00", align 1
@threads = internal global [6 x %struct.k_thread] zeroinitializer, align 8, !dbg !266
@stacks = internal global [6 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/phil_obj_abstract.h\22.0", align 64, !dbg !269
@.str.15 = private unnamed_addr constant [15 x i8] c"Philosopher %d\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !280
@.str.16 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.17 = private unnamed_addr constant [34 x i8] c"is_black(node) || is_black(child)\00", align 1
@.str.2.18 = private unnamed_addr constant [24 x i8] c"ZEPHYR_BASE/lib/os/rb.c\00", align 1
@.str.3.19 = private unnamed_addr constant [19 x i8] c"\09both nodes red?!\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [35 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (i32* @_kernel_thread_info_num_offsets to i8*), i8* bitcast ([14 x i32]* @_kernel_thread_info_offsets to i8*), i8* @_kernel_thread_info_size_t_size, i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !290
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@_kernel_thread_info_offsets = dso_local global [14 x i32] [i32 1, i32 8, i32 44, i32 96, i32 112, i32 13, i32 12, i32 14, i32 80, i32 116, i32 168, i32 -1, i32 -1, i32 -1], section ".dbg_thread_info", align 4, !dbg !385
@_kernel_thread_info_num_offsets = dso_local global i32 14, section ".dbg_thread_info", align 4, !dbg !390
@_kernel_thread_info_size_t_size = dso_local global i8 4, section ".dbg_thread_info", align 1, !dbg !393
@.str.31 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.32 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.33 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.34 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.39 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.40 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.44 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.41 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.42 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !398
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !404
@.str.55 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.56 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.57 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.58 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.61 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.62 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !542
@.str.6.63 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.64 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.74, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !578
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !583
@.str.73 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.74 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !603
@.str.76 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.83 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.84 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.77 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.79 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.80 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.81 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.82 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !711
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !864
@.str.4.85 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !833
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !816
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.85, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !789
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !805
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !835
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !849
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !851
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !853
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !857
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !859
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !869
@.str.87 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !894
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !969
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !958
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1010
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !885
@.str.98 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1076
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1321
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1299
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1285
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1235
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !883
@.str.1.103 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1323
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1303
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1301
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1252
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !881
@.str.2.104 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1336
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1307
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1305
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1259
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !879
@.str.3.105 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1338
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1311
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1309
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1268
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !877
@.str.4.106 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1340
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1315
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1313
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1274
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !875
@.str.5.107 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1342
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1319
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1317
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1283
@.str.6.99 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.100 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !889
@.str.111 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1344
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1541
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1500
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1543
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.111, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1485
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1487
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !887
@.str.1.118 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1550
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1502
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1575
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.118, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1496
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1498
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1504
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1512
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1535
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1538
@.str.2.112 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.3.113 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.4.114 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.5.115 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !942
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1567
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1569
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1571
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1573
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1577
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1688
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1690
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1686
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1681
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1655
@.str.125 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.126 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.127 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.128 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.129 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.130 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1692
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1233
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1250
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.104, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1257
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.105, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1266
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1272
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.107, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1281
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1779
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1803
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1806
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1810
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1814
@.str.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.164 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.165 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.166 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1821
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2058
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2066
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2073
@.str.4.174 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2078
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.178 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.179 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.180 = private unnamed_addr constant [23 x i8] c"user_cb != ((void *)0)\00", align 1
@.str.2.181 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.3.182 = private unnamed_addr constant [26 x i8] c"\09user_cb can not be NULL\0A\00", align 1
@z_thread_monitor_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2103
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.197, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.198, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.199, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.200, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.202, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.196, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.203, i32 0, i32 0)], align 4, !dbg !2124
@.str.4.197 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.5.198 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.6.199 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.7.200 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.8.201 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.9.202 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.10.196 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11.203 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2238
@.str.12.195 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.13.208 = private unnamed_addr constant [128 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((entry))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.14.209 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.15.213 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.16.214 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.17.218 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.18.219 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.19.185 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.20.186 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.21.187 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.22.192 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.223 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.224 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.225 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.232 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.233 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.234 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.235 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.236 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2241
@.str.4.244 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.237 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.238 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.239 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.240 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.241 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2360
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2478
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2481
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2483
@.str.247 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.254 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.276 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.288 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.255 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.283 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.256 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.294 = private unnamed_addr constant [134 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((((void *)0)))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.9.295 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.304 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.305 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.306 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.307 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.248 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.249 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.250 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.251 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.252 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.253 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.271 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.284 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.285 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2068
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2071
@.str.23.299 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.313 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.314 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.315 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.316 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2485
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2515
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2520
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1909
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2518
@.str.4.317 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.318 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.319 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.323 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.324 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.344 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

@_kernel_openocd_offsets = dso_local alias i32, getelementptr inbounds ([14 x i32], [14 x i32]* @_kernel_thread_info_offsets, i32 0, i32 0)
@_kernel_openocd_num_offsets = dso_local alias i32, i32* @_kernel_thread_info_num_offsets
@_kernel_openocd_size_t_size = dso_local alias i8, i8* @_kernel_thread_info_size_t_size

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3074 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___kernel_t_threads_OFFSET\0A\09.equ\09___kernel_t_threads_OFFSET,${0:B}\0A\09.type\09___kernel_t_threads_OFFSET,%object", "n"(i32 -45) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -49) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -169) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -153) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_t_next_thread_OFFSET\0A\09.equ\09___thread_t_next_thread_OFFSET,${0:B}\0A\09.type\09___thread_t_next_thread_OFFSET,%object", "n"(i32 -113) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3136, !srcloc !3139
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3186, !srcloc !3187
  ret void, !dbg !3188
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @philosopher(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3191 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3194, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i8* undef, metadata !3195, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i8* undef, metadata !3196, metadata !DIExpression()), !dbg !3202
  %4 = ptrtoint i8* %0 to i32, !dbg !3203
  call void @llvm.dbg.value(metadata i32 %4, metadata !3199, metadata !DIExpression()), !dbg !3202
  %5 = tail call fastcc i32 @is_last_philosopher(i32 noundef %4) #24, !dbg !3204
  %6 = icmp eq i32 %5, 0, !dbg !3204
  br i1 %6, label %7, label %11, !dbg !3206

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %4, !dbg !3207
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !3207
  call void @llvm.dbg.value(metadata %struct.k_mutex* %9, metadata !3197, metadata !DIExpression()), !dbg !3202
  %10 = add nsw i32 %4, 1, !dbg !3209
  call void @llvm.dbg.value(metadata %struct.k_mutex* undef, metadata !3198, metadata !DIExpression()), !dbg !3202
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ %4, %3 ]
  %13 = phi %struct.k_mutex* [ %9, %7 ], [ getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %3 ], !dbg !3210
  %14 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %12, !dbg !3210
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !3210
  call void @llvm.dbg.value(metadata %struct.k_mutex* %13, metadata !3197, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata %struct.k_mutex* %15, metadata !3198, metadata !DIExpression()), !dbg !3202
  br label %16, !dbg !3211

16:                                               ; preds = %16, %11
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0), i32 noundef 0) #24, !dbg !3212
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %13) #24, !dbg !3213
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i32 noundef 0) #24, !dbg !3214
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %15) #24, !dbg !3215
  %17 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3216
  call void @llvm.dbg.value(metadata i32 %17, metadata !3200, metadata !DIExpression()), !dbg !3217
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i32 noundef %17) #24, !dbg !3218
  tail call fastcc void @k_msleep(i32 noundef %17) #24, !dbg !3219
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %15) #24, !dbg !3220
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 noundef 0) #24, !dbg !3221
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %13) #24, !dbg !3222
  %18 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3223
  call void @llvm.dbg.value(metadata i32 %18, metadata !3200, metadata !DIExpression()), !dbg !3217
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 noundef %18) #24, !dbg !3224
  tail call fastcc void @k_msleep(i32 noundef %18) #24, !dbg !3225
  br label %16, !dbg !3211, !llvm.loop !3226
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @is_last_philosopher(i32 noundef %0) unnamed_addr #4 !dbg !3228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3230, metadata !DIExpression()), !dbg !3231
  %2 = icmp eq i32 %0, 5, !dbg !3232
  %3 = zext i1 %2 to i32, !dbg !3232
  ret i32 %3, !dbg !3233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_phil_state(i32 noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3238, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.value(metadata i8* %1, metadata !3239, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.value(metadata i32 %2, metadata !3240, metadata !DIExpression()), !dbg !3242
  %4 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3243
  %5 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %4) #24, !dbg !3244
  call void @llvm.dbg.value(metadata i32 %5, metadata !3241, metadata !DIExpression()), !dbg !3242
  tail call fastcc void @set_phil_state_pos(i32 noundef %0) #24, !dbg !3245
  %6 = icmp slt i32 %5, 0, !dbg !3246
  %7 = select i1 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), !dbg !3247
  %8 = select i1 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), !dbg !3248
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0, i8* noundef %7, i8* noundef %8, i32 noundef %5) #26, !dbg !3249
  %9 = icmp eq i32 %2, 0, !dbg !3250
  br i1 %9, label %11, label %10, !dbg !3252

10:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 noundef %2) #26, !dbg !3253
  br label %12, !dbg !3255

11:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0)) #26, !dbg !3256
  br label %12

12:                                               ; preds = %11, %10
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)) #26, !dbg !3258
  ret void, !dbg !3259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3260 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3270, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3269, metadata !DIExpression()), !dbg !3271
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3272, !srcloc !3274
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #26, !dbg !3275
  ret void, !dbg !3276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_random_delay(i32 noundef %0) unnamed_addr #1 !dbg !3277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3281, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i32 25, metadata !3282, metadata !DIExpression()), !dbg !3285
  %2 = tail call fastcc i32 @k_uptime_get_32() #24, !dbg !3286
  %3 = udiv i32 %2, 100, !dbg !3287
  %4 = add nsw i32 %0, 1, !dbg !3288
  %5 = mul i32 %3, %4, !dbg !3289
  %6 = and i32 %5, 31, !dbg !3290
  call void @llvm.dbg.value(metadata i32 %6, metadata !3283, metadata !DIExpression()), !dbg !3285
  %7 = mul nuw nsw i32 %6, 25, !dbg !3291
  %8 = add nuw nsw i32 %7, 25, !dbg !3291
  call void @llvm.dbg.value(metadata i32 %8, metadata !3284, metadata !DIExpression()), !dbg !3285
  ret i32 %8, !dbg !3292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3297, metadata !DIExpression()), !dbg !3298
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3299
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3300
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3300
  ret void, !dbg !3301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3302 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3306, metadata !DIExpression()), !dbg !3307
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3308, !srcloc !3310
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !3311
  ret void, !dbg !3312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3313 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3318, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata i64 %0, metadata !3320, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 1000, metadata !3325, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i32 10000, metadata !3326, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8 1, metadata !3327, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i8 0, metadata !3328, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i1 true, metadata !3329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3337
  call void @llvm.dbg.value(metadata i8 0, metadata !3330, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i1 true, metadata !3331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3337
  call void @llvm.dbg.value(metadata i1 false, metadata !3332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3337
  call void @llvm.dbg.value(metadata i64 0, metadata !3333, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.value(metadata i64 0, metadata !3333, metadata !DIExpression()), !dbg !3337
  %2 = mul i64 %0, 10, !dbg !3339
  ret i64 %2, !dbg !3345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3346 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3350, metadata !DIExpression()), !dbg !3351
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3352, !srcloc !3354
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !3355
  ret void, !dbg !3356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3357 {
  %1 = tail call fastcc i64 @k_uptime_get() #24, !dbg !3360
  %2 = trunc i64 %1 to i32, !dbg !3361
  ret i32 %2, !dbg !3362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3363 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !3366
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #24, !dbg !3367
  ret i64 %2, !dbg !3368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3369 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3370, !srcloc !3372
  %1 = tail call i64 @z_impl_k_uptime_ticks() #26, !dbg !3373
  ret i64 %1, !dbg !3374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !3375 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3377, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i64 %0, metadata !3320, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i32 10000, metadata !3325, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i32 1000, metadata !3326, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i8 1, metadata !3327, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i8 0, metadata !3328, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i1 false, metadata !3329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3379
  call void @llvm.dbg.value(metadata i8 0, metadata !3330, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i1 false, metadata !3331, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3379
  call void @llvm.dbg.value(metadata i1 true, metadata !3332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3379
  call void @llvm.dbg.value(metadata i64 0, metadata !3333, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata i64 0, metadata !3333, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3320, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3379
  call void @llvm.dbg.value(metadata i64 %0, metadata !3320, metadata !DIExpression()), !dbg !3379
  %2 = udiv i64 %0, 10, !dbg !3381
  ret i64 %2, !dbg !3385
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #5 !dbg !3386 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3390
  ret %struct.k_thread* %1, !dbg !3391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3396, metadata !DIExpression()), !dbg !3397
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3398, !srcloc !3400
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #26, !dbg !3401
  ret i32 %2, !dbg !3402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_phil_state_pos(i32 noundef %0) unnamed_addr #1 !dbg !3403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3407, metadata !DIExpression()), !dbg !3408
  %2 = add nsw i32 %0, 1, !dbg !3409
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 noundef %2, i32 noundef 1) #26, !dbg !3410
  ret void, !dbg !3411
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #5 !dbg !3412 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3413, !srcloc !3415
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3416
  ret %struct.k_thread* %1, !dbg !3417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3418 {
  tail call fastcc void @display_demo_description() #24, !dbg !3419
  tail call void @k_sched_time_slice_set(i32 noundef 5000, i32 noundef 0) #26, !dbg !3420
  tail call fastcc void @init_objects() #24, !dbg !3421
  tail call fastcc void @start_threads() #24, !dbg !3422
  ret void, !dbg !3423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @display_demo_description() unnamed_addr #1 !dbg !3424 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([328 x i8], [328 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0)) #26, !dbg !3425
  ret void, !dbg !3426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_objects() unnamed_addr #1 !dbg !3427 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3429, metadata !DIExpression()), !dbg !3431
  br label %2, !dbg !3432

1:                                                ; preds = %2
  ret void, !dbg !3433

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3429, metadata !DIExpression()), !dbg !3431
  %4 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %3, !dbg !3434
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !3434
  tail call fastcc void @k_mutex_init(%struct.k_mutex* noundef %5) #24, !dbg !3434
  %6 = add nuw nsw i32 %3, 1, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %6, metadata !3429, metadata !DIExpression()), !dbg !3431
  %7 = icmp eq i32 %6, 6, !dbg !3438
  br i1 %7, label %1, label %2, !dbg !3432, !llvm.loop !3439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @start_threads() unnamed_addr #1 !dbg !3441 {
  %1 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3443, metadata !DIExpression()), !dbg !3449
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0
  br label %4, !dbg !3450

3:                                                ; preds = %4
  ret void, !dbg !3451

4:                                                ; preds = %0, %4
  %5 = phi i32 [ 0, %0 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3443, metadata !DIExpression()), !dbg !3449
  %6 = call fastcc i32 @new_prio(i32 noundef %5) #24, !dbg !3452, !range !3453
  call void @llvm.dbg.value(metadata i32 %6, metadata !3445, metadata !DIExpression()), !dbg !3454
  %7 = getelementptr inbounds [6 x %struct.k_thread], [6 x %struct.k_thread]* @threads, i32 0, i32 %5, !dbg !3455
  %8 = getelementptr inbounds [6 x [2112 x %struct.z_thread_stack_element]], [6 x [2112 x %struct.z_thread_stack_element]]* @stacks, i32 0, i32 %5, i32 0, !dbg !3456
  %9 = inttoptr i32 %5 to i8*, !dbg !3457
  call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %7, %struct.z_thread_stack_element* noundef nonnull %8, i8* noundef %9, i32 noundef %6) #24, !dbg !3458
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3459
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3448, metadata !DIExpression()), !dbg !3460
  %10 = call i32 (i8*, i32, i8*, ...) @snprintk(i8* noundef nonnull %2, i32 noundef 32, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i32 noundef %5) #26, !dbg !3461
  call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull %7, i8* noundef nonnull %2) #24, !dbg !3462
  call fastcc void @k_object_access_grant() #24, !dbg !3463
  %11 = add nuw nsw i32 %5, 1, !dbg !3464
  call fastcc void @k_object_access_grant() #24, !dbg !3465
  call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull %7) #24, !dbg !3466
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3467
  call void @llvm.dbg.value(metadata i32 %11, metadata !3443, metadata !DIExpression()), !dbg !3449
  %12 = icmp eq i32 %11, 6, !dbg !3468
  br i1 %12, label %3, label %4, !dbg !3450, !llvm.loop !3469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio(i32 noundef %0) unnamed_addr #4 !dbg !3471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3473, metadata !DIExpression()), !dbg !3474
  %2 = sub i32 3, %0, !dbg !3475
  ret i32 %2, !dbg !3476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3477 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3483, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3484, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 2048, metadata !3485, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @philosopher, metadata !3486, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* %2, metadata !3487, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* null, metadata !3488, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i8* null, metadata !3489, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 %3, metadata !3490, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.value(metadata i32 4, metadata !3491, metadata !DIExpression()), !dbg !3493
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3494, !srcloc !3496
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @philosopher, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 4, [1 x i64] [i64 -1]) #26, !dbg !3497
  ret void, !dbg !3498
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3503, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %1, metadata !3504, metadata !DIExpression()), !dbg !3505
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3506, !srcloc !3508
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #26, !dbg !3509
  ret void, !dbg !3510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !3511 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3516, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3517, metadata !DIExpression()), !dbg !3518
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3519, !srcloc !3521
  ret void, !dbg !3522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3527, metadata !DIExpression()), !dbg !3528
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3529, !srcloc !3531
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !3532
  ret void, !dbg !3533
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_init(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3534 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3536, metadata !DIExpression()), !dbg !3537
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3538, !srcloc !3540
  %2 = tail call i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) #26, !dbg !3541
  ret void, !dbg !3542
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3545, metadata !DIExpression()), !dbg !3546
  ret i32 0, !dbg !3547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3548 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3552, metadata !DIExpression()), !dbg !3553
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3554
  ret void, !dbg !3555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3556 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3559
  ret i8* %1, !dbg !3560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3561 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3573, metadata !DIExpression()), !dbg !3584
  call void @llvm.dbg.value(metadata i8* %0, metadata !3572, metadata !DIExpression()), !dbg !3584
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3585
  ret void, !dbg !3587
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3592, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8* %1, metadata !3593, metadata !DIExpression()), !dbg !3594
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3595
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3595
  ret i32 %4, !dbg !3596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3597 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3609, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3606, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %1, metadata !3607, metadata !DIExpression()), !dbg !3610
  call void @llvm.dbg.value(metadata i8* %2, metadata !3608, metadata !DIExpression()), !dbg !3610
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3611
  ret void, !dbg !3612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3613 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3617, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 %1, metadata !3618, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 0, metadata !3619, metadata !DIExpression()), !dbg !3620
  %3 = icmp eq i32 %1, 0, !dbg !3621
  br i1 %3, label %13, label %4, !dbg !3624

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3619, metadata !DIExpression()), !dbg !3620
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3625
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3627
  %8 = load i8, i8* %7, align 1, !dbg !3627
  %9 = zext i8 %8 to i32, !dbg !3627
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3625
  %11 = add nuw i32 %5, 1, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %11, metadata !3619, metadata !DIExpression()), !dbg !3620
  %12 = icmp eq i32 %11, %1, !dbg !3621
  br i1 %12, label %13, label %4, !dbg !3624, !llvm.loop !3629

13:                                               ; preds = %4, %2
  ret void, !dbg !3631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3632 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3636, metadata !DIExpression()), !dbg !3638
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3639
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3637, metadata !DIExpression()), !dbg !3640
  call void @llvm.va_start(i8* nonnull %3), !dbg !3641
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3642
  %5 = load i32, i32* %4, align 4, !dbg !3642
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3642
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3642
  call void @llvm.va_end(i8* nonnull %3), !dbg !3643
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3644
  ret void, !dbg !3644
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3645 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3649, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i32 %1, metadata !3650, metadata !DIExpression()), !dbg !3654
  call void @llvm.dbg.value(metadata i8* %2, metadata !3651, metadata !DIExpression()), !dbg !3654
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3655
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3652, metadata !DIExpression()), !dbg !3656
  call void @llvm.va_start(i8* nonnull %5), !dbg !3657
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3658
  %7 = load i32, i32* %6, align 4, !dbg !3658
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3658
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3658
  call void @llvm.dbg.value(metadata i32 %9, metadata !3653, metadata !DIExpression()), !dbg !3654
  call void @llvm.va_end(i8* nonnull %5), !dbg !3659
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3660
  ret i32 %9, !dbg !3661
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3662 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3669, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8* %0, metadata !3666, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 %1, metadata !3667, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i8* %2, metadata !3668, metadata !DIExpression()), !dbg !3676
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3677
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3677
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3670, metadata !DIExpression()), !dbg !3678
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3679
  store i8* %0, i8** %7, align 4, !dbg !3679
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3679
  store i32 %1, i32* %8, align 4, !dbg !3679
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3679
  store i32 0, i32* %9, align 4, !dbg !3679
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3680
  %10 = load i32, i32* %9, align 4, !dbg !3681
  %11 = load i32, i32* %8, align 4, !dbg !3683
  %12 = icmp slt i32 %10, %11, !dbg !3684
  br i1 %12, label %13, label %15, !dbg !3685

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3686
  store i8 0, i8* %14, align 1, !dbg !3688
  br label %15, !dbg !3689

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3690
  ret i32 %10, !dbg !3691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !3692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3697, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3698, metadata !DIExpression()), !dbg !3699
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3700
  %4 = load i8*, i8** %3, align 4, !dbg !3700
  %5 = icmp eq i8* %4, null, !dbg !3702
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3703
  br i1 %5, label %12, label %8, !dbg !3704

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3705
  %10 = load i32, i32* %9, align 4, !dbg !3705
  %11 = icmp slt i32 %7, %10, !dbg !3706
  br i1 %11, label %15, label %12, !dbg !3707

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3708
  %14 = add nsw i32 %7, 1, !dbg !3710
  store i32 %14, i32* %13, align 4, !dbg !3710
  br label %25, !dbg !3711

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3712
  %17 = icmp eq i32 %7, %16, !dbg !3714
  br i1 %17, label %18, label %21, !dbg !3715

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3716
  store i32 %19, i32* %6, align 4, !dbg !3716
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3718
  store i8 0, i8* %20, align 1, !dbg !3719
  br label %25, !dbg !3720

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3721
  %23 = add nsw i32 %7, 1, !dbg !3723
  store i32 %23, i32* %6, align 4, !dbg !3723
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3724
  store i8 %22, i8* %24, align 1, !dbg !3725
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #11 !dbg !3727 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3741, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i8 %1, metadata !3742, metadata !DIExpression()), !dbg !3744
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3745
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3745
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !3743, metadata !DIExpression()), !dbg !3744
  br label %5, !dbg !3747

5:                                                ; preds = %8, %2
  %6 = phi %struct.rbnode* [ %4, %2 ], [ %9, %8 ], !dbg !3748
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !3743, metadata !DIExpression()), !dbg !3744
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !3749
  br i1 %7, label %11, label %8, !dbg !3751

8:                                                ; preds = %5
  %9 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext %1) #24, !dbg !3752
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !3753
  br i1 %10, label %11, label %5, !dbg !3754, !llvm.loop !3755

11:                                               ; preds = %5, %8
  ret %struct.rbnode* %6, !dbg !3757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.rbnode* @get_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #8 !dbg !3758 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3762, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata i8 %1, metadata !3763, metadata !DIExpression()), !dbg !3765
  %3 = icmp eq i8 %1, 0, !dbg !3766
  br i1 %3, label %7, label %4, !dbg !3768

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3769
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !3769
  br label %13, !dbg !3771

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3772
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !3772
  %10 = ptrtoint %struct.rbnode* %9 to i32, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %10, metadata !3764, metadata !DIExpression()), !dbg !3765
  %11 = and i32 %10, -2, !dbg !3774
  call void @llvm.dbg.value(metadata i32 %11, metadata !3764, metadata !DIExpression()), !dbg !3765
  %12 = inttoptr i32 %11 to %struct.rbnode*, !dbg !3775
  br label %13

13:                                               ; preds = %7, %4
  %14 = phi %struct.rbnode* [ %6, %4 ], [ %12, %7 ], !dbg !3765
  ret %struct.rbnode* %14, !dbg !3776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_insert(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !3777 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3781, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3782, metadata !DIExpression()), !dbg !3791
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef null) #24, !dbg !3792
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !3793
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3794
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3794
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !3796
  br i1 %5, label %6, label %8, !dbg !3797

6:                                                ; preds = %2
  store %struct.rbnode* %1, %struct.rbnode** %3, align 4, !dbg !3798
  %7 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3800
  store i32 1, i32* %7, align 4, !dbg !3801
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 1) #24, !dbg !3802
  br label %31, !dbg !3803

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3804
  %10 = load i32, i32* %9, align 4, !dbg !3804
  %11 = add nsw i32 %10, 1, !dbg !3805
  %12 = tail call i8* @llvm.stacksave(), !dbg !3806
  %13 = alloca %struct.rbnode*, i32 %11, align 4, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %11, metadata !3783, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata %struct.rbnode** %13, metadata !3784, metadata !DIExpression()), !dbg !3807
  %14 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef nonnull %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %13) #24, !dbg !3808
  call void @llvm.dbg.value(metadata i32 %14, metadata !3788, metadata !DIExpression()), !dbg !3791
  %15 = add nsw i32 %14, -1, !dbg !3809
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %15, !dbg !3810
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !3810
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3789, metadata !DIExpression()), !dbg !3791
  %18 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3811
  %19 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %18, align 4, !dbg !3811
  %20 = tail call zeroext i1 %19(%struct.rbnode* noundef %1, %struct.rbnode* noundef %17) #26, !dbg !3812
  %21 = xor i1 %20, true, !dbg !3812
  %22 = zext i1 %21 to i8, !dbg !3812
  call void @llvm.dbg.value(metadata i8 %22, metadata !3790, metadata !DIExpression()), !dbg !3791
  %23 = bitcast %struct.rbnode* %1 to i8*, !dbg !3813
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %22, i8* noundef %23) #24, !dbg !3814
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 0) #24, !dbg !3815
  %24 = add nsw i32 %14, 1, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %24, metadata !3788, metadata !DIExpression()), !dbg !3791
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %14, !dbg !3817
  store %struct.rbnode* %1, %struct.rbnode** %25, align 4, !dbg !3818
  call fastcc void @fix_extra_red(%struct.rbnode** noundef nonnull %13, i32 noundef %24) #24, !dbg !3819
  %26 = load i32, i32* %9, align 4, !dbg !3820
  %27 = icmp slt i32 %14, %26, !dbg !3822
  br i1 %27, label %29, label %28, !dbg !3823

28:                                               ; preds = %8
  store i32 %24, i32* %9, align 4, !dbg !3824
  br label %29, !dbg !3826

29:                                               ; preds = %28, %8
  %30 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !3827
  store %struct.rbnode* %30, %struct.rbnode** %3, align 4, !dbg !3828
  tail call void @llvm.stackrestore(i8* %12), !dbg !3829
  br label %31

31:                                               ; preds = %29, %6
  ret void, !dbg !3829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_child(%struct.rbnode* nocapture noundef %0, i8 noundef zeroext %1, i8* noundef %2) unnamed_addr #10 !dbg !3830 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3834, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8 %1, metadata !3835, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %2, metadata !3836, metadata !DIExpression()), !dbg !3841
  %4 = icmp eq i8 %1, 0, !dbg !3842
  br i1 %4, label %8, label %5, !dbg !3843

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3844
  %7 = bitcast %struct.rbnode** %6 to i8**, !dbg !3846
  store i8* %2, i8** %7, align 4, !dbg !3846
  br label %16, !dbg !3847

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3848
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3848
  %11 = ptrtoint %struct.rbnode* %10 to i32, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %11, metadata !3837, metadata !DIExpression()), !dbg !3850
  %12 = ptrtoint i8* %2 to i32, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %12, metadata !3840, metadata !DIExpression()), !dbg !3850
  %13 = and i32 %11, 1, !dbg !3852
  %14 = or i32 %13, %12, !dbg !3853
  %15 = inttoptr i32 %14 to %struct.rbnode*, !dbg !3854
  store %struct.rbnode* %15, %struct.rbnode** %9, align 4, !dbg !3855
  br label %16

16:                                               ; preds = %8, %5
  ret void, !dbg !3856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_color(%struct.rbnode* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3857 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3861, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.value(metadata i32 %1, metadata !3862, metadata !DIExpression()), !dbg !3865
  %3 = bitcast %struct.rbnode* %0 to i32*, !dbg !3866
  call void @llvm.dbg.value(metadata i32* %3, metadata !3863, metadata !DIExpression()), !dbg !3865
  %4 = load i32, i32* %3, align 4, !dbg !3867
  %5 = and i32 %4, -2, !dbg !3868
  %6 = and i32 %1, 255, !dbg !3869
  %7 = or i32 %5, %6, !dbg !3870
  store i32 %7, i32* %3, align 4, !dbg !3871
  ret void, !dbg !3872
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #9

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @find_and_stack(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1, %struct.rbnode** nocapture noundef %2) unnamed_addr #1 !dbg !3873 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3878, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3879, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata %struct.rbnode** %2, metadata !3880, metadata !DIExpression()), !dbg !3885
  call void @llvm.dbg.value(metadata i32 0, metadata !3881, metadata !DIExpression()), !dbg !3885
  %4 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3886
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3886
  call void @llvm.dbg.value(metadata i32 1, metadata !3881, metadata !DIExpression()), !dbg !3885
  store %struct.rbnode* %5, %struct.rbnode** %2, align 4, !dbg !3887
  %6 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3888
  call void @llvm.dbg.value(metadata i32 1, metadata !3881, metadata !DIExpression()), !dbg !3885
  %7 = icmp eq %struct.rbnode* %5, %1, !dbg !3889
  br i1 %7, label %23, label %8, !dbg !3890

8:                                                ; preds = %3, %19
  %9 = phi %struct.rbnode* [ %17, %19 ], [ %5, %3 ]
  %10 = phi %struct.rbnode** [ %21, %19 ], [ %2, %3 ]
  %11 = phi i32 [ %20, %19 ], [ 1, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3881, metadata !DIExpression()), !dbg !3885
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %6, align 4, !dbg !3888
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef %1, %struct.rbnode* noundef %9) #26, !dbg !3891
  %14 = xor i1 %13, true, !dbg !3891
  %15 = zext i1 %14 to i8, !dbg !3891
  call void @llvm.dbg.value(metadata i8 %15, metadata !3882, metadata !DIExpression()), !dbg !3892
  %16 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3893
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %15) #24, !dbg !3894
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3884, metadata !DIExpression()), !dbg !3892
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !3895
  br i1 %18, label %23, label %19, !dbg !3897

19:                                               ; preds = %8
  %20 = add nuw nsw i32 %11, 1, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %20, metadata !3881, metadata !DIExpression()), !dbg !3885
  %21 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %2, i32 %11, !dbg !3900
  store %struct.rbnode* %17, %struct.rbnode** %21, align 4, !dbg !3901
  %22 = icmp eq %struct.rbnode* %17, %1, !dbg !3889
  br i1 %22, label %23, label %8, !dbg !3890

23:                                               ; preds = %19, %8, %3
  %24 = phi i32 [ 1, %3 ], [ %11, %8 ], [ %20, %19 ], !dbg !3885
  call void @llvm.dbg.value(metadata i32 %24, metadata !3881, metadata !DIExpression()), !dbg !3885
  ret i32 %24, !dbg !3902
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_extra_red(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3903 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3907, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata i32 %1, metadata !3908, metadata !DIExpression()), !dbg !3916
  %3 = icmp sgt i32 %1, 1, !dbg !3917
  br i1 %3, label %4, label %34, !dbg !3918

4:                                                ; preds = %2, %32
  %5 = phi i32 [ %9, %32 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3908, metadata !DIExpression()), !dbg !3916
  %6 = add nsw i32 %5, -1, !dbg !3919
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !3920
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !3920
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3909, metadata !DIExpression()), !dbg !3921
  %9 = add nsw i32 %5, -2, !dbg !3922
  %10 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3923
  %11 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !3911, metadata !DIExpression()), !dbg !3921
  %12 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %11) #24, !dbg !3924
  br i1 %12, label %38, label %13, !dbg !3926

13:                                               ; preds = %4
  %14 = add nsw i32 %5, -3, !dbg !3927
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3928
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !3928
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !3912, metadata !DIExpression()), !dbg !3921
  %17 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %16, %struct.rbnode* noundef %11) #24, !dbg !3929
  call void @llvm.dbg.value(metadata i8 %17, metadata !3913, metadata !DIExpression()), !dbg !3921
  %18 = icmp eq i8 %17, 0, !dbg !3930
  %19 = zext i1 %18 to i8, !dbg !3931
  %20 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %19) #24, !dbg !3932
  call void @llvm.dbg.value(metadata %struct.rbnode* %20, metadata !3914, metadata !DIExpression()), !dbg !3921
  %21 = icmp eq %struct.rbnode* %20, null, !dbg !3933
  br i1 %21, label %24, label %22, !dbg !3935

22:                                               ; preds = %13
  %23 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %20) #24, !dbg !3936
  br i1 %23, label %32, label %24, !dbg !3937

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !3923
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !3928
  %27 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %11, %struct.rbnode* noundef %8) #24, !dbg !3938
  call void @llvm.dbg.value(metadata i8 %27, metadata !3915, metadata !DIExpression()), !dbg !3921
  %28 = icmp eq i8 %27, %17, !dbg !3939
  br i1 %28, label %30, label %29, !dbg !3941

29:                                               ; preds = %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %5) #24, !dbg !3942
  br label %30, !dbg !3944

30:                                               ; preds = %29, %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !3945
  %31 = load %struct.rbnode*, %struct.rbnode** %26, align 4, !dbg !3946
  tail call fastcc void @set_color(%struct.rbnode* noundef %31, i32 noundef 1) #24, !dbg !3947
  br label %34

32:                                               ; preds = %22
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 0) #24, !dbg !3948
  tail call fastcc void @set_color(%struct.rbnode* noundef %11, i32 noundef 1) #24, !dbg !3950
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %20, i32 noundef 1) #24, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %9, metadata !3908, metadata !DIExpression()), !dbg !3916
  %33 = icmp ugt i32 %5, 3, !dbg !3917
  br i1 %33, label %4, label %34, !dbg !3918

34:                                               ; preds = %32, %2, %30
  %35 = phi %struct.rbnode** [ %25, %30 ], [ %0, %2 ], [ %0, %32 ]
  %36 = phi i32 [ 0, %30 ], [ 1, %2 ], [ 1, %32 ]
  %37 = load %struct.rbnode*, %struct.rbnode** %35, align 4, !dbg !3916
  tail call fastcc void @set_color(%struct.rbnode* noundef %37, i32 noundef %36) #24, !dbg !3916
  br label %38, !dbg !3952

38:                                               ; preds = %4, %34
  ret void, !dbg !3952
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_black(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3953 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3957, metadata !DIExpression()), !dbg !3958
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !3959
  %3 = icmp eq i32 %2, 1, !dbg !3960
  ret i1 %3, !dbg !3961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @get_side(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* noundef readnone %1) unnamed_addr #8 !dbg !3962 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3966, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3967, metadata !DIExpression()), !dbg !3968
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 1) #24, !dbg !3969
  %4 = icmp eq %struct.rbnode* %3, %1, !dbg !3970
  %5 = zext i1 %4 to i8, !dbg !3971
  ret i8 %5, !dbg !3972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_red(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !3973 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3975, metadata !DIExpression()), !dbg !3976
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !3977
  %3 = icmp eq i32 %2, 0, !dbg !3978
  ret i1 %3, !dbg !3979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rotate(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3980 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !3982, metadata !DIExpression()), !dbg !3992
  call void @llvm.dbg.value(metadata i32 %1, metadata !3983, metadata !DIExpression()), !dbg !3992
  %3 = add nsw i32 %1, -2, !dbg !3993
  %4 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %3, !dbg !3994
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3994
  call void @llvm.dbg.value(metadata %struct.rbnode* %5, metadata !3984, metadata !DIExpression()), !dbg !3992
  %6 = add nsw i32 %1, -1, !dbg !3995
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !3996
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !3996
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !3985, metadata !DIExpression()), !dbg !3992
  %9 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %5, %struct.rbnode* noundef %8) #24, !dbg !3997, !range !3998
  call void @llvm.dbg.value(metadata i8 %9, metadata !3986, metadata !DIExpression()), !dbg !3992
  %10 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9) #24, !dbg !3999
  call void @llvm.dbg.value(metadata %struct.rbnode* %10, metadata !3987, metadata !DIExpression()), !dbg !3992
  %11 = xor i8 %9, 1, !dbg !4000
  %12 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11) #24, !dbg !4001
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !3988, metadata !DIExpression()), !dbg !3992
  %13 = icmp sgt i32 %1, 2, !dbg !4002
  br i1 %13, label %14, label %20, !dbg !4003

14:                                               ; preds = %2
  %15 = add nsw i32 %1, -3, !dbg !4004
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %15, !dbg !4005
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3989, metadata !DIExpression()), !dbg !4006
  %18 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %17, %struct.rbnode* noundef %5) #24, !dbg !4007, !range !3998
  %19 = bitcast %struct.rbnode* %8 to i8*, !dbg !4008
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %18, i8* noundef %19) #24, !dbg !4009
  br label %20, !dbg !4010

20:                                               ; preds = %14, %2
  %21 = bitcast %struct.rbnode* %10 to i8*, !dbg !4011
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9, i8* noundef %21) #24, !dbg !4012
  %22 = bitcast %struct.rbnode* %5 to i8*, !dbg !4013
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11, i8* noundef %22) #24, !dbg !4014
  %23 = bitcast %struct.rbnode* %12 to i8*, !dbg !4015
  tail call fastcc void @set_child(%struct.rbnode* noundef %5, i8 noundef zeroext %9, i8* noundef %23) #24, !dbg !4016
  store %struct.rbnode* %8, %struct.rbnode** %4, align 4, !dbg !4017
  store %struct.rbnode* %5, %struct.rbnode** %7, align 4, !dbg !4018
  ret void, !dbg !4019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @get_color(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4020 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4024, metadata !DIExpression()), !dbg !4025
  %2 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !4026
  %3 = load %struct.rbnode*, %struct.rbnode** %2, align 4, !dbg !4026
  %4 = ptrtoint %struct.rbnode* %3 to i32, !dbg !4027
  %5 = and i32 %4, 1, !dbg !4028
  ret i32 %5, !dbg !4029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_remove(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4030 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4032, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4033, metadata !DIExpression()), !dbg !4050
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !4051
  %4 = load i32, i32* %3, align 4, !dbg !4051
  %5 = add nsw i32 %4, 1, !dbg !4052
  %6 = alloca %struct.rbnode*, i32 %5, align 4, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %5, metadata !4035, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.declare(metadata %struct.rbnode** %6, metadata !4036, metadata !DIExpression()), !dbg !4054
  %7 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %6) #24, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %7, metadata !4040, metadata !DIExpression()), !dbg !4050
  %8 = add nsw i32 %7, -1, !dbg !4056
  %9 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %8, !dbg !4058
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4058
  %11 = icmp eq %struct.rbnode* %10, %1, !dbg !4059
  br i1 %11, label %12, label %108, !dbg !4060

12:                                               ; preds = %2
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4061
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4062
  br i1 %14, label %69, label %15, !dbg !4063

15:                                               ; preds = %12
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4064
  %17 = icmp eq %struct.rbnode* %16, null, !dbg !4065
  br i1 %17, label %69, label %18, !dbg !4066

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %7, metadata !4041, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4046, metadata !DIExpression()), !dbg !4067
  %19 = icmp sgt i32 %7, 1, !dbg !4068
  br i1 %19, label %20, label %24, !dbg !4069

20:                                               ; preds = %18
  %21 = add nsw i32 %7, -2, !dbg !4070
  %22 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %21, !dbg !4071
  %23 = load %struct.rbnode*, %struct.rbnode** %22, align 4, !dbg !4071
  br label %24, !dbg !4069

24:                                               ; preds = %18, %20
  %25 = phi %struct.rbnode* [ %23, %20 ], [ null, %18 ], !dbg !4069
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !4044, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i32 %7, metadata !4040, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4050
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %7, !dbg !4072
  store %struct.rbnode* %13, %struct.rbnode** %26, align 4, !dbg !4073
  %27 = add nsw i32 %7, 1, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %27, metadata !4040, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4046, metadata !DIExpression()), !dbg !4067
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %13, i8 noundef zeroext 1) #24, !dbg !4074
  %29 = icmp eq %struct.rbnode* %28, null, !dbg !4075
  br i1 %29, label %41, label %30, !dbg !4076

30:                                               ; preds = %24, %30
  %31 = phi %struct.rbnode* [ %35, %30 ], [ %28, %24 ]
  %32 = phi i32 [ %34, %30 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %31, metadata !4046, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.value(metadata i32 %32, metadata !4040, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4050
  %33 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %32, !dbg !4077
  store %struct.rbnode* %31, %struct.rbnode** %33, align 4, !dbg !4079
  %34 = add nsw i32 %32, 1, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %34, metadata !4040, metadata !DIExpression()), !dbg !4050
  %35 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %31, i8 noundef zeroext 1) #24, !dbg !4074
  %36 = icmp eq %struct.rbnode* %35, null, !dbg !4075
  br i1 %36, label %37, label %30, !dbg !4076, !llvm.loop !4080

37:                                               ; preds = %30
  %38 = add nsw i32 %32, -1, !dbg !4082
  %39 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %38
  %40 = load %struct.rbnode*, %struct.rbnode** %39, align 4, !dbg !4083
  br label %41, !dbg !4082

41:                                               ; preds = %37, %24
  %42 = phi %struct.rbnode* [ %40, %37 ], [ %1, %24 ], !dbg !4083
  %43 = phi %struct.rbnode* [ %31, %37 ], [ %13, %24 ], !dbg !4067
  %44 = phi i32 [ %32, %37 ], [ %7, %24 ]
  %45 = phi i32 [ %34, %37 ], [ %27, %24 ], !dbg !4067
  call void @llvm.dbg.value(metadata %struct.rbnode* %42, metadata !4045, metadata !DIExpression()), !dbg !4067
  %46 = icmp eq %struct.rbnode* %25, null, !dbg !4084
  br i1 %46, label %50, label %47, !dbg !4086

47:                                               ; preds = %41
  %48 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef nonnull %25, %struct.rbnode* noundef %1) #24, !dbg !4087, !range !3998
  %49 = bitcast %struct.rbnode* %43 to i8*, !dbg !4089
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %25, i8 noundef zeroext %48, i8* noundef nonnull %49) #24, !dbg !4090
  br label %52, !dbg !4091

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4092
  store %struct.rbnode* %43, %struct.rbnode** %51, align 4, !dbg !4094
  br label %52

52:                                               ; preds = %50, %47
  %53 = icmp eq %struct.rbnode* %42, %1, !dbg !4095
  br i1 %53, label %58, label %54, !dbg !4097

54:                                               ; preds = %52
  %55 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %42, %struct.rbnode* noundef nonnull %43) #24, !dbg !4098, !range !3998
  %56 = bitcast %struct.rbnode* %1 to i8*, !dbg !4100
  tail call fastcc void @set_child(%struct.rbnode* noundef %42, i8 noundef zeroext %55, i8* noundef %56) #24, !dbg !4101
  %57 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4102
  call void @llvm.dbg.value(metadata %struct.rbnode* %57, metadata !4034, metadata !DIExpression()), !dbg !4050
  br label %58

58:                                               ; preds = %52, %54
  %59 = phi %struct.rbnode* [ %57, %54 ], [ %1, %52 ]
  %60 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0) #24, !dbg !4103
  %61 = bitcast %struct.rbnode* %60 to i8*, !dbg !4103
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef %61) #24, !dbg !4103
  %62 = bitcast %struct.rbnode* %59 to i8*, !dbg !4103
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0, i8* noundef %62) #24, !dbg !4103
  %63 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4104
  %64 = bitcast %struct.rbnode* %63 to i8*, !dbg !4104
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 1, i8* noundef %64) #24, !dbg !4105
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !4106
  %65 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4107
  call void @llvm.dbg.value(metadata %struct.rbnode* %65, metadata !4034, metadata !DIExpression()), !dbg !4050
  %66 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %44, !dbg !4108
  store %struct.rbnode* %43, %struct.rbnode** %9, align 4, !dbg !4109
  store %struct.rbnode* %65, %struct.rbnode** %66, align 4, !dbg !4110
  %67 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %1) #24, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %67, metadata !4047, metadata !DIExpression()), !dbg !4067
  %68 = tail call fastcc i32 @get_color(%struct.rbnode* noundef nonnull %43) #24, !dbg !4112, !range !4113
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef %68) #24, !dbg !4114
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %43, i32 noundef %67) #24, !dbg !4115
  br label %69, !dbg !4116

69:                                               ; preds = %58, %15, %12
  %70 = phi i32 [ %45, %58 ], [ %7, %15 ], [ %7, %12 ], !dbg !4050
  call void @llvm.dbg.value(metadata i32 %70, metadata !4040, metadata !DIExpression()), !dbg !4050
  %71 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4117
  call void @llvm.dbg.value(metadata %struct.rbnode* %71, metadata !4048, metadata !DIExpression()), !dbg !4050
  %72 = icmp eq %struct.rbnode* %71, null, !dbg !4118
  br i1 %72, label %73, label %75, !dbg !4120

73:                                               ; preds = %69
  %74 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.rbnode* %74, metadata !4048, metadata !DIExpression()), !dbg !4050
  br label %75, !dbg !4123

75:                                               ; preds = %73, %69
  %76 = phi %struct.rbnode* [ %74, %73 ], [ %71, %69 ], !dbg !4050
  call void @llvm.dbg.value(metadata %struct.rbnode* %76, metadata !4048, metadata !DIExpression()), !dbg !4050
  %77 = icmp slt i32 %70, 2, !dbg !4124
  br i1 %77, label %78, label %83, !dbg !4126

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4127
  store %struct.rbnode* %76, %struct.rbnode** %79, align 4, !dbg !4129
  %80 = icmp eq %struct.rbnode* %76, null, !dbg !4130
  br i1 %80, label %82, label %81, !dbg !4132

81:                                               ; preds = %78
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4133
  br label %108, !dbg !4135

82:                                               ; preds = %78
  store i32 0, i32* %3, align 4, !dbg !4136
  br label %108

83:                                               ; preds = %75
  %84 = add nsw i32 %70, -2, !dbg !4138
  %85 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %84, !dbg !4139
  %86 = load %struct.rbnode*, %struct.rbnode** %85, align 4, !dbg !4139
  call void @llvm.dbg.value(metadata %struct.rbnode* %86, metadata !4049, metadata !DIExpression()), !dbg !4050
  %87 = icmp eq %struct.rbnode* %76, null, !dbg !4140
  br i1 %87, label %88, label %93, !dbg !4142

88:                                               ; preds = %83
  %89 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4143
  br i1 %89, label %90, label %91, !dbg !4146

90:                                               ; preds = %88
  call fastcc void @fix_missing_black(%struct.rbnode** noundef nonnull %6, i32 noundef %70, %struct.rbnode* noundef %1) #24, !dbg !4147
  br label %105, !dbg !4149

91:                                               ; preds = %88
  %92 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4150, !range !3998
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %92, i8* noundef null) #24, !dbg !4152
  br label %105

93:                                               ; preds = %83
  %94 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4153, !range !3998
  %95 = bitcast %struct.rbnode* %76 to i8*, !dbg !4155
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %94, i8* noundef nonnull %95) #24, !dbg !4156
  %96 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4157
  br i1 %96, label %100, label %97, !dbg !4157

97:                                               ; preds = %93
  %98 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %76) #24, !dbg !4157
  br i1 %98, label %100, label %99, !dbg !4160

99:                                               ; preds = %97
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.19, i32 0, i32 0)) #26, !dbg !4161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4161
  unreachable, !dbg !4161

100:                                              ; preds = %97, %93
  %101 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef %1) #24, !dbg !4163
  br i1 %101, label %104, label %102, !dbg !4165

102:                                              ; preds = %100
  %103 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %76) #24, !dbg !4166
  br i1 %103, label %104, label %105, !dbg !4167

104:                                              ; preds = %102, %100
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4168
  br label %105, !dbg !4170

105:                                              ; preds = %102, %104, %90, %91
  %106 = load %struct.rbnode*, %struct.rbnode** %6, align 4, !dbg !4171
  %107 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4172
  store %struct.rbnode* %106, %struct.rbnode** %107, align 4, !dbg !4173
  br label %108, !dbg !4174

108:                                              ; preds = %105, %82, %81, %2
  ret void, !dbg !4174
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_missing_black(%struct.rbnode** nocapture noundef %0, i32 noundef %1, %struct.rbnode* noundef readnone %2) unnamed_addr #12 !dbg !4175 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4179, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.value(metadata i32 %1, metadata !4180, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.value(metadata %struct.rbnode* %2, metadata !4181, metadata !DIExpression()), !dbg !4191
  %4 = icmp sgt i32 %1, 1, !dbg !4192
  br i1 %4, label %5, label %68, !dbg !4193

5:                                                ; preds = %3, %65
  %6 = phi i32 [ %66, %65 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4180, metadata !DIExpression()), !dbg !4191
  %7 = add nsw i32 %6, -1, !dbg !4194
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %7, !dbg !4195
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4195
  call void @llvm.dbg.value(metadata %struct.rbnode* %9, metadata !4187, metadata !DIExpression()), !dbg !4196
  %10 = add nsw i32 %6, -2, !dbg !4197
  %11 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %10, !dbg !4198
  %12 = load %struct.rbnode*, %struct.rbnode** %11, align 4, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4188, metadata !DIExpression()), !dbg !4196
  %13 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %12, %struct.rbnode* noundef %9) #24, !dbg !4199
  call void @llvm.dbg.value(metadata i8 %13, metadata !4189, metadata !DIExpression()), !dbg !4196
  %14 = icmp eq i8 %13, 0, !dbg !4200
  %15 = zext i1 %14 to i8, !dbg !4201
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %12, i8 noundef zeroext %15) #24, !dbg !4202
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4190, metadata !DIExpression()), !dbg !4196
  %17 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %16) #24, !dbg !4203
  br i1 %17, label %23, label %18, !dbg !4205

18:                                               ; preds = %5
  store %struct.rbnode* %16, %struct.rbnode** %8, align 4, !dbg !4206
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !4208
  tail call fastcc void @set_color(%struct.rbnode* noundef %12, i32 noundef 0) #24, !dbg !4209
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 1) #24, !dbg !4210
  %19 = add nuw nsw i32 %6, 1, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %19, metadata !4180, metadata !DIExpression()), !dbg !4191
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4212
  store %struct.rbnode* %9, %struct.rbnode** %20, align 4, !dbg !4213
  %21 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4214
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !4188, metadata !DIExpression()), !dbg !4196
  %22 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %21, i8 noundef zeroext %15) #24, !dbg !4215
  call void @llvm.dbg.value(metadata %struct.rbnode* %22, metadata !4190, metadata !DIExpression()), !dbg !4196
  br label %23, !dbg !4216

23:                                               ; preds = %18, %5
  %24 = phi %struct.rbnode* [ %12, %5 ], [ %21, %18 ], !dbg !4196
  %25 = phi i32 [ %6, %5 ], [ %19, %18 ]
  %26 = phi %struct.rbnode* [ %16, %5 ], [ %22, %18 ], !dbg !4196
  call void @llvm.dbg.value(metadata %struct.rbnode* %26, metadata !4190, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %25, metadata !4180, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4188, metadata !DIExpression()), !dbg !4196
  %27 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 0) #24, !dbg !4217
  call void @llvm.dbg.value(metadata %struct.rbnode* %27, metadata !4182, metadata !DIExpression()), !dbg !4196
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 1) #24, !dbg !4218
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !4184, metadata !DIExpression()), !dbg !4196
  %29 = icmp eq %struct.rbnode* %27, null, !dbg !4219
  br i1 %29, label %32, label %30, !dbg !4221

30:                                               ; preds = %23
  %31 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %27) #24, !dbg !4222
  br i1 %31, label %32, label %42, !dbg !4223

32:                                               ; preds = %30, %23
  %33 = icmp eq %struct.rbnode* %28, null, !dbg !4224
  br i1 %33, label %36, label %34, !dbg !4225

34:                                               ; preds = %32
  %35 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %28) #24, !dbg !4226
  br i1 %35, label %36, label %42, !dbg !4227

36:                                               ; preds = %34, %32
  %37 = icmp eq %struct.rbnode* %9, %2, !dbg !4228
  br i1 %37, label %38, label %39, !dbg !4231

38:                                               ; preds = %36
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4232
  br label %39, !dbg !4234

39:                                               ; preds = %38, %36
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4235
  %40 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %24) #24, !dbg !4236
  br i1 %40, label %65, label %41, !dbg !4238

41:                                               ; preds = %39
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4239
  br label %68, !dbg !4241

42:                                               ; preds = %34, %30
  %43 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %15) #24, !dbg !4242
  call void @llvm.dbg.value(metadata %struct.rbnode* %43, metadata !4186, metadata !DIExpression()), !dbg !4196
  %44 = icmp eq %struct.rbnode* %43, null, !dbg !4243
  br i1 %44, label %49, label %45, !dbg !4245

45:                                               ; preds = %42
  %46 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %43) #24, !dbg !4246
  br i1 %46, label %47, label %49, !dbg !4247

47:                                               ; preds = %45
  %48 = add nsw i32 %25, -1, !dbg !4248
  br label %57, !dbg !4247

49:                                               ; preds = %45, %42
  %50 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %13) #24, !dbg !4249
  call void @llvm.dbg.value(metadata %struct.rbnode* %50, metadata !4185, metadata !DIExpression()), !dbg !4196
  %51 = add nsw i32 %25, -1, !dbg !4251
  %52 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %51, !dbg !4252
  store %struct.rbnode* %26, %struct.rbnode** %52, align 4, !dbg !4253
  %53 = add nuw nsw i32 %25, 1, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %53, metadata !4180, metadata !DIExpression()), !dbg !4191
  %54 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %25, !dbg !4255
  store %struct.rbnode* %50, %struct.rbnode** %54, align 4, !dbg !4256
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %53) #24, !dbg !4257
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4258
  tail call fastcc void @set_color(%struct.rbnode* noundef %50, i32 noundef 1) #24, !dbg !4259
  %55 = load %struct.rbnode*, %struct.rbnode** %52, align 4, !dbg !4260
  call void @llvm.dbg.value(metadata %struct.rbnode* %55, metadata !4190, metadata !DIExpression()), !dbg !4196
  %56 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %55, i8 noundef zeroext %15) #24, !dbg !4261
  call void @llvm.dbg.value(metadata %struct.rbnode* %56, metadata !4186, metadata !DIExpression()), !dbg !4196
  store %struct.rbnode* %9, %struct.rbnode** %52, align 4, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %25, metadata !4180, metadata !DIExpression()), !dbg !4191
  br label %57, !dbg !4263

57:                                               ; preds = %47, %49
  %58 = phi i32 [ %48, %47 ], [ %51, %49 ], !dbg !4248
  %59 = phi %struct.rbnode* [ %43, %47 ], [ %56, %49 ], !dbg !4196
  %60 = phi %struct.rbnode* [ %26, %47 ], [ %55, %49 ], !dbg !4196
  call void @llvm.dbg.value(metadata %struct.rbnode* %60, metadata !4190, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %25, metadata !4180, metadata !DIExpression()), !dbg !4191
  call void @llvm.dbg.value(metadata %struct.rbnode* %59, metadata !4186, metadata !DIExpression()), !dbg !4196
  %61 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %24) #24, !dbg !4264, !range !4113
  tail call fastcc void @set_color(%struct.rbnode* noundef %60, i32 noundef %61) #24, !dbg !4265
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4266
  tail call fastcc void @set_color(%struct.rbnode* noundef %59, i32 noundef 1) #24, !dbg !4267
  %62 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %58, !dbg !4268
  store %struct.rbnode* %60, %struct.rbnode** %62, align 4, !dbg !4269
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %25) #24, !dbg !4270
  %63 = icmp eq %struct.rbnode* %9, %2, !dbg !4271
  br i1 %63, label %64, label %68, !dbg !4273

64:                                               ; preds = %57
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4274
  br label %68, !dbg !4276

65:                                               ; preds = %39
  %66 = add nsw i32 %25, -1, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %66, metadata !4180, metadata !DIExpression()), !dbg !4191
  %67 = icmp sgt i32 %25, 2, !dbg !4192
  br i1 %67, label %5, label %68, !dbg !4193

68:                                               ; preds = %65, %3, %57, %64, %41
  ret void, !dbg !4279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_rb_walk(%struct.rbnode* noundef %0, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !4280 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4288, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4289, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.value(metadata i8* %2, metadata !4290, metadata !DIExpression()), !dbg !4291
  %4 = icmp eq %struct.rbnode* %0, null, !dbg !4292
  br i1 %4, label %10, label %5, !dbg !4294

5:                                                ; preds = %3, %5
  %6 = phi %struct.rbnode* [ %8, %5 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !4288, metadata !DIExpression()), !dbg !4291
  %7 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 0) #24, !dbg !4295
  tail call void @z_rb_walk(%struct.rbnode* noundef %7, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !4297
  tail call void %1(%struct.rbnode* noundef nonnull %6, i8* noundef %2) #26, !dbg !4298
  %8 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 1) #24, !dbg !4299
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4288, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4289, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.value(metadata i8* %2, metadata !4290, metadata !DIExpression()), !dbg !4291
  %9 = icmp eq %struct.rbnode* %8, null, !dbg !4292
  br i1 %9, label %10, label %5, !dbg !4294

10:                                               ; preds = %5, %3
  ret void, !dbg !4300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.rbnode* @z_rb_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #8 !dbg !4301 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4303, metadata !DIExpression()), !dbg !4305
  call void @llvm.dbg.value(metadata i8 %1, metadata !4304, metadata !DIExpression()), !dbg !4305
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext %1) #24, !dbg !4306
  ret %struct.rbnode* %3, !dbg !4307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_rb_is_black(%struct.rbnode* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4308 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4312, metadata !DIExpression()), !dbg !4313
  %2 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %0) #24, !dbg !4314
  %3 = zext i1 %2 to i32, !dbg !4314
  ret i32 %3, !dbg !4315
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @rb_contains(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4316 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4320, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4321, metadata !DIExpression()), !dbg !4323
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4324
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4324
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !4322, metadata !DIExpression()), !dbg !4323
  %5 = icmp ne %struct.rbnode* %4, null, !dbg !4325
  %6 = icmp ne %struct.rbnode* %4, %1, !dbg !4326
  %7 = and i1 %5, %6, !dbg !4326
  br i1 %7, label %8, label %19, !dbg !4327

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1
  br label %10, !dbg !4327

10:                                               ; preds = %8, %10
  %11 = phi %struct.rbnode* [ %4, %8 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !4322, metadata !DIExpression()), !dbg !4323
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %9, align 4, !dbg !4328
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef nonnull %11, %struct.rbnode* noundef %1) #26, !dbg !4330
  %14 = zext i1 %13 to i8, !dbg !4330
  %15 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %11, i8 noundef zeroext %14) #24, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.rbnode* %15, metadata !4322, metadata !DIExpression()), !dbg !4323
  %16 = icmp ne %struct.rbnode* %15, null, !dbg !4325
  %17 = icmp ne %struct.rbnode* %15, %1, !dbg !4326
  %18 = and i1 %16, %17, !dbg !4326
  br i1 %18, label %10, label %19, !dbg !4327, !llvm.loop !4332

19:                                               ; preds = %10, %2
  %20 = phi %struct.rbnode* [ %4, %2 ], [ %15, %10 ], !dbg !4323
  %21 = icmp eq %struct.rbnode* %20, %1, !dbg !4334
  ret i1 %21, !dbg !4335
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* nocapture noundef readonly %0, %struct._rb_foreach* nocapture noundef %1) local_unnamed_addr #12 !dbg !4336 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4346, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4347, metadata !DIExpression()), !dbg !4349
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4350
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4350
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !4352
  br i1 %5, label %48, label %6, !dbg !4353

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4354
  %8 = load i32, i32* %7, align 4, !dbg !4354
  %9 = icmp eq i32 %8, -1, !dbg !4356
  br i1 %9, label %10, label %12, !dbg !4357

10:                                               ; preds = %6
  %11 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %4, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4358
  br label %48, !dbg !4360

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4361
  %14 = load %struct.rbnode**, %struct.rbnode*** %13, align 4, !dbg !4361
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %8, !dbg !4362
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !4362
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext 1) #24, !dbg !4363
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4348, metadata !DIExpression()), !dbg !4349
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !4364
  br i1 %18, label %21, label %19, !dbg !4366

19:                                               ; preds = %12
  %20 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %17, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4367
  br label %48, !dbg !4369

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4370
  %23 = load i8*, i8** %22, align 4, !dbg !4370
  %24 = getelementptr inbounds i8, i8* %23, i32 %8, !dbg !4372
  %25 = load i8, i8* %24, align 1, !dbg !4372
  %26 = icmp eq i8 %25, 0, !dbg !4373
  br i1 %26, label %31, label %27, !dbg !4374

27:                                               ; preds = %21
  %28 = add nsw i32 %8, -1, !dbg !4375
  store i32 %28, i32* %7, align 4, !dbg !4375
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %28, !dbg !4377
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4377
  br label %48, !dbg !4378

31:                                               ; preds = %21
  %32 = icmp sgt i32 %8, 0, !dbg !4379
  br i1 %32, label %33, label %41, !dbg !4380

33:                                               ; preds = %31, %37
  %34 = phi i32 [ %35, %37 ], [ %8, %31 ]
  %35 = add nsw i32 %34, -1, !dbg !4381
  store i32 %35, i32* %7, align 4, !dbg !4381
  %36 = icmp sgt i32 %34, 1, !dbg !4379
  br i1 %36, label %37, label %41, !dbg !4380, !llvm.loop !4383

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %23, i32 %35
  %39 = load i8, i8* %38, align 1, !dbg !4386
  %40 = icmp eq i8 %39, 0, !dbg !4387
  br i1 %40, label %33, label %44, !dbg !4384

41:                                               ; preds = %33, %31
  %42 = phi i32 [ %8, %31 ], [ 0, %33 ], !dbg !4388
  %43 = add nsw i32 %42, -1, !dbg !4389
  store i32 %43, i32* %7, align 4, !dbg !4389
  br label %48, !dbg !4390

44:                                               ; preds = %37
  %45 = add nsw i32 %34, -2, !dbg !4389
  store i32 %45, i32* %7, align 4, !dbg !4389
  %46 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %45, !dbg !4391
  %47 = load %struct.rbnode*, %struct.rbnode** %46, align 4, !dbg !4391
  br label %48, !dbg !4390

48:                                               ; preds = %41, %44, %2, %27, %19, %10
  %49 = phi %struct.rbnode* [ %11, %10 ], [ %20, %19 ], [ %30, %27 ], [ null, %2 ], [ %47, %44 ], [ null, %41 ], !dbg !4349
  ret %struct.rbnode* %49, !dbg !4392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef %0, %struct._rb_foreach* nocapture noundef %1) unnamed_addr #12 !dbg !4393 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4397, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4398, metadata !DIExpression()), !dbg !4399
  %3 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4400
  %4 = load i32, i32* %3, align 4, !dbg !4401
  %5 = add nsw i32 %4, 1, !dbg !4401
  store i32 %5, i32* %3, align 4, !dbg !4401
  %6 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4402
  %7 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4402
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %7, i32 %5, !dbg !4403
  store %struct.rbnode* %0, %struct.rbnode** %8, align 4, !dbg !4404
  %9 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4405
  %10 = load i8*, i8** %9, align 4, !dbg !4405
  %11 = load i32, i32* %3, align 4, !dbg !4406
  %12 = getelementptr inbounds i8, i8* %10, i32 %11, !dbg !4407
  store i8 0, i8* %12, align 1, !dbg !4408
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4397, metadata !DIExpression()), !dbg !4399
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 0) #24, !dbg !4409
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4397, metadata !DIExpression()), !dbg !4399
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4410
  br i1 %14, label %26, label %15, !dbg !4411

15:                                               ; preds = %2, %15
  %16 = phi %struct.rbnode* [ %24, %15 ], [ %13, %2 ]
  %17 = load i32, i32* %3, align 4, !dbg !4412
  %18 = add nsw i32 %17, 1, !dbg !4412
  store i32 %18, i32* %3, align 4, !dbg !4412
  %19 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4414
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %19, i32 %18, !dbg !4415
  store %struct.rbnode* %16, %struct.rbnode** %20, align 4, !dbg !4416
  %21 = load i8*, i8** %9, align 4, !dbg !4417
  %22 = load i32, i32* %3, align 4, !dbg !4418
  %23 = getelementptr inbounds i8, i8* %21, i32 %22, !dbg !4419
  store i8 1, i8* %23, align 1, !dbg !4420
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4397, metadata !DIExpression()), !dbg !4399
  %24 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %16, i8 noundef zeroext 0) #24, !dbg !4409
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4397, metadata !DIExpression()), !dbg !4399
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !4410
  br i1 %25, label %26, label %15, !dbg !4411, !llvm.loop !4421

26:                                               ; preds = %15, %2
  %27 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4423
  %28 = load i32, i32* %3, align 4, !dbg !4424
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %27, i32 %28, !dbg !4425
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4425
  ret %struct.rbnode* %30, !dbg !4426
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4427 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4432, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i8* %1, metadata !4433, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i8* %2, metadata !4434, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i8* %3, metadata !4435, metadata !DIExpression()), !dbg !4436
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !4437
  %5 = tail call fastcc %struct.k_thread* @k_current_get.20() #25, !dbg !4438
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4439
  unreachable, !dbg !4440
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.20() unnamed_addr #5 !dbg !4441 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.21() #25, !dbg !4556
  ret %struct.k_thread* %1, !dbg !4557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4558 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4562, metadata !DIExpression()), !dbg !4563
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4564, !srcloc !4566
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !4567
  ret void, !dbg !4568
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.21() unnamed_addr #5 !dbg !4569 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4570, !srcloc !4572
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !4573
  ret %struct.k_thread* %1, !dbg !4574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4575 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4588, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4585, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8* %1, metadata !4586, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8* %2, metadata !4587, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %4, metadata !4589, metadata !DIExpression()), !dbg !4716
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4717
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4717
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4590, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata i32 0, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i1 undef, metadata !4596, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4716
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4719

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4719

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4720
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4588, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8* %30, metadata !4587, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %29, metadata !4594, metadata !DIExpression()), !dbg !4716
  %31 = load i8, i8* %30, align 1, !dbg !4721
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4719

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4721
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4722
  call void @llvm.dbg.value(metadata i8* %34, metadata !4587, metadata !DIExpression()), !dbg !4716
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %35, metadata !4598, metadata !DIExpression()), !dbg !4723
  %36 = icmp slt i32 %35, 0, !dbg !4724
  %37 = add i32 %29, 1, !dbg !4722
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %36, label %365, label %28, !llvm.loop !4726

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4728
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4729
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4648, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4651, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %30, metadata !4654, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 -1, metadata !4655, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 -1, metadata !4656, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* null, metadata !4657, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %14, metadata !4658, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 0, metadata !4659, metadata !DIExpression()), !dbg !4730
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4731
  call void @llvm.dbg.value(metadata i8* %39, metadata !4587, metadata !DIExpression()), !dbg !4716
  %40 = load i24, i24* %15, align 8, !dbg !4732
  %41 = and i24 %40, 256, !dbg !4732
  %42 = icmp eq i24 %41, 0, !dbg !4732
  br i1 %42, label %51, label %43, !dbg !4734

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %44, metadata !4588, metadata !DIExpression()), !dbg !4716
  %45 = bitcast i8* %27 to i32*, !dbg !4735
  %46 = load i32, i32* %45, align 4, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %46, metadata !4655, metadata !DIExpression()), !dbg !4730
  %47 = icmp slt i32 %46, 0, !dbg !4737
  br i1 %47, label %48, label %56, !dbg !4739

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4740
  store i24 %49, i24* %15, align 8, !dbg !4740
  %50 = sub nsw i32 0, %46, !dbg !4742
  call void @llvm.dbg.value(metadata i32 %50, metadata !4655, metadata !DIExpression()), !dbg !4730
  br label %56, !dbg !4743

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4744
  %53 = icmp eq i24 %52, 0, !dbg !4744
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4746
  br label %56, !dbg !4746

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4747
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4730
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4588, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %58, metadata !4655, metadata !DIExpression()), !dbg !4730
  %60 = and i24 %57, 1024, !dbg !4747
  %61 = icmp eq i24 %60, 0, !dbg !4747
  br i1 %61, label %69, label %62, !dbg !4748

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %63, metadata !4588, metadata !DIExpression()), !dbg !4716
  %64 = bitcast i8* %59 to i32*, !dbg !4749
  %65 = load i32, i32* %64, align 4, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %65, metadata !4660, metadata !DIExpression()), !dbg !4750
  %66 = icmp slt i32 %65, 0, !dbg !4751
  br i1 %66, label %67, label %74, !dbg !4753

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4754
  store i24 %68, i24* %15, align 8, !dbg !4754
  br label %74, !dbg !4756

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4757
  %71 = icmp eq i24 %70, 0, !dbg !4757
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4759
  br label %74, !dbg !4759

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4760
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4730
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4730
  call void @llvm.dbg.value(metadata i8* %77, metadata !4588, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %76, metadata !4656, metadata !DIExpression()), !dbg !4730
  store i32 0, i32* %16, align 4, !dbg !4761
  store i32 0, i32* %17, align 8, !dbg !4762
  %78 = lshr i24 %75, 16, !dbg !4760
  call void @llvm.dbg.value(metadata i24 %78, metadata !4663, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4730
  %79 = lshr i24 %75, 11, !dbg !4763
  %80 = and i24 %79, 15, !dbg !4763
  %81 = zext i24 %80 to i32, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %81, metadata !4664, metadata !DIExpression()), !dbg !4730
  %82 = trunc i24 %78 to i3, !dbg !4764
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4764

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4765

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4768
  call void @llvm.dbg.value(metadata i8* %85, metadata !4588, metadata !DIExpression()), !dbg !4716
  %86 = bitcast i8* %77 to i32*, !dbg !4768
  %87 = load i32, i32* %86, align 4, !dbg !4768
  %88 = sext i32 %87 to i64, !dbg !4768
  store i64 %88, i64* %20, align 8, !dbg !4770
  br label %115, !dbg !4771

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4772
  call void @llvm.dbg.value(metadata i8* %90, metadata !4588, metadata !DIExpression()), !dbg !4716
  %91 = bitcast i8* %77 to i32*, !dbg !4772
  %92 = load i32, i32* %91, align 4, !dbg !4772
  %93 = sext i32 %92 to i64, !dbg !4772
  store i64 %93, i64* %20, align 8, !dbg !4775
  br label %115, !dbg !4776

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4777
  %96 = add i32 %95, 7, !dbg !4777
  %97 = and i32 %96, -8, !dbg !4777
  %98 = inttoptr i32 %97 to i8*, !dbg !4777
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4777
  call void @llvm.dbg.value(metadata i8* %99, metadata !4588, metadata !DIExpression()), !dbg !4716
  %100 = inttoptr i32 %97 to i64*, !dbg !4777
  %101 = load i64, i64* %100, align 8, !dbg !4777
  store i64 %101, i64* %20, align 8, !dbg !4778
  br label %115, !dbg !4779

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4780
  %104 = add i32 %103, 7, !dbg !4780
  %105 = and i32 %104, -8, !dbg !4780
  %106 = inttoptr i32 %105 to i8*, !dbg !4780
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %107, metadata !4588, metadata !DIExpression()), !dbg !4716
  %108 = inttoptr i32 %105 to i64*, !dbg !4780
  %109 = load i64, i64* %108, align 8, !dbg !4780
  store i64 %109, i64* %20, align 8, !dbg !4781
  br label %115, !dbg !4782

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %111, metadata !4588, metadata !DIExpression()), !dbg !4716
  %112 = bitcast i8* %77 to i32*, !dbg !4783
  %113 = load i32, i32* %112, align 4, !dbg !4783
  %114 = sext i32 %113 to i64, !dbg !4784
  store i64 %114, i64* %20, align 8, !dbg !4785
  br label %115, !dbg !4786

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4787
  call void @llvm.dbg.value(metadata i8* %117, metadata !4588, metadata !DIExpression()), !dbg !4716
  %118 = trunc i24 %79 to i4, !dbg !4788
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4788

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4789
  %121 = ashr exact i64 %120, 56, !dbg !4789
  store i64 %121, i64* %20, align 8, !dbg !4792
  br label %177, !dbg !4793

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4794
  %124 = ashr exact i64 %123, 48, !dbg !4794
  store i64 %124, i64* %20, align 8, !dbg !4797
  br label %177, !dbg !4798

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4799

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %127, metadata !4588, metadata !DIExpression()), !dbg !4716
  %128 = bitcast i8* %77 to i32*, !dbg !4802
  %129 = load i32, i32* %128, align 4, !dbg !4802
  %130 = zext i32 %129 to i64, !dbg !4802
  store i64 %130, i64* %20, align 8, !dbg !4804
  br label %157, !dbg !4805

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %132, metadata !4588, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8* %132, metadata !4588, metadata !DIExpression()), !dbg !4716
  %133 = bitcast i8* %77 to i32*, !dbg !4806
  %134 = load i32, i32* %133, align 4, !dbg !4806
  %135 = zext i32 %134 to i64, !dbg !4806
  store i64 %135, i64* %20, align 8, !dbg !4806
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4808
  %138 = add i32 %137, 7, !dbg !4808
  %139 = and i32 %138, -8, !dbg !4808
  %140 = inttoptr i32 %139 to i8*, !dbg !4808
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4808
  call void @llvm.dbg.value(metadata i8* %141, metadata !4588, metadata !DIExpression()), !dbg !4716
  %142 = inttoptr i32 %139 to i64*, !dbg !4808
  %143 = load i64, i64* %142, align 8, !dbg !4808
  store i64 %143, i64* %20, align 8, !dbg !4809
  br label %157, !dbg !4810

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4811
  %146 = add i32 %145, 7, !dbg !4811
  %147 = and i32 %146, -8, !dbg !4811
  %148 = inttoptr i32 %147 to i8*, !dbg !4811
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4811
  call void @llvm.dbg.value(metadata i8* %149, metadata !4588, metadata !DIExpression()), !dbg !4716
  %150 = inttoptr i32 %147 to i64*, !dbg !4811
  %151 = load i64, i64* %150, align 8, !dbg !4811
  store i64 %151, i64* %20, align 8, !dbg !4812
  br label %157, !dbg !4813

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %153, metadata !4588, metadata !DIExpression()), !dbg !4716
  %154 = bitcast i8* %77 to i32*, !dbg !4814
  %155 = load i32, i32* %154, align 4, !dbg !4814
  %156 = zext i32 %155 to i64, !dbg !4815
  store i64 %156, i64* %20, align 8, !dbg !4816
  br label %157, !dbg !4817

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4818
  call void @llvm.dbg.value(metadata i8* %159, metadata !4588, metadata !DIExpression()), !dbg !4716
  %160 = trunc i24 %79 to i4, !dbg !4819
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4819

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4820
  store i64 %162, i64* %20, align 8, !dbg !4823
  br label %177, !dbg !4824

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4825
  store i64 %164, i64* %20, align 8, !dbg !4828
  br label %177, !dbg !4829

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4830
  %167 = add i32 %166, 7, !dbg !4830
  %168 = and i32 %167, -8, !dbg !4830
  %169 = inttoptr i32 %168 to i8*, !dbg !4830
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4830
  call void @llvm.dbg.value(metadata i8* %170, metadata !4588, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8* %170, metadata !4588, metadata !DIExpression()), !dbg !4716
  %171 = inttoptr i32 %168 to double*, !dbg !4830
  %172 = load double, double* %171, align 8, !dbg !4830
  store double %172, double* %19, align 8, !dbg !4830
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %174, metadata !4588, metadata !DIExpression()), !dbg !4716
  %175 = bitcast i8* %77 to i8**, !dbg !4834
  %176 = load i8*, i8** %175, align 4, !dbg !4834
  store i8* %176, i8** %18, align 8, !dbg !4837
  br label %177, !dbg !4838

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4730
  call void @llvm.dbg.value(metadata i8* %178, metadata !4588, metadata !DIExpression()), !dbg !4716
  %179 = and i24 %75, 3, !dbg !4839
  %180 = icmp eq i24 %179, 0, !dbg !4839
  br i1 %180, label %185, label %181, !dbg !4839

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %182, metadata !4665, metadata !DIExpression()), !dbg !4841
  %183 = icmp slt i32 %182, 0, !dbg !4842
  %184 = add i32 %182, %29, !dbg !4840
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4844
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4845

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %188, metadata !4669, metadata !DIExpression()), !dbg !4847
  %189 = icmp slt i32 %188, 0, !dbg !4848
  %190 = add i32 %29, 1, !dbg !4846
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %192, metadata !4657, metadata !DIExpression()), !dbg !4730
  %193 = icmp sgt i32 %76, -1, !dbg !4851
  br i1 %193, label %194, label %196, !dbg !4853

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %195, metadata !4672, metadata !DIExpression()), !dbg !4856
  br label %241, !dbg !4857

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %197, metadata !4672, metadata !DIExpression()), !dbg !4856
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4657, metadata !DIExpression()), !dbg !4730
  %199 = load i64, i64* %20, align 8, !dbg !4860
  %200 = trunc i64 %199 to i8, !dbg !4861
  store i8 %200, i8* %10, align 1, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %23, metadata !4658, metadata !DIExpression()), !dbg !4730
  br label %245, !dbg !4863

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4864
  %203 = icmp eq i24 %202, 0, !dbg !4864
  %204 = trunc i24 %75 to i8, !dbg !4866
  %205 = shl i8 %204, 1, !dbg !4866
  %206 = and i8 %205, 32, !dbg !4866
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4866
  call void @llvm.dbg.value(metadata i8 %207, metadata !4659, metadata !DIExpression()), !dbg !4730
  %208 = load i64, i64* %20, align 8, !dbg !4867
  call void @llvm.dbg.value(metadata i64 %208, metadata !4595, metadata !DIExpression()), !dbg !4716
  %209 = icmp slt i64 %208, 0, !dbg !4868
  br i1 %209, label %210, label %212, !dbg !4870

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4659, metadata !DIExpression()), !dbg !4730
  %211 = sub nsw i64 0, %208, !dbg !4871
  store i64 %211, i64* %20, align 8, !dbg !4873
  br label %212, !dbg !4874

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4730
  call void @llvm.dbg.value(metadata i8 %213, metadata !4659, metadata !DIExpression()), !dbg !4730
  %214 = load i64, i64* %20, align 8, !dbg !4875
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %215, metadata !4657, metadata !DIExpression()), !dbg !4730
  br label %216, !dbg !4877

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4878
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4879
  call void @llvm.dbg.value(metadata i8* %218, metadata !4657, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 %217, metadata !4659, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.label(metadata !4715), !dbg !4880
  %219 = icmp sgt i32 %76, -1, !dbg !4881
  br i1 %219, label %222, label %220, !dbg !4882

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4883
  br label %245, !dbg !4882

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4885
  %224 = sub i32 %22, %223, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %224, metadata !4674, metadata !DIExpression()), !dbg !4886
  %225 = load i24, i24* %15, align 8, !dbg !4887
  %226 = and i24 %225, -65, !dbg !4887
  store i24 %226, i24* %15, align 8, !dbg !4887
  %227 = icmp ugt i32 %76, %224, !dbg !4888
  br i1 %227, label %228, label %245, !dbg !4890

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4891
  store i32 %229, i32* %16, align 4, !dbg !4893
  br label %245, !dbg !4894

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4895
  %232 = icmp eq i8* %231, null, !dbg !4897
  br i1 %232, label %245, label %233, !dbg !4898

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4899
  %235 = zext i32 %234 to i64, !dbg !4899
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4901
  call void @llvm.dbg.value(metadata i8* %236, metadata !4657, metadata !DIExpression()), !dbg !4730
  %237 = load i24, i24* %15, align 8, !dbg !4902
  %238 = or i24 %237, 1048576, !dbg !4902
  store i24 %238, i24* %15, align 8, !dbg !4902
  store i8 120, i8* %21, align 1, !dbg !4903
  br label %216, !dbg !4904

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4905
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4908
  br label %363, !dbg !4909

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %242, metadata !4672, metadata !DIExpression()), !dbg !4856
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4911
  call void @llvm.dbg.value(metadata i32 -1, metadata !4656, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %29, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8* %192, metadata !4657, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8* %243, metadata !4658, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 0, metadata !4659, metadata !DIExpression()), !dbg !4730
  %244 = icmp eq i8* %192, null, !dbg !4912
  br i1 %244, label %363, label %245, !dbg !4914, !llvm.loop !4726

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4883
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata i32 0, metadata !4678, metadata !DIExpression()), !dbg !4730
  %250 = zext i8 %249 to i32, !dbg !4915
  %251 = icmp eq i8 %249, 0, !dbg !4917
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata i32 undef, metadata !4677, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata i32 undef, metadata !4677, metadata !DIExpression()), !dbg !4730
  %252 = icmp sgt i32 %58, 0, !dbg !4918
  br i1 %252, label %253, label %302, !dbg !4919

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4883
  %255 = icmp eq i24 %254, 0, !dbg !4883
  %256 = ptrtoint i8* %248 to i32, !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  %257 = ptrtoint i8* %247 to i32, !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  %258 = xor i1 %251, true, !dbg !4921
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  %259 = sext i1 %258 to i32, !dbg !4921
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  %260 = lshr i24 %246, 19, !dbg !4922
  %261 = and i24 %260, 1, !dbg !4922
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4922
  %263 = zext i24 %262 to i32, !dbg !4922
  %264 = add i32 %257, %259, !dbg !4922
  %265 = add i32 %256, %263, !dbg !4922
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  %266 = and i24 %246, 4194304, !dbg !4923
  %267 = icmp eq i24 %266, 0, !dbg !4923
  %268 = load i32, i32* %16, align 4, !dbg !4925
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4730
  call void @llvm.dbg.value(metadata i32 undef, metadata !4677, metadata !DIExpression()), !dbg !4730
  %269 = load i32, i32* %17, align 8, !dbg !4926
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4677, metadata !DIExpression()), !dbg !4730
  %271 = add i32 %264, %58, !dbg !4926
  %272 = add i32 %265, %268, !dbg !4926
  %273 = add i32 %272, %270, !dbg !4927
  %274 = sub i32 %271, %273, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %274, metadata !4655, metadata !DIExpression()), !dbg !4730
  %275 = and i24 %246, 4, !dbg !4928
  %276 = icmp eq i24 %275, 0, !dbg !4928
  br i1 %276, label %277, label %302, !dbg !4929

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4679, metadata !DIExpression()), !dbg !4930
  %278 = and i24 %246, 64, !dbg !4931
  %279 = icmp eq i24 %278, 0, !dbg !4931
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4932
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4932
  %282 = select i1 %279, i32 32, i32 48, !dbg !4932
  br i1 %280, label %287, label %283, !dbg !4932

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %284, metadata !4684, metadata !DIExpression()), !dbg !4934
  %285 = icmp slt i32 %284, 0, !dbg !4935
  %286 = add i32 %29, 1, !dbg !4933
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4730
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %290, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i8 undef, metadata !4679, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8 %288, metadata !4659, metadata !DIExpression()), !dbg !4730
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4937
  %292 = add i32 %291, -1, !dbg !4937
  br label %293, !dbg !4937

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4938
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %295, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %294, metadata !4655, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i32 %294, metadata !4655, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4730
  %296 = icmp sgt i32 %294, 0, !dbg !4939
  br i1 %296, label %297, label %302, !dbg !4937

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %298, metadata !4655, metadata !DIExpression()), !dbg !4730
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %299, metadata !4690, metadata !DIExpression()), !dbg !4942
  %300 = icmp slt i32 %299, 0, !dbg !4943
  %301 = add i32 %295, 1, !dbg !4941
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %300, label %361, label %293, !llvm.loop !4945

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4730
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4730
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %305, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %304, metadata !4655, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.value(metadata i8 %303, metadata !4659, metadata !DIExpression()), !dbg !4730
  %306 = icmp eq i8 %303, 0, !dbg !4947
  br i1 %306, label %312, label %307, !dbg !4948

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4949
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %309, metadata !4693, metadata !DIExpression()), !dbg !4951
  %310 = icmp slt i32 %309, 0, !dbg !4952
  %311 = add i32 %305, 1, !dbg !4950
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %313, metadata !4594, metadata !DIExpression()), !dbg !4716
  %314 = lshr i24 %246, 20, !dbg !4954
  %315 = lshr i24 %246, 19, !dbg !4955
  %316 = or i24 %314, %315, !dbg !4956
  %317 = and i24 %316, 1, !dbg !4956
  %318 = icmp eq i24 %317, 0, !dbg !4956
  br i1 %318, label %323, label %319, !dbg !4957

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4958
  call void @llvm.dbg.value(metadata i32 %320, metadata !4697, metadata !DIExpression()), !dbg !4959
  %321 = icmp slt i32 %320, 0, !dbg !4960
  %322 = add i32 %313, 1, !dbg !4958
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %324, metadata !4594, metadata !DIExpression()), !dbg !4716
  %325 = and i24 %246, 1048576, !dbg !4962
  %326 = icmp eq i24 %325, 0, !dbg !4962
  br i1 %326, label %333, label %327, !dbg !4963

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4964
  %329 = zext i8 %328 to i32, !dbg !4964
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %330, metadata !4703, metadata !DIExpression()), !dbg !4965
  %331 = icmp slt i32 %330, 0, !dbg !4966
  %332 = add i32 %324, 1, !dbg !4964
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %334, metadata !4594, metadata !DIExpression()), !dbg !4716
  %335 = load i32, i32* %16, align 4, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %335, metadata !4678, metadata !DIExpression()), !dbg !4730
  br label %336, !dbg !4969

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4970
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %338, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %337, metadata !4678, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4730
  %339 = icmp sgt i32 %337, 0, !dbg !4971
  br i1 %339, label %340, label %345, !dbg !4969

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %341, metadata !4678, metadata !DIExpression()), !dbg !4730
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %342, metadata !4707, metadata !DIExpression()), !dbg !4974
  %343 = icmp slt i32 %342, 0, !dbg !4975
  %344 = add i32 %338, 1, !dbg !4973
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %343, label %361, label %336, !llvm.loop !4977

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %346, metadata !4710, metadata !DIExpression()), !dbg !4980
  %347 = icmp slt i32 %346, 0, !dbg !4981
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %349, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %304, metadata !4655, metadata !DIExpression()), !dbg !4730
  %350 = icmp sgt i32 %304, 0, !dbg !4983
  br i1 %350, label %351, label %363, !dbg !4984

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4984
  %353 = add i32 %352, %338, !dbg !4984
  br label %354, !dbg !4984

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %355, metadata !4655, metadata !DIExpression()), !dbg !4730
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %356, metadata !4712, metadata !DIExpression()), !dbg !4986
  %357 = icmp slt i32 %356, 0, !dbg !4987
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4989
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %359, metadata !4655, metadata !DIExpression()), !dbg !4730
  %360 = icmp sgt i32 %355, 1, !dbg !4983
  br i1 %360, label %354, label %363, !dbg !4984, !llvm.loop !4990

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4727
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4720
  call void @llvm.dbg.value(metadata i32 %364, metadata !4594, metadata !DIExpression()), !dbg !4716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4727
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4716
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4992
  ret i32 %366, !dbg !4992
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !4993 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4997, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i8* %1, metadata !4998, metadata !DIExpression()), !dbg !4999
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5000
  store i24 0, i24* %3, align 4, !dbg !5000
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5000
  store i8 0, i8* %4, align 1, !dbg !5000
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5000
  store i32 0, i32* %5, align 4, !dbg !5000
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5000
  store i32 0, i32* %6, align 4, !dbg !5000
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5001
  call void @llvm.dbg.value(metadata i8* %7, metadata !4998, metadata !DIExpression()), !dbg !4999
  %8 = load i8, i8* %7, align 1, !dbg !5002
  %9 = icmp eq i8 %8, 37, !dbg !5004
  br i1 %9, label %10, label %12, !dbg !5005

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5006
  call void @llvm.dbg.value(metadata i8* %11, metadata !4998, metadata !DIExpression()), !dbg !4999
  store i8 37, i8* %4, align 1, !dbg !5008
  br label %18, !dbg !5009

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %13, metadata !4998, metadata !DIExpression()), !dbg !4999
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %14, metadata !4998, metadata !DIExpression()), !dbg !4999
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5012
  call void @llvm.dbg.value(metadata i8* %15, metadata !4998, metadata !DIExpression()), !dbg !4999
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5013
  call void @llvm.dbg.value(metadata i8* %16, metadata !4998, metadata !DIExpression()), !dbg !4999
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %17, metadata !4998, metadata !DIExpression()), !dbg !4999
  br label %18, !dbg !5015

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4999
  ret i8* %19, !dbg !5016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5017 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5021, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %1, metadata !5022, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %2, metadata !5023, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %3, metadata !5024, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i32 0, metadata !5025, metadata !DIExpression()), !dbg !5028
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5029

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5030
  call void @llvm.dbg.value(metadata i32 %9, metadata !5025, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i8* %8, metadata !5023, metadata !DIExpression()), !dbg !5028
  %10 = icmp ult i8* %8, %3, !dbg !5031
  br i1 %10, label %11, label %13, !dbg !5032

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5033
  br label %17, !dbg !5032

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5034

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5035
  %16 = icmp eq i8 %15, 0, !dbg !5034
  br i1 %16, label %24, label %17, !dbg !5029

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5033
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5036
  call void @llvm.dbg.value(metadata i8* %19, metadata !5023, metadata !DIExpression()), !dbg !5028
  %20 = zext i8 %18 to i32, !dbg !5037
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %21, metadata !5026, metadata !DIExpression()), !dbg !5039
  %22 = icmp slt i32 %21, 0, !dbg !5040
  %23 = add i32 %9, 1, !dbg !5042
  call void @llvm.dbg.value(metadata i32 undef, metadata !5025, metadata !DIExpression()), !dbg !5028
  br i1 %22, label %24, label %7, !llvm.loop !5043

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5028
  ret i32 %25, !dbg !5045
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !5046 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5050, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5051, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i8* %2, metadata !5052, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i8* %3, metadata !5053, metadata !DIExpression()), !dbg !5060
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5061
  %6 = load i8, i8* %5, align 1, !dbg !5061
  %7 = zext i8 %6 to i32, !dbg !5062
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5063
  %9 = icmp eq i32 %8, 0, !dbg !5063
  call void @llvm.dbg.value(metadata i1 %9, metadata !5054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5060
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5064
  call void @llvm.dbg.value(metadata i32 %10, metadata !5055, metadata !DIExpression()), !dbg !5060
  %11 = ptrtoint i8* %3 to i32, !dbg !5065
  %12 = ptrtoint i8* %2 to i32, !dbg !5065
  %13 = sub i32 %11, %12, !dbg !5065
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %14, metadata !5057, metadata !DIExpression()), !dbg !5060
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5067

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5060
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5050, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i8* %18, metadata !5057, metadata !DIExpression()), !dbg !5060
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5068
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %25, metadata !5058, metadata !DIExpression()), !dbg !5070
  %26 = icmp ult i32 %25, 10, !dbg !5071
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5072
  %28 = add i32 %27, %25, !dbg !5070
  %29 = trunc i32 %28 to i8, !dbg !5072
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %30, metadata !5057, metadata !DIExpression()), !dbg !5060
  store i8 %29, i8* %30, align 1, !dbg !5074
  call void @llvm.dbg.value(metadata i64 %22, metadata !5050, metadata !DIExpression()), !dbg !5060
  %31 = icmp uge i64 %19, %15, !dbg !5075
  %32 = icmp ugt i8* %30, %2, !dbg !5076
  %33 = and i1 %31, %32, !dbg !5076
  br i1 %33, label %17, label %34, !dbg !5077, !llvm.loop !5078

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5080
  %36 = load i24, i24* %35, align 4, !dbg !5080
  %37 = and i24 %36, 32, !dbg !5080
  %38 = icmp eq i24 %37, 0, !dbg !5080
  br i1 %38, label %44, label %39, !dbg !5082

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5083

40:                                               ; preds = %39
  br label %41, !dbg !5085

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5089
  store i24 %43, i24* %35, align 4, !dbg !5089
  br label %44, !dbg !5090

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5090
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !5091 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5097, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %1, metadata !5098, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %2, metadata !5099, metadata !DIExpression()), !dbg !5100
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %5 = load i24, i24* %4, align 4, !dbg !5101
  %6 = lshr i24 %5, 11, !dbg !5101
  %7 = and i24 %6, 15, !dbg !5101
  %8 = zext i24 %7 to i32, !dbg !5101
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5102

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5103
  store i32 %2, i32* %10, align 4, !dbg !5105
  br label %28, !dbg !5106

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5107
  store i8 %12, i8* %1, align 1, !dbg !5108
  br label %28, !dbg !5109

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5110
  %15 = bitcast i8* %1 to i16*, !dbg !5111
  store i16 %14, i16* %15, align 2, !dbg !5112
  br label %28, !dbg !5113

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5114
  store i32 %2, i32* %17, align 4, !dbg !5115
  br label %28, !dbg !5116

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5117
  %20 = bitcast i8* %1 to i64*, !dbg !5118
  store i64 %19, i64* %20, align 8, !dbg !5119
  br label %28, !dbg !5120

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5121
  %23 = bitcast i8* %1 to i64*, !dbg !5122
  store i64 %22, i64* %23, align 8, !dbg !5123
  br label %28, !dbg !5124

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5125
  store i32 %2, i32* %25, align 4, !dbg !5126
  br label %28, !dbg !5127

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5128
  store i32 %2, i32* %27, align 4, !dbg !5129
  br label %28, !dbg !5130

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5131
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5135, metadata !DIExpression()), !dbg !5136
  %2 = add i32 %0, -65, !dbg !5137
  %3 = icmp ult i32 %2, 26, !dbg !5138
  %4 = zext i1 %3 to i32, !dbg !5138
  ret i32 %4, !dbg !5139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5140 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5144, metadata !DIExpression()), !dbg !5145
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5146

2:                                                ; preds = %1
  br label %4, !dbg !5147

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5149

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5150
  ret i32 %5, !dbg !5151
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !5152 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5154, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8* %1, metadata !5155, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8 1, metadata !5156, metadata !DIExpression()), !dbg !5157
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5158

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8* %5, metadata !5155, metadata !DIExpression()), !dbg !5157
  %6 = load i8, i8* %5, align 1, !dbg !5159
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5161

7:                                                ; preds = %4
  br label %11, !dbg !5162

8:                                                ; preds = %4
  br label %11, !dbg !5164

9:                                                ; preds = %4
  br label %11, !dbg !5165

10:                                               ; preds = %4
  br label %11, !dbg !5166

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5167
  %14 = or i24 %13, %12, !dbg !5167
  store i24 %14, i24* %3, align 4, !dbg !5167
  call void @llvm.dbg.value(metadata i8 poison, metadata !5156, metadata !DIExpression()), !dbg !5157
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5155, metadata !DIExpression()), !dbg !5157
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.value(metadata i8* %15, metadata !5155, metadata !DIExpression()), !dbg !5157
  %17 = load i24, i24* %3, align 4, !dbg !5168
  %18 = and i24 %17, 68, !dbg !5170
  %19 = icmp eq i24 %18, 68, !dbg !5170
  br i1 %19, label %20, label %22, !dbg !5170

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5171
  store i24 %21, i24* %3, align 4, !dbg !5171
  br label %22, !dbg !5173

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5174
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5175 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5177, metadata !DIExpression()), !dbg !5181
  call void @llvm.dbg.value(metadata i8* %1, metadata !5178, metadata !DIExpression()), !dbg !5181
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5182
  %5 = load i24, i24* %4, align 4, !dbg !5183
  %6 = or i24 %5, 128, !dbg !5183
  store i24 %6, i24* %4, align 4, !dbg !5183
  call void @llvm.dbg.value(metadata i8* %1, metadata !5178, metadata !DIExpression()), !dbg !5181
  %7 = load i8, i8* %1, align 1, !dbg !5184
  %8 = icmp eq i8 %7, 42, !dbg !5186
  br i1 %8, label %9, label %12, !dbg !5187

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5188
  store i24 %10, i24* %4, align 4, !dbg !5188
  call void @llvm.dbg.value(metadata i8* %1, metadata !5178, metadata !DIExpression()), !dbg !5181
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5190
  call void @llvm.dbg.value(metadata i8* %11, metadata !5178, metadata !DIExpression()), !dbg !5181
  store i8* %11, i8** %3, align 4, !dbg !5190
  br label %29, !dbg !5191

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5179, metadata !DIExpression()), !dbg !5181
  call void @llvm.dbg.value(metadata i8** %3, metadata !5178, metadata !DIExpression(DW_OP_deref)), !dbg !5181
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5192
  call void @llvm.dbg.value(metadata i32 %13, metadata !5180, metadata !DIExpression()), !dbg !5181
  %14 = load i8*, i8** %3, align 4, !dbg !5193
  call void @llvm.dbg.value(metadata i8* %14, metadata !5178, metadata !DIExpression()), !dbg !5181
  %15 = icmp eq i8* %14, %1, !dbg !5195
  br i1 %15, label %29, label %16, !dbg !5196

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5197
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5199
  store i32 %13, i32* %18, align 4, !dbg !5200
  %19 = lshr i32 %13, 31, !dbg !5201
  %20 = lshr i24 %17, 1, !dbg !5202
  %21 = and i24 %20, 1, !dbg !5202
  %22 = zext i24 %21 to i32, !dbg !5202
  %23 = or i32 %19, %22, !dbg !5202
  %24 = trunc i32 %23 to i24, !dbg !5202
  %25 = shl nuw nsw i24 %24, 1, !dbg !5202
  %26 = and i24 %17, -131, !dbg !5202
  %27 = or i24 %26, 128, !dbg !5202
  %28 = or i24 %25, %27, !dbg !5202
  store i24 %28, i24* %4, align 4, !dbg !5202
  br label %29, !dbg !5203

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5181
  ret i8* %30, !dbg !5204
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5205 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5207, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.value(metadata i8* %1, metadata !5208, metadata !DIExpression()), !dbg !5210
  %4 = load i8, i8* %1, align 1, !dbg !5211
  %5 = icmp eq i8 %4, 46, !dbg !5212
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5213
  %7 = load i24, i24* %6, align 4, !dbg !5214
  %8 = select i1 %5, i24 512, i24 0, !dbg !5214
  %9 = and i24 %7, -513, !dbg !5214
  %10 = or i24 %9, %8, !dbg !5214
  store i24 %10, i24* %6, align 4, !dbg !5214
  br i1 %5, label %11, label %32, !dbg !5215

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5208, metadata !DIExpression()), !dbg !5210
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5216
  call void @llvm.dbg.value(metadata i8* %12, metadata !5208, metadata !DIExpression()), !dbg !5210
  store i8* %12, i8** %3, align 4, !dbg !5216
  %13 = load i8, i8* %12, align 1, !dbg !5217
  %14 = icmp eq i8 %13, 42, !dbg !5219
  br i1 %14, label %15, label %18, !dbg !5220

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5221
  store i24 %16, i24* %6, align 4, !dbg !5221
  call void @llvm.dbg.value(metadata i8* %12, metadata !5208, metadata !DIExpression()), !dbg !5210
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5223
  call void @llvm.dbg.value(metadata i8* %17, metadata !5208, metadata !DIExpression()), !dbg !5210
  store i8* %17, i8** %3, align 4, !dbg !5223
  br label %32, !dbg !5224

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5208, metadata !DIExpression(DW_OP_deref)), !dbg !5210
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %19, metadata !5209, metadata !DIExpression()), !dbg !5210
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5226
  store i32 %19, i32* %20, align 4, !dbg !5227
  %21 = lshr i32 %19, 31, !dbg !5228
  %22 = load i24, i24* %6, align 4, !dbg !5229
  %23 = lshr i24 %22, 1, !dbg !5229
  %24 = and i24 %23, 1, !dbg !5229
  %25 = zext i24 %24 to i32, !dbg !5229
  %26 = or i32 %21, %25, !dbg !5229
  %27 = trunc i32 %26 to i24, !dbg !5229
  %28 = shl nuw nsw i24 %27, 1, !dbg !5229
  %29 = and i24 %22, -3, !dbg !5229
  %30 = or i24 %28, %29, !dbg !5229
  store i24 %30, i24* %6, align 4, !dbg !5229
  %31 = load i8*, i8** %3, align 4, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %31, metadata !5208, metadata !DIExpression()), !dbg !5210
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5210
  ret i8* %33, !dbg !5231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5232 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5236
  %3 = load i8, i8* %1, align 1, !dbg !5237
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5238

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %5, metadata !5235, metadata !DIExpression()), !dbg !5236
  %6 = load i8, i8* %5, align 1, !dbg !5242
  %7 = icmp eq i8 %6, 104, !dbg !5243
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5244
  %9 = load i24, i24* %8, align 4, !dbg !5244
  %10 = and i24 %9, -30721, !dbg !5244
  br i1 %7, label %11, label %14, !dbg !5245

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5246
  store i24 %12, i24* %8, align 4, !dbg !5246
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5248
  call void @llvm.dbg.value(metadata i8* %13, metadata !5235, metadata !DIExpression()), !dbg !5236
  br label %56, !dbg !5249

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5250
  store i24 %15, i24* %8, align 4, !dbg !5250
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5252
  call void @llvm.dbg.value(metadata i8* %17, metadata !5235, metadata !DIExpression()), !dbg !5236
  %18 = load i8, i8* %17, align 1, !dbg !5254
  %19 = icmp eq i8 %18, 108, !dbg !5255
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5256
  %21 = load i24, i24* %20, align 4, !dbg !5256
  %22 = and i24 %21, -30721, !dbg !5256
  br i1 %19, label %23, label %26, !dbg !5257

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5258
  store i24 %24, i24* %20, align 4, !dbg !5258
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5260
  call void @llvm.dbg.value(metadata i8* %25, metadata !5235, metadata !DIExpression()), !dbg !5236
  br label %56, !dbg !5261

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5262
  store i24 %27, i24* %20, align 4, !dbg !5262
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5264
  %30 = load i24, i24* %29, align 4, !dbg !5265
  %31 = and i24 %30, -30721, !dbg !5265
  %32 = or i24 %31, 10240, !dbg !5265
  store i24 %32, i24* %29, align 4, !dbg !5265
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %33, metadata !5235, metadata !DIExpression()), !dbg !5236
  br label %56, !dbg !5267

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5268
  %36 = load i24, i24* %35, align 4, !dbg !5269
  %37 = and i24 %36, -30721, !dbg !5269
  %38 = or i24 %37, 12288, !dbg !5269
  store i24 %38, i24* %35, align 4, !dbg !5269
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %39, metadata !5235, metadata !DIExpression()), !dbg !5236
  br label %56, !dbg !5271

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5272
  %42 = load i24, i24* %41, align 4, !dbg !5273
  %43 = and i24 %42, -30721, !dbg !5273
  %44 = or i24 %43, 14336, !dbg !5273
  store i24 %44, i24* %41, align 4, !dbg !5273
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5274
  call void @llvm.dbg.value(metadata i8* %45, metadata !5235, metadata !DIExpression()), !dbg !5236
  br label %56, !dbg !5275

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5276
  %48 = load i24, i24* %47, align 4, !dbg !5277
  %49 = and i24 %48, -30723, !dbg !5277
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5278
  call void @llvm.dbg.value(metadata i8* %50, metadata !5235, metadata !DIExpression()), !dbg !5236
  %51 = or i24 %49, 16386, !dbg !5279
  store i24 %51, i24* %47, align 4, !dbg !5279
  br label %56, !dbg !5280

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5281
  %54 = load i24, i24* %53, align 4, !dbg !5282
  %55 = and i24 %54, -30721, !dbg !5282
  store i24 %55, i24* %53, align 4, !dbg !5282
  br label %56, !dbg !5283

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5235, metadata !DIExpression()), !dbg !5236
  ret i8* %57, !dbg !5284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5285 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5287, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8 0, metadata !5289, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5292
  %3 = load i8, i8* %1, align 1, !dbg !5293
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5294
  store i8 %3, i8* %4, align 1, !dbg !5295
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5296

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5297

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5298
  %9 = load i24, i24* %8, align 4, !dbg !5298
  %10 = and i24 %9, -458753, !dbg !5298
  %11 = or i24 %10, %7, !dbg !5298
  call void @llvm.dbg.label(metadata !5290), !dbg !5299
  %12 = and i24 %9, 30720, !dbg !5300
  %13 = icmp eq i24 %12, 16384, !dbg !5300
  %14 = zext i1 %13 to i24, !dbg !5302
  %15 = or i24 %11, %14, !dbg !5302
  %16 = icmp eq i8 %3, 99, !dbg !5303
  br i1 %16, label %17, label %43, !dbg !5305

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5306
  %19 = icmp ne i24 %18, 0, !dbg !5306
  call void @llvm.dbg.value(metadata i1 %19, metadata !5289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5292
  br label %43, !dbg !5308

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5309
  %22 = load i24, i24* %21, align 4, !dbg !5310
  %23 = and i24 %22, -458753, !dbg !5310
  %24 = or i24 %23, 262144, !dbg !5310
  call void @llvm.dbg.value(metadata i8 1, metadata !5289, metadata !DIExpression()), !dbg !5292
  br label %43, !dbg !5311

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5314
  %27 = load i24, i24* %26, align 4, !dbg !5315
  %28 = and i24 %27, -458753, !dbg !5315
  %29 = or i24 %28, 196608, !dbg !5315
  %30 = and i24 %27, 30720, !dbg !5316
  %31 = icmp eq i24 %30, 16384, !dbg !5316
  br label %43, !dbg !5318

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5319
  %34 = load i24, i24* %33, align 4, !dbg !5320
  %35 = and i24 %34, -458753, !dbg !5320
  %36 = or i24 %35, 196608, !dbg !5320
  %37 = and i24 %34, 30720, !dbg !5321
  %38 = icmp ne i24 %37, 0, !dbg !5321
  br label %43, !dbg !5323

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5324
  %41 = load i24, i24* %40, align 4, !dbg !5325
  %42 = or i24 %41, 1, !dbg !5325
  br label %43, !dbg !5326

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5327
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5328
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %48, metadata !5288, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8 poison, metadata !5289, metadata !DIExpression()), !dbg !5292
  %49 = lshr i24 %44, 1, !dbg !5327
  %50 = and i24 %49, 1, !dbg !5327
  %51 = zext i24 %50 to i32, !dbg !5327
  %52 = or i32 %51, %47, !dbg !5327
  %53 = trunc i32 %52 to i24, !dbg !5327
  %54 = shl nuw nsw i24 %53, 1, !dbg !5327
  %55 = and i24 %44, -3, !dbg !5327
  %56 = or i24 %54, %55, !dbg !5327
  store i24 %56, i24* %46, align 4, !dbg !5327
  ret i8* %48, !dbg !5330
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !5331 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5336, metadata !DIExpression()), !dbg !5339
  %2 = load i8*, i8** %0, align 4, !dbg !5340
  call void @llvm.dbg.value(metadata i8* %2, metadata !5337, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i32 0, metadata !5338, metadata !DIExpression()), !dbg !5339
  %3 = load i8, i8* %2, align 1, !dbg !5341
  %4 = zext i8 %3 to i32, !dbg !5342
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5343
  %6 = icmp eq i32 %5, 0, !dbg !5344
  br i1 %6, label %19, label %7, !dbg !5344

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i8* %10, metadata !5337, metadata !DIExpression()), !dbg !5339
  %11 = mul i32 %9, 10, !dbg !5345
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5347
  call void @llvm.dbg.value(metadata i8* %12, metadata !5337, metadata !DIExpression()), !dbg !5339
  %13 = add i32 %11, -48, !dbg !5348
  %14 = add i32 %13, %8, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %14, metadata !5338, metadata !DIExpression()), !dbg !5339
  %15 = load i8, i8* %12, align 1, !dbg !5341
  %16 = zext i8 %15 to i32, !dbg !5342
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5343
  %18 = icmp eq i32 %17, 0, !dbg !5344
  br i1 %18, label %19, label %7, !dbg !5344, !llvm.loop !5350

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5339
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5339
  store i8* %20, i8** %0, align 4, !dbg !5352
  ret i32 %21, !dbg !5353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5356, metadata !DIExpression()), !dbg !5357
  %2 = add i32 %0, -48, !dbg !5358
  %3 = icmp ult i32 %2, 10, !dbg !5359
  %4 = zext i1 %3 to i32, !dbg !5359
  ret i32 %4, !dbg !5360
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5361 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5366, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %1, metadata !5367, metadata !DIExpression()), !dbg !5368
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5369, !srcloc !5371
  ret void, !dbg !5372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5373 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5375, metadata !DIExpression()), !dbg !5383
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5384
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5376, metadata !DIExpression()), !dbg !5385
  call void @llvm.va_start(i8* nonnull %3), !dbg !5386
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5387
  %5 = load i32, i32* %4, align 4, !dbg !5387
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5387
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5387
  call void @llvm.va_end(i8* nonnull %3), !dbg !5388
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5389
  ret void, !dbg !5389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5390 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,29\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,40\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_SCALABLE\0A\09.equ\09CONFIG_SCHED_SCALABLE,1\0A\09.type\09CONFIG_SCHED_SCALABLE,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MONITOR\0A\09.equ\09CONFIG_THREAD_MONITOR,1\0A\09.type\09CONFIG_THREAD_MONITOR,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_DEBUG_THREAD_INFO\0A\09.equ\09CONFIG_DEBUG_THREAD_INFO,1\0A\09.type\09CONFIG_DEBUG_THREAD_INFO,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5944, !srcloc !5945
  ret void, !dbg !5946
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5947 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5949, metadata !DIExpression()), !dbg !5951
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5952, !srcloc !5961
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %3, metadata !5958, metadata !DIExpression()) #23, !dbg !5962
  call void @llvm.dbg.value(metadata i32 undef, metadata !5959, metadata !DIExpression()) #23, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %3, metadata !5950, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.value(metadata i32 %3, metadata !5963, metadata !DIExpression()) #23, !dbg !5968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5970, !srcloc !5971
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5972
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !5973
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !5974
  ret i32 0, !dbg !5975
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #14 !dbg !5976 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5981, metadata !DIExpression()), !dbg !5983
  %2 = bitcast i32* %1 to i8*, !dbg !5984
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5984
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5982, metadata !DIExpression()), !dbg !5985
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5986
  %4 = or i32 %3, 268435456, !dbg !5986
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5986
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5987
  %6 = and i32 %5, 268435456, !dbg !5987
  store volatile i32 %6, i32* %1, align 4, !dbg !5988
  %7 = load volatile i32, i32* %1, align 4, !dbg !5989
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5990
  ret void, !dbg !5990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #15 !dbg !5991 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5994, metadata !DIExpression()), !dbg !5995
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5996
  %2 = and i32 %1, -6145, !dbg !5996
  %3 = or i32 %2, 2048, !dbg !5996
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5996
  ret void, !dbg !5997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6000, metadata !DIExpression()), !dbg !6001
  ret i32 0, !dbg !6002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6053, metadata !DIExpression()), !dbg !6054
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !6055
  ret void, !dbg !6056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6057 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6074, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6075, metadata !DIExpression()), !dbg !6077
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6078
  %4 = load i32, i32* %3, align 4, !dbg !6078
  call void @llvm.dbg.value(metadata i32 %4, metadata !6076, metadata !DIExpression()), !dbg !6077
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6079
  ret void, !dbg !6080
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6081 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6085, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.value(metadata i8* %0, metadata !6086, metadata !DIExpression()), !dbg !6088
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6089
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6089
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6087, metadata !DIExpression()), !dbg !6090
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6090
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6091
  %5 = bitcast i8* %4 to i32*, !dbg !6091
  %6 = load i32, i32* %5, align 4, !dbg !6091
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6092
  store i32 %6, i32* %7, align 4, !dbg !6093
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6094
  unreachable, !dbg !6095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6099, metadata !DIExpression()), !dbg !6100
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6101
  ret void, !dbg !6102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6107, metadata !DIExpression()), !dbg !6108
  %2 = icmp sgt i32 %0, -1, !dbg !6109
  br i1 %2, label %3, label %8, !dbg !6111

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6112, !srcloc !6114
  %4 = and i32 %0, 31, !dbg !6115
  %5 = shl nuw i32 1, %4, !dbg !6116
  %6 = lshr i32 %0, 5, !dbg !6117
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6118
  store volatile i32 %5, i32* %7, align 4, !dbg !6119
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6120, !srcloc !6121
  br label %8, !dbg !6122

8:                                                ; preds = %3, %1
  ret void, !dbg !6123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6126, metadata !DIExpression()), !dbg !6127
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6128
  ret void, !dbg !6129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6132, metadata !DIExpression()), !dbg !6133
  %2 = icmp sgt i32 %0, -1, !dbg !6134
  br i1 %2, label %3, label %8, !dbg !6136

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6137
  %5 = shl nuw i32 1, %4, !dbg !6139
  %6 = lshr i32 %0, 5, !dbg !6140
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6141
  store volatile i32 %5, i32* %7, align 4, !dbg !6142
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6143, !srcloc !6147
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6148, !srcloc !6151
  br label %8, !dbg !6152

8:                                                ; preds = %3, %1
  ret void, !dbg !6153
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6158, metadata !DIExpression()), !dbg !6159
  %2 = lshr i32 %0, 5, !dbg !6160
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6161
  %4 = load volatile i32, i32* %3, align 4, !dbg !6161
  %5 = and i32 %0, 31, !dbg !6162
  %6 = shl nuw i32 1, %5, !dbg !6162
  %7 = and i32 %4, %6, !dbg !6163
  ret i32 %7, !dbg !6164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6169, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.value(metadata i32 %1, metadata !6170, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.value(metadata i32 %2, metadata !6171, metadata !DIExpression()), !dbg !6172
  %4 = add i32 %1, 1, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %4, metadata !6170, metadata !DIExpression()), !dbg !6172
  %5 = icmp ult i32 %4, 16, !dbg !6176
  br i1 %5, label %7, label %6, !dbg !6179

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.34, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !6180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6180
  unreachable, !dbg !6180

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6182
  ret void, !dbg !6183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6188, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 %1, metadata !6189, metadata !DIExpression()), !dbg !6190
  %3 = trunc i32 %1 to i8, !dbg !6191
  %4 = shl i8 %3, 4, !dbg !6191
  %5 = and i32 %0, 15, !dbg !6193
  %6 = add nsw i32 %5, -4, !dbg !6193
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6193
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6193
  %9 = icmp slt i32 %0, 0, !dbg !6193
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6193
  store volatile i8 %4, i8* %10, align 1, !dbg !6191
  ret void, !dbg !6194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6195 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6197, metadata !DIExpression()), !dbg !6198
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6199
  ret void, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6201 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6203
  tail call void @z_arm_int_exit() #26, !dbg !6204
  ret void, !dbg !6205
}

; Function Attrs: optsize
declare !dbg !6206 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6207 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6209 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6211
  tail call void @z_bss_zero() #26, !dbg !6212
  tail call void @z_data_copy() #26, !dbg !6213
  tail call void @z_arm_interrupt_init() #26, !dbg !6214
  tail call void @z_cstart() #27, !dbg !6215
  unreachable, !dbg !6215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6216 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6217
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6218, !srcloc !6221
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6222, !srcloc !6225
  ret void, !dbg !6226
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6230, metadata !DIExpression()), !dbg !6231
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6232
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 0, !dbg !6233
  store i32 %0, i32* %3, align 8, !dbg !6234
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6235
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 1, !dbg !6236
  store i32 %4, i32* %5, align 4, !dbg !6237
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6238
  %7 = or i32 %6, 268435456, !dbg !6238
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6238
  call void @llvm.dbg.value(metadata i32 0, metadata !6239, metadata !DIExpression()) #23, !dbg !6242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6244, !srcloc !6245
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6246
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 10, i32 1, !dbg !6247
  %10 = load i32, i32* %9, align 4, !dbg !6247
  ret i32 %10, !dbg !6248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6370, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6371, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8* %2, metadata !6372, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6373, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8* %4, metadata !6374, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8* %5, metadata !6375, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i8* %6, metadata !6376, metadata !DIExpression()), !dbg !6378
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6379
  call void @llvm.dbg.value(metadata i8* %8, metadata !6377, metadata !DIExpression()), !dbg !6378
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6380
  %10 = bitcast i8* %9 to i32*, !dbg !6380
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6381
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6382
  %12 = bitcast i8* %8 to i32*, !dbg !6383
  store i32 %11, i32* %12, align 4, !dbg !6384
  %13 = ptrtoint i8* %4 to i32, !dbg !6385
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6386
  %15 = bitcast i8* %14 to i32*, !dbg !6386
  store i32 %13, i32* %15, align 4, !dbg !6387
  %16 = ptrtoint i8* %5 to i32, !dbg !6388
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6389
  %18 = bitcast i8* %17 to i32*, !dbg !6389
  store i32 %16, i32* %18, align 4, !dbg !6390
  %19 = ptrtoint i8* %6 to i32, !dbg !6391
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6392
  %21 = bitcast i8* %20 to i32*, !dbg !6392
  store i32 %19, i32* %21, align 4, !dbg !6393
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6394
  %23 = bitcast i8* %22 to i32*, !dbg !6394
  store i32 16777216, i32* %23, align 4, !dbg !6395
  %24 = ptrtoint i8* %8 to i32, !dbg !6396
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6397
  store i32 %24, i32* %25, align 8, !dbg !6398
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 10, i32 0, !dbg !6399
  store i32 0, i32* %26, align 8, !dbg !6400
  ret void, !dbg !6401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6407, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 %1, metadata !6408, metadata !DIExpression()), !dbg !6413
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6414
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6409, metadata !DIExpression()), !dbg !6413
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6415
  br i1 %4, label %19, label %5, !dbg !6417

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6412, metadata !DIExpression()), !dbg !6413
  %6 = icmp eq i32 %0, -22, !dbg !6418
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 8, i32 0, !dbg !6418
  %8 = load i32, i32* %7, align 8, !dbg !6418
  br i1 %6, label %16, label %9, !dbg !6420

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6418
  %11 = icmp ule i32 %10, %0, !dbg !6418
  %12 = icmp ugt i32 %8, %0, !dbg !6418
  %13 = and i1 %12, %11, !dbg !6418
  %14 = icmp ugt i32 %8, %1, !dbg !6418
  %15 = and i1 %14, %13, !dbg !6418
  br i1 %15, label %18, label %19, !dbg !6418

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6418
  br i1 %17, label %18, label %19, !dbg !6420

18:                                               ; preds = %9, %16
  br label %19, !dbg !6421

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6413
  ret i32 %20, !dbg !6423
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6428, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.value(metadata i8* %1, metadata !6429, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6430, metadata !DIExpression()), !dbg !6431
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6432
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6433
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6434, !srcloc !6435
  unreachable, !dbg !6436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6437 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6455, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.value(metadata i32 %1, metadata !6456, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.value(metadata i32 %2, metadata !6457, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6458, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.value(metadata i32 0, metadata !6459, metadata !DIExpression()), !dbg !6465
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6466
  call void @llvm.dbg.value(metadata i32 %8, metadata !6460, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6465
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6467
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6467
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6468
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6468
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6464, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 0, metadata !6470, metadata !DIExpression()) #23, !dbg !6473
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6475, !srcloc !6476
  call void @llvm.dbg.value(metadata i8* %6, metadata !6462, metadata !DIExpression(DW_OP_deref)), !dbg !6465
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6477
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6463, metadata !DIExpression()), !dbg !6465
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6478
  br i1 %11, label %12, label %13, !dbg !6481

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6482
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.40, i32 0, i32 0)) #26, !dbg !6482
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6482
  unreachable, !dbg !6482

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %14, metadata !6460, metadata !DIExpression()), !dbg !6465
  call void @llvm.dbg.value(metadata i8* %5, metadata !6461, metadata !DIExpression(DW_OP_deref)), !dbg !6465
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6485
  call void @llvm.dbg.value(metadata i32 %15, metadata !6459, metadata !DIExpression()), !dbg !6465
  %16 = load i8, i8* %5, align 1, !dbg !6486, !range !3998
  call void @llvm.dbg.value(metadata i8 %16, metadata !6461, metadata !DIExpression()), !dbg !6465
  %17 = icmp eq i8 %16, 0, !dbg !6486
  br i1 %17, label %18, label %35, !dbg !6488

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6489
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !6490
  %21 = load i8, i8* %6, align 1, !dbg !6491, !range !3998
  call void @llvm.dbg.value(metadata i8 %21, metadata !6462, metadata !DIExpression()), !dbg !6465
  %22 = icmp eq i8 %21, 0, !dbg !6491
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6493
  %24 = load i32, i32* %23, align 4, !dbg !6493
  br i1 %22, label %30, label %25, !dbg !6494

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6495
  %27 = icmp eq i32 %26, 0, !dbg !6498
  br i1 %27, label %28, label %34, !dbg !6499

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6500
  br label %32, !dbg !6502

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6503
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6493
  br label %34, !dbg !6505

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !6505
  br label %35, !dbg !6506

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6506
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6506
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6506
  ret void, !dbg !6506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #7 !dbg !6507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6512, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata i32 %1, metadata !6513, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata i32 %2, metadata !6514, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata i8* %3, metadata !6515, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata i8 0, metadata !6516, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6517, metadata !DIExpression()), !dbg !6518
  store i8 0, i8* %3, align 1, !dbg !6519
  %5 = icmp ult i32 %2, -16777216, !dbg !6520
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6522
  br i1 %8, label %16, label %9, !dbg !6522

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6523
  %11 = icmp eq i32 %10, 0, !dbg !6523
  br i1 %11, label %12, label %13, !dbg !6525

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6517, metadata !DIExpression()), !dbg !6518
  store i8 1, i8* %3, align 1, !dbg !6528
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6518
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6517, metadata !DIExpression()), !dbg !6518
  br label %16, !dbg !6531

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6518
  ret %struct.__esf* %17, !dbg !6532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6533 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6537, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i32 %1, metadata !6538, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i8* %2, metadata !6539, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.value(metadata i32 0, metadata !6540, metadata !DIExpression()), !dbg !6541
  store i8 0, i8* %2, align 1, !dbg !6542
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6543

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6544
  call void @llvm.dbg.value(metadata i32 %5, metadata !6540, metadata !DIExpression()), !dbg !6541
  br label %11, !dbg !6546

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6547
  call void @llvm.dbg.value(metadata i32 %7, metadata !6540, metadata !DIExpression()), !dbg !6541
  br label %11, !dbg !6548

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6549
  call void @llvm.dbg.value(metadata i32 0, metadata !6540, metadata !DIExpression()), !dbg !6541
  br label %11, !dbg !6550

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6551
  call void @llvm.dbg.value(metadata i32 0, metadata !6540, metadata !DIExpression()), !dbg !6541
  br label %11, !dbg !6552

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6553
  br label %11, !dbg !6554

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6556 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6560, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i8* %1, metadata !6561, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i8 0, i8* %1, align 1, !dbg !6564
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6565
  %4 = and i32 %3, 2, !dbg !6567
  %5 = icmp eq i32 %4, 0, !dbg !6568
  br i1 %5, label %6, label %35, !dbg !6569

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6570
  %8 = icmp sgt i32 %7, -1, !dbg !6572
  br i1 %8, label %9, label %35, !dbg !6573

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6574
  %11 = and i32 %10, 1073741824, !dbg !6576
  %12 = icmp eq i32 %11, 0, !dbg !6577
  br i1 %12, label %34, label %13, !dbg !6578

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6579
  br i1 %14, label %15, label %18, !dbg !6582

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6583
  %17 = load i32, i32* %16, align 4, !dbg !6583
  call void @llvm.dbg.value(metadata i32 %17, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %35, !dbg !6585

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6586
  %20 = and i32 %19, 255, !dbg !6588
  %21 = icmp eq i32 %20, 0, !dbg !6589
  br i1 %21, label %24, label %22, !dbg !6590

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6591
  call void @llvm.dbg.value(metadata i32 %23, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %35, !dbg !6593

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6594
  %26 = and i32 %25, 65280, !dbg !6596
  %27 = icmp eq i32 %26, 0, !dbg !6597
  br i1 %27, label %29, label %28, !dbg !6598

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6599
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %35, !dbg !6601

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6602
  %31 = icmp ult i32 %30, 65536, !dbg !6604
  br i1 %31, label %33, label %32, !dbg !6605

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !6606
  call void @llvm.dbg.value(metadata i32 0, metadata !6562, metadata !DIExpression()), !dbg !6563
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.44, i32 0, i32 0)) #26, !dbg !6608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6608
  unreachable, !dbg !6608

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.45, i32 0, i32 0)) #26, !dbg !6613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6613
  unreachable, !dbg !6613

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6563
  call void @llvm.dbg.value(metadata i32 %36, metadata !6562, metadata !DIExpression()), !dbg !6563
  ret i32 %36, !dbg !6618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6619 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6621, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 %1, metadata !6622, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8* %2, metadata !6623, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 0, metadata !6624, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 -22, metadata !6625, metadata !DIExpression()), !dbg !6634
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6635
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6637
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6639
  %7 = and i32 %6, 2, !dbg !6640
  %8 = icmp eq i32 %7, 0, !dbg !6641
  br i1 %8, label %19, label %9, !dbg !6642

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6643
  call void @llvm.dbg.value(metadata i32 %10, metadata !6626, metadata !DIExpression()), !dbg !6644
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6645
  %12 = and i32 %11, 128, !dbg !6647
  %13 = icmp eq i32 %12, 0, !dbg !6648
  br i1 %13, label %19, label %14, !dbg !6649

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6625, metadata !DIExpression()), !dbg !6634
  %15 = icmp eq i32 %1, 0, !dbg !6650
  br i1 %15, label %19, label %16, !dbg !6653

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6654
  %18 = and i32 %17, -129, !dbg !6654
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6654
  br label %19, !dbg !6656

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6634
  call void @llvm.dbg.value(metadata i32 %20, metadata !6625, metadata !DIExpression()), !dbg !6634
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6657
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  %23 = and i32 %22, 16, !dbg !6660
  %24 = icmp eq i32 %23, 0, !dbg !6660
  br i1 %24, label %25, label %29, !dbg !6661

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6662
  %27 = and i32 %26, 2, !dbg !6663
  %28 = icmp eq i32 %27, 0, !dbg !6663
  br i1 %28, label %43, label %29, !dbg !6664

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6665
  %31 = and i32 %30, 2048, !dbg !6666
  %32 = icmp eq i32 %31, 0, !dbg !6666
  br i1 %32, label %43, label %33, !dbg !6667

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !6668
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #26, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %35, metadata !6629, metadata !DIExpression()), !dbg !6670
  %36 = icmp eq i32 %35, 0, !dbg !6671
  br i1 %36, label %38, label %37, !dbg !6673

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !6674, metadata !DIExpression()) #23, !dbg !6677
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #23, !dbg !6680, !srcloc !6681
  call void @llvm.dbg.value(metadata i32 2, metadata !6624, metadata !DIExpression()), !dbg !6634
  br label %43, !dbg !6682

38:                                               ; preds = %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6683
  %40 = and i32 %39, 16, !dbg !6683
  %41 = icmp eq i32 %40, 0, !dbg !6683
  br i1 %41, label %43, label %42, !dbg !6687

42:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.41, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6688
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.42, i32 0, i32 0)) #26, !dbg !6688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6688
  unreachable, !dbg !6688

43:                                               ; preds = %37, %38, %29, %25
  %44 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %38 ], !dbg !6634
  call void @llvm.dbg.value(metadata i32 %44, metadata !6624, metadata !DIExpression()), !dbg !6634
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6690
  %46 = or i32 %45, 255, !dbg !6690
  store volatile i32 %46, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6690
  store i8 0, i8* %2, align 1, !dbg !6691
  ret i32 %44, !dbg !6692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6693 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6697, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i32 %0, metadata !6698, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i8* %1, metadata !6699, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.value(metadata i32 0, metadata !6700, metadata !DIExpression()), !dbg !6704
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6705
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6707
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6709
  %6 = and i32 %5, 512, !dbg !6710
  %7 = icmp eq i32 %6, 0, !dbg !6710
  br i1 %7, label %18, label %8, !dbg !6711

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %9, metadata !6701, metadata !DIExpression()), !dbg !6713
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6714
  %11 = and i32 %10, 32768, !dbg !6716
  %12 = icmp ne i32 %11, 0, !dbg !6717
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6718
  br i1 %14, label %15, label %18, !dbg !6718

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6719
  %17 = and i32 %16, -32769, !dbg !6719
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6719
  br label %18, !dbg !6723

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6724
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6726
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6728
  %22 = or i32 %21, 65280, !dbg !6728
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6728
  store i8 0, i8* %1, align 1, !dbg !6729
  ret void, !dbg !6730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6731 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6737, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.value(metadata i32 0, metadata !6738, metadata !DIExpression()), !dbg !6739
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6740
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6742
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6744
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6746
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6748
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6750
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  %8 = or i32 %7, -65536, !dbg !6752
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  ret void, !dbg !6753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !6754 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6758, metadata !DIExpression()), !dbg !6760
  call void @llvm.dbg.value(metadata i8* %0, metadata !6759, metadata !DIExpression()), !dbg !6760
  store i8 0, i8* %0, align 1, !dbg !6761
  ret void, !dbg !6762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6763 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6767, metadata !DIExpression()), !dbg !6770
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6771
  %3 = load i32, i32* %2, align 4, !dbg !6771
  %4 = inttoptr i32 %3 to i16*, !dbg !6772
  call void @llvm.dbg.value(metadata i16* %4, metadata !6768, metadata !DIExpression()), !dbg !6770
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6773
  %6 = or i32 %5, 256, !dbg !6773
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6773
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6774, !srcloc !6777
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6778, !srcloc !6781
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6782
  %8 = load i16, i16* %7, align 2, !dbg !6783
  call void @llvm.dbg.value(metadata i16 %8, metadata !6769, metadata !DIExpression()), !dbg !6770
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6784
  %10 = and i32 %9, -257, !dbg !6784
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6784
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6785, !srcloc !6777
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6787, !srcloc !6781
  %11 = icmp eq i16 %8, -8446, !dbg !6789
  ret i1 %11, !dbg !6791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6792 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6793
  %2 = or i32 %1, 16, !dbg !6793
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6793
  ret void, !dbg !6794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6795 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6798, metadata !DIExpression()), !dbg !6799
  br label %1, !dbg !6800

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6798, metadata !DIExpression()), !dbg !6799
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #24, !dbg !6802
  %3 = add nuw nsw i32 %2, 1, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %3, metadata !6798, metadata !DIExpression()), !dbg !6799
  %4 = icmp eq i32 %3, 45, !dbg !6806
  br i1 %4, label %5, label %1, !dbg !6800, !llvm.loop !6807

5:                                                ; preds = %1
  ret void, !dbg !6809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #15 !dbg !6810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6812, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32 1, metadata !6813, metadata !DIExpression()), !dbg !6814
  %2 = and i32 %0, 15, !dbg !6815
  %3 = add nsw i32 %2, -4, !dbg !6815
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6815
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6815
  %6 = icmp slt i32 %0, 0, !dbg !6815
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6815
  store volatile i8 16, i8* %7, align 1, !dbg !6816
  ret void, !dbg !6818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6936, metadata !DIExpression()), !dbg !6937
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6938
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6940
  br i1 %3, label %4, label %12, !dbg !6941

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6942, !srcloc !6954
  call void @llvm.dbg.value(metadata i32 %5, metadata !6945, metadata !DIExpression()) #23, !dbg !6955
  %6 = icmp eq i32 %5, 0, !dbg !6956
  br i1 %6, label %12, label %7, !dbg !6957

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6958
  %9 = or i32 %8, 268435456, !dbg !6958
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6958
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6960
  %11 = and i32 %10, -32769, !dbg !6960
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6960
  br label %12, !dbg !6961

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6964 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6965
  ret void, !dbg !6966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !522, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i8 0, metadata !523, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 64, metadata !525, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 undef, metadata !524, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !6967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6968
  %3 = load i32, i32* %2, align 8, !dbg !6968
  call void @llvm.dbg.value(metadata i32 %3, metadata !524, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !6967
  %4 = add i32 %3, -64, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %4, metadata !524, metadata !DIExpression()), !dbg !6967
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6971
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6972
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6973
  call void @llvm.dbg.value(metadata i8 1, metadata !523, metadata !DIExpression()), !dbg !6967
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6974
  ret void, !dbg !6975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6976 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6977
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6978, !srcloc !6981
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6982, !srcloc !6985
  ret void, !dbg !6986
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6987 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !6988, !srcloc !6991
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6992
  ret void, !dbg !6993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6994 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7009, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8 %1, metadata !7010, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %2, metadata !7011, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %3, metadata !7012, metadata !DIExpression()), !dbg !7013
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7014
  %6 = icmp eq i32 %5, -22, !dbg !7016
  br i1 %6, label %7, label %9, !dbg !7017

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7018
  %8 = zext i8 %1 to i32, !dbg !7018
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.58, i32 0, i32 0), i32 noundef %8) #26, !dbg !7018
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7018
  unreachable, !dbg !7018

9:                                                ; preds = %4
  ret void, !dbg !7023
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !7024 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7029, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i8 %1, metadata !7030, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i32 undef, metadata !7031, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i32 undef, metadata !7032, metadata !DIExpression()), !dbg !7034
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7035
  call void @llvm.dbg.value(metadata i8 %3, metadata !7033, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7034
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7036
  call void @llvm.dbg.value(metadata i32 %4, metadata !7033, metadata !DIExpression()), !dbg !7034
  %5 = trunc i32 %4 to i8, !dbg !7037
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7038
  ret i32 %4, !dbg !7039
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #14 !dbg !7040 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7044, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8 %1, metadata !7045, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i8 %2, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i1 %3, metadata !7047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7050
  %5 = zext i8 %2 to i32, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %5, metadata !7049, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 0, metadata !7048, metadata !DIExpression()), !dbg !7050
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7049, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 0, metadata !7048, metadata !DIExpression()), !dbg !7050
  %7 = icmp eq i8 %1, 0, !dbg !7052
  br i1 %7, label %29, label %8, !dbg !7055

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7049, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %10, metadata !7048, metadata !DIExpression()), !dbg !7050
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7056
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7059
  %13 = load i32, i32* %12, align 4, !dbg !7059
  %14 = icmp eq i32 %13, 0, !dbg !7060
  br i1 %14, label %25, label %15, !dbg !7061

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7062

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7064
  %18 = icmp eq i32 %17, 0, !dbg !7064
  br i1 %18, label %29, label %19, !dbg !7065

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7066
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %21, metadata !7049, metadata !DIExpression()), !dbg !7050
  %22 = icmp eq i32 %21, -22, !dbg !7068
  br i1 %22, label %29, label %23, !dbg !7070

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %24, metadata !7049, metadata !DIExpression()), !dbg !7050
  br label %25, !dbg !7072

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7050
  call void @llvm.dbg.value(metadata i32 %26, metadata !7049, metadata !DIExpression()), !dbg !7050
  %27 = add nuw nsw i32 %10, 1, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %27, metadata !7048, metadata !DIExpression()), !dbg !7050
  %28 = icmp eq i32 %27, %6, !dbg !7052
  br i1 %28, label %29, label %8, !dbg !7055, !llvm.loop !7074

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7050
  ret i32 %30, !dbg !7076
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7077 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7081, metadata !DIExpression()), !dbg !7083
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7084
  %3 = load i32, i32* %2, align 4, !dbg !7084
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7085, !range !7086
  %5 = icmp ult i32 %4, 2, !dbg !7085
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7087
  br i1 %7, label %8, label %15, !dbg !7087

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7088
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7089
  %11 = load i32, i32* %10, align 4, !dbg !7089
  %12 = and i32 %11, %9, !dbg !7090
  %13 = icmp eq i32 %12, 0, !dbg !7091
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7082, metadata !DIExpression()), !dbg !7083
  ret i32 %16, !dbg !7092
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7093 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7097, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7098, metadata !DIExpression()), !dbg !7100
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7101
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7101
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7099, metadata !DIExpression()), !dbg !7102
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7103
  %6 = load i32, i32* %5, align 4, !dbg !7103
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7104
  store i32 %6, i32* %7, align 4, !dbg !7105
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7106
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7107
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7108
  %11 = load i32, i32* %10, align 4, !dbg !7108
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7109
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7110
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7111
  ret i32 %12, !dbg !7112
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7113 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7120, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7121, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata i32 undef, metadata !7122, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.value(metadata i32 %2, metadata !7123, metadata !DIExpression()), !dbg !7124
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7125
  %5 = load i32, i32* %4, align 4, !dbg !7125
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7126
  %7 = or i32 %6, %5, !dbg !7127
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7128
  store i32 %7, i32* %8, align 4, !dbg !7129
  ret void, !dbg !7130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7131 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7136, metadata !DIExpression()), !dbg !7137
  %3 = zext i8 %0 to i32, !dbg !7138
  %4 = icmp ugt i8 %0, 7, !dbg !7140
  br i1 %4, label %6, label %5, !dbg !7141

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7142
  br label %6, !dbg !7143

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7137
  ret i32 %7, !dbg !7144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7149, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7150, metadata !DIExpression()), !dbg !7151
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7152
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7153
  %4 = load i32, i32* %3, align 4, !dbg !7153
  %5 = and i32 %4, -32, !dbg !7154
  %6 = or i32 %5, %0, !dbg !7155
  %7 = or i32 %6, 16, !dbg !7155
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7156
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7157
  %9 = load i32, i32* %8, align 4, !dbg !7157
  %10 = or i32 %9, 1, !dbg !7158
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7159
  ret void, !dbg !7160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7164, metadata !DIExpression()), !dbg !7165
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7166
  ret void, !dbg !7167
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #5 !dbg !7168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7172, metadata !DIExpression()), !dbg !7173
  %2 = icmp ult i32 %0, 33, !dbg !7174
  br i1 %2, label %11, label %3, !dbg !7176

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7177
  br i1 %4, label %11, label %5, !dbg !7179

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7180
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7181, !range !7086
  %8 = mul nsw i32 %7, -2, !dbg !7182
  %9 = add nsw i32 %8, 62, !dbg !7182
  %10 = and i32 %9, 62, !dbg !7183
  br label %11, !dbg !7184

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7173
  ret i32 %12, !dbg !7185
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7186 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7190, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8 %1, metadata !7191, metadata !DIExpression()), !dbg !7192
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7193
  %4 = icmp eq i32 %3, -22, !dbg !7195
  br i1 %4, label %5, label %7, !dbg !7196

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7197
  %6 = zext i8 %1 to i32, !dbg !7197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.61, i32 0, i32 0), i32 noundef %6) #26, !dbg !7197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7197
  unreachable, !dbg !7197

7:                                                ; preds = %2
  ret void, !dbg !7202
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !7203 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7207, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.value(metadata i8 %1, metadata !7208, metadata !DIExpression()), !dbg !7214
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7215
  call void @llvm.dbg.value(metadata i8 %3, metadata !7209, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7214
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7216
  call void @llvm.dbg.value(metadata i32 %4, metadata !7209, metadata !DIExpression()), !dbg !7214
  %5 = icmp ne i32 %4, -22, !dbg !7217
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7218
  call void @llvm.dbg.value(metadata i32 %4, metadata !7210, metadata !DIExpression()), !dbg !7219
  br i1 %7, label %8, label %12, !dbg !7218

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7210, metadata !DIExpression()), !dbg !7219
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7220
  %10 = add i32 %9, 1, !dbg !7223
  call void @llvm.dbg.value(metadata i32 %10, metadata !7210, metadata !DIExpression()), !dbg !7219
  %11 = icmp eq i32 %10, 8, !dbg !7224
  br i1 %11, label %12, label %8, !dbg !7225, !llvm.loop !7226

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7232, metadata !DIExpression()), !dbg !7233
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7234
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7235
  ret void, !dbg !7236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7237 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7242
  %2 = icmp ugt i32 %1, 8, !dbg !7244
  br i1 %2, label %3, label %4, !dbg !7245

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.62, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !7246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7246
  unreachable, !dbg !7246

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7251
  call void @llvm.dbg.value(metadata i32 0, metadata !7241, metadata !DIExpression()), !dbg !7252
  %5 = icmp eq i32 %1, 0, !dbg !7253
  br i1 %5, label %13, label %6, !dbg !7256

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7256

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7241, metadata !DIExpression()), !dbg !7252
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7257
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7259
  %11 = add nuw i32 %9, 1, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %11, metadata !7241, metadata !DIExpression()), !dbg !7252
  %12 = icmp eq i32 %11, %1, !dbg !7253
  br i1 %12, label %13, label %8, !dbg !7256, !llvm.loop !7261

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7263
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7264
  tail call void @arm_core_mpu_enable() #24, !dbg !7265
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7266
  %16 = and i32 %15, 65280, !dbg !7266
  %17 = icmp eq i32 %16, 2048, !dbg !7266
  br i1 %17, label %19, label %18, !dbg !7269

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7270
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.64, i32 0, i32 0)) #26, !dbg !7270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7270
  unreachable, !dbg !7270

19:                                               ; preds = %13
  ret i32 0, !dbg !7272
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7280, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i8* %1, metadata !7281, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i8* %0, metadata !7282, metadata !DIExpression()), !dbg !7283
  %3 = load i8, i8* %1, align 1, !dbg !7284
  %4 = icmp eq i8 %3, 0, !dbg !7285
  br i1 %4, label %13, label %5, !dbg !7286

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7280, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i8* %8, metadata !7281, metadata !DIExpression()), !dbg !7283
  store i8 %6, i8* %7, align 1, !dbg !7287
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7289
  call void @llvm.dbg.value(metadata i8* %9, metadata !7280, metadata !DIExpression()), !dbg !7283
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7290
  call void @llvm.dbg.value(metadata i8* %10, metadata !7281, metadata !DIExpression()), !dbg !7283
  %11 = load i8, i8* %10, align 1, !dbg !7284
  %12 = icmp eq i8 %11, 0, !dbg !7285
  br i1 %12, label %13, label %5, !dbg !7286, !llvm.loop !7291

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7293
  ret i8* %0, !dbg !7294
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7299, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i8* %1, metadata !7300, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %2, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i8* %0, metadata !7302, metadata !DIExpression()), !dbg !7303
  %4 = icmp eq i32 %2, 0, !dbg !7304
  br i1 %4, label %22, label %5, !dbg !7305

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7299, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %7, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i8* %8, metadata !7300, metadata !DIExpression()), !dbg !7303
  %9 = load i8, i8* %8, align 1, !dbg !7306
  %10 = icmp eq i8 %9, 0, !dbg !7307
  br i1 %10, label %16, label %11, !dbg !7308

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7309
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7311
  call void @llvm.dbg.value(metadata i8* %12, metadata !7300, metadata !DIExpression()), !dbg !7303
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7312
  call void @llvm.dbg.value(metadata i8* %13, metadata !7299, metadata !DIExpression()), !dbg !7303
  %14 = add i32 %7, -1, !dbg !7313
  call void @llvm.dbg.value(metadata i32 %14, metadata !7301, metadata !DIExpression()), !dbg !7303
  %15 = icmp eq i32 %14, 0, !dbg !7304
  br i1 %15, label %22, label %5, !dbg !7305, !llvm.loop !7314

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7299, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %18, metadata !7301, metadata !DIExpression()), !dbg !7303
  store i8 0, i8* %17, align 1, !dbg !7316
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7318
  call void @llvm.dbg.value(metadata i8* %19, metadata !7299, metadata !DIExpression()), !dbg !7303
  %20 = add i32 %18, -1, !dbg !7319
  call void @llvm.dbg.value(metadata i32 %20, metadata !7301, metadata !DIExpression()), !dbg !7303
  %21 = icmp eq i32 %20, 0, !dbg !7320
  br i1 %21, label %22, label %16, !dbg !7321, !llvm.loop !7322

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7324
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7329, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i32 %1, metadata !7330, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i32 %1, metadata !7331, metadata !DIExpression()), !dbg !7332
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7333

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7329, metadata !DIExpression()), !dbg !7332
  %6 = load i8, i8* %5, align 1, !dbg !7334
  %7 = icmp eq i8 %6, %3, !dbg !7335
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7336
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7337
  call void @llvm.dbg.value(metadata i8* %10, metadata !7329, metadata !DIExpression()), !dbg !7332
  br i1 %9, label %11, label %4, !dbg !7336, !llvm.loop !7339

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7341
  ret i8* %12, !dbg !7342
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7345, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i32 %1, metadata !7346, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i8* null, metadata !7347, metadata !DIExpression()), !dbg !7348
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7349

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7348
  call void @llvm.dbg.value(metadata i8* %6, metadata !7347, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i8* %5, metadata !7345, metadata !DIExpression()), !dbg !7348
  %7 = load i8, i8* %5, align 1, !dbg !7350
  %8 = icmp eq i8 %7, %3, !dbg !7353
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7354
  call void @llvm.dbg.value(metadata i8* %9, metadata !7347, metadata !DIExpression()), !dbg !7348
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7355
  call void @llvm.dbg.value(metadata i8* %10, metadata !7345, metadata !DIExpression()), !dbg !7348
  %11 = icmp eq i8 %7, 0, !dbg !7356
  br i1 %11, label %12, label %4, !dbg !7356, !llvm.loop !7357

12:                                               ; preds = %4
  ret i8* %9, !dbg !7359
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7360 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 0, metadata !7365, metadata !DIExpression()), !dbg !7366
  %2 = load i8, i8* %0, align 1, !dbg !7367
  %3 = icmp eq i8 %2, 0, !dbg !7368
  br i1 %3, label %11, label %4, !dbg !7369

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7365, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %6, metadata !7364, metadata !DIExpression()), !dbg !7366
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7370
  call void @llvm.dbg.value(metadata i8* %7, metadata !7364, metadata !DIExpression()), !dbg !7366
  %8 = add i32 %5, 1, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %8, metadata !7365, metadata !DIExpression()), !dbg !7366
  %9 = load i8, i8* %7, align 1, !dbg !7367
  %10 = icmp eq i8 %9, 0, !dbg !7368
  br i1 %10, label %11, label %4, !dbg !7369, !llvm.loop !7373

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7366
  ret i32 %12, !dbg !7375
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7380, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 %1, metadata !7381, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i32 0, metadata !7382, metadata !DIExpression()), !dbg !7383
  %3 = load i8, i8* %0, align 1, !dbg !7384
  %4 = icmp ne i8 %3, 0, !dbg !7385
  %5 = icmp ne i32 %1, 0, !dbg !7386
  %6 = and i1 %4, %5, !dbg !7386
  br i1 %6, label %7, label %16, !dbg !7387

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i8* %9, metadata !7380, metadata !DIExpression()), !dbg !7383
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7388
  call void @llvm.dbg.value(metadata i8* %10, metadata !7380, metadata !DIExpression()), !dbg !7383
  %11 = add nuw i32 %8, 1, !dbg !7390
  call void @llvm.dbg.value(metadata i32 %11, metadata !7382, metadata !DIExpression()), !dbg !7383
  %12 = load i8, i8* %10, align 1, !dbg !7384
  %13 = icmp ne i8 %12, 0, !dbg !7385
  %14 = icmp ult i32 %11, %1, !dbg !7386
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7386
  br i1 %15, label %7, label %16, !dbg !7387, !llvm.loop !7391

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7383
  ret i32 %17, !dbg !7393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !7394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7398, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %1, metadata !7399, metadata !DIExpression()), !dbg !7400
  %3 = load i8, i8* %0, align 1, !dbg !7401
  %4 = load i8, i8* %1, align 1, !dbg !7402
  %5 = icmp ne i8 %3, %4, !dbg !7403
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7404
  br i1 %7, label %18, label %8, !dbg !7404

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %10, metadata !7398, metadata !DIExpression()), !dbg !7400
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7405
  call void @llvm.dbg.value(metadata i8* %11, metadata !7398, metadata !DIExpression()), !dbg !7400
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7407
  call void @llvm.dbg.value(metadata i8* %12, metadata !7399, metadata !DIExpression()), !dbg !7400
  %13 = load i8, i8* %11, align 1, !dbg !7401
  %14 = load i8, i8* %12, align 1, !dbg !7402
  %15 = icmp ne i8 %13, %14, !dbg !7403
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7404
  br i1 %17, label %18, label %8, !dbg !7404, !llvm.loop !7408

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7401
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7402
  %21 = zext i8 %19 to i32, !dbg !7411
  %22 = zext i8 %20 to i32, !dbg !7412
  %23 = sub nsw i32 %21, %22, !dbg !7413
  ret i32 %23, !dbg !7414
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7415 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7419, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %1, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i32 %2, metadata !7421, metadata !DIExpression()), !dbg !7422
  %4 = icmp eq i32 %2, 0, !dbg !7423
  br i1 %4, label %23, label %5, !dbg !7423

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %7, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata i8* %8, metadata !7419, metadata !DIExpression()), !dbg !7422
  %9 = load i8, i8* %8, align 1, !dbg !7424
  %10 = load i8, i8* %7, align 1, !dbg !7425
  %11 = icmp ne i8 %9, %10, !dbg !7426
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7427
  br i1 %13, label %19, label %14, !dbg !7427

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7428
  call void @llvm.dbg.value(metadata i8* %15, metadata !7419, metadata !DIExpression()), !dbg !7422
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7430
  call void @llvm.dbg.value(metadata i8* %16, metadata !7420, metadata !DIExpression()), !dbg !7422
  %17 = add i32 %6, -1, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %17, metadata !7421, metadata !DIExpression()), !dbg !7422
  %18 = icmp eq i32 %17, 0, !dbg !7423
  br i1 %18, label %23, label %5, !dbg !7423, !llvm.loop !7432

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7435
  %21 = zext i8 %10 to i32, !dbg !7436
  %22 = sub nsw i32 %20, %21, !dbg !7437
  br label %23, !dbg !7438

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7438
  ret i32 %24, !dbg !7439
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !7440 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7445, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %1, metadata !7446, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8** %2, metadata !7447, metadata !DIExpression()), !dbg !7450
  %4 = icmp eq i8* %0, null, !dbg !7451
  br i1 %4, label %5, label %7, !dbg !7451

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7452
  br label %7, !dbg !7451

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7451
  call void @llvm.dbg.value(metadata i8* %8, metadata !7448, metadata !DIExpression()), !dbg !7450
  %9 = load i8, i8* %8, align 1, !dbg !7453
  %10 = icmp eq i8 %9, 0, !dbg !7453
  br i1 %10, label %33, label %11, !dbg !7454

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7448, metadata !DIExpression()), !dbg !7450
  %14 = zext i8 %12 to i32, !dbg !7453
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7455
  %16 = icmp eq i8* %15, null, !dbg !7454
  br i1 %16, label %21, label %17, !dbg !7456

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7457
  call void @llvm.dbg.value(metadata i8* %18, metadata !7448, metadata !DIExpression()), !dbg !7450
  %19 = load i8, i8* %18, align 1, !dbg !7453
  %20 = icmp eq i8 %19, 0, !dbg !7453
  br i1 %20, label %33, label %11, !dbg !7454, !llvm.loop !7459

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7449, metadata !DIExpression()), !dbg !7450
  %24 = zext i8 %22 to i32, !dbg !7461
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7462
  %26 = icmp eq i8* %25, null, !dbg !7463
  br i1 %26, label %27, label %31, !dbg !7464

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7465
  call void @llvm.dbg.value(metadata i8* %28, metadata !7449, metadata !DIExpression()), !dbg !7450
  %29 = load i8, i8* %28, align 1, !dbg !7461
  %30 = icmp eq i8 %29, 0, !dbg !7461
  br i1 %30, label %33, label %21, !dbg !7467, !llvm.loop !7468

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7470
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7473
  br label %33, !dbg !7474

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7450
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7450
  store i8* %34, i8** %2, align 4, !dbg !7450
  ret i8* %35, !dbg !7475
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7476 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %1, metadata !7479, metadata !DIExpression()), !dbg !7480
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7481
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7482
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7483
  ret i8* %0, !dbg !7484
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7485 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7487, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8* %1, metadata !7488, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 %2, metadata !7489, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8* %0, metadata !7490, metadata !DIExpression()), !dbg !7492
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %4, metadata !7491, metadata !DIExpression()), !dbg !7492
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7494
  call void @llvm.dbg.value(metadata i8* %5, metadata !7487, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8* %1, metadata !7488, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 %2, metadata !7489, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 %2, metadata !7489, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7492
  %6 = icmp eq i32 %2, 0, !dbg !7495
  br i1 %6, label %18, label %7, !dbg !7496

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7497
  call void @llvm.dbg.value(metadata i8* %9, metadata !7487, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8* %10, metadata !7488, metadata !DIExpression()), !dbg !7492
  %12 = load i8, i8* %10, align 1, !dbg !7498
  %13 = icmp eq i8 %12, 0, !dbg !7499
  br i1 %13, label %18, label %14, !dbg !7500

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7501
  call void @llvm.dbg.value(metadata i8* %15, metadata !7488, metadata !DIExpression()), !dbg !7492
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7503
  call void @llvm.dbg.value(metadata i8* %16, metadata !7487, metadata !DIExpression()), !dbg !7492
  store i8 %12, i8* %9, align 1, !dbg !7504
  call void @llvm.dbg.value(metadata i32 %11, metadata !7489, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 %11, metadata !7489, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7492
  %17 = icmp eq i32 %11, 0, !dbg !7495
  br i1 %17, label %18, label %7, !dbg !7496, !llvm.loop !7505

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7492
  store i8 0, i8* %19, align 1, !dbg !7507
  ret i8* %0, !dbg !7508
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7509 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7513, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %1, metadata !7514, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %2, metadata !7515, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %0, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %1, metadata !7517, metadata !DIExpression()), !dbg !7518
  %4 = icmp eq i32 %2, 0, !dbg !7519
  br i1 %4, label %31, label %5, !dbg !7521

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %0, metadata !7516, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %2, metadata !7515, metadata !DIExpression()), !dbg !7518
  %6 = add i32 %2, -1, !dbg !7522
  call void @llvm.dbg.value(metadata i32 %6, metadata !7515, metadata !DIExpression()), !dbg !7518
  %7 = icmp eq i32 %6, 0, !dbg !7523
  br i1 %7, label %23, label %8, !dbg !7524

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7525
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7525
  br label %11, !dbg !7525

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i8* %14, metadata !7516, metadata !DIExpression()), !dbg !7518
  %15 = load i8, i8* %14, align 1, !dbg !7526
  %16 = load i8, i8* %13, align 1, !dbg !7527
  %17 = icmp eq i8 %15, %16, !dbg !7528
  br i1 %17, label %18, label %23, !dbg !7525

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7529
  call void @llvm.dbg.value(metadata i8* %19, metadata !7516, metadata !DIExpression()), !dbg !7518
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7531
  call void @llvm.dbg.value(metadata i8* %20, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.value(metadata i32 %12, metadata !7515, metadata !DIExpression()), !dbg !7518
  %21 = add i32 %12, -1, !dbg !7522
  call void @llvm.dbg.value(metadata i32 %21, metadata !7515, metadata !DIExpression()), !dbg !7518
  %22 = icmp eq i32 %21, 0, !dbg !7523
  br i1 %22, label %23, label %11, !dbg !7524, !llvm.loop !7532

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7518
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7518
  %26 = load i8, i8* %24, align 1, !dbg !7534
  %27 = zext i8 %26 to i32, !dbg !7534
  %28 = load i8, i8* %25, align 1, !dbg !7535
  %29 = zext i8 %28 to i32, !dbg !7535
  %30 = sub nsw i32 %27, %29, !dbg !7536
  br label %31, !dbg !7537

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7518
  ret i32 %32, !dbg !7538
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7539 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7543, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %1, metadata !7544, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %2, metadata !7545, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %0, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %1, metadata !7547, metadata !DIExpression()), !dbg !7548
  %4 = ptrtoint i8* %0 to i32, !dbg !7549
  %5 = ptrtoint i8* %1 to i32, !dbg !7549
  %6 = sub i32 %4, %5, !dbg !7549
  %7 = icmp ult i32 %6, %2, !dbg !7551
  br i1 %7, label %10, label %8, !dbg !7552

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %0, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %2, metadata !7545, metadata !DIExpression()), !dbg !7548
  %9 = icmp eq i32 %2, 0, !dbg !7553
  br i1 %9, label %26, label %17, !dbg !7555

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7545, metadata !DIExpression()), !dbg !7548
  %12 = add i32 %11, -1, !dbg !7556
  call void @llvm.dbg.value(metadata i32 %12, metadata !7545, metadata !DIExpression()), !dbg !7548
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7559
  %14 = load i8, i8* %13, align 1, !dbg !7559
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7560
  store i8 %14, i8* %15, align 1, !dbg !7561
  %16 = icmp eq i32 %12, 0, !dbg !7562
  br i1 %16, label %26, label %10, !dbg !7563, !llvm.loop !7564

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8* %19, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %20, metadata !7545, metadata !DIExpression()), !dbg !7548
  %21 = load i8, i8* %18, align 1, !dbg !7566
  store i8 %21, i8* %19, align 1, !dbg !7568
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7569
  call void @llvm.dbg.value(metadata i8* %22, metadata !7546, metadata !DIExpression()), !dbg !7548
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7570
  call void @llvm.dbg.value(metadata i8* %23, metadata !7547, metadata !DIExpression()), !dbg !7548
  %24 = add i32 %20, -1, !dbg !7571
  call void @llvm.dbg.value(metadata i32 %24, metadata !7545, metadata !DIExpression()), !dbg !7548
  %25 = icmp eq i32 %24, 0, !dbg !7553
  br i1 %25, label %26, label %17, !dbg !7555, !llvm.loop !7572

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7574
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7575 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7581, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %1, metadata !7582, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i32 %2, metadata !7583, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %1, metadata !7585, metadata !DIExpression()), !dbg !7586
  %4 = icmp eq i32 %2, 0, !dbg !7587
  br i1 %4, label %14, label %5, !dbg !7588

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %7, metadata !7584, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i32 %8, metadata !7583, metadata !DIExpression()), !dbg !7586
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7589
  call void @llvm.dbg.value(metadata i8* %9, metadata !7585, metadata !DIExpression()), !dbg !7586
  %10 = load i8, i8* %6, align 1, !dbg !7591
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7592
  call void @llvm.dbg.value(metadata i8* %11, metadata !7584, metadata !DIExpression()), !dbg !7586
  store i8 %10, i8* %7, align 1, !dbg !7593
  %12 = add i32 %8, -1, !dbg !7594
  call void @llvm.dbg.value(metadata i32 %12, metadata !7583, metadata !DIExpression()), !dbg !7586
  %13 = icmp eq i32 %12, 0, !dbg !7587
  br i1 %13, label %14, label %5, !dbg !7588, !llvm.loop !7595

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7598 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7602, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i32 %1, metadata !7603, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i32 %2, metadata !7604, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i8* %0, metadata !7605, metadata !DIExpression()), !dbg !7607
  %4 = trunc i32 %1 to i8, !dbg !7608
  call void @llvm.dbg.value(metadata i8 %4, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i32 %2, metadata !7604, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i8* %0, metadata !7605, metadata !DIExpression()), !dbg !7607
  %5 = icmp eq i32 %2, 0, !dbg !7609
  br i1 %5, label %12, label %6, !dbg !7610

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7604, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.value(metadata i8* %8, metadata !7605, metadata !DIExpression()), !dbg !7607
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7611
  call void @llvm.dbg.value(metadata i8* %9, metadata !7605, metadata !DIExpression()), !dbg !7607
  store i8 %4, i8* %8, align 1, !dbg !7613
  %10 = add i32 %7, -1, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %10, metadata !7604, metadata !DIExpression()), !dbg !7607
  %11 = icmp eq i32 %10, 0, !dbg !7609
  br i1 %11, label %12, label %6, !dbg !7610, !llvm.loop !7615

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7617
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7618 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7622, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %1, metadata !7623, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %2, metadata !7624, metadata !DIExpression()), !dbg !7628
  %4 = icmp eq i32 %2, 0, !dbg !7629
  br i1 %4, label %17, label %5, !dbg !7630

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7631

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7632
  call void @llvm.dbg.value(metadata i8* %9, metadata !7625, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %8, metadata !7624, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8* %9, metadata !7625, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7632
  %10 = load i8, i8* %9, align 1, !dbg !7633
  %11 = icmp eq i8 %10, %6, !dbg !7636
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7637
  call void @llvm.dbg.value(metadata i8* %12, metadata !7625, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %13, metadata !7624, metadata !DIExpression()), !dbg !7628
  br i1 %15, label %16, label %7, !dbg !7637, !llvm.loop !7638

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7640

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7628
  ret i8* %19, !dbg !7641
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7642 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7644, metadata !DIExpression()), !dbg !7655
  %8 = bitcast i64* %2 to i8*, !dbg !7656
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !7656
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !7645, metadata !DIExpression()), !dbg !7657
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !7657
  store i64 %9, i64* %2, align 8, !dbg !7657
  %10 = bitcast i64* %4 to i8*, !dbg !7658
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !7658
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !7653, metadata !DIExpression()), !dbg !7659
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !7659
  store i64 %11, i64* %4, align 8, !dbg !7659
  %12 = bitcast i64* %6 to i8*, !dbg !7660
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !7660
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !7654, metadata !DIExpression()), !dbg !7661
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !7661
  store i64 %13, i64* %6, align 8, !dbg !7661
  %14 = trunc i64 %9 to i32, !dbg !7662
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !7662
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #24, !dbg !7664
  %17 = trunc i64 %13 to i32, !dbg !7665
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !7665
  br i1 %16, label %19, label %26, !dbg !7665

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !7665
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !7665
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #24, !dbg !7666
  br i1 %22, label %23, label %26, !dbg !7667

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #24, !dbg !7668
  br i1 %24, label %25, label %26, !dbg !7669

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !7670
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !7671
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !7672
  br label %26, !dbg !7673

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !7655
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !7674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !7674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !7674
  ret i32 %27, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !7675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7680, metadata !DIExpression()), !dbg !7681
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7682, !srcloc !7684
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !7685
  ret i1 %2, !dbg !7686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7687 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !7692, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i32 %1, metadata !7693, metadata !DIExpression()), !dbg !7694
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !7695
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !7695
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !7696
  %6 = load i8, i8* %5, align 4, !dbg !7696
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !7697
  %8 = load i16, i16* %7, align 2, !dbg !7697
  %9 = zext i16 %8 to i32, !dbg !7698
  %10 = or i32 %9, %1, !dbg !7699
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !7700
  ret void, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7705, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8 %1, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 %2, metadata !7707, metadata !DIExpression()), !dbg !7708
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7709, !srcloc !7711
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !7712
  ret void, !dbg !7713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7716, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i8 %1, metadata !7717, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %2, metadata !7718, metadata !DIExpression()), !dbg !7723
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !7724
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !7724
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !7724
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !7719, metadata !DIExpression()), !dbg !7723
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7725
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !7725
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !7725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !7720, metadata !DIExpression()), !dbg !7723
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7726
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !7726
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !7726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !7722, metadata !DIExpression()), !dbg !7723
  %13 = and i32 %2, 132120576, !dbg !7727
  %14 = icmp eq i32 %13, 0, !dbg !7727
  br i1 %14, label %16, label %15, !dbg !7730

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 679) #26, !dbg !7731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.79, i32 0, i32 0)) #26, !dbg !7731
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 679) #26, !dbg !7731
  unreachable, !dbg !7731

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !7733
  %18 = icmp eq i32 %17, 48, !dbg !7733
  br i1 %18, label %19, label %20, !dbg !7736

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 683) #26, !dbg !7737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.81, i32 0, i32 0)) #26, !dbg !7737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 683) #26, !dbg !7737
  unreachable, !dbg !7737

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !7739
  %22 = icmp ne i32 %21, 0, !dbg !7739
  %23 = and i32 %2, 131074, !dbg !7739
  %24 = icmp eq i32 %23, 2, !dbg !7739
  br i1 %24, label %25, label %26, !dbg !7739

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 687) #26, !dbg !7742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17, i32 0, i32 0)) #26, !dbg !7742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 687) #26, !dbg !7742
  unreachable, !dbg !7742

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !7744
  %28 = icmp eq i32 %27, 4, !dbg !7744
  br i1 %28, label %29, label %30, !dbg !7744

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 690) #26, !dbg !7747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 690) #26, !dbg !7747
  unreachable, !dbg !7747

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !7749
  %32 = icmp eq i32 %31, 0, !dbg !7749
  %33 = or i1 %32, %22, !dbg !7749
  br i1 %33, label %35, label %34, !dbg !7749

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 694) #26, !dbg !7752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i32 0, i32 0)) #26, !dbg !7752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 694) #26, !dbg !7752
  unreachable, !dbg !7752

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !7754
  br i1 %36, label %37, label %38, !dbg !7757

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 698) #26, !dbg !7758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i32 0, i32 0)) #26, !dbg !7758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 698) #26, !dbg !7758
  unreachable, !dbg !7758

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !7760
  %40 = icmp ne i32 %39, 1048577, !dbg !7760
  %41 = or i1 %40, %32, !dbg !7760
  %42 = xor i32 %2, 786432, !dbg !7760
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !7760
  call void @llvm.dbg.value(metadata i32 %43, metadata !7718, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %43, metadata !7718, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !7723
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !7762
  %45 = load i32, i32* %44, align 4, !dbg !7762
  %46 = zext i8 %1 to i32, !dbg !7762
  %47 = shl nuw i32 1, %46, !dbg !7762
  %48 = and i32 %45, %47, !dbg !7762
  %49 = icmp eq i32 %48, 0, !dbg !7762
  br i1 %49, label %50, label %51, !dbg !7765

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.83, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 709) #26, !dbg !7766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.84, i32 0, i32 0)) #26, !dbg !7766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 709) #26, !dbg !7766
  unreachable, !dbg !7766

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !7768
  %53 = icmp eq i32 %52, 0, !dbg !7770
  br i1 %53, label %58, label %54, !dbg !7771

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !7772
  %56 = load i32, i32* %55, align 4, !dbg !7774
  %57 = or i32 %56, %47, !dbg !7774
  store i32 %57, i32* %55, align 4, !dbg !7774
  br label %63, !dbg !7775

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !7776
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !7778
  %61 = load i32, i32* %60, align 4, !dbg !7779
  %62 = and i32 %61, %59, !dbg !7779
  store i32 %62, i32* %60, align 4, !dbg !7779
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %64, metadata !7718, metadata !DIExpression()), !dbg !7723
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !7781
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !7781
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #26, !dbg !7782
  ret void, !dbg !7783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !7784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7786, metadata !DIExpression()), !dbg !7787
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !7788
  ret i1 %2, !dbg !7789
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7792, metadata !DIExpression()), !dbg !7793
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !7794
  ret void, !dbg !7795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7800, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i32 %1, metadata !7801, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7802, metadata !DIExpression()), !dbg !7806
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7807
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7807
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7807
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7803, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i32 %0, metadata !7805, metadata !DIExpression()), !dbg !7806
  %7 = icmp slt i32 %0, %1, !dbg !7808
  br i1 %7, label %8, label %22, !dbg !7811

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7805, metadata !DIExpression()), !dbg !7806
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !7812
  %11 = icmp eq i32 %10, 0, !dbg !7812
  br i1 %11, label %19, label %12, !dbg !7815

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !7816
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7818
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7818
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7820
  br i1 %15, label %19, label %16, !dbg !7821

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7822
  %18 = load i8*, i8** %17, align 4, !dbg !7822
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7823
  br label %19, !dbg !7824

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %20, metadata !7805, metadata !DIExpression()), !dbg !7806
  %21 = icmp eq i32 %20, %1, !dbg !7808
  br i1 %21, label %22, label %8, !dbg !7811, !llvm.loop !7826

22:                                               ; preds = %19, %3
  ret void, !dbg !7828
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7831, metadata !DIExpression()), !dbg !7832
  %2 = shl nuw i32 1, %0, !dbg !7833
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !7836
  ret i32 %3, !dbg !7837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7840, metadata !DIExpression()), !dbg !7841
  %2 = shl nuw i32 1, %0, !dbg !7842
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7850, metadata !DIExpression()), !dbg !7851
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7852
  ret void, !dbg !7853
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7856, metadata !DIExpression()), !dbg !7857
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7858
  %3 = and i32 %2, %0, !dbg !7858
  %4 = icmp eq i32 %3, %0, !dbg !7859
  %5 = zext i1 %4 to i32, !dbg !7859
  ret i32 %5, !dbg !7860
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7863, metadata !DIExpression()), !dbg !7864
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !7865
  ret void, !dbg !7866
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7867 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7869, metadata !DIExpression()), !dbg !7870
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !7871
  ret void, !dbg !7872
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7875, metadata !DIExpression()), !dbg !7876
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7881, metadata !DIExpression()), !dbg !7882
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7887, metadata !DIExpression()), !dbg !7888
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !7889
  ret void, !dbg !7890
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7893, metadata !DIExpression()), !dbg !7894
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !7895
  ret void, !dbg !7896
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7899, metadata !DIExpression()), !dbg !7900
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !7901
  ret i32 0, !dbg !7902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !837 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !841, metadata !DIExpression()), !dbg !7903
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7904
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7906
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7908
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7910
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7912
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7914
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7916
  ret void, !dbg !7918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7921, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 0, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 undef, metadata !7922, metadata !DIExpression()), !dbg !7923
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7924
  %3 = load i32, i32* %2, align 4, !dbg !7924
  call void @llvm.dbg.value(metadata i32 %3, metadata !7922, metadata !DIExpression()), !dbg !7923
  %4 = shl nuw i32 1, %0, !dbg !7925
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !7926
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7927
  ret void, !dbg !7928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7931, metadata !DIExpression()), !dbg !7932
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7933
  %3 = or i32 %2, %0, !dbg !7933
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7933
  ret void, !dbg !7934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  %2 = icmp slt i32 %0, 32, !dbg !7939
  br i1 %2, label %3, label %5, !dbg !7941

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7942
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !7944
  br label %5, !dbg !7945

5:                                                ; preds = %1, %3
  ret void, !dbg !7946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7949, metadata !DIExpression()), !dbg !7950
  %2 = xor i32 %0, -1, !dbg !7951
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7951
  %4 = and i32 %3, %2, !dbg !7951
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !7951
  ret void, !dbg !7952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7957, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i32 %1, metadata !7958, metadata !DIExpression()), !dbg !7959
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7960

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7961
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !7963
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !7964
  br label %11, !dbg !7965

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7966
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !7967
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !7968
  br label %11, !dbg !7969

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7970
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !7971
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !7972
  br label %11, !dbg !7973

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7974
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !7975
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !7976
  br label %11, !dbg !7977

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7981, metadata !DIExpression()), !dbg !7982
  %2 = xor i32 %0, -1, !dbg !7983
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7983
  %4 = and i32 %3, %2, !dbg !7983
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7983
  ret void, !dbg !7984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7987, metadata !DIExpression()), !dbg !7988
  %2 = xor i32 %0, -1, !dbg !7989
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7989
  %4 = and i32 %3, %2, !dbg !7989
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !7989
  ret void, !dbg !7990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7993, metadata !DIExpression()), !dbg !7994
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7995
  %3 = or i32 %2, %0, !dbg !7995
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !7995
  ret void, !dbg !7996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7999, metadata !DIExpression()), !dbg !8000
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8001
  %3 = or i32 %2, %0, !dbg !8001
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8001
  ret void, !dbg !8002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !8003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8007, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8008, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i8* %2, metadata !8009, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8010, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8012, metadata !DIExpression()), !dbg !8013
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8014
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8014
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8016
  br i1 %6, label %7, label %9, !dbg !8017

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8018
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8019
  store i8* %2, i8** %8, align 4, !dbg !8020
  br label %9, !dbg !8021

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8013
  ret i32 %10, !dbg !8022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8025, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8026, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8027, metadata !DIExpression()), !dbg !8028
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8029
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8030
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8031
  store i8* null, i8** %3, align 4, !dbg !8032
  ret void, !dbg !8033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8036, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i8* %1, metadata !8037, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i8* %1, metadata !8038, metadata !DIExpression()), !dbg !8041
  %3 = bitcast i8* %1 to i32*, !dbg !8042
  %4 = load i32, i32* %3, align 4, !dbg !8042
  %5 = add i32 %4, -37, !dbg !8042
  %6 = icmp ult i32 %5, -9, !dbg !8042
  br i1 %6, label %15, label %7, !dbg !8044

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8045
  %9 = inttoptr i32 %8 to i32*, !dbg !8046
  call void @llvm.dbg.value(metadata i32* %9, metadata !8039, metadata !DIExpression()), !dbg !8041
  %10 = load volatile i32, i32* %9, align 4, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %10, metadata !8040, metadata !DIExpression()), !dbg !8041
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8048
  %12 = bitcast i8* %11 to i32*, !dbg !8048
  %13 = load i32, i32* %12, align 4, !dbg !8048
  %14 = or i32 %13, %10, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %14, metadata !8040, metadata !DIExpression()), !dbg !8041
  store volatile i32 %14, i32* %9, align 4, !dbg !8050
  br label %15, !dbg !8051

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8041
  ret i32 %16, !dbg !8052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8053 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8055, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.value(metadata i8* %1, metadata !8056, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.value(metadata i8* %1, metadata !8057, metadata !DIExpression()), !dbg !8060
  %3 = bitcast i8* %1 to i32*, !dbg !8061
  %4 = load i32, i32* %3, align 4, !dbg !8061
  %5 = add i32 %4, -37, !dbg !8061
  %6 = icmp ult i32 %5, -9, !dbg !8061
  br i1 %6, label %16, label %7, !dbg !8063

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8064
  %9 = inttoptr i32 %8 to i32*, !dbg !8065
  call void @llvm.dbg.value(metadata i32* %9, metadata !8058, metadata !DIExpression()), !dbg !8060
  %10 = load volatile i32, i32* %9, align 4, !dbg !8066
  call void @llvm.dbg.value(metadata i32 %10, metadata !8059, metadata !DIExpression()), !dbg !8060
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8067
  %12 = bitcast i8* %11 to i32*, !dbg !8067
  %13 = load i32, i32* %12, align 4, !dbg !8067
  %14 = xor i32 %13, -1, !dbg !8068
  %15 = and i32 %10, %14, !dbg !8069
  call void @llvm.dbg.value(metadata i32 %15, metadata !8059, metadata !DIExpression()), !dbg !8060
  store volatile i32 %15, i32* %9, align 4, !dbg !8070
  br label %16, !dbg !8071

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8060
  ret i32 %17, !dbg !8072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #10 !dbg !8073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8075, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %1, metadata !8076, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32* %2, metadata !8077, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i8* %1, metadata !8078, metadata !DIExpression()), !dbg !8082
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %4, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %4, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %4, metadata !8081, metadata !DIExpression()), !dbg !8082
  %5 = bitcast i8* %1 to i32*, !dbg !8084
  %6 = load i32, i32* %5, align 4, !dbg !8084
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8085

7:                                                ; preds = %3
  br label %10, !dbg !8086

8:                                                ; preds = %3
  br label %10, !dbg !8088

9:                                                ; preds = %3
  br label %10, !dbg !8089

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8090
  br label %12, !dbg !8091

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8082
  ret i32 %13, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8094, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %1, metadata !8095, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %2, metadata !8096, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i8* %1, metadata !8097, metadata !DIExpression()), !dbg !8102
  %4 = bitcast i8* %1 to i32*, !dbg !8103
  %5 = load i32, i32* %4, align 4, !dbg !8103
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %6, metadata !8101, metadata !DIExpression()), !dbg !8102
  %7 = icmp slt i32 %6, 0, !dbg !8105
  br i1 %7, label %22, label %8, !dbg !8107

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8097, metadata !DIExpression()), !dbg !8102
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8108
  %10 = bitcast i8* %9 to i32*, !dbg !8108
  %11 = load i32, i32* %10, align 4, !dbg !8108
  %12 = lshr i32 %11, 16, !dbg !8108
  %13 = and i32 %12, 7, !dbg !8108
  %14 = lshr i32 %11, 8, !dbg !8109
  %15 = and i32 %14, 31, !dbg !8109
  %16 = shl i32 %13, %15, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %16, metadata !8100, metadata !DIExpression()), !dbg !8102
  %17 = and i32 %11, 255, !dbg !8111
  %18 = or i32 %17, 1073887232, !dbg !8112
  %19 = inttoptr i32 %18 to i32*, !dbg !8113
  call void @llvm.dbg.value(metadata i32* %19, metadata !8098, metadata !DIExpression()), !dbg !8102
  %20 = load volatile i32, i32* %19, align 4, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %20, metadata !8099, metadata !DIExpression()), !dbg !8102
  %21 = or i32 %16, %20, !dbg !8115
  call void @llvm.dbg.value(metadata i32 %21, metadata !8099, metadata !DIExpression()), !dbg !8102
  store volatile i32 %21, i32* %19, align 4, !dbg !8116
  br label %22, !dbg !8117

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8102
  ret i32 %23, !dbg !8118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 0, metadata !8124, metadata !DIExpression()), !dbg !8125
  %2 = add i32 %0, -1, !dbg !8126
  %3 = icmp ult i32 %2, 4, !dbg !8126
  br i1 %3, label %4, label %7, !dbg !8126

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8126
  %6 = load i32, i32* %5, align 4, !dbg !8126
  call void @llvm.dbg.value(metadata i32 %6, metadata !8124, metadata !DIExpression()), !dbg !8125
  br label %7, !dbg !8127

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8125
  ret i32 %8, !dbg !8128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8129 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8131, metadata !DIExpression()), !dbg !8134
  tail call void @config_enable_default_clocks() #26, !dbg !8135
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !8136
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8136
  %4 = lshr i32 %3, 4, !dbg !8136
  %5 = and i32 %4, 15, !dbg !8136
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8136
  %7 = load i8, i8* %6, align 1, !dbg !8136
  %8 = zext i8 %7 to i32, !dbg !8136
  %9 = lshr i32 %2, %8, !dbg !8136
  call void @llvm.dbg.value(metadata i32 %9, metadata !8132, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8133, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8134
  %10 = icmp ult i32 %9, 32000000, !dbg !8137
  br i1 %10, label %11, label %13, !dbg !8139

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !8140
  br label %13, !dbg !8142

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8143
  tail call fastcc void @set_up_plls() #24, !dbg !8144
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8145
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !8148
  br label %14, !dbg !8149

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8150
  %16 = icmp eq i32 %15, 12, !dbg !8151
  br i1 %16, label %17, label %14, !dbg !8149, !llvm.loop !8152

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8154
  br i1 %18, label %19, label %21, !dbg !8156

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !8157
  br label %21, !dbg !8159

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8160
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8161
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8162
  ret i32 0, !dbg !8163
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8164 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8166
  %2 = and i32 %1, 240, !dbg !8166
  ret i32 %2, !dbg !8167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8168 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8169
  %2 = icmp eq i32 %1, 1, !dbg !8173
  br i1 %2, label %7, label %3, !dbg !8174

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8175
  br label %4, !dbg !8177

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8178
  %6 = icmp eq i32 %5, 1, !dbg !8179
  br i1 %6, label %7, label %4, !dbg !8177, !llvm.loop !8180

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8182
  br label %8, !dbg !8185

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8186
  %10 = icmp eq i32 %9, 1, !dbg !8187
  br i1 %10, label %11, label %8, !dbg !8185, !llvm.loop !8188

11:                                               ; preds = %8
  ret void, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8191 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8192
  %2 = icmp eq i32 %1, 12, !dbg !8194
  br i1 %2, label %3, label %4, !dbg !8195

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8196
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8198
  br label %4, !dbg !8199

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8200
  tail call void @config_pll_sysclock() #26, !dbg !8201
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8202
  br label %5, !dbg !8203

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8204
  %7 = icmp eq i32 %6, 1, !dbg !8205
  br i1 %7, label %8, label %5, !dbg !8203, !llvm.loop !8206

8:                                                ; preds = %5
  ret void, !dbg !8208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8209 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8211, metadata !DIExpression()), !dbg !8212
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8213
  %2 = and i32 %1, -241, !dbg !8213
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8213
  ret void, !dbg !8214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8217, metadata !DIExpression()), !dbg !8218
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8219
  %3 = and i32 %2, -4, !dbg !8219
  %4 = or i32 %3, %0, !dbg !8219
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8219
  ret void, !dbg !8220
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8221 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8222
  %2 = and i32 %1, 12, !dbg !8222
  ret i32 %2, !dbg !8223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8224 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8226, metadata !DIExpression()), !dbg !8227
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8228
  %2 = and i32 %1, -1793, !dbg !8228
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8230 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8232, metadata !DIExpression()), !dbg !8233
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8234
  %2 = and i32 %1, -14337, !dbg !8234
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8234
  ret void, !dbg !8235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8236 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8237
  %2 = icmp eq i32 %1, 1, !dbg !8239
  br i1 %2, label %7, label %3, !dbg !8240

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8241
  br label %4, !dbg !8243

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8244
  %6 = icmp eq i32 %5, 1, !dbg !8245
  br i1 %6, label %7, label %4, !dbg !8243, !llvm.loop !8246

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !8248
  br label %8, !dbg !8249

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8250
  %10 = icmp eq i32 %9, 4, !dbg !8251
  br i1 %10, label %11, label %8, !dbg !8249, !llvm.loop !8252

11:                                               ; preds = %8
  ret void, !dbg !8254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8255 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8256
  %2 = and i32 %1, -16777217, !dbg !8256
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8256
  ret void, !dbg !8257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8258 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8259
  %2 = or i32 %1, 16777216, !dbg !8259
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8259
  ret void, !dbg !8260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8261 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8262
  %2 = lshr i32 %1, 25, !dbg !8263
  %3 = and i32 %2, 1, !dbg !8263
  ret i32 %3, !dbg !8264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8265 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8266
  %2 = lshr i32 %1, 1, !dbg !8267
  %3 = and i32 %2, 1, !dbg !8267
  ret i32 %3, !dbg !8268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8269 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8270
  %2 = or i32 %1, 1, !dbg !8270
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8270
  ret void, !dbg !8271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8272 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8273
  %2 = or i32 %1, 1, !dbg !8273
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8273
  ret void, !dbg !8274
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8275 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8276
  %2 = lshr i32 %1, 1, !dbg !8277
  %3 = and i32 %2, 1, !dbg !8277
  ret i32 %3, !dbg !8278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8279 {
  ret i32 16000000, !dbg !8281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8284 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8285
  ret void, !dbg !8286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8287 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8291, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 262144, metadata !8292, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8293, metadata !DIExpression()), !dbg !8294
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8295
  %2 = and i32 %1, -16580609, !dbg !8295
  %3 = or i32 %2, 4456448, !dbg !8295
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8295
  ret void, !dbg !8296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #4 !dbg !8297 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8298
  %2 = zext i8 %1 to i32, !dbg !8298
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8298
  ret i32 %3, !dbg !8299
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #14 !dbg !8300 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !8301
  ret void, !dbg !8302
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #14 !dbg !8303 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8305, metadata !DIExpression()), !dbg !8307
  %2 = bitcast i32* %1 to i8*, !dbg !8308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8308
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8306, metadata !DIExpression()), !dbg !8309
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8310
  %4 = or i32 %3, 1, !dbg !8310
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8310
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8311
  %6 = and i32 %5, 1, !dbg !8311
  store volatile i32 %6, i32* %1, align 4, !dbg !8312
  %7 = load volatile i32, i32* %1, align 4, !dbg !8313
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8314
  ret void, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8317, metadata !DIExpression()), !dbg !8318
  %2 = tail call fastcc zeroext i1 @device_is_ready.94() #24, !dbg !8319
  br i1 %2, label %3, label %4, !dbg !8321

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8322
  br label %4, !dbg !8323

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8318
  ret i32 %5, !dbg !8324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.94() unnamed_addr #1 !dbg !8325 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8329, metadata !DIExpression()), !dbg !8330
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8331, !srcloc !8333
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.95() #24, !dbg !8334
  ret i1 %1, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8336 {
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8337
  ret void, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8341, metadata !DIExpression()), !dbg !8342
  %2 = icmp eq i32 %0, 10, !dbg !8343
  br i1 %2, label %3, label %4, !dbg !8345

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8346
  br label %4, !dbg !8348

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8349
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8350
  ret i32 %0, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8352 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8355, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata i8 %0, metadata !8356, metadata !DIExpression()), !dbg !8357
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8358, !srcloc !8360
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8361
  ret void, !dbg !8362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8363 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8365, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i8 %0, metadata !8366, metadata !DIExpression()), !dbg !8368
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8369
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8367, metadata !DIExpression()), !dbg !8368
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8370
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8370
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #26, !dbg !8371
  ret void, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.95() unnamed_addr #1 !dbg !8373 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8375, metadata !DIExpression()), !dbg !8376
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !8377
  ret i1 %1, !dbg !8378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8379 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8428, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8429, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8430, metadata !DIExpression()), !dbg !8431
  ret void, !dbg !8432
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8433 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8435, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i8 %1, metadata !8436, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i32 %2, metadata !8437, metadata !DIExpression()), !dbg !8440
  %5 = bitcast i32* %4 to i8*, !dbg !8441
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8441
  call void @llvm.dbg.value(metadata i32* %4, metadata !8439, metadata !DIExpression(DW_OP_deref)), !dbg !8440
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !8442
  call void @llvm.dbg.value(metadata i32 %6, metadata !8438, metadata !DIExpression()), !dbg !8440
  %7 = icmp eq i32 %6, 0, !dbg !8443
  br i1 %7, label %8, label %31, !dbg !8445

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8438, metadata !DIExpression()), !dbg !8440
  %9 = and i32 %2, 131072, !dbg !8446
  %10 = icmp eq i32 %9, 0, !dbg !8448
  br i1 %10, label %28, label %11, !dbg !8449

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8450
  %13 = icmp eq i32 %12, 0, !dbg !8453
  br i1 %13, label %18, label %14, !dbg !8454

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8455
  %16 = shl nuw i32 1, %15, !dbg !8455
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !8457
  br label %25, !dbg !8458

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8459
  %20 = icmp eq i32 %19, 0, !dbg !8461
  %21 = zext i8 %1 to i32, !dbg !8440
  br i1 %20, label %25, label %22, !dbg !8462

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8463
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !8465
  br label %25, !dbg !8466

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8467
  %27 = load i32, i32* %4, align 4, !dbg !8468
  call void @llvm.dbg.value(metadata i32 %30, metadata !8439, metadata !DIExpression()), !dbg !8440
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !8469
  br label %31, !dbg !8470

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8467
  %30 = load i32, i32* %4, align 4, !dbg !8468
  call void @llvm.dbg.value(metadata i32 %30, metadata !8439, metadata !DIExpression()), !dbg !8440
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !8469
  call void @llvm.dbg.value(metadata i32 0, metadata !8438, metadata !DIExpression()), !dbg !8440
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8471
  ret i32 %6, !dbg !8471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8476, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata i32* %1, metadata !8477, metadata !DIExpression()), !dbg !8481
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8482
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8482
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8478, metadata !DIExpression()), !dbg !8481
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8483
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8483
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8483
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8480, metadata !DIExpression()), !dbg !8481
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !8484
  store i32 %9, i32* %1, align 4, !dbg !8485
  ret i32 0, !dbg !8486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8489, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %1, metadata !8490, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %2, metadata !8491, metadata !DIExpression()), !dbg !8495
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8496
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8496
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8496
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8492, metadata !DIExpression()), !dbg !8495
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8497
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8497
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8497
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8493, metadata !DIExpression()), !dbg !8495
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !8498
  call void @llvm.dbg.value(metadata i32 %10, metadata !8494, metadata !DIExpression()), !dbg !8495
  %11 = xor i32 %1, -1, !dbg !8499
  %12 = and i32 %10, %11, !dbg !8500
  %13 = and i32 %2, %1, !dbg !8501
  %14 = or i32 %12, %13, !dbg !8502
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !8503
  ret i32 0, !dbg !8504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8507, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i32 %1, metadata !8508, metadata !DIExpression()), !dbg !8511
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8512
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8512
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8512
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8509, metadata !DIExpression()), !dbg !8511
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8513
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8513
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8513
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8510, metadata !DIExpression()), !dbg !8511
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8514
  store volatile i32 %1, i32* %9, align 4, !dbg !8514
  ret i32 0, !dbg !8515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8516 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8518, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %1, metadata !8519, metadata !DIExpression()), !dbg !8522
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8523
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8523
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8523
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8520, metadata !DIExpression()), !dbg !8522
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8524
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8524
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8524
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8521, metadata !DIExpression()), !dbg !8522
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !8525
  ret i32 0, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8529, metadata !DIExpression()), !dbg !8533
  call void @llvm.dbg.value(metadata i32 %1, metadata !8530, metadata !DIExpression()), !dbg !8533
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8534
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8534
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8534
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8531, metadata !DIExpression()), !dbg !8533
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8535
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8535
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8535
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8532, metadata !DIExpression()), !dbg !8533
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8536
  %10 = load volatile i32, i32* %9, align 4, !dbg !8536
  %11 = xor i32 %10, %1, !dbg !8536
  store volatile i32 %11, i32* %9, align 4, !dbg !8536
  ret i32 0, !dbg !8537
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8540, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i8 %1, metadata !8541, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32 %2, metadata !8542, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32 %3, metadata !8543, metadata !DIExpression()), !dbg !8550
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8551
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8551
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8551
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8544, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i8* undef, metadata !8545, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32 0, metadata !8547, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32 0, metadata !8548, metadata !DIExpression()), !dbg !8550
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8552

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8553
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !8557
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8558
  %12 = load i32, i32* %11, align 4, !dbg !8558
  %13 = icmp eq i32 %10, %12, !dbg !8559
  br i1 %13, label %14, label %29, !dbg !8560

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8561
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8563
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8564
  br label %29, !dbg !8565

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8566
  %17 = load i8*, i8** %16, align 4, !dbg !8566
  call void @llvm.dbg.value(metadata i8* %17, metadata !8545, metadata !DIExpression()), !dbg !8550
  %18 = zext i8 %1 to i32, !dbg !8567
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8569
  %20 = icmp eq i32 %19, 0, !dbg !8570
  br i1 %20, label %21, label %29, !dbg !8571

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8572
  %23 = load i32, i32* %22, align 4, !dbg !8572
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !8573
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8574

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8547, metadata !DIExpression()), !dbg !8550
  br label %27, !dbg !8575

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8547, metadata !DIExpression()), !dbg !8550
  br label %27, !dbg !8577

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8547, metadata !DIExpression()), !dbg !8550
  br label %27, !dbg !8578

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8550
  call void @llvm.dbg.value(metadata i32 %28, metadata !8547, metadata !DIExpression()), !dbg !8550
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8579
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8580
  br label %29, !dbg !8580

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8550
  call void @llvm.dbg.value(metadata i32 %30, metadata !8548, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.label(metadata !8549), !dbg !8581
  ret i32 %30, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8585, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8586, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata i1 %2, metadata !8587, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8589
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8590
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8590
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8590
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8588, metadata !DIExpression()), !dbg !8589
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8591
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !8592
  ret i32 %8, !dbg !8593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8594 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8600, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8601, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.value(metadata i1 %2, metadata !8602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8603
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8604
  br i1 %4, label %5, label %6, !dbg !8607

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i32 0, i32 0), i32 noundef 42) #26, !dbg !8608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i32 0, i32 0), i32 noundef 42) #26, !dbg !8608
  unreachable, !dbg !8608

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8610
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8610
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8610
  br i1 %9, label %10, label %11, !dbg !8613

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i32 0, i32 0), i32 noundef 43) #26, !dbg !8614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.100, i32 0, i32 0)) #26, !dbg !8614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i32 0, i32 0), i32 noundef 43) #26, !dbg !8614
  unreachable, !dbg !8614

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !8616
  br i1 %12, label %18, label %13, !dbg !8618

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8619
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !8622
  %16 = or i1 %15, %2, !dbg !8623
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8623
  br i1 %2, label %19, label %21, !dbg !8623

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8624

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8625
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !8628
  br label %21, !dbg !8629

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8603
  ret i32 %22, !dbg !8630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8631 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8635, metadata !DIExpression()), !dbg !8636
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8637
  %3 = icmp eq %struct._snode* %2, null, !dbg !8637
  ret i1 %3, !dbg !8637
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !8638 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8642, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8643, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8644, metadata !DIExpression()), !dbg !8646
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8647
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8644, metadata !DIExpression()), !dbg !8646
  %4 = icmp eq %struct._snode* %3, null, !dbg !8649
  br i1 %4, label %15, label %5, !dbg !8647

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8644, metadata !DIExpression()), !dbg !8646
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8651
  br i1 %6, label %9, label %11, !dbg !8654

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8644, metadata !DIExpression()), !dbg !8646
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8651
  br i1 %8, label %9, label %11, !dbg !8654, !llvm.loop !8655

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !8656
  br label %15, !dbg !8656

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8644, metadata !DIExpression()), !dbg !8646
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !8649
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8645, metadata !DIExpression()), !dbg !8646
  %14 = icmp eq %struct._snode* %13, null, !dbg !8649
  br i1 %14, label %15, label %7, !dbg !8647, !llvm.loop !8655

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !8659 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8663, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8664, metadata !DIExpression()), !dbg !8665
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8666
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !8666
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !8666
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8667
  %5 = icmp eq %struct._snode* %4, null, !dbg !8667
  br i1 %5, label %6, label %8, !dbg !8666

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8669
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !8669
  br label %8, !dbg !8669

8:                                                ; preds = %6, %2
  ret void, !dbg !8666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8671 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8675, metadata !DIExpression()), !dbg !8676
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8677
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8677
  ret %struct._snode* %3, !dbg !8678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8679 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8683, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8684, metadata !DIExpression()), !dbg !8685
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8686
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8687
  ret void, !dbg !8688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8689 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8691, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8692, metadata !DIExpression()), !dbg !8693
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8694
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8695
  ret void, !dbg !8696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8697 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8701
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8701
  ret %struct._snode* %3, !dbg !8702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8703 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8705, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8706, metadata !DIExpression()), !dbg !8707
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8708
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8709
  ret void, !dbg !8710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !8711 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8715, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8716, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8717, metadata !DIExpression()), !dbg !8718
  %4 = icmp eq %struct._snode* %1, null, !dbg !8719
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !8721
  br i1 %4, label %6, label %11, !dbg !8722

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !8723
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8725
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8725
  br i1 %8, label %9, label %15, !dbg !8723

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8727
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !8727
  br label %15, !dbg !8727

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !8729
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8731
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8731
  br i1 %13, label %14, label %15, !dbg !8729

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !8733
  br label %15, !dbg !8733

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !8722
  ret void, !dbg !8722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !8735 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8739, metadata !DIExpression()), !dbg !8740
  %2 = icmp eq %struct._snode* %0, null, !dbg !8741
  br i1 %2, label %5, label %3, !dbg !8741

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !8741
  br label %5, !dbg !8741

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8741
  ret %struct._snode* %6, !dbg !8741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8742 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8744, metadata !DIExpression()), !dbg !8745
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !8746
  ret %struct._snode* %2, !dbg !8746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8747 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8749, metadata !DIExpression()), !dbg !8750
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8751
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8751
  ret %struct._snode* %3, !dbg !8752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8755, metadata !DIExpression()), !dbg !8758
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !8759, !range !8760
  call void @llvm.dbg.value(metadata i32 %2, metadata !8756, metadata !DIExpression()), !dbg !8758
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %3, metadata !8757, metadata !DIExpression()), !dbg !8758
  ret i32 %3, !dbg !8762
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8765, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i8* %1, metadata !8766, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i8* %1, metadata !8767, metadata !DIExpression()), !dbg !8768
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8769
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8769
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8770
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8770
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8770
  %8 = shl nuw i32 1, %0, !dbg !8771
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !8772
  ret void, !dbg !8773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8774 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8778, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.value(metadata i32 %1, metadata !8779, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8780, metadata !DIExpression()), !dbg !8784
  %4 = bitcast i64* %3 to i8*, !dbg !8785
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8785
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !8782, metadata !DIExpression()), !dbg !8784
  store i64 4294967328, i64* %3, align 8, !dbg !8786
  call void @llvm.dbg.value(metadata i64* %3, metadata !8782, metadata !DIExpression(DW_OP_deref)), !dbg !8784
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %5, metadata !8783, metadata !DIExpression()), !dbg !8784
  %6 = icmp eq i32 %5, 0, !dbg !8788
  br i1 %6, label %7, label %8, !dbg !8790

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !8791
  br label %8, !dbg !8792

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8793
  ret void, !dbg !8793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8794 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8796, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8800
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8798, metadata !DIExpression()), !dbg !8799
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8801
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8801
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !8802
  ret i32 %5, !dbg !8803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8806, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.value(metadata i32 %1, metadata !8807, metadata !DIExpression()), !dbg !8809
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %3, metadata !8808, metadata !DIExpression()), !dbg !8809
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !8811
  ret void, !dbg !8812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !8813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8817, metadata !DIExpression()), !dbg !8818
  %2 = sdiv i32 %0, 4, !dbg !8819
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8820
  %6 = add nsw i32 %5, 16, !dbg !8821
  %7 = shl i32 15, %6, !dbg !8822
  %8 = or i32 %7, %2, !dbg !8823
  ret i32 %8, !dbg !8824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8830, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32 %1, metadata !8831, metadata !DIExpression()), !dbg !8832
  %3 = and i32 %1, 3, !dbg !8833
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !8833
  %5 = load volatile i32, i32* %4, align 4, !dbg !8833
  %6 = lshr i32 %1, 16, !dbg !8833
  %7 = xor i32 %6, -1, !dbg !8833
  %8 = and i32 %5, %7, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %6, metadata !8834, metadata !DIExpression()) #23, !dbg !8838
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8840, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %9, metadata !8837, metadata !DIExpression()) #23, !dbg !8838
  call void @llvm.dbg.value(metadata i32 %9, metadata !8842, metadata !DIExpression()) #23, !dbg !8847
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8849, !range !7086
  %11 = shl i32 %0, %10, !dbg !8833
  %12 = or i32 %11, %8, !dbg !8833
  store volatile i32 %12, i32* %4, align 4, !dbg !8833
  ret void, !dbg !8850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8851 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8855, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8856, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata i32 %2, metadata !8857, metadata !DIExpression()), !dbg !8860
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8861
  %5 = icmp eq %struct._snode* %4, null, !dbg !8861
  br i1 %5, label %24, label %6, !dbg !8861

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8863
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8859, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !8858, metadata !DIExpression()), !dbg !8860
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8864
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !8864
  %12 = load i32, i32* %11, align 4, !dbg !8864
  %13 = and i32 %12, %2, !dbg !8868
  %14 = icmp eq i32 %13, 0, !dbg !8868
  br i1 %14, label %22, label %15, !dbg !8869

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8870
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8870
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8870
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !8870
  br i1 %19, label %20, label %21, !dbg !8874

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i32 0, i32 0), i32 noundef 77) #26, !dbg !8875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.100, i32 0, i32 0)) #26, !dbg !8875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30, i32 0, i32 0), i32 noundef 77) #26, !dbg !8875
  unreachable, !dbg !8875

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !8877
  br label %22, !dbg !8878

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8858, metadata !DIExpression()), !dbg !8860
  %23 = icmp eq %struct._snode* %8, null, !dbg !8879
  br i1 %23, label %24, label %6, !dbg !8879

24:                                               ; preds = %22, %3
  ret void, !dbg !8880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8883, metadata !DIExpression()), !dbg !8884
  %2 = and i32 %0, 3, !dbg !8885
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !8885
  %4 = load volatile i32, i32* %3, align 4, !dbg !8885
  %5 = lshr i32 %0, 16, !dbg !8885
  %6 = and i32 %4, %5, !dbg !8885
  call void @llvm.dbg.value(metadata i32 %5, metadata !8834, metadata !DIExpression()) #23, !dbg !8886
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !8888, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %7, metadata !8837, metadata !DIExpression()) #23, !dbg !8886
  call void @llvm.dbg.value(metadata i32 %7, metadata !8842, metadata !DIExpression()) #23, !dbg !8889
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8891, !range !7086
  %9 = lshr i32 %6, %8, !dbg !8892
  ret i32 %9, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8894 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8899, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i32 %1, metadata !8900, metadata !DIExpression()), !dbg !8901
  %3 = shl i32 %1, 16, !dbg !8902
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8902
  store volatile i32 %3, i32* %4, align 4, !dbg !8902
  ret void, !dbg !8903
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8904 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8908, metadata !DIExpression()), !dbg !8909
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8910
  %3 = load volatile i32, i32* %2, align 4, !dbg !8910
  ret i32 %3, !dbg !8911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8912 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8914, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 %1, metadata !8915, metadata !DIExpression()), !dbg !8916
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8917
  store volatile i32 %1, i32* %3, align 4, !dbg !8917
  ret void, !dbg !8918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8919 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8921, metadata !DIExpression()), !dbg !8922
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8923
  %3 = load volatile i32, i32* %2, align 4, !dbg !8923
  ret i32 %3, !dbg !8924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !8925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8929, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.value(metadata i32* %1, metadata !8930, metadata !DIExpression()), !dbg !8931
  %3 = and i32 %0, 131072, !dbg !8932
  %4 = icmp eq i32 %3, 0, !dbg !8934
  br i1 %4, label %22, label %5, !dbg !8935

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8936
  %6 = and i32 %0, 2, !dbg !8938
  %7 = icmp eq i32 %6, 0, !dbg !8940
  br i1 %7, label %11, label %8, !dbg !8941

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8942
  %10 = icmp eq i32 %9, 0, !dbg !8942
  br i1 %10, label %33, label %11, !dbg !8945

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8946
  store i32 %12, i32* %1, align 4, !dbg !8946
  %13 = and i32 %0, 16, !dbg !8947
  %14 = icmp eq i32 %13, 0, !dbg !8949
  br i1 %14, label %17, label %15, !dbg !8950

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8951
  br label %31, !dbg !8953

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8954
  %19 = icmp eq i32 %18, 0, !dbg !8956
  br i1 %19, label %33, label %20, !dbg !8957

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8958
  br label %31, !dbg !8960

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8961
  %24 = icmp eq i32 %23, 0, !dbg !8963
  br i1 %24, label %31, label %25, !dbg !8964

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8965
  %27 = icmp eq i32 %26, 0, !dbg !8968
  br i1 %27, label %28, label %31, !dbg !8969

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8970
  br label %33, !dbg !8971

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8931
  ret i32 %34, !dbg !8971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8976, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %1, metadata !8977, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %3, metadata !8979, metadata !DIExpression()), !dbg !8987
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8988
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8988
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8980, metadata !DIExpression()), !dbg !8987
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8989
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8989
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8989
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8981, metadata !DIExpression()), !dbg !8987
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !8990
  call void @llvm.dbg.value(metadata i32 %11, metadata !8982, metadata !DIExpression()), !dbg !8987
  %12 = and i32 %2, 48, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %12, metadata !8983, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %2, metadata !8984, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %2, metadata !8985, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8987
  %13 = lshr i32 %2, 6, !dbg !8992
  %14 = and i32 %13, 1, !dbg !8992
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !8993
  %15 = lshr i32 %2, 7, !dbg !8994
  %16 = and i32 %15, 3, !dbg !8994
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !8995
  %17 = lshr i32 %2, 9, !dbg !8996
  %18 = and i32 %17, 3, !dbg !8996
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !8997
  %19 = icmp eq i32 %12, 32, !dbg !8998
  br i1 %19, label %20, label %24, !dbg !9000

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9001
  br i1 %21, label %22, label %23, !dbg !9004

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9005
  br label %24, !dbg !9007

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9008
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9010
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9011
  ret void, !dbg !9012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9015, metadata !DIExpression()), !dbg !9017
  %2 = shl nuw i32 1, %0, !dbg !9018
  call void @llvm.dbg.value(metadata i32 %2, metadata !9016, metadata !DIExpression()), !dbg !9017
  ret i32 %2, !dbg !9019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9020 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %1, metadata !9025, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %2, metadata !9026, metadata !DIExpression()), !dbg !9027
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9028
  %5 = load volatile i32, i32* %4, align 4, !dbg !9028
  %6 = xor i32 %1, -1, !dbg !9028
  %7 = and i32 %5, %6, !dbg !9028
  %8 = mul i32 %2, %1, !dbg !9028
  %9 = or i32 %7, %8, !dbg !9028
  store volatile i32 %9, i32* %4, align 4, !dbg !9028
  ret void, !dbg !9029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9030 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9032, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %1, metadata !9033, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %2, metadata !9034, metadata !DIExpression()), !dbg !9035
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9036
  %5 = load volatile i32, i32* %4, align 4, !dbg !9036
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9037
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9039, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9037
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9040
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9042, !range !7086
  %8 = shl nuw nsw i32 %7, 1, !dbg !9036
  %9 = shl i32 3, %8, !dbg !9036
  %10 = xor i32 %9, -1, !dbg !9036
  %11 = and i32 %5, %10, !dbg !9036
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9043
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9043
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9045
  %12 = shl i32 %2, %8, !dbg !9036
  %13 = or i32 %11, %12, !dbg !9036
  store volatile i32 %13, i32* %4, align 4, !dbg !9036
  ret void, !dbg !9047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9050, metadata !DIExpression()), !dbg !9053
  call void @llvm.dbg.value(metadata i32 %1, metadata !9051, metadata !DIExpression()), !dbg !9053
  call void @llvm.dbg.value(metadata i32 %2, metadata !9052, metadata !DIExpression()), !dbg !9053
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9054
  %5 = load volatile i32, i32* %4, align 4, !dbg !9054
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9055
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9057, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9058
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9060, !range !7086
  %8 = shl nuw nsw i32 %7, 1, !dbg !9054
  %9 = shl i32 3, %8, !dbg !9054
  %10 = xor i32 %9, -1, !dbg !9054
  %11 = and i32 %5, %10, !dbg !9054
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9061
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9061
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9063
  %12 = shl i32 %2, %8, !dbg !9054
  %13 = or i32 %11, %12, !dbg !9054
  store volatile i32 %13, i32* %4, align 4, !dbg !9054
  ret void, !dbg !9065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9068, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.value(metadata i32 %2, metadata !9070, metadata !DIExpression()), !dbg !9071
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9072
  %5 = load volatile i32, i32* %4, align 4, !dbg !9072
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9073
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9075, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9076
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9078, !range !7086
  %8 = shl nuw nsw i32 %7, 2, !dbg !9072
  %9 = shl i32 15, %8, !dbg !9072
  %10 = xor i32 %9, -1, !dbg !9072
  %11 = and i32 %5, %10, !dbg !9072
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9081
  %12 = shl i32 %2, %8, !dbg !9072
  %13 = or i32 %11, %12, !dbg !9072
  store volatile i32 %13, i32* %4, align 4, !dbg !9072
  ret void, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9086, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %1, metadata !9087, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %2, metadata !9088, metadata !DIExpression()), !dbg !9089
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9090
  %5 = load volatile i32, i32* %4, align 4, !dbg !9090
  %6 = lshr i32 %1, 8, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %6, metadata !8834, metadata !DIExpression()) #23, !dbg !9091
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9093, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %7, metadata !8837, metadata !DIExpression()) #23, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %7, metadata !8842, metadata !DIExpression()) #23, !dbg !9094
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9096, !range !7086
  %9 = shl nuw nsw i32 %8, 2, !dbg !9090
  %10 = shl i32 15, %9, !dbg !9090
  %11 = xor i32 %10, -1, !dbg !9090
  %12 = and i32 %5, %11, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %6, metadata !8834, metadata !DIExpression()) #23, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %7, metadata !8837, metadata !DIExpression()) #23, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %7, metadata !8842, metadata !DIExpression()) #23, !dbg !9099
  %13 = shl i32 %2, %9, !dbg !9090
  %14 = or i32 %12, %13, !dbg !9090
  store volatile i32 %14, i32* %4, align 4, !dbg !9090
  ret void, !dbg !9101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9102 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9104, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %1, metadata !9105, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %2, metadata !9106, metadata !DIExpression()), !dbg !9107
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9108
  %5 = load volatile i32, i32* %4, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9109
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9111, !srcloc !8841
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9112
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9114, !range !7086
  %8 = shl nuw nsw i32 %7, 1, !dbg !9108
  %9 = shl i32 3, %8, !dbg !9108
  %10 = xor i32 %9, -1, !dbg !9108
  %11 = and i32 %5, %10, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %1, metadata !8834, metadata !DIExpression()) #23, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %6, metadata !8837, metadata !DIExpression()) #23, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %6, metadata !8842, metadata !DIExpression()) #23, !dbg !9117
  %12 = shl i32 %2, %8, !dbg !9108
  %13 = or i32 %11, %12, !dbg !9108
  store volatile i32 %13, i32* %4, align 4, !dbg !9108
  ret void, !dbg !9119
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9122, metadata !DIExpression()), !dbg !9125
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9126
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9126
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9126
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9123, metadata !DIExpression()), !dbg !9125
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9127
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9128
  %6 = tail call fastcc zeroext i1 @device_is_ready.109() #24, !dbg !9129
  br i1 %6, label %7, label %11, !dbg !9131

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9132
  call void @llvm.dbg.value(metadata i32 %8, metadata !9124, metadata !DIExpression()), !dbg !9125
  %9 = icmp slt i32 %8, 0, !dbg !9133
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9135
  br label %11, !dbg !9135

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9125
  ret i32 %12, !dbg !9136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.109() unnamed_addr #1 !dbg !9137 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9141, metadata !DIExpression()), !dbg !9142
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9143, !srcloc !9145
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.110() #24, !dbg !9146
  ret i1 %1, !dbg !9147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9148 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9152, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i8 1, metadata !9153, metadata !DIExpression()), !dbg !9157
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9158
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9158
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9154, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 0, metadata !9155, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9156, metadata !DIExpression()), !dbg !9157
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9159
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9162
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9163
  call void @llvm.dbg.value(metadata i32 %7, metadata !9155, metadata !DIExpression()), !dbg !9157
  ret i32 %7, !dbg !9164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.110() unnamed_addr #1 !dbg !9165 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9167, metadata !DIExpression()), !dbg !9168
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !9169
  ret i1 %1, !dbg !9170
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9171 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9175, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 %1, metadata !9176, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 %2, metadata !9177, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 %3, metadata !9178, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 0, metadata !9179, metadata !DIExpression()), !dbg !9183
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9184
  %5 = icmp eq i32 %3, 17, !dbg !9185
  br i1 %5, label %6, label %14, !dbg !9186

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9187
  call void @llvm.dbg.value(metadata i32 %7, metadata !9180, metadata !DIExpression()), !dbg !9188
  %8 = icmp eq i32 %7, 0, !dbg !9189
  %9 = shl nuw i32 1, %1, !dbg !9191
  br i1 %8, label %12, label %10, !dbg !9192

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9193
  br label %14, !dbg !9195

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9196
  br label %14, !dbg !9199

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9200
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #14 !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9203, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata i8* %1, metadata !9204, metadata !DIExpression()), !dbg !9207
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9208
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9208
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9208
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9205, metadata !DIExpression()), !dbg !9207
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9209
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9209
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9211
  %9 = icmp eq i32 %8, 0, !dbg !9211
  br i1 %9, label %12, label %10, !dbg !9212

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9213
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9215
  br label %12, !dbg !9216

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9217
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9219
  %15 = icmp eq i32 %14, 0, !dbg !9219
  br i1 %15, label %19, label %16, !dbg !9220

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9221
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9222
  store i8 %18, i8* %1, align 1, !dbg !9223
  br label %19, !dbg !9224

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9207
  ret i32 %20, !dbg !9225
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9226 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9228, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i8 %1, metadata !9229, metadata !DIExpression()), !dbg !9232
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9233
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9233
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9233
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9230, metadata !DIExpression()), !dbg !9232
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9234

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9235
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9238
  %10 = icmp eq i32 %9, 0, !dbg !9238
  br i1 %10, label %18, label %11, !dbg !9239

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9240, !srcloc !9247
  call void @llvm.dbg.value(metadata i32 undef, metadata !9243, metadata !DIExpression()) #23, !dbg !9248
  call void @llvm.dbg.value(metadata i32 undef, metadata !9244, metadata !DIExpression()) #23, !dbg !9248
  call void @llvm.dbg.value(metadata i32 undef, metadata !9231, metadata !DIExpression()), !dbg !9232
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9249
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9251
  %15 = icmp eq i32 %14, 0, !dbg !9251
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9240
  br i1 %15, label %17, label %19, !dbg !9252

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9243, metadata !DIExpression()) #23, !dbg !9248
  call void @llvm.dbg.value(metadata i32 %16, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 undef, metadata !9253, metadata !DIExpression()) #23, !dbg !9256
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9258, !srcloc !9259
  br label %18, !dbg !9260

18:                                               ; preds = %17, %7
  br label %7, !dbg !9235, !llvm.loop !9261

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9240
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9263
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9264
  call void @llvm.dbg.value(metadata i32 %20, metadata !9253, metadata !DIExpression()) #23, !dbg !9265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9267, !srcloc !9259
  ret void, !dbg !9268
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #14 !dbg !9269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9271, metadata !DIExpression()), !dbg !9274
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9275
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9275
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9275
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 0, metadata !9273, metadata !DIExpression()), !dbg !9274
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9276
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9276
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9278
  %8 = icmp ne i32 %7, 0, !dbg !9278
  %9 = zext i1 %8 to i32, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %9, metadata !9273, metadata !DIExpression()), !dbg !9274
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9280
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9282
  %12 = icmp eq i32 %11, 0, !dbg !9282
  %13 = or i32 %9, 2, !dbg !9283
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9283
  call void @llvm.dbg.value(metadata i32 %14, metadata !9273, metadata !DIExpression()), !dbg !9274
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9284
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9286
  %17 = icmp eq i32 %16, 0, !dbg !9286
  %18 = or i32 %14, 4, !dbg !9287
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %19, metadata !9273, metadata !DIExpression()), !dbg !9274
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9288
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9290
  %22 = icmp eq i32 %21, 0, !dbg !9290
  %23 = or i32 %19, 8, !dbg !9291
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9291
  call void @llvm.dbg.value(metadata i32 %24, metadata !9273, metadata !DIExpression()), !dbg !9274
  %25 = and i32 %24, 8, !dbg !9292
  %26 = icmp eq i32 %25, 0, !dbg !9292
  br i1 %26, label %29, label %27, !dbg !9294

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9295
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9297
  br label %29, !dbg !9298

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9299
  %31 = icmp eq i32 %30, 0, !dbg !9299
  br i1 %31, label %34, label %32, !dbg !9301

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9302
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9304
  br label %34, !dbg !9305

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9306
  %36 = icmp eq i32 %35, 0, !dbg !9306
  br i1 %36, label %39, label %37, !dbg !9308

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9309
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9311
  br label %39, !dbg !9312

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9313
  %41 = icmp eq i32 %40, 0, !dbg !9313
  br i1 %41, label %44, label %42, !dbg !9315

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9316
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9318
  br label %44, !dbg !9319

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9320
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9321
  ret i32 %24, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9323 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9325, metadata !DIExpression()), !dbg !9334
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9326, metadata !DIExpression()), !dbg !9334
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9335
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9335
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9335
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9327, metadata !DIExpression()), !dbg !9334
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9336
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9336
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9336
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9328, metadata !DIExpression()), !dbg !9334
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9337
  %10 = load i8, i8* %9, align 4, !dbg !9337
  %11 = zext i8 %10 to i32, !dbg !9338
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %12, metadata !9330, metadata !DIExpression()), !dbg !9334
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9340
  %14 = load i8, i8* %13, align 1, !dbg !9340
  %15 = zext i8 %14 to i32, !dbg !9341
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9342
  call void @llvm.dbg.value(metadata i32 %16, metadata !9331, metadata !DIExpression()), !dbg !9334
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9343
  %18 = load i8, i8* %17, align 2, !dbg !9343
  %19 = zext i8 %18 to i32, !dbg !9344
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9345
  call void @llvm.dbg.value(metadata i32 %20, metadata !9332, metadata !DIExpression()), !dbg !9334
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9346
  %22 = load i8, i8* %21, align 1, !dbg !9346
  %23 = zext i8 %22 to i32, !dbg !9347
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %24, metadata !9333, metadata !DIExpression()), !dbg !9334
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9349

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9351
  br i1 %26, label %69, label %27, !dbg !9353

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9354

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9355
  br i1 %29, label %65, label %30, !dbg !9355

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9357
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9334
  br i1 %31, label %38, label %34, !dbg !9359

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9360
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9360

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9363
  br i1 %37, label %38, label %69, !dbg !9364

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9365
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9366
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9367
  %41 = icmp eq i32 %12, %40, !dbg !9369
  br i1 %41, label %43, label %42, !dbg !9370

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9371
  br label %43, !dbg !9373

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9374
  %45 = icmp eq i32 %16, %44, !dbg !9376
  br i1 %45, label %47, label %46, !dbg !9377

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9378
  br label %47, !dbg !9380

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9381
  %49 = icmp eq i32 %20, %48, !dbg !9383
  br i1 %49, label %51, label %50, !dbg !9384

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9385
  br label %51, !dbg !9387

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9388
  %53 = icmp eq i32 %24, %52, !dbg !9390
  br i1 %53, label %55, label %54, !dbg !9391

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9392
  br label %55, !dbg !9394

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9395
  %57 = load i32, i32* %56, align 4, !dbg !9395
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9397
  %59 = load i32, i32* %58, align 4, !dbg !9397
  %60 = icmp eq i32 %57, %59, !dbg !9398
  br i1 %60, label %63, label %61, !dbg !9399

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9400
  %62 = load i32, i32* %56, align 4, !dbg !9402
  store i32 %62, i32* %58, align 4, !dbg !9403
  br label %63, !dbg !9404

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9405
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !9406
  br label %69, !dbg !9407

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9355
  %67 = and i8 %66, 1, !dbg !9355
  %68 = icmp eq i8 %67, 0, !dbg !9355
  br i1 %68, label %30, label %69, !dbg !9355

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9334
  ret i32 %70, !dbg !9408
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9415
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9415
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9415
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9413, metadata !DIExpression()), !dbg !9414
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9416
  %7 = load i32, i32* %6, align 4, !dbg !9416
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9417
  store i32 %7, i32* %8, align 4, !dbg !9418
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9419, !range !9420
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !9421
  %11 = trunc i32 %10 to i8, !dbg !9421
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9422
  store i8 %11, i8* %12, align 4, !dbg !9423
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !9424, !range !9425
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !9426
  %15 = trunc i32 %14 to i8, !dbg !9426
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9427
  store i8 %15, i8* %16, align 1, !dbg !9428
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !9429
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9430, !range !9420
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !9431
  %20 = trunc i32 %19 to i8, !dbg !9431
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9432
  store i8 %20, i8* %21, align 2, !dbg !9433
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !9434, !range !9435
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !9436
  %24 = trunc i32 %23 to i8, !dbg !9436
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9437
  store i8 %24, i8* %25, align 1, !dbg !9438
  ret i32 0, !dbg !9439
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9444, metadata !DIExpression()), !dbg !9446
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9447
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9447
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9447
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9445, metadata !DIExpression()), !dbg !9446
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9448
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9448
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !9449
  ret i32 %7, !dbg !9450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9455, metadata !DIExpression()), !dbg !9456
  %2 = icmp eq i32 %0, 1024, !dbg !9457
  %3 = select i1 %2, i32 2, i32 0, !dbg !9457
  %4 = icmp eq i32 %0, 1536, !dbg !9457
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9457
  ret i32 %5, !dbg !9458
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9461, metadata !DIExpression()), !dbg !9463
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9464
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9464
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9464
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9462, metadata !DIExpression()), !dbg !9463
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9465
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9465
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !9466
  ret i32 %7, !dbg !9467
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !9468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9472, metadata !DIExpression()), !dbg !9473
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9474
  %3 = icmp ult i32 %2, 4, !dbg !9474
  br i1 %3, label %4, label %7, !dbg !9474

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9474
  %6 = load i32, i32* %5, align 4, !dbg !9474
  br label %7, !dbg !9474

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9475
  ret i32 %8, !dbg !9477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9480, metadata !DIExpression()), !dbg !9482
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9483
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9483
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9483
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9481, metadata !DIExpression()), !dbg !9482
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9484
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9484
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !9485
  ret i32 %7, !dbg !9486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9491, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i32 %1, metadata !9492, metadata !DIExpression()), !dbg !9493
  %3 = icmp eq i32 %0, 4096, !dbg !9494
  %4 = icmp eq i32 %1, 0, !dbg !9494
  %5 = select i1 %4, i32 4, i32 3, !dbg !9494
  %6 = select i1 %4, i32 3, i32 2, !dbg !9494
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9494
  ret i32 %7, !dbg !9495
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9498, metadata !DIExpression()), !dbg !9500
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9501
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9501
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9501
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9499, metadata !DIExpression()), !dbg !9500
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9502
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9502
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !9503
  ret i32 %7, !dbg !9504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9509, metadata !DIExpression()), !dbg !9510
  %2 = icmp eq i32 %0, 768, !dbg !9511
  %3 = zext i1 %2 to i32, !dbg !9510
  ret i32 %3, !dbg !9513
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9514 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9519, metadata !DIExpression()), !dbg !9520
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9521
  %3 = load volatile i32, i32* %2, align 4, !dbg !9521
  %4 = and i32 %3, 768, !dbg !9521
  ret i32 %4, !dbg !9522
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9523 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9525, metadata !DIExpression()), !dbg !9526
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9527
  %3 = load volatile i32, i32* %2, align 4, !dbg !9527
  %4 = and i32 %3, 4096, !dbg !9527
  ret i32 %4, !dbg !9528
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9531, metadata !DIExpression()), !dbg !9532
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9533
  %3 = load volatile i32, i32* %2, align 4, !dbg !9533
  %4 = and i32 %3, 12288, !dbg !9533
  ret i32 %4, !dbg !9534
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9535 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9537, metadata !DIExpression()), !dbg !9538
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9539
  %3 = load volatile i32, i32* %2, align 4, !dbg !9539
  %4 = and i32 %3, 1536, !dbg !9539
  ret i32 %4, !dbg !9540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9545, metadata !DIExpression()), !dbg !9546
  %2 = icmp eq i32 %0, 2, !dbg !9547
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9547
  %4 = icmp eq i32 %0, 1, !dbg !9547
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9547
  ret i32 %5, !dbg !9548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9553, metadata !DIExpression()), !dbg !9554
  %2 = icmp ult i32 %0, 3, !dbg !9555
  br i1 %2, label %3, label %6, !dbg !9555

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9555
  %5 = load i32, i32* %4, align 4, !dbg !9555
  br label %6, !dbg !9555

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9556
  ret i32 %7, !dbg !9558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %1, metadata !9564, metadata !DIExpression()), !dbg !9565
  %3 = icmp eq i32 %0, 4, !dbg !9566
  %4 = icmp eq i32 %1, 0, !dbg !9566
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9566
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9566
  ret i32 %6, !dbg !9567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9572, metadata !DIExpression()), !dbg !9573
  %2 = icmp eq i32 %0, 1, !dbg !9574
  %3 = select i1 %2, i32 768, i32 0, !dbg !9573
  ret i32 %3, !dbg !9576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9577 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9581, metadata !DIExpression()), !dbg !9582
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9583
  %3 = load volatile i32, i32* %2, align 4, !dbg !9583
  %4 = and i32 %3, -8193, !dbg !9583
  store volatile i32 %4, i32* %2, align 4, !dbg !9583
  ret void, !dbg !9584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9589, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9590, metadata !DIExpression()), !dbg !9592
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9593
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9593
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9591, metadata !DIExpression()), !dbg !9592
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9594
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9594
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9595
  ret void, !dbg !9596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9597 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9599, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %1, metadata !9600, metadata !DIExpression()), !dbg !9602
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9603
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9603
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9603
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9601, metadata !DIExpression()), !dbg !9602
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9604
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9604
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9605
  ret void, !dbg !9606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9609, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 %1, metadata !9610, metadata !DIExpression()), !dbg !9612
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9613
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9613
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9613
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9611, metadata !DIExpression()), !dbg !9612
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9614
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9614
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9619, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 %1, metadata !9620, metadata !DIExpression()), !dbg !9622
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9623
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9623
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9623
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9621, metadata !DIExpression()), !dbg !9622
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9624
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9624
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9625
  ret void, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9627 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9629, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9634
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9635
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9635
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9635
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9631, metadata !DIExpression()), !dbg !9634
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9636
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9636
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9636
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9632, metadata !DIExpression()), !dbg !9634
  %10 = bitcast i32* %3 to i8*, !dbg !9637
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9637
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9638
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9638
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9642
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9642
  %15 = load i8*, i8** %14, align 4, !dbg !9642
  call void @llvm.dbg.value(metadata i32* %3, metadata !9633, metadata !DIExpression(DW_OP_deref)), !dbg !9634
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !9643
  %17 = icmp slt i32 %16, 0, !dbg !9644
  br i1 %17, label %28, label %18, !dbg !9645

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9646
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9646
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !9647
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9648
  %22 = load i32, i32* %3, align 4, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %22, metadata !9633, metadata !DIExpression()), !dbg !9634
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !9650
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9651
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9651
  %25 = load volatile i32, i32* %24, align 4, !dbg !9651
  %26 = icmp ugt i32 %25, 16, !dbg !9651
  br i1 %26, label %28, label %27, !dbg !9654

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.112, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.114, i32 0, i32 0), i32 noundef 190) #26, !dbg !9655
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.115, i32 0, i32 0)) #26, !dbg !9655
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.114, i32 0, i32 0), i32 noundef 190) #26, !dbg !9655
  unreachable, !dbg !9655

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9657
  ret void, !dbg !9657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9658 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9662
  %3 = load volatile i32, i32* %2, align 4, !dbg !9662
  %4 = or i32 %3, 8192, !dbg !9662
  store volatile i32 %4, i32* %2, align 4, !dbg !9662
  ret void, !dbg !9663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9666, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.value(metadata i8* %1, metadata !9667, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.value(metadata i32* %2, metadata !9668, metadata !DIExpression()), !dbg !9670
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9671
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9671
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9671
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9669, metadata !DIExpression()), !dbg !9670
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9672
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9672
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9674
  br i1 %9, label %12, label %10, !dbg !9675

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !9676
  br label %12, !dbg !9677

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9670
  ret i32 %13, !dbg !9678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9679 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9683, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata i32 0, metadata !9684, metadata !DIExpression()), !dbg !9685
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9686
  %3 = load volatile i32, i32* %2, align 4, !dbg !9686
  %4 = and i32 %3, -32769, !dbg !9686
  store volatile i32 %4, i32* %2, align 4, !dbg !9686
  ret void, !dbg !9687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9688 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9692, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata i32 %1, metadata !9693, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata i32 0, metadata !9694, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata i32 %2, metadata !9695, metadata !DIExpression()), !dbg !9696
  %4 = mul i32 %1, 25, !dbg !9697
  %5 = shl i32 %2, 2, !dbg !9697
  %6 = udiv i32 %4, %5, !dbg !9697
  %7 = udiv i32 %6, 100, !dbg !9697
  %8 = shl nuw nsw i32 %7, 4, !dbg !9697
  %9 = mul i32 %7, -100, !dbg !9697
  %10 = add i32 %9, %6, !dbg !9697
  %11 = shl i32 %10, 4, !dbg !9697
  %12 = add i32 %11, 50, !dbg !9697
  %13 = udiv i32 %12, 100, !dbg !9697
  %14 = and i32 %13, 240, !dbg !9697
  %15 = add nuw nsw i32 %14, %8, !dbg !9697
  %16 = and i32 %13, 15, !dbg !9697
  %17 = and i32 %15, 65520, !dbg !9700
  %18 = or i32 %17, %16, !dbg !9700
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9701
  store volatile i32 %18, i32* %19, align 4, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9706, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.value(metadata i32 %1, metadata !9707, metadata !DIExpression()), !dbg !9708
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9709
  %4 = load volatile i32, i32* %3, align 4, !dbg !9709
  %5 = and i32 %4, -769, !dbg !9709
  %6 = or i32 %5, %1, !dbg !9709
  store volatile i32 %6, i32* %3, align 4, !dbg !9709
  ret void, !dbg !9710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9711 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9713, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %1, metadata !9714, metadata !DIExpression()), !dbg !9715
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9716
  %4 = load volatile i32, i32* %3, align 4, !dbg !9716
  %5 = and i32 %4, -4097, !dbg !9716
  %6 = or i32 %5, %1, !dbg !9716
  store volatile i32 %6, i32* %3, align 4, !dbg !9716
  ret void, !dbg !9717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9718 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9720, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i32 %1, metadata !9721, metadata !DIExpression()), !dbg !9722
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9723
  %4 = load volatile i32, i32* %3, align 4, !dbg !9723
  %5 = and i32 %4, -12289, !dbg !9723
  %6 = or i32 %5, %1, !dbg !9723
  store volatile i32 %6, i32* %3, align 4, !dbg !9723
  ret void, !dbg !9724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9725 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9727, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.value(metadata i32 %1, metadata !9728, metadata !DIExpression()), !dbg !9729
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9730
  %4 = load volatile i32, i32* %3, align 4, !dbg !9730
  %5 = and i32 %4, -1537, !dbg !9730
  %6 = or i32 %5, %1, !dbg !9730
  store volatile i32 %6, i32* %3, align 4, !dbg !9730
  ret void, !dbg !9731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9734, metadata !DIExpression()), !dbg !9735
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9736
  %3 = load volatile i32, i32* %2, align 4, !dbg !9736
  %4 = lshr i32 %3, 3, !dbg !9737
  %5 = and i32 %4, 1, !dbg !9737
  ret i32 %5, !dbg !9738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9739 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9741, metadata !DIExpression()), !dbg !9742
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9743
  %3 = load volatile i32, i32* %2, align 4, !dbg !9743
  %4 = and i32 %3, 1, !dbg !9743
  ret i32 %4, !dbg !9744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9747, metadata !DIExpression()), !dbg !9748
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9749
  %3 = load volatile i32, i32* %2, align 4, !dbg !9749
  %4 = lshr i32 %3, 1, !dbg !9750
  %5 = and i32 %4, 1, !dbg !9750
  ret i32 %5, !dbg !9751
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9754, metadata !DIExpression()), !dbg !9755
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9756
  %3 = load volatile i32, i32* %2, align 4, !dbg !9756
  %4 = lshr i32 %3, 8, !dbg !9757
  %5 = and i32 %4, 1, !dbg !9757
  ret i32 %5, !dbg !9758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9759 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9763
  store volatile i32 -257, i32* %2, align 4, !dbg !9763
  ret void, !dbg !9764
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9765 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9767, metadata !DIExpression()), !dbg !9769
  %3 = bitcast i32* %2 to i8*, !dbg !9770
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9768, metadata !DIExpression()), !dbg !9771
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9772
  %5 = load volatile i32, i32* %4, align 4, !dbg !9772
  store volatile i32 %5, i32* %2, align 4, !dbg !9773
  %6 = load volatile i32, i32* %2, align 4, !dbg !9774
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9775
  %8 = load volatile i32, i32* %7, align 4, !dbg !9775
  store volatile i32 %8, i32* %2, align 4, !dbg !9776
  %9 = load volatile i32, i32* %2, align 4, !dbg !9777
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9778
  ret void, !dbg !9778
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9779 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9781, metadata !DIExpression()), !dbg !9783
  %3 = bitcast i32* %2 to i8*, !dbg !9784
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9782, metadata !DIExpression()), !dbg !9785
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9786
  %5 = load volatile i32, i32* %4, align 4, !dbg !9786
  store volatile i32 %5, i32* %2, align 4, !dbg !9787
  %6 = load volatile i32, i32* %2, align 4, !dbg !9788
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9789
  %8 = load volatile i32, i32* %7, align 4, !dbg !9789
  store volatile i32 %8, i32* %2, align 4, !dbg !9790
  %9 = load volatile i32, i32* %2, align 4, !dbg !9791
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9792
  ret void, !dbg !9792
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9793 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9795, metadata !DIExpression()), !dbg !9797
  %3 = bitcast i32* %2 to i8*, !dbg !9798
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9798
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9796, metadata !DIExpression()), !dbg !9799
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9800
  %5 = load volatile i32, i32* %4, align 4, !dbg !9800
  store volatile i32 %5, i32* %2, align 4, !dbg !9801
  %6 = load volatile i32, i32* %2, align 4, !dbg !9802
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9803
  %8 = load volatile i32, i32* %7, align 4, !dbg !9803
  store volatile i32 %8, i32* %2, align 4, !dbg !9804
  %9 = load volatile i32, i32* %2, align 4, !dbg !9805
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9806
  ret void, !dbg !9806
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9807 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9809, metadata !DIExpression()), !dbg !9811
  %3 = bitcast i32* %2 to i8*, !dbg !9812
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9812
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9810, metadata !DIExpression()), !dbg !9813
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9814
  %5 = load volatile i32, i32* %4, align 4, !dbg !9814
  store volatile i32 %5, i32* %2, align 4, !dbg !9815
  %6 = load volatile i32, i32* %2, align 4, !dbg !9816
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9817
  %8 = load volatile i32, i32* %7, align 4, !dbg !9817
  store volatile i32 %8, i32* %2, align 4, !dbg !9818
  %9 = load volatile i32, i32* %2, align 4, !dbg !9819
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9820
  ret void, !dbg !9820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9823, metadata !DIExpression()), !dbg !9824
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9825
  %3 = load volatile i32, i32* %2, align 4, !dbg !9825
  %4 = lshr i32 %3, 7, !dbg !9826
  %5 = and i32 %4, 1, !dbg !9826
  ret i32 %5, !dbg !9827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9828 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9832, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata i8 %1, metadata !9833, metadata !DIExpression()), !dbg !9834
  %3 = zext i8 %1 to i32, !dbg !9835
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9836
  store volatile i32 %3, i32* %4, align 4, !dbg !9837
  ret void, !dbg !9838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9841, metadata !DIExpression()), !dbg !9842
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9843
  %3 = load volatile i32, i32* %2, align 4, !dbg !9843
  %4 = lshr i32 %3, 5, !dbg !9844
  %5 = and i32 %4, 1, !dbg !9844
  ret i32 %5, !dbg !9845
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9850, metadata !DIExpression()), !dbg !9851
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9852
  %3 = load volatile i32, i32* %2, align 4, !dbg !9852
  %4 = trunc i32 %3 to i8, !dbg !9853
  ret i8 %4, !dbg !9854
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9855 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9857, metadata !DIExpression()), !dbg !9863
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9864
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9864
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9858, metadata !DIExpression()), !dbg !9863
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9865
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9865
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9865
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9859, metadata !DIExpression()), !dbg !9863
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !9866
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9867
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9867
  %10 = tail call fastcc zeroext i1 @device_is_ready.120(%struct.device* noundef %9) #24, !dbg !9869
  br i1 %10, label %11, label %49, !dbg !9870

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9871
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9872
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9872
  %15 = load i8*, i8** %14, align 4, !dbg !9872
  %16 = tail call fastcc i32 @clock_control_on.121(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %16, metadata !9862, metadata !DIExpression()), !dbg !9863
  %17 = icmp eq i32 %16, 0, !dbg !9874
  br i1 %17, label %18, label %49, !dbg !9876

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9877
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9877
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !9878
  call void @llvm.dbg.value(metadata i32 %21, metadata !9862, metadata !DIExpression()), !dbg !9863
  %22 = icmp slt i32 %21, 0, !dbg !9879
  br i1 %22, label %49, label %23, !dbg !9881

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9882
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9882
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !9883
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9884
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !9885
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9886
  %28 = load i32, i32* %27, align 4, !dbg !9886
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9888

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9860, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 4096, metadata !9861, metadata !DIExpression()), !dbg !9863
  br label %31, !dbg !9889

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9860, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 0, metadata !9861, metadata !DIExpression()), !dbg !9863
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9892
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9892
  call void @llvm.dbg.value(metadata i32 %33, metadata !9861, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %32, metadata !9860, metadata !DIExpression()), !dbg !9863
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9893
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !9894
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9895
  %36 = load i8, i8* %35, align 4, !dbg !9895, !range !3998
  %37 = icmp eq i8 %36, 0, !dbg !9895
  br i1 %37, label %39, label %38, !dbg !9897

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !9898
  br label %39, !dbg !9900

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9901
  %41 = load i32, i32* %40, align 4, !dbg !9901
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !9902
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9903
  %43 = load i8, i8* %42, align 4, !dbg !9903, !range !3998
  %44 = icmp eq i8 %43, 0, !dbg !9903
  br i1 %44, label %47, label %45, !dbg !9905

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9906
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !9908
  br label %47, !dbg !9909

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9910
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !9911
  br label %49, !dbg !9912

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9863
  ret i32 %50, !dbg !9913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9918, metadata !DIExpression()), !dbg !9922
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9923
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9923
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9923
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9919, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9920, metadata !DIExpression()), !dbg !9922
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9924
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !9925
  ret void, !dbg !9926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.120(%struct.device* noundef %0) unnamed_addr #1 !dbg !9927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9931, metadata !DIExpression()), !dbg !9932
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9933, !srcloc !9935
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.122(%struct.device* noundef %0) #24, !dbg !9936
  ret i1 %2, !dbg !9937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.121(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9940, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i8* %1, metadata !9941, metadata !DIExpression()), !dbg !9943
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9944
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9944
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9944
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9942, metadata !DIExpression()), !dbg !9943
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9945
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9945
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !9946
  ret i32 %8, !dbg !9947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9948 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9952, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.value(metadata i8 0, metadata !9953, metadata !DIExpression()), !dbg !9956
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9957
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9957
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9955, metadata !DIExpression(DW_OP_deref)), !dbg !9956
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %4, metadata !9954, metadata !DIExpression()), !dbg !9956
  %5 = icmp slt i32 %4, 0, !dbg !9959
  br i1 %5, label %9, label %6, !dbg !9961

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9962
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9955, metadata !DIExpression()), !dbg !9956
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !9963
  br label %9, !dbg !9964

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9956
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9965
  ret i32 %10, !dbg !9965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9966 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9968, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata i32 12, metadata !9969, metadata !DIExpression()), !dbg !9970
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9971
  %3 = load volatile i32, i32* %2, align 4, !dbg !9971
  %4 = or i32 %3, 12, !dbg !9971
  store volatile i32 %4, i32* %2, align 4, !dbg !9971
  ret void, !dbg !9972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9973 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9975, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %1, metadata !9976, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %2, metadata !9977, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9980
  %5 = load volatile i32, i32* %4, align 4, !dbg !9980
  %6 = and i32 %5, -5633, !dbg !9980
  %7 = or i32 %2, %1, !dbg !9980
  %8 = or i32 %7, %6, !dbg !9980
  store volatile i32 %8, i32* %4, align 4, !dbg !9980
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9981
  %10 = load volatile i32, i32* %9, align 4, !dbg !9981
  %11 = and i32 %10, -12289, !dbg !9981
  store volatile i32 %11, i32* %9, align 4, !dbg !9981
  ret void, !dbg !9982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9983 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9985, metadata !DIExpression()), !dbg !9986
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9987
  %3 = load volatile i32, i32* %2, align 4, !dbg !9987
  %4 = or i32 %3, 8, !dbg !9987
  store volatile i32 %4, i32* %2, align 4, !dbg !9987
  ret void, !dbg !9988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9989 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9993, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9994, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9997
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !9997
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9998
  %5 = load i8, i8* %4, align 4, !dbg !9998
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !9999
  ret i32 %6, !dbg !10000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.122(%struct.device* noundef %0) unnamed_addr #1 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10004
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10005
  ret i1 %2, !dbg !10006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10009, metadata !DIExpression()), !dbg !10010
  tail call fastcc void @__NVIC_SetPriority.124() #24, !dbg !10011
  store i32 3199, i32* @last_load, align 4, !dbg !10012
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10013
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10014
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10015
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10016
  %3 = or i32 %2, 7, !dbg !10016
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10016
  ret i32 0, !dbg !10017
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.124() unnamed_addr #15 !dbg !10018 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10020, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i32 1, metadata !10021, metadata !DIExpression()), !dbg !10022
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10023
  ret void, !dbg !10026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10027 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10029, metadata !DIExpression()), !dbg !10031
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10032
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10033
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10034
  %5 = add i32 %4, %3, !dbg !10034
  store i32 %5, i32* @cycle_count, align 4, !dbg !10034
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10035
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10036
  %7 = sub i32 %5, %6, !dbg !10039
  %8 = udiv i32 %7, 3200, !dbg !10040
  call void @llvm.dbg.value(metadata i32 %8, metadata !10030, metadata !DIExpression()), !dbg !10031
  %9 = mul nuw i32 %8, 3200, !dbg !10041
  %10 = add i32 %9, %6, !dbg !10042
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10042
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10043
  tail call void @z_arm_int_exit() #26, !dbg !10044
  ret void, !dbg !10045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10046 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10051
  call void @llvm.dbg.value(metadata i32 %1, metadata !10048, metadata !DIExpression()), !dbg !10052
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %2, metadata !10049, metadata !DIExpression()), !dbg !10052
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10054
  call void @llvm.dbg.value(metadata i32 %3, metadata !10050, metadata !DIExpression()), !dbg !10052
  %4 = and i32 %2, 65536, !dbg !10055
  %5 = icmp ne i32 %4, 0, !dbg !10055
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10057
  %8 = load i32, i32* @last_load, align 4, !dbg !10052
  br i1 %7, label %9, label %13, !dbg !10057

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10058
  %11 = add i32 %10, %8, !dbg !10058
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10058
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10060
  br label %13, !dbg !10061

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10062
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10063
  %16 = add i32 %14, %15, !dbg !10064
  ret i32 %16, !dbg !10065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10070, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i1 %1, metadata !10071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10083
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10084
  br i1 %4, label %5, label %8, !dbg !10084

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10086
  %7 = and i32 %6, -2, !dbg !10086
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10086
  store i32 -16777216, i32* @last_load, align 4, !dbg !10088
  br label %60, !dbg !10089

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %9, metadata !10075, metadata !DIExpression()), !dbg !10083
  br i1 %3, label %18, label %10, !dbg !10091

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10091
  call void @llvm.dbg.value(metadata i32 undef, metadata !10070, metadata !DIExpression()), !dbg !10083
  %12 = icmp slt i32 %11, 1, !dbg !10092
  br i1 %12, label %18, label %13, !dbg !10092

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !10092
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !10092
  %16 = mul nuw nsw i32 %15, 3200, !dbg !10092
  %17 = add nuw nsw i32 %16, 3199, !dbg !10092
  br label %18, !dbg !10092

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10070, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10093, metadata !DIExpression()) #23, !dbg !10100
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10102, !srcloc !10108
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()) #23, !dbg !10109
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #23, !dbg !10109
  call void @llvm.dbg.value(metadata i32 undef, metadata !10099, metadata !DIExpression()) #23, !dbg !10100
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10110
  br i1 %21, label %23, label %22, !dbg !10113

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 148) #26, !dbg !10114
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.128, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10114
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 148) #26, !dbg !10114
  unreachable, !dbg !10114

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %24, metadata !10105, metadata !DIExpression()) #23, !dbg !10109
  call void @llvm.dbg.value(metadata i32 %24, metadata !10099, metadata !DIExpression()) #23, !dbg !10100
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %24, metadata !10076, metadata !DIExpression()), !dbg !10083
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10117
  call void @llvm.dbg.value(metadata i32 %25, metadata !10081, metadata !DIExpression()), !dbg !10083
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10118
  call void @llvm.dbg.value(metadata i32 %26, metadata !10073, metadata !DIExpression()), !dbg !10083
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10119
  %28 = add i32 %27, %25, !dbg !10119
  store i32 %28, i32* @cycle_count, align 4, !dbg !10119
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10120
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10121
  %30 = sub i32 %28, %29, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %30, metadata !10082, metadata !DIExpression()), !dbg !10083
  %31 = icmp slt i32 %30, 0, !dbg !10123
  br i1 %31, label %41, label %32, !dbg !10125

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10072, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 undef, metadata !10072, metadata !DIExpression()), !dbg !10083
  %33 = add nuw i32 %19, %30, !dbg !10126
  %34 = urem i32 %33, 3200, !dbg !10128
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10072, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10083
  %35 = sub nuw nsw i32 %19, %34, !dbg !10129
  call void @llvm.dbg.value(metadata i32 %35, metadata !10072, metadata !DIExpression()), !dbg !10083
  %36 = icmp ugt i32 %35, 1024, !dbg !10130
  br i1 %36, label %37, label %39, !dbg !10130

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10072, metadata !DIExpression()), !dbg !10083
  %38 = icmp ugt i32 %35, 16771200, !dbg !10131
  br i1 %38, label %41, label %39, !dbg !10133

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10134
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10135
  call void @llvm.dbg.value(metadata i32 %43, metadata !10074, metadata !DIExpression()), !dbg !10083
  %44 = add nsw i32 %42, -1, !dbg !10136
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10137
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10138
  %45 = icmp ult i32 %26, %43, !dbg !10139
  br i1 %45, label %46, label %51, !dbg !10141

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10142
  %48 = add i32 %26, %9, !dbg !10144
  %49 = sub i32 %48, %43, !dbg !10145
  %50 = add i32 %49, %47, !dbg !10142
  br label %55, !dbg !10146

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10147
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10149
  %54 = add i32 %52, %53, !dbg !10149
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10150
  store i32 %56, i32* @cycle_count, align 4, !dbg !10150
  call void @llvm.dbg.value(metadata i32 undef, metadata !10151, metadata !DIExpression()) #23, !dbg !10157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10156, metadata !DIExpression()) #23, !dbg !10157
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10159
  br i1 %57, label %59, label %58, !dbg !10162

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 194) #26, !dbg !10163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.130, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 194) #26, !dbg !10163
  unreachable, !dbg !10163

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10151, metadata !DIExpression()) #23, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %24, metadata !10165, metadata !DIExpression()) #23, !dbg !10168
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10170, !srcloc !10171
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10173 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10093, metadata !DIExpression()) #23, !dbg !10177
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10179, !srcloc !10108
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()) #23, !dbg !10181
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #23, !dbg !10181
  call void @llvm.dbg.value(metadata i32 undef, metadata !10099, metadata !DIExpression()) #23, !dbg !10177
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10182
  br i1 %2, label %4, label %3, !dbg !10183

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 148) #26, !dbg !10184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.128, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 148) #26, !dbg !10184
  unreachable, !dbg !10184

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()) #23, !dbg !10181
  call void @llvm.dbg.value(metadata i32 undef, metadata !10099, metadata !DIExpression()) #23, !dbg !10177
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10185
  call void @llvm.dbg.value(metadata i32 undef, metadata !10175, metadata !DIExpression()), !dbg !10186
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10187
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10188
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10189
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10176, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10186
  call void @llvm.dbg.value(metadata i32 undef, metadata !10151, metadata !DIExpression()) #23, !dbg !10190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10156, metadata !DIExpression()) #23, !dbg !10190
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10192
  br i1 %8, label %10, label %9, !dbg !10193

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 194) #26, !dbg !10194
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.130, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 194) #26, !dbg !10194
  unreachable, !dbg !10194

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10195
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10176, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10186
  %12 = sub i32 %11, %7, !dbg !10196
  call void @llvm.dbg.value(metadata i32 %12, metadata !10176, metadata !DIExpression()), !dbg !10186
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %13, metadata !10105, metadata !DIExpression()) #23, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %13, metadata !10099, metadata !DIExpression()) #23, !dbg !10177
  call void @llvm.dbg.value(metadata i32 %13, metadata !10175, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 undef, metadata !10151, metadata !DIExpression()) #23, !dbg !10190
  call void @llvm.dbg.value(metadata i32 undef, metadata !10165, metadata !DIExpression()) #23, !dbg !10197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10199, !srcloc !10171
  %14 = udiv i32 %12, 3200, !dbg !10200
  ret i32 %14, !dbg !10201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10093, metadata !DIExpression()) #23, !dbg !10206
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10208, !srcloc !10108
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()) #23, !dbg !10210
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #23, !dbg !10210
  call void @llvm.dbg.value(metadata i32 undef, metadata !10099, metadata !DIExpression()) #23, !dbg !10206
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10211
  br i1 %2, label %4, label %3, !dbg !10212

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 148) #26, !dbg !10213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.128, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 148) #26, !dbg !10213
  unreachable, !dbg !10213

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10105, metadata !DIExpression()) #23, !dbg !10210
  call void @llvm.dbg.value(metadata i32 undef, metadata !10099, metadata !DIExpression()) #23, !dbg !10206
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10214
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression()), !dbg !10215
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10216
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10217
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10205, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10215
  call void @llvm.dbg.value(metadata i32 undef, metadata !10151, metadata !DIExpression()) #23, !dbg !10218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10156, metadata !DIExpression()) #23, !dbg !10218
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10220
  br i1 %7, label %9, label %8, !dbg !10221

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 194) #26, !dbg !10222
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.130, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.127, i32 0, i32 0), i32 noundef 194) #26, !dbg !10222
  unreachable, !dbg !10222

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10223
  call void @llvm.dbg.value(metadata i32 %10, metadata !10205, metadata !DIExpression()), !dbg !10215
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10208
  call void @llvm.dbg.value(metadata i32 %11, metadata !10105, metadata !DIExpression()) #23, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %11, metadata !10099, metadata !DIExpression()) #23, !dbg !10206
  call void @llvm.dbg.value(metadata i32 %11, metadata !10204, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 undef, metadata !10151, metadata !DIExpression()) #23, !dbg !10218
  call void @llvm.dbg.value(metadata i32 undef, metadata !10165, metadata !DIExpression()) #23, !dbg !10224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10226, !srcloc !10171
  ret i32 %10, !dbg !10227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10228 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10229
  %2 = icmp eq i32 %1, -16777216, !dbg !10231
  br i1 %2, label %3, label %6, !dbg !10232

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10233
  %5 = or i32 %4, 1, !dbg !10233
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10233
  br label %6, !dbg !10235

6:                                                ; preds = %3, %0
  ret void, !dbg !10236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10237 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10238
  %2 = and i32 %1, -2, !dbg !10238
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10266, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i8 %1, metadata !10267, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10268, metadata !DIExpression()), !dbg !10269
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10270
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10270
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10269
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10271
  %8 = load i8, i8* %6, align 4, !dbg !10272
  %9 = zext i8 %8 to i32, !dbg !10273
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10273
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10274
  br i1 %11, label %18, label %24, !dbg !10275

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10269
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10271
  %14 = load i8, i8* %6, align 4, !dbg !10272
  %15 = zext i8 %14 to i32, !dbg !10273
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10273
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10274
  br i1 %17, label %18, label %24, !dbg !10275, !llvm.loop !10276

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10278
  %21 = load i8, i8* %20, align 1, !dbg !10278
  %22 = icmp eq i8 %21, %1, !dbg !10281
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10282
  br i1 %22, label %24, label %12, !dbg !10283

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10269
  ret i32 %25, !dbg !10284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10296, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i8 %1, metadata !10297, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 %2, metadata !10298, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 0, metadata !10301, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 0, metadata !10302, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i8 0, metadata !10303, metadata !DIExpression()), !dbg !10313
  %4 = icmp eq i8 %1, 0, !dbg !10314
  br i1 %4, label %35, label %5, !dbg !10315

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10314
  br label %9, !dbg !10315

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10303, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %29, metadata !10301, metadata !DIExpression()), !dbg !10312
  %8 = icmp eq i32 %34, %6, !dbg !10314
  br i1 %8, label %35, label %9, !dbg !10315, !llvm.loop !10316

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10303, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %11, metadata !10301, metadata !DIExpression()), !dbg !10312
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10318
  %13 = load i32, i32* %12, align 4, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %13, metadata !10300, metadata !DIExpression()), !dbg !10312
  %14 = and i32 %13, 31, !dbg !10319
  %15 = icmp ult i32 %14, 16, !dbg !10320
  br i1 %15, label %16, label %20, !dbg !10321

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10322
  %18 = load i32, i32* %17, align 4, !dbg !10322
  %19 = or i32 %18, 32, !dbg !10324
  call void @llvm.dbg.value(metadata i32 %19, metadata !10301, metadata !DIExpression()), !dbg !10312
  br label %28, !dbg !10325

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10326

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10327
  %23 = load i32, i32* %22, align 4, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %23, metadata !10305, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10328
  %24 = lshr i32 %23, 7, !dbg !10329
  %25 = and i32 %24, 16, !dbg !10329
  %26 = or i32 %25, %23, !dbg !10329
  call void @llvm.dbg.value(metadata i32 %26, metadata !10301, metadata !DIExpression()), !dbg !10312
  br label %28, !dbg !10330

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10312
  call void @llvm.dbg.value(metadata i32 %29, metadata !10301, metadata !DIExpression()), !dbg !10312
  %30 = lshr i32 %13, 5, !dbg !10331
  %31 = and i32 %30, 255, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %31, metadata !10299, metadata !DIExpression()), !dbg !10312
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10332
  call void @llvm.dbg.value(metadata i32 %32, metadata !10302, metadata !DIExpression()), !dbg !10312
  %33 = icmp slt i32 %32, 0, !dbg !10333
  %34 = add nuw nsw i32 %10, 1, !dbg !10335
  call void @llvm.dbg.value(metadata i32 %34, metadata !10303, metadata !DIExpression()), !dbg !10313
  br i1 %33, label %35, label %7, !dbg !10336

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10342, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %2, metadata !10344, metadata !DIExpression()), !dbg !10346
  %4 = icmp ugt i32 %0, 175, !dbg !10347
  br i1 %4, label %17, label %5, !dbg !10349

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10350
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10351
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10351
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10345, metadata !DIExpression()), !dbg !10346
  %9 = lshr i32 1888, %6, !dbg !10352
  %10 = and i32 %9, 1, !dbg !10352
  %11 = icmp eq i32 %10, 0, !dbg !10352
  br i1 %11, label %12, label %17, !dbg !10354

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %8) #24, !dbg !10355
  br i1 %13, label %14, label %17, !dbg !10356

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !10357
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #26, !dbg !10358
  br label %17, !dbg !10359

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !10346
  ret i32 %18, !dbg !10360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %0) unnamed_addr #1 !dbg !10361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10365, metadata !DIExpression()), !dbg !10366
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10367, !srcloc !10369
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.136(%struct.device* noundef %0) #24, !dbg !10370
  ret i1 %2, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.136(%struct.device* noundef %0) unnamed_addr #1 !dbg !10372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10374, metadata !DIExpression()), !dbg !10375
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10376
  ret i1 %2, !dbg !10377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10378 {
  ret void, !dbg !10379
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10380 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10382, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 0, metadata !10383, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 0, metadata !10384, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 0, metadata !10385, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.value(metadata i32 0, metadata !10386, metadata !DIExpression()), !dbg !10387
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10388
  call void @llvm.dbg.value(metadata i32 %1, metadata !10382, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !10387
  %2 = lshr i32 %1, 2, !dbg !10389
  %3 = and i32 %2, 3, !dbg !10389
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !10389

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10390
  %6 = lshr i32 %5, 13, !dbg !10392
  %7 = and i32 %6, 7, !dbg !10392
  call void @llvm.dbg.value(metadata i32 %7, metadata !10386, metadata !DIExpression()), !dbg !10387
  %8 = shl nuw nsw i32 65536, %7, !dbg !10393
  br label %31, !dbg !10394

9:                                                ; preds = %0
  br label %31, !dbg !10395

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10396
  call void @llvm.dbg.value(metadata i32 %11, metadata !10383, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !10387
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10397
  call void @llvm.dbg.value(metadata i32 %12, metadata !10384, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !10387
  %13 = lshr i32 %11, 18, !dbg !10398
  %14 = and i32 %13, 15, !dbg !10398
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !10399
  %16 = load i8, i8* %15, align 1, !dbg !10399
  %17 = zext i8 %16 to i32, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %17, metadata !10383, metadata !DIExpression()), !dbg !10387
  %18 = lshr i32 %12, 22, !dbg !10400
  %19 = and i32 %18, 3, !dbg !10400
  %20 = add nuw nsw i32 %19, 1, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %20, metadata !10384, metadata !DIExpression()), !dbg !10387
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10402
  %22 = and i32 %21, 65536, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %22, metadata !10385, metadata !DIExpression()), !dbg !10387
  %23 = icmp eq i32 %22, 0, !dbg !10404
  br i1 %23, label %24, label %27, !dbg !10406

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !10407
  %26 = udiv i32 %25, %20, !dbg !10409
  br label %31, !dbg !10410

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !10411
  %29 = udiv i32 %28, %20, !dbg !10413
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !10414
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10415
  %34 = lshr i32 %33, 4, !dbg !10416
  %35 = and i32 %34, 15, !dbg !10416
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !10417
  %37 = load i8, i8* %36, align 1, !dbg !10417
  %38 = zext i8 %37 to i32, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %38, metadata !10382, metadata !DIExpression()), !dbg !10387
  %39 = lshr i32 %32, %38, !dbg !10418
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !10418
  ret void, !dbg !10419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10420 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10428
  %2 = and i32 %1, 16711935, !dbg !10428
  %3 = or i32 %2, 45056, !dbg !10428
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10428
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10429
  %5 = or i32 %4, 256, !dbg !10429
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10429
  %6 = tail call i32 @HAL_GetTick() #26, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %6, metadata !10426, metadata !DIExpression()), !dbg !10431
  br label %7, !dbg !10432

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10433
  %9 = and i32 %8, 512, !dbg !10433
  %10 = icmp eq i32 %9, 0, !dbg !10434
  br i1 %10, label %11, label %15, !dbg !10432

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #26, !dbg !10435
  %13 = sub i32 %12, %6, !dbg !10438
  %14 = icmp ugt i32 %13, 2, !dbg !10439
  br i1 %14, label %47, label %7, !dbg !10440, !llvm.loop !10441

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10443
  %17 = and i32 %16, -4, !dbg !10443
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10443
  br label %18, !dbg !10444

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10445
  %20 = and i32 %19, 12, !dbg !10445
  %21 = icmp eq i32 %20, 0, !dbg !10446
  br i1 %21, label %26, label %22, !dbg !10444

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #26, !dbg !10447
  %24 = sub i32 %23, %6, !dbg !10450
  %25 = icmp ugt i32 %24, 5000, !dbg !10451
  br i1 %25, label %47, label %18, !dbg !10452, !llvm.loop !10453

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !10455
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !10456
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #26, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %28, metadata !10427, metadata !DIExpression()), !dbg !10431
  %29 = icmp eq i32 %28, 0, !dbg !10458
  br i1 %29, label %30, label %47, !dbg !10460

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10461
  %32 = and i32 %31, -285278210, !dbg !10461
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10461
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10462
  %34 = and i32 %33, -262145, !dbg !10462
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10462
  %35 = tail call i32 @HAL_GetTick() #26, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %35, metadata !10426, metadata !DIExpression()), !dbg !10431
  br label %36, !dbg !10464

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10465
  %38 = and i32 %37, 33554432, !dbg !10465
  %39 = icmp eq i32 %38, 0, !dbg !10466
  br i1 %39, label %44, label %40, !dbg !10464

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #26, !dbg !10467
  %42 = sub i32 %41, %35, !dbg !10470
  %43 = icmp ugt i32 %42, 2, !dbg !10471
  br i1 %43, label %47, label %36, !dbg !10472, !llvm.loop !10473

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10475
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10476
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10477
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10478
  %46 = or i32 %45, 16777216, !dbg !10478
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10478
  br label %47, !dbg !10479

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !10431
  ret i32 %48, !dbg !10480
}

; Function Attrs: optsize
declare !dbg !10481 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !10483 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10486 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10512, metadata !DIExpression()), !dbg !10525
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10526
  br i1 %3, label %385, label %4, !dbg !10528

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10529
  %6 = and i32 %5, 12, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %6, metadata !10515, metadata !DIExpression()), !dbg !10525
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10530
  %8 = and i32 %7, 65536, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %8, metadata !10516, metadata !DIExpression()), !dbg !10525
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10531
  %10 = load i32, i32* %9, align 4, !dbg !10531
  %11 = and i32 %10, 1, !dbg !10533
  %12 = icmp eq i32 %11, 0, !dbg !10534
  br i1 %12, label %69, label %13, !dbg !10535

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !10536
  br i1 %14, label %19, label %15, !dbg !10539

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !10540
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !10541
  br i1 %18, label %19, label %27, !dbg !10541

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10542
  %21 = and i32 %20, 131072, !dbg !10542
  %22 = icmp eq i32 %21, 0, !dbg !10545
  br i1 %22, label %69, label %23, !dbg !10546

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10547
  %25 = load i32, i32* %24, align 4, !dbg !10547
  %26 = icmp eq i32 %25, 0, !dbg !10548
  br i1 %26, label %385, label %69, !dbg !10549

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10550
  %29 = load i32, i32* %28, align 4, !dbg !10550
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !10554

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10555
  %32 = or i32 %31, 65536, !dbg !10555
  br label %48, !dbg !10555

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10557
  %35 = and i32 %34, -65537, !dbg !10557
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10557
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10557
  %37 = and i32 %36, -262145, !dbg !10557
  br label %48, !dbg !10557

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10560
  %40 = or i32 %39, 262144, !dbg !10560
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10560
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10560
  %42 = or i32 %41, 65536, !dbg !10560
  br label %48, !dbg !10560

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10563
  %45 = and i32 %44, -65537, !dbg !10563
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10563
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10563
  %47 = and i32 %46, -262145, !dbg !10563
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10565
  %50 = load i32, i32* %28, align 4, !dbg !10566
  %51 = icmp eq i32 %50, 0, !dbg !10568
  %52 = tail call i32 @HAL_GetTick() #26, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %52, metadata !10513, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.value(metadata i32 %52, metadata !10513, metadata !DIExpression()), !dbg !10525
  br i1 %51, label %61, label %53, !dbg !10570

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10571
  %55 = and i32 %54, 131072, !dbg !10571
  %56 = icmp eq i32 %55, 0, !dbg !10573
  br i1 %56, label %57, label %69, !dbg !10574

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #26, !dbg !10575
  %59 = sub i32 %58, %52, !dbg !10578
  %60 = icmp ugt i32 %59, 100, !dbg !10579
  br i1 %60, label %385, label %53, !dbg !10580, !llvm.loop !10581

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10583
  %63 = and i32 %62, 131072, !dbg !10583
  %64 = icmp eq i32 %63, 0, !dbg !10585
  br i1 %64, label %69, label %65, !dbg !10586

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !10587
  %67 = sub i32 %66, %52, !dbg !10590
  %68 = icmp ugt i32 %67, 100, !dbg !10591
  br i1 %68, label %385, label %61, !dbg !10592, !llvm.loop !10593

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !10595
  %71 = and i32 %70, 2, !dbg !10597
  %72 = icmp eq i32 %71, 0, !dbg !10598
  br i1 %72, label %118, label %73, !dbg !10599

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !10600
  br i1 %74, label %79, label %75, !dbg !10603

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !10604
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !10605
  br i1 %78, label %79, label %87, !dbg !10605

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10606
  %81 = and i32 %80, 2, !dbg !10606
  %82 = icmp eq i32 %81, 0, !dbg !10609
  br i1 %82, label %111, label %83, !dbg !10610

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10611
  %85 = load i32, i32* %84, align 4, !dbg !10611
  %86 = icmp eq i32 %85, 1, !dbg !10612
  br i1 %86, label %111, label %385, !dbg !10613

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10614
  %89 = load i32, i32* %88, align 4, !dbg !10614
  %90 = icmp eq i32 %89, 0, !dbg !10617
  br i1 %90, label %101, label %91, !dbg !10618

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10619
  %92 = tail call i32 @HAL_GetTick() #26, !dbg !10621
  call void @llvm.dbg.value(metadata i32 %92, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %93, !dbg !10622

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10623
  %95 = and i32 %94, 2, !dbg !10623
  %96 = icmp eq i32 %95, 0, !dbg !10624
  br i1 %96, label %97, label %111, !dbg !10622

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #26, !dbg !10625
  %99 = sub i32 %98, %92, !dbg !10628
  %100 = icmp ugt i32 %99, 2, !dbg !10629
  br i1 %100, label %385, label %93, !dbg !10630, !llvm.loop !10631

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10633
  %102 = tail call i32 @HAL_GetTick() #26, !dbg !10635
  call void @llvm.dbg.value(metadata i32 %102, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %103, !dbg !10636

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10637
  %105 = and i32 %104, 2, !dbg !10637
  %106 = icmp eq i32 %105, 0, !dbg !10638
  br i1 %106, label %118, label %107, !dbg !10636

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #26, !dbg !10639
  %109 = sub i32 %108, %102, !dbg !10642
  %110 = icmp ugt i32 %109, 2, !dbg !10643
  br i1 %110, label %385, label %103, !dbg !10644, !llvm.loop !10645

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10647
  %113 = and i32 %112, -7937, !dbg !10647
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10647
  %115 = load i32, i32* %114, align 4, !dbg !10647
  %116 = shl i32 %115, 8, !dbg !10647
  %117 = or i32 %116, %113, !dbg !10647
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10647
  br label %118, !dbg !10648

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !10648
  %120 = and i32 %119, 16, !dbg !10650
  %121 = icmp eq i32 %120, 0, !dbg !10651
  br i1 %121, label %215, label %122, !dbg !10652

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !10653
  br i1 %123, label %124, label %179, !dbg !10656

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10657
  %126 = and i32 %125, 512, !dbg !10657
  %127 = icmp eq i32 %126, 0, !dbg !10660
  br i1 %127, label %132, label %128, !dbg !10661

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10662
  %130 = load i32, i32* %129, align 4, !dbg !10662
  %131 = icmp eq i32 %130, 0, !dbg !10663
  br i1 %131, label %385, label %132, !dbg !10664

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10665
  %134 = load i32, i32* %133, align 4, !dbg !10665
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10668
  %136 = and i32 %135, 57344, !dbg !10668
  %137 = icmp ugt i32 %134, %136, !dbg !10669
  br i1 %137, label %138, label %152, !dbg !10670

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !10671
  %140 = icmp eq i32 %139, 0, !dbg !10674
  br i1 %140, label %141, label %385, !dbg !10675

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10676
  %143 = and i32 %142, -57345, !dbg !10676
  %144 = load i32, i32* %133, align 4, !dbg !10676
  %145 = or i32 %143, %144, !dbg !10676
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10676
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10677
  %147 = and i32 %146, 16777215, !dbg !10677
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10677
  %149 = load i32, i32* %148, align 4, !dbg !10677
  %150 = shl i32 %149, 24, !dbg !10677
  %151 = or i32 %150, %147, !dbg !10677
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10677
  br label %165, !dbg !10678

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10679
  %154 = and i32 %153, -57345, !dbg !10679
  %155 = or i32 %154, %134, !dbg !10679
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10679
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10681
  %157 = and i32 %156, 16777215, !dbg !10681
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10681
  %159 = load i32, i32* %158, align 4, !dbg !10681
  %160 = shl i32 %159, 24, !dbg !10681
  %161 = or i32 %160, %157, !dbg !10681
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10681
  %162 = load i32, i32* %133, align 4, !dbg !10682
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !10684
  %164 = icmp eq i32 %163, 0, !dbg !10685
  br i1 %164, label %165, label %385, !dbg !10686

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !10687
  %167 = lshr i32 %166, 13, !dbg !10688
  %168 = shl i32 65536, %167, !dbg !10689
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10690
  %170 = lshr i32 %169, 4, !dbg !10691
  %171 = and i32 %170, 15, !dbg !10691
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !10692
  %173 = load i8, i8* %172, align 1, !dbg !10692
  %174 = zext i8 %173 to i32, !dbg !10692
  %175 = lshr i32 %168, %174, !dbg !10693
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !10694
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !10695
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #26, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %177, metadata !10514, metadata !DIExpression()), !dbg !10525
  %178 = icmp eq i32 %177, 0, !dbg !10697
  br i1 %178, label %215, label %385, !dbg !10699

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10700
  %181 = load i32, i32* %180, align 4, !dbg !10700
  %182 = icmp eq i32 %181, 0, !dbg !10703
  br i1 %182, label %205, label %183, !dbg !10704

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10705
  %184 = tail call i32 @HAL_GetTick() #26, !dbg !10707
  call void @llvm.dbg.value(metadata i32 %184, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %185, !dbg !10708

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10709
  %187 = and i32 %186, 512, !dbg !10709
  %188 = icmp eq i32 %187, 0, !dbg !10710
  br i1 %188, label %189, label %193, !dbg !10708

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #26, !dbg !10711
  %191 = sub i32 %190, %184, !dbg !10714
  %192 = icmp ugt i32 %191, 2, !dbg !10715
  br i1 %192, label %385, label %185, !dbg !10716, !llvm.loop !10717

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10719
  %195 = and i32 %194, -57345, !dbg !10719
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10719
  %197 = load i32, i32* %196, align 4, !dbg !10719
  %198 = or i32 %195, %197, !dbg !10719
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10719
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10720
  %200 = and i32 %199, 16777215, !dbg !10720
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10720
  %202 = load i32, i32* %201, align 4, !dbg !10720
  %203 = shl i32 %202, 24, !dbg !10720
  %204 = or i32 %203, %200, !dbg !10720
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10720
  br label %215, !dbg !10721

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10722
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !10724
  call void @llvm.dbg.value(metadata i32 %206, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %207, !dbg !10725

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10726
  %209 = and i32 %208, 512, !dbg !10726
  %210 = icmp eq i32 %209, 0, !dbg !10727
  br i1 %210, label %215, label %211, !dbg !10725

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #26, !dbg !10728
  %213 = sub i32 %212, %206, !dbg !10731
  %214 = icmp ugt i32 %213, 2, !dbg !10732
  br i1 %214, label %385, label %207, !dbg !10733, !llvm.loop !10734

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !10736
  %217 = and i32 %216, 8, !dbg !10738
  %218 = icmp eq i32 %217, 0, !dbg !10739
  br i1 %218, label %243, label %219, !dbg !10740

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10741
  %221 = load i32, i32* %220, align 4, !dbg !10741
  %222 = icmp eq i32 %221, 0, !dbg !10744
  br i1 %222, label %233, label %223, !dbg !10745

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10746
  %224 = tail call i32 @HAL_GetTick() #26, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %224, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %225, !dbg !10749

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10750
  %227 = and i32 %226, 2, !dbg !10750
  %228 = icmp eq i32 %227, 0, !dbg !10751
  br i1 %228, label %229, label %243, !dbg !10749

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !10752
  %231 = sub i32 %230, %224, !dbg !10755
  %232 = icmp ugt i32 %231, 2, !dbg !10756
  br i1 %232, label %385, label %225, !dbg !10757, !llvm.loop !10758

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10760
  %234 = tail call i32 @HAL_GetTick() #26, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %234, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %235, !dbg !10763

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10764
  %237 = and i32 %236, 2, !dbg !10764
  %238 = icmp eq i32 %237, 0, !dbg !10765
  br i1 %238, label %243, label %239, !dbg !10763

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #26, !dbg !10766
  %241 = sub i32 %240, %234, !dbg !10769
  %242 = icmp ugt i32 %241, 2, !dbg !10770
  br i1 %242, label %385, label %235, !dbg !10771, !llvm.loop !10772

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !10774
  %245 = and i32 %244, 4, !dbg !10775
  %246 = icmp eq i32 %245, 0, !dbg !10776
  br i1 %246, label %320, label %247, !dbg !10777

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !10517, metadata !DIExpression()), !dbg !10778
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10779
  %249 = and i32 %248, 268435456, !dbg !10779
  %250 = icmp eq i32 %249, 0, !dbg !10779
  br i1 %250, label %251, label %258, !dbg !10780

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !10781
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !10781
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10521, metadata !DIExpression()), !dbg !10781
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10781
  %254 = or i32 %253, 268435456, !dbg !10781
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10781
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10781
  %256 = and i32 %255, 268435456, !dbg !10781
  store volatile i32 %256, i32* %2, align 4, !dbg !10781
  %257 = load volatile i32, i32* %2, align 4, !dbg !10781
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !10782
  call void @llvm.dbg.value(metadata i32 1, metadata !10517, metadata !DIExpression()), !dbg !10778
  br label %258, !dbg !10783

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !10517, metadata !DIExpression()), !dbg !10778
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10784
  %260 = and i32 %259, 256, !dbg !10784
  %261 = icmp eq i32 %260, 0, !dbg !10784
  br i1 %261, label %262, label %274, !dbg !10786

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10787
  %264 = or i32 %263, 256, !dbg !10787
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10787
  %265 = tail call i32 @HAL_GetTick() #26, !dbg !10789
  call void @llvm.dbg.value(metadata i32 %265, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %266, !dbg !10790

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10791
  %268 = and i32 %267, 256, !dbg !10791
  %269 = icmp eq i32 %268, 0, !dbg !10791
  br i1 %269, label %270, label %274, !dbg !10790

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #26, !dbg !10792
  %272 = sub i32 %271, %265, !dbg !10795
  %273 = icmp ugt i32 %272, 100, !dbg !10796
  br i1 %273, label %385, label %266, !dbg !10797, !llvm.loop !10798

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10800
  %276 = load i32, i32* %275, align 4, !dbg !10800
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !10803

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10804
  %279 = or i32 %278, 256, !dbg !10804
  br label %295, !dbg !10804

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10806
  %282 = and i32 %281, -257, !dbg !10806
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10806
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10806
  %284 = and i32 %283, -1025, !dbg !10806
  br label %295, !dbg !10806

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10809
  %287 = or i32 %286, 1024, !dbg !10809
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10809
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10809
  %289 = or i32 %288, 256, !dbg !10809
  br label %295, !dbg !10809

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10812
  %292 = and i32 %291, -257, !dbg !10812
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10812
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10812
  %294 = and i32 %293, -1025, !dbg !10812
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10814
  %297 = load i32, i32* %275, align 4, !dbg !10815
  %298 = icmp eq i32 %297, 0, !dbg !10817
  %299 = tail call i32 @HAL_GetTick() #26, !dbg !10818
  call void @llvm.dbg.value(metadata i32 %299, metadata !10513, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.value(metadata i32 %299, metadata !10513, metadata !DIExpression()), !dbg !10525
  br i1 %298, label %308, label %300, !dbg !10819

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10820
  %302 = and i32 %301, 512, !dbg !10820
  %303 = icmp eq i32 %302, 0, !dbg !10822
  br i1 %303, label %304, label %316, !dbg !10823

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #26, !dbg !10824
  %306 = sub i32 %305, %299, !dbg !10827
  %307 = icmp ugt i32 %306, 5000, !dbg !10828
  br i1 %307, label %385, label %300, !dbg !10829, !llvm.loop !10830

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10832
  %310 = and i32 %309, 512, !dbg !10832
  %311 = icmp eq i32 %310, 0, !dbg !10834
  br i1 %311, label %316, label %312, !dbg !10835

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #26, !dbg !10836
  %314 = sub i32 %313, %299, !dbg !10839
  %315 = icmp ugt i32 %314, 5000, !dbg !10840
  br i1 %315, label %385, label %308, !dbg !10841, !llvm.loop !10842

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !10844

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10845
  %319 = and i32 %318, -268435457, !dbg !10845
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10845
  br label %320, !dbg !10848

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !10849
  %322 = load i32, i32* %321, align 4, !dbg !10849
  %323 = icmp eq i32 %322, 0, !dbg !10851
  br i1 %323, label %384, label %324, !dbg !10852

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !10853
  br i1 %325, label %366, label %326, !dbg !10856

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !10857
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10860
  %328 = tail call i32 @HAL_GetTick() #26, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %328, metadata !10513, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.value(metadata i32 %328, metadata !10513, metadata !DIExpression()), !dbg !10525
  br i1 %327, label %329, label %358, !dbg !10861

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10862
  %331 = and i32 %330, 33554432, !dbg !10862
  %332 = icmp eq i32 %331, 0, !dbg !10864
  br i1 %332, label %337, label %333, !dbg !10865

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #26, !dbg !10866
  %335 = sub i32 %334, %328, !dbg !10869
  %336 = icmp ugt i32 %335, 2, !dbg !10870
  br i1 %336, label %385, label %329, !dbg !10871, !llvm.loop !10872

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10874
  %339 = and i32 %338, -16580609, !dbg !10874
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !10874
  %341 = load i32, i32* %340, align 4, !dbg !10874
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !10874
  %343 = load i32, i32* %342, align 4, !dbg !10874
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !10874
  %345 = load i32, i32* %344, align 4, !dbg !10874
  %346 = or i32 %339, %341, !dbg !10874
  %347 = or i32 %346, %343, !dbg !10874
  %348 = or i32 %347, %345, !dbg !10874
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10874
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10875
  %349 = tail call i32 @HAL_GetTick() #26, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %349, metadata !10513, metadata !DIExpression()), !dbg !10525
  br label %350, !dbg !10877

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10878
  %352 = and i32 %351, 33554432, !dbg !10878
  %353 = icmp eq i32 %352, 0, !dbg !10879
  br i1 %353, label %354, label %384, !dbg !10877

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #26, !dbg !10880
  %356 = sub i32 %355, %349, !dbg !10883
  %357 = icmp ugt i32 %356, 2, !dbg !10884
  br i1 %357, label %385, label %350, !dbg !10885, !llvm.loop !10886

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10888
  %360 = and i32 %359, 33554432, !dbg !10888
  %361 = icmp eq i32 %360, 0, !dbg !10890
  br i1 %361, label %384, label %362, !dbg !10891

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #26, !dbg !10892
  %364 = sub i32 %363, %328, !dbg !10895
  %365 = icmp ugt i32 %364, 2, !dbg !10896
  br i1 %365, label %385, label %358, !dbg !10897, !llvm.loop !10898

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !10900
  br i1 %367, label %385, label %368, !dbg !10903

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %369, metadata !10516, metadata !DIExpression()), !dbg !10525
  %370 = and i32 %369, 65536, !dbg !10906
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !10908
  %372 = load i32, i32* %371, align 4, !dbg !10908
  %373 = icmp eq i32 %370, %372, !dbg !10909
  br i1 %373, label %374, label %385, !dbg !10910

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !10911
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !10912
  %377 = load i32, i32* %376, align 4, !dbg !10912
  %378 = icmp eq i32 %375, %377, !dbg !10913
  br i1 %378, label %379, label %385, !dbg !10914

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !10915
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !10916
  %382 = load i32, i32* %381, align 4, !dbg !10916
  %383 = icmp eq i32 %380, %382, !dbg !10917
  br i1 %383, label %384, label %385, !dbg !10918

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !10919

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !10525
  ret i32 %386, !dbg !10920
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #14 !dbg !10921 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10923, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 0, metadata !10925, metadata !DIExpression()), !dbg !10932
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10933
  %4 = and i32 %3, 240, !dbg !10933
  %5 = icmp eq i32 %4, 0, !dbg !10934
  br i1 %5, label %6, label %31, !dbg !10935

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10936
  %8 = and i32 %7, 268435456, !dbg !10936
  %9 = icmp eq i32 %8, 0, !dbg !10936
  br i1 %9, label %12, label %10, !dbg !10937

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %11, metadata !10924, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !10932
  br label %22, !dbg !10940

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !10941
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !10941
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10926, metadata !DIExpression()), !dbg !10941
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10941
  %15 = or i32 %14, 268435456, !dbg !10941
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10941
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10941
  %17 = and i32 %16, 268435456, !dbg !10941
  store volatile i32 %17, i32* %2, align 4, !dbg !10941
  %18 = load volatile i32, i32* %2, align 4, !dbg !10941
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !10942
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %19, metadata !10924, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !10932
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10944
  %21 = and i32 %20, -268435457, !dbg !10944
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10944
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %24, metadata !10924, metadata !DIExpression()), !dbg !10932
  %25 = icmp eq i32 %24, 6144, !dbg !10946
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !10948
  call void @llvm.dbg.value(metadata i32 undef, metadata !10925, metadata !DIExpression()), !dbg !10932
  br i1 %27, label %28, label %31, !dbg !10949

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10951
  %30 = or i32 %29, 4, !dbg !10951
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10951
  br label %31, !dbg !10951

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10949
  %34 = and i32 %33, -2, !dbg !10949
  %35 = or i32 %34, %32, !dbg !10949
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10949
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10954
  %37 = and i32 %36, 1, !dbg !10954
  %38 = xor i32 %37, %32, !dbg !10932
  ret i32 %38, !dbg !10956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10957 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10970, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 %1, metadata !10971, metadata !DIExpression()), !dbg !10974
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10975
  br i1 %3, label %136, label %4, !dbg !10977

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10978
  %6 = and i32 %5, 1, !dbg !10978
  %7 = icmp ult i32 %6, %1, !dbg !10980
  br i1 %7, label %8, label %20, !dbg !10981

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !10982
  br i1 %9, label %10, label %13, !dbg !10986

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10987
  %12 = or i32 %11, 4, !dbg !10987
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10987
  br label %13, !dbg !10987

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10986
  %15 = and i32 %14, -2, !dbg !10986
  %16 = or i32 %15, %1, !dbg !10986
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10986
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10989
  %18 = and i32 %17, 1, !dbg !10989
  %19 = icmp eq i32 %18, %1, !dbg !10991
  br i1 %19, label %20, label %136, !dbg !10992

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10993
  %22 = load i32, i32* %21, align 4, !dbg !10993
  %23 = and i32 %22, 2, !dbg !10995
  %24 = icmp eq i32 %23, 0, !dbg !10996
  br i1 %24, label %32, label %25, !dbg !10997

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10998
  %27 = and i32 %26, -241, !dbg !10998
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10998
  %29 = load i32, i32* %28, align 4, !dbg !10998
  %30 = or i32 %27, %29, !dbg !10998
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10998
  %31 = load i32, i32* %21, align 4, !dbg !11000
  br label %32, !dbg !11002

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !11000
  %34 = and i32 %33, 1, !dbg !11003
  %35 = icmp eq i32 %34, 0, !dbg !11004
  br i1 %35, label %93, label %36, !dbg !11005

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11006
  %38 = load i32, i32* %37, align 4, !dbg !11006
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !11009

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11010
  %41 = and i32 %40, 131072, !dbg !11010
  %42 = icmp eq i32 %41, 0, !dbg !11013
  br i1 %42, label %136, label %55, !dbg !11014

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11015
  %45 = and i32 %44, 33554432, !dbg !11015
  %46 = icmp eq i32 %45, 0, !dbg !11019
  br i1 %46, label %136, label %55, !dbg !11020

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11021
  %49 = and i32 %48, 2, !dbg !11021
  %50 = icmp eq i32 %49, 0, !dbg !11025
  br i1 %50, label %136, label %55, !dbg !11026

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11027
  %53 = and i32 %52, 512, !dbg !11027
  %54 = icmp eq i32 %53, 0, !dbg !11030
  br i1 %54, label %136, label %55, !dbg !11031

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11032
  %57 = and i32 %56, -4, !dbg !11032
  %58 = or i32 %57, %38, !dbg !11032
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11032
  %59 = tail call i32 @HAL_GetTick() #26, !dbg !11033
  call void @llvm.dbg.value(metadata i32 %59, metadata !10972, metadata !DIExpression()), !dbg !10974
  %60 = load i32, i32* %37, align 4, !dbg !11034
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !11036

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11037
  %63 = and i32 %62, 12, !dbg !11037
  %64 = icmp eq i32 %63, 8, !dbg !11039
  br i1 %64, label %93, label %65, !dbg !11040

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !11041
  %67 = sub i32 %66, %59, !dbg !11044
  %68 = icmp ugt i32 %67, 5000, !dbg !11045
  br i1 %68, label %136, label %61, !dbg !11046, !llvm.loop !11047

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11049
  %71 = and i32 %70, 12, !dbg !11049
  %72 = icmp eq i32 %71, 12, !dbg !11052
  br i1 %72, label %93, label %73, !dbg !11053

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #26, !dbg !11054
  %75 = sub i32 %74, %59, !dbg !11057
  %76 = icmp ugt i32 %75, 5000, !dbg !11058
  br i1 %76, label %136, label %69, !dbg !11059, !llvm.loop !11060

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11062
  %79 = and i32 %78, 12, !dbg !11062
  %80 = icmp eq i32 %79, 4, !dbg !11065
  br i1 %80, label %93, label %81, !dbg !11066

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !11067
  %83 = sub i32 %82, %59, !dbg !11070
  %84 = icmp ugt i32 %83, 5000, !dbg !11071
  br i1 %84, label %136, label %77, !dbg !11072, !llvm.loop !11073

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11075
  %87 = and i32 %86, 12, !dbg !11075
  %88 = icmp eq i32 %87, 0, !dbg !11077
  br i1 %88, label %93, label %89, !dbg !11078

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #26, !dbg !11079
  %91 = sub i32 %90, %59, !dbg !11082
  %92 = icmp ugt i32 %91, 5000, !dbg !11083
  br i1 %92, label %136, label %85, !dbg !11084, !llvm.loop !11085

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11087
  %95 = and i32 %94, 1, !dbg !11087
  %96 = icmp ugt i32 %95, %1, !dbg !11089
  br i1 %96, label %97, label %103, !dbg !11090

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11091
  %99 = and i32 %98, -2, !dbg !11091
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11091
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11094
  %101 = and i32 %100, 1, !dbg !11094
  %102 = icmp eq i32 %101, 0, !dbg !11096
  br i1 %102, label %103, label %136, !dbg !11097

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !11098
  %105 = and i32 %104, 4, !dbg !11100
  %106 = icmp eq i32 %105, 0, !dbg !11101
  br i1 %106, label %114, label %107, !dbg !11102

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11103
  %109 = and i32 %108, -1793, !dbg !11103
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11103
  %111 = load i32, i32* %110, align 4, !dbg !11103
  %112 = or i32 %109, %111, !dbg !11103
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11103
  %113 = load i32, i32* %21, align 4, !dbg !11105
  br label %114, !dbg !11107

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !11105
  %116 = and i32 %115, 8, !dbg !11108
  %117 = icmp eq i32 %116, 0, !dbg !11109
  br i1 %117, label %125, label %118, !dbg !11110

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11111
  %120 = and i32 %119, -14337, !dbg !11111
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11111
  %122 = load i32, i32* %121, align 4, !dbg !11111
  %123 = shl i32 %122, 3, !dbg !11111
  %124 = or i32 %123, %120, !dbg !11111
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11111
  br label %125, !dbg !11113

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11114
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11115
  %128 = lshr i32 %127, 4, !dbg !11116
  %129 = and i32 %128, 15, !dbg !11116
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !11117
  %131 = load i8, i8* %130, align 1, !dbg !11117
  %132 = zext i8 %131 to i32, !dbg !11117
  %133 = lshr i32 %126, %132, !dbg !11118
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !11119
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !11120
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #26, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %135, metadata !10973, metadata !DIExpression()), !dbg !10974
  br label %136, !dbg !11122

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !10974
  ret i32 %137, !dbg !11123
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11124 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11132
  call void @llvm.dbg.value(metadata i32 %1, metadata !11126, metadata !DIExpression()), !dbg !11133
  %2 = lshr i32 %1, 2, !dbg !11134
  %3 = and i32 %2, 3, !dbg !11134
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !11134

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11131, metadata !DIExpression()), !dbg !11133
  br label %26, !dbg !11135

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !11138
  %7 = and i32 %6, 15, !dbg !11138
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !11140
  %9 = load i8, i8* %8, align 1, !dbg !11140
  call void @llvm.dbg.value(metadata i8 %9, metadata !11127, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11133
  %10 = lshr i32 %1, 22, !dbg !11141
  %11 = and i32 %10, 3, !dbg !11141
  %12 = add nuw nsw i32 %11, 1, !dbg !11142
  call void @llvm.dbg.value(metadata i32 %12, metadata !11128, metadata !DIExpression()), !dbg !11133
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11143
  %14 = and i32 %13, 65536, !dbg !11143
  %15 = icmp eq i32 %14, 0, !dbg !11145
  %16 = zext i8 %9 to i32, !dbg !11146
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !11146
  %18 = mul nuw i32 %17, %16, !dbg !11146
  %19 = udiv i32 %18, %12, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %19, metadata !11129, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i32 %19, metadata !11131, metadata !DIExpression()), !dbg !11133
  br label %26, !dbg !11148

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11149
  %23 = lshr i32 %22, 13, !dbg !11151
  %24 = and i32 %23, 7, !dbg !11151
  call void @llvm.dbg.value(metadata i32 %24, metadata !11130, metadata !DIExpression()), !dbg !11133
  %25 = shl nuw nsw i32 65536, %24, !dbg !11152
  call void @llvm.dbg.value(metadata i32 %25, metadata !11131, metadata !DIExpression()), !dbg !11133
  br label %26, !dbg !11153

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !11154
  call void @llvm.dbg.value(metadata i32 %27, metadata !11131, metadata !DIExpression()), !dbg !11133
  ret i32 %27, !dbg !11155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11156 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11158, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 %1, metadata !11159, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 %2, metadata !11160, metadata !DIExpression()), !dbg !11173
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11174
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11174
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11161, metadata !DIExpression()), !dbg !11175
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11176
  store i32 2, i32* %7, align 4, !dbg !11177
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11178
  store i32 2, i32* %8, align 4, !dbg !11179
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11180
  store i32 0, i32* %9, align 4, !dbg !11181
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11182
  store i32 256, i32* %10, align 4, !dbg !11183
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11184
  store i32 0, i32* %11, align 4, !dbg !11185
  %12 = bitcast i32* %5 to i8*, !dbg !11186
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !11186
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11171, metadata !DIExpression()), !dbg !11186
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11186
  %14 = or i32 %13, 1, !dbg !11186
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11186
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11186
  %16 = and i32 %15, 1, !dbg !11186
  store volatile i32 %16, i32* %5, align 4, !dbg !11186
  %17 = load volatile i32, i32* %5, align 4, !dbg !11186
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !11187
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11188
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11189
  %19 = and i32 %18, -1996488705, !dbg !11189
  %20 = or i32 %2, %1, !dbg !11189
  %21 = or i32 %20, %19, !dbg !11189
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11189
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11190
  ret void, !dbg !11190
}

; Function Attrs: optsize
declare !dbg !11191 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11195 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11196
  ret void, !dbg !11197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11198 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11199
  ret void, !dbg !11200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11201 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11202
  ret i32 %1, !dbg !11203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11204 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11205
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11206
  %3 = lshr i32 %2, 8, !dbg !11207
  %4 = and i32 %3, 7, !dbg !11207
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11208
  %6 = load i8, i8* %5, align 1, !dbg !11208
  %7 = zext i8 %6 to i32, !dbg !11208
  %8 = lshr i32 %1, %7, !dbg !11209
  ret i32 %8, !dbg !11210
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11211 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11212
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11213
  %3 = lshr i32 %2, 11, !dbg !11214
  %4 = and i32 %3, 7, !dbg !11214
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11215
  %6 = load i8, i8* %5, align 1, !dbg !11215
  %7 = zext i8 %6 to i32, !dbg !11215
  %8 = lshr i32 %1, %7, !dbg !11216
  ret i32 %8, !dbg !11217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11218 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11224
  store i32 31, i32* %2, align 4, !dbg !11225
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11226
  %4 = and i32 %3, 262144, !dbg !11228
  %5 = icmp eq i32 %4, 0, !dbg !11229
  br i1 %5, label %8, label %6, !dbg !11230

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11231
  store i32 5, i32* %7, align 4, !dbg !11233
  br label %15, !dbg !11234

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11235
  %10 = and i32 %9, 65536, !dbg !11237
  %11 = icmp eq i32 %10, 0, !dbg !11238
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11239
  br i1 %11, label %14, label %13, !dbg !11240

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !11241
  br label %15, !dbg !11243

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11244
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11246
  %17 = and i32 %16, 1, !dbg !11248
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11249
  store i32 %17, i32* %18, align 4, !dbg !11251
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11252
  %20 = lshr i32 %19, 8, !dbg !11253
  %21 = and i32 %20, 31, !dbg !11253
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11254
  store i32 %21, i32* %22, align 4, !dbg !11255
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11256
  %24 = lshr i32 %23, 8, !dbg !11258
  %25 = and i32 %24, 1, !dbg !11258
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11259
  store i32 %25, i32* %26, align 4, !dbg !11261
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11262
  %28 = lshr i32 %27, 24, !dbg !11263
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11264
  store i32 %28, i32* %29, align 4, !dbg !11265
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11266
  %31 = and i32 %30, 57344, !dbg !11267
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11268
  store i32 %31, i32* %32, align 4, !dbg !11269
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11270
  %34 = and i32 %33, 1024, !dbg !11272
  %35 = icmp eq i32 %34, 0, !dbg !11273
  br i1 %35, label %38, label %36, !dbg !11274

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11275
  store i32 5, i32* %37, align 4, !dbg !11277
  br label %45, !dbg !11278

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11279
  %40 = and i32 %39, 256, !dbg !11281
  %41 = icmp eq i32 %40, 0, !dbg !11282
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11283
  br i1 %41, label %44, label %43, !dbg !11284

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !11285
  br label %45, !dbg !11287

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !11288
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11290
  %47 = and i32 %46, 1, !dbg !11292
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11293
  store i32 %47, i32* %48, align 4, !dbg !11295
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11296
  %50 = and i32 %49, 16777216, !dbg !11298
  %51 = icmp eq i32 %50, 0, !dbg !11299
  %52 = select i1 %51, i32 1, i32 2, !dbg !11300
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11301
  store i32 %52, i32* %53, align 4, !dbg !11303
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11304
  %55 = and i32 %54, 65536, !dbg !11305
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11306
  store i32 %55, i32* %56, align 4, !dbg !11307
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11308
  %58 = and i32 %57, 3932160, !dbg !11309
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11310
  store i32 %58, i32* %59, align 4, !dbg !11311
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11312
  %61 = and i32 %60, 12582912, !dbg !11313
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11314
  store i32 %61, i32* %62, align 4, !dbg !11315
  ret void, !dbg !11316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11317 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11321, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32* %1, metadata !11322, metadata !DIExpression()), !dbg !11323
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11324
  store i32 15, i32* %3, align 4, !dbg !11325
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11326
  %5 = and i32 %4, 3, !dbg !11327
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11328
  store i32 %5, i32* %6, align 4, !dbg !11329
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11330
  %8 = and i32 %7, 240, !dbg !11331
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11332
  store i32 %8, i32* %9, align 4, !dbg !11333
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11334
  %11 = and i32 %10, 1792, !dbg !11335
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11336
  store i32 %11, i32* %12, align 4, !dbg !11337
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11338
  %14 = lshr i32 %13, 3, !dbg !11339
  %15 = and i32 %14, 1792, !dbg !11339
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11340
  store i32 %15, i32* %16, align 4, !dbg !11341
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11342
  %18 = and i32 %17, 1, !dbg !11342
  store i32 %18, i32* %1, align 4, !dbg !11343
  ret void, !dbg !11344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11345 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11346
  %2 = and i32 %1, 128, !dbg !11346
  %3 = icmp eq i32 %2, 0, !dbg !11346
  br i1 %3, label %5, label %4, !dbg !11348

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11349
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11351
  br label %5, !dbg !11352

5:                                                ; preds = %4, %0
  ret void, !dbg !11353
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11354 {
  ret void, !dbg !11355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11359, metadata !DIExpression()), !dbg !11360
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11361
  ret void, !dbg !11362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11366, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.value(metadata i32 1000, metadata !11367, metadata !DIExpression()), !dbg !11368
  %2 = udiv i32 %0, 1000, !dbg !11369
  %3 = add nsw i32 %2, -1, !dbg !11370
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11371
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11372
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11373
  ret void, !dbg !11374
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #14 !dbg !11375 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11377, metadata !DIExpression()), !dbg !11380
  %3 = bitcast i32* %2 to i8*, !dbg !11381
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11381
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11378, metadata !DIExpression()), !dbg !11382
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11383
  store volatile i32 %4, i32* %2, align 4, !dbg !11382
  call void @llvm.dbg.value(metadata i32 %0, metadata !11379, metadata !DIExpression()), !dbg !11380
  %5 = load volatile i32, i32* %2, align 4, !dbg !11384
  %6 = icmp eq i32 %0, -1, !dbg !11385
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11379, metadata !DIExpression()), !dbg !11380
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %8, metadata !11379, metadata !DIExpression()), !dbg !11380
  br label %9, !dbg !11387

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11379, metadata !DIExpression()), !dbg !11380
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11388
  call void @llvm.dbg.value(metadata i32 undef, metadata !11379, metadata !DIExpression()), !dbg !11380
  %12 = shl i32 %11, 15, !dbg !11380
  %13 = ashr i32 %12, 31, !dbg !11380
  %14 = add i32 %13, %10, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %14, metadata !11379, metadata !DIExpression()), !dbg !11380
  %15 = icmp eq i32 %14, 0, !dbg !11391
  br i1 %15, label %16, label %9, !dbg !11387

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11392
  ret void, !dbg !11392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11395, metadata !DIExpression()), !dbg !11396
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11397
  ret void, !dbg !11398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11404, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 0, metadata !11405, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i32 0, metadata !11406, metadata !DIExpression()), !dbg !11407
  %2 = add i32 %0, -32000001, !dbg !11408
  %3 = icmp ult i32 %2, -32000000, !dbg !11408
  br i1 %3, label %22, label %4, !dbg !11408

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11410
  %6 = icmp eq i32 %5, 2048, !dbg !11413
  br i1 %6, label %7, label %9, !dbg !11414

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !11415
  call void @llvm.dbg.value(metadata i32 undef, metadata !11406, metadata !DIExpression()), !dbg !11407
  br i1 %8, label %16, label %17, !dbg !11418

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11419
  %11 = icmp eq i32 %10, 4096, !dbg !11421
  br i1 %11, label %12, label %14, !dbg !11422

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !11423
  call void @llvm.dbg.value(metadata i32 undef, metadata !11406, metadata !DIExpression()), !dbg !11407
  br i1 %13, label %16, label %17, !dbg !11418

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !11426
  call void @llvm.dbg.value(metadata i32 undef, metadata !11406, metadata !DIExpression()), !dbg !11407
  br i1 %15, label %16, label %17, !dbg !11418

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !11429
  br label %17, !dbg !11432

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !11433
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11434
  %20 = icmp ne i32 %19, %18, !dbg !11436
  %21 = zext i1 %20 to i32, !dbg !11437
  br label %22, !dbg !11437

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !11407
  call void @llvm.dbg.value(metadata i32 %23, metadata !11405, metadata !DIExpression()), !dbg !11407
  ret i32 %23, !dbg !11438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11439 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11440
  %2 = and i32 %1, 6144, !dbg !11440
  ret i32 %2, !dbg !11441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #15 !dbg !11442 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11443
  %2 = or i32 %1, 4, !dbg !11443
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11443
  ret void, !dbg !11444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11447, metadata !DIExpression()), !dbg !11448
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11449
  %3 = and i32 %2, -2, !dbg !11449
  %4 = or i32 %3, %0, !dbg !11449
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11449
  ret void, !dbg !11450
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11451 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11452
  %2 = and i32 %1, 1, !dbg !11452
  ret i32 %2, !dbg !11453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11454 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11471, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11472, metadata !DIExpression()), !dbg !11475
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11476
  %4 = icmp eq i32 %3, 0, !dbg !11478
  br i1 %4, label %5, label %19, !dbg !11479

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #24, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %6, metadata !11474, metadata !DIExpression()), !dbg !11475
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.147() #24, !dbg !11482
  %8 = icmp eq i32 %7, 1, !dbg !11484
  br i1 %8, label %13, label %9, !dbg !11485

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.148() #24, !dbg !11486
  br label %10, !dbg !11488

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.147() #24, !dbg !11489
  %12 = icmp eq i32 %11, 1, !dbg !11490
  br i1 %12, label %13, label %10, !dbg !11488, !llvm.loop !11491

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !11493
  %15 = load i32, i32* %14, align 4, !dbg !11493
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !11494
  %17 = load i32, i32* %16, align 4, !dbg !11494
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.149(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !11495
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11496
  call void @llvm.dbg.value(metadata i32 %18, metadata !11473, metadata !DIExpression()), !dbg !11475
  br label %19, !dbg !11497

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !11498
  call void @llvm.dbg.value(metadata i32 %20, metadata !11473, metadata !DIExpression()), !dbg !11475
  ret i32 %20, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11500 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11504, metadata !DIExpression()), !dbg !11505
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.151() #24, !dbg !11506
  %2 = icmp ne i32 %1, 0, !dbg !11508
  %3 = zext i1 %2 to i32, !dbg !11509
  call void @llvm.dbg.value(metadata i32 %3, metadata !11504, metadata !DIExpression()), !dbg !11505
  ret i32 %3, !dbg !11510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11515, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !11516, metadata !DIExpression()), !dbg !11518
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !11519
  %4 = load i32, i32* %3, align 4, !dbg !11519
  %5 = lshr i32 %4, 18, !dbg !11520
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !11521
  %7 = load i8, i8* %6, align 1, !dbg !11521
  %8 = zext i8 %7 to i32, !dbg !11522
  %9 = mul i32 %8, %0, !dbg !11523
  call void @llvm.dbg.value(metadata i32 %9, metadata !11517, metadata !DIExpression()), !dbg !11518
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !11524
  %11 = load i32, i32* %10, align 4, !dbg !11524
  %12 = lshr i32 %11, 22, !dbg !11525
  %13 = add nuw nsw i32 %12, 1, !dbg !11526
  %14 = udiv i32 %9, %13, !dbg !11527
  call void @llvm.dbg.value(metadata i32 %14, metadata !11517, metadata !DIExpression()), !dbg !11518
  ret i32 %14, !dbg !11528
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.147() unnamed_addr #16 !dbg !11529 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11530
  %2 = lshr i32 %1, 1, !dbg !11531
  %3 = and i32 %2, 1, !dbg !11531
  ret i32 %3, !dbg !11532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.148() unnamed_addr #15 !dbg !11533 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11534
  %2 = or i32 %1, 1, !dbg !11534
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11534
  ret void, !dbg !11535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.149(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11538, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %1, metadata !11539, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 %2, metadata !11540, metadata !DIExpression()), !dbg !11541
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11542
  %5 = and i32 %4, -16580609, !dbg !11542
  %6 = or i32 %1, %0, !dbg !11542
  %7 = or i32 %6, %2, !dbg !11542
  %8 = or i32 %7, %5, !dbg !11542
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11542
  ret void, !dbg !11543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11548, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11549, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata i32 0, metadata !11550, metadata !DIExpression()), !dbg !11552
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11553
  %4 = load i32, i32* %3, align 4, !dbg !11553
  %5 = lshr i32 %4, 4, !dbg !11553
  %6 = and i32 %5, 15, !dbg !11553
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11553
  %8 = load i8, i8* %7, align 1, !dbg !11553
  %9 = zext i8 %8 to i32, !dbg !11553
  %10 = lshr i32 %0, %9, !dbg !11553
  call void @llvm.dbg.value(metadata i32 %10, metadata !11551, metadata !DIExpression()), !dbg !11552
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11554
  %12 = icmp ult i32 %11, %10, !dbg !11556
  br i1 %12, label %13, label %16, !dbg !11557

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %14, metadata !11550, metadata !DIExpression()), !dbg !11552
  %15 = icmp eq i32 %14, 0, !dbg !11560
  br i1 %15, label %16, label %30, !dbg !11562

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.150() #24, !dbg !11563
  br label %17, !dbg !11565

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.151() #24, !dbg !11566
  %19 = icmp eq i32 %18, 1, !dbg !11567
  br i1 %19, label %20, label %17, !dbg !11565, !llvm.loop !11568

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11570
  tail call fastcc void @LL_RCC_SetAHBPrescaler.152(i32 noundef %21) #24, !dbg !11571
  tail call fastcc void @LL_RCC_SetSysClkSource.153() #24, !dbg !11572
  br label %22, !dbg !11573

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.154() #24, !dbg !11574
  %24 = icmp eq i32 %23, 12, !dbg !11575
  br i1 %24, label %25, label %22, !dbg !11573, !llvm.loop !11576

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11578
  %27 = load i32, i32* %26, align 4, !dbg !11578
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.155(i32 noundef %27) #24, !dbg !11579
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11580
  %29 = load i32, i32* %28, align 4, !dbg !11580
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.156(i32 noundef %29) #24, !dbg !11581
  br label %30, !dbg !11582

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11583
  %33 = icmp ugt i32 %32, %10, !dbg !11585
  br i1 %33, label %34, label %36, !dbg !11586

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %35, metadata !11550, metadata !DIExpression()), !dbg !11552
  br label %36, !dbg !11589

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11552
  call void @llvm.dbg.value(metadata i32 %37, metadata !11550, metadata !DIExpression()), !dbg !11552
  %38 = icmp eq i32 %37, 0, !dbg !11590
  br i1 %38, label %39, label %40, !dbg !11592

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !11593
  br label %40, !dbg !11595

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.150() unnamed_addr #15 !dbg !11597 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11598
  %2 = or i32 %1, 16777216, !dbg !11598
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11598
  ret void, !dbg !11599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.151() unnamed_addr #16 !dbg !11600 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11601
  %2 = lshr i32 %1, 25, !dbg !11602
  %3 = and i32 %2, 1, !dbg !11602
  ret i32 %3, !dbg !11603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.152(i32 noundef %0) unnamed_addr #15 !dbg !11604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11606, metadata !DIExpression()), !dbg !11607
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11608
  %3 = and i32 %2, -241, !dbg !11608
  %4 = or i32 %3, %0, !dbg !11608
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11608
  ret void, !dbg !11609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.153() unnamed_addr #15 !dbg !11610 {
  call void @llvm.dbg.value(metadata i32 3, metadata !11612, metadata !DIExpression()), !dbg !11613
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11614
  %2 = or i32 %1, 3, !dbg !11614
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11614
  ret void, !dbg !11615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.154() unnamed_addr #16 !dbg !11616 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11617
  %2 = and i32 %1, 12, !dbg !11617
  ret i32 %2, !dbg !11618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.155(i32 noundef %0) unnamed_addr #15 !dbg !11619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11621, metadata !DIExpression()), !dbg !11622
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11623
  %3 = and i32 %2, -1793, !dbg !11623
  %4 = or i32 %3, %0, !dbg !11623
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11623
  ret void, !dbg !11624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.156(i32 noundef %0) unnamed_addr #15 !dbg !11625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11627, metadata !DIExpression()), !dbg !11628
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11629
  %3 = and i32 %2, -14337, !dbg !11629
  %4 = or i32 %3, %0, !dbg !11629
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11629
  ret void, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11635, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i32 %1, metadata !11636, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !11637, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11638, metadata !DIExpression()), !dbg !11641
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11642
  %6 = icmp eq i32 %5, 0, !dbg !11644
  br i1 %6, label %7, label %25, !dbg !11645

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #24, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %8, metadata !11640, metadata !DIExpression()), !dbg !11641
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !11648
  %10 = icmp eq i32 %9, 1, !dbg !11650
  br i1 %10, label %19, label %11, !dbg !11651

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11652
  br i1 %12, label %13, label %14, !dbg !11655

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !11656
  br label %15, !dbg !11658

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !11659
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !11661
  br label %16, !dbg !11662

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !11663
  %18 = icmp eq i32 %17, 1, !dbg !11664
  br i1 %18, label %19, label %16, !dbg !11662, !llvm.loop !11665

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !11667
  %21 = load i32, i32* %20, align 4, !dbg !11667
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !11668
  %23 = load i32, i32* %22, align 4, !dbg !11668
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.149(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !11669
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %24, metadata !11639, metadata !DIExpression()), !dbg !11641
  br label %25, !dbg !11671

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !11672
  call void @llvm.dbg.value(metadata i32 %26, metadata !11639, metadata !DIExpression()), !dbg !11641
  ret i32 %26, !dbg !11673
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !11674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11675
  %2 = lshr i32 %1, 17, !dbg !11676
  %3 = and i32 %2, 1, !dbg !11676
  ret i32 %3, !dbg !11677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11678 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11679
  %2 = or i32 %1, 262144, !dbg !11679
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11679
  ret void, !dbg !11680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !11681 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11682
  %2 = and i32 %1, -262145, !dbg !11682
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11682
  ret void, !dbg !11683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !11684 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11685
  %2 = or i32 %1, 65536, !dbg !11685
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11685
  ret void, !dbg !11686
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !11687 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11690, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.value(metadata i32 undef, metadata !11690, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.value(metadata i32 undef, metadata !11690, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11706
  ret void, !dbg !11707
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11712, metadata !DIExpression()), !dbg !11714
  %2 = icmp eq i8* %0, null, !dbg !11715
  br i1 %2, label %29, label %3, !dbg !11717

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11718
  %5 = icmp eq i8 %4, 0, !dbg !11719
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11720
  br i1 %6, label %29, label %8, !dbg !11720

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11713, metadata !DIExpression()), !dbg !11714
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11721

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11713, metadata !DIExpression()), !dbg !11714
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11723
  br i1 %10, label %11, label %15, !dbg !11728

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11729
  %13 = load i8*, i8** %12, align 4, !dbg !11729
  %14 = icmp eq i8* %13, %0, !dbg !11730
  br i1 %14, label %29, label %15, !dbg !11731

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11732
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11713, metadata !DIExpression()), !dbg !11714
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11733
  br i1 %17, label %7, label %8, !dbg !11734, !llvm.loop !11735

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11713, metadata !DIExpression()), !dbg !11714
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !11737
  br i1 %20, label %21, label %26, !dbg !11741

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11742
  %23 = load i8*, i8** %22, align 4, !dbg !11742
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !11743
  %25 = icmp eq i32 %24, 0, !dbg !11744
  br i1 %25, label %29, label %26, !dbg !11745

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11746
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11713, metadata !DIExpression()), !dbg !11714
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11747
  br i1 %28, label %29, label %18, !dbg !11721, !llvm.loop !11748

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11714
  ret %struct.device* %30, !dbg !11750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !11751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11755, metadata !DIExpression()), !dbg !11756
  %2 = icmp eq %struct.device* %0, null, !dbg !11757
  br i1 %2, label %14, label %3, !dbg !11759

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11760
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11760
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11761
  %7 = load i8, i8* %6, align 1, !dbg !11761
  %8 = and i8 %7, 1, !dbg !11761
  %9 = icmp eq i8 %8, 0, !dbg !11761
  br i1 %9, label %14, label %10, !dbg !11762

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11763
  %12 = load i8, i8* %11, align 1, !dbg !11763
  %13 = icmp eq i8 %12, 0, !dbg !11764
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11756
  ret i1 %15, !dbg !11765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !11766 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11771, metadata !DIExpression()), !dbg !11772
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11773
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11775 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11783, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11784, metadata !DIExpression()), !dbg !11788
  call void @llvm.dbg.value(metadata i8* %2, metadata !11785, metadata !DIExpression()), !dbg !11788
  %5 = bitcast i32* %4 to i8*, !dbg !11789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11786, metadata !DIExpression()), !dbg !11788
  store i32 0, i32* %4, align 4, !dbg !11790
  call void @llvm.dbg.value(metadata i32* %4, metadata !11786, metadata !DIExpression(DW_OP_deref)), !dbg !11788
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11791
  call void @llvm.dbg.value(metadata i16* %6, metadata !11787, metadata !DIExpression()), !dbg !11788
  %7 = load i32, i32* %4, align 4, !dbg !11792
  call void @llvm.dbg.value(metadata i32 %7, metadata !11786, metadata !DIExpression()), !dbg !11788
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11794
  ret i32 %8, !dbg !11795
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !11796 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11800, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32* %1, metadata !11801, metadata !DIExpression()), !dbg !11806
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11807
  %4 = load i16*, i16** %3, align 4, !dbg !11807
  call void @llvm.dbg.value(metadata i16* %4, metadata !11802, metadata !DIExpression()), !dbg !11806
  %5 = icmp eq i16* %4, null, !dbg !11808
  br i1 %5, label %14, label %6, !dbg !11809

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11810
  call void @llvm.dbg.value(metadata i32 %7, metadata !11803, metadata !DIExpression()), !dbg !11810
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11811
  %9 = load i16, i16* %8, align 2, !dbg !11811
  %10 = add i16 %9, -32767, !dbg !11812
  %11 = icmp ult i16 %10, 2, !dbg !11812
  %12 = add i32 %7, 1, !dbg !11813
  call void @llvm.dbg.value(metadata i32 %12, metadata !11803, metadata !DIExpression()), !dbg !11810
  br i1 %11, label %13, label %6, !dbg !11812, !llvm.loop !11815

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11818
  br label %14, !dbg !11819

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11821 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11825, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata i32 %1, metadata !11826, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11827, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata i8* %3, metadata !11828, metadata !DIExpression()), !dbg !11836
  call void @llvm.dbg.value(metadata i32 0, metadata !11829, metadata !DIExpression()), !dbg !11837
  %5 = icmp eq i32 %1, 0, !dbg !11838
  br i1 %5, label %16, label %8, !dbg !11839

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11829, metadata !DIExpression()), !dbg !11837
  %7 = icmp eq i32 %15, %1, !dbg !11838
  br i1 %7, label %16, label %8, !dbg !11839, !llvm.loop !11840

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11829, metadata !DIExpression()), !dbg !11837
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11842
  %11 = load i16, i16* %10, align 2, !dbg !11842
  call void @llvm.dbg.value(metadata i16 %11, metadata !11831, metadata !DIExpression()), !dbg !11843
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !11844
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11834, metadata !DIExpression()), !dbg !11843
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %13, metadata !11835, metadata !DIExpression()), !dbg !11843
  %14 = icmp slt i32 %13, 0, !dbg !11846
  %15 = add nuw i32 %9, 1, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %15, metadata !11829, metadata !DIExpression()), !dbg !11837
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11850 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11854, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11855, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11856, metadata !DIExpression()), !dbg !11857
  %2 = sext i16 %0 to i32, !dbg !11858
  %3 = icmp slt i16 %0, 1, !dbg !11860
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11861
  %6 = add nsw i32 %2, -1, !dbg !11861
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11861
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11861
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11855, metadata !DIExpression()), !dbg !11857
  ret %struct.device* %8, !dbg !11862
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11863 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11865, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11866, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i8* %2, metadata !11867, metadata !DIExpression()), !dbg !11870
  %5 = bitcast i32* %4 to i8*, !dbg !11871
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11871
  call void @llvm.dbg.value(metadata i32 0, metadata !11868, metadata !DIExpression()), !dbg !11870
  store i32 0, i32* %4, align 4, !dbg !11872
  call void @llvm.dbg.value(metadata i32* %4, metadata !11868, metadata !DIExpression(DW_OP_deref)), !dbg !11870
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11873
  call void @llvm.dbg.value(metadata i16* %6, metadata !11869, metadata !DIExpression()), !dbg !11870
  %7 = load i32, i32* %4, align 4, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %7, metadata !11868, metadata !DIExpression()), !dbg !11870
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11875
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11876
  ret i32 %8, !dbg !11877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !11878 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11880, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata i32* %1, metadata !11881, metadata !DIExpression()), !dbg !11885
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11886
  %4 = load i16*, i16** %3, align 4, !dbg !11886
  call void @llvm.dbg.value(metadata i16* %4, metadata !11882, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata i32 0, metadata !11883, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata i32 0, metadata !11884, metadata !DIExpression()), !dbg !11885
  %5 = icmp eq i16* %4, null, !dbg !11887
  br i1 %5, label %22, label %6, !dbg !11889

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11883, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.value(metadata i16* %8, metadata !11882, metadata !DIExpression()), !dbg !11885
  %9 = load i16, i16* %8, align 2, !dbg !11890
  %10 = icmp eq i16 %9, -32768, !dbg !11894
  call void @llvm.dbg.value(metadata i32 undef, metadata !11883, metadata !DIExpression()), !dbg !11885
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11895
  call void @llvm.dbg.value(metadata i16* %11, metadata !11882, metadata !DIExpression()), !dbg !11885
  %12 = zext i1 %10 to i32, !dbg !11896
  %13 = add i32 %7, %12, !dbg !11896
  call void @llvm.dbg.value(metadata i32 %13, metadata !11883, metadata !DIExpression()), !dbg !11885
  %14 = icmp eq i32 %13, 2, !dbg !11897
  br i1 %14, label %15, label %6, !dbg !11898

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11885
  call void @llvm.dbg.value(metadata i32 %16, metadata !11884, metadata !DIExpression()), !dbg !11885
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11899
  %18 = load i16, i16* %17, align 2, !dbg !11899
  %19 = icmp eq i16 %18, 32767, !dbg !11900
  %20 = add i32 %16, 1, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %20, metadata !11884, metadata !DIExpression()), !dbg !11885
  br i1 %19, label %21, label %15, !dbg !11903, !llvm.loop !11904

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11906
  br label %22, !dbg !11907

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11908
  call void @llvm.dbg.value(metadata i16* %23, metadata !11882, metadata !DIExpression()), !dbg !11885
  ret i16* %23, !dbg !11909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !11910 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11913
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 7, !dbg !11914
  ret i32* %2, !dbg !11915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !11916 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12075, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12076, metadata !DIExpression()), !dbg !12078
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12077, metadata !DIExpression()), !dbg !12078
  ret void, !dbg !12079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12084, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.value(metadata i32 %1, metadata !12085, metadata !DIExpression()), !dbg !12086
  ret void, !dbg !12087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12092, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata i32 %1, metadata !12093, metadata !DIExpression()), !dbg !12094
  ret void, !dbg !12095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12100, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.value(metadata i8* %1, metadata !12101, metadata !DIExpression()), !dbg !12102
  ret i32 -134, !dbg !12103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12108, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.value(metadata i8* %1, metadata !12109, metadata !DIExpression()), !dbg !12110
  ret i32 -134, !dbg !12111
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12115, metadata !DIExpression()), !dbg !12116
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12117, !srcloc !12123
  call void @llvm.dbg.value(metadata i32 undef, metadata !12120, metadata !DIExpression()) #23, !dbg !12124
  call void @llvm.dbg.value(metadata i32 undef, metadata !12121, metadata !DIExpression()) #23, !dbg !12124
  br label %3, !dbg !12125

3:                                                ; preds = %3, %1
  br label %3, !dbg !12126, !llvm.loop !12129
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12136, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12137, metadata !DIExpression()), !dbg !12138
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12139
  unreachable, !dbg !12139
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12142, metadata !DIExpression()), !dbg !12143
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12144
  unreachable, !dbg !12144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12147, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12148, metadata !DIExpression()), !dbg !12151
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12152, !srcloc !12123
  call void @llvm.dbg.value(metadata i32 undef, metadata !12120, metadata !DIExpression()) #23, !dbg !12154
  call void @llvm.dbg.value(metadata i32 undef, metadata !12121, metadata !DIExpression()) #23, !dbg !12154
  call void @llvm.dbg.value(metadata i32 undef, metadata !12149, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12150, metadata !DIExpression()), !dbg !12151
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !12155
  %4 = icmp eq i32 %0, 4, !dbg !12156
  br i1 %4, label %5, label %6, !dbg !12161

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #26, !dbg !12162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.166, i32 0, i32 0)) #26, !dbg !12162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #26, !dbg !12162
  unreachable, !dbg !12162

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %7, metadata !12120, metadata !DIExpression()) #23, !dbg !12154
  call void @llvm.dbg.value(metadata i32 %7, metadata !12149, metadata !DIExpression()), !dbg !12151
  %8 = tail call fastcc %struct.k_thread* @k_current_get.167() #25, !dbg !12164
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12150, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i32 undef, metadata !12165, metadata !DIExpression()) #23, !dbg !12168
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !12170, !srcloc !12171
  tail call fastcc void @k_thread_abort.168(%struct.k_thread* noundef %8) #24, !dbg !12172
  ret void, !dbg !12175
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.167() unnamed_addr #5 !dbg !12176 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.169() #25, !dbg !12180
  ret %struct.k_thread* %1, !dbg !12181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.168(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12182 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12186, metadata !DIExpression()), !dbg !12187
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12188, !srcloc !12190
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12191
  ret void, !dbg !12192
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.169() unnamed_addr #5 !dbg !12193 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12194, !srcloc !12196
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12197
  ret %struct.k_thread* %1, !dbg !12198
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12203, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %1, metadata !12204, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i32 %2, metadata !12205, metadata !DIExpression()), !dbg !12206
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12207
  ret void, !dbg !12208
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12213, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i8* %1, metadata !12214, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i32 %2, metadata !12215, metadata !DIExpression()), !dbg !12216
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12217
  ret void, !dbg !12218
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12219 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12220
  ret void, !dbg !12221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12224, metadata !DIExpression()), !dbg !12225
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12226
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12227
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12228
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12229
  %4 = trunc i32 %0 to i8, !dbg !12230
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12231
  store i8 %4, i8* %5, align 4, !dbg !12232
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12233
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12234
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12235
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12236
  store i8* %8, i8** %9, align 4, !dbg !12237
  ret void, !dbg !12238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12241, metadata !DIExpression()), !dbg !12247
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12248
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12242, metadata !DIExpression()), !dbg !12247
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12249
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12243, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.174, i32 0, i32 0), metadata !12246, metadata !DIExpression()), !dbg !12247
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12250
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12251
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 40, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.174, i32 0, i32 0)) #26, !dbg !12252
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12253
  ret void, !dbg !12254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12255 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12259, metadata !DIExpression()), !dbg !12260
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12261
  ret i8* %2, !dbg !12262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12268, metadata !DIExpression()), !dbg !12269
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12270
  %3 = load i8, i8* %2, align 1, !dbg !12271
  %4 = and i8 %3, -5, !dbg !12271
  store i8 %4, i8* %2, align 1, !dbg !12271
  ret void, !dbg !12272
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12273 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12276
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12277
  %3 = ptrtoint i8* %2 to i32, !dbg !12286
  %4 = add i32 %3, 2048, !dbg !12287
  call void @llvm.dbg.value(metadata i32 %4, metadata !12281, metadata !DIExpression()) #23, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %4, metadata !12289, metadata !DIExpression()) #23, !dbg !12292
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12294, !srcloc !12295
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12296
  %6 = or i32 %5, 512, !dbg !12296
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12296
  tail call fastcc void @__NVIC_SetPriority.177(i32 noundef -2, i32 noundef 255) #26, !dbg !12297
  tail call fastcc void @__NVIC_SetPriority.177(i32 noundef -5, i32 noundef 0) #26, !dbg !12300
  tail call fastcc void @__NVIC_SetPriority.177(i32 noundef -12, i32 noundef 0) #26, !dbg !12301
  tail call fastcc void @__NVIC_SetPriority.177(i32 noundef -11, i32 noundef 0) #26, !dbg !12302
  tail call fastcc void @__NVIC_SetPriority.177(i32 noundef -10, i32 noundef 0) #26, !dbg !12303
  tail call fastcc void @__NVIC_SetPriority.177(i32 noundef -4, i32 noundef 0) #26, !dbg !12304
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12305
  %8 = or i32 %7, 458752, !dbg !12305
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12305
  tail call void @z_arm_fault_init() #26, !dbg !12306
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12307
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12308
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12311
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12312
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12313
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12314
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %10) #23, !dbg !12314
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12275, metadata !DIExpression()), !dbg !12315
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12316
  call void @z_device_state_init() #26, !dbg !12317
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12318
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12319
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12320
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12321
  unreachable, !dbg !12321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2084, metadata !DIExpression()), !dbg !12322
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12323
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12323
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2085, metadata !DIExpression()), !dbg !12322
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2085, metadata !DIExpression()), !dbg !12322
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12324
  br i1 %7, label %8, label %35, !dbg !12325

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2085, metadata !DIExpression()), !dbg !12322
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12326
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12326
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2095, metadata !DIExpression()), !dbg !12327
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12328
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12328
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %14, metadata !2099, metadata !DIExpression()), !dbg !12327
  %15 = icmp eq %struct.device* %11, null, !dbg !12330
  br i1 %15, label %32, label %16, !dbg !12332

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12333
  br i1 %17, label %26, label %18, !dbg !12336

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12337
  call void @llvm.dbg.value(metadata i32 %19, metadata !2099, metadata !DIExpression()), !dbg !12327
  %20 = icmp ult i32 %19, 255, !dbg !12339
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12339
  call void @llvm.dbg.value(metadata i32 %21, metadata !2099, metadata !DIExpression()), !dbg !12327
  %22 = trunc i32 %21 to i8, !dbg !12340
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12341
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12341
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12342
  store i8 %22, i8* %25, align 1, !dbg !12343
  br label %26, !dbg !12344

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12345
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12345
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12346
  %30 = load i8, i8* %29, align 1, !dbg !12347
  %31 = or i8 %30, 1, !dbg !12347
  store i8 %31, i8* %29, align 1, !dbg !12347
  br label %32, !dbg !12348

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12349
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2085, metadata !DIExpression()), !dbg !12322
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12324
  br i1 %34, label %8, label %35, !dbg !12325, !llvm.loop !12350

35:                                               ; preds = %32, %1
  ret void, !dbg !12352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.177(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12355, metadata !DIExpression()), !dbg !12357
  call void @llvm.dbg.value(metadata i32 %1, metadata !12356, metadata !DIExpression()), !dbg !12357
  %3 = trunc i32 %1 to i8, !dbg !12358
  %4 = shl i8 %3, 4, !dbg !12358
  %5 = and i32 %0, 15, !dbg !12361
  %6 = add nsw i32 %5, -4, !dbg !12362
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12363
  store volatile i8 %4, i8* %7, align 1, !dbg !12364
  ret void, !dbg !12365
}

; Function Attrs: optsize
declare !dbg !12366 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12370, metadata !DIExpression()), !dbg !12371
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12372
  store i8 1, i8* %2, align 1, !dbg !12373
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12374
  store i8 1, i8* %3, align 4, !dbg !12375
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12376
  store i32 0, i32* %4, align 8, !dbg !12377
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12378
  store i32 0, i32* %5, align 4, !dbg !12379
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12380
  store %struct.k_heap* null, %struct.k_heap** %6, align 4, !dbg !12381
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12382
  ret void, !dbg !12383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12384 {
  tail call void @z_sched_init() #26, !dbg !12389
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12390
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.178, i32 0, i32 0)) #26, !dbg !12391
  call void @llvm.dbg.value(metadata i8* %1, metadata !12388, metadata !DIExpression()), !dbg !12392
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12393
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12394
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12395
  ret i8* %1, !dbg !12396
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12401, metadata !DIExpression()), !dbg !12402
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12403
  unreachable, !dbg !12404
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12407, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata i8* %1, metadata !12408, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata i8* %2, metadata !12409, metadata !DIExpression()), !dbg !12410
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12411
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12412
  tail call void @boot_banner() #26, !dbg !12413
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12414
  tail call void @z_init_static_threads() #26, !dbg !12415
  tail call void @main() #26, !dbg !12416
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12417
  %5 = and i8 %4, -2, !dbg !12417
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12417
  ret void, !dbg !12418
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12419 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12429, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.value(metadata i8* %1, metadata !12430, metadata !DIExpression()), !dbg !12437
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12438
  br i1 %3, label %4, label %5, !dbg !12441

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 51) #26, !dbg !12442
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.182, i32 0, i32 0)) #26, !dbg !12442
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 51) #26, !dbg !12442
  unreachable, !dbg !12442

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12444, metadata !DIExpression()) #23, !dbg !12451
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12453, !srcloc !12459
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12460
  call void @llvm.dbg.value(metadata i32 undef, metadata !12457, metadata !DIExpression()) #23, !dbg !12460
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12451
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12461
  br i1 %7, label %9, label %8, !dbg !12464

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.187, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12465
  unreachable, !dbg !12465

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12460
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12451
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12467
  call void @llvm.dbg.value(metadata i32 undef, metadata !12432, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12431, metadata !DIExpression()), !dbg !12437
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12468
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12431, metadata !DIExpression()), !dbg !12437
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12470
  br i1 %11, label %17, label %12, !dbg !12470

12:                                               ; preds = %9, %12
  %13 = phi %struct.k_thread* [ %15, %12 ], [ %10, %9 ]
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12471
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12474
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12431, metadata !DIExpression()), !dbg !12437
  %15 = load %struct.k_thread*, %struct.k_thread** %14, align 4, !dbg !12468
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12431, metadata !DIExpression()), !dbg !12437
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12470
  br i1 %16, label %17, label %12, !dbg !12470, !llvm.loop !12475

17:                                               ; preds = %12, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12482, metadata !DIExpression()) #23, !dbg !12483
  %18 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12485
  br i1 %18, label %20, label %19, !dbg !12488

19:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12489
  unreachable, !dbg !12489

20:                                               ; preds = %17
  %21 = extractvalue { i32, i32 } %6, 0, !dbg !12453
  call void @llvm.dbg.value(metadata i32 %21, metadata !12456, metadata !DIExpression()) #23, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %21, metadata !12450, metadata !DIExpression()) #23, !dbg !12451
  call void @llvm.dbg.value(metadata i32 %21, metadata !12432, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12483
  call void @llvm.dbg.value(metadata i32 undef, metadata !12491, metadata !DIExpression()) #23, !dbg !12494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !12496, !srcloc !12497
  ret void, !dbg !12498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !12499 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12503, metadata !DIExpression()), !dbg !12505
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12506
  %3 = load i32, i32* %2, align 4, !dbg !12506
  call void @llvm.dbg.value(metadata i32 %3, metadata !12504, metadata !DIExpression()), !dbg !12505
  %4 = icmp eq i32 %3, 0, !dbg !12507
  br i1 %4, label %10, label %5, !dbg !12509

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !12510
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12513
  %8 = zext i8 %7 to i32, !dbg !12514
  %9 = icmp eq i32 %6, %8, !dbg !12515
  br i1 %9, label %11, label %10, !dbg !12516

10:                                               ; preds = %5, %1
  br label %11, !dbg !12517

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !12505
  ret i1 %12, !dbg !12518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !12519 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12523, metadata !DIExpression()), !dbg !12524
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12525
  %3 = zext i8 %2 to i32, !dbg !12526
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12527
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !12528
  %6 = or i32 %5, %3, !dbg !12529
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12530
  store i32 %6, i32* %7, align 4, !dbg !12531
  ret void, !dbg !12532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #10 !dbg !12533 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12535, metadata !DIExpression()), !dbg !12536
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12537
  %3 = load i32, i32* %2, align 4, !dbg !12537
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12539
  %5 = zext i8 %4 to i32, !dbg !12540
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12541
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !12542
  %8 = or i32 %7, %5, !dbg !12543
  %9 = icmp eq i32 %3, %8, !dbg !12544
  br i1 %9, label %10, label %11, !dbg !12545

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12546
  br label %11, !dbg !12547

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !12548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12549 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12551, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i8* %1, metadata !12552, metadata !DIExpression()), !dbg !12555
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12556
  br i1 %3, label %4, label %5, !dbg !12559

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 79) #26, !dbg !12560
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.182, i32 0, i32 0)) #26, !dbg !12560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 79) #26, !dbg !12560
  unreachable, !dbg !12560

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12444, metadata !DIExpression()) #23, !dbg !12562
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12564, !srcloc !12459
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12457, metadata !DIExpression()) #23, !dbg !12566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12562
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12567
  br i1 %7, label %9, label %8, !dbg !12568

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.187, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12569
  unreachable, !dbg !12569

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12566
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12562
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12570
  call void @llvm.dbg.value(metadata i32 undef, metadata !12554, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12553, metadata !DIExpression()), !dbg !12555
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12571
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 undef, metadata !12554, metadata !DIExpression()), !dbg !12555
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12573
  br i1 %11, label %26, label %12, !dbg !12573

12:                                               ; preds = %9, %22
  %13 = phi %struct.k_thread* [ %24, %22 ], [ %10, %9 ]
  %14 = phi { i32, i32 } [ %19, %22 ], [ %6, %9 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12482, metadata !DIExpression()) #23, !dbg !12574
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12578
  br i1 %15, label %17, label %16, !dbg !12579

16:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12580
  unreachable, !dbg !12580

17:                                               ; preds = %12
  %18 = extractvalue { i32, i32 } %14, 0, !dbg !12555
  call void @llvm.dbg.value(metadata i32 %18, metadata !12477, metadata !DIExpression()) #23, !dbg !12574
  call void @llvm.dbg.value(metadata i32 %18, metadata !12491, metadata !DIExpression()) #23, !dbg !12581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12583, !srcloc !12497
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12444, metadata !DIExpression()) #23, !dbg !12585
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12587, !srcloc !12459
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12589
  call void @llvm.dbg.value(metadata i32 undef, metadata !12457, metadata !DIExpression()) #23, !dbg !12589
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12585
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12590
  br i1 %20, label %22, label %21, !dbg !12591

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.187, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12592
  unreachable, !dbg !12592

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12589
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12585
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12593
  call void @llvm.dbg.value(metadata i32 undef, metadata !12554, metadata !DIExpression()), !dbg !12555
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12594
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12553, metadata !DIExpression()), !dbg !12555
  %24 = load %struct.k_thread*, %struct.k_thread** %23, align 4, !dbg !12571
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 undef, metadata !12554, metadata !DIExpression()), !dbg !12555
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12573
  br i1 %25, label %26, label %12, !dbg !12573, !llvm.loop !12595

26:                                               ; preds = %22, %9
  %27 = phi { i32, i32 } [ %6, %9 ], [ %19, %22 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12482, metadata !DIExpression()) #23, !dbg !12597
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12599
  br i1 %28, label %30, label %29, !dbg !12600

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12601
  unreachable, !dbg !12601

30:                                               ; preds = %26
  %31 = extractvalue { i32, i32 } %27, 0, !dbg !12555
  call void @llvm.dbg.value(metadata i32 %31, metadata !12477, metadata !DIExpression()) #23, !dbg !12597
  call void @llvm.dbg.value(metadata i32 %31, metadata !12491, metadata !DIExpression()) #23, !dbg !12602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %31) #23, !dbg !12604, !srcloc !12497
  ret void, !dbg !12605
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12606 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12607, !srcloc !12614
  call void @llvm.dbg.value(metadata i32 %1, metadata !12610, metadata !DIExpression()) #23, !dbg !12615
  %2 = icmp ne i32 %1, 0, !dbg !12616
  ret i1 %2, !dbg !12617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !12618 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12619
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12620
  %3 = load i8, i8* %2, align 4, !dbg !12621
  %4 = or i8 %3, 1, !dbg !12621
  store i8 %4, i8* %2, align 4, !dbg !12621
  ret void, !dbg !12622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !12623 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12624
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12625
  %3 = load i8, i8* %2, align 4, !dbg !12626
  %4 = and i8 %3, -2, !dbg !12626
  store i8 %4, i8* %2, align 4, !dbg !12626
  ret void, !dbg !12627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !12628 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12629
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12630
  %3 = load i8, i8* %2, align 4, !dbg !12630
  %4 = and i8 %3, 1, !dbg !12631
  %5 = icmp ne i8 %4, 0, !dbg !12632
  ret i1 %5, !dbg !12633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_monitor_exit(%struct.k_thread* noundef readonly %0) local_unnamed_addr #1 !dbg !12634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12638, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12444, metadata !DIExpression()) #23, !dbg !12644
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12646, !srcloc !12459
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 undef, metadata !12457, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12644
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12649
  br i1 %3, label %5, label %4, !dbg !12650

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.187, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12651
  unreachable, !dbg !12651

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12644
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12639, metadata !DIExpression()), !dbg !12643
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12653
  %7 = icmp eq %struct.k_thread* %6, %0, !dbg !12654
  br i1 %7, label %8, label %11, !dbg !12655

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12656
  %10 = load %struct.k_thread*, %struct.k_thread** %9, align 8, !dbg !12656
  store %struct.k_thread* %10, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12658
  br label %22, !dbg !12659

11:                                               ; preds = %5, %14
  %12 = phi %struct.k_thread* [ %16, %14 ], [ %6, %5 ], !dbg !12660
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !12640, metadata !DIExpression()), !dbg !12660
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !12661
  br i1 %13, label %22, label %14, !dbg !12662

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !12663
  %16 = load %struct.k_thread*, %struct.k_thread** %15, align 8, !dbg !12663
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !12664
  br i1 %17, label %18, label %11, !dbg !12665, !llvm.loop !12666

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !12663
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12668
  %21 = load %struct.k_thread*, %struct.k_thread** %20, align 8, !dbg !12668
  store %struct.k_thread* %21, %struct.k_thread** %19, align 8, !dbg !12671
  br label %22, !dbg !12672

22:                                               ; preds = %11, %18, %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12482, metadata !DIExpression()) #23, !dbg !12673
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12675
  br i1 %23, label %25, label %24, !dbg !12676

24:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12677
  unreachable, !dbg !12677

25:                                               ; preds = %22
  %26 = extractvalue { i32, i32 } %2, 0, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %26, metadata !12456, metadata !DIExpression()) #23, !dbg !12648
  call void @llvm.dbg.value(metadata i32 %26, metadata !12450, metadata !DIExpression()) #23, !dbg !12644
  call void @llvm.dbg.value(metadata i32 %26, metadata !12639, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 undef, metadata !12491, metadata !DIExpression()) #23, !dbg !12678
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !12680, !srcloc !12497
  ret void, !dbg !12681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12686, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i8* %1, metadata !12687, metadata !DIExpression()), !dbg !12688
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12689
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !12691
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12686, metadata !DIExpression()), !dbg !12688
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 0, !dbg !12692
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #26, !dbg !12693
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 31, !dbg !12694
  store i8 0, i8* %8, align 1, !dbg !12695
  ret i32 0, !dbg !12696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !12697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12701, metadata !DIExpression()), !dbg !12702
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12703
  ret i8* %2, !dbg !12704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12709, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i8* %1, metadata !12710, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.value(metadata i32 %2, metadata !12711, metadata !DIExpression()), !dbg !12712
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12713
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #26, !dbg !12714
  ret i32 0, !dbg !12715
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2229, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i8* %1, metadata !2230, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 %2, metadata !2231, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 0, metadata !2232, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i8 undef, metadata !2234, metadata !DIExpression()), !dbg !12716
  %4 = icmp eq i8* %1, null, !dbg !12717
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12719
  br i1 %6, label %46, label %7, !dbg !12719

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12720
  %9 = load i8, i8* %8, align 1, !dbg !12720
  call void @llvm.dbg.value(metadata i8 %9, metadata !2234, metadata !DIExpression()), !dbg !12716
  %10 = add i32 %2, -1, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %10, metadata !2231, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i8 0, metadata !2235, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.value(metadata i8 %9, metadata !2234, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 0, metadata !2232, metadata !DIExpression()), !dbg !12716
  %11 = icmp eq i8 %9, 0, !dbg !12723
  br i1 %11, label %12, label %15, !dbg !12725

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12726
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12727
  store i8 0, i8* %14, align 1, !dbg !12728
  br label %46, !dbg !12729

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2235, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.value(metadata i8 %17, metadata !2234, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 %18, metadata !2232, metadata !DIExpression()), !dbg !12716
  %19 = zext i8 %17 to i32, !dbg !12730
  %20 = zext i8 %16 to i32, !dbg !12731
  %21 = shl nuw i32 1, %20, !dbg !12731
  call void @llvm.dbg.value(metadata i32 %21, metadata !2233, metadata !DIExpression()), !dbg !12716
  %22 = and i32 %21, %19, !dbg !12733
  %23 = icmp eq i32 %22, 0, !dbg !12735
  br i1 %23, label %42, label %24, !dbg !12736

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12737
  %26 = sub i32 %10, %18, !dbg !12738
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12739
  %28 = load i8*, i8** %27, align 4, !dbg !12739
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12740
  %30 = load i32, i32* %29, align 4, !dbg !12740
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !12741
  %32 = add i32 %31, %18, !dbg !12742
  call void @llvm.dbg.value(metadata i32 %32, metadata !2232, metadata !DIExpression()), !dbg !12716
  %33 = trunc i32 %21 to i8, !dbg !12743
  %34 = xor i8 %33, -1, !dbg !12743
  %35 = and i8 %17, %34, !dbg !12743
  call void @llvm.dbg.value(metadata i8 %35, metadata !2234, metadata !DIExpression()), !dbg !12716
  %36 = icmp eq i8 %35, 0, !dbg !12744
  br i1 %36, label %12, label %37, !dbg !12746

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12747
  %39 = sub i32 %10, %32, !dbg !12749
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.195, i32 0, i32 0), i32 noundef 1) #24, !dbg !12750
  %41 = add i32 %40, %32, !dbg !12751
  call void @llvm.dbg.value(metadata i32 %41, metadata !2232, metadata !DIExpression()), !dbg !12716
  br label %42, !dbg !12752

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12716
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12716
  call void @llvm.dbg.value(metadata i8 %44, metadata !2234, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.value(metadata i32 %43, metadata !2232, metadata !DIExpression()), !dbg !12716
  %45 = add i8 %16, 1, !dbg !12753
  call void @llvm.dbg.value(metadata i8 %45, metadata !2235, metadata !DIExpression()), !dbg !12722
  br label %15, !dbg !12725

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.196, i32 0, i32 0), %3 ], !dbg !12716
  ret i8* %47, !dbg !12754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12755 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12759, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32 %1, metadata !12760, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i8* %2, metadata !12761, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32 %3, metadata !12762, metadata !DIExpression()), !dbg !12764
  %5 = icmp ult i32 %1, %3, !dbg !12765
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12765
  call void @llvm.dbg.value(metadata i32 %6, metadata !12763, metadata !DIExpression()), !dbg !12764
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !12766
  ret i32 %6, !dbg !12767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12770, metadata !DIExpression()), !dbg !12771
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !12772
  ret void, !dbg !12773
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12783, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12784, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 %2, metadata !12785, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12786, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i8* %4, metadata !12787, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i8* %5, metadata !12788, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i8* %6, metadata !12789, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 %7, metadata !12790, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 %8, metadata !12791, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i8* %9, metadata !12792, metadata !DIExpression()), !dbg !12795
  %11 = icmp eq i32 %7, 40, !dbg !12796
  br i1 %11, label %12, label %15, !dbg !12796

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12796
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !12796
  br i1 %14, label %19, label %18, !dbg !12796

15:                                               ; preds = %10
  %16 = add i32 %7, 29, !dbg !12796
  %17 = icmp ult i32 %16, 69, !dbg !12796
  br i1 %17, label %19, label %18, !dbg !12796

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.13.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 536) #26, !dbg !12800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14.209, i32 0, i32 0), i32 noundef %7, i32 noundef 39, i32 noundef -29) #26, !dbg !12800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 536) #26, !dbg !12800
  unreachable, !dbg !12800

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12802
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !12803
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12804
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !12805
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !12806
  call void @llvm.dbg.value(metadata i8* %22, metadata !12793, metadata !DIExpression()), !dbg !12795
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !12807
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12808
  store i8* null, i8** %23, align 4, !dbg !12809
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !12810
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %24, align 8, !dbg !12811
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 1, !dbg !12812
  store i8* %4, i8** %25, align 4, !dbg !12813
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 2, !dbg !12814
  store i8* %5, i8** %26, align 8, !dbg !12815
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 3, !dbg !12816
  store i8* %6, i8** %27, align 4, !dbg !12817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12444, metadata !DIExpression()) #23, !dbg !12818
  %28 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12820, !srcloc !12459
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12822
  call void @llvm.dbg.value(metadata i32 undef, metadata !12457, metadata !DIExpression()) #23, !dbg !12822
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12818
  %29 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12823
  br i1 %29, label %31, label %30, !dbg !12824

30:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.187, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 148) #26, !dbg !12825
  unreachable, !dbg !12825

31:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()) #23, !dbg !12822
  call void @llvm.dbg.value(metadata i32 undef, metadata !12450, metadata !DIExpression()) #23, !dbg !12818
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12826
  call void @llvm.dbg.value(metadata i32 undef, metadata !12794, metadata !DIExpression()), !dbg !12795
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12827
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12828
  store %struct.k_thread* %32, %struct.k_thread** %33, align 8, !dbg !12829
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12830
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12482, metadata !DIExpression()) #23, !dbg !12831
  %34 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12833
  br i1 %34, label %36, label %35, !dbg !12834

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20.186, i32 0, i32 0), i32 noundef 194) #26, !dbg !12835
  unreachable, !dbg !12835

36:                                               ; preds = %31
  %37 = extractvalue { i32, i32 } %28, 0, !dbg !12820
  call void @llvm.dbg.value(metadata i32 %37, metadata !12456, metadata !DIExpression()) #23, !dbg !12822
  call void @llvm.dbg.value(metadata i32 %37, metadata !12450, metadata !DIExpression()) #23, !dbg !12818
  call void @llvm.dbg.value(metadata i32 %37, metadata !12794, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.value(metadata i32 undef, metadata !12477, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata i32 undef, metadata !12491, metadata !DIExpression()) #23, !dbg !12836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #23, !dbg !12838, !srcloc !12497
  %38 = icmp eq i8* %9, null, !dbg !12839
  %39 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12841
  br i1 %38, label %43, label %40, !dbg !12842

40:                                               ; preds = %36
  %41 = tail call i8* @strncpy(i8* noundef nonnull %39, i8* noundef nonnull %9, i32 noundef 31) #26, !dbg !12843
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 31, !dbg !12845
  store i8 0, i8* %42, align 1, !dbg !12846
  br label %44, !dbg !12847

43:                                               ; preds = %36
  store i8 0, i8* %39, align 4, !dbg !12848
  br label %44

44:                                               ; preds = %43, %40
  %45 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12850
  %46 = icmp eq %struct.k_thread* %45, null, !dbg !12850
  br i1 %46, label %50, label %47, !dbg !12852

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %45, i32 0, i32 9, !dbg !12853
  %49 = load %struct.k_heap*, %struct.k_heap** %48, align 4, !dbg !12853
  br label %50, !dbg !12854

50:                                               ; preds = %44, %47
  %51 = phi %struct.k_heap* [ %49, %47 ], [ null, %44 ], !dbg !12795
  %52 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12855
  store %struct.k_heap* %51, %struct.k_heap** %52, align 4, !dbg !12857
  ret i8* %22, !dbg !12858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12863, metadata !DIExpression()), !dbg !12864
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12865
  ret i1 %2, !dbg !12866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !12867 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12872, metadata !DIExpression()), !dbg !12873
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12874
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !12875
  ret void, !dbg !12876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !12877 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12882, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 %1, metadata !12883, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 %2, metadata !12884, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 %3, metadata !12885, metadata !DIExpression()), !dbg !12886
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12887
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12888
  %6 = trunc i32 %3 to i8, !dbg !12889
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12890
  store i8 %6, i8* %7, align 4, !dbg !12891
  %8 = trunc i32 %2 to i8, !dbg !12892
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12893
  store i8 %8, i8* %9, align 1, !dbg !12894
  %10 = trunc i32 %1 to i8, !dbg !12895
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12896
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12896
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12896
  store i8 %10, i8* %13, align 2, !dbg !12897
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12898
  store i8 0, i8* %14, align 1, !dbg !12899
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !12902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12906, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12907, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i32 %2, metadata !12908, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i32 0, metadata !12913, metadata !DIExpression()), !dbg !12914
  %4 = add i32 %2, 7, !dbg !12915
  %5 = and i32 %4, -8, !dbg !12915
  %6 = add i32 %5, 64, !dbg !12915
  call void @llvm.dbg.value(metadata i32 %6, metadata !12909, metadata !DIExpression()), !dbg !12914
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.210(%struct.z_thread_stack_element* noundef %1) #24, !dbg !12917
  call void @llvm.dbg.value(metadata i8* %7, metadata !12912, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i32 %5, metadata !12910, metadata !DIExpression()), !dbg !12914
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12918
  call void @llvm.dbg.value(metadata i8* %8, metadata !12911, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i32 0, metadata !12913, metadata !DIExpression()), !dbg !12914
  %9 = ptrtoint i8* %7 to i32, !dbg !12919
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12920
  store i32 %9, i32* %10, align 8, !dbg !12921
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12922
  store i32 %5, i32* %11, align 4, !dbg !12923
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 2, !dbg !12924
  store i32 0, i32* %12, align 8, !dbg !12925
  call void @llvm.dbg.value(metadata i8* %8, metadata !12911, metadata !DIExpression()), !dbg !12914
  ret i8* %8, !dbg !12926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.210(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12927 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12931, metadata !DIExpression()), !dbg !12932
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12933
  ret i8* %2, !dbg !12934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12935 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12940, metadata !DIExpression()), !dbg !12941
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12942
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12943
  ret void, !dbg !12944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12945 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12947, metadata !DIExpression()), !dbg !12948
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12949
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !12950
  ret void, !dbg !12951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12956, metadata !DIExpression()), !dbg !12957
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12958
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12959
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12960
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12961
  ret void, !dbg !12962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !12963 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12968, metadata !DIExpression()), !dbg !12969
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12970
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12971
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12972
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12973
  ret void, !dbg !12974
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12975 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12983, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12984, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 %2, metadata !12985, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12986, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8* %4, metadata !12987, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8* %5, metadata !12988, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i8* %6, metadata !12989, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 %7, metadata !12990, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 %8, metadata !12991, metadata !DIExpression()), !dbg !12993
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12994, !srcloc !12614
  call void @llvm.dbg.value(metadata i32 %11, metadata !12610, metadata !DIExpression()) #23, !dbg !12999
  %12 = icmp eq i32 %11, 0, !dbg !13000
  br i1 %12, label %14, label %13, !dbg !13001

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15.213, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 647) #26, !dbg !13002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.214, i32 0, i32 0)) #26, !dbg !13002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 647) #26, !dbg !13002
  unreachable, !dbg !13002

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12992, metadata !DIExpression()), !dbg !12993
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13004
  %17 = icmp eq i64 %15, -1, !dbg !13005
  br i1 %17, label %19, label %18, !dbg !13007

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13008
  br label %19, !dbg !13010

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13012 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13017, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13016, metadata !DIExpression()), !dbg !13018
  %4 = icmp eq i64 %3, 0, !dbg !13019
  br i1 %4, label %5, label %6, !dbg !13021

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.215(%struct.k_thread* noundef %0) #24, !dbg !13022
  br label %7, !dbg !13024

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13025
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.215(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13032, metadata !DIExpression()), !dbg !13033
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13034, !srcloc !13036
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13037
  ret void, !dbg !13038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13039 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13042, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13041, metadata !DIExpression()), !dbg !13043
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13044
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13045
  ret void, !dbg !13046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13047 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13049, metadata !DIExpression()), !dbg !13069
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13070

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 750) #26, !dbg !13074
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18.219, i32 0, i32 0)) #26, !dbg !13074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 750) #26, !dbg !13074
  unreachable, !dbg !13074

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13049, metadata !DIExpression()), !dbg !13069
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13077
  br i1 %4, label %6, label %5, !dbg !13078

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13079
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13067, metadata !DIExpression()), !dbg !13080
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13081

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13085
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13085
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13087
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13087
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13088
  %12 = load i32, i32* %11, align 4, !dbg !13088
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13089
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13089
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13090
  %16 = load i8*, i8** %15, align 4, !dbg !13090
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13091
  %18 = load i8*, i8** %17, align 4, !dbg !13091
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13092
  %20 = load i8*, i8** %19, align 4, !dbg !13092
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13093
  %22 = load i32, i32* %21, align 4, !dbg !13093
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13094
  %24 = load i32, i32* %23, align 4, !dbg !13094
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13095
  %26 = load i8*, i8** %25, align 4, !dbg !13095
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13096
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13097
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13098
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13099
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13099
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13100
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13049, metadata !DIExpression()), !dbg !13069
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13101
  br i1 %32, label %1, label %2, !dbg !13070, !llvm.loop !13102

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 781) #26, !dbg !13104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18.219, i32 0, i32 0)) #26, !dbg !13104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 781) #26, !dbg !13104
  unreachable, !dbg !13104

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13067, metadata !DIExpression()), !dbg !13080
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13107
  br i1 %36, label %38, label %37, !dbg !13108

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #26, !dbg !13109
  ret void, !dbg !13110

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13111
  %40 = load i32, i32* %39, align 4, !dbg !13111
  %41 = icmp eq i32 %40, -1, !dbg !13114
  br i1 %41, label %50, label %42, !dbg !13115

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13116
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13116
  %45 = icmp sgt i32 %40, 0, !dbg !13118
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13118
  %47 = zext i32 %46 to i64, !dbg !13118
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.220(i64 noundef %47) #24, !dbg !13118
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13119
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13119
  br label %50, !dbg !13120

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13121
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13067, metadata !DIExpression()), !dbg !13080
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13122
  br i1 %52, label %33, label %34, !dbg !13081, !llvm.loop !13123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.220(i64 noundef %0) unnamed_addr #4 !dbg !13125 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13127, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i64 %0, metadata !13129, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 1000, metadata !13132, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i32 10000, metadata !13133, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8 1, metadata !13134, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8 0, metadata !13135, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8 1, metadata !13136, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8 0, metadata !13137, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8 1, metadata !13138, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i8 0, metadata !13139, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i64 0, metadata !13140, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.value(metadata i64 0, metadata !13140, metadata !DIExpression()), !dbg !13144
  %2 = mul i64 %0, 10, !dbg !13146
  ret i64 %2, !dbg !13152
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13153 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13155, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata i8* %1, metadata !13156, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata i8* %2, metadata !13157, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata i8* %3, metadata !13158, metadata !DIExpression()), !dbg !13159
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13160
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13161
  %7 = load i8, i8* %6, align 4, !dbg !13162
  %8 = or i8 %7, 4, !dbg !13162
  store i8 %8, i8* %6, align 4, !dbg !13162
  tail call void @z_thread_essential_clear() #24, !dbg !13163
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13164
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 0, !dbg !13165
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %10, align 8, !dbg !13166
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 1, !dbg !13167
  store i8* %1, i8** %11, align 4, !dbg !13168
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 2, !dbg !13169
  store i8* %2, i8** %12, align 8, !dbg !13170
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 3, !dbg !13171
  store i8* %3, i8** %13, align 4, !dbg !13172
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13173
  unreachable, !dbg !13173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13178, metadata !DIExpression()), !dbg !13179
  ret i32 -134, !dbg !13180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13185, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.value(metadata i32 %1, metadata !13186, metadata !DIExpression()), !dbg !13187
  ret i32 -134, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13196, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13197, metadata !DIExpression()), !dbg !13198
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13199
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13201
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13198
  ret i32 %6, !dbg !13202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13203 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13207, metadata !DIExpression()), !dbg !13208
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13209
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13208
  ret i32 %3, !dbg !13211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13212 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13214
  ret void, !dbg !13215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13218, metadata !DIExpression()), !dbg !13221
  call void @llvm.dbg.value(metadata i8* %1, metadata !13219, metadata !DIExpression()), !dbg !13221
  call void @llvm.dbg.value(metadata i8* %2, metadata !13220, metadata !DIExpression()), !dbg !13221
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13222
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13222
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13222
  %7 = load i8, i8* %6, align 2, !dbg !13222
  %8 = icmp sgt i8 %7, -1, !dbg !13222
  br i1 %8, label %10, label %9, !dbg !13225

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 39) #26, !dbg !13226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 39) #26, !dbg !13226
  unreachable, !dbg !13226

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13228, !srcloc !13235
  call void @llvm.dbg.value(metadata i32 undef, metadata !13231, metadata !DIExpression()) #23, !dbg !13236
  call void @llvm.dbg.value(metadata i32 undef, metadata !13232, metadata !DIExpression()) #23, !dbg !13236
  tail call fastcc void @k_cpu_idle() #24, !dbg !13237
  br label %10, !dbg !13238, !llvm.loop !13239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13241 {
  tail call void @arch_cpu_idle() #26, !dbg !13242
  ret void, !dbg !13243
}

; Function Attrs: optsize
declare !dbg !13244 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13256, metadata !DIExpression()), !dbg !13257
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13258
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13259
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13260
  store i32 0, i32* %3, align 4, !dbg !13261
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13262
  tail call fastcc void @z_waitq_init.228(%struct._wait_q_t* noundef %4) #24, !dbg !13263
  ret i32 0, !dbg !13264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.228(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13265 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13269, metadata !DIExpression()), !dbg !13270
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13271
  tail call fastcc void @sys_dlist_init.229(%struct._dnode* noundef %2) #24, !dbg !13272
  ret void, !dbg !13273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.229(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13274 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13279, metadata !DIExpression()), !dbg !13280
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13281
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13282
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13283
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13284
  ret void, !dbg !13285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13286 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13295, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13294, metadata !DIExpression()), !dbg !13307
  call void @llvm.dbg.value(metadata i8 0, metadata !13302, metadata !DIExpression()), !dbg !13307
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13308, !srcloc !13317
  call void @llvm.dbg.value(metadata i32 %4, metadata !13311, metadata !DIExpression()) #23, !dbg !13318
  %5 = icmp eq i32 %4, 0, !dbg !13319
  br i1 %5, label %7, label %6, !dbg !13320

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 101) #26, !dbg !13321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.235, i32 0, i32 0)) #26, !dbg !13321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 101) #26, !dbg !13321
  unreachable, !dbg !13321

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13323, metadata !DIExpression()) #23, !dbg !13330
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13332, !srcloc !13338
  call void @llvm.dbg.value(metadata i32 undef, metadata !13335, metadata !DIExpression()) #23, !dbg !13339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()) #23, !dbg !13339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13329, metadata !DIExpression()) #23, !dbg !13330
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13340
  br i1 %9, label %11, label %10, !dbg !13343

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 148) #26, !dbg !13344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.239, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 148) #26, !dbg !13344
  unreachable, !dbg !13344

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13332
  call void @llvm.dbg.value(metadata i32 %12, metadata !13335, metadata !DIExpression()) #23, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %12, metadata !13329, metadata !DIExpression()) #23, !dbg !13330
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13346
  call void @llvm.dbg.value(metadata i32 %12, metadata !13297, metadata !DIExpression()), !dbg !13307
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13347
  %14 = load i32, i32* %13, align 4, !dbg !13347
  %15 = icmp eq i32 %14, 0, !dbg !13347
  br i1 %15, label %21, label %16, !dbg !13347

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13347
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13347
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13347
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13347
  br i1 %20, label %27, label %39, !dbg !13349, !prof !13350

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13351
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13353
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13353
  %25 = load i8, i8* %24, align 2, !dbg !13353
  %26 = sext i8 %25 to i32, !dbg !13351
  br label %30, !dbg !13354

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13355
  %29 = load i32, i32* %28, align 4, !dbg !13355
  br label %30, !dbg !13354

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13356
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13354
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13357
  store i32 %32, i32* %33, align 4, !dbg !13358
  %34 = add i32 %14, 1, !dbg !13359
  store i32 %34, i32* %13, align 4, !dbg !13359
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13360
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13361
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #23, !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13367, metadata !DIExpression()) #23, !dbg !13368
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13370
  br i1 %36, label %38, label %37, !dbg !13373

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.241, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13374
  unreachable, !dbg !13374

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13362, metadata !DIExpression()) #23, !dbg !13368
  call void @llvm.dbg.value(metadata i32 %12, metadata !13376, metadata !DIExpression()) #23, !dbg !13379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13381, !srcloc !13382
  br label %97, !dbg !13383

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13384
  br i1 %40, label %41, label %45, !dbg !13386, !prof !13387

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #23, !dbg !13388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13367, metadata !DIExpression()) #23, !dbg !13388
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13391
  br i1 %42, label %44, label %43, !dbg !13392

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.241, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13393
  unreachable, !dbg !13393

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13362, metadata !DIExpression()) #23, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %12, metadata !13376, metadata !DIExpression()) #23, !dbg !13394
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13396, !srcloc !13382
  br label %97, !dbg !13397

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13398
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13398
  %48 = load i8, i8* %47, align 2, !dbg !13398
  %49 = sext i8 %48 to i32, !dbg !13399
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13400
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13400
  %52 = load i8, i8* %51, align 2, !dbg !13400
  %53 = sext i8 %52 to i32, !dbg !13401
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13402
  call void @llvm.dbg.value(metadata i32 %54, metadata !13296, metadata !DIExpression()), !dbg !13307
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13403
  br i1 %55, label %56, label %58, !dbg !13405

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13406
  call void @llvm.dbg.value(metadata i1 %57, metadata !13302, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13307
  br label %58, !dbg !13408

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13302, metadata !DIExpression()), !dbg !13307
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13409
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13410
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.236, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !13410
  call void @llvm.dbg.value(metadata i32 %62, metadata !13303, metadata !DIExpression()), !dbg !13307
  %63 = icmp eq i32 %62, 0, !dbg !13411
  br i1 %63, label %97, label %64, !dbg !13413

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13323, metadata !DIExpression()) #23, !dbg !13414
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13416, !srcloc !13338
  call void @llvm.dbg.value(metadata i32 undef, metadata !13335, metadata !DIExpression()) #23, !dbg !13418
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()) #23, !dbg !13418
  call void @llvm.dbg.value(metadata i32 undef, metadata !13329, metadata !DIExpression()) #23, !dbg !13414
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13419
  br i1 %66, label %68, label %67, !dbg !13420

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 148) #26, !dbg !13421
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.239, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13421
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 148) #26, !dbg !13421
  unreachable, !dbg !13421

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13416
  call void @llvm.dbg.value(metadata i32 %69, metadata !13335, metadata !DIExpression()) #23, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %69, metadata !13329, metadata !DIExpression()) #23, !dbg !13414
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %69, metadata !13297, metadata !DIExpression()), !dbg !13307
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13423
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13423
  br i1 %71, label %90, label %72, !dbg !13424, !prof !13387

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13425
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13304, metadata !DIExpression()), !dbg !13426
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13427
  br i1 %74, label %83, label %75, !dbg !13428

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13429
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13429
  %78 = load i8, i8* %77, align 2, !dbg !13429
  %79 = sext i8 %78 to i32, !dbg !13430
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13431
  %81 = load i32, i32* %80, align 4, !dbg !13431
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13432
  br label %86, !dbg !13428

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13433
  %85 = load i32, i32* %84, align 4, !dbg !13433
  br label %86, !dbg !13428

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13428
  call void @llvm.dbg.value(metadata i32 %87, metadata !13296, metadata !DIExpression()), !dbg !13307
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13434
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13435
  call void @llvm.dbg.value(metadata i1 %89, metadata !13302, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13307
  call void @llvm.dbg.value(metadata i8 poison, metadata !13302, metadata !DIExpression()), !dbg !13307
  br i1 %89, label %91, label %93, !dbg !13436

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13302, metadata !DIExpression()), !dbg !13307
  br i1 %59, label %91, label %93, !dbg !13436

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13437
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.236, [1 x i32] %92) #26, !dbg !13437
  br label %97, !dbg !13440

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #23, !dbg !13441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13367, metadata !DIExpression()) #23, !dbg !13441
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13444
  br i1 %94, label %96, label %95, !dbg !13445

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13446
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.241, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13446
  unreachable, !dbg !13446

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13362, metadata !DIExpression()) #23, !dbg !13441
  call void @llvm.dbg.value(metadata i32 %69, metadata !13376, metadata !DIExpression()) #23, !dbg !13447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13449, !srcloc !13382
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13307
  ret i32 %98, !dbg !13450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13455, metadata !DIExpression()), !dbg !13458
  call void @llvm.dbg.value(metadata i32 %1, metadata !13456, metadata !DIExpression()), !dbg !13458
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13459
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %4, metadata !13457, metadata !DIExpression()), !dbg !13458
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13460
  call void @llvm.dbg.value(metadata i32 %5, metadata !13457, metadata !DIExpression()), !dbg !13458
  ret i32 %5, !dbg !13461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13466, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 %1, metadata !13467, metadata !DIExpression()), !dbg !13468
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13469
  ret i1 %3, !dbg !13470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13471 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13475, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.value(metadata i32 %1, metadata !13476, metadata !DIExpression()), !dbg !13477
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13478
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13478
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13480
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13480
  %7 = load i8, i8* %6, align 2, !dbg !13480
  %8 = sext i8 %7 to i32, !dbg !13481
  %9 = icmp eq i32 %8, %1, !dbg !13482
  br i1 %9, label %12, label %10, !dbg !13483

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !13484
  br label %12, !dbg !13486

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13477
  ret i1 %13, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13492, metadata !DIExpression()), !dbg !13493
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13494
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13495
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13496
  ret %struct.k_thread* %4, !dbg !13497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13498 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13502, metadata !DIExpression()), !dbg !13503
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13504
  br i1 %2, label %6, label %3, !dbg !13504

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13505
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13505
  br label %6, !dbg !13504

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13504
  ret %struct._dnode* %7, !dbg !13506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13507 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13511, metadata !DIExpression()), !dbg !13512
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13513
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13513
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13514
  ret i1 %4, !dbg !13515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13518, metadata !DIExpression()), !dbg !13520
  call void @llvm.dbg.value(metadata i32 %1, metadata !13519, metadata !DIExpression()), !dbg !13520
  %3 = icmp slt i32 %0, %1, !dbg !13521
  ret i1 %3, !dbg !13522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13525, metadata !DIExpression()), !dbg !13526
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13527
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13527
  ret i32 %3, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13533, metadata !DIExpression()), !dbg !13534
  %2 = icmp sgt i32 %0, -128, !dbg !13535
  ret i1 %2, !dbg !13536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13537 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13539, metadata !DIExpression()), !dbg !13543
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13544, !srcloc !13317
  call void @llvm.dbg.value(metadata i32 %2, metadata !13311, metadata !DIExpression()) #23, !dbg !13549
  %3 = icmp eq i32 %2, 0, !dbg !13550
  br i1 %3, label %5, label %4, !dbg !13551

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 205) #26, !dbg !13552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.235, i32 0, i32 0)) #26, !dbg !13552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 205) #26, !dbg !13552
  unreachable, !dbg !13552

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13554
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13554
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13554
  br i1 %8, label %41, label %9, !dbg !13556

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13557
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13557
  br i1 %11, label %12, label %41, !dbg !13559

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13560
  %14 = load i32, i32* %13, align 4, !dbg !13560
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13563

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 229) #26, !dbg !13564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.234, i32 0, i32 0), i32 noundef 229) #26, !dbg !13564
  unreachable, !dbg !13564

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13566
  store i32 %17, i32* %13, align 4, !dbg !13566
  br label %41, !dbg !13569

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13323, metadata !DIExpression()) #23, !dbg !13570
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13572, !srcloc !13338
  call void @llvm.dbg.value(metadata i32 undef, metadata !13335, metadata !DIExpression()) #23, !dbg !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()) #23, !dbg !13574
  call void @llvm.dbg.value(metadata i32 undef, metadata !13329, metadata !DIExpression()) #23, !dbg !13570
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13575
  br i1 %20, label %22, label %21, !dbg !13576

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.237, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 148) #26, !dbg !13577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.239, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 148) #26, !dbg !13577
  unreachable, !dbg !13577

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13572
  call void @llvm.dbg.value(metadata i32 %23, metadata !13335, metadata !DIExpression()) #23, !dbg !13574
  call void @llvm.dbg.value(metadata i32 %23, metadata !13329, metadata !DIExpression()) #23, !dbg !13570
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13578
  call void @llvm.dbg.value(metadata i32 %23, metadata !13541, metadata !DIExpression()), !dbg !13543
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13579
  %25 = load i32, i32* %24, align 4, !dbg !13579
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13580
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13581
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !13582
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13540, metadata !DIExpression()), !dbg !13543
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13583
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13584
  br i1 %29, label %37, label %30, !dbg !13586

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13587
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13587
  %33 = load i8, i8* %32, align 2, !dbg !13587
  %34 = sext i8 %33 to i32, !dbg !13589
  store i32 %34, i32* %24, align 4, !dbg !13590
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13591, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata i32 0, metadata !13596, metadata !DIExpression()), !dbg !13597
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 10, i32 1, !dbg !13599
  store i32 0, i32* %35, align 4, !dbg !13600
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !13601
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13602
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.236, [1 x i32] %36) #26, !dbg !13602
  br label %41, !dbg !13603

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13604
  call void @llvm.dbg.value(metadata i32 undef, metadata !13362, metadata !DIExpression()) #23, !dbg !13606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.236, metadata !13367, metadata !DIExpression()) #23, !dbg !13606
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13608
  br i1 %38, label %40, label %39, !dbg !13609

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.241, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.236) #26, !dbg !13610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.238, i32 0, i32 0), i32 noundef 194) #26, !dbg !13610
  unreachable, !dbg !13610

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13362, metadata !DIExpression()) #23, !dbg !13606
  call void @llvm.dbg.value(metadata i32 %23, metadata !13376, metadata !DIExpression()) #23, !dbg !13611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13613, !srcloc !13382
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13543
  ret i32 %42, !dbg !13614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13620, metadata !DIExpression()), !dbg !13623
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13624
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13624
  %5 = load i8, i8* %4, align 2, !dbg !13624
  call void @llvm.dbg.value(metadata i8 %5, metadata !13621, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13623
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13625
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13625
  %8 = load i8, i8* %7, align 2, !dbg !13625
  call void @llvm.dbg.value(metadata i8 %8, metadata !13622, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13623
  %9 = icmp eq i8 %8, %5, !dbg !13626
  %10 = sext i8 %5 to i32, !dbg !13628
  %11 = sext i8 %8 to i32, !dbg !13628
  %12 = sub nsw i32 %11, %10, !dbg !13628
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13628
  ret i32 %13, !dbg !13629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13634, metadata !DIExpression()), !dbg !13635
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13636
  %3 = icmp eq i32 %2, 0, !dbg !13638
  br i1 %3, label %8, label %4, !dbg !13639

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !13640
  %6 = add i32 %5, %2, !dbg !13642
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13643
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13644
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !13645
  br label %8, !dbg !13646

8:                                                ; preds = %4, %1
  ret void, !dbg !13647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13652, metadata !DIExpression()), !dbg !13654
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13655
  call void @llvm.dbg.value(metadata i32 %1, metadata !13653, metadata !DIExpression()), !dbg !13654
  ret i32 %1, !dbg !13656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13661, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i32 %1, metadata !13662, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i32 0, metadata !13663, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !13679
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13681, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !13688
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !13688
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !13679
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13689
  br i1 %4, label %6, label %5, !dbg !13692

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !13693
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13693
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !13693
  unreachable, !dbg !13693

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !13688
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !13679
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !13669, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i32 undef, metadata !13663, metadata !DIExpression()), !dbg !13671
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13696
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !13699
  %8 = icmp sgt i32 %0, 0, !dbg !13700
  %9 = icmp sgt i32 %7, 2, !dbg !13702
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13702
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13702
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13703
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13704
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13705
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !13712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !13712
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13714
  br i1 %12, label %14, label %13, !dbg !13717

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !13718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !13718
  unreachable, !dbg !13718

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13681
  call void @llvm.dbg.value(metadata i32 %15, metadata !13684, metadata !DIExpression()) #23, !dbg !13688
  call void @llvm.dbg.value(metadata i32 %15, metadata !13678, metadata !DIExpression()) #23, !dbg !13679
  call void @llvm.dbg.value(metadata i32 %15, metadata !13669, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !13712
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !13723
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13725, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !13663, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i32 undef, metadata !13663, metadata !DIExpression()), !dbg !13671
  ret void, !dbg !13727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !13728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13730, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata i32 %0, metadata !13732, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13747
  call void @llvm.dbg.value(metadata i32 1000, metadata !13735, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 10000, metadata !13736, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8 1, metadata !13737, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i1 true, metadata !13738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13747
  call void @llvm.dbg.value(metadata i1 true, metadata !13739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13747
  call void @llvm.dbg.value(metadata i8 0, metadata !13740, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i1 true, metadata !13741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13747
  call void @llvm.dbg.value(metadata i1 false, metadata !13742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13747
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !13747
  %2 = mul i32 %0, 10, !dbg !13749
  ret i32 %2, !dbg !13755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13758, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !13761
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13763, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !13761
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13766
  br i1 %3, label %5, label %4, !dbg !13767

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !13768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !13768
  unreachable, !dbg !13768

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13763
  call void @llvm.dbg.value(metadata i32 %6, metadata !13684, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata i32 %6, metadata !13678, metadata !DIExpression()) #23, !dbg !13761
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %6, metadata !13759, metadata !DIExpression()), !dbg !13760
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13770
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13772
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13773
  br i1 %9, label %10, label %14, !dbg !13774

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13775
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !13777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !13777
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13779
  br i1 %11, label %13, label %12, !dbg !13780

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !13781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !13781
  unreachable, !dbg !13781

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13706, metadata !DIExpression()) #23, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %6, metadata !13720, metadata !DIExpression()) #23, !dbg !13782
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13784, !srcloc !13726
  br label %33, !dbg !13785

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13786
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !13787
  %16 = icmp eq i32 %15, 0, !dbg !13787
  br i1 %16, label %27, label %17, !dbg !13789

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !13790
  br i1 %18, label %19, label %27, !dbg !13791

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13792
  %21 = icmp sgt i32 %20, %0, !dbg !13795
  br i1 %21, label %25, label %22, !dbg !13796

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13797
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %24, metadata !13759, metadata !DIExpression()), !dbg !13760
  br label %28, !dbg !13799

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13800
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13800
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13802
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13760
  call void @llvm.dbg.value(metadata i32 %29, metadata !13759, metadata !DIExpression()), !dbg !13760
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !13804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !13804
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13806
  br i1 %30, label %32, label %31, !dbg !13807

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !13808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !13808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !13808
  unreachable, !dbg !13808

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13706, metadata !DIExpression()) #23, !dbg !13804
  call void @llvm.dbg.value(metadata i32 %29, metadata !13720, metadata !DIExpression()) #23, !dbg !13809
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13811, !srcloc !13726
  br label %33, !dbg !13812

33:                                               ; preds = %32, %13
  ret void, !dbg !13812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !13813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13817, metadata !DIExpression()), !dbg !13819
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !13820
  %3 = icmp eq i32 %2, 0, !dbg !13820
  br i1 %3, label %16, label %4, !dbg !13821

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !13822
  br i1 %5, label %16, label %6, !dbg !13823

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13824
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13824
  %9 = load i8, i8* %8, align 2, !dbg !13824
  %10 = sext i8 %9 to i32, !dbg !13825
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13826
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.257(i32 noundef %10, i32 noundef %11) #24, !dbg !13827
  br i1 %12, label %16, label %13, !dbg !13828

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !13829
  %15 = xor i1 %14, true, !dbg !13830
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13819
  call void @llvm.dbg.value(metadata i1 %17, metadata !13818, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13819
  ret i1 %17, !dbg !13831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13832 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13836, metadata !DIExpression()), !dbg !13838
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13839
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13837, metadata !DIExpression()), !dbg !13838
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !13840
  br i1 %3, label %5, label %4, !dbg !13842

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !13843
  br label %5, !dbg !13845

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13836, metadata !DIExpression()), !dbg !13838
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !13846
  ret i32 %6, !dbg !13847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13848 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13850, metadata !DIExpression()), !dbg !13852
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13853
  %3 = load i8, i8* %2, align 1, !dbg !13853
  call void @llvm.dbg.value(metadata i8 %3, metadata !13851, metadata !DIExpression()), !dbg !13852
  %4 = and i8 %3, 31, !dbg !13854
  %5 = icmp ne i8 %4, 0, !dbg !13855
  ret i1 %5, !dbg !13856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13859, metadata !DIExpression()), !dbg !13860
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13861
  br i1 %2, label %3, label %7, !dbg !13863

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13864, metadata !DIExpression()) #23, !dbg !13867
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13870
  %5 = load i8, i8* %4, align 1, !dbg !13871
  %6 = and i8 %5, 127, !dbg !13871
  store i8 %6, i8* %4, align 1, !dbg !13871
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()) #23, !dbg !13875
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !13879
  br label %7, !dbg !13880

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()) #23, !dbg !13884
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13886
  %9 = load i8, i8* %8, align 1, !dbg !13887
  %10 = or i8 %9, -128, !dbg !13887
  store i8 %10, i8* %8, align 1, !dbg !13887
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #23, !dbg !13891
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !13895
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13896
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13897
  %13 = zext i1 %12 to i32, !dbg !13897
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !13898
  ret void, !dbg !13899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13900 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13902, metadata !DIExpression()), !dbg !13903
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !13904
  ret i1 %2, !dbg !13905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13906 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13924, metadata !DIExpression()), !dbg !13926
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13925, metadata !DIExpression()), !dbg !13926
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13927
  br i1 %3, label %4, label %5, !dbg !13930

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1200) #26, !dbg !13931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1200) #26, !dbg !13931
  unreachable, !dbg !13931

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13933
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13934
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !13935
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13936
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !13936
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !13938
  br i1 %10, label %11, label %13, !dbg !13939

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13940
  store i32 0, i32* %12, align 4, !dbg !13942
  br label %13, !dbg !13943

13:                                               ; preds = %11, %5
  ret void, !dbg !13944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13945 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13947, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13948, metadata !DIExpression()), !dbg !13962
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !13963
  br i1 %4, label %5, label %6, !dbg !13966

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1179) #26, !dbg !13967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1179) #26, !dbg !13967
  unreachable, !dbg !13967

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13969
  %8 = load i32, i32* %7, align 4, !dbg !13970
  %9 = add nsw i32 %8, 1, !dbg !13970
  store i32 %9, i32* %7, align 4, !dbg !13970
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13971
  store i32 %8, i32* %10, align 8, !dbg !13972
  %11 = load i32, i32* %7, align 4, !dbg !13973
  %12 = icmp eq i32 %11, 0, !dbg !13974
  br i1 %12, label %13, label %35, !dbg !13975

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13976
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13976
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13950, metadata !DIExpression()), !dbg !13976
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13976
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13976
  %17 = load i32, i32* %16, align 4, !dbg !13976
  %18 = shl i32 %17, 2, !dbg !13976
  %19 = alloca i8, i32 %18, align 8, !dbg !13976
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13976
  store i8* %19, i8** %20, align 4, !dbg !13976
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13976
  %22 = alloca i8, i32 %17, align 8, !dbg !13976
  store i8* %22, i8** %21, align 4, !dbg !13976
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13976
  store i32 -1, i32* %23, align 4, !dbg !13976
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !13977
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13959, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13949, metadata !DIExpression()), !dbg !13962
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !13979
  br i1 %25, label %26, label %27, !dbg !13976

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !13979
  br label %35, !dbg !13980

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !13949, metadata !DIExpression()), !dbg !13962
  %29 = load i32, i32* %7, align 4, !dbg !13981
  %30 = add nsw i32 %29, 1, !dbg !13981
  store i32 %30, i32* %7, align 4, !dbg !13981
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !13983
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !13983
  store i32 %29, i32* %32, align 8, !dbg !13984
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !13977
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13959, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13949, metadata !DIExpression()), !dbg !13962
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !13979
  br i1 %34, label %26, label %27, !dbg !13976, !llvm.loop !13985

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13987
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13988
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !13989
  ret void, !dbg !13990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13993, metadata !DIExpression()), !dbg !13995
  %2 = tail call %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !13996
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14003, metadata !DIExpression()) #23, !dbg !14005
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14006
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14007
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14007
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13994, metadata !DIExpression()), !dbg !13995
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14008, metadata !DIExpression()) #23, !dbg !14014
  call void @llvm.dbg.value(metadata i32 %0, metadata !14013, metadata !DIExpression()) #23, !dbg !14014
  %6 = icmp eq i32 %0, 0, !dbg !14017
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14019
  br i1 %6, label %8, label %18, !dbg !14020

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14021
  br i1 %9, label %10, label %11, !dbg !14024

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 137) #26, !dbg !14025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !14025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 137) #26, !dbg !14025
  unreachable, !dbg !14025

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !14027
  br i1 %12, label %18, label %13, !dbg !14029

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14030
  br i1 %14, label %18, label %15, !dbg !14032

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !14033
  %17 = icmp eq i32 %16, 0, !dbg !14033
  br i1 %17, label %21, label %18, !dbg !14035

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14036
  br i1 %19, label %21, label %20, !dbg !14039

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14040
  br label %21, !dbg !14042

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14019
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14019
  ret void, !dbg !14043
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14044 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14048, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14049, metadata !DIExpression()), !dbg !14051
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14052
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !14053
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14050, metadata !DIExpression()), !dbg !14051
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14049, metadata !DIExpression()), !dbg !14051
  ret %struct.k_thread* %4, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14059
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14060
  %4 = xor i1 %3, true, !dbg !14061
  ret i1 %4, !dbg !14062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14065, metadata !DIExpression()), !dbg !14066
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14067
  %3 = load i16, i16* %2, align 2, !dbg !14067
  %4 = icmp ult i16 %3, 128, !dbg !14068
  %5 = zext i1 %4 to i32, !dbg !14068
  ret i32 %5, !dbg !14069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14070 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14076, metadata !DIExpression()), !dbg !14077
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14078
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14079
  %4 = xor i1 %3, true, !dbg !14080
  ret i1 %4, !dbg !14081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14082 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14088, metadata !DIExpression()), !dbg !14089
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14090
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14090
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14091
  ret i1 %4, !dbg !14092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14093 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14098, metadata !DIExpression()), !dbg !14099
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !14100
  ret %struct.rbnode* %2, !dbg !14101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14102 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14104, metadata !DIExpression()), !dbg !14105
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14106
  ret i1 %2, !dbg !14107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14112, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata i32 %1, metadata !14113, metadata !DIExpression()), !dbg !14114
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14115
  %4 = load i8, i8* %3, align 1, !dbg !14115
  %5 = zext i8 %4 to i32, !dbg !14116
  %6 = and i32 %5, %1, !dbg !14117
  %7 = icmp ne i32 %6, 0, !dbg !14118
  ret i1 %7, !dbg !14119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.257(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14122, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 %1, metadata !14123, metadata !DIExpression()), !dbg !14124
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.258(i32 noundef %0, i32 noundef %1) #24, !dbg !14125
  ret i1 %3, !dbg !14126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.258(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14129, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.value(metadata i32 %1, metadata !14130, metadata !DIExpression()), !dbg !14131
  %3 = icmp slt i32 %0, %1, !dbg !14132
  ret i1 %3, !dbg !14133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14136, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.value(metadata i32 0, metadata !14137, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14142
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14144, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14142
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14147
  br i1 %3, label %5, label %4, !dbg !14148

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14149
  unreachable, !dbg !14149

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14142
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14150
  call void @llvm.dbg.value(metadata i32 undef, metadata !14139, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 undef, metadata !14137, metadata !DIExpression()), !dbg !14141
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14151
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14156
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14158
  br i1 %6, label %8, label %7, !dbg !14159

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14160
  unreachable, !dbg !14160

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14144
  call void @llvm.dbg.value(metadata i32 %9, metadata !13684, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 %9, metadata !13678, metadata !DIExpression()) #23, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %9, metadata !14139, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14156
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14163, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14137, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 undef, metadata !14137, metadata !DIExpression()), !dbg !14141
  ret void, !dbg !14164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14167, metadata !DIExpression()), !dbg !14168
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14169
  br i1 %2, label %9, label %3, !dbg !14171

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14172
  br i1 %4, label %5, label %9, !dbg !14173

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()) #23, !dbg !14174
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14177
  %7 = load i8, i8* %6, align 1, !dbg !14178
  %8 = or i8 %7, -128, !dbg !14178
  store i8 %8, i8* %6, align 1, !dbg !14178
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #23, !dbg !14179
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14181
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14182
  br label %9, !dbg !14183

9:                                                ; preds = %5, %3, %1
  ret void, !dbg !14184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14185 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14187, metadata !DIExpression()), !dbg !14188
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14189
  br i1 %2, label %6, label %3, !dbg !14190

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14191
  %5 = xor i1 %4, true, !dbg !14190
  br label %6, !dbg !14190

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14195, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.value(metadata i32 0, metadata !14196, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14201
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14203, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14201
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14206
  br i1 %3, label %5, label %4, !dbg !14207

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14208
  unreachable, !dbg !14208

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14201
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14209
  call void @llvm.dbg.value(metadata i32 undef, metadata !14198, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()), !dbg !14200
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14210
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14213
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14215
  br i1 %6, label %8, label %7, !dbg !14216

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14217
  unreachable, !dbg !14217

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14203
  call void @llvm.dbg.value(metadata i32 %9, metadata !13684, metadata !DIExpression()) #23, !dbg !14205
  call void @llvm.dbg.value(metadata i32 %9, metadata !13678, metadata !DIExpression()) #23, !dbg !14201
  call void @llvm.dbg.value(metadata i32 %9, metadata !14198, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14218
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14220, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14196, metadata !DIExpression()), !dbg !14200
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()), !dbg !14200
  ret void, !dbg !14221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14224, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14227
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14229, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14227
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14232
  br i1 %3, label %5, label %4, !dbg !14233

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14234
  unreachable, !dbg !14234

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14229
  call void @llvm.dbg.value(metadata i32 %6, metadata !13684, metadata !DIExpression()) #23, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %6, metadata !13678, metadata !DIExpression()) #23, !dbg !14227
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14235
  call void @llvm.dbg.value(metadata i32 %6, metadata !14225, metadata !DIExpression()), !dbg !14226
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14236
  br i1 %7, label %8, label %12, !dbg !14238

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14239
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14242
  br i1 %9, label %11, label %10, !dbg !14243

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14244
  unreachable, !dbg !14244

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13706, metadata !DIExpression()) #23, !dbg !14239
  call void @llvm.dbg.value(metadata i32 %6, metadata !13720, metadata !DIExpression()) #23, !dbg !14245
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14247, !srcloc !13726
  br label %14, !dbg !14248

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.263(%struct.k_thread* noundef %0) #24, !dbg !14249
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14250
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14251
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14251
  br label %14, !dbg !14252

14:                                               ; preds = %12, %11
  ret void, !dbg !14252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14253 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14255, metadata !DIExpression()), !dbg !14256
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14257
  %3 = load i8, i8* %2, align 1, !dbg !14257
  %4 = and i8 %3, 4, !dbg !14258
  %5 = icmp eq i8 %4, 0, !dbg !14259
  ret i1 %5, !dbg !14260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.263(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14263, metadata !DIExpression()), !dbg !14264
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14265
  %3 = load i8, i8* %2, align 1, !dbg !14266
  %4 = and i8 %3, -5, !dbg !14266
  store i8 %4, i8* %2, align 1, !dbg !14266
  ret void, !dbg !14267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14268 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14271, metadata !DIExpression()), !dbg !14272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14270, metadata !DIExpression()), !dbg !14272
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14273
  br i1 %4, label %5, label %12, !dbg !14275

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14276
  br i1 %6, label %7, label %12, !dbg !14277

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !14284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14283, metadata !DIExpression()) #23, !dbg !14284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14287, metadata !DIExpression()) #23, !dbg !14292
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14294
  br i1 %8, label %10, label %9, !dbg !14297

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !14298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !14298
  unreachable, !dbg !14298

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14278, metadata !DIExpression()) #23, !dbg !14284
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14300
  br label %16, !dbg !14301

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13711, metadata !DIExpression()) #23, !dbg !14302
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14305
  br i1 %13, label %15, label %14, !dbg !14306

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14307
  unreachable, !dbg !14307

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13706, metadata !DIExpression()) #23, !dbg !14302
  call void @llvm.dbg.value(metadata i32 %3, metadata !13720, metadata !DIExpression()) #23, !dbg !14308
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14310, !srcloc !13726
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 %0, metadata !14318, metadata !DIExpression()), !dbg !14323
  %2 = icmp eq i32 %0, 0, !dbg !14325
  br i1 %2, label %3, label %6, !dbg !14326

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14327, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %4, metadata !14330, metadata !DIExpression()) #23, !dbg !14335
  %5 = icmp eq i32 %4, 0, !dbg !14336
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14317
  ret i1 %7, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14338 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14341
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14340, metadata !DIExpression()), !dbg !14342
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14343
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14344
  ret i1 %3, !dbg !14345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14348, metadata !DIExpression()), !dbg !14350
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14351
  call void @llvm.dbg.value(metadata i32 %2, metadata !14349, metadata !DIExpression()), !dbg !14350
  ret i32 %2, !dbg !14352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14355, metadata !DIExpression()), !dbg !14359
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14360
  call void @llvm.dbg.value(metadata i32 0, metadata !14356, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14362
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14364, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14366
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14366
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14362
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14367
  br i1 %4, label %6, label %5, !dbg !14368

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14369
  unreachable, !dbg !14369

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %7, metadata !13684, metadata !DIExpression()) #23, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %7, metadata !13678, metadata !DIExpression()) #23, !dbg !14362
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %7, metadata !14358, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14356, metadata !DIExpression()), !dbg !14361
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14371
  br i1 %8, label %9, label %13, !dbg !14375

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13864, metadata !DIExpression()) #23, !dbg !14376
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14379
  %11 = load i8, i8* %10, align 1, !dbg !14380
  %12 = and i8 %11, 127, !dbg !14380
  store i8 %12, i8* %10, align 1, !dbg !14380
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()) #23, !dbg !14381
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14383
  br label %13, !dbg !14384

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14385
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14386
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14387
  %16 = zext i1 %15 to i32, !dbg !14387
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14388
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14389
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14391
  br i1 %17, label %19, label %18, !dbg !14392

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14393
  unreachable, !dbg !14393

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13706, metadata !DIExpression()) #23, !dbg !14389
  call void @llvm.dbg.value(metadata i32 %7, metadata !13720, metadata !DIExpression()) #23, !dbg !14394
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14396, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14356, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14356, metadata !DIExpression()), !dbg !14361
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14397
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14399
  br i1 %21, label %22, label %23, !dbg !14400

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14401
  br label %23, !dbg !14403

23:                                               ; preds = %22, %19
  ret void, !dbg !14404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14407, metadata !DIExpression()), !dbg !14408
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14409
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14410
  ret i32 %3, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14414, metadata !DIExpression()), !dbg !14415
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14416
  %3 = load i8, i8* %2, align 1, !dbg !14417
  %4 = or i8 %3, 16, !dbg !14417
  store i8 %4, i8* %2, align 1, !dbg !14417
  ret void, !dbg !14418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14419 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14420, !srcloc !13687
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14420
  call void @llvm.dbg.value(metadata i32 %2, metadata !13684, metadata !DIExpression()) #23, !dbg !14422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14422
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14423
  ret void, !dbg !14424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14427, metadata !DIExpression()), !dbg !14428
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14429
  br i1 %2, label %3, label %5, !dbg !14431

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14432
  br label %6, !dbg !14434

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13720, metadata !DIExpression()) #23, !dbg !14435
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14438, !srcloc !13726
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14442, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14445
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14447, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14445
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14450
  br i1 %3, label %5, label %4, !dbg !14451

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14452
  unreachable, !dbg !14452

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14447
  call void @llvm.dbg.value(metadata i32 %6, metadata !13684, metadata !DIExpression()) #23, !dbg !14449
  call void @llvm.dbg.value(metadata i32 %6, metadata !13678, metadata !DIExpression()) #23, !dbg !14445
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14453
  call void @llvm.dbg.value(metadata i32 %6, metadata !14443, metadata !DIExpression()), !dbg !14444
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14454
  br i1 %7, label %12, label %8, !dbg !14456

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14457
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14460
  br i1 %9, label %11, label %10, !dbg !14461

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14462
  unreachable, !dbg !14462

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13706, metadata !DIExpression()) #23, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %6, metadata !13720, metadata !DIExpression()) #23, !dbg !14463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14465, !srcloc !13726
  br label %14, !dbg !14466

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14467
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14468
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14469
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14469
  br label %14, !dbg !14470

14:                                               ; preds = %12, %11
  ret void, !dbg !14470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14473, metadata !DIExpression()), !dbg !14474
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14475
  %3 = load i8, i8* %2, align 1, !dbg !14475
  %4 = and i8 %3, 16, !dbg !14476
  %5 = icmp ne i8 %4, 0, !dbg !14477
  ret i1 %5, !dbg !14478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14481, metadata !DIExpression()), !dbg !14482
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14483
  %3 = load i8, i8* %2, align 1, !dbg !14484
  %4 = and i8 %3, -17, !dbg !14484
  store i8 %4, i8* %2, align 1, !dbg !14484
  ret void, !dbg !14485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14486 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14496, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14494, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14495, metadata !DIExpression()), !dbg !14500
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14501
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14501
  br i1 %5, label %9, label %6, !dbg !14501

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14501
  br i1 %7, label %9, label %8, !dbg !14504

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 773) #26, !dbg !14505
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 773) #26, !dbg !14505
  unreachable, !dbg !14505

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14497, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14508
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14510, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14508
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14513
  br i1 %11, label %13, label %12, !dbg !14514

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14515
  unreachable, !dbg !14515

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14508
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14516
  call void @llvm.dbg.value(metadata i32 undef, metadata !14499, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !14497, metadata !DIExpression()), !dbg !14507
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14517
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14520
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14522
  br i1 %14, label %16, label %15, !dbg !14523

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14524
  unreachable, !dbg !14524

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14510
  call void @llvm.dbg.value(metadata i32 %17, metadata !13684, metadata !DIExpression()) #23, !dbg !14512
  call void @llvm.dbg.value(metadata i32 %17, metadata !13678, metadata !DIExpression()) #23, !dbg !14508
  call void @llvm.dbg.value(metadata i32 %17, metadata !14499, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14527, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14497, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata i32 undef, metadata !14497, metadata !DIExpression()), !dbg !14507
  ret void, !dbg !14528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()), !dbg !14532
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14533
  %3 = load i8, i8* %2, align 1, !dbg !14533
  %4 = and i8 %3, 1, !dbg !14534
  %5 = icmp ne i8 %4, 0, !dbg !14535
  ret i1 %5, !dbg !14536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14537 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14541, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14540, metadata !DIExpression()), !dbg !14542
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14543
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14544
  ret void, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14552
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14551, metadata !DIExpression()), !dbg !14552
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14553
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14554
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14555
  br i1 %3, label %24, label %4, !dbg !14557

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14558
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14560
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14561
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14562, metadata !DIExpression()) #23, !dbg !14570
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()) #23, !dbg !14570
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !14572
  br i1 %7, label %8, label %9, !dbg !14575

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #26, !dbg !14576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 186) #26, !dbg !14576
  unreachable, !dbg !14576

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef nonnull %6) #26, !dbg !14578
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14569, metadata !DIExpression()) #23, !dbg !14570
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14580
  br i1 %11, label %22, label %12, !dbg !14578

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14569, metadata !DIExpression()) #23, !dbg !14570
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14582
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14569, metadata !DIExpression()) #23, !dbg !14570
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !14583
  %16 = icmp sgt i32 %15, 0, !dbg !14586
  br i1 %16, label %17, label %19, !dbg !14587

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14588
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !14590
  br label %24, !dbg !14591

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !14580
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14569, metadata !DIExpression()) #23, !dbg !14570
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14580
  br i1 %21, label %22, label %12, !dbg !14578, !llvm.loop !14592

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14594
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !14595
  br label %24, !dbg !14596

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14598 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14603, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14602, metadata !DIExpression()), !dbg !14604
  %4 = icmp eq i64 %3, -1, !dbg !14605
  br i1 %4, label %6, label %5, !dbg !14607

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.267(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14608
  br label %6, !dbg !14610

6:                                                ; preds = %5, %2
  ret void, !dbg !14611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.267(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14612 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14615, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14614, metadata !DIExpression()), !dbg !14616
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14617
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !14618
  ret void, !dbg !14619
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14622, metadata !DIExpression()), !dbg !14630
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14631
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14631
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14623, metadata !DIExpression()), !dbg !14630
  call void @llvm.dbg.value(metadata i32 0, metadata !14624, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14633
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14635, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14633
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14638
  br i1 %5, label %7, label %6, !dbg !14639

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14640
  unreachable, !dbg !14640

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14633
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14641
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()), !dbg !14632
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14642
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14643
  %10 = load i8, i8* %9, align 1, !dbg !14643
  %11 = and i8 %10, 40, !dbg !14644
  %12 = icmp eq i8 %11, 0, !dbg !14644
  call void @llvm.dbg.value(metadata i1 %12, metadata !14627, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14645
  br i1 %12, label %13, label %20, !dbg !14646

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14647
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !14647
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !14647
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !14651
  br i1 %17, label %19, label %18, !dbg !14652

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !14653
  br label %19, !dbg !14655

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.263(%struct.k_thread* noundef nonnull %3) #24, !dbg !14656
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !14657
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !14658
  br label %20, !dbg !14659

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14660
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14662
  br i1 %21, label %23, label %22, !dbg !14663

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14664
  unreachable, !dbg !14664

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14635
  call void @llvm.dbg.value(metadata i32 %24, metadata !13684, metadata !DIExpression()) #23, !dbg !14637
  call void @llvm.dbg.value(metadata i32 %24, metadata !13678, metadata !DIExpression()) #23, !dbg !14633
  call void @llvm.dbg.value(metadata i32 %24, metadata !14626, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14667, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14624, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i32 undef, metadata !14624, metadata !DIExpression()), !dbg !14632
  ret void, !dbg !14668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14671, metadata !DIExpression()), !dbg !14672
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !14673
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14674
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !14675
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14676
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !14677
  ret void, !dbg !14678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14683, metadata !DIExpression()), !dbg !14684
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14685
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !14685
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !14685
  br i1 %4, label %5, label %6, !dbg !14688

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 726) #26, !dbg !14689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 726) #26, !dbg !14689
  unreachable, !dbg !14689

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !14691
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14692 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14694, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14695, metadata !DIExpression()), !dbg !14696
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14697
  br i1 %3, label %4, label %5, !dbg !14700

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1139) #26, !dbg !14701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1139) #26, !dbg !14701
  unreachable, !dbg !14701

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14703
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14704
  ret void, !dbg !14705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14708, metadata !DIExpression()), !dbg !14709
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14710
  %3 = load i8, i8* %2, align 1, !dbg !14711
  %4 = and i8 %3, -3, !dbg !14711
  store i8 %4, i8* %2, align 1, !dbg !14711
  ret void, !dbg !14712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !14713 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14718, metadata !DIExpression()), !dbg !14722
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14723
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14723
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14719, metadata !DIExpression()), !dbg !14722
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14724
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14724
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14721, metadata !DIExpression()), !dbg !14722
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14725
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14726
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14727
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14728
  tail call fastcc void @sys_dnode_init.270(%struct._dnode* noundef %0) #24, !dbg !14729
  ret void, !dbg !14730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.270(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14731 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14733, metadata !DIExpression()), !dbg !14734
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14735
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14736
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14737
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14738
  ret void, !dbg !14739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14742, metadata !DIExpression()), !dbg !14743
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14744
  br i1 %2, label %3, label %7, !dbg !14746

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13864, metadata !DIExpression()) #23, !dbg !14747
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14750
  %5 = load i8, i8* %4, align 1, !dbg !14751
  %6 = and i8 %5, 127, !dbg !14751
  store i8 %6, i8* %4, align 1, !dbg !14751
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()) #23, !dbg !14752
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14754
  br label %7, !dbg !14755

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14756
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14757
  %10 = zext i1 %9 to i32, !dbg !14757
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !14758
  ret void, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14762, metadata !DIExpression()), !dbg !14763
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14764
  %3 = load i8, i8* %2, align 1, !dbg !14765
  %4 = or i8 %3, 2, !dbg !14765
  store i8 %4, i8* %2, align 1, !dbg !14765
  ret void, !dbg !14766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14767 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14771, metadata !DIExpression()), !dbg !14772
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.273(%struct._dnode* noundef %0) #24, !dbg !14773
  br i1 %2, label %6, label %3, !dbg !14773

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14774
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14774
  br label %6, !dbg !14773

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14773
  ret %struct._dnode* %7, !dbg !14775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14776 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14780, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14781, metadata !DIExpression()), !dbg !14783
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14784
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14784
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14782, metadata !DIExpression()), !dbg !14783
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14785
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14786
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14787
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14788
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14789
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14790
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14791
  ret void, !dbg !14792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14793 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14797, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14798, metadata !DIExpression()), !dbg !14799
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14800
  br i1 %3, label %6, label %4, !dbg !14801

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14802
  br label %6, !dbg !14801

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14801
  ret %struct._dnode* %7, !dbg !14803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !14804 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14808, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14809, metadata !DIExpression()), !dbg !14811
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14812
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14812
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14810, metadata !DIExpression()), !dbg !14811
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14813
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14814
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14815
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14816
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14817
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14818
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14819
  ret void, !dbg !14820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14821 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14823, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14824, metadata !DIExpression()), !dbg !14825
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14826
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14826
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14827
  br i1 %5, label %9, label %6, !dbg !14828

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14829
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14829
  br label %9, !dbg !14828

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14828
  ret %struct._dnode* %10, !dbg !14830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.273(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14831 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14835, metadata !DIExpression()), !dbg !14836
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14837
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14837
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14838
  ret i1 %4, !dbg !14839
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14842, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 0, metadata !14843, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14848
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14850, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14848
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14853
  br i1 %3, label %5, label %4, !dbg !14854

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14855
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14855
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14855
  unreachable, !dbg !14855

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14852
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14848
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14845, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14843, metadata !DIExpression()), !dbg !14847
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !14857
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14860
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14862
  br i1 %6, label %8, label %7, !dbg !14863

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14864
  unreachable, !dbg !14864

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14850
  call void @llvm.dbg.value(metadata i32 %9, metadata !13684, metadata !DIExpression()) #23, !dbg !14852
  call void @llvm.dbg.value(metadata i32 %9, metadata !13678, metadata !DIExpression()) #23, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %9, metadata !14845, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14867, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14843, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i32 undef, metadata !14843, metadata !DIExpression()), !dbg !14847
  ret void, !dbg !14868
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14869 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14875, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata i32 %0, metadata !14873, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14874, metadata !DIExpression()), !dbg !14880
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14881
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14882
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14883
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14884
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14885
  call void @llvm.dbg.value(metadata i32 %6, metadata !14876, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata i32 0, metadata !14877, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14887
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14889, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14887
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14892
  br i1 %8, label %10, label %9, !dbg !14893

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14894
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14894
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14894
  unreachable, !dbg !14894

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14887
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14895
  call void @llvm.dbg.value(metadata i32 undef, metadata !14879, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()), !dbg !14886
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14896
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14900
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !14901
  br i1 %13, label %14, label %15, !dbg !14902

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14903
  br label %15, !dbg !14905

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14906
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14908
  br i1 %16, label %18, label %17, !dbg !14909

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14910
  unreachable, !dbg !14910

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !14889
  call void @llvm.dbg.value(metadata i32 %19, metadata !13684, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %19, metadata !13678, metadata !DIExpression()) #23, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %19, metadata !14879, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14906
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14911
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !14913, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14877, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 undef, metadata !14877, metadata !DIExpression()), !dbg !14886
  ret i32 %6, !dbg !14914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14915 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata i64 undef, metadata !14922, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14919, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14921, metadata !DIExpression()), !dbg !14923
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14924
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14925
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !14926
  br i1 %6, label %7, label %8, !dbg !14929

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 846) #26, !dbg !14930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 846) #26, !dbg !14930
  unreachable, !dbg !14930

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14932
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14934, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14936
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14936
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14932
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14937
  br i1 %10, label %12, label %11, !dbg !14938

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14939
  unreachable, !dbg !14939

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14936
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14932
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14940
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14941
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !14942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14287, metadata !DIExpression()) #23, !dbg !14943
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14945
  br i1 %14, label %16, label %15, !dbg !14946

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !14947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !14947
  unreachable, !dbg !14947

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14283, metadata !DIExpression()) #23, !dbg !14948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14287, metadata !DIExpression()) #23, !dbg !14950
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14952
  br i1 %17, label %19, label %18, !dbg !14953

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !14954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !14954
  unreachable, !dbg !14954

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14278, metadata !DIExpression()) #23, !dbg !14948
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !14955
  ret i32 %21, !dbg !14956
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14957 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14961, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14962, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata i32 0, metadata !14963, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !14968
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14970, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14968
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14973
  br i1 %3, label %5, label %4, !dbg !14974

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !14975
  unreachable, !dbg !14975

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !14968
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14976
  call void @llvm.dbg.value(metadata i32 undef, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14962, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14963, metadata !DIExpression()), !dbg !14967
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14962, metadata !DIExpression()), !dbg !14966
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14980
  br i1 %8, label %10, label %9, !dbg !14982

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !14983
  br label %10, !dbg !14985

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !14986
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14988
  br i1 %11, label %13, label %12, !dbg !14989

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14990
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14990
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !14990
  unreachable, !dbg !14990

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14970
  call void @llvm.dbg.value(metadata i32 %14, metadata !13684, metadata !DIExpression()) #23, !dbg !14972
  call void @llvm.dbg.value(metadata i32 %14, metadata !13678, metadata !DIExpression()) #23, !dbg !14968
  call void @llvm.dbg.value(metadata i32 %14, metadata !14965, metadata !DIExpression()), !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !14986
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !14991
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14993, !srcloc !13726
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14962, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14963, metadata !DIExpression()), !dbg !14967
  ret %struct.k_thread* %7, !dbg !14994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14995 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14999, metadata !DIExpression()), !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15000, metadata !DIExpression()), !dbg !15002
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef %0) #24, !dbg !15003
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15001, metadata !DIExpression()), !dbg !15002
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15000, metadata !DIExpression()), !dbg !15002
  ret %struct.k_thread* %3, !dbg !15004
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15005 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15007, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15008, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i32 0, metadata !15009, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15014
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15016, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15014
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15019
  br i1 %3, label %5, label %4, !dbg !15020

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15021
  unreachable, !dbg !15021

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15014
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15011, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15008, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15009, metadata !DIExpression()), !dbg !15013
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15023
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15008, metadata !DIExpression()), !dbg !15012
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15026
  br i1 %8, label %11, label %9, !dbg !15028

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15029
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15031
  br label %11, !dbg !15032

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15033
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15035
  br i1 %12, label %14, label %13, !dbg !15036

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15037
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15037
  unreachable, !dbg !15037

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15016
  call void @llvm.dbg.value(metadata i32 %15, metadata !13684, metadata !DIExpression()) #23, !dbg !15018
  call void @llvm.dbg.value(metadata i32 %15, metadata !13678, metadata !DIExpression()) #23, !dbg !15014
  call void @llvm.dbg.value(metadata i32 %15, metadata !15011, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15033
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !15038
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15040, !srcloc !13726
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15008, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15009, metadata !DIExpression()), !dbg !15013
  ret %struct.k_thread* %7, !dbg !15041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14842, metadata !DIExpression()) #23, !dbg !15046
  call void @llvm.dbg.value(metadata i32 0, metadata !14843, metadata !DIExpression()) #23, !dbg !15048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15049
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15051, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15049
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15054
  br i1 %3, label %5, label %4, !dbg !15055

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15056
  unreachable, !dbg !15056

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15049
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15057
  call void @llvm.dbg.value(metadata i32 undef, metadata !14845, metadata !DIExpression()) #23, !dbg !15048
  call void @llvm.dbg.value(metadata i32 undef, metadata !14843, metadata !DIExpression()) #23, !dbg !15048
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15058
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15059
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15061
  br i1 %6, label %8, label %7, !dbg !15062

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15063
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15063
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15063
  unreachable, !dbg !15063

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15051
  call void @llvm.dbg.value(metadata i32 %9, metadata !13684, metadata !DIExpression()) #23, !dbg !15053
  call void @llvm.dbg.value(metadata i32 %9, metadata !13678, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 %9, metadata !14845, metadata !DIExpression()) #23, !dbg !15048
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !15064
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15066, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !14843, metadata !DIExpression()) #23, !dbg !15048
  call void @llvm.dbg.value(metadata i32 undef, metadata !14843, metadata !DIExpression()) #23, !dbg !15048
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15067
  ret void, !dbg !15068
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 %1, metadata !15072, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i8 0, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 0, metadata !15074, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15079
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15081, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15079
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15084
  br i1 %4, label %6, label %5, !dbg !15085

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15086
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15086
  unreachable, !dbg !15086

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15079
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !15076, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata i8 poison, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !15074, metadata !DIExpression()), !dbg !15078
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15088
  call void @llvm.dbg.value(metadata i1 %8, metadata !15073, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15077
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %10 = bitcast %union.anon.2* %9 to i8*
  %11 = trunc i32 %1 to i8
  br i1 %8, label %12, label %17, !dbg !15091

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13864, metadata !DIExpression()) #23, !dbg !15092
  %13 = load i8, i8* %7, align 1, !dbg !15098
  %14 = and i8 %13, 127, !dbg !15098
  store i8 %14, i8* %7, align 1, !dbg !15098
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()) #23, !dbg !15099
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !15101
  store i8 %11, i8* %10, align 2, !dbg !15102
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()) #23, !dbg !15103
  %15 = load i8, i8* %7, align 1, !dbg !15105
  %16 = or i8 %15, -128, !dbg !15105
  store i8 %16, i8* %7, align 1, !dbg !15105
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13888, metadata !DIExpression()) #23, !dbg !15106
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !15108
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15109
  br label %18, !dbg !15110

17:                                               ; preds = %6
  store i8 %11, i8* %10, align 2, !dbg !15111
  br label %18

18:                                               ; preds = %12, %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15113
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15115
  br i1 %19, label %21, label %20, !dbg !15116

20:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15117
  unreachable, !dbg !15117

21:                                               ; preds = %18
  %22 = extractvalue { i32, i32 } %3, 0, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %22, metadata !13684, metadata !DIExpression()) #23, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %22, metadata !13678, metadata !DIExpression()) #23, !dbg !15079
  call void @llvm.dbg.value(metadata i32 %22, metadata !15076, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15113
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !15118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !15120, !srcloc !13726
  call void @llvm.dbg.value(metadata i8 poison, metadata !15073, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !15074, metadata !DIExpression()), !dbg !15078
  ret i1 %8, !dbg !15121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15126, metadata !DIExpression()), !dbg !15129
  call void @llvm.dbg.value(metadata i32 %1, metadata !15127, metadata !DIExpression()), !dbg !15129
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15130
  call void @llvm.dbg.value(metadata i1 %3, metadata !15128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15129
  br i1 %3, label %4, label %12, !dbg !15131

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15133
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15134
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15134
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15134
  %9 = load i8, i8* %8, align 1, !dbg !15134
  %10 = icmp eq i8 %9, 0, !dbg !15135
  br i1 %10, label %11, label %12, !dbg !15136

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15137
  br label %12, !dbg !15139

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15140
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15141 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15143, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15147
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15149, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15147
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15152
  br i1 %2, label %4, label %3, !dbg !15153

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15154
  unreachable, !dbg !15154

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15147
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()), !dbg !15146
  tail call fastcc void @z_sched_lock() #24, !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15159
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15161
  br i1 %5, label %7, label %6, !dbg !15162

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15163
  unreachable, !dbg !15163

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15149
  call void @llvm.dbg.value(metadata i32 %8, metadata !13684, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %8, metadata !13678, metadata !DIExpression()) #23, !dbg !15147
  call void @llvm.dbg.value(metadata i32 %8, metadata !15145, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15159
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !15164
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15166, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !15143, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()), !dbg !15146
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15168 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15169, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %1, metadata !14330, metadata !DIExpression()) #23, !dbg !15174
  %2 = icmp eq i32 %1, 0, !dbg !15175
  br i1 %2, label %4, label %3, !dbg !15176

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.284, i32 0, i32 0), i32 noundef 253) #26, !dbg !15177
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.284, i32 0, i32 0), i32 noundef 253) #26, !dbg !15177
  unreachable, !dbg !15177

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15179
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15179
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15179
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15179
  %9 = load i8, i8* %8, align 1, !dbg !15179
  %10 = icmp eq i8 %9, 1, !dbg !15179
  br i1 %10, label %11, label %12, !dbg !15182

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.284, i32 0, i32 0), i32 noundef 254) #26, !dbg !15183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.284, i32 0, i32 0), i32 noundef 254) #26, !dbg !15183
  unreachable, !dbg !15183

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15185
  store i8 %13, i8* %8, align 1, !dbg !15185
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15186, !srcloc !15188
  ret void, !dbg !15189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15190 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15192, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15196
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15198, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15196
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15201
  br i1 %2, label %4, label %3, !dbg !15202

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15203
  unreachable, !dbg !15203

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15196
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15204
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15195
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15205
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15205
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15205
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15205
  %9 = load i8, i8* %8, align 1, !dbg !15205
  %10 = icmp eq i8 %9, 0, !dbg !15205
  br i1 %10, label %11, label %12, !dbg !15210

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 999) #26, !dbg !15211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 999) #26, !dbg !15211
  unreachable, !dbg !15211

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15213, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %13, metadata !14330, metadata !DIExpression()) #23, !dbg !15218
  %14 = icmp eq i32 %13, 0, !dbg !15219
  br i1 %14, label %16, label %15, !dbg !15220

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15221
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15221
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15221
  unreachable, !dbg !15221

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15223
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15224
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15224
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15224
  %21 = load i8, i8* %20, align 1, !dbg !15225
  %22 = add i8 %21, 1, !dbg !15225
  store i8 %22, i8* %20, align 1, !dbg !15225
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15226
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15227
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15229
  br i1 %23, label %25, label %24, !dbg !15230

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15231
  unreachable, !dbg !15231

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %26, metadata !13684, metadata !DIExpression()) #23, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %26, metadata !13678, metadata !DIExpression()) #23, !dbg !15196
  call void @llvm.dbg.value(metadata i32 %26, metadata !15194, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !15232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15234, !srcloc !13726
  call void @llvm.dbg.value(metadata i32 1, metadata !15192, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15195
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15235
  ret void, !dbg !15236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15237 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15238
  ret %struct.k_thread* %1, !dbg !15239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) #8 !dbg !15240 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15242, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15243, metadata !DIExpression()), !dbg !15247
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15248
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15244, metadata !DIExpression()), !dbg !15247
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15249
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15245, metadata !DIExpression()), !dbg !15247
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %5, metadata !15246, metadata !DIExpression()), !dbg !15247
  %6 = icmp sgt i32 %5, 0, !dbg !15251
  br i1 %6, label %17, label %7, !dbg !15253

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15254
  br i1 %8, label %17, label %9, !dbg !15256

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15257
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15257
  %12 = load i32, i32* %11, align 8, !dbg !15257
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15259
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15259
  %15 = load i32, i32* %14, align 8, !dbg !15259
  %16 = icmp ult i32 %12, %15, !dbg !15260
  br label %17, !dbg !15261

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15262
  ret i1 %18, !dbg !15263
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !15264 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15274, metadata !DIExpression()), !dbg !15278
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15279
  %3 = load i32, i32* %2, align 4, !dbg !15279
  %4 = icmp eq i32 %3, 0, !dbg !15281
  br i1 %4, label %10, label %5, !dbg !15282

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15275, metadata !DIExpression()), !dbg !15278
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15283, !range !7086
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15284
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15276, metadata !DIExpression()), !dbg !15278
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef %7) #24, !dbg !15285
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15277, metadata !DIExpression()), !dbg !15278
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15275, metadata !DIExpression()), !dbg !15278
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15278
  ret %struct.k_thread* %11, !dbg !15286
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15291, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 0, metadata !15292, metadata !DIExpression()), !dbg !15294
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.289(%struct._wait_q_t* noundef %0) #24, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15293, metadata !DIExpression()), !dbg !15294
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15296
  br i1 %3, label %8, label %4, !dbg !15297

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15298
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15300
  call void @llvm.dbg.value(metadata i32 1, metadata !15292, metadata !DIExpression()), !dbg !15294
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.289(%struct._wait_q_t* noundef %0) #24, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15293, metadata !DIExpression()), !dbg !15294
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15296
  br i1 %7, label %8, label %4, !dbg !15297, !llvm.loop !15301

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15294
  ret i32 %9, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.289(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15304 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15306, metadata !DIExpression()), !dbg !15307
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15308
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.272(%struct._dnode* noundef %2) #24, !dbg !15309
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15310
  ret %struct.k_thread* %4, !dbg !15311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !15312 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15321, metadata !DIExpression()), !dbg !15322
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 0, !dbg !15323
  store %struct.rbnode* null, %struct.rbnode** %2, align 4, !dbg !15323
  %3 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 1, !dbg !15323
  store i1 (%struct.rbnode*, %struct.rbnode*)* @z_priq_rb_lessthan, i1 (%struct.rbnode*, %struct.rbnode*)** %3, align 4, !dbg !15323
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 2, !dbg !15323
  store i32 0, i32* %4, align 4, !dbg !15323
  %5 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 1, !dbg !15323
  store i32 0, i32* %5, align 4, !dbg !15323
  ret void, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15325 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15326
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15327
  ret void, !dbg !15328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15329 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15334, metadata !DIExpression()), !dbg !15335
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15336
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15336
  %4 = load i8, i8* %3, align 2, !dbg !15336
  %5 = sext i8 %4 to i32, !dbg !15337
  ret i32 %5, !dbg !15338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15343, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata i32 %1, metadata !15344, metadata !DIExpression()), !dbg !15346
  %3 = add i32 %1, 29, !dbg !15347
  %4 = icmp ult i32 %3, 69, !dbg !15347
  br i1 %4, label %6, label %5, !dbg !15347

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.295, i32 0, i32 0), i32 noundef %1, i32 noundef 39, i32 noundef -29) #26, !dbg !15351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15351
  unreachable, !dbg !15351

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15353, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %7, metadata !14330, metadata !DIExpression()) #23, !dbg !15358
  %8 = icmp eq i32 %7, 0, !dbg !15359
  br i1 %8, label %10, label %9, !dbg !15360

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15361
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15361
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15361
  unreachable, !dbg !15361

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15345, metadata !DIExpression()), !dbg !15346
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15363
  ret void, !dbg !15364
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15365 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15366
  br i1 %1, label %8, label %2, !dbg !15367

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15368
  br i1 %3, label %8, label %4, !dbg !15369

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15370
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15371
  %7 = xor i1 %6, true, !dbg !15369
  br label %8, !dbg !15369

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15373 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15374, !range !3998
  %2 = icmp eq i8 %1, 0, !dbg !15374
  ret i1 %2, !dbg !15375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15376 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15379, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %1, metadata !14330, metadata !DIExpression()) #23, !dbg !15384
  %2 = icmp eq i32 %1, 0, !dbg !15385
  br i1 %2, label %4, label %3, !dbg !15386

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15387
  unreachable, !dbg !15387

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15389
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15391, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15389
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15394
  br i1 %6, label %8, label %7, !dbg !15395

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15396
  unreachable, !dbg !15396

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15389
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15397
  call void @llvm.dbg.value(metadata i32 undef, metadata !15378, metadata !DIExpression()), !dbg !15398
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13864, metadata !DIExpression()) #23, !dbg !15402
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15404
  %11 = load i8, i8* %10, align 1, !dbg !15405
  %12 = and i8 %11, 127, !dbg !15405
  store i8 %12, i8* %10, align 1, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13872, metadata !DIExpression()) #23, !dbg !15406
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %9) #26, !dbg !15408
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13881, metadata !DIExpression()) #23, !dbg !15410
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15412
  %15 = load i8, i8* %14, align 1, !dbg !15413
  %16 = or i8 %15, -128, !dbg !15413
  store i8 %16, i8* %14, align 1, !dbg !15413
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13888, metadata !DIExpression()) #23, !dbg !15414
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %13) #26, !dbg !15416
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15417
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14283, metadata !DIExpression()) #23, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14287, metadata !DIExpression()) #23, !dbg !15420
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15422
  br i1 %17, label %19, label %18, !dbg !15423

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15424
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15424
  unreachable, !dbg !15424

19:                                               ; preds = %8
  %20 = extractvalue { i32, i32 } %5, 0, !dbg !15391
  call void @llvm.dbg.value(metadata i32 %20, metadata !13684, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %20, metadata !13678, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %20, metadata !15378, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !15418
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !15425
  ret void, !dbg !15426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15427 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15431, metadata !DIExpression()), !dbg !15434
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15435, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %3, metadata !14330, metadata !DIExpression()) #23, !dbg !15440
  %4 = icmp eq i32 %3, 0, !dbg !15441
  br i1 %4, label %6, label %5, !dbg !15442

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15443
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15443
  unreachable, !dbg !15443

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15445
  br i1 %7, label %8, label %10, !dbg !15447

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15448
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15450
  br label %15, !dbg !15451

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15432, metadata !DIExpression()), !dbg !15434
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15452
  %12 = sext i32 %11 to i64, !dbg !15452
  call void @llvm.dbg.value(metadata i64 %12, metadata !15432, metadata !DIExpression()), !dbg !15434
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64.298(i64 noundef %12) #24, !dbg !15453
  %14 = trunc i64 %13 to i32, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %14, metadata !15433, metadata !DIExpression()), !dbg !15434
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15434
  ret i32 %16, !dbg !15454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15459, metadata !DIExpression()), !dbg !15460
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15461, !srcloc !15463
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15464
  ret void, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15466 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15470, metadata !DIExpression()), !dbg !15474
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15475, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %2, metadata !14330, metadata !DIExpression()) #23, !dbg !15480
  %3 = icmp eq i32 %2, 0, !dbg !15481
  br i1 %3, label %5, label %4, !dbg !15482

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1420) #26, !dbg !15483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1420) #26, !dbg !15483
  unreachable, !dbg !15483

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15485
  br i1 %6, label %7, label %8, !dbg !15487

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15488
  br label %43, !dbg !15490

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15472, metadata !DIExpression()), !dbg !15474
  %9 = icmp sgt i64 %0, -3, !dbg !15491
  br i1 %9, label %10, label %14, !dbg !15493

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15494
  %12 = trunc i64 %0 to i32, !dbg !15496
  %13 = add i32 %11, %12, !dbg !15496
  call void @llvm.dbg.value(metadata i32 %13, metadata !15471, metadata !DIExpression()), !dbg !15474
  br label %17, !dbg !15497

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15498
  %16 = sub i32 -2, %15, !dbg !15498
  call void @llvm.dbg.value(metadata i32 %16, metadata !15471, metadata !DIExpression()), !dbg !15474
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15500
  call void @llvm.dbg.value(metadata i32 %18, metadata !15471, metadata !DIExpression()), !dbg !15474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15501
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15503, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15501
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15506
  br i1 %20, label %22, label %21, !dbg !15507

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15508
  unreachable, !dbg !15508

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15501
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15473, metadata !DIExpression()), !dbg !15474
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15510
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15511
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15512
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15513
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15514
  tail call fastcc void @z_add_thread_timeout.267(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15514
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15515
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !15517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14283, metadata !DIExpression()) #23, !dbg !15517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14287, metadata !DIExpression()) #23, !dbg !15519
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15521
  br i1 %27, label %29, label %28, !dbg !15522

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15523
  unreachable, !dbg !15523

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %30, metadata !13684, metadata !DIExpression()) #23, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %30, metadata !13678, metadata !DIExpression()) #23, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %30, metadata !15473, metadata !DIExpression()), !dbg !15474
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !15517
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !15524
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15525
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15525
  br i1 %33, label %34, label %35, !dbg !15528

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1448) #26, !dbg !15529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.255, i32 0, i32 0)) #26, !dbg !15529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1448) #26, !dbg !15529
  unreachable, !dbg !15529

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15531
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15532
  %38 = zext i32 %37 to i64, !dbg !15532
  %39 = sub nsw i64 %36, %38, !dbg !15533
  call void @llvm.dbg.value(metadata i64 %39, metadata !15470, metadata !DIExpression()), !dbg !15474
  %40 = icmp sgt i64 %39, 0, !dbg !15534
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15534
  %42 = trunc i64 %41 to i32, !dbg !15534
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15474
  ret i32 %44, !dbg !15535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.298(i64 noundef %0) unnamed_addr #4 !dbg !15536 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15538, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.value(metadata i64 %0, metadata !13732, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i32 10000, metadata !13735, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i32 1000, metadata !13736, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i8 1, metadata !13737, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i1 false, metadata !13738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15540
  call void @llvm.dbg.value(metadata i1 false, metadata !13739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15540
  call void @llvm.dbg.value(metadata i8 0, metadata !13740, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i1 false, metadata !13741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15540
  call void @llvm.dbg.value(metadata i1 true, metadata !13742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15540
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.value(metadata i64 %0, metadata !13732, metadata !DIExpression()), !dbg !15540
  %2 = udiv i64 %0, 10, !dbg !15542
  ret i64 %2, !dbg !15546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15547 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15548, !srcloc !15550
  tail call void @z_impl_k_yield() #24, !dbg !15551
  ret void, !dbg !15552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15557, metadata !DIExpression()), !dbg !15559
  %2 = sext i32 %0 to i64, !dbg !15560
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15561
  call void @llvm.dbg.value(metadata i64 %3, metadata !15558, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15559
  %4 = shl i64 %3, 32, !dbg !15562
  %5 = ashr exact i64 %4, 32, !dbg !15562
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15563
  call void @llvm.dbg.value(metadata i32 %6, metadata !15558, metadata !DIExpression()), !dbg !15559
  %7 = sext i32 %6 to i64, !dbg !15564
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15565
  %9 = trunc i64 %8 to i32, !dbg !15565
  ret i32 %9, !dbg !15566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !15567 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15569, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata i64 %0, metadata !13732, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13735, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i32 10000, metadata !13736, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i8 1, metadata !13737, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i1 false, metadata !13738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15571
  call void @llvm.dbg.value(metadata i1 true, metadata !13739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15571
  call void @llvm.dbg.value(metadata i8 0, metadata !13740, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i1 false, metadata !13741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15571
  call void @llvm.dbg.value(metadata i1 true, metadata !13742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15571
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !15571
  %2 = add i64 %0, 99, !dbg !15573
  call void @llvm.dbg.value(metadata i64 %2, metadata !13732, metadata !DIExpression()), !dbg !15571
  %3 = udiv i64 %2, 100, !dbg !15574
  ret i64 %3, !dbg !15575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15576 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15578, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i64 %0, metadata !13732, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 10000, metadata !13735, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13736, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i8 1, metadata !13737, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i1 false, metadata !13738, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15580
  call void @llvm.dbg.value(metadata i1 false, metadata !13739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15580
  call void @llvm.dbg.value(metadata i8 0, metadata !13740, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i1 true, metadata !13741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15580
  call void @llvm.dbg.value(metadata i1 false, metadata !13742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15580
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.value(metadata i64 0, metadata !13743, metadata !DIExpression()), !dbg !15580
  %2 = mul i64 %0, 100, !dbg !15582
  ret i64 %2, !dbg !15584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15585 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15587, metadata !DIExpression()), !dbg !15588
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !15589
  br i1 %2, label %14, label %3, !dbg !15591

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15592
  %5 = icmp slt i32 %4, 0, !dbg !15594
  br i1 %5, label %6, label %10, !dbg !15595

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15596
  %8 = load i8, i8* %7, align 1, !dbg !15596
  %9 = icmp eq i8 %8, 16, !dbg !15599
  br i1 %9, label %10, label %14, !dbg !15600

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15601
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15602
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15603, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %11, metadata !14330, metadata !DIExpression()) #23, !dbg !15607
  %12 = icmp eq i32 %11, 0, !dbg !15608
  br i1 %12, label %13, label %14, !dbg !15609

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15610
  br label %14, !dbg !15612

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15616, metadata !DIExpression()), !dbg !15617
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15618
  %3 = load i8, i8* %2, align 1, !dbg !15618
  %4 = and i8 %3, 2, !dbg !15619
  %5 = icmp ne i8 %4, 0, !dbg !15620
  ret i1 %5, !dbg !15621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !15622 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15627
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15626, metadata !DIExpression()), !dbg !15628
  ret %struct.k_thread* %1, !dbg !15629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15630 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15631, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %1, metadata !14330, metadata !DIExpression()) #23, !dbg !15634
  %2 = icmp eq i32 %1, 0, !dbg !15635
  br i1 %2, label %3, label %8, !dbg !15636

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15637
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !15638
  %6 = icmp ne i32 %5, 0, !dbg !15636
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15639
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()), !dbg !15644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15645
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15647, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15649
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15649
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15645
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15650
  br i1 %3, label %5, label %4, !dbg !15651

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15652
  unreachable, !dbg !15652

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15647
  call void @llvm.dbg.value(metadata i32 %6, metadata !13684, metadata !DIExpression()) #23, !dbg !15649
  call void @llvm.dbg.value(metadata i32 %6, metadata !13678, metadata !DIExpression()) #23, !dbg !15645
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15653
  call void @llvm.dbg.value(metadata i32 %6, metadata !15643, metadata !DIExpression()), !dbg !15644
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15654
  %8 = load i8, i8* %7, align 4, !dbg !15654
  %9 = and i8 %8, 1, !dbg !15656
  %10 = icmp eq i8 %9, 0, !dbg !15657
  br i1 %10, label %15, label %11, !dbg !15658

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15659
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15662
  br i1 %12, label %14, label %13, !dbg !15663

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15664
  unreachable, !dbg !15664

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13706, metadata !DIExpression()) #23, !dbg !15659
  call void @llvm.dbg.value(metadata i32 %6, metadata !13720, metadata !DIExpression()) #23, !dbg !15665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15667, !srcloc !13726
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1731) #26, !dbg !15668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.305, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !15668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1731) #26, !dbg !15668
  unreachable, !dbg !15668

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15672
  %17 = load i8, i8* %16, align 1, !dbg !15672
  %18 = and i8 %17, 8, !dbg !15674
  %19 = icmp eq i8 %18, 0, !dbg !15675
  br i1 %19, label %24, label %20, !dbg !15676

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15677
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15680
  br i1 %21, label %23, label %22, !dbg !15681

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15682
  unreachable, !dbg !15682

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13706, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata i32 %6, metadata !13720, metadata !DIExpression()) #23, !dbg !15683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15685, !srcloc !13726
  br label %39, !dbg !15686

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !15687
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15688
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15690
  br i1 %26, label %27, label %35, !dbg !15691

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15692, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %28, metadata !14330, metadata !DIExpression()) #23, !dbg !15695
  %29 = icmp eq i32 %28, 0, !dbg !15696
  br i1 %29, label %30, label %35, !dbg !15697

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14283, metadata !DIExpression()) #23, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14287, metadata !DIExpression()) #23, !dbg !15701
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15703
  br i1 %31, label %33, label %32, !dbg !15704

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15705
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15705
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15705
  unreachable, !dbg !15705

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14278, metadata !DIExpression()) #23, !dbg !15698
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !15706
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1778) #26, !dbg !15707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.306, i32 0, i32 0)) #26, !dbg !15707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1778) #26, !dbg !15707
  unreachable, !dbg !15707

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15711
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15713
  br i1 %36, label %38, label %37, !dbg !15714

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15715
  unreachable, !dbg !15715

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13706, metadata !DIExpression()) #23, !dbg !15711
  call void @llvm.dbg.value(metadata i32 %6, metadata !13720, metadata !DIExpression()) #23, !dbg !15716
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15718, !srcloc !13726
  br label %39, !dbg !15719

39:                                               ; preds = %38, %23
  ret void, !dbg !15719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15724
  %3 = load i8, i8* %2, align 1, !dbg !15724
  %4 = and i8 %3, 8, !dbg !15726
  %5 = icmp eq i8 %4, 0, !dbg !15727
  br i1 %5, label %6, label %20, !dbg !15728

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15729
  %8 = or i8 %7, 8, !dbg !15729
  store i8 %8, i8* %2, align 1, !dbg !15729
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !15731
  br i1 %9, label %10, label %12, !dbg !15733

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13864, metadata !DIExpression()) #23, !dbg !15734
  %11 = and i8 %8, 95, !dbg !15737
  store i8 %11, i8* %2, align 1, !dbg !15737
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()) #23, !dbg !15738
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef nonnull %0) #26, !dbg !15740
  br label %12, !dbg !15741

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15742
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15742
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15744
  br i1 %15, label %17, label %16, !dbg !15745

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15746
  br label %17, !dbg !15748

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !15749
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15750
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !15751
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15752
  tail call void @z_thread_monitor_exit(%struct.k_thread* noundef nonnull %0) #26, !dbg !15753
  br label %20, !dbg !15754

20:                                               ; preds = %17, %1
  ret void, !dbg !15755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15756 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15760, metadata !DIExpression()), !dbg !15762
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.289(%struct._wait_q_t* noundef %0) #24, !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15761, metadata !DIExpression()), !dbg !15762
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15764
  br i1 %3, label %10, label %4, !dbg !15765

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15766
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !15768
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15769, metadata !DIExpression()), !dbg !15775
  call void @llvm.dbg.value(metadata i32 0, metadata !15774, metadata !DIExpression()), !dbg !15775
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 10, i32 1, !dbg !15777
  store i32 0, i32* %7, align 4, !dbg !15778
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15779
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.289(%struct._wait_q_t* noundef %0) #24, !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15761, metadata !DIExpression()), !dbg !15762
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15764
  br i1 %9, label %10, label %4, !dbg !15765, !llvm.loop !15780

10:                                               ; preds = %4, %1
  ret void, !dbg !15782
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15783 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15788, metadata !DIExpression()), !dbg !15791
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15787, metadata !DIExpression()), !dbg !15791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15792
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15794, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15792
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15797
  br i1 %4, label %6, label %5, !dbg !15798

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15799
  unreachable, !dbg !15799

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15794
  call void @llvm.dbg.value(metadata i32 %7, metadata !13684, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 %7, metadata !13678, metadata !DIExpression()) #23, !dbg !15792
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %7, metadata !15789, metadata !DIExpression()), !dbg !15791
  call void @llvm.dbg.value(metadata i32 0, metadata !15790, metadata !DIExpression()), !dbg !15791
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15801
  %9 = load i8, i8* %8, align 1, !dbg !15801
  %10 = and i8 %9, 8, !dbg !15803
  %11 = icmp eq i8 %10, 0, !dbg !15804
  br i1 %11, label %12, label %35, !dbg !15805

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !15788, metadata !DIExpression()), !dbg !15791
  %14 = icmp eq i64 %13, 0, !dbg !15806
  br i1 %14, label %35, label %15, !dbg !15808

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15809
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15811
  br i1 %17, label %35, label %18, !dbg !15812

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15813
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !15813
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !15814
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !15815
  br i1 %22, label %35, label %23, !dbg !15816

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15817, !srcloc !14334
  call void @llvm.dbg.value(metadata i32 %24, metadata !14330, metadata !DIExpression()) #23, !dbg !15823
  %25 = icmp eq i32 %24, 0, !dbg !15824
  br i1 %25, label %27, label %26, !dbg !15825

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1809) #26, !dbg !15826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.307, i32 0, i32 0)) #26, !dbg !15826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 1809) #26, !dbg !15826
  unreachable, !dbg !15826

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15828
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15829
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !15830
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15831
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14278, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14283, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14287, metadata !DIExpression()) #23, !dbg !15835
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15837
  br i1 %31, label %33, label %32, !dbg !15838

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 225) #26, !dbg !15839
  unreachable, !dbg !15839

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14278, metadata !DIExpression()) #23, !dbg !15833
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %34, metadata !15790, metadata !DIExpression()), !dbg !15791
  br label %40, !dbg !15841

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !15842
  call void @llvm.dbg.value(metadata i32 %36, metadata !15790, metadata !DIExpression()), !dbg !15791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15843
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15845
  br i1 %37, label %39, label %38, !dbg !15846

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15847
  unreachable, !dbg !15847

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13706, metadata !DIExpression()) #23, !dbg !15843
  call void @llvm.dbg.value(metadata i32 %7, metadata !13720, metadata !DIExpression()) #23, !dbg !15848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15850, !srcloc !13726
  br label %40, !dbg !15851

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !15791
  ret i32 %41, !dbg !15852
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15853 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15857, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 %1, metadata !15858, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i8* %2, metadata !15859, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i8 0, metadata !15861, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 0, metadata !15862, metadata !DIExpression()), !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13672, metadata !DIExpression()) #23, !dbg !15867
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15869, !srcloc !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15867
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15872
  br i1 %5, label %7, label %6, !dbg !15873

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.250, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 148) #26, !dbg !15874
  unreachable, !dbg !15874

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13684, metadata !DIExpression()) #23, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !13678, metadata !DIExpression()) #23, !dbg !15867
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15875
  call void @llvm.dbg.value(metadata i32 undef, metadata !15864, metadata !DIExpression()), !dbg !15866
  call void @llvm.dbg.value(metadata i8 poison, metadata !15861, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !15862, metadata !DIExpression()), !dbg !15866
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !15876
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15860, metadata !DIExpression()), !dbg !15865
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15879
  br i1 %10, label %15, label %11, !dbg !15881

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15882, metadata !DIExpression()), !dbg !15890
  call void @llvm.dbg.value(metadata i32 %1, metadata !15888, metadata !DIExpression()), !dbg !15890
  call void @llvm.dbg.value(metadata i8* %2, metadata !15889, metadata !DIExpression()), !dbg !15890
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15769, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 %1, metadata !15774, metadata !DIExpression()), !dbg !15893
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 10, i32 1, !dbg !15895
  store i32 %1, i32* %12, align 4, !dbg !15896
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15897
  store i8* %2, i8** %13, align 4, !dbg !15898
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !15899
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !15900
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !15901
  call void @llvm.dbg.value(metadata i8 1, metadata !15861, metadata !DIExpression()), !dbg !15865
  br label %15, !dbg !15902

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !15861, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13711, metadata !DIExpression()) #23, !dbg !15903
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15905
  br i1 %16, label %18, label %17, !dbg !15906

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.252, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.249, i32 0, i32 0), i32 noundef 194) #26, !dbg !15907
  unreachable, !dbg !15907

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !15865
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !15869
  call void @llvm.dbg.value(metadata i32 %20, metadata !13684, metadata !DIExpression()) #23, !dbg !15871
  call void @llvm.dbg.value(metadata i32 %20, metadata !13678, metadata !DIExpression()) #23, !dbg !15867
  call void @llvm.dbg.value(metadata i32 %20, metadata !15864, metadata !DIExpression()), !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !13706, metadata !DIExpression()) #23, !dbg !15903
  call void @llvm.dbg.value(metadata i32 undef, metadata !13720, metadata !DIExpression()) #23, !dbg !15908
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !15910, !srcloc !13726
  call void @llvm.dbg.value(metadata i8 poison, metadata !15861, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !15862, metadata !DIExpression()), !dbg !15866
  ret i1 %19, !dbg !15911
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15912 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15918, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.value(metadata i64 undef, metadata !15920, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15917, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15919, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.value(metadata i8** %4, metadata !15921, metadata !DIExpression()), !dbg !15923
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %6, metadata !15922, metadata !DIExpression()), !dbg !15923
  %7 = icmp eq i8** %4, null, !dbg !15925
  br i1 %7, label %12, label %8, !dbg !15927

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15928
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15930
  %11 = load i8*, i8** %10, align 4, !dbg !15930
  store i8* %11, i8** %4, align 4, !dbg !15931
  br label %12, !dbg !15932

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15934 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !15936
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !15937
  ret void, !dbg !15938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15939 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15949, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15947, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15948, metadata !DIExpression()), !dbg !15966
  %5 = icmp eq i64 %4, -1, !dbg !15967
  br i1 %5, label %63, label %6, !dbg !15969

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15970
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* noundef %7) #24, !dbg !15970
  br i1 %8, label %9, label %10, !dbg !15973

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.315, i32 0, i32 0), i32 noundef 99) #26, !dbg !15974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.316, i32 0, i32 0)) #26, !dbg !15974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.315, i32 0, i32 0), i32 noundef 99) #26, !dbg !15974
  unreachable, !dbg !15974

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15976
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !15977
  call void @llvm.dbg.value(metadata i32 0, metadata !15950, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !15986
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15988, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !15995
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !15995
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !15986
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !15996
  br i1 %13, label %15, label %14, !dbg !15999

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16000
  unreachable, !dbg !16000

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15988
  call void @llvm.dbg.value(metadata i32 %16, metadata !15991, metadata !DIExpression()) #23, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %16, metadata !15985, metadata !DIExpression()) #23, !dbg !15986
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %16, metadata !15956, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15978
  %17 = icmp slt i64 %4, -1, !dbg !16003
  br i1 %17, label %18, label %24, !dbg !16004

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16005
  %20 = add i64 %4, %19, !dbg !16006
  %21 = sub i64 -2, %20, !dbg !16006
  call void @llvm.dbg.value(metadata i64 %21, metadata !15960, metadata !DIExpression()), !dbg !16007
  %22 = icmp sgt i64 %21, 1, !dbg !16008
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16008
  br label %29, !dbg !16009

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16010
  %26 = tail call fastcc i32 @elapsed.320() #24, !dbg !16012
  %27 = sext i32 %26 to i64, !dbg !16012
  %28 = add nsw i64 %25, %27, !dbg !16013
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16014
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16015
  store i64 %30, i64* %31, align 8, !dbg !16016
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16017
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !15957, metadata !DIExpression()), !dbg !16019
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16020
  br i1 %33, label %48, label %34, !dbg !16020

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16021
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !15957, metadata !DIExpression()), !dbg !16019
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16025
  %38 = load i64, i64* %37, align 8, !dbg !16025
  %39 = icmp slt i64 %35, %38, !dbg !16026
  br i1 %39, label %40, label %44, !dbg !16027

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16025
  %42 = sub nsw i64 %38, %35, !dbg !16028
  store i64 %42, i64* %41, align 8, !dbg !16028
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16030
  tail call fastcc void @sys_dlist_insert.321(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16031
  br label %49, !dbg !16032

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16033
  store i64 %45, i64* %31, align 8, !dbg !16033
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16034
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !15957, metadata !DIExpression()), !dbg !16019
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16020
  br i1 %47, label %48, label %34, !dbg !16020, !llvm.loop !16035

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.322(%struct._dnode* noundef nonnull %7) #24, !dbg !16037
  br label %49, !dbg !16040

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16041
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16042
  br i1 %51, label %52, label %59, !dbg !16043

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16044
  call void @llvm.dbg.value(metadata i32 %53, metadata !15963, metadata !DIExpression()), !dbg !16045
  %54 = icmp ne i32 %53, 0, !dbg !16046
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16048
  br i1 %57, label %59, label %58, !dbg !16048

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !16049
  br label %59, !dbg !16051

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16058
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16060
  br i1 %60, label %62, label %61, !dbg !16063

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16064
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16064
  unreachable, !dbg !16064

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16052, metadata !DIExpression()) #23, !dbg !16058
  call void @llvm.dbg.value(metadata i32 %16, metadata !16066, metadata !DIExpression()) #23, !dbg !16069
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16071, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15978
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16074 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16080, metadata !DIExpression()), !dbg !16081
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16082
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16082
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16083
  ret i1 %4, !dbg !16084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.320() unnamed_addr #1 !dbg !16085 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16088
  %2 = icmp eq i32 %1, 0, !dbg !16089
  br i1 %2, label %3, label %5, !dbg !16088

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16090
  br label %5, !dbg !16088

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16088
  ret i32 %6, !dbg !16091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16092 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.327() #24, !dbg !16098
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16096, metadata !DIExpression()), !dbg !16099
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16100
  ret %struct._timeout* %2, !dbg !16101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.321(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16106, metadata !DIExpression()), !dbg !16110
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16107, metadata !DIExpression()), !dbg !16110
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16111
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16111
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16108, metadata !DIExpression()), !dbg !16110
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16112
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16113
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16114
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16115
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16116
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16117
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16118
  ret void, !dbg !16119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16120 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16124, metadata !DIExpression()), !dbg !16126
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16127
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.325(%struct._dnode* noundef %2) #24, !dbg !16128
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16125, metadata !DIExpression()), !dbg !16126
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16129
  ret %struct._timeout* %4, !dbg !16130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.322(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16136, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16137, metadata !DIExpression()), !dbg !16139
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16140
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16138, metadata !DIExpression()), !dbg !16139
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16141
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16142
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16143
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16144
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16145
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16146
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16147
  ret void, !dbg !16148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16149 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16154
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16151, metadata !DIExpression()), !dbg !16155
  %2 = tail call fastcc i32 @elapsed.320() #24, !dbg !16156
  call void @llvm.dbg.value(metadata i32 %2, metadata !16152, metadata !DIExpression()), !dbg !16155
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16157
  br i1 %3, label %14, label %4, !dbg !16159

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16160
  %6 = load i64, i64* %5, align 8, !dbg !16160
  %7 = sext i32 %2 to i64, !dbg !16161
  %8 = sub nsw i64 %6, %7, !dbg !16162
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16163
  br i1 %9, label %14, label %10, !dbg !16164

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16165
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16165
  %13 = trunc i64 %12 to i32, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %13, metadata !16153, metadata !DIExpression()), !dbg !16155
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16167
  call void @llvm.dbg.value(metadata i32 %15, metadata !16153, metadata !DIExpression()), !dbg !16155
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16168
  %17 = icmp ne i32 %16, 0, !dbg !16170
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16171
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16171
  call void @llvm.dbg.value(metadata i32 %20, metadata !16153, metadata !DIExpression()), !dbg !16155
  ret i32 %20, !dbg !16172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.325(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16173 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16177, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16178, metadata !DIExpression()), !dbg !16179
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16180
  br i1 %2, label %5, label %3, !dbg !16181

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.326(%struct._dnode* noundef nonnull %0) #24, !dbg !16182
  br label %5, !dbg !16181

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16181
  ret %struct._dnode* %6, !dbg !16183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.326(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16184 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16186, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16187, metadata !DIExpression()), !dbg !16188
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16189
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16190
  br i1 %3, label %7, label %4, !dbg !16191

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16192
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16192
  br label %7, !dbg !16191

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16191
  ret %struct._dnode* %8, !dbg !16193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.327() unnamed_addr #8 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16198, metadata !DIExpression()), !dbg !16199
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.328() #24, !dbg !16200
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16200
  ret %struct._dnode* %3, !dbg !16201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.328() unnamed_addr #8 !dbg !16202 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16206, metadata !DIExpression()), !dbg !16207
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16208
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16209
  ret i1 %2, !dbg !16210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16215, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 -22, metadata !16216, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 0, metadata !16217, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16222
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16224, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16222
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16227
  br i1 %3, label %5, label %4, !dbg !16228

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16229
  unreachable, !dbg !16229

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16222
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16230
  call void @llvm.dbg.value(metadata i32 undef, metadata !16219, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 -22, metadata !16216, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16217, metadata !DIExpression()), !dbg !16221
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16216, metadata !DIExpression()), !dbg !16220
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* noundef %6) #24, !dbg !16231
  br i1 %7, label %8, label %9, !dbg !16235

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16236
  call void @llvm.dbg.value(metadata i32 0, metadata !16216, metadata !DIExpression()), !dbg !16220
  br label %9, !dbg !16238

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16220
  call void @llvm.dbg.value(metadata i32 %10, metadata !16216, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16239
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16241
  br i1 %11, label %13, label %12, !dbg !16242

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16243
  unreachable, !dbg !16243

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16224
  call void @llvm.dbg.value(metadata i32 %14, metadata !15991, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %14, metadata !15985, metadata !DIExpression()) #23, !dbg !16222
  call void @llvm.dbg.value(metadata i32 %14, metadata !16219, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16239
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()) #23, !dbg !16244
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16246, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 %10, metadata !16216, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 undef, metadata !16217, metadata !DIExpression()), !dbg !16221
  ret i32 %10, !dbg !16247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !16248 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16250, metadata !DIExpression()), !dbg !16251
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16252
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16254
  br i1 %3, label %10, label %4, !dbg !16255

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16256
  %6 = load i64, i64* %5, align 8, !dbg !16256
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16258
  %8 = load i64, i64* %7, align 8, !dbg !16259
  %9 = add nsw i64 %8, %6, !dbg !16259
  store i64 %9, i64* %7, align 8, !dbg !16259
  br label %10, !dbg !16260

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16261
  tail call fastcc void @sys_dlist_remove.331(%struct._dnode* noundef %11) #24, !dbg !16262
  ret void, !dbg !16263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.331(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16264 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16268, metadata !DIExpression()), !dbg !16271
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16272
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16272
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16269, metadata !DIExpression()), !dbg !16271
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16273
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16273
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16270, metadata !DIExpression()), !dbg !16271
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16274
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16275
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16276
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16277
  tail call fastcc void @sys_dnode_init.332(%struct._dnode* noundef %0) #24, !dbg !16278
  ret void, !dbg !16279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.332(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16280 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16282, metadata !DIExpression()), !dbg !16283
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16284
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16285
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16286
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16287
  ret void, !dbg !16288
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16289 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16295, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata i64 0, metadata !16296, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata i32 0, metadata !16297, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16302
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16304, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16302
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16307
  br i1 %3, label %5, label %4, !dbg !16308

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16309
  unreachable, !dbg !16309

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16302
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16310
  call void @llvm.dbg.value(metadata i32 undef, metadata !16299, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata i64 0, metadata !16296, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16297, metadata !DIExpression()), !dbg !16301
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16311
  call void @llvm.dbg.value(metadata i64 %6, metadata !16296, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16314
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16316
  br i1 %7, label %9, label %8, !dbg !16317

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16318
  unreachable, !dbg !16318

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16304
  call void @llvm.dbg.value(metadata i32 %10, metadata !15991, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata i32 %10, metadata !15985, metadata !DIExpression()) #23, !dbg !16302
  call void @llvm.dbg.value(metadata i32 %10, metadata !16299, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()) #23, !dbg !16319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16321, !srcloc !16072
  call void @llvm.dbg.value(metadata i64 %6, metadata !16296, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16297, metadata !DIExpression()), !dbg !16301
  ret i64 %6, !dbg !16322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16323 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16325, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i64 0, metadata !16326, metadata !DIExpression()), !dbg !16329
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.333(%struct._timeout* noundef %0) #24, !dbg !16330
  br i1 %2, label %21, label %3, !dbg !16332

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !16333
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16327, metadata !DIExpression()), !dbg !16334
  call void @llvm.dbg.value(metadata i64 0, metadata !16326, metadata !DIExpression()), !dbg !16329
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16335
  br i1 %5, label %16, label %6, !dbg !16337

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16327, metadata !DIExpression()), !dbg !16334
  call void @llvm.dbg.value(metadata i64 %8, metadata !16326, metadata !DIExpression()), !dbg !16329
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16338
  %10 = load i64, i64* %9, align 8, !dbg !16338
  %11 = add nsw i64 %10, %8, !dbg !16340
  call void @llvm.dbg.value(metadata i64 %11, metadata !16326, metadata !DIExpression()), !dbg !16329
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16341
  br i1 %12, label %16, label %13, !dbg !16343

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !16344
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16327, metadata !DIExpression()), !dbg !16334
  call void @llvm.dbg.value(metadata i64 %11, metadata !16326, metadata !DIExpression()), !dbg !16329
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16335
  br i1 %15, label %16, label %6, !dbg !16337, !llvm.loop !16345

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16329
  call void @llvm.dbg.value(metadata i64 %17, metadata !16326, metadata !DIExpression()), !dbg !16329
  %18 = tail call fastcc i32 @elapsed.320() #24, !dbg !16347
  %19 = sext i32 %18 to i64, !dbg !16347
  %20 = sub nsw i64 %17, %19, !dbg !16348
  br label %21, !dbg !16349

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16329
  ret i64 %22, !dbg !16350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.333(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16351 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16355, metadata !DIExpression()), !dbg !16356
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16357
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.312(%struct._dnode* noundef %2) #24, !dbg !16358
  %4 = xor i1 %3, true, !dbg !16359
  ret i1 %4, !dbg !16360
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16361 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16363, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i64 0, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 0, metadata !16365, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16370
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16372, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16370
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16375
  br i1 %3, label %5, label %4, !dbg !16376

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16377
  unreachable, !dbg !16377

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16370
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16378
  call void @llvm.dbg.value(metadata i32 undef, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i64 0, metadata !16364, metadata !DIExpression()), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16365, metadata !DIExpression()), !dbg !16369
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16379
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16382
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16383
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16385
  br i1 %8, label %10, label %9, !dbg !16386

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16387
  unreachable, !dbg !16387

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16372
  call void @llvm.dbg.value(metadata i32 %11, metadata !15991, metadata !DIExpression()) #23, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %11, metadata !15985, metadata !DIExpression()) #23, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %11, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()) #23, !dbg !16388
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16390, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 undef, metadata !16365, metadata !DIExpression()), !dbg !16369
  %12 = add i64 %7, %6, !dbg !16391
  ret i64 %12, !dbg !16392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16393 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16395, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 0, metadata !16396, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16401
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16403, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16401
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16406
  br i1 %2, label %4, label %3, !dbg !16407

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16408
  unreachable, !dbg !16408

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16401
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16409
  call void @llvm.dbg.value(metadata i32 undef, metadata !16398, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 -1, metadata !16395, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 undef, metadata !16396, metadata !DIExpression()), !dbg !16400
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %5, metadata !16395, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16413
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16415
  br i1 %6, label %8, label %7, !dbg !16416

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16417
  unreachable, !dbg !16417

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16403
  call void @llvm.dbg.value(metadata i32 %9, metadata !15991, metadata !DIExpression()) #23, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %9, metadata !15985, metadata !DIExpression()) #23, !dbg !16401
  call void @llvm.dbg.value(metadata i32 %9, metadata !16398, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16413
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()) #23, !dbg !16418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16420, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 %5, metadata !16395, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 undef, metadata !16396, metadata !DIExpression()), !dbg !16400
  ret i32 %5, !dbg !16421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16424, metadata !DIExpression()), !dbg !16434
  call void @llvm.dbg.value(metadata i1 %1, metadata !16425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16434
  call void @llvm.dbg.value(metadata i32 0, metadata !16426, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16436
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16438, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16436
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16441
  br i1 %4, label %6, label %5, !dbg !16442

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16443
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16443
  unreachable, !dbg !16443

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16436
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16444
  call void @llvm.dbg.value(metadata i32 undef, metadata !16428, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata i32 undef, metadata !16426, metadata !DIExpression()), !dbg !16435
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !16445
  call void @llvm.dbg.value(metadata i32 %7, metadata !16429, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i1 undef, metadata !16432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  %8 = icmp slt i32 %7, 2, !dbg !16447
  call void @llvm.dbg.value(metadata i1 %8, metadata !16433, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16448
  call void @llvm.dbg.value(metadata i1 %9, metadata !16432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16446
  br i1 %10, label %14, label %11, !dbg !16448

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16450
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16450
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !16452
  br label %14, !dbg !16453

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16454
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16456
  br i1 %15, label %17, label %16, !dbg !16457

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16458
  unreachable, !dbg !16458

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16438
  call void @llvm.dbg.value(metadata i32 %18, metadata !15991, metadata !DIExpression()) #23, !dbg !16440
  call void @llvm.dbg.value(metadata i32 %18, metadata !15985, metadata !DIExpression()) #23, !dbg !16436
  call void @llvm.dbg.value(metadata i32 %18, metadata !16428, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16454
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()) #23, !dbg !16459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16461, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 1, metadata !16426, metadata !DIExpression()), !dbg !16435
  call void @llvm.dbg.value(metadata i32 undef, metadata !16426, metadata !DIExpression()), !dbg !16435
  ret void, !dbg !16462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16467, metadata !DIExpression()), !dbg !16472
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16474
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16476, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16474
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16479
  br i1 %3, label %5, label %4, !dbg !16480

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16481
  unreachable, !dbg !16481

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16474
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16482
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16472
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16472
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16472
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !16483
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16484
  br i1 %7, label %37, label %8, !dbg !16485

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16472
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16486
  %14 = load i64, i64* %13, align 8, !dbg !16486
  %15 = sext i32 %11 to i64, !dbg !16487
  %16 = icmp sgt i64 %14, %15, !dbg !16488
  br i1 %16, label %35, label %17, !dbg !16489

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16469, metadata !DIExpression()), !dbg !16490
  %18 = trunc i64 %14 to i32, !dbg !16491
  call void @llvm.dbg.value(metadata i32 %18, metadata !16471, metadata !DIExpression()), !dbg !16490
  %19 = sext i32 %18 to i64, !dbg !16492
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16493
  %21 = add i64 %20, %19, !dbg !16493
  store i64 %21, i64* @curr_tick, align 8, !dbg !16493
  store i64 0, i64* %13, align 8, !dbg !16494
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16496
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16498
  br i1 %22, label %24, label %23, !dbg !16499

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16500
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16500
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16500
  unreachable, !dbg !16500

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16052, metadata !DIExpression()) #23, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %12, metadata !16066, metadata !DIExpression()) #23, !dbg !16501
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16503, !srcloc !16072
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16504
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16504
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !16505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16506
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16508, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16510
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16510
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16506
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16511
  br i1 %28, label %30, label %29, !dbg !16512

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16513
  unreachable, !dbg !16513

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16510
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16514
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16472
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16515
  %32 = sub nsw i32 %31, %18, !dbg !16515
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16472
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16472
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !16483
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16484
  br i1 %34, label %37, label %8, !dbg !16485, !llvm.loop !16516

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16518
  store i64 %36, i64* %13, align 8, !dbg !16518
  br label %41, !dbg !16521

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16472
  %40 = sext i32 %39 to i64, !dbg !16522
  br label %41, !dbg !16522

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16522
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16523
  %45 = add i64 %44, %42, !dbg !16523
  store i64 %45, i64* @curr_tick, align 8, !dbg !16523
  store i32 0, i32* @announce_remaining, align 4, !dbg !16524
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !16525
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !16526
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16527
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16529
  br i1 %47, label %49, label %48, !dbg !16530

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16531
  unreachable, !dbg !16531

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16472
  call void @llvm.dbg.value(metadata i32 %50, metadata !16052, metadata !DIExpression()) #23, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %50, metadata !16066, metadata !DIExpression()) #23, !dbg !16532
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16534, !srcloc !16072
  ret void, !dbg !16535
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16536 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16538, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata i32 0, metadata !16539, metadata !DIExpression()), !dbg !16543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !15979, metadata !DIExpression()) #23, !dbg !16544
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16546, !srcloc !15994
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16548
  call void @llvm.dbg.value(metadata i32 undef, metadata !15992, metadata !DIExpression()) #23, !dbg !16548
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16544
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16549
  br i1 %2, label %4, label %3, !dbg !16550

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16551
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16551
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 148) #26, !dbg !16551
  unreachable, !dbg !16551

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()) #23, !dbg !16548
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()) #23, !dbg !16544
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16552
  call void @llvm.dbg.value(metadata i32 undef, metadata !16541, metadata !DIExpression()), !dbg !16543
  call void @llvm.dbg.value(metadata i64 0, metadata !16538, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()), !dbg !16543
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16553
  %6 = tail call fastcc i32 @elapsed.320() #24, !dbg !16556
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16057, metadata !DIExpression()) #23, !dbg !16557
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16559
  br i1 %7, label %9, label %8, !dbg !16560

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.324, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.318, i32 0, i32 0), i32 noundef 194) #26, !dbg !16561
  unreachable, !dbg !16561

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16546
  call void @llvm.dbg.value(metadata i32 %10, metadata !15991, metadata !DIExpression()) #23, !dbg !16548
  call void @llvm.dbg.value(metadata i32 %10, metadata !15985, metadata !DIExpression()) #23, !dbg !16544
  call void @llvm.dbg.value(metadata i32 %10, metadata !16541, metadata !DIExpression()), !dbg !16543
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16542
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16538, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16052, metadata !DIExpression()) #23, !dbg !16557
  call void @llvm.dbg.value(metadata i32 undef, metadata !16066, metadata !DIExpression()) #23, !dbg !16562
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16564, !srcloc !16072
  call void @llvm.dbg.value(metadata i32 undef, metadata !16539, metadata !DIExpression()), !dbg !16543
  %11 = sext i32 %6 to i64, !dbg !16556
  %12 = add i64 %5, %11, !dbg !16565
  ret i64 %12, !dbg !16566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16567 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16568
  %2 = trunc i64 %1 to i32, !dbg !16569
  ret i32 %2, !dbg !16570
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16571 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !16572
  ret i64 %1, !dbg !16573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16576, metadata !DIExpression()), !dbg !16583
  %2 = icmp eq i32 %0, 0, !dbg !16584
  br i1 %2, label %10, label %3, !dbg !16586

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16587
  call void @llvm.dbg.value(metadata i32 %4, metadata !16577, metadata !DIExpression()), !dbg !16583
  %5 = shl i32 %0, 5, !dbg !16588
  call void @llvm.dbg.value(metadata i32 %5, metadata !16578, metadata !DIExpression()), !dbg !16583
  br label %6, !dbg !16589

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !16590
  call void @llvm.dbg.value(metadata i32 %7, metadata !16579, metadata !DIExpression()), !dbg !16591
  %8 = sub i32 %7, %4, !dbg !16592
  %9 = icmp ult i32 %8, %5, !dbg !16594
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16596 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !16597
  ret i32 %1, !dbg !16598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16599 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16601
  ret i32 %1, !dbg !16602
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16603 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16607, metadata !DIExpression()), !dbg !16609
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16610

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !16611
  br label %14, !dbg !16615

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16608, metadata !DIExpression()), !dbg !16609
  %6 = icmp slt i64 %2, -1, !dbg !16616
  br i1 %6, label %7, label %9, !dbg !16619

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16620
  br label %14, !dbg !16621

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !16623
  %11 = icmp ugt i64 %2, 1, !dbg !16624
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16624
  %13 = add nsw i64 %10, %12, !dbg !16625
  br label %14, !dbg !16626

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16627
  ret i64 %15, !dbg !16628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16629 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.344, i32 0, i32 0)) #26, !dbg !16631
  ret void, !dbg !16632
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!866, !2, !2526, !27, !282, !2528, !2542, !2544, !2581, !2583, !292, !358, !387, !2585, !2596, !2642, !2644, !2672, !2700, !2743, !2815, !2860, !400, !544, !2888, !580, !605, !713, !896, !2893, !1012, !1078, !1346, !1579, !2914, !1694, !1781, !2916, !2987, !3036, !1816, !3039, !1823, !2105, !3057, !2243, !2362, !3059, !2487, !3062}
!llvm.ident = !{!3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064, !3064}
!llvm.module.flags = !{!3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "forks", scope: !27, file: !116, line: 149, type: !278, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !108, !109, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !103)
!103 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!114, !25, !266, !269}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "fork_objs", scope: !27, file: !116, line: 146, type: !117, isLocal: false, isDefinition: true)
!116 = !DIFile(filename: "zephyr/samples/philosophers/src/phil_obj_abstract.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 960, elements: !264)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !142, !262, !263}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !118, file: !119, line: 2722, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !124)
!123 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !125)
!125 = !{!126}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !124, file: !123, line: 232, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !130)
!130 = !{!131, !137}
!131 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 38, baseType: !132, size: 32)
!132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 38, size: 32, elements: !133)
!133 = !{!134, !136}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !132, file: !128, line: 39, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !132, file: !128, line: 40, baseType: !135, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 42, baseType: !138, size: 32, offset: 32)
!138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 42, size: 32, elements: !139)
!139 = !{!140, !141}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !138, file: !128, line: 43, baseType: !135, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !128, line: 44, baseType: !135, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !118, file: !119, line: 2724, baseType: !143, size: 32, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !196, !209, !210, !211, !223, !224, !229, !230, !238, !257}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !144, file: !145, line: 247, baseType: !148, size: 384)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !149)
!149 = !{!150, !164, !166, !169, !170, !183, !184, !185}
!150 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 60, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 60, size: 64, elements: !152)
!152 = !{!153, !155}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !151, file: !145, line: 61, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !129)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !151, file: !145, line: 62, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !158)
!157 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 50, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !162)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!162 = !{!163}
!163 = !DISubrange(count: 2)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !148, file: !145, line: 68, baseType: !165, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !148, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !148, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!170 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 90, baseType: !171, size: 16, offset: 112)
!171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 90, size: 16, elements: !172)
!172 = !{!173, !180}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !145, line: 91, baseType: !174, size: 16)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !171, file: !145, line: 91, size: 16, elements: !175)
!175 = !{!176, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !174, file: !145, line: 96, baseType: !177, size: 8)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !178)
!178 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !174, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !171, file: !145, line: 100, baseType: !181, size: 16)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !148, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !148, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !148, file: !145, line: 131, baseType: !186, size: 192, offset: 192)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !187)
!187 = !{!188, !189, !195}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !186, file: !123, line: 245, baseType: !154, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !186, file: !123, line: 246, baseType: !190, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !194}
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !186, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !144, file: !145, line: 250, baseType: !197, size: 288, offset: 384)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !199)
!198 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!199 = !{!200, !201, !202, !203, !204, !205, !206, !207, !208}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !197, file: !198, line: 26, baseType: !110, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !197, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !197, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !197, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !197, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !197, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !197, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !197, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !197, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !144, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !144, file: !145, line: 256, baseType: !122, size: 64, offset: 704)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !144, file: !145, line: 271, baseType: !212, size: 128, offset: 768)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !213)
!213 = !{!214, !220, !221, !222}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !212, file: !145, line: 35, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !216, line: 46, baseType: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !108, !108, !108}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !212, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !212, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !212, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !144, file: !145, line: 274, baseType: !143, size: 32, offset: 896)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !144, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !227)
!226 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!227 = !{!228}
!228 = !DISubrange(count: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !144, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !144, file: !145, line: 300, baseType: !231, size: 96, offset: 1216)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !232)
!232 = !{!233, !234, !237}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !231, file: !145, line: 153, baseType: !22, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !231, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !236, line: 214, baseType: !32)
!236 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !231, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !144, file: !145, line: 325, baseType: !239, size: 32, offset: 1312)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !241)
!241 = !{!242, !251, !252}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !119, line: 5074, baseType: !243, size: 96)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !249, !250}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !243, file: !244, line: 57, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !244, line: 57, flags: DIFlagFwdDecl)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !243, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !243, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !240, file: !119, line: 5075, baseType: !122, size: 64, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !240, file: !119, line: 5076, baseType: !253, size: 32, offset: 160)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !253, file: !254, line: 52, baseType: !22, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !144, file: !145, line: 343, baseType: !258, size: 64, offset: 1344)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !198, line: 63, baseType: !110, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !118, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !118, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!264 = !{!265}
!265 = !DISubrange(count: 6)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !116, line: 160, type: !268, isLocal: true, isDefinition: true)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8448, elements: !264)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "stacks", scope: !27, file: !116, line: 159, type: !271, isLocal: true, isDefinition: true, align: 512)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 101376, elements: !276)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !272, file: !273, line: 48, baseType: !226, size: 8)
!276 = !{!265, !277}
!277 = !DISubrange(count: 2112)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 192, elements: !264)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "_char_out", scope: !282, file: !286, line: 54, type: !287, isLocal: false, isDefinition: true)
!282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !285, splitDebugInlining: false, nameTableKind: None)
!283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!284 = !{!108, !109}
!285 = !{!280}
!286 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{!109, !109}
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !292, file: !322, line: 60, type: !323, isLocal: true, isDefinition: true, align: 32)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !294, globals: !321, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!294 = !{!295, !315}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 386, baseType: !298)
!297 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 448, elements: !299)
!299 = !{!300, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !298, file: !297, line: 372, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !298, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !298, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !298, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !298, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !298, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !298, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !298, file: !297, line: 379, baseType: !301, size: 32, offset: 224)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !298, file: !297, line: 380, baseType: !301, size: 32, offset: 256)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !298, file: !297, line: 381, baseType: !301, size: 32, offset: 288)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !298, file: !297, line: 382, baseType: !301, size: 32, offset: 320)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !298, file: !297, line: 383, baseType: !301, size: 32, offset: 352)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !298, file: !297, line: 384, baseType: !301, size: 32, offset: 384)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !298, file: !297, line: 385, baseType: !301, size: 32, offset: 416)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 364, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 360, size: 64, elements: !318)
!318 = !{!319, !320}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !317, file: !297, line: 362, baseType: !301, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !317, file: !297, line: 363, baseType: !301, size: 32, offset: 32)
!321 = !{!290}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !355}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!109, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !339, !340, !341, !348, !349}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !337, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !334, line: 359, baseType: !167, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !325, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !334, line: 380, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !334, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !334, line: 359, baseType: !167, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !325, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_kernel_thread_info_offsets", scope: !387, file: !392, line: 41, type: !395, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !389, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!389 = !{!385, !390, !393}
!390 = !DIGlobalVariableExpression(var: !391, expr: !DIExpression())
!391 = distinct !DIGlobalVariable(name: "_kernel_thread_info_num_offsets", scope: !387, file: !392, line: 140, type: !235, isLocal: false, isDefinition: true)
!392 = !DIFile(filename: "zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "_kernel_thread_info_size_t_size", scope: !387, file: !392, line: 145, type: !167, isLocal: false, isDefinition: true)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 448, elements: !396)
!396 = !{!397}
!397 = !DISubrange(count: 14)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "static_regions", scope: !400, file: !407, line: 62, type: !540, isLocal: true, isDefinition: true)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !402, globals: !403, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!402 = !{!235, !109, !110, !108}
!403 = !{!404, !398}
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !406, file: !407, line: 198, type: !526, isLocal: true, isDefinition: true)
!406 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !407, file: !407, line: 175, type: !408, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !521)
!407 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!408 = !DISubroutineType(types: !409)
!409 = !{null, !410}
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !412)
!412 = !{!413, !471, !483, !484, !485, !492, !493, !494, !495, !501, !516}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !411, file: !145, line: 247, baseType: !414, size: 384)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !415)
!415 = !{!416, !440, !447, !448, !449, !458, !459, !460}
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !145, line: 60, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !145, line: 60, size: 64, elements: !418)
!418 = !{!419, !434}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !417, file: !145, line: 61, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !422)
!422 = !{!423, !429}
!423 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !128, line: 38, baseType: !424, size: 32)
!424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !128, line: 38, size: 32, elements: !425)
!425 = !{!426, !428}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !424, file: !128, line: 39, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !128, line: 40, baseType: !427, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !128, line: 42, baseType: !430, size: 32, offset: 32)
!430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !128, line: 42, size: 32, elements: !431)
!431 = !{!432, !433}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !430, file: !128, line: 43, baseType: !427, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !430, file: !128, line: 44, baseType: !427, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !417, file: !145, line: 62, baseType: !435, size: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !436)
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !435, file: !157, line: 50, baseType: !438, size: 64)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 64, elements: !162)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !414, file: !145, line: 68, baseType: !441, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !443, file: !123, line: 232, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !421)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !414, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !414, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !145, line: 90, baseType: !450, size: 16, offset: 112)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !145, line: 90, size: 16, elements: !451)
!451 = !{!452, !457}
!452 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !145, line: 91, baseType: !453, size: 16)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !450, file: !145, line: 91, size: 16, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !453, file: !145, line: 96, baseType: !177, size: 8)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !453, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !450, file: !145, line: 100, baseType: !181, size: 16)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !414, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !414, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !414, file: !145, line: 131, baseType: !461, size: 192, offset: 192)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !462)
!462 = !{!463, !464, !470}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !461, file: !123, line: 245, baseType: !420, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !461, file: !123, line: 246, baseType: !465, size: 32, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !461, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !411, file: !145, line: 250, baseType: !472, size: 288, offset: 384)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !473)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481, !482}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !472, file: !198, line: 26, baseType: !110, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !472, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !472, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !472, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !472, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !472, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !472, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !472, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !472, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !411, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !411, file: !145, line: 256, baseType: !442, size: 64, offset: 704)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !411, file: !145, line: 271, baseType: !486, size: 128, offset: 768)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !487)
!487 = !{!488, !489, !490, !491}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !486, file: !145, line: 35, baseType: !215, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !486, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !486, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !486, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !411, file: !145, line: 274, baseType: !410, size: 32, offset: 896)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !411, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !411, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !411, file: !145, line: 300, baseType: !496, size: 96, offset: 1216)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !497)
!497 = !{!498, !499, !500}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !496, file: !145, line: 153, baseType: !22, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !496, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !496, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !411, file: !145, line: 325, baseType: !502, size: 32, offset: 1312)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !504)
!504 = !{!505, !511, !512}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !503, file: !119, line: 5074, baseType: !506, size: 96)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !507)
!507 = !{!508, !509, !510}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !506, file: !244, line: 57, baseType: !247, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !506, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !506, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !503, file: !119, line: 5075, baseType: !442, size: 64, offset: 96)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !503, file: !119, line: 5076, baseType: !513, size: 32, offset: 160)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !514)
!514 = !{!515}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !513, file: !254, line: 52, baseType: !22, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !411, file: !145, line: 343, baseType: !517, size: 64, offset: 1344)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !518)
!518 = !{!519, !520}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !517, file: !198, line: 63, baseType: !110, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !517, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!521 = !{!522, !523, !524, !525}
!522 = !DILocalVariable(name: "thread", arg: 1, scope: !406, file: !407, line: 175, type: !410)
!523 = !DILocalVariable(name: "region_num", scope: !406, file: !407, line: 200, type: !167)
!524 = !DILocalVariable(name: "guard_start", scope: !406, file: !407, line: 265, type: !22)
!525 = !DILocalVariable(name: "guard_size", scope: !406, file: !407, line: 266, type: !235)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 96, elements: !538)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !528, line: 52, size: 96, elements: !529)
!528 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!529 = !{!530, !531, !532}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !527, file: !528, line: 53, baseType: !22, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !527, file: !528, line: 54, baseType: !235, size: 32, offset: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !527, file: !528, line: 55, baseType: !533, size: 32, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !534, line: 151, baseType: !535)
!534 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !534, line: 149, size: 32, elements: !536)
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !535, file: !534, line: 150, baseType: !110, size: 32)
!538 = !{!539}
!539 = !DISubrange(count: 1)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !541, size: 96, elements: !538)
!541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !544, file: !577, line: 39, type: !167, isLocal: true, isDefinition: true)
!544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !546, globals: !576, splitDebugInlining: false, nameTableKind: None)
!545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!546 = !{!547, !108, !109, !564, !167}
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !549, line: 1168, baseType: !550)
!549 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 1155, size: 352, elements: !551)
!551 = !{!552, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !550, file: !549, line: 1157, baseType: !553, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !550, file: !549, line: 1158, baseType: !301, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !550, file: !549, line: 1159, baseType: !301, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !550, file: !549, line: 1160, baseType: !301, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !550, file: !549, line: 1161, baseType: !301, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !550, file: !549, line: 1162, baseType: !301, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !550, file: !549, line: 1163, baseType: !301, size: 32, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !550, file: !549, line: 1164, baseType: !301, size: 32, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !550, file: !549, line: 1165, baseType: !301, size: 32, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !550, file: !549, line: 1166, baseType: !301, size: 32, offset: 288)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !550, file: !549, line: 1167, baseType: !301, size: 32, offset: 320)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !567, line: 27, size: 96, elements: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = !{!569, !570, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !566, file: !567, line: 29, baseType: !110, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !566, file: !567, line: 31, baseType: !337, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !566, file: !567, line: 37, baseType: !572, size: 32, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !534, line: 146, baseType: !573)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !534, line: 141, size: 32, elements: !574)
!574 = !{!575}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !573, file: !534, line: 143, baseType: !110, size: 32)
!576 = !{!542}
!577 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !580, file: !585, line: 13, type: !602, isLocal: true, isDefinition: true)
!580 = distinct !DICompileUnit(language: DW_LANG_C99, file: !581, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !582, splitDebugInlining: false, nameTableKind: None)
!581 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!582 = !{!583, !578}
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "mpu_config", scope: !580, file: !585, line: 37, type: !586, isLocal: false, isDefinition: true)
!585 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !567, line: 41, size: 64, elements: !588)
!588 = !{!589, !590}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !587, file: !567, line: 43, baseType: !110, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !587, file: !567, line: 45, baseType: !591, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !567, line: 27, size: 96, elements: !594)
!594 = !{!595, !596, !597}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !593, file: !567, line: 29, baseType: !110, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !593, file: !567, line: 31, baseType: !337, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !593, file: !567, line: 37, baseType: !598, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !534, line: 146, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !534, line: 141, size: 32, elements: !600)
!600 = !{!601}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !599, file: !534, line: 143, baseType: !110, size: 32)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 192, elements: !162)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !605, file: !702, line: 36, type: !703, isLocal: true, isDefinition: true, align: 32)
!605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !607, retainedTypes: !619, globals: !701, splitDebugInlining: false, nameTableKind: None)
!606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!607 = !{!608, !614}
!608 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !609, line: 506, baseType: !32, size: 32, elements: !610)
!609 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!610 = !{!611, !612, !613}
!611 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!612 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!613 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!614 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !609, line: 512, baseType: !32, size: 32, elements: !615)
!615 = !{!616, !617, !618}
!616 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!617 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!618 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!619 = !{!620, !690, !695, !655, !614, !608, !700, !108}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !609, line: 523, size: 288, elements: !623)
!623 = !{!624, !645, !651, !656, !660, !661, !662, !666, !686}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !622, file: !609, line: 524, baseType: !625, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = !DISubroutineType(types: !627)
!627 = !{!109, !628, !643, !644}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !630)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !631)
!631 = !{!632, !633, !634, !635, !641, !642}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !630, file: !334, line: 380, baseType: !337, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !630, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !630, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !630, file: !334, line: 386, baseType: !636, size: 32, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 32)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !637, file: !334, line: 359, baseType: !167, size: 8)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !637, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !630, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !630, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !609, line: 237, baseType: !167)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !609, line: 257, baseType: !110)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !622, file: !609, line: 530, baseType: !646, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DISubroutineType(types: !648)
!648 = !{!109, !628, !649}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !609, line: 229, baseType: !110)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !622, file: !609, line: 532, baseType: !652, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DISubroutineType(types: !654)
!654 = !{!109, !628, !655, !650}
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !609, line: 216, baseType: !110)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !622, file: !609, line: 535, baseType: !657, size: 32, offset: 96)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 32)
!658 = !DISubroutineType(types: !659)
!659 = !{!109, !628, !655}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !622, file: !609, line: 537, baseType: !657, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !622, file: !609, line: 539, baseType: !657, size: 32, offset: 160)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !622, file: !609, line: 541, baseType: !663, size: 32, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DISubroutineType(types: !665)
!665 = !{!109, !628, !643, !608, !614}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !622, file: !609, line: 544, baseType: !667, size: 32, offset: 224)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 32)
!668 = !DISubroutineType(types: !669)
!669 = !{!109, !628, !670, !347}
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 32)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !609, line: 478, size: 96, elements: !672)
!672 = !{!673, !680, !685}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !671, file: !609, line: 482, baseType: !674, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !675, line: 33, baseType: !676)
!675 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !675, line: 29, size: 32, elements: !677)
!677 = !{!678}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !676, file: !675, line: 30, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !671, file: !609, line: 485, baseType: !681, size: 32, offset: 32)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !609, line: 464, baseType: !682)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!683 = !DISubroutineType(types: !684)
!684 = !{null, !628, !670, !655}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !671, file: !609, line: 493, baseType: !655, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !622, file: !609, line: 547, baseType: !687, size: 32, offset: 256)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = !DISubroutineType(types: !689)
!689 = !{!110, !628}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !609, line: 428, size: 32, elements: !693)
!693 = !{!694}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !692, file: !609, line: 434, baseType: !655, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !609, line: 441, size: 32, elements: !698)
!698 = !{!699}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !697, file: !609, line: 447, baseType: !655, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!701 = !{!603}
!702 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !705)
!705 = !{!706, !710}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !704, file: !325, line: 60, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!708 = !DISubroutineType(types: !709)
!709 = !{!109, !628}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !704, file: !325, line: 65, baseType: !628, size: 32, offset: 32)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !713, file: !785, line: 48, type: !861, isLocal: true, isDefinition: true)
!713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !715, retainedTypes: !771, globals: !782, splitDebugInlining: false, nameTableKind: None)
!714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!715 = !{!30, !716}
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !297, line: 69, baseType: !109, size: 32, elements: !717)
!717 = !{!718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770}
!718 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!719 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!720 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!721 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!722 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!723 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!724 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!725 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!726 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!727 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!728 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!729 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!730 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!731 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!732 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!733 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!734 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!735 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!736 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!737 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!738 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!739 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!740 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!741 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!742 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!743 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!744 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!745 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!746 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!747 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!748 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!749 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!750 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!751 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!752 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!753 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!754 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!755 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!756 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!757 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!758 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!759 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!760 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!761 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!762 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!763 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!764 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!765 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!766 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!767 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!768 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!769 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!770 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!771 = !{!235, !109, !108, !772}
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !297, line: 270, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 262, size: 192, elements: !775)
!775 = !{!776, !777, !778, !779, !780, !781}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !774, file: !297, line: 264, baseType: !301, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !774, file: !297, line: 265, baseType: !301, size: 32, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !774, file: !297, line: 266, baseType: !301, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !774, file: !297, line: 267, baseType: !301, size: 32, offset: 96)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !774, file: !297, line: 268, baseType: !301, size: 32, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !774, file: !297, line: 269, baseType: !301, size: 32, offset: 160)
!782 = !{!783, !789, !805, !816, !833, !711, !835, !849, !851, !853, !855, !857, !859}
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !713, file: !785, line: 424, type: !786, isLocal: false, isDefinition: true, align: 16)
!785 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 4)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !713, file: !785, line: 424, type: !791, isLocal: false, isDefinition: true, align: 32)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !793)
!793 = !{!794, !795, !796, !797, !803, !804}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !792, file: !334, line: 380, baseType: !337, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !792, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !792, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !792, file: !334, line: 386, baseType: !798, size: 32, offset: 96)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !800)
!800 = !{!801, !802}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !799, file: !334, line: 359, baseType: !167, size: 8)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !799, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !792, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !792, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !713, file: !785, line: 424, type: !807, isLocal: true, isDefinition: true, align: 32)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !809)
!809 = !{!810, !815}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !808, file: !325, line: 60, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DISubroutineType(types: !813)
!813 = !{!109, !814}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !808, file: !325, line: 65, baseType: !814, size: 32, offset: 32)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "exti_data", scope: !713, file: !785, line: 423, type: !818, isLocal: true, isDefinition: true)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !785, line: 107, size: 1024, elements: !819)
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !818, file: !785, line: 109, baseType: !821, size: 1024)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !822, size: 1024, elements: !831)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !785, line: 101, size: 64, elements: !823)
!823 = !{!824, !830}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !822, file: !785, line: 102, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !826, line: 63, baseType: !827)
!826 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!828 = !DISubroutineType(types: !829)
!829 = !{null, !109, !108}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !822, file: !785, line: 103, baseType: !108, size: 32, offset: 32)
!831 = !{!832}
!832 = !DISubrange(count: 16)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !713, file: !785, line: 424, type: !799, isLocal: true, isDefinition: true, align: 8)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !837, file: !785, line: 493, type: !842, isLocal: true, isDefinition: true, align: 32)
!837 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !785, file: !785, line: 460, type: !838, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !840)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !814}
!840 = !{!841}
!841 = !DILocalVariable(name: "dev", arg: 1, scope: !837, file: !785, line: 460, type: !814)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !843)
!843 = !{!844, !846, !847, !848}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !842, file: !10, line: 55, baseType: !845, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !842, file: !10, line: 57, baseType: !845, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !842, file: !10, line: 59, baseType: !108, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !842, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !837, file: !785, line: 497, type: !842, isLocal: true, isDefinition: true, align: 32)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !837, file: !785, line: 507, type: !842, isLocal: true, isDefinition: true, align: 32)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !837, file: !785, line: 512, type: !842, isLocal: true, isDefinition: true, align: 32)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !837, file: !785, line: 516, type: !842, isLocal: true, isDefinition: true, align: 32)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !837, file: !785, line: 523, type: !842, isLocal: true, isDefinition: true, align: 32)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !837, file: !785, line: 527, type: !842, isLocal: true, isDefinition: true, align: 32)
!861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !862, size: 512, elements: !831)
!862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !297, line: 127, baseType: !716)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !866, file: !871, line: 21, type: !891, isLocal: false, isDefinition: true, align: 16)
!866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !868, splitDebugInlining: false, nameTableKind: None)
!867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!868 = !{!869, !864, !875, !877, !879, !881, !883, !885, !887, !889}
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !866, file: !871, line: 16, type: !872, isLocal: false, isDefinition: true, align: 16)
!871 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 176, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 11)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !866, file: !871, line: 28, type: !786, isLocal: false, isDefinition: true, align: 16)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !866, file: !871, line: 35, type: !786, isLocal: false, isDefinition: true, align: 16)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !866, file: !871, line: 42, type: !786, isLocal: false, isDefinition: true, align: 16)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !866, file: !871, line: 49, type: !786, isLocal: false, isDefinition: true, align: 16)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !866, file: !871, line: 56, type: !786, isLocal: false, isDefinition: true, align: 16)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !866, file: !871, line: 63, type: !786, isLocal: false, isDefinition: true, align: 16)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !866, file: !871, line: 70, type: !786, isLocal: false, isDefinition: true, align: 16)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !866, file: !871, line: 77, type: !786, isLocal: false, isDefinition: true, align: 16)
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !892)
!892 = !{!893}
!893 = !DISubrange(count: 3)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !896, file: !940, line: 398, type: !971, isLocal: true, isDefinition: true)
!896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !898, retainedTypes: !911, globals: !937, splitDebugInlining: false, nameTableKind: None)
!897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!898 = !{!899, !30, !904}
!899 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !900, line: 190, baseType: !32, size: 32, elements: !901)
!900 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!901 = !{!902, !903}
!902 = !DIEnumerator(name: "SUCCESS", value: 0)
!903 = !DIEnumerator(name: "ERROR", value: 1)
!904 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !905, line: 44, baseType: !32, size: 32, elements: !906)
!905 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!906 = !{!907, !908, !909, !910}
!907 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!908 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!909 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!910 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!911 = !{!108, !109, !110, !912, !930, !936}
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 386, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 448, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !914, file: !297, line: 372, baseType: !301, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !914, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !914, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !914, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !914, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !914, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !914, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !914, file: !297, line: 379, baseType: !301, size: 32, offset: 224)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !914, file: !297, line: 380, baseType: !301, size: 32, offset: 256)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !914, file: !297, line: 381, baseType: !301, size: 32, offset: 288)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !914, file: !297, line: 382, baseType: !301, size: 32, offset: 320)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !914, file: !297, line: 383, baseType: !301, size: 32, offset: 352)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !914, file: !297, line: 384, baseType: !301, size: 32, offset: 384)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !914, file: !297, line: 385, baseType: !301, size: 32, offset: 416)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !932, line: 343, size: 64, elements: !933)
!932 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !931, file: !932, line: 344, baseType: !110, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !931, file: !932, line: 345, baseType: !110, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!937 = !{!938, !942, !958, !969, !894}
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !896, file: !940, line: 752, type: !941, isLocal: false, isDefinition: true, align: 16)
!940 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 512, elements: !227)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !896, file: !940, line: 752, type: !944, isLocal: false, isDefinition: true, align: 32)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !946)
!946 = !{!947, !948, !949, !950, !956, !957}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !945, file: !334, line: 380, baseType: !337, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !945, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !945, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !945, file: !334, line: 386, baseType: !951, size: 32, offset: 96)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !952, file: !334, line: 359, baseType: !167, size: 8)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !952, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !945, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !945, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !896, file: !940, line: 752, type: !960, isLocal: true, isDefinition: true, align: 32)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !962)
!962 = !{!963, !968}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !961, file: !325, line: 60, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!109, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !961, file: !325, line: 65, baseType: !967, size: 32, offset: 32)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !896, file: !940, line: 752, type: !952, isLocal: true, isDefinition: true, align: 8)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !905, line: 100, size: 224, elements: !972)
!972 = !{!973, !979, !980, !989, !994, !999, !1005}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !971, file: !905, line: 101, baseType: !974, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !905, line: 76, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!109, !967, !978}
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !905, line: 56, baseType: !108)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !971, file: !905, line: 102, baseType: !974, size: 32, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !971, file: !905, line: 103, baseType: !981, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !905, line: 83, baseType: !982)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!109, !967, !978, !985, !108}
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !905, line: 72, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DISubroutineType(types: !988)
!988 = !{null, !967, !978, !108}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !971, file: !905, line: 104, baseType: !990, size: 32, offset: 96)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !905, line: 79, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{!109, !967, !978, !936}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !971, file: !905, line: 105, baseType: !995, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !905, line: 88, baseType: !996)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DISubroutineType(types: !998)
!998 = !{!904, !967, !978}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !971, file: !905, line: 106, baseType: !1000, size: 32, offset: 160)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !905, line: 92, baseType: !1001)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!109, !967, !978, !1004}
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !905, line: 64, baseType: !108)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !971, file: !905, line: 107, baseType: !1006, size: 32, offset: 192)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !905, line: 96, baseType: !1007)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!109, !967, !978, !108}
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1012, file: !1069, line: 603, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1012 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1013, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1014, globals: !1066, splitDebugInlining: false, nameTableKind: None)
!1013 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1014 = !{!108, !109, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1018, line: 336, size: 160, elements: !1019)
!1018 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1019 = !{!1020, !1040, !1044, !1048, !1061}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1017, file: !1018, line: 365, baseType: !1021, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!109, !1024, !1039}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031, !1037, !1038}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1026, file: !334, line: 380, baseType: !337, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1026, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1026, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1026, file: !334, line: 386, baseType: !1032, size: 32, offset: 96)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1034)
!1034 = !{!1035, !1036}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1033, file: !334, line: 359, baseType: !167, size: 8)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1033, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1026, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1026, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1017, file: !1018, line: 366, baseType: !1041, size: 32, offset: 32)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !1024, !168}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1017, file: !1018, line: 374, baseType: !1045, size: 32, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!109, !1024}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1017, file: !1018, line: 377, baseType: !1049, size: 32, offset: 96)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!109, !1024, !1052}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1018, line: 122, size: 64, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1054, file: !1018, line: 123, baseType: !110, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1054, file: !1018, line: 124, baseType: !167, size: 8, offset: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1054, file: !1018, line: 125, baseType: !167, size: 8, offset: 40)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1054, file: !1018, line: 126, baseType: !167, size: 8, offset: 48)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1054, file: !1018, line: 127, baseType: !167, size: 8, offset: 56)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1017, file: !1018, line: 379, baseType: !1062, size: 32, offset: 128)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!109, !1024, !1065}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1066 = !{!1010, !1067}
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1012, file: !1069, line: 38, type: !1070, isLocal: true, isDefinition: true)
!1069 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1072, file: !325, line: 60, baseType: !1045, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1072, file: !325, line: 65, baseType: !1024, size: 32, offset: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1078, file: !1229, line: 762, type: !1325, isLocal: true, isDefinition: true)
!1078 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1079, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1080, retainedTypes: !1087, globals: !1226, splitDebugInlining: false, nameTableKind: None)
!1079 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1080 = !{!30, !608, !614, !1081, !904}
!1081 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !826, line: 43, baseType: !32, size: 32, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086}
!1083 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1084 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1085 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1086 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1087 = !{!108, !109, !1088, !1152, !1157, !655, !614, !608, !1162, !1163, !110, !1177, !1133, !1185, !1186, !1187}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !609, line: 523, size: 288, elements: !1091)
!1091 = !{!1092, !1111, !1115, !1119, !1123, !1124, !1125, !1129, !1148}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1090, file: !609, line: 524, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!109, !1096, !643, !644}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1109, !1110}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1098, file: !334, line: 380, baseType: !337, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1098, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1098, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1098, file: !334, line: 386, baseType: !1104, size: 32, offset: 96)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1106)
!1106 = !{!1107, !1108}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1105, file: !334, line: 359, baseType: !167, size: 8)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1105, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1098, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1098, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1090, file: !609, line: 530, baseType: !1112, size: 32, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!109, !1096, !649}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1090, file: !609, line: 532, baseType: !1116, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!109, !1096, !655, !650}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1090, file: !609, line: 535, baseType: !1120, size: 32, offset: 96)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!109, !1096, !655}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1090, file: !609, line: 537, baseType: !1120, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1090, file: !609, line: 539, baseType: !1120, size: 32, offset: 160)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1090, file: !609, line: 541, baseType: !1126, size: 32, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!109, !1096, !643, !608, !614}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1090, file: !609, line: 544, baseType: !1130, size: 32, offset: 224)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!109, !1096, !1133, !347}
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !609, line: 478, size: 96, elements: !1135)
!1135 = !{!1136, !1142, !1147}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1134, file: !609, line: 482, baseType: !1137, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !675, line: 33, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !675, line: 29, size: 32, elements: !1139)
!1139 = !{!1140}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1138, file: !675, line: 30, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1134, file: !609, line: 485, baseType: !1143, size: 32, offset: 32)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !609, line: 464, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !1096, !1133, !655}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1134, file: !609, line: 493, baseType: !655, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1090, file: !609, line: 547, baseType: !1149, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 32)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!110, !1096}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !609, line: 428, size: 32, elements: !1155)
!1155 = !{!1156}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1154, file: !609, line: 434, baseType: !655, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !609, line: 441, size: 32, elements: !1160)
!1160 = !{!1161}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1159, file: !609, line: 447, baseType: !655, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 314, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 303, size: 320, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1165, file: !297, line: 305, baseType: !301, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1165, file: !297, line: 306, baseType: !301, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1165, file: !297, line: 307, baseType: !301, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1165, file: !297, line: 308, baseType: !301, size: 32, offset: 96)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1165, file: !297, line: 309, baseType: !301, size: 32, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1165, file: !297, line: 310, baseType: !301, size: 32, offset: 160)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1165, file: !297, line: 311, baseType: !301, size: 32, offset: 192)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1165, file: !297, line: 312, baseType: !301, size: 32, offset: 224)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1165, file: !297, line: 313, baseType: !1176, size: 64, offset: 256)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 64, elements: !162)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !297, line: 325, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 320, size: 192, elements: !1180)
!1180 = !{!1181, !1182, !1183}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1179, file: !297, line: 322, baseType: !301, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1179, file: !297, line: 323, baseType: !301, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1179, file: !297, line: 324, baseType: !1184, size: 128, offset: 64)
!1184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 128, elements: !787)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !905, line: 100, size: 224, elements: !1190)
!1190 = !{!1191, !1196, !1197, !1206, !1211, !1216, !1221}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1189, file: !905, line: 101, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !905, line: 76, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!109, !1096, !978}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1189, file: !905, line: 102, baseType: !1192, size: 32, offset: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1189, file: !905, line: 103, baseType: !1198, size: 32, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !905, line: 83, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!109, !1096, !978, !1202, !108}
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !905, line: 72, baseType: !1203)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{null, !1096, !978, !108}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1189, file: !905, line: 104, baseType: !1207, size: 32, offset: 96)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !905, line: 79, baseType: !1208)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!109, !1096, !978, !936}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1189, file: !905, line: 105, baseType: !1212, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !905, line: 88, baseType: !1213)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!904, !1096, !978}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1189, file: !905, line: 106, baseType: !1217, size: 32, offset: 160)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !905, line: 92, baseType: !1218)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!109, !1096, !978, !1004}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1189, file: !905, line: 107, baseType: !1222, size: 32, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !905, line: 96, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!109, !1096, !978, !108}
!1226 = !{!1227, !1233, !1235, !1245, !1250, !1252, !1254, !1257, !1259, !1261, !1266, !1268, !1270, !1272, !1274, !1276, !1281, !1283, !1285, !1299, !1301, !1303, !1305, !1307, !1309, !1311, !1313, !1315, !1317, !1319, !1076, !1321, !1323, !1336, !1338, !1340, !1342}
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1078, file: !1229, line: 762, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1229 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1231)
!1231 = !{!1232}
!1232 = !DISubrange(count: 8)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1078, file: !1229, line: 762, type: !1097, isLocal: false, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1078, file: !1229, line: 762, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1239)
!1239 = !{!1240, !1244}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1238, file: !325, line: 60, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!109, !1096}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1238, file: !325, line: 65, baseType: !1096, size: 32, offset: 32)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1078, file: !1229, line: 766, type: !1247, isLocal: false, isDefinition: true, align: 16)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 144, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 9)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1078, file: !1229, line: 766, type: !1097, isLocal: false, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1078, file: !1229, line: 766, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1078, file: !1229, line: 770, type: !1256, isLocal: false, isDefinition: true, align: 16)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 96, elements: !264)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1078, file: !1229, line: 770, type: !1097, isLocal: false, isDefinition: true, align: 32)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1078, file: !1229, line: 770, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1078, file: !1229, line: 774, type: !1263, isLocal: false, isDefinition: true, align: 16)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1264)
!1264 = !{!1265}
!1265 = !DISubrange(count: 5)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1078, file: !1229, line: 774, type: !1097, isLocal: false, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1078, file: !1229, line: 774, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1078, file: !1229, line: 778, type: !1263, isLocal: false, isDefinition: true, align: 16)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1078, file: !1229, line: 778, type: !1097, isLocal: false, isDefinition: true, align: 32)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1078, file: !1229, line: 778, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1078, file: !1229, line: 790, type: !1278, isLocal: false, isDefinition: true, align: 16)
!1278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 112, elements: !1279)
!1279 = !{!1280}
!1280 = !DISubrange(count: 7)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1078, file: !1229, line: 790, type: !1097, isLocal: false, isDefinition: true, align: 32)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1078, file: !1229, line: 790, type: !1237, isLocal: true, isDefinition: true, align: 32)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1078, file: !1229, line: 762, type: !1287, isLocal: true, isDefinition: true)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1288, line: 237, size: 128, elements: !1289)
!1288 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1289 = !{!1290, !1291, !1292}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1287, file: !1288, line: 239, baseType: !1159, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1287, file: !1288, line: 241, baseType: !1096, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1287, file: !1288, line: 243, baseType: !1293, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !675, line: 40, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !675, line: 35, size: 64, elements: !1295)
!1295 = !{!1296, !1298}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1294, file: !675, line: 36, baseType: !1297, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1294, file: !675, line: 37, baseType: !1297, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1078, file: !1229, line: 762, type: !1105, isLocal: true, isDefinition: true, align: 8)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1078, file: !1229, line: 766, type: !1287, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1078, file: !1229, line: 766, type: !1105, isLocal: true, isDefinition: true, align: 8)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1078, file: !1229, line: 770, type: !1287, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1078, file: !1229, line: 770, type: !1105, isLocal: true, isDefinition: true, align: 8)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1078, file: !1229, line: 774, type: !1287, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1078, file: !1229, line: 774, type: !1105, isLocal: true, isDefinition: true, align: 8)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1078, file: !1229, line: 778, type: !1287, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1078, file: !1229, line: 778, type: !1105, isLocal: true, isDefinition: true, align: 8)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1078, file: !1229, line: 790, type: !1287, isLocal: true, isDefinition: true)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1078, file: !1229, line: 790, type: !1105, isLocal: true, isDefinition: true, align: 8)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1078, file: !1229, line: 656, type: !1089, isLocal: true, isDefinition: true)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1078, file: !1229, line: 766, type: !1325, isLocal: true, isDefinition: true)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1288, line: 224, size: 160, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1331}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1326, file: !1288, line: 226, baseType: !1154, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1326, file: !1288, line: 228, baseType: !936, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1326, file: !1288, line: 230, baseType: !109, size: 32, offset: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1326, file: !1288, line: 231, baseType: !1332, size: 64, offset: 96)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !932, line: 343, size: 64, elements: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1332, file: !932, line: 344, baseType: !110, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1332, file: !932, line: 345, baseType: !110, size: 32, offset: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1078, file: !1229, line: 770, type: !1325, isLocal: true, isDefinition: true)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1078, file: !1229, line: 774, type: !1325, isLocal: true, isDefinition: true)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1078, file: !1229, line: 778, type: !1325, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1078, file: !1229, line: 790, type: !1325, isLocal: true, isDefinition: true)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1346, file: !1484, line: 1914, type: !1552, isLocal: true, isDefinition: true)
!1346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1348, retainedTypes: !1381, globals: !1481, splitDebugInlining: false, nameTableKind: None)
!1347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1348 = !{!30, !1349, !1356, !1363, !1370, !1376, !904}
!1349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1018, line: 47, baseType: !32, size: 32, elements: !1350)
!1350 = !{!1351, !1352, !1353, !1354, !1355}
!1351 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1352 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1353 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1354 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1355 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1018, line: 75, baseType: !32, size: 32, elements: !1357)
!1357 = !{!1358, !1359, !1360, !1361, !1362}
!1358 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1359 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1360 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1361 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1362 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1018, line: 92, baseType: !32, size: 32, elements: !1364)
!1364 = !{!1365, !1366, !1367, !1368, !1369}
!1365 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1366 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1367 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1368 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1369 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1018, line: 84, baseType: !32, size: 32, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375}
!1372 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1373 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1374 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1375 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1018, line: 107, baseType: !32, size: 32, elements: !1377)
!1377 = !{!1378, !1379, !1380}
!1378 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1379 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1380 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1381 = !{!108, !109, !1382, !168, !167, !1431, !110, !978, !1442, !181}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1018, line: 336, size: 160, elements: !1385)
!1385 = !{!1386, !1405, !1409, !1413, !1426}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1384, file: !1018, line: 365, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!109, !1390, !1039}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1403, !1404}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1392, file: !334, line: 380, baseType: !337, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1392, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1392, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1392, file: !334, line: 386, baseType: !1398, size: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1399, file: !334, line: 359, baseType: !167, size: 8)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1399, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1392, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1392, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1384, file: !1018, line: 366, baseType: !1406, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{null, !1390, !168}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1384, file: !1018, line: 374, baseType: !1410, size: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 32)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!109, !1390}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1384, file: !1018, line: 377, baseType: !1414, size: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!109, !1390, !1417}
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1018, line: 122, size: 64, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424, !1425}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1419, file: !1018, line: 123, baseType: !110, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1419, file: !1018, line: 124, baseType: !167, size: 8, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1419, file: !1018, line: 125, baseType: !167, size: 8, offset: 40)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1419, file: !1018, line: 126, baseType: !167, size: 8, offset: 48)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1419, file: !1018, line: 127, baseType: !167, size: 8, offset: 56)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1384, file: !1018, line: 379, baseType: !1427, size: 32, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!109, !1390, !1430}
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !297, line: 505, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 496, size: 224, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1433, file: !297, line: 498, baseType: !301, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1433, file: !297, line: 499, baseType: !301, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1433, file: !297, line: 500, baseType: !301, size: 32, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1433, file: !297, line: 501, baseType: !301, size: 32, offset: 96)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1433, file: !297, line: 502, baseType: !301, size: 32, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1433, file: !297, line: 503, baseType: !301, size: 32, offset: 160)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1433, file: !297, line: 504, baseType: !301, size: 32, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1444)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !905, line: 100, size: 224, elements: !1445)
!1445 = !{!1446, !1451, !1452, !1461, !1466, !1471, !1476}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1444, file: !905, line: 101, baseType: !1447, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !905, line: 76, baseType: !1448)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!109, !1390, !978}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1444, file: !905, line: 102, baseType: !1447, size: 32, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1444, file: !905, line: 103, baseType: !1453, size: 32, offset: 64)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !905, line: 83, baseType: !1454)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!109, !1390, !978, !1457, !108}
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !905, line: 72, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !1390, !978, !108}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1444, file: !905, line: 104, baseType: !1462, size: 32, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !905, line: 79, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!109, !1390, !978, !936}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1444, file: !905, line: 105, baseType: !1467, size: 32, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !905, line: 88, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!904, !1390, !978}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1444, file: !905, line: 106, baseType: !1472, size: 32, offset: 160)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !905, line: 92, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!109, !1390, !978, !1004}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1444, file: !905, line: 107, baseType: !1477, size: 32, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !905, line: 96, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!109, !1390, !978, !108}
!1481 = !{!1482, !1485, !1487, !1494, !1496, !1498, !1500, !1502, !1344, !1504, !1512, !1535, !1538, !1541, !1543, !1550, !1567, !1569, !1571, !1573, !1575}
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1484 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1391, isLocal: false, isDefinition: true, align: 32)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1489, isLocal: true, isDefinition: true, align: 32)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1490, file: !325, line: 60, baseType: !1410, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1490, file: !325, line: 65, baseType: !1390, size: 32, offset: 32)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1391, isLocal: false, isDefinition: true, align: 32)
!1498 = !DIGlobalVariableExpression(var: !1499, expr: !DIExpression())
!1499 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1489, isLocal: true, isDefinition: true, align: 32)
!1500 = !DIGlobalVariableExpression(var: !1501, expr: !DIExpression())
!1501 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1399, isLocal: true, isDefinition: true, align: 8)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1399, isLocal: true, isDefinition: true, align: 8)
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1346, file: !1484, line: 1914, type: !1506, isLocal: true, isDefinition: true)
!1506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1507, size: 64, elements: !538)
!1507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !932, line: 343, size: 64, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1508, file: !932, line: 344, baseType: !110, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1508, file: !932, line: 345, baseType: !110, size: 32, offset: 32)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1514, isLocal: true, isDefinition: true)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1516, line: 60, size: 64, elements: !1517)
!1516 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1517 = !{!1518, !1534}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1515, file: !1516, line: 69, baseType: !1519, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1516, line: 50, size: 64, elements: !1522)
!1522 = !{!1523, !1532, !1533}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1521, file: !1516, line: 52, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1526)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1527, line: 37, baseType: !1528)
!1527 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1527, line: 32, size: 64, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1528, file: !1527, line: 34, baseType: !110, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1528, file: !1527, line: 36, baseType: !110, size: 32, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1521, file: !1516, line: 54, baseType: !167, size: 8, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1521, file: !1516, line: 56, baseType: !167, size: 8, offset: 40)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1515, file: !1516, line: 71, baseType: !167, size: 8, offset: 32)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1537, isLocal: true, isDefinition: true)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1520, size: 64, elements: !538)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1346, file: !1484, line: 1914, type: !1540, isLocal: true, isDefinition: true)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1525, size: 128, elements: !162)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1346, file: !1484, line: 1539, type: !1383, isLocal: true, isDefinition: true)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1346, file: !1484, line: 1914, type: !1545, isLocal: true, isDefinition: true)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1546, line: 74, size: 64, elements: !1547)
!1546 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1545, file: !1546, line: 76, baseType: !110, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1545, file: !1546, line: 78, baseType: !1390, size: 32, offset: 32)
!1550 = !DIGlobalVariableExpression(var: !1551, expr: !DIExpression())
!1551 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1346, file: !1484, line: 1914, type: !1552, isLocal: true, isDefinition: true)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1546, line: 22, size: 224, elements: !1554)
!1554 = !{!1555, !1556, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1553, file: !1546, line: 24, baseType: !1431, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1553, file: !1546, line: 26, baseType: !1557, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1553, file: !1546, line: 28, baseType: !235, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1553, file: !1546, line: 30, baseType: !347, size: 8, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1553, file: !1546, line: 32, baseType: !109, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1553, file: !1546, line: 34, baseType: !347, size: 8, offset: 160)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1553, file: !1546, line: 36, baseType: !347, size: 8, offset: 168)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1553, file: !1546, line: 38, baseType: !347, size: 8, offset: 176)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1553, file: !1546, line: 40, baseType: !347, size: 8, offset: 184)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1553, file: !1546, line: 41, baseType: !1566, size: 32, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1346, file: !1484, line: 1914, type: !1506, isLocal: true, isDefinition: true)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1514, isLocal: true, isDefinition: true)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1537, isLocal: true, isDefinition: true)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1346, file: !1484, line: 1914, type: !1540, isLocal: true, isDefinition: true)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1346, file: !1484, line: 1914, type: !1545, isLocal: true, isDefinition: true)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1579, file: !1657, line: 65, type: !301, isLocal: true, isDefinition: true)
!1579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1581, retainedTypes: !1582, globals: !1654, splitDebugInlining: false, nameTableKind: None)
!1580 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1581 = !{!716}
!1582 = !{!104, !1583, !845, !167, !110, !1591, !1622}
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !549, line: 712, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 706, size: 128, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1585, file: !549, line: 708, baseType: !301, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1585, file: !549, line: 709, baseType: !301, size: 32, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1585, file: !549, line: 710, baseType: !301, size: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1585, file: !549, line: 711, baseType: !553, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !549, line: 360, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 345, size: 28704, elements: !1594)
!1594 = !{!1595, !1597, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1612, !1617, !1621}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1593, file: !549, line: 347, baseType: !1596, size: 256)
!1596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 256, elements: !1231)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1593, file: !549, line: 348, baseType: !1598, size: 768, offset: 256)
!1598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1599)
!1599 = !{!1600}
!1600 = !DISubrange(count: 24)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1593, file: !549, line: 349, baseType: !1596, size: 256, offset: 1024)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1593, file: !549, line: 350, baseType: !1598, size: 768, offset: 1280)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1593, file: !549, line: 351, baseType: !1596, size: 256, offset: 2048)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1593, file: !549, line: 352, baseType: !1598, size: 768, offset: 2304)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1593, file: !549, line: 353, baseType: !1596, size: 256, offset: 3072)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1593, file: !549, line: 354, baseType: !1598, size: 768, offset: 3328)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1593, file: !549, line: 355, baseType: !1596, size: 256, offset: 4096)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1593, file: !549, line: 356, baseType: !1609, size: 1792, offset: 4352)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 56)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1593, file: !549, line: 357, baseType: !1613, size: 1920, offset: 6144)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1614, size: 1920, elements: !1615)
!1614 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1615 = !{!1616}
!1616 = !DISubrange(count: 240)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1593, file: !549, line: 358, baseType: !1618, size: 20608, offset: 8064)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1619)
!1619 = !{!1620}
!1620 = !DISubrange(count: 644)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1593, file: !549, line: 359, baseType: !301, size: 32, offset: 28672)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !1625)
!1625 = !{!1626, !1627, !1628, !1629, !1630, !1631, !1632, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1645, !1646, !1647, !1649, !1651, !1653}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1624, file: !549, line: 381, baseType: !553, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1624, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1624, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1624, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1624, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1624, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1624, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1614, size: 96, elements: !1634)
!1634 = !{!1635}
!1635 = !DISubrange(count: 12)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1624, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1624, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1624, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1624, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1624, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1624, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1624, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1624, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 64, elements: !162)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1624, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1624, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1624, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 128, elements: !787)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1624, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 160, elements: !1264)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1624, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1264)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1624, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!1654 = !{!1655, !1681, !1686, !1688, !1690, !1577}
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1579, file: !1657, line: 285, type: !1658, isLocal: true, isDefinition: true, align: 32)
!1657 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1660)
!1660 = !{!1661, !1680}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1659, file: !325, line: 60, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!109, !1665}
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1678, !1679}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1667, file: !334, line: 380, baseType: !337, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1667, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1667, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1667, file: !334, line: 386, baseType: !1673, size: 32, offset: 96)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1675)
!1675 = !{!1676, !1677}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1674, file: !334, line: 359, baseType: !167, size: 8)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1674, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1667, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1667, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1659, file: !325, line: 65, baseType: !1665, size: 32, offset: 32)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "lock", scope: !1579, file: !1657, line: 34, type: !1683, isLocal: true, isDefinition: true)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !1684)
!1684 = !{!1685}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1683, file: !254, line: 52, baseType: !22, size: 32)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "last_load", scope: !1579, file: !1657, line: 36, type: !110, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1579, file: !1657, line: 48, type: !110, isLocal: true, isDefinition: true)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1579, file: !1657, line: 54, type: !110, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1694, file: !1775, line: 22, type: !1777, isLocal: true, isDefinition: true)
!1694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !607, retainedTypes: !1696, globals: !1772, splitDebugInlining: false, nameTableKind: None)
!1695 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1696 = !{!1697, !1761, !1766, !655, !614, !608, !1771, !108}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !609, line: 523, size: 288, elements: !1700)
!1700 = !{!1701, !1720, !1724, !1728, !1732, !1733, !1734, !1738, !1757}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1699, file: !609, line: 524, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!109, !1705, !643, !644}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1718, !1719}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1707, file: !334, line: 380, baseType: !337, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1707, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1707, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1707, file: !334, line: 386, baseType: !1713, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1714, file: !334, line: 359, baseType: !167, size: 8)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1714, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1707, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1707, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1699, file: !609, line: 530, baseType: !1721, size: 32, offset: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!109, !1705, !649}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1699, file: !609, line: 532, baseType: !1725, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!109, !1705, !655, !650}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1699, file: !609, line: 535, baseType: !1729, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!109, !1705, !655}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1699, file: !609, line: 537, baseType: !1729, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1699, file: !609, line: 539, baseType: !1729, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1699, file: !609, line: 541, baseType: !1735, size: 32, offset: 192)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!109, !1705, !643, !608, !614}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1699, file: !609, line: 544, baseType: !1739, size: 32, offset: 224)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!109, !1705, !1742, !347}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !609, line: 478, size: 96, elements: !1744)
!1744 = !{!1745, !1751, !1756}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1743, file: !609, line: 482, baseType: !1746, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !675, line: 33, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !675, line: 29, size: 32, elements: !1748)
!1748 = !{!1749}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1747, file: !675, line: 30, baseType: !1750, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1743, file: !609, line: 485, baseType: !1752, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !609, line: 464, baseType: !1753)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 32)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !1705, !1742, !655}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1743, file: !609, line: 493, baseType: !655, size: 32, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1699, file: !609, line: 547, baseType: !1758, size: 32, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!110, !1705}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !609, line: 428, size: 32, elements: !1764)
!1764 = !{!1765}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1763, file: !609, line: 434, baseType: !655, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !609, line: 441, size: 32, elements: !1769)
!1769 = !{!1770}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1768, file: !609, line: 447, baseType: !655, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1772 = !{!1773, !1692}
!1773 = !DIGlobalVariableExpression(var: !1774, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1774 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1694, file: !1775, line: 37, type: !1776, isLocal: true, isDefinition: true)
!1775 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1778, size: 352, elements: !873)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1781, file: !1805, line: 129, type: !1813, isLocal: false, isDefinition: true)
!1781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1783, globals: !1802, splitDebugInlining: false, nameTableKind: None)
!1782 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1783 = !{!1784}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 386, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 448, elements: !1787)
!1787 = !{!1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1786, file: !297, line: 372, baseType: !301, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1786, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1786, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1786, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1786, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1786, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1786, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1786, file: !297, line: 379, baseType: !301, size: 32, offset: 224)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1786, file: !297, line: 380, baseType: !301, size: 32, offset: 256)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1786, file: !297, line: 381, baseType: !301, size: 32, offset: 288)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1786, file: !297, line: 382, baseType: !301, size: 32, offset: 320)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1786, file: !297, line: 383, baseType: !301, size: 32, offset: 352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1786, file: !297, line: 384, baseType: !301, size: 32, offset: 384)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1786, file: !297, line: 385, baseType: !301, size: 32, offset: 416)
!1802 = !{!1803, !1806, !1810, !1779}
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1781, file: !1805, line: 126, type: !110, isLocal: false, isDefinition: true)
!1805 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1781, file: !1805, line: 127, type: !1808, isLocal: false, isDefinition: true)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 72, elements: !1248)
!1809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1781, file: !1805, line: 128, type: !1812, isLocal: false, isDefinition: true)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 128, elements: !831)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 64, elements: !1231)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1816, file: !1819, line: 23, type: !1820, isLocal: false, isDefinition: true)
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !1818, splitDebugInlining: false, nameTableKind: None)
!1817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1818 = !{!1814}
!1819 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1823, file: !1827, line: 86, type: !2101, isLocal: false, isDefinition: true, align: 512)
!1823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1825, retainedTypes: !1834, globals: !1908, splitDebugInlining: false, nameTableKind: None)
!1824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!1825 = !{!1826, !30, !716}
!1826 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1827, line: 63, baseType: !32, size: 32, elements: !1828)
!1827 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1828 = !{!1829, !1830, !1831, !1832, !1833}
!1829 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1830 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1831 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1832 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1833 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1834 = !{!235, !108, !109, !1835, !1185, !110, !1866, !845, !167, !1891}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1837)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1838, line: 51, size: 64, elements: !1839)
!1838 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1839 = !{!1840, !1861}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1837, file: !1838, line: 52, baseType: !1841, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1838, line: 38, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!109, !1845, !1860, !181}
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1847)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1848)
!1848 = !{!1849, !1850, !1851, !1852, !1858, !1859}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1847, file: !334, line: 380, baseType: !337, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1847, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1847, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1847, file: !334, line: 386, baseType: !1853, size: 32, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1855)
!1855 = !{!1856, !1857}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1854, file: !334, line: 359, baseType: !167, size: 8)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1854, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1847, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1847, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1837, file: !1838, line: 53, baseType: !1862, size: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1838, line: 47, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!109, !1845, !1860, !181, !110}
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !1869)
!1869 = !{!1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1868, file: !549, line: 381, baseType: !553, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1868, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1868, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1868, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1868, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1868, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1868, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1868, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1868, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1868, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1868, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1868, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1868, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1868, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1868, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1868, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1868, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1868, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1868, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1868, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1868, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !549, line: 360, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 345, size: 28704, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1893, file: !549, line: 347, baseType: !1596, size: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1893, file: !549, line: 348, baseType: !1598, size: 768, offset: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1893, file: !549, line: 349, baseType: !1596, size: 256, offset: 1024)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1893, file: !549, line: 350, baseType: !1598, size: 768, offset: 1280)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1893, file: !549, line: 351, baseType: !1596, size: 256, offset: 2048)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1893, file: !549, line: 352, baseType: !1598, size: 768, offset: 2304)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1893, file: !549, line: 353, baseType: !1596, size: 256, offset: 3072)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1893, file: !549, line: 354, baseType: !1598, size: 768, offset: 3328)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1893, file: !549, line: 355, baseType: !1596, size: 256, offset: 4096)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1893, file: !549, line: 356, baseType: !1609, size: 1792, offset: 4352)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1893, file: !549, line: 357, baseType: !1613, size: 1920, offset: 6144)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1893, file: !549, line: 358, baseType: !1618, size: 20608, offset: 8064)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1893, file: !549, line: 359, baseType: !301, size: 32, offset: 28672)
!1908 = !{!1909, !2058, !2066, !2068, !1821, !2071, !2073, !2078}
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "_kernel", scope: !1823, file: !1827, line: 40, type: !1911, isLocal: false, isDefinition: true)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !123, line: 158, size: 384, elements: !1912)
!1912 = !{!1913, !2038, !2057}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1911, file: !123, line: 159, baseType: !1914, size: 192)
!1914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1915, size: 192, elements: !538)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !123, line: 100, size: 192, elements: !1916)
!1916 = !{!1917, !1918, !1919, !2031, !2032, !2033, !2034}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1915, file: !123, line: 102, baseType: !110, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1915, file: !123, line: 105, baseType: !1185, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1915, file: !123, line: 108, baseType: !1920, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !1922)
!1922 = !{!1923, !1981, !1993, !1994, !1995, !2002, !2003, !2004, !2005, !2011, !2026}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1921, file: !145, line: 247, baseType: !1924, size: 384)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !1925)
!1925 = !{!1926, !1950, !1957, !1958, !1959, !1968, !1969, !1970}
!1926 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !145, line: 60, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !145, line: 60, size: 64, elements: !1928)
!1928 = !{!1929, !1944}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1927, file: !145, line: 61, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !1932)
!1932 = !{!1933, !1939}
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1931, file: !128, line: 38, baseType: !1934, size: 32)
!1934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1931, file: !128, line: 38, size: 32, elements: !1935)
!1935 = !{!1936, !1938}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1934, file: !128, line: 39, baseType: !1937, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1934, file: !128, line: 40, baseType: !1937, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, scope: !1931, file: !128, line: 42, baseType: !1940, size: 32, offset: 32)
!1940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1931, file: !128, line: 42, size: 32, elements: !1941)
!1941 = !{!1942, !1943}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1940, file: !128, line: 43, baseType: !1937, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1940, file: !128, line: 44, baseType: !1937, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1927, file: !145, line: 62, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !1946)
!1946 = !{!1947}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1945, file: !157, line: 50, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1949, size: 64, elements: !162)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1924, file: !145, line: 68, baseType: !1951, size: 32, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !1954)
!1954 = !{!1955}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1953, file: !123, line: 232, baseType: !1956, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !1931)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1924, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1924, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!1959 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !145, line: 90, baseType: !1960, size: 16, offset: 112)
!1960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1924, file: !145, line: 90, size: 16, elements: !1961)
!1961 = !{!1962, !1967}
!1962 = !DIDerivedType(tag: DW_TAG_member, scope: !1960, file: !145, line: 91, baseType: !1963, size: 16)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1960, file: !145, line: 91, size: 16, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1963, file: !145, line: 96, baseType: !177, size: 8)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1963, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1960, file: !145, line: 100, baseType: !181, size: 16)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1924, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1924, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1924, file: !145, line: 131, baseType: !1971, size: 192, offset: 192)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !1972)
!1972 = !{!1973, !1974, !1980}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1971, file: !123, line: 245, baseType: !1930, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1971, file: !123, line: 246, baseType: !1975, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{null, !1979}
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1971, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1921, file: !145, line: 250, baseType: !1982, size: 288, offset: 384)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1982, file: !198, line: 26, baseType: !110, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1982, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1982, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1982, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1982, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1982, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1982, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1982, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1982, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1921, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1921, file: !145, line: 256, baseType: !1952, size: 64, offset: 704)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1921, file: !145, line: 271, baseType: !1996, size: 128, offset: 768)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !1996, file: !145, line: 35, baseType: !215, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !1996, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !1996, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !1996, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !1921, file: !145, line: 274, baseType: !1920, size: 32, offset: 896)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1921, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1921, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1921, file: !145, line: 300, baseType: !2006, size: 96, offset: 1216)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2007)
!2007 = !{!2008, !2009, !2010}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2006, file: !145, line: 153, baseType: !22, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2006, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2006, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1921, file: !145, line: 325, baseType: !2012, size: 32, offset: 1312)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2014)
!2014 = !{!2015, !2021, !2022}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2013, file: !119, line: 5074, baseType: !2016, size: 96)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2017)
!2017 = !{!2018, !2019, !2020}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2016, file: !244, line: 57, baseType: !247, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2016, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2016, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2013, file: !119, line: 5075, baseType: !1952, size: 64, offset: 96)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2013, file: !119, line: 5076, baseType: !2023, size: 32, offset: 160)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2024)
!2024 = !{!2025}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2023, file: !254, line: 52, baseType: !22, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1921, file: !145, line: 343, baseType: !2027, size: 64, offset: 1344)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2028)
!2028 = !{!2029, !2030}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2027, file: !198, line: 63, baseType: !110, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2027, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1915, file: !123, line: 111, baseType: !1920, size: 32, offset: 96)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1915, file: !123, line: 124, baseType: !109, size: 32, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1915, file: !123, line: 127, baseType: !167, size: 8, offset: 160)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1915, file: !123, line: 153, baseType: !2035, offset: 168)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2036, line: 33, elements: !2037)
!2036 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2037 = !{}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1911, file: !123, line: 170, baseType: !2039, size: 160, offset: 192)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !2040)
!2040 = !{!2041, !2042}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2039, file: !123, line: 86, baseType: !1920, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2039, file: !123, line: 92, baseType: !2043, size: 128, offset: 32)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2044, line: 37, size: 128, elements: !2045)
!2044 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2045 = !{!2046, !2056}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !2043, file: !2044, line: 38, baseType: !2047, size: 96)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !2048)
!2048 = !{!2049, !2050, !2055}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2047, file: !157, line: 84, baseType: !1949, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !2047, file: !157, line: 85, baseType: !2051, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !2052)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 32)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!347, !1949, !1949}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !2047, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !2043, file: !2044, line: 39, baseType: !109, size: 32, offset: 96)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1911, file: !123, line: 188, baseType: !1920, size: 32, offset: 352)
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1823, file: !1827, line: 43, type: !2060, isLocal: false, isDefinition: true, align: 512)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 8704, elements: !2064)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !2062)
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2061, file: !273, line: 48, baseType: !226, size: 8)
!2064 = !{!2065}
!2065 = !DISubrange(count: 1088)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1823, file: !1827, line: 44, type: !1921, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1823, file: !1827, line: 48, type: !2070, isLocal: false, isDefinition: true)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1921, size: 1408, elements: !538)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1823, file: !1827, line: 217, type: !347, isLocal: false, isDefinition: true)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1823, file: !1827, line: 50, type: !2075, isLocal: true, isDefinition: true, align: 512)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 2560, elements: !2076)
!2076 = !{!539, !2077}
!2077 = !DISubrange(count: 320)
!2078 = !DIGlobalVariableExpression(var: !2079, expr: !DIExpression())
!2079 = distinct !DIGlobalVariable(name: "levels", scope: !2080, file: !1827, line: 232, type: !2100, isLocal: true, isDefinition: true)
!2080 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1827, file: !1827, line: 230, type: !2081, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !2083)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !1826}
!2083 = !{!2084, !2085, !2095, !2099}
!2084 = !DILocalVariable(name: "level", arg: 1, scope: !2080, file: !1827, line: 230, type: !1826)
!2085 = !DILocalVariable(name: "entry", scope: !2080, file: !1827, line: 244, type: !2086)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2089)
!2089 = !{!2090, !2094}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2088, file: !325, line: 60, baseType: !2091, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!109, !1845}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2088, file: !325, line: 65, baseType: !1845, size: 32, offset: 32)
!2095 = !DILocalVariable(name: "dev", scope: !2096, file: !1827, line: 247, type: !1845)
!2096 = distinct !DILexicalBlock(scope: !2097, file: !1827, line: 246, column: 64)
!2097 = distinct !DILexicalBlock(scope: !2098, file: !1827, line: 246, column: 2)
!2098 = distinct !DILexicalBlock(scope: !2080, file: !1827, line: 246, column: 2)
!2099 = !DILocalVariable(name: "rc", scope: !2096, file: !1827, line: 248, type: !109)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2086, size: 192, elements: !264)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 16896, elements: !2102)
!2102 = !{!539, !277}
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "z_thread_monitor_lock", scope: !2105, file: !2127, line: 39, type: !2220, isLocal: true, isDefinition: true)
!2105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2107, globals: !2123, splitDebugInlining: false, nameTableKind: None)
!2106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2107 = !{!108, !337, !104, !167, !22, !109, !2108, !24, !235, !1185, !110, !111}
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2111)
!2111 = !{!2112, !2118}
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !2110, file: !128, line: 38, baseType: !2113, size: 32)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2110, file: !128, line: 38, size: 32, elements: !2114)
!2114 = !{!2115, !2117}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2113, file: !128, line: 39, baseType: !2116, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2113, file: !128, line: 40, baseType: !2116, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2110, file: !128, line: 42, baseType: !2119, size: 32, offset: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2110, file: !128, line: 42, size: 32, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2119, file: !128, line: 43, baseType: !2116, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2119, file: !128, line: 44, baseType: !2116, size: 32)
!2123 = !{!2124, !2238, !2103}
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(name: "states_str", scope: !2126, file: !2127, line: 276, type: !2237, isLocal: true, isDefinition: true)
!2126 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2127, file: !2127, line: 271, type: !2128, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !2228)
!2127 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!337, !2130, !1185, !235}
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2131)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 32)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2133)
!2133 = !{!2134, !2178, !2190, !2191, !2192, !2199, !2200, !2201, !2202, !2208, !2223}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2132, file: !145, line: 247, baseType: !2135, size: 384)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2136)
!2136 = !{!2137, !2147, !2154, !2155, !2156, !2165, !2166, !2167}
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2135, file: !145, line: 60, baseType: !2138, size: 64)
!2138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2135, file: !145, line: 60, size: 64, elements: !2139)
!2139 = !{!2140, !2141}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2138, file: !145, line: 61, baseType: !2109, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2138, file: !145, line: 62, baseType: !2142, size: 64)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2143)
!2143 = !{!2144}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2142, file: !157, line: 50, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 64, elements: !162)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2135, file: !145, line: 68, baseType: !2148, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2151)
!2151 = !{!2152}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2150, file: !123, line: 232, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2110)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2135, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2135, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2156 = !DIDerivedType(tag: DW_TAG_member, scope: !2135, file: !145, line: 90, baseType: !2157, size: 16, offset: 112)
!2157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2135, file: !145, line: 90, size: 16, elements: !2158)
!2158 = !{!2159, !2164}
!2159 = !DIDerivedType(tag: DW_TAG_member, scope: !2157, file: !145, line: 91, baseType: !2160, size: 16)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2157, file: !145, line: 91, size: 16, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2160, file: !145, line: 96, baseType: !177, size: 8)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2160, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2157, file: !145, line: 100, baseType: !181, size: 16)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2135, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2135, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2135, file: !145, line: 131, baseType: !2168, size: 192, offset: 192)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2169)
!2169 = !{!2170, !2171, !2177}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2168, file: !123, line: 245, baseType: !2109, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2168, file: !123, line: 246, baseType: !2172, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2173)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !2176}
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2168, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2132, file: !145, line: 250, baseType: !2179, size: 288, offset: 384)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2180)
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2179, file: !198, line: 26, baseType: !110, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2179, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2179, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2179, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2179, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2179, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2179, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2179, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2179, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2132, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2132, file: !145, line: 256, baseType: !2149, size: 64, offset: 704)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2132, file: !145, line: 271, baseType: !2193, size: 128, offset: 768)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2193, file: !145, line: 35, baseType: !215, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2193, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2193, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2193, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2132, file: !145, line: 274, baseType: !2131, size: 32, offset: 896)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2132, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2132, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2132, file: !145, line: 300, baseType: !2203, size: 96, offset: 1216)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2204)
!2204 = !{!2205, !2206, !2207}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2203, file: !145, line: 153, baseType: !22, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2203, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2203, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2132, file: !145, line: 325, baseType: !2209, size: 32, offset: 1312)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2211)
!2211 = !{!2212, !2218, !2219}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2210, file: !119, line: 5074, baseType: !2213, size: 96)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2214)
!2214 = !{!2215, !2216, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2213, file: !244, line: 57, baseType: !247, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2213, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2213, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2210, file: !119, line: 5075, baseType: !2149, size: 64, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2210, file: !119, line: 5076, baseType: !2220, size: 32, offset: 160)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2221)
!2221 = !{!2222}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2220, file: !254, line: 52, baseType: !22, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2132, file: !145, line: 343, baseType: !2224, size: 64, offset: 1344)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2225)
!2225 = !{!2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2224, file: !198, line: 63, baseType: !110, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2224, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2228 = !{!2229, !2230, !2231, !2232, !2233, !2234, !2235}
!2229 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2126, file: !2127, line: 271, type: !2130)
!2230 = !DILocalVariable(name: "buf", arg: 2, scope: !2126, file: !2127, line: 271, type: !1185)
!2231 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2126, file: !2127, line: 271, type: !235)
!2232 = !DILocalVariable(name: "off", scope: !2126, file: !2127, line: 273, type: !235)
!2233 = !DILocalVariable(name: "bit", scope: !2126, file: !2127, line: 274, type: !167)
!2234 = !DILocalVariable(name: "thread_state", scope: !2126, file: !2127, line: 275, type: !167)
!2235 = !DILocalVariable(name: "index", scope: !2236, file: !2127, line: 293, type: !167)
!2236 = distinct !DILexicalBlock(scope: !2126, file: !2127, line: 293, column: 2)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1231)
!2238 = !DIGlobalVariableExpression(var: !2239, expr: !DIExpression())
!2239 = distinct !DIGlobalVariable(name: "states_sz", scope: !2126, file: !2127, line: 279, type: !2240, isLocal: true, isDefinition: true)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1776, size: 256, elements: !1231)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "lock", scope: !2243, file: !2359, line: 47, type: !2350, isLocal: true, isDefinition: true)
!2243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2245, globals: !2358, splitDebugInlining: false, nameTableKind: None)
!2244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2245 = !{!347, !108, !109, !2246, !2261}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2249)
!2249 = !{!2250, !2256}
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !128, line: 38, baseType: !2251, size: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !128, line: 38, size: 32, elements: !2252)
!2252 = !{!2253, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2251, file: !128, line: 39, baseType: !2254, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2251, file: !128, line: 40, baseType: !2254, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !128, line: 42, baseType: !2257, size: 32, offset: 32)
!2257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !128, line: 42, size: 32, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2257, file: !128, line: 43, baseType: !2254, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2257, file: !128, line: 44, baseType: !2254, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2263)
!2263 = !{!2264, !2308, !2320, !2321, !2322, !2329, !2330, !2331, !2332, !2338, !2353}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2262, file: !145, line: 247, baseType: !2265, size: 384)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2266)
!2266 = !{!2267, !2277, !2284, !2285, !2286, !2295, !2296, !2297}
!2267 = !DIDerivedType(tag: DW_TAG_member, scope: !2265, file: !145, line: 60, baseType: !2268, size: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2265, file: !145, line: 60, size: 64, elements: !2269)
!2269 = !{!2270, !2271}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2268, file: !145, line: 61, baseType: !2247, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2268, file: !145, line: 62, baseType: !2272, size: 64)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2272, file: !157, line: 50, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2276, size: 64, elements: !162)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2265, file: !145, line: 68, baseType: !2278, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2280)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2281)
!2281 = !{!2282}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2280, file: !123, line: 232, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2248)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2265, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2265, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2286 = !DIDerivedType(tag: DW_TAG_member, scope: !2265, file: !145, line: 90, baseType: !2287, size: 16, offset: 112)
!2287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2265, file: !145, line: 90, size: 16, elements: !2288)
!2288 = !{!2289, !2294}
!2289 = !DIDerivedType(tag: DW_TAG_member, scope: !2287, file: !145, line: 91, baseType: !2290, size: 16)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2287, file: !145, line: 91, size: 16, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2290, file: !145, line: 96, baseType: !177, size: 8)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2290, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2287, file: !145, line: 100, baseType: !181, size: 16)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2265, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2265, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2265, file: !145, line: 131, baseType: !2298, size: 192, offset: 192)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2299)
!2299 = !{!2300, !2301, !2307}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2298, file: !123, line: 245, baseType: !2247, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2298, file: !123, line: 246, baseType: !2302, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2303)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 32)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{null, !2306}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2298, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2262, file: !145, line: 250, baseType: !2309, size: 288, offset: 384)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2310)
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2309, file: !198, line: 26, baseType: !110, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2309, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2309, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2309, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2309, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2309, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2309, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2309, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2309, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2262, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2262, file: !145, line: 256, baseType: !2279, size: 64, offset: 704)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2262, file: !145, line: 271, baseType: !2323, size: 128, offset: 768)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2324)
!2324 = !{!2325, !2326, !2327, !2328}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2323, file: !145, line: 35, baseType: !215, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2323, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2323, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2323, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2262, file: !145, line: 274, baseType: !2261, size: 32, offset: 896)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2262, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2262, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2262, file: !145, line: 300, baseType: !2333, size: 96, offset: 1216)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2334)
!2334 = !{!2335, !2336, !2337}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2333, file: !145, line: 153, baseType: !22, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2333, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2333, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2262, file: !145, line: 325, baseType: !2339, size: 32, offset: 1312)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2341)
!2341 = !{!2342, !2348, !2349}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2340, file: !119, line: 5074, baseType: !2343, size: 96)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2344)
!2344 = !{!2345, !2346, !2347}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2343, file: !244, line: 57, baseType: !247, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2343, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2343, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2340, file: !119, line: 5075, baseType: !2279, size: 64, offset: 96)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2340, file: !119, line: 5076, baseType: !2350, size: 32, offset: 160)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2351)
!2351 = !{!2352}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2350, file: !254, line: 52, baseType: !22, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2262, file: !145, line: 343, baseType: !2354, size: 64, offset: 1344)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2355)
!2355 = !{!2356, !2357}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2354, file: !198, line: 63, baseType: !110, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2354, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2358 = !{!2241}
!2359 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2362, file: !2480, line: 56, type: !2468, isLocal: false, isDefinition: true)
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2364, globals: !2477, splitDebugInlining: false, nameTableKind: None)
!2363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2364 = !{!2365, !1185, !108, !2476, !1860, !104, !845, !109, !110, !111}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2367)
!2367 = !{!2368, !2426, !2438, !2439, !2440, !2447, !2448, !2449, !2450, !2456, !2471}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2366, file: !145, line: 247, baseType: !2369, size: 384)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2370)
!2370 = !{!2371, !2395, !2402, !2403, !2404, !2413, !2414, !2415}
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2369, file: !145, line: 60, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2369, file: !145, line: 60, size: 64, elements: !2373)
!2373 = !{!2374, !2389}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2372, file: !145, line: 61, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2377)
!2377 = !{!2378, !2384}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !128, line: 38, baseType: !2379, size: 32)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !128, line: 38, size: 32, elements: !2380)
!2380 = !{!2381, !2383}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2379, file: !128, line: 39, baseType: !2382, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2379, file: !128, line: 40, baseType: !2382, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !128, line: 42, baseType: !2385, size: 32, offset: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !128, line: 42, size: 32, elements: !2386)
!2386 = !{!2387, !2388}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2385, file: !128, line: 43, baseType: !2382, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2385, file: !128, line: 44, baseType: !2382, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2372, file: !145, line: 62, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2391)
!2391 = !{!2392}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2390, file: !157, line: 50, baseType: !2393, size: 64)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2394, size: 64, elements: !162)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2369, file: !145, line: 68, baseType: !2396, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2399)
!2399 = !{!2400}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2398, file: !123, line: 232, baseType: !2401, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2376)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2369, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2369, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2369, file: !145, line: 90, baseType: !2405, size: 16, offset: 112)
!2405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2369, file: !145, line: 90, size: 16, elements: !2406)
!2406 = !{!2407, !2412}
!2407 = !DIDerivedType(tag: DW_TAG_member, scope: !2405, file: !145, line: 91, baseType: !2408, size: 16)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2405, file: !145, line: 91, size: 16, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2408, file: !145, line: 96, baseType: !177, size: 8)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2408, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2405, file: !145, line: 100, baseType: !181, size: 16)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2369, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2369, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2369, file: !145, line: 131, baseType: !2416, size: 192, offset: 192)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2417)
!2417 = !{!2418, !2419, !2425}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2416, file: !123, line: 245, baseType: !2375, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2416, file: !123, line: 246, baseType: !2420, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2421)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2416, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2366, file: !145, line: 250, baseType: !2427, size: 288, offset: 384)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2427, file: !198, line: 26, baseType: !110, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2427, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2427, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2427, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2427, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2427, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2427, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2427, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2427, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2366, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2366, file: !145, line: 256, baseType: !2397, size: 64, offset: 704)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2366, file: !145, line: 271, baseType: !2441, size: 128, offset: 768)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2441, file: !145, line: 35, baseType: !215, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2441, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2441, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2441, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2366, file: !145, line: 274, baseType: !2365, size: 32, offset: 896)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2366, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2366, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2366, file: !145, line: 300, baseType: !2451, size: 96, offset: 1216)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2452)
!2452 = !{!2453, !2454, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2451, file: !145, line: 153, baseType: !22, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2451, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2451, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2366, file: !145, line: 325, baseType: !2457, size: 32, offset: 1312)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2459)
!2459 = !{!2460, !2466, !2467}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2458, file: !119, line: 5074, baseType: !2461, size: 96)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2462)
!2462 = !{!2463, !2464, !2465}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2461, file: !244, line: 57, baseType: !247, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2461, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2461, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2458, file: !119, line: 5075, baseType: !2397, size: 64, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2458, file: !119, line: 5076, baseType: !2468, size: 32, offset: 160)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2468, file: !254, line: 52, baseType: !22, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2366, file: !145, line: 343, baseType: !2472, size: 64, offset: 1344)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2472, file: !198, line: 63, baseType: !110, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2472, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2477 = !{!2360, !2478, !2481, !2483}
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2362, file: !2480, line: 404, type: !109, isLocal: true, isDefinition: true)
!2480 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2362, file: !2480, line: 405, type: !109, isLocal: true, isDefinition: true)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "pending_current", scope: !2362, file: !2480, line: 425, type: !2365, isLocal: true, isDefinition: true)
!2485 = !DIGlobalVariableExpression(var: !2486, expr: !DIExpression())
!2486 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2487, file: !2517, line: 19, type: !2523, isLocal: true, isDefinition: true)
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2489, globals: !2514, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2489 = !{!104, !108, !845, !110, !111, !109, !2490, !1185, !106}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2492)
!2492 = !{!2493, !2508, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2491, file: !123, line: 245, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2496)
!2496 = !{!2497, !2503}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !128, line: 38, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !128, line: 38, size: 32, elements: !2499)
!2499 = !{!2500, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2498, file: !128, line: 39, baseType: !2501, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2498, file: !128, line: 40, baseType: !2501, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !128, line: 42, baseType: !2504, size: 32, offset: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !128, line: 42, size: 32, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2504, file: !128, line: 43, baseType: !2501, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2504, file: !128, line: 44, baseType: !2501, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2491, file: !123, line: 246, baseType: !2509, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2490}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2491, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2514 = !{!2515, !2485, !2518, !2520}
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2487, file: !2517, line: 15, type: !111, isLocal: true, isDefinition: true)
!2517 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2487, file: !2517, line: 25, type: !109, isLocal: true, isDefinition: true)
!2520 = !DIGlobalVariableExpression(var: !2521, expr: !DIExpression())
!2521 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2487, file: !2517, line: 17, type: !2522, isLocal: true, isDefinition: true)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2495)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2523, file: !254, line: 52, baseType: !22, size: 32)
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2530, retainedTypes: !2536, splitDebugInlining: false, nameTableKind: None)
!2529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2530 = !{!2531, !30}
!2531 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rb_color", file: !2532, line: 19, baseType: !32, size: 32, elements: !2533)
!2532 = !DIFile(filename: "zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2533 = !{!2534, !2535}
!2534 = !DIEnumerator(name: "RED", value: 0)
!2535 = !DIEnumerator(name: "BLACK", value: 1)
!2536 = !{!108, !109, !22, !2537, !167}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2539)
!2539 = !{!2540}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2538, file: !157, line: 50, baseType: !2541, size: 64)
!2541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2537, size: 64, elements: !162)
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2545, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2546, retainedTypes: !2566, splitDebugInlining: false, nameTableKind: None)
!2545 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2546 = !{!2547, !2555}
!2547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2548, line: 69, baseType: !32, size: 32, elements: !2549)
!2548 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2549 = !{!2550, !2551, !2552, !2553, !2554}
!2550 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2551 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2552 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2553 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2554 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2548, line: 56, baseType: !32, size: 32, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565}
!2557 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2558 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2559 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2560 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2561 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2562 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2563 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2564 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2565 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2566 = !{!109, !2547, !2555, !2567, !178, !354, !2569, !2570, !168, !182, !337, !235, !108, !22, !32, !2572, !2573, !2574, !103, !2575, !107, !2576, !2568, !2577, !2578, !2579, !2580}
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2548, line: 31, baseType: !2568)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !236, line: 329, baseType: !32)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2548, line: 32, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !236, line: 145, baseType: !109)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2583 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2584, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2584 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2587, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2587 = !{!2588, !30}
!2588 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2589, line: 27, baseType: !32, size: 32, elements: !2590)
!2589 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2590 = !{!2591, !2592, !2593, !2594, !2595}
!2591 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2592 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2593 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2594 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2595 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2597, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2598, retainedTypes: !2599, splitDebugInlining: false, nameTableKind: None)
!2597 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2598 = !{!716, !2588, !30}
!2599 = !{!863, !2600, !108, !109, !845, !110, !167, !2617}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !549, line: 360, baseType: !2602)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 345, size: 28704, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2602, file: !549, line: 347, baseType: !1596, size: 256)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2602, file: !549, line: 348, baseType: !1598, size: 768, offset: 256)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2602, file: !549, line: 349, baseType: !1596, size: 256, offset: 1024)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2602, file: !549, line: 350, baseType: !1598, size: 768, offset: 1280)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2602, file: !549, line: 351, baseType: !1596, size: 256, offset: 2048)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2602, file: !549, line: 352, baseType: !1598, size: 768, offset: 2304)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2602, file: !549, line: 353, baseType: !1596, size: 256, offset: 3072)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2602, file: !549, line: 354, baseType: !1598, size: 768, offset: 3328)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2602, file: !549, line: 355, baseType: !1596, size: 256, offset: 4096)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2602, file: !549, line: 356, baseType: !1609, size: 1792, offset: 4352)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2602, file: !549, line: 357, baseType: !1613, size: 1920, offset: 6144)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2602, file: !549, line: 358, baseType: !1618, size: 20608, offset: 8064)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2602, file: !549, line: 359, baseType: !301, size: 32, offset: 28672)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2619, file: !549, line: 381, baseType: !553, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2619, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2619, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2619, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2619, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2619, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2619, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2619, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2619, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2619, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2619, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2619, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2619, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2619, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2619, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2619, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2619, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2619, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2619, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2619, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2619, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2646, splitDebugInlining: false, nameTableKind: None)
!2645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2646 = !{!108, !109, !22, !2647}
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2649, file: !549, line: 381, baseType: !553, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2649, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2649, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2649, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2649, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2649, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2649, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2649, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2649, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2649, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2649, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2649, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2649, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2649, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2649, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2649, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2649, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2649, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2649, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2649, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2649, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!2672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2674, splitDebugInlining: false, nameTableKind: None)
!2673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2674 = !{!2675, !108, !109}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2677, file: !549, line: 381, baseType: !553, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2677, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2677, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2677, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2677, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2677, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2677, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2677, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2677, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2677, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2677, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2677, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2677, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2677, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2677, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2677, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2677, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2677, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2677, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2677, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2677, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!2700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2702, splitDebugInlining: false, nameTableKind: None)
!2701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2702 = !{!2703, !110, !108, !109}
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 32)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2705, line: 98, size: 256, elements: !2706)
!2705 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !{!2707, !2712, !2717, !2722, !2727, !2732, !2737, !2742}
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 99, baseType: !2708, size: 32)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 99, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2708, file: !2705, line: 99, baseType: !110, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2708, file: !2705, line: 99, baseType: !110, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 100, baseType: !2713, size: 32, offset: 32)
!2713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 100, size: 32, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2713, file: !2705, line: 100, baseType: !110, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2713, file: !2705, line: 100, baseType: !110, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 101, baseType: !2718, size: 32, offset: 64)
!2718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 101, size: 32, elements: !2719)
!2719 = !{!2720, !2721}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2718, file: !2705, line: 101, baseType: !110, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2718, file: !2705, line: 101, baseType: !110, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 102, baseType: !2723, size: 32, offset: 96)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 102, size: 32, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2723, file: !2705, line: 102, baseType: !110, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2723, file: !2705, line: 102, baseType: !110, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 103, baseType: !2728, size: 32, offset: 128)
!2728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 103, size: 32, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2728, file: !2705, line: 103, baseType: !110, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2728, file: !2705, line: 103, baseType: !110, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 104, baseType: !2733, size: 32, offset: 160)
!2733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 104, size: 32, elements: !2734)
!2734 = !{!2735, !2736}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2733, file: !2705, line: 104, baseType: !110, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2733, file: !2705, line: 104, baseType: !110, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 105, baseType: !2738, size: 32, offset: 192)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 105, size: 32, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2738, file: !2705, line: 105, baseType: !110, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2738, file: !2705, line: 105, baseType: !110, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2704, file: !2705, line: 106, baseType: !110, size: 32, offset: 224)
!2743 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2744, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2587, retainedTypes: !2745, splitDebugInlining: false, nameTableKind: None)
!2744 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2745 = !{!2746, !108, !109, !2771, !2814, !110}
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !2748)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !2749)
!2749 = !{!2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2748, file: !549, line: 381, baseType: !553, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2748, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2748, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2748, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2748, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2748, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2748, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2748, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2748, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2748, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2748, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2748, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2748, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2748, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2748, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2748, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2748, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2748, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2748, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2748, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2748, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2705, line: 141, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2705, line: 97, size: 256, elements: !2774)
!2774 = !{!2775}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2773, file: !2705, line: 107, baseType: !2776, size: 256)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2705, line: 98, size: 256, elements: !2777)
!2777 = !{!2778, !2783, !2788, !2793, !2798, !2803, !2808, !2813}
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 99, baseType: !2779, size: 32)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 99, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2779, file: !2705, line: 99, baseType: !110, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2779, file: !2705, line: 99, baseType: !110, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 100, baseType: !2784, size: 32, offset: 32)
!2784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 100, size: 32, elements: !2785)
!2785 = !{!2786, !2787}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2784, file: !2705, line: 100, baseType: !110, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2784, file: !2705, line: 100, baseType: !110, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 101, baseType: !2789, size: 32, offset: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 101, size: 32, elements: !2790)
!2790 = !{!2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2789, file: !2705, line: 101, baseType: !110, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2789, file: !2705, line: 101, baseType: !110, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 102, baseType: !2794, size: 32, offset: 96)
!2794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 102, size: 32, elements: !2795)
!2795 = !{!2796, !2797}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2794, file: !2705, line: 102, baseType: !110, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2794, file: !2705, line: 102, baseType: !110, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 103, baseType: !2799, size: 32, offset: 128)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 103, size: 32, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2799, file: !2705, line: 103, baseType: !110, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2799, file: !2705, line: 103, baseType: !110, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 104, baseType: !2804, size: 32, offset: 160)
!2804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 104, size: 32, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2804, file: !2705, line: 104, baseType: !110, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2804, file: !2705, line: 104, baseType: !110, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, scope: !2776, file: !2705, line: 105, baseType: !2809, size: 32, offset: 192)
!2809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2776, file: !2705, line: 105, size: 32, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2809, file: !2705, line: 105, baseType: !110, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2809, file: !2705, line: 105, baseType: !110, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2776, file: !2705, line: 106, baseType: !110, size: 32, offset: 224)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!2815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2816, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1581, retainedTypes: !2817, splitDebugInlining: false, nameTableKind: None)
!2816 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2817 = !{!863, !845, !167, !110, !2818, !2835}
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !549, line: 360, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 345, size: 28704, elements: !2821)
!2821 = !{!2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2820, file: !549, line: 347, baseType: !1596, size: 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2820, file: !549, line: 348, baseType: !1598, size: 768, offset: 256)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2820, file: !549, line: 349, baseType: !1596, size: 256, offset: 1024)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2820, file: !549, line: 350, baseType: !1598, size: 768, offset: 1280)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2820, file: !549, line: 351, baseType: !1596, size: 256, offset: 2048)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2820, file: !549, line: 352, baseType: !1598, size: 768, offset: 2304)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2820, file: !549, line: 353, baseType: !1596, size: 256, offset: 3072)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2820, file: !549, line: 354, baseType: !1598, size: 768, offset: 3328)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2820, file: !549, line: 355, baseType: !1596, size: 256, offset: 4096)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2820, file: !549, line: 356, baseType: !1609, size: 1792, offset: 4352)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2820, file: !549, line: 357, baseType: !1613, size: 1920, offset: 6144)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2820, file: !549, line: 358, baseType: !1618, size: 20608, offset: 8064)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2820, file: !549, line: 359, baseType: !301, size: 32, offset: 28672)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !2837)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2837, file: !549, line: 381, baseType: !553, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2837, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2837, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2837, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2837, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2837, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2837, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2837, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2837, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2837, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2837, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2837, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2837, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2837, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2837, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2837, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2837, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2837, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2837, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2837, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2837, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!2860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2862, splitDebugInlining: false, nameTableKind: None)
!2861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2862 = !{!2863, !108, !109}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !549, line: 402, baseType: !2865)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 379, size: 1120, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2865, file: !549, line: 381, baseType: !553, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2865, file: !549, line: 382, baseType: !301, size: 32, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2865, file: !549, line: 383, baseType: !301, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2865, file: !549, line: 384, baseType: !301, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2865, file: !549, line: 385, baseType: !301, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2865, file: !549, line: 386, baseType: !301, size: 32, offset: 160)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2865, file: !549, line: 387, baseType: !1633, size: 96, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2865, file: !549, line: 388, baseType: !301, size: 32, offset: 288)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2865, file: !549, line: 389, baseType: !301, size: 32, offset: 320)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2865, file: !549, line: 390, baseType: !301, size: 32, offset: 352)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2865, file: !549, line: 391, baseType: !301, size: 32, offset: 384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2865, file: !549, line: 392, baseType: !301, size: 32, offset: 416)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2865, file: !549, line: 393, baseType: !301, size: 32, offset: 448)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2865, file: !549, line: 394, baseType: !301, size: 32, offset: 480)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2865, file: !549, line: 395, baseType: !1644, size: 64, offset: 512)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2865, file: !549, line: 396, baseType: !553, size: 32, offset: 576)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2865, file: !549, line: 397, baseType: !553, size: 32, offset: 608)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2865, file: !549, line: 398, baseType: !1648, size: 128, offset: 640)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2865, file: !549, line: 399, baseType: !1650, size: 160, offset: 768)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2865, file: !549, line: 400, baseType: !1652, size: 160, offset: 928)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2865, file: !549, line: 401, baseType: !301, size: 32, offset: 1088)
!2888 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2889, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2890, splitDebugInlining: false, nameTableKind: None)
!2889 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2890 = !{!226, !1185, !235, !1039, !2891, !168, !108}
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2895, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2895 = !{!2896}
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 386, baseType: !2898)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 448, elements: !2899)
!2899 = !{!2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2898, file: !297, line: 372, baseType: !301, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2898, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2898, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2898, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2898, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2898, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2898, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2898, file: !297, line: 379, baseType: !301, size: 32, offset: 224)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2898, file: !297, line: 380, baseType: !301, size: 32, offset: 256)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2898, file: !297, line: 381, baseType: !301, size: 32, offset: 288)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2898, file: !297, line: 382, baseType: !301, size: 32, offset: 320)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2898, file: !297, line: 383, baseType: !301, size: 32, offset: 352)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2898, file: !297, line: 384, baseType: !301, size: 32, offset: 384)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2898, file: !297, line: 385, baseType: !301, size: 32, offset: 416)
!2914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2918, retainedTypes: !2934, splitDebugInlining: false, nameTableKind: None)
!2917 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2918 = !{!2919, !2926, !2930}
!2919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2920, line: 39, baseType: !32, size: 32, elements: !2921)
!2920 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2921 = !{!2922, !2923, !2924, !2925}
!2922 = !DIEnumerator(name: "HAL_OK", value: 0)
!2923 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2924 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2925 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !900, line: 183, baseType: !32, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIEnumerator(name: "DISABLE", value: 0)
!2929 = !DIEnumerator(name: "ENABLE", value: 1)
!2930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !900, line: 177, baseType: !32, size: 32, elements: !2931)
!2931 = !{!2932, !2933}
!2932 = !DIEnumerator(name: "RESET", value: 0)
!2933 = !DIEnumerator(name: "SET", value: 1)
!2934 = !{!2935, !108, !110, !167, !2953, !2954, !2960, !181, !2973, !111, !2986}
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 386, baseType: !2937)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 448, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2937, file: !297, line: 372, baseType: !301, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2937, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2937, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2937, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2937, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2937, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2937, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2937, file: !297, line: 379, baseType: !301, size: 32, offset: 224)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2937, file: !297, line: 380, baseType: !301, size: 32, offset: 256)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2937, file: !297, line: 381, baseType: !301, size: 32, offset: 288)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2937, file: !297, line: 382, baseType: !301, size: 32, offset: 320)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2937, file: !297, line: 383, baseType: !301, size: 32, offset: 352)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2937, file: !297, line: 384, baseType: !301, size: 32, offset: 384)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2937, file: !297, line: 385, baseType: !301, size: 32, offset: 416)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 364, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 360, size: 64, elements: !2957)
!2957 = !{!2958, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2956, file: !297, line: 362, baseType: !301, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2956, file: !297, line: 363, baseType: !301, size: 32, offset: 32)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 286, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 275, size: 288, elements: !2963)
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2962, file: !297, line: 277, baseType: !301, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2962, file: !297, line: 278, baseType: !301, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2962, file: !297, line: 279, baseType: !301, size: 32, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2962, file: !297, line: 280, baseType: !301, size: 32, offset: 96)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2962, file: !297, line: 281, baseType: !301, size: 32, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2962, file: !297, line: 282, baseType: !301, size: 32, offset: 160)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2962, file: !297, line: 283, baseType: !301, size: 32, offset: 192)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2962, file: !297, line: 284, baseType: !301, size: 32, offset: 224)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2962, file: !297, line: 285, baseType: !301, size: 32, offset: 256)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 32)
!2974 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 314, baseType: !2975)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 303, size: 320, elements: !2976)
!2976 = !{!2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2975, file: !297, line: 305, baseType: !301, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2975, file: !297, line: 306, baseType: !301, size: 32, offset: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2975, file: !297, line: 307, baseType: !301, size: 32, offset: 64)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2975, file: !297, line: 308, baseType: !301, size: 32, offset: 96)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2975, file: !297, line: 309, baseType: !301, size: 32, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2975, file: !297, line: 310, baseType: !301, size: 32, offset: 160)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2975, file: !297, line: 311, baseType: !301, size: 32, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2975, file: !297, line: 312, baseType: !301, size: 32, offset: 224)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2975, file: !297, line: 313, baseType: !1176, size: 64, offset: 256)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!2987 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2988, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2989, retainedTypes: !2990, splitDebugInlining: false, nameTableKind: None)
!2988 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!2989 = !{!899}
!2990 = !{!2991, !110, !2999, !3005, !3018}
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !549, line: 712, baseType: !2993)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !549, line: 706, size: 128, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2993, file: !549, line: 708, baseType: !301, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2993, file: !549, line: 709, baseType: !301, size: 32, offset: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2993, file: !549, line: 710, baseType: !301, size: 32, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2993, file: !549, line: 711, baseType: !553, size: 32, offset: 96)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 364, baseType: !3001)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 360, size: 64, elements: !3002)
!3002 = !{!3003, !3004}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3001, file: !297, line: 362, baseType: !301, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3001, file: !297, line: 363, baseType: !301, size: 32, offset: 32)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 286, baseType: !3007)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 275, size: 288, elements: !3008)
!3008 = !{!3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3007, file: !297, line: 277, baseType: !301, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3007, file: !297, line: 278, baseType: !301, size: 32, offset: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3007, file: !297, line: 279, baseType: !301, size: 32, offset: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3007, file: !297, line: 280, baseType: !301, size: 32, offset: 96)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3007, file: !297, line: 281, baseType: !301, size: 32, offset: 128)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3007, file: !297, line: 282, baseType: !301, size: 32, offset: 160)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3007, file: !297, line: 283, baseType: !301, size: 32, offset: 192)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3007, file: !297, line: 284, baseType: !301, size: 32, offset: 224)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3007, file: !297, line: 285, baseType: !301, size: 32, offset: 256)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 386, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 370, size: 448, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3020, file: !297, line: 372, baseType: !301, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3020, file: !297, line: 373, baseType: !301, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3020, file: !297, line: 374, baseType: !301, size: 32, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3020, file: !297, line: 375, baseType: !301, size: 32, offset: 96)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3020, file: !297, line: 376, baseType: !301, size: 32, offset: 128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3020, file: !297, line: 377, baseType: !301, size: 32, offset: 160)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3020, file: !297, line: 378, baseType: !301, size: 32, offset: 192)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3020, file: !297, line: 379, baseType: !301, size: 32, offset: 224)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3020, file: !297, line: 380, baseType: !301, size: 32, offset: 256)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3020, file: !297, line: 381, baseType: !301, size: 32, offset: 288)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3020, file: !297, line: 382, baseType: !301, size: 32, offset: 320)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3020, file: !297, line: 383, baseType: !301, size: 32, offset: 352)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3020, file: !297, line: 384, baseType: !301, size: 32, offset: 384)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3020, file: !297, line: 385, baseType: !301, size: 32, offset: 416)
!3036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3038, splitDebugInlining: false, nameTableKind: None)
!3037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3038 = !{!108, !235}
!3039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3041, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3041 = !{!3042, !3049, !2588, !30}
!3042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3043, line: 14, baseType: !32, size: 32, elements: !3044)
!3043 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3044 = !{!3045, !3046, !3047, !3048}
!3045 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3046 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3047 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3048 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3043, line: 42, baseType: !32, size: 32, elements: !3050)
!3050 = !{!3051, !3052, !3053, !3054, !3055, !3056}
!3051 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3052 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3053 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3054 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3055 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3056 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3061, splitDebugInlining: false, nameTableKind: None)
!3060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3061 = !{!22, !108, !109}
!3062 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3063, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3063 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3064 = !{!"Ubuntu clang version 14.0.6"}
!3065 = !{i32 7, !"Dwarf Version", i32 4}
!3066 = !{i32 2, !"Debug Info Version", i32 3}
!3067 = !{i32 1, !"wchar_size", i32 4}
!3068 = !{i32 1, !"min_enum_size", i32 4}
!3069 = !{i32 1, !"branch-target-enforcement", i32 0}
!3070 = !{i32 1, !"sign-return-address", i32 0}
!3071 = !{i32 1, !"sign-return-address-all", i32 0}
!3072 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3073 = !{i32 7, !"frame-pointer", i32 2}
!3074 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3075, file: !3075, line: 26, type: !3076, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !2037)
!3075 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3076 = !DISubroutineType(types: !3077)
!3077 = !{null}
!3078 = !DILocation(line: 28, column: 1, scope: !3074)
!3079 = !{i64 2152497157, i64 2152497177, i64 2152497240}
!3080 = !DILocation(line: 29, column: 1, scope: !3074)
!3081 = !{i64 2152497572, i64 2152497592, i64 2152497655}
!3082 = !DILocation(line: 30, column: 1, scope: !3074)
!3083 = !{i64 2152497991, i64 2152498011, i64 2152498074}
!3084 = !DILocation(line: 31, column: 1, scope: !3074)
!3085 = !{i64 2152498410, i64 2152498430, i64 2152498493}
!3086 = !DILocation(line: 33, column: 1, scope: !3074)
!3087 = !{i64 2152498702, i64 2152498722, i64 2152498785}
!3088 = !DILocation(line: 35, column: 1, scope: !3074)
!3089 = !{i64 2152499027, i64 2152499047, i64 2152499110}
!3090 = !DILocation(line: 42, column: 1, scope: !3074)
!3091 = !{i64 2152499454, i64 2152499474, i64 2152499537}
!3092 = !DILocation(line: 50, column: 1, scope: !3074)
!3093 = !{i64 2152499896, i64 2152499916, i64 2152499979}
!3094 = !DILocation(line: 54, column: 1, scope: !3074)
!3095 = !{i64 2152500335, i64 2152500355, i64 2152500418}
!3096 = !DILocation(line: 61, column: 1, scope: !3074)
!3097 = !{i64 2152500652, i64 2152500672, i64 2152500735}
!3098 = !DILocation(line: 63, column: 1, scope: !3074)
!3099 = !{i64 2152501032, i64 2152501052, i64 2152501115}
!3100 = !DILocation(line: 64, column: 1, scope: !3074)
!3101 = !{i64 2152501554, i64 2152501574, i64 2152501637}
!3102 = !DILocation(line: 65, column: 1, scope: !3074)
!3103 = !{i64 2152502052, i64 2152502072, i64 2152502135}
!3104 = !DILocation(line: 66, column: 1, scope: !3074)
!3105 = !{i64 2152502534, i64 2152502554, i64 2152502617}
!3106 = !DILocation(line: 67, column: 1, scope: !3074)
!3107 = !{i64 2152503041, i64 2152503061, i64 2152503124}
!3108 = !DILocation(line: 68, column: 1, scope: !3074)
!3109 = !{i64 2152503529, i64 2152503549, i64 2152503612}
!3110 = !DILocation(line: 70, column: 1, scope: !3074)
!3111 = !{i64 2152503997, i64 2152504017, i64 2152504080}
!3112 = !DILocation(line: 71, column: 1, scope: !3074)
!3113 = !{i64 2152504439, i64 2152504459, i64 2152504522}
!3114 = !DILocation(line: 72, column: 1, scope: !3074)
!3115 = !{i64 2152508958, i64 2152508978, i64 2152509041}
!3116 = !DILocation(line: 79, column: 1, scope: !3074)
!3117 = !{i64 2152509412, i64 2152509432, i64 2152509495}
!3118 = !DILocation(line: 80, column: 1, scope: !3074)
!3119 = !{i64 2152509923, i64 2152509943, i64 2152510006}
!3120 = !DILocation(line: 82, column: 1, scope: !3074)
!3121 = !{i64 2152510414, i64 2152510434, i64 2152510497}
!3122 = !DILocation(line: 86, column: 1, scope: !3074)
!3123 = !{i64 2152510883, i64 2152510903, i64 2152510966}
!3124 = !DILocation(line: 97, column: 1, scope: !3074)
!3125 = !{i64 2152511225, i64 2152511245, i64 2152511308}
!3126 = !DILocation(line: 99, column: 1, scope: !3074)
!3127 = !{i64 2152511443, i64 2152511463, i64 2152511526}
!3128 = !DILocation(line: 102, column: 1, scope: !3074)
!3129 = !{i64 2152511700, i64 2152511720, i64 2152511783}
!3130 = !DILocation(line: 105, column: 1, scope: !3074)
!3131 = !{i64 2152511940, i64 2152511960, i64 2152512023}
!3132 = !DILocation(line: 115, column: 1, scope: !3074)
!3133 = !{i64 2152512279, i64 2152512299, i64 2152512362}
!3134 = !DILocation(line: 118, column: 1, scope: !3074)
!3135 = !{i64 2152512623, i64 2152512643, i64 2152512706}
!3136 = !DILocation(line: 32, column: 1, scope: !3137)
!3137 = !DILexicalBlockFile(scope: !3074, file: !3138, discriminator: 0)
!3138 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3139 = !{i64 2152512979, i64 2152512999, i64 2152513062}
!3140 = !DILocation(line: 33, column: 1, scope: !3137)
!3141 = !{i64 2152513491, i64 2152513511, i64 2152513574}
!3142 = !DILocation(line: 53, column: 1, scope: !3137)
!3143 = !{i64 2152513999, i64 2152514019, i64 2152514082}
!3144 = !DILocation(line: 54, column: 1, scope: !3137)
!3145 = !{i64 2152514417, i64 2152514437, i64 2152514500}
!3146 = !DILocation(line: 55, column: 1, scope: !3137)
!3147 = !{i64 2152514835, i64 2152514855, i64 2152514918}
!3148 = !DILocation(line: 56, column: 1, scope: !3137)
!3149 = !{i64 2152515253, i64 2152515273, i64 2152515336}
!3150 = !DILocation(line: 57, column: 1, scope: !3137)
!3151 = !{i64 2152515671, i64 2152515691, i64 2152515754}
!3152 = !DILocation(line: 58, column: 1, scope: !3137)
!3153 = !{i64 2152516089, i64 2152516109, i64 2152516172}
!3154 = !DILocation(line: 59, column: 1, scope: !3137)
!3155 = !{i64 2152516507, i64 2152516527, i64 2152516590}
!3156 = !DILocation(line: 60, column: 1, scope: !3137)
!3157 = !{i64 2152516931, i64 2152516951, i64 2152517014}
!3158 = !DILocation(line: 61, column: 1, scope: !3137)
!3159 = !{i64 2152517248, i64 2152517268, i64 2152517331}
!3160 = !DILocation(line: 70, column: 1, scope: !3137)
!3161 = !{i64 2152517477, i64 2152517497, i64 2152517560}
!3162 = !DILocation(line: 72, column: 1, scope: !3137)
!3163 = !{i64 2152517809, i64 2152517829, i64 2152517892}
!3164 = !DILocation(line: 73, column: 1, scope: !3137)
!3165 = !{i64 2152518259, i64 2152518279, i64 2152518342}
!3166 = !DILocation(line: 74, column: 1, scope: !3137)
!3167 = !{i64 2152522770, i64 2152522790, i64 2152522853}
!3168 = !DILocation(line: 75, column: 1, scope: !3137)
!3169 = !{i64 2152523220, i64 2152523240, i64 2152523303}
!3170 = !DILocation(line: 76, column: 1, scope: !3137)
!3171 = !{i64 2152523670, i64 2152523690, i64 2152523753}
!3172 = !DILocation(line: 77, column: 1, scope: !3137)
!3173 = !{i64 2152524120, i64 2152524140, i64 2152524203}
!3174 = !DILocation(line: 78, column: 1, scope: !3137)
!3175 = !{i64 2152524570, i64 2152524590, i64 2152524653}
!3176 = !DILocation(line: 79, column: 1, scope: !3137)
!3177 = !{i64 2152525020, i64 2152525040, i64 2152525103}
!3178 = !DILocation(line: 80, column: 1, scope: !3137)
!3179 = !{i64 2152525473, i64 2152525493, i64 2152525556}
!3180 = !DILocation(line: 84, column: 1, scope: !3137)
!3181 = !{i64 2152525805, i64 2152525825, i64 2152525888}
!3182 = !DILocation(line: 91, column: 1, scope: !3137)
!3183 = !{i64 2152526202, i64 2152526222, i64 2152526285}
!3184 = !DILocation(line: 93, column: 1, scope: !3137)
!3185 = !{i64 2152526569, i64 2152526589, i64 2152526652}
!3186 = !DILocation(line: 106, column: 1, scope: !3137)
!3187 = !{i64 2152526839, i64 2152526859, i64 2152526922}
!3188 = !DILocation(line: 11, column: 1, scope: !3189)
!3189 = !DILexicalBlockFile(scope: !3074, file: !3190, discriminator: 0)
!3190 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3191 = distinct !DISubprogram(name: "philosopher", scope: !3192, file: !3192, line: 140, type: !218, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3193)
!3192 = !DIFile(filename: "zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3193 = !{!3194, !3195, !3196, !3197, !3198, !3199, !3200}
!3194 = !DILocalVariable(name: "id", arg: 1, scope: !3191, file: !3192, line: 140, type: !108)
!3195 = !DILocalVariable(name: "unused1", arg: 2, scope: !3191, file: !3192, line: 140, type: !108)
!3196 = !DILocalVariable(name: "unused2", arg: 3, scope: !3191, file: !3192, line: 140, type: !108)
!3197 = !DILocalVariable(name: "fork1", scope: !3191, file: !3192, line: 145, type: !279)
!3198 = !DILocalVariable(name: "fork2", scope: !3191, file: !3192, line: 146, type: !279)
!3199 = !DILocalVariable(name: "my_id", scope: !3191, file: !3192, line: 148, type: !109)
!3200 = !DILocalVariable(name: "delay", scope: !3201, file: !3192, line: 160, type: !845)
!3201 = distinct !DILexicalBlock(scope: !3191, file: !3192, line: 159, column: 12)
!3202 = !DILocation(line: 0, scope: !3191)
!3203 = !DILocation(line: 148, column: 14, scope: !3191)
!3204 = !DILocation(line: 151, column: 6, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3191, file: !3192, line: 151, column: 6)
!3206 = !DILocation(line: 151, column: 6, scope: !3191)
!3207 = !DILocation(line: 155, column: 11, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3205, file: !3192, line: 154, column: 9)
!3209 = !DILocation(line: 156, column: 11, scope: !3208)
!3210 = !DILocation(line: 0, scope: !3205)
!3211 = !DILocation(line: 159, column: 2, scope: !3191)
!3212 = !DILocation(line: 162, column: 3, scope: !3201)
!3213 = !DILocation(line: 163, column: 3, scope: !3201)
!3214 = !DILocation(line: 164, column: 3, scope: !3201)
!3215 = !DILocation(line: 165, column: 3, scope: !3201)
!3216 = !DILocation(line: 167, column: 11, scope: !3201)
!3217 = !DILocation(line: 0, scope: !3201)
!3218 = !DILocation(line: 168, column: 3, scope: !3201)
!3219 = !DILocation(line: 169, column: 3, scope: !3201)
!3220 = !DILocation(line: 171, column: 3, scope: !3201)
!3221 = !DILocation(line: 172, column: 3, scope: !3201)
!3222 = !DILocation(line: 173, column: 3, scope: !3201)
!3223 = !DILocation(line: 175, column: 11, scope: !3201)
!3224 = !DILocation(line: 176, column: 3, scope: !3201)
!3225 = !DILocation(line: 177, column: 3, scope: !3201)
!3226 = distinct !{!3226, !3211, !3227}
!3227 = !DILocation(line: 178, column: 2, scope: !3191)
!3228 = distinct !DISubprogram(name: "is_last_philosopher", scope: !3192, file: !3192, line: 135, type: !288, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3229)
!3229 = !{!3230}
!3230 = !DILocalVariable(name: "id", arg: 1, scope: !3228, file: !3192, line: 135, type: !109)
!3231 = !DILocation(line: 0, scope: !3228)
!3232 = !DILocation(line: 137, column: 12, scope: !3228)
!3233 = !DILocation(line: 137, column: 2, scope: !3228)
!3234 = distinct !DISubprogram(name: "print_phil_state", scope: !3192, file: !3192, line: 100, type: !3235, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3237)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{null, !109, !337, !845}
!3237 = !{!3238, !3239, !3240, !3241}
!3238 = !DILocalVariable(name: "id", arg: 1, scope: !3234, file: !3192, line: 100, type: !109)
!3239 = !DILocalVariable(name: "fmt", arg: 2, scope: !3234, file: !3192, line: 100, type: !337)
!3240 = !DILocalVariable(name: "delay", arg: 3, scope: !3234, file: !3192, line: 100, type: !845)
!3241 = !DILocalVariable(name: "prio", scope: !3234, file: !3192, line: 102, type: !109)
!3242 = !DILocation(line: 0, scope: !3234)
!3243 = !DILocation(line: 102, column: 35, scope: !3234)
!3244 = !DILocation(line: 102, column: 13, scope: !3234)
!3245 = !DILocation(line: 104, column: 2, scope: !3234)
!3246 = !DILocation(line: 107, column: 18, scope: !3234)
!3247 = !DILocation(line: 107, column: 13, scope: !3234)
!3248 = !DILocation(line: 108, column: 9, scope: !3234)
!3249 = !DILocation(line: 106, column: 2, scope: !3234)
!3250 = !DILocation(line: 111, column: 6, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3234, file: !3192, line: 111, column: 6)
!3252 = !DILocation(line: 111, column: 6, scope: !3234)
!3253 = !DILocation(line: 112, column: 3, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !3192, line: 111, column: 13)
!3255 = !DILocation(line: 113, column: 2, scope: !3254)
!3256 = !DILocation(line: 114, column: 3, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3251, file: !3192, line: 113, column: 9)
!3258 = !DILocation(line: 117, column: 2, scope: !3234)
!3259 = !DILocation(line: 118, column: 1, scope: !3234)
!3260 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3261, file: !3261, line: 927, type: !3262, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3268)
!3261 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!109, !279, !3264}
!3264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !3265)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !3266)
!3266 = !{!3267}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3265, file: !105, line: 66, baseType: !104, size: 64)
!3268 = !{!3269, !3270}
!3269 = !DILocalVariable(name: "mutex", arg: 1, scope: !3260, file: !3261, line: 927, type: !279)
!3270 = !DILocalVariable(name: "timeout", arg: 2, scope: !3260, file: !3261, line: 927, type: !3264)
!3271 = !DILocation(line: 0, scope: !3260)
!3272 = !DILocation(line: 936, column: 2, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3260, file: !3261, line: 936, column: 2)
!3274 = !{i64 2152227253}
!3275 = !DILocation(line: 937, column: 9, scope: !3260)
!3276 = !DILocation(line: 937, column: 2, scope: !3260)
!3277 = distinct !DISubprogram(name: "get_random_delay", scope: !3192, file: !3192, line: 120, type: !3278, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3280)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!845, !109, !109}
!3280 = !{!3281, !3282, !3283, !3284}
!3281 = !DILocalVariable(name: "id", arg: 1, scope: !3277, file: !3192, line: 120, type: !109)
!3282 = !DILocalVariable(name: "period_in_ms", arg: 2, scope: !3277, file: !3192, line: 120, type: !109)
!3283 = !DILocalVariable(name: "delay", scope: !3277, file: !3192, line: 127, type: !845)
!3284 = !DILocalVariable(name: "ms", scope: !3277, file: !3192, line: 130, type: !845)
!3285 = !DILocation(line: 0, scope: !3277)
!3286 = !DILocation(line: 127, column: 19, scope: !3277)
!3287 = !DILocation(line: 127, column: 36, scope: !3277)
!3288 = !DILocation(line: 127, column: 47, scope: !3277)
!3289 = !DILocation(line: 127, column: 41, scope: !3277)
!3290 = !DILocation(line: 127, column: 53, scope: !3277)
!3291 = !DILocation(line: 130, column: 27, scope: !3277)
!3292 = !DILocation(line: 132, column: 2, scope: !3277)
!3293 = distinct !DISubprogram(name: "k_msleep", scope: !119, file: !119, line: 439, type: !3294, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3296)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!845, !845}
!3296 = !{!3297}
!3297 = !DILocalVariable(name: "ms", arg: 1, scope: !3293, file: !119, line: 439, type: !845)
!3298 = !DILocation(line: 0, scope: !3293)
!3299 = !DILocation(line: 441, column: 17, scope: !3293)
!3300 = !DILocation(line: 441, column: 9, scope: !3293)
!3301 = !DILocation(line: 441, column: 2, scope: !3293)
!3302 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3261, file: !3261, line: 944, type: !3303, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3305)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!109, !279}
!3305 = !{!3306}
!3306 = !DILocalVariable(name: "mutex", arg: 1, scope: !3302, file: !3261, line: 944, type: !279)
!3307 = !DILocation(line: 0, scope: !3302)
!3308 = !DILocation(line: 952, column: 2, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3302, file: !3261, line: 952, column: 2)
!3310 = !{i64 2152227321}
!3311 = !DILocation(line: 953, column: 9, scope: !3302)
!3312 = !DILocation(line: 953, column: 2, scope: !3302)
!3313 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3314, file: !3314, line: 403, type: !3315, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3317)
!3314 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!111, !111}
!3317 = !{!3318}
!3318 = !DILocalVariable(name: "t", arg: 1, scope: !3313, file: !3314, line: 403, type: !111)
!3319 = !DILocation(line: 0, scope: !3313)
!3320 = !DILocalVariable(name: "t", arg: 1, scope: !3321, file: !3314, line: 102, type: !111)
!3321 = distinct !DISubprogram(name: "z_tmcvt", scope: !3314, file: !3314, line: 102, type: !3322, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3324)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!3324 = !{!3320, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334}
!3325 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3321, file: !3314, line: 102, type: !110)
!3326 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3321, file: !3314, line: 103, type: !110)
!3327 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3321, file: !3314, line: 103, type: !347)
!3328 = !DILocalVariable(name: "result32", arg: 5, scope: !3321, file: !3314, line: 104, type: !347)
!3329 = !DILocalVariable(name: "round_up", arg: 6, scope: !3321, file: !3314, line: 104, type: !347)
!3330 = !DILocalVariable(name: "round_off", arg: 7, scope: !3321, file: !3314, line: 105, type: !347)
!3331 = !DILocalVariable(name: "mul_ratio", scope: !3321, file: !3314, line: 107, type: !347)
!3332 = !DILocalVariable(name: "div_ratio", scope: !3321, file: !3314, line: 109, type: !347)
!3333 = !DILocalVariable(name: "off", scope: !3321, file: !3314, line: 116, type: !111)
!3334 = !DILocalVariable(name: "rdivisor", scope: !3335, file: !3314, line: 119, type: !110)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !3314, line: 118, column: 18)
!3336 = distinct !DILexicalBlock(scope: !3321, file: !3314, line: 118, column: 6)
!3337 = !DILocation(line: 0, scope: !3321, inlinedAt: !3338)
!3338 = distinct !DILocation(line: 406, column: 9, scope: !3313)
!3339 = !DILocation(line: 145, column: 13, scope: !3340, inlinedAt: !3338)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !3314, line: 144, column: 10)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !3314, line: 142, column: 7)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !3314, line: 141, column: 24)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !3314, line: 141, column: 13)
!3344 = distinct !DILexicalBlock(scope: !3321, file: !3314, line: 134, column: 6)
!3345 = !DILocation(line: 406, column: 2, scope: !3313)
!3346 = distinct !DISubprogram(name: "k_sleep", scope: !3261, file: !3261, line: 91, type: !3347, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3349)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!845, !3264}
!3349 = !{!3350}
!3350 = !DILocalVariable(name: "timeout", arg: 1, scope: !3346, file: !3261, line: 91, type: !3264)
!3351 = !DILocation(line: 0, scope: !3346)
!3352 = !DILocation(line: 99, column: 2, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3346, file: !3261, line: 99, column: 2)
!3354 = !{i64 2152223885}
!3355 = !DILocation(line: 100, column: 9, scope: !3346)
!3356 = !DILocation(line: 100, column: 2, scope: !3346)
!3357 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !119, file: !119, line: 1640, type: !3358, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!110}
!3360 = !DILocation(line: 1642, column: 19, scope: !3357)
!3361 = !DILocation(line: 1642, column: 9, scope: !3357)
!3362 = !DILocation(line: 1642, column: 2, scope: !3357)
!3363 = distinct !DISubprogram(name: "k_uptime_get", scope: !119, file: !119, line: 1616, type: !3364, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!106}
!3366 = !DILocation(line: 1618, column: 31, scope: !3363)
!3367 = !DILocation(line: 1618, column: 9, scope: !3363)
!3368 = !DILocation(line: 1618, column: 2, scope: !3363)
!3369 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3261, file: !3261, line: 564, type: !3364, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3370 = !DILocation(line: 573, column: 2, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3369, file: !3261, line: 573, column: 2)
!3372 = !{i64 2152225789}
!3373 = !DILocation(line: 574, column: 9, scope: !3369)
!3374 = !DILocation(line: 574, column: 2, scope: !3369)
!3375 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3314, file: !3314, line: 1103, type: !3315, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3376)
!3376 = !{!3377}
!3377 = !DILocalVariable(name: "t", arg: 1, scope: !3375, file: !3314, line: 1103, type: !111)
!3378 = !DILocation(line: 0, scope: !3375)
!3379 = !DILocation(line: 0, scope: !3321, inlinedAt: !3380)
!3380 = distinct !DILocation(line: 1106, column: 9, scope: !3375)
!3381 = !DILocation(line: 139, column: 13, scope: !3382, inlinedAt: !3380)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !3314, line: 138, column: 10)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !3314, line: 136, column: 7)
!3384 = distinct !DILexicalBlock(scope: !3344, file: !3314, line: 134, column: 17)
!3385 = !DILocation(line: 1106, column: 2, scope: !3375)
!3386 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !3387, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!3389}
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !143)
!3390 = !DILocation(line: 535, column: 9, scope: !3386)
!3391 = !DILocation(line: 535, column: 2, scope: !3386)
!3392 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3261, file: !3261, line: 258, type: !3393, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3395)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!109, !3389}
!3395 = !{!3396}
!3396 = !DILocalVariable(name: "thread", arg: 1, scope: !3392, file: !3261, line: 258, type: !3389)
!3397 = !DILocation(line: 0, scope: !3392)
!3398 = !DILocation(line: 266, column: 2, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3392, file: !3261, line: 266, column: 2)
!3400 = !{i64 2152224565}
!3401 = !DILocation(line: 267, column: 9, scope: !3392)
!3402 = !DILocation(line: 267, column: 2, scope: !3392)
!3403 = distinct !DISubprogram(name: "set_phil_state_pos", scope: !3192, file: !3192, line: 92, type: !3404, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3406)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{null, !109}
!3406 = !{!3407}
!3407 = !DILocalVariable(name: "id", arg: 1, scope: !3403, file: !3192, line: 92, type: !109)
!3408 = !DILocation(line: 0, scope: !3403)
!3409 = !DILocation(line: 95, column: 27, scope: !3403)
!3410 = !DILocation(line: 95, column: 2, scope: !3403)
!3411 = !DILocation(line: 97, column: 1, scope: !3403)
!3412 = distinct !DISubprogram(name: "z_current_get", scope: !3261, file: !3261, line: 173, type: !3387, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3413 = !DILocation(line: 180, column: 2, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3412, file: !3261, line: 180, column: 2)
!3415 = !{i64 2152224225}
!3416 = !DILocation(line: 181, column: 9, scope: !3412)
!3417 = !DILocation(line: 181, column: 2, scope: !3412)
!3418 = distinct !DISubprogram(name: "main", scope: !3192, file: !3192, line: 252, type: !3076, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3419 = !DILocation(line: 254, column: 2, scope: !3418)
!3420 = !DILocation(line: 256, column: 2, scope: !3418)
!3421 = !DILocation(line: 259, column: 2, scope: !3418)
!3422 = !DILocation(line: 260, column: 2, scope: !3418)
!3423 = !DILocation(line: 268, column: 1, scope: !3418)
!3424 = distinct !DISubprogram(name: "display_demo_description", scope: !3192, file: !3192, line: 245, type: !3076, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2037)
!3425 = !DILocation(line: 248, column: 2, scope: !3424)
!3426 = !DILocation(line: 250, column: 1, scope: !3424)
!3427 = distinct !DISubprogram(name: "init_objects", scope: !3192, file: !3192, line: 201, type: !3076, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3428)
!3428 = !{!3429}
!3429 = !DILocalVariable(name: "i", scope: !3430, file: !3192, line: 204, type: !109)
!3430 = distinct !DILexicalBlock(scope: !3427, file: !3192, line: 204, column: 2)
!3431 = !DILocation(line: 0, scope: !3430)
!3432 = !DILocation(line: 204, column: 2, scope: !3430)
!3433 = !DILocation(line: 208, column: 1, scope: !3427)
!3434 = !DILocation(line: 205, column: 3, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !3192, line: 204, column: 37)
!3436 = distinct !DILexicalBlock(scope: !3430, file: !3192, line: 204, column: 2)
!3437 = !DILocation(line: 204, column: 33, scope: !3436)
!3438 = !DILocation(line: 204, column: 20, scope: !3436)
!3439 = distinct !{!3439, !3432, !3440}
!3440 = !DILocation(line: 206, column: 2, scope: !3430)
!3441 = distinct !DISubprogram(name: "start_threads", scope: !3192, file: !3192, line: 210, type: !3076, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3442)
!3442 = !{!3443, !3445, !3448}
!3443 = !DILocalVariable(name: "i", scope: !3444, file: !3192, line: 216, type: !109)
!3444 = distinct !DILexicalBlock(scope: !3441, file: !3192, line: 216, column: 2)
!3445 = !DILocalVariable(name: "prio", scope: !3446, file: !3192, line: 217, type: !109)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !3192, line: 216, column: 37)
!3447 = distinct !DILexicalBlock(scope: !3444, file: !3192, line: 216, column: 2)
!3448 = !DILocalVariable(name: "tname", scope: !3446, file: !3192, line: 223, type: !225)
!3449 = !DILocation(line: 0, scope: !3444)
!3450 = !DILocation(line: 216, column: 2, scope: !3444)
!3451 = !DILocation(line: 233, column: 1, scope: !3441)
!3452 = !DILocation(line: 217, column: 14, scope: !3446)
!3453 = !{i32 -2, i32 -2147483644}
!3454 = !DILocation(line: 0, scope: !3446)
!3455 = !DILocation(line: 219, column: 20, scope: !3446)
!3456 = !DILocation(line: 219, column: 33, scope: !3446)
!3457 = !DILocation(line: 220, column: 18, scope: !3446)
!3458 = !DILocation(line: 219, column: 3, scope: !3446)
!3459 = !DILocation(line: 223, column: 3, scope: !3446)
!3460 = !DILocation(line: 223, column: 8, scope: !3446)
!3461 = !DILocation(line: 225, column: 3, scope: !3446)
!3462 = !DILocation(line: 226, column: 3, scope: !3446)
!3463 = !DILocation(line: 228, column: 3, scope: !3446)
!3464 = !DILocation(line: 229, column: 25, scope: !3446)
!3465 = !DILocation(line: 229, column: 3, scope: !3446)
!3466 = !DILocation(line: 231, column: 3, scope: !3446)
!3467 = !DILocation(line: 232, column: 2, scope: !3447)
!3468 = !DILocation(line: 216, column: 20, scope: !3447)
!3469 = distinct !{!3469, !3450, !3470}
!3470 = !DILocation(line: 232, column: 2, scope: !3444)
!3471 = distinct !DISubprogram(name: "new_prio", scope: !3192, file: !3192, line: 182, type: !288, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3472)
!3472 = !{!3473}
!3473 = !DILocalVariable(name: "phil", arg: 1, scope: !3471, file: !3192, line: 182, type: !109)
!3474 = !DILocation(line: 0, scope: !3471)
!3475 = !DILocation(line: 188, column: 9, scope: !3471)
!3476 = !DILocation(line: 188, column: 2, scope: !3471)
!3477 = distinct !DISubprogram(name: "k_thread_create", scope: !3261, file: !3261, line: 24, type: !3478, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3482)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!3389, !143, !3480, !235, !215, !108, !108, !108, !109, !110, !3264}
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 32)
!3481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !272)
!3482 = !{!3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492}
!3483 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3477, file: !3261, line: 24, type: !143)
!3484 = !DILocalVariable(name: "stack", arg: 2, scope: !3477, file: !3261, line: 24, type: !3480)
!3485 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3477, file: !3261, line: 24, type: !235)
!3486 = !DILocalVariable(name: "entry", arg: 4, scope: !3477, file: !3261, line: 24, type: !215)
!3487 = !DILocalVariable(name: "p1", arg: 5, scope: !3477, file: !3261, line: 24, type: !108)
!3488 = !DILocalVariable(name: "p2", arg: 6, scope: !3477, file: !3261, line: 24, type: !108)
!3489 = !DILocalVariable(name: "p3", arg: 7, scope: !3477, file: !3261, line: 24, type: !108)
!3490 = !DILocalVariable(name: "prio", arg: 8, scope: !3477, file: !3261, line: 24, type: !109)
!3491 = !DILocalVariable(name: "options", arg: 9, scope: !3477, file: !3261, line: 24, type: !110)
!3492 = !DILocalVariable(name: "delay", arg: 10, scope: !3477, file: !3261, line: 24, type: !3264)
!3493 = !DILocation(line: 0, scope: !3477)
!3494 = !DILocation(line: 49, column: 2, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3477, file: !3261, line: 49, column: 2)
!3496 = !{i64 2152223681}
!3497 = !DILocation(line: 50, column: 9, scope: !3477)
!3498 = !DILocation(line: 50, column: 2, scope: !3477)
!3499 = distinct !DISubprogram(name: "k_thread_name_set", scope: !3261, file: !3261, line: 391, type: !3500, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3502)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!109, !3389, !337}
!3502 = !{!3503, !3504}
!3503 = !DILocalVariable(name: "thread", arg: 1, scope: !3499, file: !3261, line: 391, type: !3389)
!3504 = !DILocalVariable(name: "str", arg: 2, scope: !3499, file: !3261, line: 391, type: !337)
!3505 = !DILocation(line: 0, scope: !3499)
!3506 = !DILocation(line: 400, column: 2, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3499, file: !3261, line: 400, column: 2)
!3508 = !{i64 2152225109}
!3509 = !DILocation(line: 401, column: 9, scope: !3499)
!3510 = !DILocation(line: 401, column: 2, scope: !3499)
!3511 = distinct !DISubprogram(name: "k_object_access_grant", scope: !3512, file: !3512, line: 24, type: !3513, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3515)
!3512 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!3513 = !DISubroutineType(types: !3514)
!3514 = !{null, !13, !143}
!3515 = !{!3516, !3517}
!3516 = !DILocalVariable(name: "object", arg: 1, scope: !3511, file: !3512, line: 24, type: !13)
!3517 = !DILocalVariable(name: "thread", arg: 2, scope: !3511, file: !3512, line: 24, type: !143)
!3518 = !DILocation(line: 0, scope: !3511)
!3519 = !DILocation(line: 34, column: 2, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3511, file: !3512, line: 34, column: 2)
!3521 = !{i64 2151740101}
!3522 = !DILocation(line: 36, column: 1, scope: !3511)
!3523 = distinct !DISubprogram(name: "k_thread_start", scope: !3261, file: !3261, line: 205, type: !3524, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3526)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{null, !3389}
!3526 = !{!3527}
!3527 = !DILocalVariable(name: "thread", arg: 1, scope: !3523, file: !3261, line: 205, type: !3389)
!3528 = !DILocation(line: 0, scope: !3523)
!3529 = !DILocation(line: 214, column: 2, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3523, file: !3261, line: 214, column: 2)
!3531 = !{i64 2152224361}
!3532 = !DILocation(line: 215, column: 2, scope: !3523)
!3533 = !DILocation(line: 216, column: 1, scope: !3523)
!3534 = distinct !DISubprogram(name: "k_mutex_init", scope: !3261, file: !3261, line: 911, type: !3303, scopeLine: 912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3535)
!3535 = !{!3536}
!3536 = !DILocalVariable(name: "mutex", arg: 1, scope: !3534, file: !3261, line: 911, type: !279)
!3537 = !DILocation(line: 0, scope: !3534)
!3538 = !DILocation(line: 919, column: 2, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3534, file: !3261, line: 919, column: 2)
!3540 = !{i64 2152227185}
!3541 = !DILocation(line: 920, column: 9, scope: !3534)
!3542 = !DILocation(line: 920, column: 2, scope: !3534)
!3543 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !286, file: !286, line: 45, type: !288, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3544)
!3544 = !{!3545}
!3545 = !DILocalVariable(name: "c", arg: 1, scope: !3543, file: !286, line: 45, type: !109)
!3546 = !DILocation(line: 0, scope: !3543)
!3547 = !DILocation(line: 50, column: 2, scope: !3543)
!3548 = distinct !DISubprogram(name: "__printk_hook_install", scope: !286, file: !286, line: 63, type: !3549, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3551)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{null, !287}
!3551 = !{!3552}
!3552 = !DILocalVariable(name: "fn", arg: 1, scope: !3548, file: !286, line: 63, type: !287)
!3553 = !DILocation(line: 0, scope: !3548)
!3554 = !DILocation(line: 65, column: 12, scope: !3548)
!3555 = !DILocation(line: 66, column: 1, scope: !3548)
!3556 = distinct !DISubprogram(name: "__printk_get_hook", scope: !286, file: !286, line: 76, type: !3557, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !2037)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!108}
!3559 = !DILocation(line: 78, column: 9, scope: !3556)
!3560 = !DILocation(line: 78, column: 2, scope: !3556)
!3561 = distinct !DISubprogram(name: "vprintk", scope: !286, file: !286, line: 113, type: !3562, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3571)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !337, !3564}
!3564 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3565, line: 99, baseType: !3566)
!3565 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3565, line: 40, baseType: !3567)
!3567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3568)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3569)
!3569 = !{!3570}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3568, file: !286, line: 79, baseType: !108, size: 32)
!3571 = !{!3572, !3573, !3574}
!3572 = !DILocalVariable(name: "fmt", arg: 1, scope: !3561, file: !286, line: 113, type: !337)
!3573 = !DILocalVariable(name: "ap", arg: 2, scope: !3561, file: !286, line: 113, type: !3564)
!3574 = !DILocalVariable(name: "ctx", scope: !3575, file: !286, line: 121, type: !3577)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !286, line: 120, column: 27)
!3576 = distinct !DILexicalBlock(scope: !3561, file: !286, line: 120, column: 6)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !286, line: 81, size: 32, elements: !3578)
!3578 = !{!3579, !3580}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3577, file: !286, line: 85, baseType: !32, size: 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3577, file: !286, line: 86, baseType: !3581, offset: 32)
!3581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !3582)
!3582 = !{!3583}
!3583 = !DISubrange(count: 0)
!3584 = !DILocation(line: 0, scope: !3561)
!3585 = !DILocation(line: 148, column: 3, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3576, file: !286, line: 138, column: 9)
!3587 = !DILocation(line: 155, column: 1, scope: !3561)
!3588 = distinct !DISubprogram(name: "char_out", scope: !286, file: !286, line: 107, type: !3589, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3591)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{!109, !109, !108}
!3591 = !{!3592, !3593}
!3592 = !DILocalVariable(name: "c", arg: 1, scope: !3588, file: !286, line: 107, type: !109)
!3593 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3588, file: !286, line: 107, type: !108)
!3594 = !DILocation(line: 0, scope: !3588)
!3595 = !DILocation(line: 110, column: 9, scope: !3588)
!3596 = !DILocation(line: 110, column: 2, scope: !3588)
!3597 = distinct !DISubprogram(name: "cbvprintf", scope: !3598, file: !3598, line: 739, type: !3599, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3605)
!3598 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!109, !3601, !108, !337, !3564}
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3598, line: 297, baseType: !3602)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 32)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!109, null}
!3605 = !{!3606, !3607, !3608, !3609}
!3606 = !DILocalVariable(name: "out", arg: 1, scope: !3597, file: !3598, line: 739, type: !3601)
!3607 = !DILocalVariable(name: "ctx", arg: 2, scope: !3597, file: !3598, line: 739, type: !108)
!3608 = !DILocalVariable(name: "format", arg: 3, scope: !3597, file: !3598, line: 739, type: !337)
!3609 = !DILocalVariable(name: "ap", arg: 4, scope: !3597, file: !3598, line: 739, type: !3564)
!3610 = !DILocation(line: 0, scope: !3597)
!3611 = !DILocation(line: 741, column: 9, scope: !3597)
!3612 = !DILocation(line: 741, column: 2, scope: !3597)
!3613 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !286, file: !286, line: 157, type: !3614, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3616)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{null, !1185, !235}
!3616 = !{!3617, !3618, !3619}
!3617 = !DILocalVariable(name: "c", arg: 1, scope: !3613, file: !286, line: 157, type: !1185)
!3618 = !DILocalVariable(name: "n", arg: 2, scope: !3613, file: !286, line: 157, type: !235)
!3619 = !DILocalVariable(name: "i", scope: !3613, file: !286, line: 159, type: !235)
!3620 = !DILocation(line: 0, scope: !3613)
!3621 = !DILocation(line: 164, column: 16, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !286, line: 164, column: 2)
!3623 = distinct !DILexicalBlock(scope: !3613, file: !286, line: 164, column: 2)
!3624 = !DILocation(line: 164, column: 2, scope: !3623)
!3625 = !DILocation(line: 165, column: 3, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3622, file: !286, line: 164, column: 26)
!3627 = !DILocation(line: 165, column: 13, scope: !3626)
!3628 = !DILocation(line: 164, column: 22, scope: !3622)
!3629 = distinct !{!3629, !3624, !3630}
!3630 = !DILocation(line: 166, column: 2, scope: !3623)
!3631 = !DILocation(line: 171, column: 1, scope: !3613)
!3632 = distinct !DISubprogram(name: "printk", scope: !286, file: !286, line: 203, type: !3633, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3635)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{null, !337, null}
!3635 = !{!3636, !3637}
!3636 = !DILocalVariable(name: "fmt", arg: 1, scope: !3632, file: !286, line: 203, type: !337)
!3637 = !DILocalVariable(name: "ap", scope: !3632, file: !286, line: 205, type: !3564)
!3638 = !DILocation(line: 0, scope: !3632)
!3639 = !DILocation(line: 205, column: 2, scope: !3632)
!3640 = !DILocation(line: 205, column: 10, scope: !3632)
!3641 = !DILocation(line: 207, column: 2, scope: !3632)
!3642 = !DILocation(line: 209, column: 2, scope: !3632)
!3643 = !DILocation(line: 211, column: 2, scope: !3632)
!3644 = !DILocation(line: 212, column: 1, scope: !3632)
!3645 = distinct !DISubprogram(name: "snprintk", scope: !286, file: !286, line: 239, type: !3646, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3648)
!3646 = !DISubroutineType(types: !3647)
!3647 = !{!109, !1185, !235, !337, null}
!3648 = !{!3649, !3650, !3651, !3652, !3653}
!3649 = !DILocalVariable(name: "str", arg: 1, scope: !3645, file: !286, line: 239, type: !1185)
!3650 = !DILocalVariable(name: "size", arg: 2, scope: !3645, file: !286, line: 239, type: !235)
!3651 = !DILocalVariable(name: "fmt", arg: 3, scope: !3645, file: !286, line: 239, type: !337)
!3652 = !DILocalVariable(name: "ap", scope: !3645, file: !286, line: 241, type: !3564)
!3653 = !DILocalVariable(name: "ret", scope: !3645, file: !286, line: 242, type: !109)
!3654 = !DILocation(line: 0, scope: !3645)
!3655 = !DILocation(line: 241, column: 2, scope: !3645)
!3656 = !DILocation(line: 241, column: 10, scope: !3645)
!3657 = !DILocation(line: 244, column: 2, scope: !3645)
!3658 = !DILocation(line: 245, column: 8, scope: !3645)
!3659 = !DILocation(line: 246, column: 2, scope: !3645)
!3660 = !DILocation(line: 249, column: 1, scope: !3645)
!3661 = !DILocation(line: 248, column: 2, scope: !3645)
!3662 = distinct !DISubprogram(name: "vsnprintk", scope: !286, file: !286, line: 251, type: !3663, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3665)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!109, !1185, !235, !337, !3564}
!3665 = !{!3666, !3667, !3668, !3669, !3670}
!3666 = !DILocalVariable(name: "str", arg: 1, scope: !3662, file: !286, line: 251, type: !1185)
!3667 = !DILocalVariable(name: "size", arg: 2, scope: !3662, file: !286, line: 251, type: !235)
!3668 = !DILocalVariable(name: "fmt", arg: 3, scope: !3662, file: !286, line: 251, type: !337)
!3669 = !DILocalVariable(name: "ap", arg: 4, scope: !3662, file: !286, line: 251, type: !3564)
!3670 = !DILocalVariable(name: "ctx", scope: !3662, file: !286, line: 253, type: !3671)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !286, line: 217, size: 96, elements: !3672)
!3672 = !{!3673, !3674, !3675}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3671, file: !286, line: 218, baseType: !1185, size: 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3671, file: !286, line: 219, baseType: !109, size: 32, offset: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3671, file: !286, line: 220, baseType: !109, size: 32, offset: 64)
!3676 = !DILocation(line: 0, scope: !3662)
!3677 = !DILocation(line: 253, column: 2, scope: !3662)
!3678 = !DILocation(line: 253, column: 21, scope: !3662)
!3679 = !DILocation(line: 253, column: 27, scope: !3662)
!3680 = !DILocation(line: 255, column: 2, scope: !3662)
!3681 = !DILocation(line: 257, column: 10, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3662, file: !286, line: 257, column: 6)
!3683 = !DILocation(line: 257, column: 22, scope: !3682)
!3684 = !DILocation(line: 257, column: 16, scope: !3682)
!3685 = !DILocation(line: 257, column: 6, scope: !3662)
!3686 = !DILocation(line: 258, column: 3, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3682, file: !286, line: 257, column: 27)
!3688 = !DILocation(line: 258, column: 18, scope: !3687)
!3689 = !DILocation(line: 259, column: 2, scope: !3687)
!3690 = !DILocation(line: 262, column: 1, scope: !3662)
!3691 = !DILocation(line: 261, column: 2, scope: !3662)
!3692 = distinct !DISubprogram(name: "str_out", scope: !286, file: !286, line: 223, type: !3693, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3696)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!109, !109, !3695}
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 32)
!3696 = !{!3697, !3698}
!3697 = !DILocalVariable(name: "c", arg: 1, scope: !3692, file: !286, line: 223, type: !109)
!3698 = !DILocalVariable(name: "ctx", arg: 2, scope: !3692, file: !286, line: 223, type: !3695)
!3699 = !DILocation(line: 0, scope: !3692)
!3700 = !DILocation(line: 225, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3692, file: !286, line: 225, column: 6)
!3702 = !DILocation(line: 225, column: 15, scope: !3701)
!3703 = !DILocation(line: 0, scope: !3701)
!3704 = !DILocation(line: 225, column: 23, scope: !3701)
!3705 = !DILocation(line: 225, column: 45, scope: !3701)
!3706 = !DILocation(line: 225, column: 37, scope: !3701)
!3707 = !DILocation(line: 225, column: 6, scope: !3692)
!3708 = !DILocation(line: 226, column: 8, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3701, file: !286, line: 225, column: 50)
!3710 = !DILocation(line: 226, column: 13, scope: !3709)
!3711 = !DILocation(line: 227, column: 3, scope: !3709)
!3712 = !DILocation(line: 230, column: 29, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3692, file: !286, line: 230, column: 6)
!3714 = !DILocation(line: 230, column: 17, scope: !3713)
!3715 = !DILocation(line: 230, column: 6, scope: !3692)
!3716 = !DILocation(line: 231, column: 22, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3713, file: !286, line: 230, column: 34)
!3718 = !DILocation(line: 231, column: 3, scope: !3717)
!3719 = !DILocation(line: 231, column: 26, scope: !3717)
!3720 = !DILocation(line: 232, column: 2, scope: !3717)
!3721 = !DILocation(line: 233, column: 28, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3713, file: !286, line: 232, column: 9)
!3723 = !DILocation(line: 233, column: 22, scope: !3722)
!3724 = !DILocation(line: 233, column: 3, scope: !3722)
!3725 = !DILocation(line: 233, column: 26, scope: !3722)
!3726 = !DILocation(line: 237, column: 1, scope: !3692)
!3727 = distinct !DISubprogram(name: "z_rb_get_minmax", scope: !2532, file: !2532, line: 100, type: !3728, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3740)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!2537, !3730, !167}
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 32)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !3732)
!3732 = !{!3733, !3734, !3739}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3731, file: !157, line: 84, baseType: !2537, size: 32)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !3731, file: !157, line: 85, baseType: !3735, size: 32, offset: 32)
!3735 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !3736)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 32)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!347, !2537, !2537}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !3731, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!3740 = !{!3741, !3742, !3743}
!3741 = !DILocalVariable(name: "tree", arg: 1, scope: !3727, file: !2532, line: 100, type: !3730)
!3742 = !DILocalVariable(name: "side", arg: 2, scope: !3727, file: !2532, line: 100, type: !167)
!3743 = !DILocalVariable(name: "n", scope: !3727, file: !2532, line: 102, type: !2537)
!3744 = !DILocation(line: 0, scope: !3727)
!3745 = !DILocation(line: 104, column: 17, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3727, file: !2532, line: 104, column: 2)
!3747 = !DILocation(line: 104, column: 7, scope: !3746)
!3748 = !DILocation(line: 0, scope: !3746)
!3749 = !DILocation(line: 104, column: 26, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3746, file: !2532, line: 104, column: 2)
!3751 = !DILocation(line: 104, column: 35, scope: !3750)
!3752 = !DILocation(line: 104, column: 39, scope: !3750)
!3753 = !DILocation(line: 104, column: 58, scope: !3750)
!3754 = !DILocation(line: 104, column: 2, scope: !3746)
!3755 = distinct !{!3755, !3754, !3756}
!3756 = !DILocation(line: 107, column: 2, scope: !3746)
!3757 = !DILocation(line: 108, column: 2, scope: !3727)
!3758 = distinct !DISubprogram(name: "get_child", scope: !2532, file: !2532, line: 21, type: !3759, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3761)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!2537, !2537, !167}
!3761 = !{!3762, !3763, !3764}
!3762 = !DILocalVariable(name: "n", arg: 1, scope: !3758, file: !2532, line: 21, type: !2537)
!3763 = !DILocalVariable(name: "side", arg: 2, scope: !3758, file: !2532, line: 21, type: !167)
!3764 = !DILocalVariable(name: "l", scope: !3758, file: !2532, line: 28, type: !22)
!3765 = !DILocation(line: 0, scope: !3758)
!3766 = !DILocation(line: 24, column: 11, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3758, file: !2532, line: 24, column: 6)
!3768 = !DILocation(line: 24, column: 6, scope: !3758)
!3769 = !DILocation(line: 25, column: 10, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3767, file: !2532, line: 24, column: 18)
!3771 = !DILocation(line: 25, column: 3, scope: !3770)
!3772 = !DILocation(line: 28, column: 28, scope: !3758)
!3773 = !DILocation(line: 28, column: 16, scope: !3758)
!3774 = !DILocation(line: 30, column: 4, scope: !3758)
!3775 = !DILocation(line: 31, column: 9, scope: !3758)
!3776 = !DILocation(line: 32, column: 1, scope: !3758)
!3777 = distinct !DISubprogram(name: "rb_insert", scope: !2532, file: !2532, line: 217, type: !3778, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3780)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{null, !3730, !2537}
!3780 = !{!3781, !3782, !3783, !3784, !3788, !3789, !3790}
!3781 = !DILocalVariable(name: "tree", arg: 1, scope: !3777, file: !2532, line: 217, type: !3730)
!3782 = !DILocalVariable(name: "node", arg: 2, scope: !3777, file: !2532, line: 217, type: !2537)
!3783 = !DILocalVariable(name: "__vla_expr0", scope: !3777, type: !32, flags: DIFlagArtificial)
!3784 = !DILocalVariable(name: "stack", scope: !3777, file: !2532, line: 232, type: !3785)
!3785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2537, elements: !3786)
!3786 = !{!3787}
!3787 = !DISubrange(count: !3783)
!3788 = !DILocalVariable(name: "stacksz", scope: !3777, file: !2532, line: 235, type: !109)
!3789 = !DILocalVariable(name: "parent", scope: !3777, file: !2532, line: 237, type: !2537)
!3790 = !DILocalVariable(name: "side", scope: !3777, file: !2532, line: 239, type: !167)
!3791 = !DILocation(line: 0, scope: !3777)
!3792 = !DILocation(line: 219, column: 2, scope: !3777)
!3793 = !DILocation(line: 220, column: 2, scope: !3777)
!3794 = !DILocation(line: 222, column: 12, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3777, file: !2532, line: 222, column: 6)
!3796 = !DILocation(line: 222, column: 17, scope: !3795)
!3797 = !DILocation(line: 222, column: 6, scope: !3777)
!3798 = !DILocation(line: 223, column: 14, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3795, file: !2532, line: 222, column: 26)
!3800 = !DILocation(line: 224, column: 9, scope: !3799)
!3801 = !DILocation(line: 224, column: 19, scope: !3799)
!3802 = !DILocation(line: 225, column: 3, scope: !3799)
!3803 = !DILocation(line: 226, column: 3, scope: !3799)
!3804 = !DILocation(line: 232, column: 29, scope: !3777)
!3805 = !DILocation(line: 232, column: 39, scope: !3777)
!3806 = !DILocation(line: 232, column: 2, scope: !3777)
!3807 = !DILocation(line: 232, column: 17, scope: !3777)
!3808 = !DILocation(line: 235, column: 16, scope: !3777)
!3809 = !DILocation(line: 237, column: 40, scope: !3777)
!3810 = !DILocation(line: 237, column: 26, scope: !3777)
!3811 = !DILocation(line: 239, column: 23, scope: !3777)
!3812 = !DILocation(line: 239, column: 17, scope: !3777)
!3813 = !DILocation(line: 241, column: 26, scope: !3777)
!3814 = !DILocation(line: 241, column: 2, scope: !3777)
!3815 = !DILocation(line: 242, column: 2, scope: !3777)
!3816 = !DILocation(line: 244, column: 15, scope: !3777)
!3817 = !DILocation(line: 244, column: 2, scope: !3777)
!3818 = !DILocation(line: 244, column: 19, scope: !3777)
!3819 = !DILocation(line: 245, column: 2, scope: !3777)
!3820 = !DILocation(line: 247, column: 22, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3777, file: !2532, line: 247, column: 6)
!3822 = !DILocation(line: 247, column: 14, scope: !3821)
!3823 = !DILocation(line: 247, column: 6, scope: !3777)
!3824 = !DILocation(line: 248, column: 19, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3821, file: !2532, line: 247, column: 33)
!3826 = !DILocation(line: 249, column: 2, scope: !3825)
!3827 = !DILocation(line: 252, column: 15, scope: !3777)
!3828 = !DILocation(line: 252, column: 13, scope: !3777)
!3829 = !DILocation(line: 254, column: 1, scope: !3777)
!3830 = distinct !DISubprogram(name: "set_child", scope: !2532, file: !2532, line: 34, type: !3831, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3833)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{null, !2537, !167, !108}
!3833 = !{!3834, !3835, !3836, !3837, !3840}
!3834 = !DILocalVariable(name: "n", arg: 1, scope: !3830, file: !2532, line: 34, type: !2537)
!3835 = !DILocalVariable(name: "side", arg: 2, scope: !3830, file: !2532, line: 34, type: !167)
!3836 = !DILocalVariable(name: "val", arg: 3, scope: !3830, file: !2532, line: 34, type: !108)
!3837 = !DILocalVariable(name: "old", scope: !3838, file: !2532, line: 40, type: !22)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !2532, line: 39, column: 9)
!3839 = distinct !DILexicalBlock(scope: !3830, file: !2532, line: 37, column: 6)
!3840 = !DILocalVariable(name: "new", scope: !3838, file: !2532, line: 41, type: !22)
!3841 = !DILocation(line: 0, scope: !3830)
!3842 = !DILocation(line: 37, column: 11, scope: !3839)
!3843 = !DILocation(line: 37, column: 6, scope: !3830)
!3844 = !DILocation(line: 38, column: 3, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3839, file: !2532, line: 37, column: 18)
!3846 = !DILocation(line: 38, column: 18, scope: !3845)
!3847 = !DILocation(line: 39, column: 2, scope: !3845)
!3848 = !DILocation(line: 40, column: 31, scope: !3838)
!3849 = !DILocation(line: 40, column: 19, scope: !3838)
!3850 = !DILocation(line: 0, scope: !3838)
!3851 = !DILocation(line: 41, column: 19, scope: !3838)
!3852 = !DILocation(line: 43, column: 41, scope: !3838)
!3853 = !DILocation(line: 43, column: 34, scope: !3838)
!3854 = !DILocation(line: 43, column: 20, scope: !3838)
!3855 = !DILocation(line: 43, column: 18, scope: !3838)
!3856 = !DILocation(line: 45, column: 1, scope: !3830)
!3857 = distinct !DISubprogram(name: "set_color", scope: !2532, file: !2532, line: 63, type: !3858, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3860)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !2537, !2531}
!3860 = !{!3861, !3862, !3863}
!3861 = !DILocalVariable(name: "n", arg: 1, scope: !3857, file: !2532, line: 63, type: !2537)
!3862 = !DILocalVariable(name: "color", arg: 2, scope: !3857, file: !2532, line: 63, type: !2531)
!3863 = !DILocalVariable(name: "p", scope: !3857, file: !2532, line: 67, type: !3864)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32)
!3865 = !DILocation(line: 0, scope: !3857)
!3866 = !DILocation(line: 67, column: 17, scope: !3857)
!3867 = !DILocation(line: 69, column: 8, scope: !3857)
!3868 = !DILocation(line: 69, column: 11, scope: !3857)
!3869 = !DILocation(line: 69, column: 21, scope: !3857)
!3870 = !DILocation(line: 69, column: 19, scope: !3857)
!3871 = !DILocation(line: 69, column: 5, scope: !3857)
!3872 = !DILocation(line: 70, column: 1, scope: !3857)
!3873 = distinct !DISubprogram(name: "find_and_stack", scope: !2532, file: !2532, line: 79, type: !3874, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3877)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!109, !3730, !2537, !3876}
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 32)
!3877 = !{!3878, !3879, !3880, !3881, !3882, !3884}
!3878 = !DILocalVariable(name: "tree", arg: 1, scope: !3873, file: !2532, line: 79, type: !3730)
!3879 = !DILocalVariable(name: "node", arg: 2, scope: !3873, file: !2532, line: 79, type: !2537)
!3880 = !DILocalVariable(name: "stack", arg: 3, scope: !3873, file: !2532, line: 80, type: !3876)
!3881 = !DILocalVariable(name: "sz", scope: !3873, file: !2532, line: 82, type: !109)
!3882 = !DILocalVariable(name: "side", scope: !3883, file: !2532, line: 87, type: !167)
!3883 = distinct !DILexicalBlock(scope: !3873, file: !2532, line: 86, column: 32)
!3884 = !DILocalVariable(name: "ch", scope: !3883, file: !2532, line: 88, type: !2537)
!3885 = !DILocation(line: 0, scope: !3873)
!3886 = !DILocation(line: 84, column: 22, scope: !3873)
!3887 = !DILocation(line: 84, column: 14, scope: !3873)
!3888 = !DILocation(line: 87, column: 24, scope: !3883)
!3889 = !DILocation(line: 86, column: 23, scope: !3873)
!3890 = !DILocation(line: 86, column: 2, scope: !3873)
!3891 = !DILocation(line: 87, column: 18, scope: !3883)
!3892 = !DILocation(line: 0, scope: !3883)
!3893 = !DILocation(line: 88, column: 33, scope: !3883)
!3894 = !DILocation(line: 88, column: 23, scope: !3883)
!3895 = !DILocation(line: 90, column: 10, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3883, file: !2532, line: 90, column: 7)
!3897 = !DILocation(line: 90, column: 7, scope: !3883)
!3898 = !DILocation(line: 91, column: 12, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3896, file: !2532, line: 90, column: 19)
!3900 = !DILocation(line: 91, column: 4, scope: !3899)
!3901 = !DILocation(line: 91, column: 16, scope: !3899)
!3902 = !DILocation(line: 97, column: 2, scope: !3873)
!3903 = distinct !DISubprogram(name: "fix_extra_red", scope: !2532, file: !2532, line: 155, type: !3904, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{null, !3876, !109}
!3906 = !{!3907, !3908, !3909, !3911, !3912, !3913, !3914, !3915}
!3907 = !DILocalVariable(name: "stack", arg: 1, scope: !3903, file: !2532, line: 155, type: !3876)
!3908 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3903, file: !2532, line: 155, type: !109)
!3909 = !DILocalVariable(name: "node", scope: !3910, file: !2532, line: 158, type: !2537)
!3910 = distinct !DILexicalBlock(scope: !3903, file: !2532, line: 157, column: 22)
!3911 = !DILocalVariable(name: "parent", scope: !3910, file: !2532, line: 159, type: !2537)
!3912 = !DILocalVariable(name: "grandparent", scope: !3910, file: !2532, line: 176, type: !2537)
!3913 = !DILocalVariable(name: "side", scope: !3910, file: !2532, line: 177, type: !167)
!3914 = !DILocalVariable(name: "aunt", scope: !3910, file: !2532, line: 178, type: !2537)
!3915 = !DILocalVariable(name: "parent_side", scope: !3910, file: !2532, line: 198, type: !167)
!3916 = !DILocation(line: 0, scope: !3903)
!3917 = !DILocation(line: 157, column: 17, scope: !3903)
!3918 = !DILocation(line: 157, column: 2, scope: !3903)
!3919 = !DILocation(line: 158, column: 39, scope: !3910)
!3920 = !DILocation(line: 158, column: 25, scope: !3910)
!3921 = !DILocation(line: 0, scope: !3910)
!3922 = !DILocation(line: 159, column: 41, scope: !3910)
!3923 = !DILocation(line: 159, column: 27, scope: !3910)
!3924 = !DILocation(line: 167, column: 7, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3910, file: !2532, line: 167, column: 7)
!3926 = !DILocation(line: 167, column: 7, scope: !3910)
!3927 = !DILocation(line: 176, column: 46, scope: !3910)
!3928 = !DILocation(line: 176, column: 32, scope: !3910)
!3929 = !DILocation(line: 177, column: 18, scope: !3910)
!3930 = !DILocation(line: 179, column: 13, scope: !3910)
!3931 = !DILocation(line: 179, column: 7, scope: !3910)
!3932 = !DILocation(line: 178, column: 25, scope: !3910)
!3933 = !DILocation(line: 181, column: 13, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3910, file: !2532, line: 181, column: 7)
!3935 = !DILocation(line: 181, column: 22, scope: !3934)
!3936 = !DILocation(line: 181, column: 25, scope: !3934)
!3937 = !DILocation(line: 181, column: 7, scope: !3910)
!3938 = !DILocation(line: 198, column: 25, scope: !3910)
!3939 = !DILocation(line: 200, column: 19, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3910, file: !2532, line: 200, column: 7)
!3941 = !DILocation(line: 200, column: 7, scope: !3910)
!3942 = !DILocation(line: 201, column: 4, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !2532, line: 200, column: 28)
!3944 = !DILocation(line: 202, column: 3, scope: !3943)
!3945 = !DILocation(line: 205, column: 3, scope: !3910)
!3946 = !DILocation(line: 206, column: 13, scope: !3910)
!3947 = !DILocation(line: 206, column: 3, scope: !3910)
!3948 = !DILocation(line: 182, column: 4, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3934, file: !2532, line: 181, column: 39)
!3950 = !DILocation(line: 183, column: 4, scope: !3949)
!3951 = !DILocation(line: 184, column: 4, scope: !3949)
!3952 = !DILocation(line: 215, column: 1, scope: !3903)
!3953 = distinct !DISubprogram(name: "is_black", scope: !2532, file: !2532, line: 53, type: !3954, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3956)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{!347, !2537}
!3956 = !{!3957}
!3957 = !DILocalVariable(name: "n", arg: 1, scope: !3953, file: !2532, line: 53, type: !2537)
!3958 = !DILocation(line: 0, scope: !3953)
!3959 = !DILocation(line: 55, column: 9, scope: !3953)
!3960 = !DILocation(line: 55, column: 22, scope: !3953)
!3961 = !DILocation(line: 55, column: 2, scope: !3953)
!3962 = distinct !DISubprogram(name: "get_side", scope: !2532, file: !2532, line: 111, type: !3963, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3965)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!167, !2537, !2537}
!3965 = !{!3966, !3967}
!3966 = !DILocalVariable(name: "parent", arg: 1, scope: !3962, file: !2532, line: 111, type: !2537)
!3967 = !DILocalVariable(name: "child", arg: 2, scope: !3962, file: !2532, line: 111, type: !2537)
!3968 = !DILocation(line: 0, scope: !3962)
!3969 = !DILocation(line: 115, column: 10, scope: !3962)
!3970 = !DILocation(line: 115, column: 32, scope: !3962)
!3971 = !DILocation(line: 115, column: 9, scope: !3962)
!3972 = !DILocation(line: 115, column: 2, scope: !3962)
!3973 = distinct !DISubprogram(name: "is_red", scope: !2532, file: !2532, line: 58, type: !3954, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3974)
!3974 = !{!3975}
!3975 = !DILocalVariable(name: "n", arg: 1, scope: !3973, file: !2532, line: 58, type: !2537)
!3976 = !DILocation(line: 0, scope: !3973)
!3977 = !DILocation(line: 60, column: 9, scope: !3973)
!3978 = !DILocation(line: 60, column: 22, scope: !3973)
!3979 = !DILocation(line: 60, column: 2, scope: !3973)
!3980 = distinct !DISubprogram(name: "rotate", scope: !2532, file: !2532, line: 128, type: !3904, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !3981)
!3981 = !{!3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989}
!3982 = !DILocalVariable(name: "stack", arg: 1, scope: !3980, file: !2532, line: 128, type: !3876)
!3983 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3980, file: !2532, line: 128, type: !109)
!3984 = !DILocalVariable(name: "parent", scope: !3980, file: !2532, line: 132, type: !2537)
!3985 = !DILocalVariable(name: "child", scope: !3980, file: !2532, line: 133, type: !2537)
!3986 = !DILocalVariable(name: "side", scope: !3980, file: !2532, line: 134, type: !167)
!3987 = !DILocalVariable(name: "a", scope: !3980, file: !2532, line: 135, type: !2537)
!3988 = !DILocalVariable(name: "b", scope: !3980, file: !2532, line: 136, type: !2537)
!3989 = !DILocalVariable(name: "grandparent", scope: !3990, file: !2532, line: 139, type: !2537)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !2532, line: 138, column: 20)
!3991 = distinct !DILexicalBlock(scope: !3980, file: !2532, line: 138, column: 6)
!3992 = !DILocation(line: 0, scope: !3980)
!3993 = !DILocation(line: 132, column: 40, scope: !3980)
!3994 = !DILocation(line: 132, column: 26, scope: !3980)
!3995 = !DILocation(line: 133, column: 39, scope: !3980)
!3996 = !DILocation(line: 133, column: 25, scope: !3980)
!3997 = !DILocation(line: 134, column: 17, scope: !3980)
!3998 = !{i8 0, i8 2}
!3999 = !DILocation(line: 135, column: 21, scope: !3980)
!4000 = !DILocation(line: 136, column: 38, scope: !3980)
!4001 = !DILocation(line: 136, column: 21, scope: !3980)
!4002 = !DILocation(line: 138, column: 14, scope: !3991)
!4003 = !DILocation(line: 138, column: 6, scope: !3980)
!4004 = !DILocation(line: 139, column: 46, scope: !3990)
!4005 = !DILocation(line: 139, column: 32, scope: !3990)
!4006 = !DILocation(line: 0, scope: !3990)
!4007 = !DILocation(line: 141, column: 26, scope: !3990)
!4008 = !DILocation(line: 141, column: 57, scope: !3990)
!4009 = !DILocation(line: 141, column: 3, scope: !3990)
!4010 = !DILocation(line: 142, column: 2, scope: !3990)
!4011 = !DILocation(line: 144, column: 25, scope: !3980)
!4012 = !DILocation(line: 144, column: 2, scope: !3980)
!4013 = !DILocation(line: 145, column: 43, scope: !3980)
!4014 = !DILocation(line: 145, column: 2, scope: !3980)
!4015 = !DILocation(line: 146, column: 26, scope: !3980)
!4016 = !DILocation(line: 146, column: 2, scope: !3980)
!4017 = !DILocation(line: 147, column: 21, scope: !3980)
!4018 = !DILocation(line: 148, column: 21, scope: !3980)
!4019 = !DILocation(line: 149, column: 1, scope: !3980)
!4020 = distinct !DISubprogram(name: "get_color", scope: !2532, file: !2532, line: 47, type: !4021, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!2531, !2537}
!4023 = !{!4024}
!4024 = !DILocalVariable(name: "n", arg: 1, scope: !4020, file: !2532, line: 47, type: !2537)
!4025 = !DILocation(line: 0, scope: !4020)
!4026 = !DILocation(line: 50, column: 21, scope: !4020)
!4027 = !DILocation(line: 50, column: 10, scope: !4020)
!4028 = !DILocation(line: 50, column: 37, scope: !4020)
!4029 = !DILocation(line: 50, column: 2, scope: !4020)
!4030 = distinct !DISubprogram(name: "rb_remove", scope: !2532, file: !2532, line: 367, type: !3778, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4031)
!4031 = !{!4032, !4033, !4034, !4035, !4036, !4040, !4041, !4044, !4045, !4046, !4047, !4048, !4049}
!4032 = !DILocalVariable(name: "tree", arg: 1, scope: !4030, file: !2532, line: 367, type: !3730)
!4033 = !DILocalVariable(name: "node", arg: 2, scope: !4030, file: !2532, line: 367, type: !2537)
!4034 = !DILocalVariable(name: "tmp", scope: !4030, file: !2532, line: 369, type: !2537)
!4035 = !DILocalVariable(name: "__vla_expr0", scope: !4030, type: !32, flags: DIFlagArtificial)
!4036 = !DILocalVariable(name: "stack", scope: !4030, file: !2532, line: 373, type: !4037)
!4037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2537, elements: !4038)
!4038 = !{!4039}
!4039 = !DISubrange(count: !4035)
!4040 = !DILocalVariable(name: "stacksz", scope: !4030, file: !2532, line: 376, type: !109)
!4041 = !DILocalVariable(name: "stacksz0", scope: !4042, file: !2532, line: 388, type: !109)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !2532, line: 387, column: 70)
!4043 = distinct !DILexicalBlock(scope: !4030, file: !2532, line: 387, column: 6)
!4044 = !DILocalVariable(name: "hiparent", scope: !4042, file: !2532, line: 389, type: !2537)
!4045 = !DILocalVariable(name: "loparent", scope: !4042, file: !2532, line: 389, type: !2537)
!4046 = !DILocalVariable(name: "node2", scope: !4042, file: !2532, line: 390, type: !2537)
!4047 = !DILocalVariable(name: "ctmp", scope: !4042, file: !2532, line: 440, type: !2531)
!4048 = !DILocalVariable(name: "child", scope: !4030, file: !2532, line: 449, type: !2537)
!4049 = !DILocalVariable(name: "parent", scope: !4030, file: !2532, line: 466, type: !2537)
!4050 = !DILocation(line: 0, scope: !4030)
!4051 = !DILocation(line: 373, column: 29, scope: !4030)
!4052 = !DILocation(line: 373, column: 39, scope: !4030)
!4053 = !DILocation(line: 373, column: 2, scope: !4030)
!4054 = !DILocation(line: 373, column: 17, scope: !4030)
!4055 = !DILocation(line: 376, column: 16, scope: !4030)
!4056 = !DILocation(line: 378, column: 28, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4030, file: !2532, line: 378, column: 6)
!4058 = !DILocation(line: 378, column: 14, scope: !4057)
!4059 = !DILocation(line: 378, column: 11, scope: !4057)
!4060 = !DILocation(line: 378, column: 6, scope: !4030)
!4061 = !DILocation(line: 387, column: 7, scope: !4043)
!4062 = !DILocation(line: 387, column: 27, scope: !4043)
!4063 = !DILocation(line: 387, column: 36, scope: !4043)
!4064 = !DILocation(line: 387, column: 40, scope: !4043)
!4065 = !DILocation(line: 387, column: 60, scope: !4043)
!4066 = !DILocation(line: 387, column: 6, scope: !4030)
!4067 = !DILocation(line: 0, scope: !4042)
!4068 = !DILocation(line: 392, column: 23, scope: !4042)
!4069 = !DILocation(line: 392, column: 14, scope: !4042)
!4070 = !DILocation(line: 392, column: 44, scope: !4042)
!4071 = !DILocation(line: 392, column: 30, scope: !4042)
!4072 = !DILocation(line: 393, column: 3, scope: !4042)
!4073 = !DILocation(line: 393, column: 20, scope: !4042)
!4074 = !DILocation(line: 394, column: 10, scope: !4042)
!4075 = !DILocation(line: 394, column: 31, scope: !4042)
!4076 = !DILocation(line: 394, column: 3, scope: !4042)
!4077 = !DILocation(line: 396, column: 4, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4042, file: !2532, line: 394, column: 40)
!4079 = !DILocation(line: 396, column: 21, scope: !4078)
!4080 = distinct !{!4080, !4076, !4081}
!4081 = !DILocation(line: 397, column: 3, scope: !4042)
!4082 = !DILocation(line: 399, column: 28, scope: !4042)
!4083 = !DILocation(line: 399, column: 14, scope: !4042)
!4084 = !DILocation(line: 417, column: 16, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4042, file: !2532, line: 417, column: 7)
!4086 = !DILocation(line: 417, column: 7, scope: !4042)
!4087 = !DILocation(line: 418, column: 24, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4085, file: !2532, line: 417, column: 25)
!4089 = !DILocation(line: 418, column: 50, scope: !4088)
!4090 = !DILocation(line: 418, column: 4, scope: !4088)
!4091 = !DILocation(line: 419, column: 3, scope: !4088)
!4092 = !DILocation(line: 420, column: 10, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4085, file: !2532, line: 419, column: 10)
!4094 = !DILocation(line: 420, column: 15, scope: !4093)
!4095 = !DILocation(line: 423, column: 16, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4042, file: !2532, line: 423, column: 7)
!4097 = !DILocation(line: 423, column: 7, scope: !4042)
!4098 = !DILocation(line: 427, column: 24, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4096, file: !2532, line: 426, column: 10)
!4100 = !DILocation(line: 427, column: 51, scope: !4099)
!4101 = !DILocation(line: 427, column: 4, scope: !4099)
!4102 = !DILocation(line: 428, column: 10, scope: !4099)
!4103 = !DILocation(line: 0, scope: !4096)
!4104 = !DILocation(line: 433, column: 24, scope: !4042)
!4105 = !DILocation(line: 433, column: 3, scope: !4042)
!4106 = !DILocation(line: 434, column: 3, scope: !4042)
!4107 = !DILocation(line: 436, column: 9, scope: !4042)
!4108 = !DILocation(line: 437, column: 25, scope: !4042)
!4109 = !DILocation(line: 437, column: 23, scope: !4042)
!4110 = !DILocation(line: 438, column: 22, scope: !4042)
!4111 = !DILocation(line: 440, column: 24, scope: !4042)
!4112 = !DILocation(line: 442, column: 19, scope: !4042)
!4113 = !{i32 0, i32 2}
!4114 = !DILocation(line: 442, column: 3, scope: !4042)
!4115 = !DILocation(line: 443, column: 3, scope: !4042)
!4116 = !DILocation(line: 444, column: 2, scope: !4042)
!4117 = !DILocation(line: 449, column: 25, scope: !4030)
!4118 = !DILocation(line: 451, column: 12, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4030, file: !2532, line: 451, column: 6)
!4120 = !DILocation(line: 451, column: 6, scope: !4030)
!4121 = !DILocation(line: 452, column: 11, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4119, file: !2532, line: 451, column: 21)
!4123 = !DILocation(line: 453, column: 2, scope: !4122)
!4124 = !DILocation(line: 456, column: 14, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4030, file: !2532, line: 456, column: 6)
!4126 = !DILocation(line: 456, column: 6, scope: !4030)
!4127 = !DILocation(line: 457, column: 9, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4125, file: !2532, line: 456, column: 19)
!4129 = !DILocation(line: 457, column: 14, scope: !4128)
!4130 = !DILocation(line: 458, column: 13, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4128, file: !2532, line: 458, column: 7)
!4132 = !DILocation(line: 458, column: 7, scope: !4128)
!4133 = !DILocation(line: 459, column: 4, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4131, file: !2532, line: 458, column: 22)
!4135 = !DILocation(line: 460, column: 3, scope: !4134)
!4136 = !DILocation(line: 461, column: 20, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4131, file: !2532, line: 460, column: 10)
!4138 = !DILocation(line: 466, column: 40, scope: !4030)
!4139 = !DILocation(line: 466, column: 26, scope: !4030)
!4140 = !DILocation(line: 473, column: 12, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4030, file: !2532, line: 473, column: 6)
!4142 = !DILocation(line: 473, column: 6, scope: !4030)
!4143 = !DILocation(line: 474, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !2532, line: 474, column: 7)
!4145 = distinct !DILexicalBlock(scope: !4141, file: !2532, line: 473, column: 21)
!4146 = !DILocation(line: 474, column: 7, scope: !4145)
!4147 = !DILocation(line: 475, column: 4, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4144, file: !2532, line: 474, column: 23)
!4149 = !DILocation(line: 476, column: 3, scope: !4148)
!4150 = !DILocation(line: 478, column: 22, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4144, file: !2532, line: 476, column: 10)
!4152 = !DILocation(line: 478, column: 4, scope: !4151)
!4153 = !DILocation(line: 481, column: 21, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4141, file: !2532, line: 480, column: 9)
!4155 = !DILocation(line: 481, column: 45, scope: !4154)
!4156 = !DILocation(line: 481, column: 3, scope: !4154)
!4157 = !DILocation(line: 486, column: 3, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !2532, line: 486, column: 3)
!4159 = distinct !DILexicalBlock(scope: !4154, file: !2532, line: 486, column: 3)
!4160 = !DILocation(line: 486, column: 3, scope: !4159)
!4161 = !DILocation(line: 486, column: 3, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4158, file: !2532, line: 486, column: 3)
!4163 = !DILocation(line: 487, column: 7, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4154, file: !2532, line: 487, column: 7)
!4165 = !DILocation(line: 487, column: 20, scope: !4164)
!4166 = !DILocation(line: 487, column: 23, scope: !4164)
!4167 = !DILocation(line: 487, column: 7, scope: !4154)
!4168 = !DILocation(line: 488, column: 4, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4164, file: !2532, line: 487, column: 38)
!4170 = !DILocation(line: 489, column: 3, scope: !4169)
!4171 = !DILocation(line: 493, column: 15, scope: !4030)
!4172 = !DILocation(line: 493, column: 8, scope: !4030)
!4173 = !DILocation(line: 493, column: 13, scope: !4030)
!4174 = !DILocation(line: 494, column: 1, scope: !4030)
!4175 = distinct !DISubprogram(name: "fix_missing_black", scope: !2532, file: !2532, line: 266, type: !4176, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4178)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{null, !3876, !109, !2537}
!4178 = !{!4179, !4180, !4181, !4182, !4184, !4185, !4186, !4187, !4188, !4189, !4190}
!4179 = !DILocalVariable(name: "stack", arg: 1, scope: !4175, file: !2532, line: 266, type: !3876)
!4180 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4175, file: !2532, line: 266, type: !109)
!4181 = !DILocalVariable(name: "null_node", arg: 3, scope: !4175, file: !2532, line: 267, type: !2537)
!4182 = !DILocalVariable(name: "c0", scope: !4183, file: !2532, line: 271, type: !2537)
!4183 = distinct !DILexicalBlock(scope: !4175, file: !2532, line: 270, column: 22)
!4184 = !DILocalVariable(name: "c1", scope: !4183, file: !2532, line: 271, type: !2537)
!4185 = !DILocalVariable(name: "inner", scope: !4183, file: !2532, line: 271, type: !2537)
!4186 = !DILocalVariable(name: "outer", scope: !4183, file: !2532, line: 271, type: !2537)
!4187 = !DILocalVariable(name: "n", scope: !4183, file: !2532, line: 272, type: !2537)
!4188 = !DILocalVariable(name: "parent", scope: !4183, file: !2532, line: 273, type: !2537)
!4189 = !DILocalVariable(name: "n_side", scope: !4183, file: !2532, line: 274, type: !167)
!4190 = !DILocalVariable(name: "sib", scope: !4183, file: !2532, line: 275, type: !2537)
!4191 = !DILocation(line: 0, scope: !4175)
!4192 = !DILocation(line: 270, column: 17, scope: !4175)
!4193 = !DILocation(line: 270, column: 2, scope: !4175)
!4194 = !DILocation(line: 272, column: 36, scope: !4183)
!4195 = !DILocation(line: 272, column: 22, scope: !4183)
!4196 = !DILocation(line: 0, scope: !4183)
!4197 = !DILocation(line: 273, column: 41, scope: !4183)
!4198 = !DILocation(line: 273, column: 27, scope: !4183)
!4199 = !DILocation(line: 274, column: 20, scope: !4183)
!4200 = !DILocation(line: 276, column: 21, scope: !4183)
!4201 = !DILocation(line: 276, column: 13, scope: !4183)
!4202 = !DILocation(line: 275, column: 24, scope: !4183)
!4203 = !DILocation(line: 285, column: 8, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4183, file: !2532, line: 285, column: 7)
!4205 = !DILocation(line: 285, column: 7, scope: !4183)
!4206 = !DILocation(line: 286, column: 23, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4204, file: !2532, line: 285, column: 23)
!4208 = !DILocation(line: 287, column: 4, scope: !4207)
!4209 = !DILocation(line: 288, column: 4, scope: !4207)
!4210 = !DILocation(line: 289, column: 4, scope: !4207)
!4211 = !DILocation(line: 290, column: 17, scope: !4207)
!4212 = !DILocation(line: 290, column: 4, scope: !4207)
!4213 = !DILocation(line: 290, column: 21, scope: !4207)
!4214 = !DILocation(line: 292, column: 13, scope: !4207)
!4215 = !DILocation(line: 293, column: 10, scope: !4207)
!4216 = !DILocation(line: 294, column: 3, scope: !4207)
!4217 = !DILocation(line: 301, column: 8, scope: !4183)
!4218 = !DILocation(line: 302, column: 8, scope: !4183)
!4219 = !DILocation(line: 303, column: 12, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4183, file: !2532, line: 303, column: 7)
!4221 = !DILocation(line: 303, column: 21, scope: !4220)
!4222 = !DILocation(line: 303, column: 24, scope: !4220)
!4223 = !DILocation(line: 303, column: 38, scope: !4220)
!4224 = !DILocation(line: 303, column: 46, scope: !4220)
!4225 = !DILocation(line: 303, column: 55, scope: !4220)
!4226 = !DILocation(line: 304, column: 6, scope: !4220)
!4227 = !DILocation(line: 303, column: 7, scope: !4183)
!4228 = !DILocation(line: 305, column: 10, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !2532, line: 305, column: 8)
!4230 = distinct !DILexicalBlock(scope: !4220, file: !2532, line: 304, column: 21)
!4231 = !DILocation(line: 305, column: 8, scope: !4230)
!4232 = !DILocation(line: 306, column: 5, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4229, file: !2532, line: 305, column: 24)
!4234 = !DILocation(line: 307, column: 4, scope: !4233)
!4235 = !DILocation(line: 309, column: 4, scope: !4230)
!4236 = !DILocation(line: 310, column: 8, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4230, file: !2532, line: 310, column: 8)
!4238 = !DILocation(line: 310, column: 8, scope: !4230)
!4239 = !DILocation(line: 320, column: 5, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4237, file: !2532, line: 318, column: 11)
!4241 = !DILocation(line: 321, column: 5, scope: !4240)
!4242 = !DILocation(line: 331, column: 11, scope: !4183)
!4243 = !DILocation(line: 332, column: 16, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4183, file: !2532, line: 332, column: 7)
!4245 = !DILocation(line: 332, column: 25, scope: !4244)
!4246 = !DILocation(line: 332, column: 28, scope: !4244)
!4247 = !DILocation(line: 332, column: 7, scope: !4183)
!4248 = !DILocation(line: 358, column: 17, scope: !4183)
!4249 = !DILocation(line: 333, column: 12, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4244, file: !2532, line: 332, column: 44)
!4251 = !DILocation(line: 335, column: 18, scope: !4250)
!4252 = !DILocation(line: 335, column: 4, scope: !4250)
!4253 = !DILocation(line: 335, column: 23, scope: !4250)
!4254 = !DILocation(line: 336, column: 17, scope: !4250)
!4255 = !DILocation(line: 336, column: 4, scope: !4250)
!4256 = !DILocation(line: 336, column: 21, scope: !4250)
!4257 = !DILocation(line: 337, column: 4, scope: !4250)
!4258 = !DILocation(line: 338, column: 4, scope: !4250)
!4259 = !DILocation(line: 339, column: 4, scope: !4250)
!4260 = !DILocation(line: 344, column: 10, scope: !4250)
!4261 = !DILocation(line: 345, column: 12, scope: !4250)
!4262 = !DILocation(line: 346, column: 23, scope: !4250)
!4263 = !DILocation(line: 348, column: 3, scope: !4250)
!4264 = !DILocation(line: 355, column: 18, scope: !4183)
!4265 = !DILocation(line: 355, column: 3, scope: !4183)
!4266 = !DILocation(line: 356, column: 3, scope: !4183)
!4267 = !DILocation(line: 357, column: 3, scope: !4183)
!4268 = !DILocation(line: 358, column: 3, scope: !4183)
!4269 = !DILocation(line: 358, column: 22, scope: !4183)
!4270 = !DILocation(line: 359, column: 3, scope: !4183)
!4271 = !DILocation(line: 360, column: 9, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4183, file: !2532, line: 360, column: 7)
!4273 = !DILocation(line: 360, column: 7, scope: !4183)
!4274 = !DILocation(line: 361, column: 4, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4272, file: !2532, line: 360, column: 23)
!4276 = !DILocation(line: 362, column: 3, scope: !4275)
!4277 = !DILocation(line: 316, column: 12, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4237, file: !2532, line: 310, column: 26)
!4279 = !DILocation(line: 365, column: 1, scope: !4175)
!4280 = distinct !DISubprogram(name: "z_rb_walk", scope: !2532, file: !2532, line: 497, type: !4281, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4287)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{null, !2537, !4283, !108}
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_visit_t", file: !157, line: 93, baseType: !4284)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 32)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{null, !2537, !108}
!4287 = !{!4288, !4289, !4290}
!4288 = !DILocalVariable(name: "node", arg: 1, scope: !4280, file: !2532, line: 497, type: !2537)
!4289 = !DILocalVariable(name: "visit_fn", arg: 2, scope: !4280, file: !2532, line: 497, type: !4283)
!4290 = !DILocalVariable(name: "cookie", arg: 3, scope: !4280, file: !2532, line: 497, type: !108)
!4291 = !DILocation(line: 0, scope: !4280)
!4292 = !DILocation(line: 499, column: 11, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4280, file: !2532, line: 499, column: 6)
!4294 = !DILocation(line: 499, column: 6, scope: !4280)
!4295 = !DILocation(line: 500, column: 13, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4293, file: !2532, line: 499, column: 20)
!4297 = !DILocation(line: 500, column: 3, scope: !4296)
!4298 = !DILocation(line: 501, column: 3, scope: !4296)
!4299 = !DILocation(line: 502, column: 13, scope: !4296)
!4300 = !DILocation(line: 504, column: 1, scope: !4280)
!4301 = distinct !DISubprogram(name: "z_rb_child", scope: !2532, file: !2532, line: 507, type: !3759, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4302)
!4302 = !{!4303, !4304}
!4303 = !DILocalVariable(name: "node", arg: 1, scope: !4301, file: !2532, line: 507, type: !2537)
!4304 = !DILocalVariable(name: "side", arg: 2, scope: !4301, file: !2532, line: 507, type: !167)
!4305 = !DILocation(line: 0, scope: !4301)
!4306 = !DILocation(line: 509, column: 9, scope: !4301)
!4307 = !DILocation(line: 509, column: 2, scope: !4301)
!4308 = distinct !DISubprogram(name: "z_rb_is_black", scope: !2532, file: !2532, line: 512, type: !4309, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4311)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!109, !2537}
!4311 = !{!4312}
!4312 = !DILocalVariable(name: "node", arg: 1, scope: !4308, file: !2532, line: 512, type: !2537)
!4313 = !DILocation(line: 0, scope: !4308)
!4314 = !DILocation(line: 514, column: 9, scope: !4308)
!4315 = !DILocation(line: 514, column: 2, scope: !4308)
!4316 = distinct !DISubprogram(name: "rb_contains", scope: !2532, file: !2532, line: 517, type: !4317, scopeLine: 518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4319)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!347, !3730, !2537}
!4319 = !{!4320, !4321, !4322}
!4320 = !DILocalVariable(name: "tree", arg: 1, scope: !4316, file: !2532, line: 517, type: !3730)
!4321 = !DILocalVariable(name: "node", arg: 2, scope: !4316, file: !2532, line: 517, type: !2537)
!4322 = !DILocalVariable(name: "n", scope: !4316, file: !2532, line: 519, type: !2537)
!4323 = !DILocation(line: 0, scope: !4316)
!4324 = !DILocation(line: 519, column: 27, scope: !4316)
!4325 = !DILocation(line: 521, column: 12, scope: !4316)
!4326 = !DILocation(line: 521, column: 21, scope: !4316)
!4327 = !DILocation(line: 521, column: 2, scope: !4316)
!4328 = !DILocation(line: 522, column: 26, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4316, file: !2532, line: 521, column: 37)
!4330 = !DILocation(line: 522, column: 20, scope: !4329)
!4331 = !DILocation(line: 522, column: 7, scope: !4329)
!4332 = distinct !{!4332, !4327, !4333}
!4333 = !DILocation(line: 523, column: 2, scope: !4316)
!4334 = !DILocation(line: 525, column: 11, scope: !4316)
!4335 = !DILocation(line: 525, column: 2, scope: !4316)
!4336 = distinct !DISubprogram(name: "z_rb_foreach_next", scope: !2532, file: !2532, line: 557, type: !4337, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4345)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!2537, !3730, !4339}
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 32)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !4341)
!4341 = !{!4342, !4343, !4344}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !4340, file: !157, line: 156, baseType: !3876, size: 32)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !4340, file: !157, line: 157, baseType: !1860, size: 32, offset: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4340, file: !157, line: 158, baseType: !845, size: 32, offset: 64)
!4345 = !{!4346, !4347, !4348}
!4346 = !DILocalVariable(name: "tree", arg: 1, scope: !4336, file: !2532, line: 557, type: !3730)
!4347 = !DILocalVariable(name: "f", arg: 2, scope: !4336, file: !2532, line: 557, type: !4339)
!4348 = !DILocalVariable(name: "n", scope: !4336, file: !2532, line: 559, type: !2537)
!4349 = !DILocation(line: 0, scope: !4336)
!4350 = !DILocation(line: 561, column: 12, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4336, file: !2532, line: 561, column: 6)
!4352 = !DILocation(line: 561, column: 17, scope: !4351)
!4353 = !DILocation(line: 561, column: 6, scope: !4336)
!4354 = !DILocation(line: 568, column: 9, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4336, file: !2532, line: 568, column: 6)
!4356 = !DILocation(line: 568, column: 13, scope: !4355)
!4357 = !DILocation(line: 568, column: 6, scope: !4336)
!4358 = !DILocation(line: 569, column: 10, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4355, file: !2532, line: 568, column: 20)
!4360 = !DILocation(line: 569, column: 3, scope: !4359)
!4361 = !DILocation(line: 575, column: 19, scope: !4336)
!4362 = !DILocation(line: 575, column: 16, scope: !4336)
!4363 = !DILocation(line: 575, column: 6, scope: !4336)
!4364 = !DILocation(line: 576, column: 8, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4336, file: !2532, line: 576, column: 6)
!4366 = !DILocation(line: 576, column: 6, scope: !4336)
!4367 = !DILocation(line: 577, column: 10, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !2532, line: 576, column: 17)
!4369 = !DILocation(line: 577, column: 3, scope: !4368)
!4370 = !DILocation(line: 585, column: 9, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4336, file: !2532, line: 585, column: 6)
!4372 = !DILocation(line: 585, column: 6, scope: !4371)
!4373 = !DILocation(line: 585, column: 25, scope: !4371)
!4374 = !DILocation(line: 585, column: 6, scope: !4336)
!4375 = !DILocation(line: 586, column: 19, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4371, file: !2532, line: 585, column: 32)
!4377 = !DILocation(line: 586, column: 10, scope: !4376)
!4378 = !DILocation(line: 586, column: 3, scope: !4376)
!4379 = !DILocation(line: 593, column: 17, scope: !4336)
!4380 = !DILocation(line: 593, column: 22, scope: !4336)
!4381 = !DILocation(line: 594, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4336, file: !2532, line: 593, column: 53)
!4383 = distinct !{!4383, !4384, !4385}
!4384 = !DILocation(line: 593, column: 2, scope: !4336)
!4385 = !DILocation(line: 595, column: 2, scope: !4336)
!4386 = !DILocation(line: 593, column: 26, scope: !4336)
!4387 = !DILocation(line: 593, column: 45, scope: !4336)
!4388 = !DILocation(line: 593, column: 13, scope: !4336)
!4389 = !DILocation(line: 597, column: 8, scope: !4336)
!4390 = !DILocation(line: 598, column: 9, scope: !4336)
!4391 = !DILocation(line: 598, column: 25, scope: !4336)
!4392 = !DILocation(line: 599, column: 1, scope: !4336)
!4393 = distinct !DISubprogram(name: "stack_left_limb", scope: !2532, file: !2532, line: 533, type: !4394, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!2537, !2537, !4339}
!4396 = !{!4397, !4398}
!4397 = !DILocalVariable(name: "n", arg: 1, scope: !4393, file: !2532, line: 533, type: !2537)
!4398 = !DILocalVariable(name: "f", arg: 2, scope: !4393, file: !2532, line: 534, type: !4339)
!4399 = !DILocation(line: 0, scope: !4393)
!4400 = !DILocation(line: 536, column: 5, scope: !4393)
!4401 = !DILocation(line: 536, column: 8, scope: !4393)
!4402 = !DILocation(line: 537, column: 5, scope: !4393)
!4403 = !DILocation(line: 537, column: 2, scope: !4393)
!4404 = !DILocation(line: 537, column: 19, scope: !4393)
!4405 = !DILocation(line: 538, column: 5, scope: !4393)
!4406 = !DILocation(line: 538, column: 16, scope: !4393)
!4407 = !DILocation(line: 538, column: 2, scope: !4393)
!4408 = !DILocation(line: 538, column: 21, scope: !4393)
!4409 = !DILocation(line: 540, column: 14, scope: !4393)
!4410 = !DILocation(line: 540, column: 32, scope: !4393)
!4411 = !DILocation(line: 540, column: 2, scope: !4393)
!4412 = !DILocation(line: 541, column: 9, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4393, file: !2532, line: 540, column: 41)
!4414 = !DILocation(line: 542, column: 6, scope: !4413)
!4415 = !DILocation(line: 542, column: 3, scope: !4413)
!4416 = !DILocation(line: 542, column: 20, scope: !4413)
!4417 = !DILocation(line: 543, column: 6, scope: !4413)
!4418 = !DILocation(line: 543, column: 17, scope: !4413)
!4419 = !DILocation(line: 543, column: 3, scope: !4413)
!4420 = !DILocation(line: 543, column: 22, scope: !4413)
!4421 = distinct !{!4421, !4411, !4422}
!4422 = !DILocation(line: 544, column: 2, scope: !4393)
!4423 = !DILocation(line: 546, column: 12, scope: !4393)
!4424 = !DILocation(line: 546, column: 21, scope: !4393)
!4425 = !DILocation(line: 546, column: 9, scope: !4393)
!4426 = !DILocation(line: 546, column: 2, scope: !4393)
!4427 = distinct !DISubprogram(name: "z_thread_entry", scope: !4428, file: !4428, line: 30, type: !4429, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !4431)
!4428 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4429 = !DISubroutineType(types: !4430)
!4430 = !{null, !215, !108, !108, !108}
!4431 = !{!4432, !4433, !4434, !4435}
!4432 = !DILocalVariable(name: "entry", arg: 1, scope: !4427, file: !4428, line: 30, type: !215)
!4433 = !DILocalVariable(name: "p1", arg: 2, scope: !4427, file: !4428, line: 31, type: !108)
!4434 = !DILocalVariable(name: "p2", arg: 3, scope: !4427, file: !4428, line: 31, type: !108)
!4435 = !DILocalVariable(name: "p3", arg: 4, scope: !4427, file: !4428, line: 31, type: !108)
!4436 = !DILocation(line: 0, scope: !4427)
!4437 = !DILocation(line: 36, column: 2, scope: !4427)
!4438 = !DILocation(line: 38, column: 17, scope: !4427)
!4439 = !DILocation(line: 38, column: 2, scope: !4427)
!4440 = !DILocation(line: 45, column: 2, scope: !4427)
!4441 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !4442, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !2037)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!4444}
!4444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !4445)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 32)
!4446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !4447)
!4447 = !{!4448, !4506, !4518, !4519, !4520, !4527, !4528, !4529, !4530, !4536, !4551}
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4446, file: !145, line: 247, baseType: !4449, size: 384)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !4450)
!4450 = !{!4451, !4475, !4482, !4483, !4484, !4493, !4494, !4495}
!4451 = !DIDerivedType(tag: DW_TAG_member, scope: !4449, file: !145, line: 60, baseType: !4452, size: 64)
!4452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4449, file: !145, line: 60, size: 64, elements: !4453)
!4453 = !{!4454, !4469}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4452, file: !145, line: 61, baseType: !4455, size: 64)
!4455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !4456)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !4457)
!4457 = !{!4458, !4464}
!4458 = !DIDerivedType(tag: DW_TAG_member, scope: !4456, file: !128, line: 38, baseType: !4459, size: 32)
!4459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4456, file: !128, line: 38, size: 32, elements: !4460)
!4460 = !{!4461, !4463}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4459, file: !128, line: 39, baseType: !4462, size: 32)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 32)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4459, file: !128, line: 40, baseType: !4462, size: 32)
!4464 = !DIDerivedType(tag: DW_TAG_member, scope: !4456, file: !128, line: 42, baseType: !4465, size: 32, offset: 32)
!4465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4456, file: !128, line: 42, size: 32, elements: !4466)
!4466 = !{!4467, !4468}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4465, file: !128, line: 43, baseType: !4462, size: 32)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4465, file: !128, line: 44, baseType: !4462, size: 32)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4452, file: !145, line: 62, baseType: !4470, size: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !4471)
!4471 = !{!4472}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4470, file: !157, line: 50, baseType: !4473, size: 64)
!4473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4474, size: 64, elements: !162)
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4449, file: !145, line: 68, baseType: !4476, size: 32, offset: 64)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !4478)
!4478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !4479)
!4479 = !{!4480}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4478, file: !123, line: 232, baseType: !4481, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !4456)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4449, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4449, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!4484 = !DIDerivedType(tag: DW_TAG_member, scope: !4449, file: !145, line: 90, baseType: !4485, size: 16, offset: 112)
!4485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4449, file: !145, line: 90, size: 16, elements: !4486)
!4486 = !{!4487, !4492}
!4487 = !DIDerivedType(tag: DW_TAG_member, scope: !4485, file: !145, line: 91, baseType: !4488, size: 16)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4485, file: !145, line: 91, size: 16, elements: !4489)
!4489 = !{!4490, !4491}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4488, file: !145, line: 96, baseType: !177, size: 8)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4488, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4485, file: !145, line: 100, baseType: !181, size: 16)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4449, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4449, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4449, file: !145, line: 131, baseType: !4496, size: 192, offset: 192)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !4497)
!4497 = !{!4498, !4499, !4505}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4496, file: !123, line: 245, baseType: !4455, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4496, file: !123, line: 246, baseType: !4500, size: 32, offset: 64)
!4500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !4501)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 32)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{null, !4504}
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4496, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4446, file: !145, line: 250, baseType: !4507, size: 288, offset: 384)
!4507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !4508)
!4508 = !{!4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4507, file: !198, line: 26, baseType: !110, size: 32)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4507, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4507, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4507, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4507, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4507, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4507, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4507, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4507, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4446, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4446, file: !145, line: 256, baseType: !4477, size: 64, offset: 704)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4446, file: !145, line: 271, baseType: !4521, size: 128, offset: 768)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !4522)
!4522 = !{!4523, !4524, !4525, !4526}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !4521, file: !145, line: 35, baseType: !215, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !4521, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !4521, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !4521, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !4446, file: !145, line: 274, baseType: !4445, size: 32, offset: 896)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4446, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4446, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4446, file: !145, line: 300, baseType: !4531, size: 96, offset: 1216)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !4532)
!4532 = !{!4533, !4534, !4535}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4531, file: !145, line: 153, baseType: !22, size: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4531, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4531, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4446, file: !145, line: 325, baseType: !4537, size: 32, offset: 1312)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 32)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !4539)
!4539 = !{!4540, !4546, !4547}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4538, file: !119, line: 5074, baseType: !4541, size: 96)
!4541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !4542)
!4542 = !{!4543, !4544, !4545}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4541, file: !244, line: 57, baseType: !247, size: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4541, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4541, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4538, file: !119, line: 5075, baseType: !4477, size: 64, offset: 96)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4538, file: !119, line: 5076, baseType: !4548, size: 32, offset: 160)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !4549)
!4549 = !{!4550}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4548, file: !254, line: 52, baseType: !22, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4446, file: !145, line: 343, baseType: !4552, size: 64, offset: 1344)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !4553)
!4553 = !{!4554, !4555}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4552, file: !198, line: 63, baseType: !110, size: 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4552, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!4556 = !DILocation(line: 535, column: 9, scope: !4441)
!4557 = !DILocation(line: 535, column: 2, scope: !4441)
!4558 = distinct !DISubprogram(name: "k_thread_abort", scope: !3261, file: !3261, line: 188, type: !4559, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !4561)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{null, !4444}
!4561 = !{!4562}
!4562 = !DILocalVariable(name: "thread", arg: 1, scope: !4558, file: !3261, line: 188, type: !4444)
!4563 = !DILocation(line: 0, scope: !4558)
!4564 = !DILocation(line: 197, column: 2, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4558, file: !3261, line: 197, column: 2)
!4566 = !{i64 2152219436}
!4567 = !DILocation(line: 198, column: 2, scope: !4558)
!4568 = !DILocation(line: 199, column: 1, scope: !4558)
!4569 = distinct !DISubprogram(name: "z_current_get", scope: !3261, file: !3261, line: 173, type: !4442, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !2037)
!4570 = !DILocation(line: 180, column: 2, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4569, file: !3261, line: 180, column: 2)
!4572 = !{i64 2152219368}
!4573 = !DILocation(line: 181, column: 9, scope: !4569)
!4574 = !DILocation(line: 181, column: 2, scope: !4569)
!4575 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2548, file: !2548, line: 1338, type: !4576, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !4584)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!109, !3601, !108, !337, !4578, !110}
!4578 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3565, line: 99, baseType: !4579)
!4579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3565, line: 40, baseType: !4580)
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2548, baseType: !4581)
!4581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4582)
!4582 = !{!4583}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4581, file: !2548, baseType: !108, size: 32)
!4584 = !{!4585, !4586, !4587, !4588, !4589, !4590, !4594, !4595, !4596, !4598, !4603, !4648, !4651, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4663, !4664, !4665, !4669, !4672, !4674, !4677, !4678, !4679, !4684, !4690, !4693, !4697, !4703, !4707, !4710, !4712, !4715}
!4585 = !DILocalVariable(name: "out", arg: 1, scope: !4575, file: !2548, line: 1338, type: !3601)
!4586 = !DILocalVariable(name: "ctx", arg: 2, scope: !4575, file: !2548, line: 1338, type: !108)
!4587 = !DILocalVariable(name: "fp", arg: 3, scope: !4575, file: !2548, line: 1338, type: !337)
!4588 = !DILocalVariable(name: "ap", arg: 4, scope: !4575, file: !2548, line: 1339, type: !4578)
!4589 = !DILocalVariable(name: "flags", arg: 5, scope: !4575, file: !2548, line: 1339, type: !110)
!4590 = !DILocalVariable(name: "buf", scope: !4575, file: !2548, line: 1341, type: !4591)
!4591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 176, elements: !4592)
!4592 = !{!4593}
!4593 = !DISubrange(count: 22)
!4594 = !DILocalVariable(name: "count", scope: !4575, file: !2548, line: 1342, type: !235)
!4595 = !DILocalVariable(name: "sint", scope: !4575, file: !2548, line: 1343, type: !2567)
!4596 = !DILocalVariable(name: "tagged_ap", scope: !4575, file: !2548, line: 1345, type: !4597)
!4597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4598 = !DILocalVariable(name: "rc", scope: !4599, file: !2548, line: 1377, type: !109)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2548, line: 1377, column: 4)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !2548, line: 1376, column: 19)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1376, column: 7)
!4602 = distinct !DILexicalBlock(scope: !4575, file: !2548, line: 1375, column: 19)
!4603 = !DILocalVariable(name: "state", scope: !4602, file: !2548, line: 1395, type: !4604)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4575, file: !2548, line: 1392, size: 192, elements: !4605)
!4605 = !{!4606, !4616}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4604, file: !2548, line: 1393, baseType: !4607, size: 64)
!4607 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2548, line: 166, size: 64, elements: !4608)
!4608 = !{!4609, !4610, !4611, !4613, !4615}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4607, file: !2548, line: 168, baseType: !2567, size: 64)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4607, file: !2548, line: 171, baseType: !2570, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4607, file: !2548, line: 174, baseType: !4612, size: 64)
!4612 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4607, file: !2548, line: 177, baseType: !4614, size: 64)
!4614 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4607, file: !2548, line: 180, baseType: !108, size: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4604, file: !2548, line: 1394, baseType: !4617, size: 96, offset: 64)
!4617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2548, line: 189, size: 96, elements: !4618)
!4618 = !{!4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4643}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4617, file: !2548, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4617, file: !2548, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4617, file: !2548, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4617, file: !2548, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4617, file: !2548, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4617, file: !2548, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4617, file: !2548, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4617, file: !2548, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4617, file: !2548, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4617, file: !2548, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4617, file: !2548, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4617, file: !2548, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4617, file: !2548, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4617, file: !2548, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4617, file: !2548, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4617, file: !2548, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4617, file: !2548, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4617, file: !2548, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4617, file: !2548, line: 260, baseType: !168, size: 8, offset: 24)
!4638 = !DIDerivedType(tag: DW_TAG_member, scope: !4617, file: !2548, line: 262, baseType: !4639, size: 32, offset: 32)
!4639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4617, file: !2548, line: 262, size: 32, elements: !4640)
!4640 = !{!4641, !4642}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4639, file: !2548, line: 267, baseType: !109, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4639, file: !2548, line: 289, baseType: !109, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, scope: !4617, file: !2548, line: 292, baseType: !4644, size: 32, offset: 64)
!4644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4617, file: !2548, line: 292, size: 32, elements: !4645)
!4645 = !{!4646, !4647}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4644, file: !2548, line: 297, baseType: !109, size: 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4644, file: !2548, line: 306, baseType: !109, size: 32)
!4648 = !DILocalVariable(name: "conv", scope: !4602, file: !2548, line: 1400, type: !4649)
!4649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4650)
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 32)
!4651 = !DILocalVariable(name: "value", scope: !4602, file: !2548, line: 1401, type: !4652)
!4652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4653)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 32)
!4654 = !DILocalVariable(name: "sp", scope: !4602, file: !2548, line: 1402, type: !337)
!4655 = !DILocalVariable(name: "width", scope: !4602, file: !2548, line: 1403, type: !109)
!4656 = !DILocalVariable(name: "precision", scope: !4602, file: !2548, line: 1404, type: !109)
!4657 = !DILocalVariable(name: "bps", scope: !4602, file: !2548, line: 1405, type: !337)
!4658 = !DILocalVariable(name: "bpe", scope: !4602, file: !2548, line: 1406, type: !337)
!4659 = !DILocalVariable(name: "sign", scope: !4602, file: !2548, line: 1407, type: !226)
!4660 = !DILocalVariable(name: "arg", scope: !4661, file: !2548, line: 1432, type: !109)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !2548, line: 1431, column: 24)
!4662 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1431, column: 7)
!4663 = !DILocalVariable(name: "specifier_cat", scope: !4602, file: !2548, line: 1468, type: !2547)
!4664 = !DILocalVariable(name: "length_mod", scope: !4602, file: !2548, line: 1470, type: !2555)
!4665 = !DILocalVariable(name: "rc", scope: !4666, file: !2548, line: 1575, type: !109)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !2548, line: 1575, column: 4)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !2548, line: 1574, column: 43)
!4668 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1574, column: 7)
!4669 = !DILocalVariable(name: "rc", scope: !4670, file: !2548, line: 1584, type: !109)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1584, column: 4)
!4671 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1582, column: 28)
!4672 = !DILocalVariable(name: "len", scope: !4673, file: !2548, line: 1589, type: !235)
!4673 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1586, column: 13)
!4674 = !DILocalVariable(name: "len", scope: !4675, file: !2548, line: 1641, type: !235)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !2548, line: 1640, column: 24)
!4676 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1640, column: 8)
!4677 = !DILocalVariable(name: "nj_len", scope: !4602, file: !2548, line: 1722, type: !235)
!4678 = !DILocalVariable(name: "pad_len", scope: !4602, file: !2548, line: 1723, type: !109)
!4679 = !DILocalVariable(name: "pad", scope: !4680, file: !2548, line: 1751, type: !226)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2548, line: 1750, column: 26)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !2548, line: 1750, column: 8)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !2548, line: 1747, column: 18)
!4683 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1747, column: 7)
!4684 = !DILocalVariable(name: "rc", scope: !4685, file: !2548, line: 1758, type: !109)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2548, line: 1758, column: 7)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !2548, line: 1757, column: 21)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !2548, line: 1757, column: 10)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2548, line: 1756, column: 26)
!4689 = distinct !DILexicalBlock(scope: !4680, file: !2548, line: 1756, column: 9)
!4690 = !DILocalVariable(name: "rc", scope: !4691, file: !2548, line: 1765, type: !109)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !2548, line: 1765, column: 6)
!4692 = distinct !DILexicalBlock(scope: !4680, file: !2548, line: 1764, column: 25)
!4693 = !DILocalVariable(name: "rc", scope: !4694, file: !2548, line: 1774, type: !109)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2548, line: 1774, column: 4)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !2548, line: 1773, column: 18)
!4696 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1773, column: 7)
!4697 = !DILocalVariable(name: "rc", scope: !4698, file: !2548, line: 1819, type: !109)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2548, line: 1819, column: 5)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !2548, line: 1818, column: 44)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !2548, line: 1818, column: 8)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2548, line: 1817, column: 10)
!4702 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1777, column: 7)
!4703 = !DILocalVariable(name: "rc", scope: !4704, file: !2548, line: 1823, type: !109)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2548, line: 1823, column: 5)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2548, line: 1822, column: 26)
!4706 = distinct !DILexicalBlock(scope: !4701, file: !2548, line: 1822, column: 8)
!4707 = !DILocalVariable(name: "rc", scope: !4708, file: !2548, line: 1828, type: !109)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2548, line: 1828, column: 5)
!4709 = distinct !DILexicalBlock(scope: !4701, file: !2548, line: 1827, column: 26)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2548, line: 1831, type: !109)
!4711 = distinct !DILexicalBlock(scope: !4701, file: !2548, line: 1831, column: 4)
!4712 = !DILocalVariable(name: "rc", scope: !4713, file: !2548, line: 1836, type: !109)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2548, line: 1836, column: 4)
!4714 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1835, column: 21)
!4715 = !DILabel(scope: !4671, name: "prec_int_pad0", file: !2548, line: 1634)
!4716 = !DILocation(line: 0, scope: !4575)
!4717 = !DILocation(line: 1341, column: 2, scope: !4575)
!4718 = !DILocation(line: 1341, column: 7, scope: !4575)
!4719 = !DILocation(line: 1375, column: 2, scope: !4575)
!4720 = !DILocation(line: 1342, column: 9, scope: !4575)
!4721 = !DILocation(line: 1375, column: 9, scope: !4575)
!4722 = !DILocation(line: 1377, column: 4, scope: !4599)
!4723 = !DILocation(line: 0, scope: !4599)
!4724 = !DILocation(line: 1377, column: 4, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4599, file: !2548, line: 1377, column: 4)
!4726 = distinct !{!4726, !4719, !4727}
!4727 = !DILocation(line: 1839, column: 2, scope: !4575)
!4728 = !DILocation(line: 1392, column: 3, scope: !4602)
!4729 = !DILocation(line: 1395, column: 5, scope: !4602)
!4730 = !DILocation(line: 0, scope: !4602)
!4731 = !DILocation(line: 1409, column: 8, scope: !4602)
!4732 = !DILocation(line: 1414, column: 13, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1414, column: 7)
!4734 = !DILocation(line: 1414, column: 7, scope: !4602)
!4735 = !DILocation(line: 1415, column: 12, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4733, file: !2548, line: 1414, column: 25)
!4737 = !DILocation(line: 1417, column: 14, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4736, file: !2548, line: 1417, column: 8)
!4739 = !DILocation(line: 1417, column: 8, scope: !4736)
!4740 = !DILocation(line: 1418, column: 21, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4738, file: !2548, line: 1417, column: 19)
!4742 = !DILocation(line: 1419, column: 13, scope: !4741)
!4743 = !DILocation(line: 1420, column: 4, scope: !4741)
!4744 = !DILocation(line: 1421, column: 20, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4733, file: !2548, line: 1421, column: 14)
!4746 = !DILocation(line: 1421, column: 14, scope: !4733)
!4747 = !DILocation(line: 1431, column: 13, scope: !4662)
!4748 = !DILocation(line: 1431, column: 7, scope: !4602)
!4749 = !DILocation(line: 1432, column: 14, scope: !4661)
!4750 = !DILocation(line: 0, scope: !4661)
!4751 = !DILocation(line: 1434, column: 12, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4661, file: !2548, line: 1434, column: 8)
!4753 = !DILocation(line: 1434, column: 8, scope: !4661)
!4754 = !DILocation(line: 1435, column: 24, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !2548, line: 1434, column: 17)
!4756 = !DILocation(line: 1436, column: 4, scope: !4755)
!4757 = !DILocation(line: 1439, column: 20, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4662, file: !2548, line: 1439, column: 14)
!4759 = !DILocation(line: 1439, column: 14, scope: !4662)
!4760 = !DILocation(line: 1469, column: 37, scope: !4602)
!4761 = !DILocation(line: 1448, column: 20, scope: !4602)
!4762 = !DILocation(line: 1449, column: 22, scope: !4602)
!4763 = !DILocation(line: 1471, column: 34, scope: !4602)
!4764 = !DILocation(line: 1478, column: 7, scope: !4602)
!4765 = !DILocation(line: 1479, column: 4, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !2548, line: 1478, column: 40)
!4767 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1478, column: 7)
!4768 = !DILocation(line: 1484, column: 19, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !2548, line: 1479, column: 24)
!4770 = !DILocation(line: 1484, column: 17, scope: !4769)
!4771 = !DILocation(line: 1485, column: 5, scope: !4769)
!4772 = !DILocation(line: 1492, column: 20, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2548, line: 1491, column: 12)
!4774 = distinct !DILexicalBlock(scope: !4769, file: !2548, line: 1487, column: 9)
!4775 = !DILocation(line: 1492, column: 18, scope: !4773)
!4776 = !DILocation(line: 1494, column: 5, scope: !4769)
!4777 = !DILocation(line: 1497, column: 23, scope: !4769)
!4778 = !DILocation(line: 1496, column: 17, scope: !4769)
!4779 = !DILocation(line: 1498, column: 5, scope: !4769)
!4780 = !DILocation(line: 1501, column: 23, scope: !4769)
!4781 = !DILocation(line: 1500, column: 17, scope: !4769)
!4782 = !DILocation(line: 1502, column: 5, scope: !4769)
!4783 = !DILocation(line: 1513, column: 23, scope: !4769)
!4784 = !DILocation(line: 1513, column: 6, scope: !4769)
!4785 = !DILocation(line: 1512, column: 17, scope: !4769)
!4786 = !DILocation(line: 1514, column: 5, scope: !4769)
!4787 = !DILocation(line: 0, scope: !4769)
!4788 = !DILocation(line: 1516, column: 8, scope: !4766)
!4789 = !DILocation(line: 1517, column: 19, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2548, line: 1516, column: 33)
!4791 = distinct !DILexicalBlock(scope: !4766, file: !2548, line: 1516, column: 8)
!4792 = !DILocation(line: 1517, column: 17, scope: !4790)
!4793 = !DILocation(line: 1518, column: 4, scope: !4790)
!4794 = !DILocation(line: 1519, column: 19, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !2548, line: 1518, column: 39)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !2548, line: 1518, column: 15)
!4797 = !DILocation(line: 1519, column: 17, scope: !4795)
!4798 = !DILocation(line: 1520, column: 4, scope: !4795)
!4799 = !DILocation(line: 1522, column: 4, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !2548, line: 1521, column: 47)
!4801 = distinct !DILexicalBlock(scope: !4767, file: !2548, line: 1521, column: 14)
!4802 = !DILocation(line: 1527, column: 19, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !2548, line: 1522, column: 24)
!4804 = !DILocation(line: 1527, column: 17, scope: !4803)
!4805 = !DILocation(line: 1528, column: 5, scope: !4803)
!4806 = !DILocation(line: 0, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4803, file: !2548, line: 1530, column: 9)
!4808 = !DILocation(line: 1540, column: 23, scope: !4803)
!4809 = !DILocation(line: 1539, column: 17, scope: !4803)
!4810 = !DILocation(line: 1542, column: 5, scope: !4803)
!4811 = !DILocation(line: 1545, column: 23, scope: !4803)
!4812 = !DILocation(line: 1544, column: 17, scope: !4803)
!4813 = !DILocation(line: 1547, column: 5, scope: !4803)
!4814 = !DILocation(line: 1551, column: 23, scope: !4803)
!4815 = !DILocation(line: 1551, column: 6, scope: !4803)
!4816 = !DILocation(line: 1550, column: 17, scope: !4803)
!4817 = !DILocation(line: 1552, column: 5, scope: !4803)
!4818 = !DILocation(line: 0, scope: !4803)
!4819 = !DILocation(line: 1554, column: 8, scope: !4800)
!4820 = !DILocation(line: 1555, column: 19, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !2548, line: 1554, column: 33)
!4822 = distinct !DILexicalBlock(scope: !4800, file: !2548, line: 1554, column: 8)
!4823 = !DILocation(line: 1555, column: 17, scope: !4821)
!4824 = !DILocation(line: 1556, column: 4, scope: !4821)
!4825 = !DILocation(line: 1557, column: 19, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !2548, line: 1556, column: 39)
!4827 = distinct !DILexicalBlock(scope: !4822, file: !2548, line: 1556, column: 15)
!4828 = !DILocation(line: 1557, column: 17, scope: !4826)
!4829 = !DILocation(line: 1558, column: 4, scope: !4826)
!4830 = !DILocation(line: 0, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !2548, line: 1560, column: 8)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !2548, line: 1559, column: 45)
!4833 = distinct !DILexicalBlock(scope: !4801, file: !2548, line: 1559, column: 14)
!4834 = !DILocation(line: 1566, column: 17, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !2548, line: 1565, column: 46)
!4836 = distinct !DILexicalBlock(scope: !4833, file: !2548, line: 1565, column: 14)
!4837 = !DILocation(line: 1566, column: 15, scope: !4835)
!4838 = !DILocation(line: 1567, column: 3, scope: !4835)
!4839 = !DILocation(line: 1574, column: 21, scope: !4668)
!4840 = !DILocation(line: 1575, column: 4, scope: !4666)
!4841 = !DILocation(line: 0, scope: !4666)
!4842 = !DILocation(line: 1575, column: 4, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4666, file: !2548, line: 1575, column: 4)
!4844 = !DILocation(line: 1582, column: 17, scope: !4602)
!4845 = !DILocation(line: 1582, column: 3, scope: !4602)
!4846 = !DILocation(line: 1584, column: 4, scope: !4670)
!4847 = !DILocation(line: 0, scope: !4670)
!4848 = !DILocation(line: 1584, column: 4, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4670, file: !2548, line: 1584, column: 4)
!4850 = !DILocation(line: 1587, column: 31, scope: !4673)
!4851 = !DILocation(line: 1591, column: 18, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4673, file: !2548, line: 1591, column: 8)
!4853 = !DILocation(line: 1591, column: 8, scope: !4673)
!4854 = !DILocation(line: 1592, column: 11, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !2548, line: 1591, column: 24)
!4856 = !DILocation(line: 0, scope: !4673)
!4857 = !DILocation(line: 1593, column: 4, scope: !4855)
!4858 = !DILocation(line: 1594, column: 11, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4852, file: !2548, line: 1593, column: 11)
!4860 = !DILocation(line: 1604, column: 51, scope: !4671)
!4861 = !DILocation(line: 1604, column: 13, scope: !4671)
!4862 = !DILocation(line: 1604, column: 11, scope: !4671)
!4863 = !DILocation(line: 1606, column: 4, scope: !4671)
!4864 = !DILocation(line: 1609, column: 14, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1609, column: 8)
!4866 = !DILocation(line: 1609, column: 8, scope: !4671)
!4867 = !DILocation(line: 1619, column: 18, scope: !4671)
!4868 = !DILocation(line: 1620, column: 13, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1620, column: 8)
!4870 = !DILocation(line: 1620, column: 8, scope: !4671)
!4871 = !DILocation(line: 1622, column: 36, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4869, file: !2548, line: 1620, column: 18)
!4873 = !DILocation(line: 1622, column: 17, scope: !4872)
!4874 = !DILocation(line: 1623, column: 4, scope: !4872)
!4875 = !DILocation(line: 1632, column: 29, scope: !4671)
!4876 = !DILocation(line: 1632, column: 10, scope: !4671)
!4877 = !DILocation(line: 1632, column: 4, scope: !4671)
!4878 = !DILocation(line: 1407, column: 8, scope: !4602)
!4879 = !DILocation(line: 0, scope: !4671)
!4880 = !DILocation(line: 1634, column: 3, scope: !4671)
!4881 = !DILocation(line: 1640, column: 18, scope: !4676)
!4882 = !DILocation(line: 1640, column: 8, scope: !4671)
!4883 = !DILocation(line: 1729, column: 13, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1729, column: 7)
!4885 = !DILocation(line: 1641, column: 22, scope: !4675)
!4886 = !DILocation(line: 0, scope: !4675)
!4887 = !DILocation(line: 1646, column: 21, scope: !4675)
!4888 = !DILocation(line: 1649, column: 13, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4675, file: !2548, line: 1649, column: 9)
!4890 = !DILocation(line: 1649, column: 9, scope: !4675)
!4891 = !DILocation(line: 1650, column: 35, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !2548, line: 1649, column: 34)
!4893 = !DILocation(line: 1650, column: 23, scope: !4892)
!4894 = !DILocation(line: 1651, column: 5, scope: !4892)
!4895 = !DILocation(line: 1660, column: 15, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1660, column: 8)
!4897 = !DILocation(line: 1660, column: 19, scope: !4896)
!4898 = !DILocation(line: 1660, column: 8, scope: !4671)
!4899 = !DILocation(line: 1661, column: 23, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4896, file: !2548, line: 1660, column: 28)
!4901 = !DILocation(line: 1661, column: 11, scope: !4900)
!4902 = !DILocation(line: 1665, column: 22, scope: !4900)
!4903 = !DILocation(line: 1666, column: 21, scope: !4900)
!4904 = !DILocation(line: 1668, column: 5, scope: !4900)
!4905 = !DILocation(line: 1677, column: 30, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !2548, line: 1676, column: 49)
!4907 = distinct !DILexicalBlock(scope: !4671, file: !2548, line: 1676, column: 8)
!4908 = !DILocation(line: 1677, column: 5, scope: !4906)
!4909 = !DILocation(line: 1680, column: 4, scope: !4671)
!4910 = !DILocation(line: 0, scope: !4852)
!4911 = !DILocation(line: 1597, column: 14, scope: !4673)
!4912 = !DILocation(line: 1699, column: 11, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1699, column: 7)
!4914 = !DILocation(line: 1699, column: 7, scope: !4602)
!4915 = !DILocation(line: 1725, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1725, column: 7)
!4917 = !DILocation(line: 1725, column: 12, scope: !4916)
!4918 = !DILocation(line: 1747, column: 13, scope: !4683)
!4919 = !DILocation(line: 1747, column: 7, scope: !4602)
!4920 = !DILocation(line: 1722, column: 24, scope: !4602)
!4921 = !DILocation(line: 1725, column: 7, scope: !4602)
!4922 = !DILocation(line: 1729, column: 7, scope: !4602)
!4923 = !DILocation(line: 1736, column: 13, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4602, file: !2548, line: 1736, column: 7)
!4925 = !DILocation(line: 1735, column: 19, scope: !4602)
!4926 = !DILocation(line: 1736, column: 7, scope: !4602)
!4927 = !DILocation(line: 1748, column: 10, scope: !4682)
!4928 = !DILocation(line: 1750, column: 15, scope: !4681)
!4929 = !DILocation(line: 1750, column: 8, scope: !4682)
!4930 = !DILocation(line: 0, scope: !4680)
!4931 = !DILocation(line: 1756, column: 15, scope: !4689)
!4932 = !DILocation(line: 1756, column: 9, scope: !4680)
!4933 = !DILocation(line: 1758, column: 7, scope: !4685)
!4934 = !DILocation(line: 0, scope: !4685)
!4935 = !DILocation(line: 1758, column: 7, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4685, file: !2548, line: 1758, column: 7)
!4937 = !DILocation(line: 1764, column: 5, scope: !4680)
!4938 = !DILocation(line: 0, scope: !4682)
!4939 = !DILocation(line: 1764, column: 20, scope: !4680)
!4940 = !DILocation(line: 1764, column: 17, scope: !4680)
!4941 = !DILocation(line: 1765, column: 6, scope: !4691)
!4942 = !DILocation(line: 0, scope: !4691)
!4943 = !DILocation(line: 1765, column: 6, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4691, file: !2548, line: 1765, column: 6)
!4945 = distinct !{!4945, !4937, !4946}
!4946 = !DILocation(line: 1766, column: 5, scope: !4680)
!4947 = !DILocation(line: 1773, column: 12, scope: !4696)
!4948 = !DILocation(line: 1773, column: 7, scope: !4602)
!4949 = !DILocation(line: 1773, column: 7, scope: !4696)
!4950 = !DILocation(line: 1774, column: 4, scope: !4694)
!4951 = !DILocation(line: 0, scope: !4694)
!4952 = !DILocation(line: 1774, column: 4, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4694, file: !2548, line: 1774, column: 4)
!4954 = !DILocation(line: 1818, column: 8, scope: !4700)
!4955 = !DILocation(line: 1818, column: 27, scope: !4700)
!4956 = !DILocation(line: 1818, column: 25, scope: !4700)
!4957 = !DILocation(line: 1818, column: 8, scope: !4701)
!4958 = !DILocation(line: 1819, column: 5, scope: !4698)
!4959 = !DILocation(line: 0, scope: !4698)
!4960 = !DILocation(line: 1819, column: 5, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4698, file: !2548, line: 1819, column: 5)
!4962 = !DILocation(line: 1822, column: 14, scope: !4706)
!4963 = !DILocation(line: 1822, column: 8, scope: !4701)
!4964 = !DILocation(line: 1823, column: 5, scope: !4704)
!4965 = !DILocation(line: 0, scope: !4704)
!4966 = !DILocation(line: 1823, column: 5, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4704, file: !2548, line: 1823, column: 5)
!4968 = !DILocation(line: 1826, column: 20, scope: !4701)
!4969 = !DILocation(line: 1827, column: 4, scope: !4701)
!4970 = !DILocation(line: 0, scope: !4701)
!4971 = !DILocation(line: 1827, column: 21, scope: !4701)
!4972 = !DILocation(line: 1827, column: 18, scope: !4701)
!4973 = !DILocation(line: 1828, column: 5, scope: !4708)
!4974 = !DILocation(line: 0, scope: !4708)
!4975 = !DILocation(line: 1828, column: 5, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4708, file: !2548, line: 1828, column: 5)
!4977 = distinct !{!4977, !4969, !4978}
!4978 = !DILocation(line: 1829, column: 4, scope: !4701)
!4979 = !DILocation(line: 1831, column: 4, scope: !4711)
!4980 = !DILocation(line: 0, scope: !4711)
!4981 = !DILocation(line: 1831, column: 4, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4711, file: !2548, line: 1831, column: 4)
!4983 = !DILocation(line: 1835, column: 16, scope: !4602)
!4984 = !DILocation(line: 1835, column: 3, scope: !4602)
!4985 = !DILocation(line: 1836, column: 4, scope: !4713)
!4986 = !DILocation(line: 0, scope: !4713)
!4987 = !DILocation(line: 1836, column: 4, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4713, file: !2548, line: 1836, column: 4)
!4989 = !DILocation(line: 1837, column: 4, scope: !4714)
!4990 = distinct !{!4990, !4984, !4991}
!4991 = !DILocation(line: 1838, column: 3, scope: !4602)
!4992 = !DILocation(line: 1844, column: 1, scope: !4575)
!4993 = distinct !DISubprogram(name: "extract_conversion", scope: !2548, file: !2548, line: 642, type: !4994, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !4996)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!337, !4650, !337}
!4996 = !{!4997, !4998}
!4997 = !DILocalVariable(name: "conv", arg: 1, scope: !4993, file: !2548, line: 642, type: !4650)
!4998 = !DILocalVariable(name: "sp", arg: 2, scope: !4993, file: !2548, line: 643, type: !337)
!4999 = !DILocation(line: 0, scope: !4993)
!5000 = !DILocation(line: 645, column: 10, scope: !4993)
!5001 = !DILocation(line: 653, column: 2, scope: !4993)
!5002 = !DILocation(line: 654, column: 6, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4993, file: !2548, line: 654, column: 6)
!5004 = !DILocation(line: 654, column: 10, scope: !5003)
!5005 = !DILocation(line: 654, column: 6, scope: !4993)
!5006 = !DILocation(line: 655, column: 24, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !2548, line: 654, column: 18)
!5008 = !DILocation(line: 655, column: 19, scope: !5007)
!5009 = !DILocation(line: 656, column: 3, scope: !5007)
!5010 = !DILocation(line: 659, column: 7, scope: !4993)
!5011 = !DILocation(line: 660, column: 7, scope: !4993)
!5012 = !DILocation(line: 661, column: 7, scope: !4993)
!5013 = !DILocation(line: 662, column: 7, scope: !4993)
!5014 = !DILocation(line: 663, column: 7, scope: !4993)
!5015 = !DILocation(line: 665, column: 2, scope: !4993)
!5016 = !DILocation(line: 666, column: 1, scope: !4993)
!5017 = distinct !DISubprogram(name: "outs", scope: !2548, file: !2548, line: 1319, type: !5018, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5020)
!5018 = !DISubroutineType(types: !5019)
!5019 = !{!109, !3601, !108, !337, !337}
!5020 = !{!5021, !5022, !5023, !5024, !5025, !5026}
!5021 = !DILocalVariable(name: "out", arg: 1, scope: !5017, file: !2548, line: 1319, type: !3601)
!5022 = !DILocalVariable(name: "ctx", arg: 2, scope: !5017, file: !2548, line: 1320, type: !108)
!5023 = !DILocalVariable(name: "sp", arg: 3, scope: !5017, file: !2548, line: 1321, type: !337)
!5024 = !DILocalVariable(name: "ep", arg: 4, scope: !5017, file: !2548, line: 1322, type: !337)
!5025 = !DILocalVariable(name: "count", scope: !5017, file: !2548, line: 1324, type: !235)
!5026 = !DILocalVariable(name: "rc", scope: !5027, file: !2548, line: 1327, type: !109)
!5027 = distinct !DILexicalBlock(scope: !5017, file: !2548, line: 1326, column: 45)
!5028 = !DILocation(line: 0, scope: !5017)
!5029 = !DILocation(line: 1326, column: 2, scope: !5017)
!5030 = !DILocation(line: 1324, column: 9, scope: !5017)
!5031 = !DILocation(line: 1326, column: 13, scope: !5017)
!5032 = !DILocation(line: 1326, column: 19, scope: !5017)
!5033 = !DILocation(line: 1327, column: 21, scope: !5027)
!5034 = !DILocation(line: 1326, column: 36, scope: !5017)
!5035 = !DILocation(line: 1326, column: 39, scope: !5017)
!5036 = !DILocation(line: 1327, column: 24, scope: !5027)
!5037 = !DILocation(line: 1327, column: 16, scope: !5027)
!5038 = !DILocation(line: 1327, column: 12, scope: !5027)
!5039 = !DILocation(line: 0, scope: !5027)
!5040 = !DILocation(line: 1329, column: 10, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5027, file: !2548, line: 1329, column: 7)
!5042 = !DILocation(line: 1329, column: 7, scope: !5027)
!5043 = distinct !{!5043, !5029, !5044}
!5044 = !DILocation(line: 1333, column: 2, scope: !5017)
!5045 = !DILocation(line: 1336, column: 1, scope: !5017)
!5046 = distinct !DISubprogram(name: "encode_uint", scope: !2548, file: !2548, line: 788, type: !5047, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5049)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!1185, !2570, !4650, !1185, !337}
!5049 = !{!5050, !5051, !5052, !5053, !5054, !5055, !5057, !5058}
!5050 = !DILocalVariable(name: "value", arg: 1, scope: !5046, file: !2548, line: 788, type: !2570)
!5051 = !DILocalVariable(name: "conv", arg: 2, scope: !5046, file: !2548, line: 789, type: !4650)
!5052 = !DILocalVariable(name: "bps", arg: 3, scope: !5046, file: !2548, line: 790, type: !1185)
!5053 = !DILocalVariable(name: "bpe", arg: 4, scope: !5046, file: !2548, line: 791, type: !337)
!5054 = !DILocalVariable(name: "upcase", scope: !5046, file: !2548, line: 793, type: !347)
!5055 = !DILocalVariable(name: "radix", scope: !5046, file: !2548, line: 794, type: !5056)
!5056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5057 = !DILocalVariable(name: "bp", scope: !5046, file: !2548, line: 795, type: !1185)
!5058 = !DILocalVariable(name: "lsv", scope: !5059, file: !2548, line: 798, type: !32)
!5059 = distinct !DILexicalBlock(scope: !5046, file: !2548, line: 797, column: 5)
!5060 = !DILocation(line: 0, scope: !5046)
!5061 = !DILocation(line: 793, column: 35, scope: !5046)
!5062 = !DILocation(line: 793, column: 24, scope: !5046)
!5063 = !DILocation(line: 793, column: 16, scope: !5046)
!5064 = !DILocation(line: 794, column: 29, scope: !5046)
!5065 = !DILocation(line: 795, column: 24, scope: !5046)
!5066 = !DILocation(line: 795, column: 17, scope: !5046)
!5067 = !DILocation(line: 797, column: 2, scope: !5046)
!5068 = !DILocation(line: 802, column: 9, scope: !5059)
!5069 = !DILocation(line: 798, column: 22, scope: !5059)
!5070 = !DILocation(line: 0, scope: !5059)
!5071 = !DILocation(line: 800, column: 16, scope: !5059)
!5072 = !DILocation(line: 800, column: 11, scope: !5059)
!5073 = !DILocation(line: 800, column: 4, scope: !5059)
!5074 = !DILocation(line: 800, column: 9, scope: !5059)
!5075 = !DILocation(line: 803, column: 18, scope: !5046)
!5076 = !DILocation(line: 803, column: 24, scope: !5046)
!5077 = !DILocation(line: 803, column: 2, scope: !5059)
!5078 = distinct !{!5078, !5067, !5079}
!5079 = !DILocation(line: 803, column: 37, scope: !5046)
!5080 = !DILocation(line: 808, column: 12, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5046, file: !2548, line: 808, column: 6)
!5082 = !DILocation(line: 808, column: 6, scope: !5046)
!5083 = !DILocation(line: 809, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5081, file: !2548, line: 808, column: 23)
!5085 = !DILocation(line: 813, column: 3, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !2548, line: 811, column: 27)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !2548, line: 811, column: 14)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !2548, line: 809, column: 7)
!5089 = !DILocation(line: 0, scope: !5088)
!5090 = !DILocation(line: 818, column: 2, scope: !5046)
!5091 = distinct !DISubprogram(name: "store_count", scope: !2548, file: !2548, line: 1280, type: !5092, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5096)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{null, !5094, !108, !109}
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 32)
!5095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4617)
!5096 = !{!5097, !5098, !5099}
!5097 = !DILocalVariable(name: "conv", arg: 1, scope: !5091, file: !2548, line: 1280, type: !5094)
!5098 = !DILocalVariable(name: "dp", arg: 2, scope: !5091, file: !2548, line: 1281, type: !108)
!5099 = !DILocalVariable(name: "count", arg: 3, scope: !5091, file: !2548, line: 1282, type: !109)
!5100 = !DILocation(line: 0, scope: !5091)
!5101 = !DILocation(line: 1284, column: 38, scope: !5091)
!5102 = !DILocation(line: 1284, column: 2, scope: !5091)
!5103 = !DILocation(line: 1286, column: 4, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5091, file: !2548, line: 1284, column: 50)
!5105 = !DILocation(line: 1286, column: 14, scope: !5104)
!5106 = !DILocation(line: 1287, column: 3, scope: !5104)
!5107 = !DILocation(line: 1289, column: 24, scope: !5104)
!5108 = !DILocation(line: 1289, column: 22, scope: !5104)
!5109 = !DILocation(line: 1290, column: 3, scope: !5104)
!5110 = !DILocation(line: 1292, column: 18, scope: !5104)
!5111 = !DILocation(line: 1292, column: 4, scope: !5104)
!5112 = !DILocation(line: 1292, column: 16, scope: !5104)
!5113 = !DILocation(line: 1293, column: 3, scope: !5104)
!5114 = !DILocation(line: 1295, column: 4, scope: !5104)
!5115 = !DILocation(line: 1295, column: 15, scope: !5104)
!5116 = !DILocation(line: 1296, column: 3, scope: !5104)
!5117 = !DILocation(line: 1298, column: 22, scope: !5104)
!5118 = !DILocation(line: 1298, column: 4, scope: !5104)
!5119 = !DILocation(line: 1298, column: 20, scope: !5104)
!5120 = !DILocation(line: 1299, column: 3, scope: !5104)
!5121 = !DILocation(line: 1301, column: 21, scope: !5104)
!5122 = !DILocation(line: 1301, column: 4, scope: !5104)
!5123 = !DILocation(line: 1301, column: 19, scope: !5104)
!5124 = !DILocation(line: 1302, column: 3, scope: !5104)
!5125 = !DILocation(line: 1304, column: 4, scope: !5104)
!5126 = !DILocation(line: 1304, column: 17, scope: !5104)
!5127 = !DILocation(line: 1305, column: 3, scope: !5104)
!5128 = !DILocation(line: 1307, column: 4, scope: !5104)
!5129 = !DILocation(line: 1307, column: 20, scope: !5104)
!5130 = !DILocation(line: 1308, column: 3, scope: !5104)
!5131 = !DILocation(line: 1316, column: 1, scope: !5091)
!5132 = distinct !DISubprogram(name: "isupper", scope: !5133, file: !5133, line: 16, type: !288, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5134)
!5133 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5134 = !{!5135}
!5135 = !DILocalVariable(name: "a", arg: 1, scope: !5132, file: !5133, line: 16, type: !109)
!5136 = !DILocation(line: 0, scope: !5132)
!5137 = !DILocation(line: 18, column: 29, scope: !5132)
!5138 = !DILocation(line: 18, column: 45, scope: !5132)
!5139 = !DILocation(line: 18, column: 2, scope: !5132)
!5140 = distinct !DISubprogram(name: "conversion_radix", scope: !2548, file: !2548, line: 761, type: !5141, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5143)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{!235, !226}
!5143 = !{!5144}
!5144 = !DILocalVariable(name: "specifier", arg: 1, scope: !5140, file: !2548, line: 761, type: !226)
!5145 = !DILocation(line: 0, scope: !5140)
!5146 = !DILocation(line: 763, column: 2, scope: !5140)
!5147 = !DILocation(line: 770, column: 3, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5140, file: !2548, line: 763, column: 21)
!5149 = !DILocation(line: 774, column: 3, scope: !5148)
!5150 = !DILocation(line: 0, scope: !5148)
!5151 = !DILocation(line: 776, column: 1, scope: !5140)
!5152 = distinct !DISubprogram(name: "extract_flags", scope: !2548, file: !2548, line: 339, type: !4994, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5153)
!5153 = !{!5154, !5155, !5156}
!5154 = !DILocalVariable(name: "conv", arg: 1, scope: !5152, file: !2548, line: 339, type: !4650)
!5155 = !DILocalVariable(name: "sp", arg: 2, scope: !5152, file: !2548, line: 340, type: !337)
!5156 = !DILocalVariable(name: "loop", scope: !5152, file: !2548, line: 342, type: !347)
!5157 = !DILocation(line: 0, scope: !5152)
!5158 = !DILocation(line: 344, column: 2, scope: !5152)
!5159 = !DILocation(line: 345, column: 11, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5152, file: !2548, line: 344, column: 5)
!5161 = !DILocation(line: 345, column: 3, scope: !5160)
!5162 = !DILocation(line: 351, column: 4, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !2548, line: 345, column: 16)
!5164 = !DILocation(line: 354, column: 4, scope: !5163)
!5165 = !DILocation(line: 357, column: 4, scope: !5163)
!5166 = !DILocation(line: 360, column: 4, scope: !5163)
!5167 = !DILocation(line: 0, scope: !5163)
!5168 = !DILocation(line: 370, column: 12, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5152, file: !2548, line: 370, column: 6)
!5170 = !DILocation(line: 370, column: 22, scope: !5169)
!5171 = !DILocation(line: 371, column: 19, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !2548, line: 370, column: 42)
!5173 = !DILocation(line: 372, column: 2, scope: !5172)
!5174 = !DILocation(line: 376, column: 2, scope: !5152)
!5175 = distinct !DISubprogram(name: "extract_width", scope: !2548, file: !2548, line: 388, type: !4994, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5176)
!5176 = !{!5177, !5178, !5179, !5180}
!5177 = !DILocalVariable(name: "conv", arg: 1, scope: !5175, file: !2548, line: 388, type: !4650)
!5178 = !DILocalVariable(name: "sp", arg: 2, scope: !5175, file: !2548, line: 389, type: !337)
!5179 = !DILocalVariable(name: "wp", scope: !5175, file: !2548, line: 398, type: !337)
!5180 = !DILocalVariable(name: "width", scope: !5175, file: !2548, line: 399, type: !235)
!5181 = !DILocation(line: 0, scope: !5175)
!5182 = !DILocation(line: 391, column: 8, scope: !5175)
!5183 = !DILocation(line: 391, column: 22, scope: !5175)
!5184 = !DILocation(line: 393, column: 6, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5175, file: !2548, line: 393, column: 6)
!5186 = !DILocation(line: 393, column: 10, scope: !5185)
!5187 = !DILocation(line: 393, column: 6, scope: !5175)
!5188 = !DILocation(line: 394, column: 20, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5185, file: !2548, line: 393, column: 18)
!5190 = !DILocation(line: 395, column: 10, scope: !5189)
!5191 = !DILocation(line: 395, column: 3, scope: !5189)
!5192 = !DILocation(line: 399, column: 17, scope: !5175)
!5193 = !DILocation(line: 401, column: 6, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5175, file: !2548, line: 401, column: 6)
!5195 = !DILocation(line: 401, column: 9, scope: !5194)
!5196 = !DILocation(line: 401, column: 6, scope: !5175)
!5197 = !DILocation(line: 402, column: 23, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !2548, line: 401, column: 16)
!5199 = !DILocation(line: 403, column: 9, scope: !5198)
!5200 = !DILocation(line: 403, column: 21, scope: !5198)
!5201 = !DILocation(line: 405, column: 11, scope: !5198)
!5202 = !DILocation(line: 404, column: 21, scope: !5198)
!5203 = !DILocation(line: 406, column: 2, scope: !5198)
!5204 = !DILocation(line: 409, column: 1, scope: !5175)
!5205 = distinct !DISubprogram(name: "extract_prec", scope: !2548, file: !2548, line: 420, type: !4994, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5206)
!5206 = !{!5207, !5208, !5209}
!5207 = !DILocalVariable(name: "conv", arg: 1, scope: !5205, file: !2548, line: 420, type: !4650)
!5208 = !DILocalVariable(name: "sp", arg: 2, scope: !5205, file: !2548, line: 421, type: !337)
!5209 = !DILocalVariable(name: "prec", scope: !5205, file: !2548, line: 435, type: !235)
!5210 = !DILocation(line: 0, scope: !5205)
!5211 = !DILocation(line: 423, column: 24, scope: !5205)
!5212 = !DILocation(line: 423, column: 28, scope: !5205)
!5213 = !DILocation(line: 423, column: 8, scope: !5205)
!5214 = !DILocation(line: 423, column: 21, scope: !5205)
!5215 = !DILocation(line: 425, column: 6, scope: !5205)
!5216 = !DILocation(line: 428, column: 2, scope: !5205)
!5217 = !DILocation(line: 430, column: 6, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5205, file: !2548, line: 430, column: 6)
!5219 = !DILocation(line: 430, column: 10, scope: !5218)
!5220 = !DILocation(line: 430, column: 6, scope: !5205)
!5221 = !DILocation(line: 431, column: 19, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5218, file: !2548, line: 430, column: 18)
!5223 = !DILocation(line: 432, column: 10, scope: !5222)
!5224 = !DILocation(line: 432, column: 3, scope: !5222)
!5225 = !DILocation(line: 435, column: 16, scope: !5205)
!5226 = !DILocation(line: 437, column: 8, scope: !5205)
!5227 = !DILocation(line: 437, column: 19, scope: !5205)
!5228 = !DILocation(line: 439, column: 10, scope: !5205)
!5229 = !DILocation(line: 438, column: 20, scope: !5205)
!5230 = !DILocation(line: 441, column: 9, scope: !5205)
!5231 = !DILocation(line: 442, column: 1, scope: !5205)
!5232 = distinct !DISubprogram(name: "extract_length", scope: !2548, file: !2548, line: 453, type: !4994, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5233)
!5233 = !{!5234, !5235}
!5234 = !DILocalVariable(name: "conv", arg: 1, scope: !5232, file: !2548, line: 453, type: !4650)
!5235 = !DILocalVariable(name: "sp", arg: 2, scope: !5232, file: !2548, line: 454, type: !337)
!5236 = !DILocation(line: 0, scope: !5232)
!5237 = !DILocation(line: 456, column: 10, scope: !5232)
!5238 = !DILocation(line: 456, column: 2, scope: !5232)
!5239 = !DILocation(line: 458, column: 8, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5241, file: !2548, line: 458, column: 7)
!5241 = distinct !DILexicalBlock(scope: !5232, file: !2548, line: 456, column: 15)
!5242 = !DILocation(line: 458, column: 7, scope: !5240)
!5243 = !DILocation(line: 458, column: 13, scope: !5240)
!5244 = !DILocation(line: 0, scope: !5240)
!5245 = !DILocation(line: 458, column: 7, scope: !5241)
!5246 = !DILocation(line: 459, column: 21, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5240, file: !2548, line: 458, column: 21)
!5248 = !DILocation(line: 460, column: 4, scope: !5247)
!5249 = !DILocation(line: 461, column: 3, scope: !5247)
!5250 = !DILocation(line: 462, column: 21, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5240, file: !2548, line: 461, column: 10)
!5252 = !DILocation(line: 466, column: 8, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5241, file: !2548, line: 466, column: 7)
!5254 = !DILocation(line: 466, column: 7, scope: !5253)
!5255 = !DILocation(line: 466, column: 13, scope: !5253)
!5256 = !DILocation(line: 0, scope: !5253)
!5257 = !DILocation(line: 466, column: 7, scope: !5241)
!5258 = !DILocation(line: 467, column: 21, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5253, file: !2548, line: 466, column: 21)
!5260 = !DILocation(line: 468, column: 4, scope: !5259)
!5261 = !DILocation(line: 469, column: 3, scope: !5259)
!5262 = !DILocation(line: 470, column: 21, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5253, file: !2548, line: 469, column: 10)
!5264 = !DILocation(line: 474, column: 9, scope: !5241)
!5265 = !DILocation(line: 474, column: 20, scope: !5241)
!5266 = !DILocation(line: 475, column: 3, scope: !5241)
!5267 = !DILocation(line: 476, column: 3, scope: !5241)
!5268 = !DILocation(line: 478, column: 9, scope: !5241)
!5269 = !DILocation(line: 478, column: 20, scope: !5241)
!5270 = !DILocation(line: 479, column: 3, scope: !5241)
!5271 = !DILocation(line: 480, column: 3, scope: !5241)
!5272 = !DILocation(line: 482, column: 9, scope: !5241)
!5273 = !DILocation(line: 482, column: 20, scope: !5241)
!5274 = !DILocation(line: 483, column: 3, scope: !5241)
!5275 = !DILocation(line: 484, column: 3, scope: !5241)
!5276 = !DILocation(line: 486, column: 9, scope: !5241)
!5277 = !DILocation(line: 486, column: 20, scope: !5241)
!5278 = !DILocation(line: 487, column: 3, scope: !5241)
!5279 = !DILocation(line: 492, column: 21, scope: !5241)
!5280 = !DILocation(line: 493, column: 3, scope: !5241)
!5281 = !DILocation(line: 495, column: 9, scope: !5241)
!5282 = !DILocation(line: 495, column: 20, scope: !5241)
!5283 = !DILocation(line: 496, column: 3, scope: !5241)
!5284 = !DILocation(line: 498, column: 2, scope: !5232)
!5285 = distinct !DISubprogram(name: "extract_specifier", scope: !2548, file: !2548, line: 513, type: !4994, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5286)
!5286 = !{!5287, !5288, !5289, !5290}
!5287 = !DILocalVariable(name: "conv", arg: 1, scope: !5285, file: !2548, line: 513, type: !4650)
!5288 = !DILocalVariable(name: "sp", arg: 2, scope: !5285, file: !2548, line: 514, type: !337)
!5289 = !DILocalVariable(name: "unsupported", scope: !5285, file: !2548, line: 516, type: !347)
!5290 = !DILabel(scope: !5291, name: "int_conv", file: !2548, line: 526)
!5291 = distinct !DILexicalBlock(scope: !5285, file: !2548, line: 520, column: 27)
!5292 = !DILocation(line: 0, scope: !5285)
!5293 = !DILocation(line: 518, column: 20, scope: !5285)
!5294 = !DILocation(line: 518, column: 8, scope: !5285)
!5295 = !DILocation(line: 518, column: 18, scope: !5285)
!5296 = !DILocation(line: 520, column: 2, scope: !5285)
!5297 = !DILocation(line: 525, column: 3, scope: !5291)
!5298 = !DILocation(line: 0, scope: !5291)
!5299 = !DILocation(line: 526, column: 1, scope: !5291)
!5300 = !DILocation(line: 528, column: 24, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5291, file: !2548, line: 528, column: 7)
!5302 = !DILocation(line: 528, column: 7, scope: !5291)
!5303 = !DILocation(line: 535, column: 23, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5291, file: !2548, line: 535, column: 7)
!5305 = !DILocation(line: 535, column: 7, scope: !5291)
!5306 = !DILocation(line: 536, column: 36, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5304, file: !2548, line: 535, column: 31)
!5308 = !DILocation(line: 537, column: 3, scope: !5307)
!5309 = !DILocation(line: 570, column: 9, scope: !5291)
!5310 = !DILocation(line: 570, column: 23, scope: !5291)
!5311 = !DILocation(line: 575, column: 4, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !2548, line: 573, column: 48)
!5313 = distinct !DILexicalBlock(scope: !5291, file: !2548, line: 573, column: 7)
!5314 = !DILocation(line: 603, column: 9, scope: !5291)
!5315 = !DILocation(line: 603, column: 23, scope: !5291)
!5316 = !DILocation(line: 605, column: 24, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5291, file: !2548, line: 605, column: 7)
!5318 = !DILocation(line: 605, column: 7, scope: !5291)
!5319 = !DILocation(line: 612, column: 9, scope: !5291)
!5320 = !DILocation(line: 612, column: 23, scope: !5291)
!5321 = !DILocation(line: 619, column: 24, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5291, file: !2548, line: 619, column: 7)
!5323 = !DILocation(line: 619, column: 7, scope: !5291)
!5324 = !DILocation(line: 625, column: 9, scope: !5291)
!5325 = !DILocation(line: 625, column: 17, scope: !5291)
!5326 = !DILocation(line: 626, column: 3, scope: !5291)
!5327 = !DILocation(line: 629, column: 20, scope: !5285)
!5328 = !DILocation(line: 629, column: 8, scope: !5285)
!5329 = !DILocation(line: 518, column: 23, scope: !5285)
!5330 = !DILocation(line: 631, column: 2, scope: !5285)
!5331 = distinct !DISubprogram(name: "extract_decimal", scope: !2548, file: !2548, line: 318, type: !5332, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5335)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!235, !5334}
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!5335 = !{!5336, !5337, !5338}
!5336 = !DILocalVariable(name: "str", arg: 1, scope: !5331, file: !2548, line: 318, type: !5334)
!5337 = !DILocalVariable(name: "sp", scope: !5331, file: !2548, line: 320, type: !337)
!5338 = !DILocalVariable(name: "val", scope: !5331, file: !2548, line: 321, type: !235)
!5339 = !DILocation(line: 0, scope: !5331)
!5340 = !DILocation(line: 320, column: 19, scope: !5331)
!5341 = !DILocation(line: 323, column: 37, scope: !5331)
!5342 = !DILocation(line: 323, column: 17, scope: !5331)
!5343 = !DILocation(line: 323, column: 9, scope: !5331)
!5344 = !DILocation(line: 323, column: 2, scope: !5331)
!5345 = !DILocation(line: 324, column: 13, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5331, file: !2548, line: 323, column: 43)
!5347 = !DILocation(line: 324, column: 24, scope: !5346)
!5348 = !DILocation(line: 324, column: 19, scope: !5346)
!5349 = !DILocation(line: 324, column: 27, scope: !5346)
!5350 = distinct !{!5350, !5344, !5351}
!5351 = !DILocation(line: 325, column: 2, scope: !5331)
!5352 = !DILocation(line: 326, column: 7, scope: !5331)
!5353 = !DILocation(line: 327, column: 2, scope: !5331)
!5354 = distinct !DISubprogram(name: "isdigit", scope: !5133, file: !5133, line: 43, type: !288, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2544, retainedNodes: !5355)
!5355 = !{!5356}
!5356 = !DILocalVariable(name: "a", arg: 1, scope: !5354, file: !5133, line: 43, type: !109)
!5357 = !DILocation(line: 0, scope: !5354)
!5358 = !DILocation(line: 45, column: 29, scope: !5354)
!5359 = !DILocation(line: 45, column: 45, scope: !5354)
!5360 = !DILocation(line: 45, column: 2, scope: !5354)
!5361 = distinct !DISubprogram(name: "assert_post_action", scope: !5362, file: !5362, line: 26, type: !5363, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !5365)
!5362 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5363 = !DISubroutineType(types: !5364)
!5364 = !{null, !337, !32}
!5365 = !{!5366, !5367}
!5366 = !DILocalVariable(name: "file", arg: 1, scope: !5361, file: !5362, line: 26, type: !337)
!5367 = !DILocalVariable(name: "line", arg: 2, scope: !5361, file: !5362, line: 26, type: !32)
!5368 = !DILocation(line: 0, scope: !5361)
!5369 = !DILocation(line: 43, column: 2, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5361, file: !5362, line: 43, column: 2)
!5371 = !{i64 2152224780, i64 2152224796, i64 2152224822, i64 2152224850, i64 2152224870}
!5372 = !DILocation(line: 44, column: 1, scope: !5361)
!5373 = distinct !DISubprogram(name: "assert_print", scope: !5362, file: !5362, line: 46, type: !3633, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !5374)
!5374 = !{!5375, !5376}
!5375 = !DILocalVariable(name: "fmt", arg: 1, scope: !5373, file: !5362, line: 46, type: !337)
!5376 = !DILocalVariable(name: "ap", scope: !5373, file: !5362, line: 48, type: !5377)
!5377 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3565, line: 99, baseType: !5378)
!5378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3565, line: 40, baseType: !5379)
!5379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5362, baseType: !5380)
!5380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5381)
!5381 = !{!5382}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5380, file: !5362, line: 48, baseType: !108, size: 32)
!5383 = !DILocation(line: 0, scope: !5373)
!5384 = !DILocation(line: 48, column: 2, scope: !5373)
!5385 = !DILocation(line: 48, column: 10, scope: !5373)
!5386 = !DILocation(line: 50, column: 2, scope: !5373)
!5387 = !DILocation(line: 52, column: 2, scope: !5373)
!5388 = !DILocation(line: 54, column: 2, scope: !5373)
!5389 = !DILocation(line: 55, column: 1, scope: !5373)
!5390 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5391, file: !5391, line: 9, type: !3076, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2583, retainedNodes: !2037)
!5391 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!5392 = !DILocation(line: 11, column: 1, scope: !5390)
!5393 = !{i64 2147560915, i64 2147560958, i64 2147560998}
!5394 = !DILocation(line: 12, column: 1, scope: !5390)
!5395 = !{i64 2147565142, i64 2147565185, i64 2147565225}
!5396 = !DILocation(line: 13, column: 1, scope: !5390)
!5397 = !{i64 2147565351, i64 2147565394, i64 2147565434}
!5398 = !DILocation(line: 14, column: 1, scope: !5390)
!5399 = !{i64 2147565520, i64 2147565563, i64 2147565603}
!5400 = !DILocation(line: 15, column: 1, scope: !5390)
!5401 = !{i64 2147565683, i64 2147565726, i64 2147565766}
!5402 = !DILocation(line: 16, column: 1, scope: !5390)
!5403 = !{i64 2147565867, i64 2147565910, i64 2147565950}
!5404 = !DILocation(line: 17, column: 1, scope: !5390)
!5405 = !{i64 2147566046, i64 2147566089, i64 2147566129}
!5406 = !DILocation(line: 18, column: 1, scope: !5390)
!5407 = !{i64 2147566288, i64 2147566331, i64 2147566371}
!5408 = !DILocation(line: 19, column: 1, scope: !5390)
!5409 = !{i64 2147566523, i64 2147566566, i64 2147566606}
!5410 = !DILocation(line: 20, column: 1, scope: !5390)
!5411 = !{i64 2147566709, i64 2147566752, i64 2147566792}
!5412 = !DILocation(line: 21, column: 1, scope: !5390)
!5413 = !{i64 2147566925, i64 2147566968, i64 2147567008}
!5414 = !DILocation(line: 22, column: 1, scope: !5390)
!5415 = !{i64 2147567128, i64 2147567171, i64 2147567211}
!5416 = !DILocation(line: 23, column: 1, scope: !5390)
!5417 = !{i64 2147567331, i64 2147567374, i64 2147567414}
!5418 = !DILocation(line: 24, column: 1, scope: !5390)
!5419 = !{i64 2147567506, i64 2147567549, i64 2147567589}
!5420 = !DILocation(line: 25, column: 1, scope: !5390)
!5421 = !{i64 2147567714, i64 2147567757, i64 2147567797}
!5422 = !DILocation(line: 26, column: 1, scope: !5390)
!5423 = !{i64 2147567918, i64 2147567961, i64 2147568001}
!5424 = !DILocation(line: 27, column: 1, scope: !5390)
!5425 = !{i64 2147568111, i64 2147568154, i64 2147568194}
!5426 = !DILocation(line: 28, column: 1, scope: !5390)
!5427 = !{i64 2147568313, i64 2147568356, i64 2147568396}
!5428 = !DILocation(line: 29, column: 1, scope: !5390)
!5429 = !{i64 2147568540, i64 2147568583, i64 2147568623}
!5430 = !DILocation(line: 30, column: 1, scope: !5390)
!5431 = !{i64 2147568742, i64 2147568785, i64 2147568825}
!5432 = !DILocation(line: 31, column: 1, scope: !5390)
!5433 = !{i64 2147568957, i64 2147569000, i64 2147569040}
!5434 = !DILocation(line: 32, column: 1, scope: !5390)
!5435 = !{i64 2147569129, i64 2147569172, i64 2147569212}
!5436 = !DILocation(line: 33, column: 1, scope: !5390)
!5437 = !{i64 2147569331, i64 2147569374, i64 2147569414}
!5438 = !DILocation(line: 34, column: 1, scope: !5390)
!5439 = !{i64 2147569557, i64 2147569600, i64 2147569640}
!5440 = !DILocation(line: 35, column: 1, scope: !5390)
!5441 = !{i64 2147569756, i64 2147569799, i64 2147569839}
!5442 = !DILocation(line: 36, column: 1, scope: !5390)
!5443 = !{i64 2147569931, i64 2147569974, i64 2147570014}
!5444 = !DILocation(line: 37, column: 1, scope: !5390)
!5445 = !{i64 2147570184, i64 2147570227, i64 2147570267}
!5446 = !DILocation(line: 38, column: 1, scope: !5390)
!5447 = !{i64 2147570422, i64 2147570465, i64 2147570505}
!5448 = !DILocation(line: 39, column: 1, scope: !5390)
!5449 = !{i64 2147570657, i64 2147570700, i64 2147570740}
!5450 = !DILocation(line: 40, column: 1, scope: !5390)
!5451 = !{i64 2147570889, i64 2147570932, i64 2147570972}
!5452 = !DILocation(line: 41, column: 1, scope: !5390)
!5453 = !{i64 2147571115, i64 2147571158, i64 2147571198}
!5454 = !DILocation(line: 42, column: 1, scope: !5390)
!5455 = !{i64 2147571374, i64 2147571417, i64 2147571457}
!5456 = !DILocation(line: 43, column: 1, scope: !5390)
!5457 = !{i64 2147571600, i64 2147571643, i64 2147571683}
!5458 = !DILocation(line: 44, column: 1, scope: !5390)
!5459 = !{i64 2147571841, i64 2147571884, i64 2147571924}
!5460 = !DILocation(line: 45, column: 1, scope: !5390)
!5461 = !{i64 2147572085, i64 2147572128, i64 2147572168}
!5462 = !DILocation(line: 46, column: 1, scope: !5390)
!5463 = !{i64 2147572326, i64 2147572369, i64 2147572409}
!5464 = !DILocation(line: 47, column: 1, scope: !5390)
!5465 = !{i64 2147572561, i64 2147572604, i64 2147572644}
!5466 = !DILocation(line: 48, column: 1, scope: !5390)
!5467 = !{i64 2147572787, i64 2147572830, i64 2147572870}
!5468 = !DILocation(line: 49, column: 1, scope: !5390)
!5469 = !{i64 2147573013, i64 2147573056, i64 2147573096}
!5470 = !DILocation(line: 50, column: 1, scope: !5390)
!5471 = !{i64 2147573257, i64 2147573300, i64 2147573340}
!5472 = !DILocation(line: 51, column: 1, scope: !5390)
!5473 = !{i64 2147573495, i64 2147573538, i64 2147573578}
!5474 = !DILocation(line: 52, column: 1, scope: !5390)
!5475 = !{i64 2147573769, i64 2147573812, i64 2147573852}
!5476 = !DILocation(line: 53, column: 1, scope: !5390)
!5477 = !{i64 2147578068, i64 2147578111, i64 2147578151}
!5478 = !DILocation(line: 54, column: 1, scope: !5390)
!5479 = !{i64 2147578312, i64 2147578355, i64 2147578395}
!5480 = !DILocation(line: 55, column: 1, scope: !5390)
!5481 = !{i64 2147578562, i64 2147578605, i64 2147578645}
!5482 = !DILocation(line: 56, column: 1, scope: !5390)
!5483 = !{i64 2147578809, i64 2147578852, i64 2147578892}
!5484 = !DILocation(line: 57, column: 1, scope: !5390)
!5485 = !{i64 2147579044, i64 2147579087, i64 2147579127}
!5486 = !DILocation(line: 58, column: 1, scope: !5390)
!5487 = !{i64 2147579279, i64 2147579322, i64 2147579362}
!5488 = !DILocation(line: 59, column: 1, scope: !5390)
!5489 = !{i64 2147579514, i64 2147579557, i64 2147579597}
!5490 = !DILocation(line: 60, column: 1, scope: !5390)
!5491 = !{i64 2147579752, i64 2147579795, i64 2147579835}
!5492 = !DILocation(line: 61, column: 1, scope: !5390)
!5493 = !{i64 2147579993, i64 2147580036, i64 2147580076}
!5494 = !DILocation(line: 62, column: 1, scope: !5390)
!5495 = !{i64 2147580252, i64 2147580295, i64 2147580335}
!5496 = !DILocation(line: 63, column: 1, scope: !5390)
!5497 = !{i64 2147580532, i64 2147580575, i64 2147580615}
!5498 = !DILocation(line: 64, column: 1, scope: !5390)
!5499 = !{i64 2147580761, i64 2147580804, i64 2147580844}
!5500 = !DILocation(line: 65, column: 1, scope: !5390)
!5501 = !{i64 2147580969, i64 2147581012, i64 2147581052}
!5502 = !DILocation(line: 66, column: 1, scope: !5390)
!5503 = !{i64 2147581180, i64 2147581223, i64 2147581263}
!5504 = !DILocation(line: 67, column: 1, scope: !5390)
!5505 = !{i64 2147581415, i64 2147581458, i64 2147581498}
!5506 = !DILocation(line: 68, column: 1, scope: !5390)
!5507 = !{i64 2147581644, i64 2147581687, i64 2147581727}
!5508 = !DILocation(line: 69, column: 1, scope: !5390)
!5509 = !{i64 2147581882, i64 2147581925, i64 2147581965}
!5510 = !DILocation(line: 70, column: 1, scope: !5390)
!5511 = !{i64 2147582114, i64 2147582157, i64 2147582197}
!5512 = !DILocation(line: 71, column: 1, scope: !5390)
!5513 = !{i64 2147582340, i64 2147582383, i64 2147582423}
!5514 = !DILocation(line: 72, column: 1, scope: !5390)
!5515 = !{i64 2147582557, i64 2147582600, i64 2147582640}
!5516 = !DILocation(line: 73, column: 1, scope: !5390)
!5517 = !{i64 2147582789, i64 2147582832, i64 2147582872}
!5518 = !DILocation(line: 74, column: 1, scope: !5390)
!5519 = !{i64 2147583015, i64 2147583058, i64 2147583098}
!5520 = !DILocation(line: 75, column: 1, scope: !5390)
!5521 = !{i64 2147583229, i64 2147583272, i64 2147583312}
!5522 = !DILocation(line: 76, column: 1, scope: !5390)
!5523 = !{i64 2147583449, i64 2147583492, i64 2147583532}
!5524 = !DILocation(line: 77, column: 1, scope: !5390)
!5525 = !{i64 2147583681, i64 2147583724, i64 2147583764}
!5526 = !DILocation(line: 78, column: 1, scope: !5390)
!5527 = !{i64 2147583889, i64 2147583932, i64 2147583972}
!5528 = !DILocation(line: 79, column: 1, scope: !5390)
!5529 = !{i64 2147584094, i64 2147584137, i64 2147584177}
!5530 = !DILocation(line: 80, column: 1, scope: !5390)
!5531 = !{i64 2147584311, i64 2147584354, i64 2147584394}
!5532 = !DILocation(line: 81, column: 1, scope: !5390)
!5533 = !{i64 2147584525, i64 2147584568, i64 2147584608}
!5534 = !DILocation(line: 82, column: 1, scope: !5390)
!5535 = !{i64 2147584751, i64 2147584794, i64 2147584834}
!5536 = !DILocation(line: 83, column: 1, scope: !5390)
!5537 = !{i64 2147584971, i64 2147585014, i64 2147585054}
!5538 = !DILocation(line: 84, column: 1, scope: !5390)
!5539 = !{i64 2147585176, i64 2147585219, i64 2147585259}
!5540 = !DILocation(line: 85, column: 1, scope: !5390)
!5541 = !{i64 2147585408, i64 2147585451, i64 2147585491}
!5542 = !DILocation(line: 86, column: 1, scope: !5390)
!5543 = !{i64 2147585643, i64 2147585686, i64 2147585726}
!5544 = !DILocation(line: 87, column: 1, scope: !5390)
!5545 = !{i64 2147585893, i64 2147585936, i64 2147585976}
!5546 = !DILocation(line: 88, column: 1, scope: !5390)
!5547 = !{i64 2147590204, i64 2147590247, i64 2147590287}
!5548 = !DILocation(line: 89, column: 1, scope: !5390)
!5549 = !{i64 2147590442, i64 2147590485, i64 2147590525}
!5550 = !DILocation(line: 90, column: 1, scope: !5390)
!5551 = !{i64 2147590653, i64 2147590696, i64 2147590736}
!5552 = !DILocation(line: 91, column: 1, scope: !5390)
!5553 = !{i64 2147590870, i64 2147590913, i64 2147590953}
!5554 = !DILocation(line: 92, column: 1, scope: !5390)
!5555 = !{i64 2147591066, i64 2147591109, i64 2147591149}
!5556 = !DILocation(line: 93, column: 1, scope: !5390)
!5557 = !{i64 2147591268, i64 2147591311, i64 2147591351}
!5558 = !DILocation(line: 94, column: 1, scope: !5390)
!5559 = !{i64 2147591461, i64 2147591504, i64 2147591544}
!5560 = !DILocation(line: 95, column: 1, scope: !5390)
!5561 = !{i64 2147591669, i64 2147591712, i64 2147591752}
!5562 = !DILocation(line: 96, column: 1, scope: !5390)
!5563 = !{i64 2147591865, i64 2147591908, i64 2147591948}
!5564 = !DILocation(line: 97, column: 1, scope: !5390)
!5565 = !{i64 2147592070, i64 2147592113, i64 2147592153}
!5566 = !DILocation(line: 98, column: 1, scope: !5390)
!5567 = !{i64 2147592281, i64 2147592324, i64 2147592364}
!5568 = !DILocation(line: 99, column: 1, scope: !5390)
!5569 = !{i64 2147592480, i64 2147592523, i64 2147592563}
!5570 = !DILocation(line: 100, column: 1, scope: !5390)
!5571 = !{i64 2147592655, i64 2147592698, i64 2147592738}
!5572 = !DILocation(line: 101, column: 1, scope: !5390)
!5573 = !{i64 2147592839, i64 2147592882, i64 2147592922}
!5574 = !DILocation(line: 102, column: 1, scope: !5390)
!5575 = !{i64 2147593041, i64 2147593084, i64 2147593124}
!5576 = !DILocation(line: 103, column: 1, scope: !5390)
!5577 = !{i64 2147593243, i64 2147593286, i64 2147593326}
!5578 = !DILocation(line: 104, column: 1, scope: !5390)
!5579 = !{i64 2147593409, i64 2147593452, i64 2147593492}
!5580 = !DILocation(line: 105, column: 1, scope: !5390)
!5581 = !{i64 2147593593, i64 2147593636, i64 2147593676}
!5582 = !DILocation(line: 106, column: 1, scope: !5390)
!5583 = !{i64 2147593783, i64 2147593826, i64 2147593866}
!5584 = !DILocation(line: 107, column: 1, scope: !5390)
!5585 = !{i64 2147593967, i64 2147594010, i64 2147594050}
!5586 = !DILocation(line: 108, column: 1, scope: !5390)
!5587 = !{i64 2147594181, i64 2147594224, i64 2147594264}
!5588 = !DILocation(line: 109, column: 1, scope: !5390)
!5589 = !{i64 2147594392, i64 2147594435, i64 2147594475}
!5590 = !DILocation(line: 110, column: 1, scope: !5390)
!5591 = !{i64 2147594615, i64 2147594658, i64 2147594698}
!5592 = !DILocation(line: 111, column: 1, scope: !5390)
!5593 = !{i64 2147594799, i64 2147594842, i64 2147594882}
!5594 = !DILocation(line: 112, column: 1, scope: !5390)
!5595 = !{i64 2147595013, i64 2147595056, i64 2147595096}
!5596 = !DILocation(line: 113, column: 1, scope: !5390)
!5597 = !{i64 2147595179, i64 2147595222, i64 2147595262}
!5598 = !DILocation(line: 114, column: 1, scope: !5390)
!5599 = !{i64 2147595360, i64 2147595403, i64 2147595443}
!5600 = !DILocation(line: 115, column: 1, scope: !5390)
!5601 = !{i64 2147595553, i64 2147595596, i64 2147595636}
!5602 = !DILocation(line: 116, column: 1, scope: !5390)
!5603 = !{i64 2147595779, i64 2147595822, i64 2147595862}
!5604 = !DILocation(line: 117, column: 1, scope: !5390)
!5605 = !{i64 2147595993, i64 2147596036, i64 2147596076}
!5606 = !DILocation(line: 118, column: 1, scope: !5390)
!5607 = !{i64 2147596219, i64 2147596262, i64 2147596302}
!5608 = !DILocation(line: 119, column: 1, scope: !5390)
!5609 = !{i64 2147596436, i64 2147596479, i64 2147596519}
!5610 = !DILocation(line: 120, column: 1, scope: !5390)
!5611 = !{i64 2147596713, i64 2147596756, i64 2147596796}
!5612 = !DILocation(line: 121, column: 1, scope: !5390)
!5613 = !{i64 2147596939, i64 2147596982, i64 2147597022}
!5614 = !DILocation(line: 122, column: 1, scope: !5390)
!5615 = !{i64 2147597135, i64 2147597178, i64 2147597218}
!5616 = !DILocation(line: 123, column: 1, scope: !5390)
!5617 = !{i64 2147597400, i64 2147597443, i64 2147597483}
!5618 = !DILocation(line: 124, column: 1, scope: !5390)
!5619 = !{i64 2147597614, i64 2147597657, i64 2147597697}
!5620 = !DILocation(line: 125, column: 1, scope: !5390)
!5621 = !{i64 2147597789, i64 2147597832, i64 2147597872}
!5622 = !DILocation(line: 126, column: 1, scope: !5390)
!5623 = !{i64 2147598043, i64 2147598086, i64 2147598126}
!5624 = !DILocation(line: 127, column: 1, scope: !5390)
!5625 = !{i64 2147598242, i64 2147598285, i64 2147598325}
!5626 = !DILocation(line: 128, column: 1, scope: !5390)
!5627 = !{i64 2147598484, i64 2147598527, i64 2147598567}
!5628 = !DILocation(line: 129, column: 1, scope: !5390)
!5629 = !{i64 2147598647, i64 2147598690, i64 2147598730}
!5630 = !DILocation(line: 130, column: 1, scope: !5390)
!5631 = !{i64 2147598834, i64 2147598877, i64 2147598917}
!5632 = !DILocation(line: 131, column: 1, scope: !5390)
!5633 = !{i64 2147599027, i64 2147599070, i64 2147599110}
!5634 = !DILocation(line: 132, column: 1, scope: !5390)
!5635 = !{i64 2147599209, i64 2147599252, i64 2147599292}
!5636 = !DILocation(line: 133, column: 1, scope: !5390)
!5637 = !{i64 2147603484, i64 2147603527, i64 2147603567}
!5638 = !DILocation(line: 134, column: 1, scope: !5390)
!5639 = !{i64 2147603695, i64 2147603738, i64 2147603778}
!5640 = !DILocation(line: 135, column: 1, scope: !5390)
!5641 = !{i64 2147603915, i64 2147603958, i64 2147603998}
!5642 = !DILocation(line: 136, column: 1, scope: !5390)
!5643 = !{i64 2147604122, i64 2147604165, i64 2147604205}
!5644 = !DILocation(line: 137, column: 1, scope: !5390)
!5645 = !{i64 2147604395, i64 2147604438, i64 2147604478}
!5646 = !DILocation(line: 138, column: 1, scope: !5390)
!5647 = !{i64 2147604643, i64 2147604686, i64 2147604726}
!5648 = !DILocation(line: 139, column: 1, scope: !5390)
!5649 = !{i64 2147604842, i64 2147604885, i64 2147604925}
!5650 = !DILocation(line: 140, column: 1, scope: !5390)
!5651 = !{i64 2147605077, i64 2147605120, i64 2147605160}
!5652 = !DILocation(line: 141, column: 1, scope: !5390)
!5653 = !{i64 2147605327, i64 2147605370, i64 2147605410}
!5654 = !DILocation(line: 142, column: 1, scope: !5390)
!5655 = !{i64 2147605529, i64 2147605572, i64 2147605612}
!5656 = !DILocation(line: 143, column: 1, scope: !5390)
!5657 = !{i64 2147605752, i64 2147605795, i64 2147605835}
!5658 = !DILocation(line: 144, column: 1, scope: !5390)
!5659 = !{i64 2147605966, i64 2147606009, i64 2147606049}
!5660 = !DILocation(line: 145, column: 1, scope: !5390)
!5661 = !{i64 2147606210, i64 2147606253, i64 2147606293}
!5662 = !DILocation(line: 146, column: 1, scope: !5390)
!5663 = !{i64 2147606439, i64 2147606482, i64 2147606522}
!5664 = !DILocation(line: 147, column: 1, scope: !5390)
!5665 = !{i64 2147606668, i64 2147606711, i64 2147606751}
!5666 = !DILocation(line: 148, column: 1, scope: !5390)
!5667 = !{i64 2147606876, i64 2147606919, i64 2147606959}
!5668 = !DILocation(line: 149, column: 1, scope: !5390)
!5669 = !{i64 2147607114, i64 2147607157, i64 2147607197}
!5670 = !DILocation(line: 150, column: 1, scope: !5390)
!5671 = !{i64 2147607340, i64 2147607383, i64 2147607423}
!5672 = !DILocation(line: 151, column: 1, scope: !5390)
!5673 = !{i64 2147607599, i64 2147607642, i64 2147607682}
!5674 = !DILocation(line: 152, column: 1, scope: !5390)
!5675 = !{i64 2147607819, i64 2147607862, i64 2147607902}
!5676 = !DILocation(line: 153, column: 1, scope: !5390)
!5677 = !{i64 2147608051, i64 2147608094, i64 2147608134}
!5678 = !DILocation(line: 154, column: 1, scope: !5390)
!5679 = !{i64 2147608292, i64 2147608335, i64 2147608375}
!5680 = !DILocation(line: 155, column: 1, scope: !5390)
!5681 = !{i64 2147608533, i64 2147608576, i64 2147608616}
!5682 = !DILocation(line: 156, column: 1, scope: !5390)
!5683 = !{i64 2147608756, i64 2147608799, i64 2147608839}
!5684 = !DILocation(line: 157, column: 1, scope: !5390)
!5685 = !{i64 2147608973, i64 2147609016, i64 2147609056}
!5686 = !DILocation(line: 158, column: 1, scope: !5390)
!5687 = !{i64 2147609214, i64 2147609257, i64 2147609297}
!5688 = !DILocation(line: 159, column: 1, scope: !5390)
!5689 = !{i64 2147609401, i64 2147609444, i64 2147609484}
!5690 = !DILocation(line: 160, column: 1, scope: !5390)
!5691 = !{i64 2147609564, i64 2147609607, i64 2147609647}
!5692 = !DILocation(line: 161, column: 1, scope: !5390)
!5693 = !{i64 2147609823, i64 2147609866, i64 2147609906}
!5694 = !DILocation(line: 162, column: 1, scope: !5390)
!5695 = !{i64 2147610046, i64 2147610089, i64 2147610129}
!5696 = !DILocation(line: 163, column: 1, scope: !5390)
!5697 = !{i64 2147610275, i64 2147610318, i64 2147610358}
!5698 = !DILocation(line: 164, column: 1, scope: !5390)
!5699 = !{i64 2147610471, i64 2147610514, i64 2147610554}
!5700 = !DILocation(line: 165, column: 1, scope: !5390)
!5701 = !{i64 2147610683, i64 2147610726, i64 2147610766}
!5702 = !DILocation(line: 166, column: 1, scope: !5390)
!5703 = !{i64 2147610904, i64 2147610947, i64 2147610987}
!5704 = !DILocation(line: 167, column: 1, scope: !5390)
!5705 = !{i64 2147611118, i64 2147611161, i64 2147611201}
!5706 = !DILocation(line: 168, column: 1, scope: !5390)
!5707 = !{i64 2147611308, i64 2147611351, i64 2147611391}
!5708 = !DILocation(line: 169, column: 1, scope: !5390)
!5709 = !{i64 2147611507, i64 2147611550, i64 2147611590}
!5710 = !DILocation(line: 170, column: 1, scope: !5390)
!5711 = !{i64 2147611712, i64 2147611755, i64 2147611795}
!5712 = !DILocation(line: 171, column: 1, scope: !5390)
!5713 = !{i64 2147615993, i64 2147616036, i64 2147616076}
!5714 = !DILocation(line: 172, column: 1, scope: !5390)
!5715 = !{i64 2147616194, i64 2147616237, i64 2147616277}
!5716 = !DILocation(line: 173, column: 1, scope: !5390)
!5717 = !{i64 2147616393, i64 2147616436, i64 2147616476}
!5718 = !DILocation(line: 174, column: 1, scope: !5390)
!5719 = !{i64 2147616598, i64 2147616641, i64 2147616681}
!5720 = !DILocation(line: 175, column: 1, scope: !5390)
!5721 = !{i64 2147616767, i64 2147616810, i64 2147616850}
!5722 = !DILocation(line: 176, column: 1, scope: !5390)
!5723 = !{i64 2147616963, i64 2147617006, i64 2147617046}
!5724 = !DILocation(line: 177, column: 1, scope: !5390)
!5725 = !{i64 2147617147, i64 2147617190, i64 2147617230}
!5726 = !DILocation(line: 178, column: 1, scope: !5390)
!5727 = !{i64 2147617334, i64 2147617377, i64 2147617417}
!5728 = !DILocation(line: 179, column: 1, scope: !5390)
!5729 = !{i64 2147617518, i64 2147617561, i64 2147617601}
!5730 = !DILocation(line: 180, column: 1, scope: !5390)
!5731 = !{i64 2147617714, i64 2147617757, i64 2147617797}
!5732 = !DILocation(line: 181, column: 1, scope: !5390)
!5733 = !{i64 2147617901, i64 2147617944, i64 2147617984}
!5734 = !DILocation(line: 182, column: 1, scope: !5390)
!5735 = !{i64 2147618113, i64 2147618156, i64 2147618196}
!5736 = !DILocation(line: 183, column: 1, scope: !5390)
!5737 = !{i64 2147618351, i64 2147618394, i64 2147618434}
!5738 = !DILocation(line: 184, column: 1, scope: !5390)
!5739 = !{i64 2147618581, i64 2147618624, i64 2147618664}
!5740 = !DILocation(line: 185, column: 1, scope: !5390)
!5741 = !{i64 2147618810, i64 2147618853, i64 2147618893}
!5742 = !DILocation(line: 186, column: 1, scope: !5390)
!5743 = !{i64 2147618997, i64 2147619040, i64 2147619080}
!5744 = !DILocation(line: 187, column: 1, scope: !5390)
!5745 = !{i64 2147619193, i64 2147619236, i64 2147619276}
!5746 = !DILocation(line: 188, column: 1, scope: !5390)
!5747 = !{i64 2147619401, i64 2147619444, i64 2147619484}
!5748 = !DILocation(line: 189, column: 1, scope: !5390)
!5749 = !{i64 2147619613, i64 2147619656, i64 2147619696}
!5750 = !DILocation(line: 190, column: 1, scope: !5390)
!5751 = !{i64 2147619812, i64 2147619855, i64 2147619895}
!5752 = !DILocation(line: 191, column: 1, scope: !5390)
!5753 = !{i64 2147620050, i64 2147620093, i64 2147620133}
!5754 = !DILocation(line: 192, column: 1, scope: !5390)
!5755 = !{i64 2147620246, i64 2147620289, i64 2147620329}
!5756 = !DILocation(line: 193, column: 1, scope: !5390)
!5757 = !{i64 2147620448, i64 2147620491, i64 2147620531}
!5758 = !DILocation(line: 194, column: 1, scope: !5390)
!5759 = !{i64 2147620641, i64 2147620684, i64 2147620724}
!5760 = !DILocation(line: 195, column: 1, scope: !5390)
!5761 = !{i64 2147620875, i64 2147620918, i64 2147620958}
!5762 = !DILocation(line: 196, column: 1, scope: !5390)
!5763 = !{i64 2147621038, i64 2147621081, i64 2147621121}
!5764 = !DILocation(line: 197, column: 1, scope: !5390)
!5765 = !{i64 2147621277, i64 2147621320, i64 2147621360}
!5766 = !DILocation(line: 198, column: 1, scope: !5390)
!5767 = !{i64 2147621516, i64 2147621559, i64 2147621599}
!5768 = !DILocation(line: 199, column: 1, scope: !5390)
!5769 = !{i64 2147621752, i64 2147621795, i64 2147621835}
!5770 = !DILocation(line: 200, column: 1, scope: !5390)
!5771 = !{i64 2147621982, i64 2147622025, i64 2147622065}
!5772 = !DILocation(line: 201, column: 1, scope: !5390)
!5773 = !{i64 2147622169, i64 2147622212, i64 2147622252}
!5774 = !DILocation(line: 202, column: 1, scope: !5390)
!5775 = !{i64 2147622368, i64 2147622411, i64 2147622451}
!5776 = !DILocation(line: 203, column: 1, scope: !5390)
!5777 = !{i64 2147622639, i64 2147622682, i64 2147622722}
!5778 = !DILocation(line: 204, column: 1, scope: !5390)
!5779 = !{i64 2147622814, i64 2147622857, i64 2147622897}
!5780 = !DILocation(line: 205, column: 1, scope: !5390)
!5781 = !{i64 2147623048, i64 2147623091, i64 2147623131}
!5782 = !DILocation(line: 206, column: 1, scope: !5390)
!5783 = !{i64 2147623256, i64 2147623299, i64 2147623339}
!5784 = !DILocation(line: 207, column: 1, scope: !5390)
!5785 = !{i64 2147623474, i64 2147623517, i64 2147623557}
!5786 = !DILocation(line: 208, column: 1, scope: !5390)
!5787 = !{i64 2147623664, i64 2147623707, i64 2147623747}
!5788 = !DILocation(line: 209, column: 1, scope: !5390)
!5789 = !{i64 2147623860, i64 2147623903, i64 2147623943}
!5790 = !DILocation(line: 210, column: 1, scope: !5390)
!5791 = !{i64 2147624066, i64 2147624109, i64 2147624149}
!5792 = !DILocation(line: 211, column: 1, scope: !5390)
!5793 = !{i64 2147624271, i64 2147624314, i64 2147624354}
!5794 = !DILocation(line: 212, column: 1, scope: !5390)
!5795 = !{i64 2147624497, i64 2147624540, i64 2147624580}
!5796 = !DILocation(line: 213, column: 1, scope: !5390)
!5797 = !{i64 2147624729, i64 2147624772, i64 2147624812}
!5798 = !DILocation(line: 214, column: 1, scope: !5390)
!5799 = !{i64 2147624913, i64 2147624956, i64 2147624996}
!5800 = !DILocation(line: 215, column: 1, scope: !5390)
!5801 = !{i64 2147625122, i64 2147625165, i64 2147625205}
!5802 = !DILocation(line: 216, column: 1, scope: !5390)
!5803 = !{i64 2147629367, i64 2147629410, i64 2147629450}
!5804 = !DILocation(line: 217, column: 1, scope: !5390)
!5805 = !{i64 2147629593, i64 2147629636, i64 2147629676}
!5806 = !DILocation(line: 218, column: 1, scope: !5390)
!5807 = !{i64 2147629819, i64 2147629862, i64 2147629902}
!5808 = !DILocation(line: 219, column: 1, scope: !5390)
!5809 = !{i64 2147630045, i64 2147630088, i64 2147630128}
!5810 = !DILocation(line: 220, column: 1, scope: !5390)
!5811 = !{i64 2147630271, i64 2147630314, i64 2147630354}
!5812 = !DILocation(line: 221, column: 1, scope: !5390)
!5813 = !{i64 2147630497, i64 2147630540, i64 2147630580}
!5814 = !DILocation(line: 222, column: 1, scope: !5390)
!5815 = !{i64 2147630729, i64 2147630772, i64 2147630812}
!5816 = !DILocation(line: 223, column: 1, scope: !5390)
!5817 = !{i64 2147630967, i64 2147631010, i64 2147631050}
!5818 = !DILocation(line: 224, column: 1, scope: !5390)
!5819 = !{i64 2147631199, i64 2147631242, i64 2147631282}
!5820 = !DILocation(line: 225, column: 1, scope: !5390)
!5821 = !{i64 2147631401, i64 2147631444, i64 2147631484}
!5822 = !DILocation(line: 226, column: 1, scope: !5390)
!5823 = !{i64 2147631651, i64 2147631694, i64 2147631734}
!5824 = !DILocation(line: 227, column: 1, scope: !5390)
!5825 = !{i64 2147631889, i64 2147631932, i64 2147631972}
!5826 = !DILocation(line: 228, column: 1, scope: !5390)
!5827 = !{i64 2147632073, i64 2147632116, i64 2147632156}
!5828 = !DILocation(line: 229, column: 1, scope: !5390)
!5829 = !{i64 2147632296, i64 2147632339, i64 2147632379}
!5830 = !DILocation(line: 230, column: 1, scope: !5390)
!5831 = !{i64 2147632534, i64 2147632577, i64 2147632617}
!5832 = !DILocation(line: 231, column: 1, scope: !5390)
!5833 = !{i64 2147632772, i64 2147632815, i64 2147632855}
!5834 = !DILocation(line: 232, column: 1, scope: !5390)
!5835 = !{i64 2147632965, i64 2147633008, i64 2147633048}
!5836 = !DILocation(line: 233, column: 1, scope: !5390)
!5837 = !{i64 2147633218, i64 2147633261, i64 2147633301}
!5838 = !DILocation(line: 234, column: 1, scope: !5390)
!5839 = !{i64 2147633432, i64 2147633475, i64 2147633515}
!5840 = !DILocation(line: 235, column: 1, scope: !5390)
!5841 = !{i64 2147633640, i64 2147633683, i64 2147633723}
!5842 = !DILocation(line: 236, column: 1, scope: !5390)
!5843 = !{i64 2147633830, i64 2147633873, i64 2147633913}
!5844 = !DILocation(line: 237, column: 1, scope: !5390)
!5845 = !{i64 2147634044, i64 2147634087, i64 2147634127}
!5846 = !DILocation(line: 238, column: 1, scope: !5390)
!5847 = !{i64 2147634306, i64 2147634349, i64 2147634389}
!5848 = !DILocation(line: 239, column: 1, scope: !5390)
!5849 = !{i64 2147634517, i64 2147634560, i64 2147634600}
!5850 = !DILocation(line: 240, column: 1, scope: !5390)
!5851 = !{i64 2147634761, i64 2147634804, i64 2147634844}
!5852 = !DILocation(line: 241, column: 1, scope: !5390)
!5853 = !{i64 2147634972, i64 2147635015, i64 2147635055}
!5854 = !DILocation(line: 242, column: 1, scope: !5390)
!5855 = !{i64 2147635201, i64 2147635244, i64 2147635284}
!5856 = !DILocation(line: 243, column: 1, scope: !5390)
!5857 = !{i64 2147635466, i64 2147635509, i64 2147635549}
!5858 = !DILocation(line: 244, column: 1, scope: !5390)
!5859 = !{i64 2147635671, i64 2147635714, i64 2147635754}
!5860 = !DILocation(line: 245, column: 1, scope: !5390)
!5861 = !{i64 2147635894, i64 2147635937, i64 2147635977}
!5862 = !DILocation(line: 246, column: 1, scope: !5390)
!5863 = !{i64 2147636057, i64 2147636100, i64 2147636140}
!5864 = !DILocation(line: 247, column: 1, scope: !5390)
!5865 = !{i64 2147636262, i64 2147636305, i64 2147636345}
!5866 = !DILocation(line: 248, column: 1, scope: !5390)
!5867 = !{i64 2147636482, i64 2147636525, i64 2147636565}
!5868 = !DILocation(line: 249, column: 1, scope: !5390)
!5869 = !{i64 2147636696, i64 2147636739, i64 2147636779}
!5870 = !DILocation(line: 250, column: 1, scope: !5390)
!5871 = !{i64 2147636910, i64 2147636953, i64 2147636993}
!5872 = !DILocation(line: 251, column: 1, scope: !5390)
!5873 = !{i64 2147637121, i64 2147637164, i64 2147637204}
!5874 = !DILocation(line: 252, column: 1, scope: !5390)
!5875 = !{i64 2147637314, i64 2147637357, i64 2147637397}
!5876 = !DILocation(line: 253, column: 1, scope: !5390)
!5877 = !{i64 2147637513, i64 2147637556, i64 2147637596}
!5878 = !DILocation(line: 254, column: 1, scope: !5390)
!5879 = !{i64 2147637685, i64 2147637728, i64 2147637768}
!5880 = !DILocation(line: 255, column: 1, scope: !5390)
!5881 = !{i64 2147637878, i64 2147637921, i64 2147637961}
!5882 = !DILocation(line: 256, column: 1, scope: !5390)
!5883 = !{i64 2147642111, i64 2147642154, i64 2147642194}
!5884 = !DILocation(line: 257, column: 1, scope: !5390)
!5885 = !{i64 2147642301, i64 2147642344, i64 2147642384}
!5886 = !DILocation(line: 258, column: 1, scope: !5390)
!5887 = !{i64 2147642494, i64 2147642537, i64 2147642577}
!5888 = !DILocation(line: 259, column: 1, scope: !5390)
!5889 = !{i64 2147642690, i64 2147642733, i64 2147642773}
!5890 = !DILocation(line: 260, column: 1, scope: !5390)
!5891 = !{i64 2147642895, i64 2147642938, i64 2147642978}
!5892 = !DILocation(line: 261, column: 1, scope: !5390)
!5893 = !{i64 2147643122, i64 2147643165, i64 2147643205}
!5894 = !DILocation(line: 262, column: 1, scope: !5390)
!5895 = !{i64 2147643339, i64 2147643382, i64 2147643422}
!5896 = !DILocation(line: 263, column: 1, scope: !5390)
!5897 = !{i64 2147643631, i64 2147643674, i64 2147643714}
!5898 = !DILocation(line: 264, column: 1, scope: !5390)
!5899 = !{i64 2147643863, i64 2147643906, i64 2147643946}
!5900 = !DILocation(line: 265, column: 1, scope: !5390)
!5901 = !{i64 2147644080, i64 2147644123, i64 2147644163}
!5902 = !DILocation(line: 266, column: 1, scope: !5390)
!5903 = !{i64 2147644287, i64 2147644330, i64 2147644370}
!5904 = !DILocation(line: 267, column: 1, scope: !5390)
!5905 = !{i64 2147644488, i64 2147644531, i64 2147644571}
!5906 = !DILocation(line: 268, column: 1, scope: !5390)
!5907 = !{i64 2147644720, i64 2147644763, i64 2147644803}
!5908 = !DILocation(line: 269, column: 1, scope: !5390)
!5909 = !{i64 2147644928, i64 2147644971, i64 2147645011}
!5910 = !DILocation(line: 270, column: 1, scope: !5390)
!5911 = !{i64 2147645118, i64 2147645161, i64 2147645201}
!5912 = !DILocation(line: 271, column: 1, scope: !5390)
!5913 = !{i64 2147645344, i64 2147645387, i64 2147645427}
!5914 = !DILocation(line: 272, column: 1, scope: !5390)
!5915 = !{i64 2147645533, i64 2147645576, i64 2147645616}
!5916 = !DILocation(line: 273, column: 1, scope: !5390)
!5917 = !{i64 2147645804, i64 2147645847, i64 2147645887}
!5918 = !DILocation(line: 274, column: 1, scope: !5390)
!5919 = !{i64 2147646024, i64 2147646067, i64 2147646107}
!5920 = !DILocation(line: 275, column: 1, scope: !5390)
!5921 = !{i64 2147646277, i64 2147646320, i64 2147646360}
!5922 = !DILocation(line: 276, column: 1, scope: !5390)
!5923 = !{i64 2147646485, i64 2147646528, i64 2147646568}
!5924 = !DILocation(line: 277, column: 1, scope: !5390)
!5925 = !{i64 2147646717, i64 2147646760, i64 2147646800}
!5926 = !DILocation(line: 278, column: 1, scope: !5390)
!5927 = !{i64 2147646928, i64 2147646971, i64 2147647011}
!5928 = !DILocation(line: 279, column: 1, scope: !5390)
!5929 = !{i64 2147647118, i64 2147647161, i64 2147647201}
!5930 = !DILocation(line: 280, column: 1, scope: !5390)
!5931 = !{i64 2147647332, i64 2147647375, i64 2147647415}
!5932 = !DILocation(line: 281, column: 1, scope: !5390)
!5933 = !{i64 2147647531, i64 2147647574, i64 2147647614}
!5934 = !DILocation(line: 282, column: 1, scope: !5390)
!5935 = !{i64 2147647718, i64 2147647761, i64 2147647801}
!5936 = !DILocation(line: 283, column: 1, scope: !5390)
!5937 = !{i64 2147647926, i64 2147647969, i64 2147648009}
!5938 = !DILocation(line: 284, column: 1, scope: !5390)
!5939 = !{i64 2147648155, i64 2147648198, i64 2147648238}
!5940 = !DILocation(line: 285, column: 1, scope: !5390)
!5941 = !{i64 2147648357, i64 2147648400, i64 2147648440}
!5942 = !DILocation(line: 286, column: 1, scope: !5390)
!5943 = !{i64 2147648556, i64 2147648599, i64 2147648639}
!5944 = !DILocation(line: 287, column: 1, scope: !5390)
!5945 = !{i64 2147648773, i64 2147648816, i64 2147648856}
!5946 = !DILocation(line: 289, column: 1, scope: !5390)
!5947 = distinct !DISubprogram(name: "stm32l1_init", scope: !322, file: !322, line: 31, type: !329, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5948)
!5948 = !{!5949, !5950}
!5949 = !DILocalVariable(name: "arg", arg: 1, scope: !5947, file: !322, line: 31, type: !331)
!5950 = !DILocalVariable(name: "key", scope: !5947, file: !322, line: 33, type: !110)
!5951 = !DILocation(line: 0, scope: !5947)
!5952 = !DILocation(line: 55, column: 2, scope: !5953, inlinedAt: !5960)
!5953 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5957)
!5954 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5955 = !DISubroutineType(types: !5956)
!5956 = !{!32}
!5957 = !{!5958, !5959}
!5958 = !DILocalVariable(name: "key", scope: !5953, file: !5954, line: 44, type: !32)
!5959 = !DILocalVariable(name: "tmp", scope: !5953, file: !5954, line: 53, type: !32)
!5960 = distinct !DILocation(line: 37, column: 8, scope: !5947)
!5961 = !{i64 1526493}
!5962 = !DILocation(line: 0, scope: !5953, inlinedAt: !5960)
!5963 = !DILocalVariable(name: "key", arg: 1, scope: !5964, file: !5954, line: 84, type: !32)
!5964 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5967)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{null, !32}
!5967 = !{!5963}
!5968 = !DILocation(line: 0, scope: !5964, inlinedAt: !5969)
!5969 = distinct !DILocation(line: 44, column: 2, scope: !5947)
!5970 = !DILocation(line: 95, column: 2, scope: !5964, inlinedAt: !5969)
!5971 = !{i64 1527310}
!5972 = !DILocation(line: 48, column: 18, scope: !5947)
!5973 = !DILocation(line: 54, column: 2, scope: !5947)
!5974 = !DILocation(line: 55, column: 2, scope: !5947)
!5975 = !DILocation(line: 57, column: 2, scope: !5947)
!5976 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5977, file: !5977, line: 531, type: !5978, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5980)
!5977 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5978 = !DISubroutineType(types: !5979)
!5979 = !{null, !110}
!5980 = !{!5981, !5982}
!5981 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5976, file: !5977, line: 531, type: !110)
!5982 = !DILocalVariable(name: "tmpreg", scope: !5976, file: !5977, line: 533, type: !301)
!5983 = !DILocation(line: 0, scope: !5976)
!5984 = !DILocation(line: 533, column: 3, scope: !5976)
!5985 = !DILocation(line: 533, column: 17, scope: !5976)
!5986 = !DILocation(line: 534, column: 3, scope: !5976)
!5987 = !DILocation(line: 536, column: 12, scope: !5976)
!5988 = !DILocation(line: 536, column: 10, scope: !5976)
!5989 = !DILocation(line: 537, column: 9, scope: !5976)
!5990 = !DILocation(line: 538, column: 1, scope: !5976)
!5991 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5992, file: !5992, line: 272, type: !5978, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5993)
!5992 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5993 = !{!5994}
!5994 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5991, file: !5992, line: 272, type: !110)
!5995 = !DILocation(line: 0, scope: !5991)
!5996 = !DILocation(line: 274, column: 3, scope: !5991)
!5997 = !DILocation(line: 275, column: 1, scope: !5991)
!5998 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !5999)
!5999 = !{!6000}
!6000 = !DILocalVariable(name: "dev", arg: 1, scope: !5998, file: !361, line: 26, type: !369)
!6001 = !DILocation(line: 0, scope: !5998)
!6002 = !DILocation(line: 68, column: 2, scope: !5998)
!6003 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6004, file: !6004, line: 57, type: !6005, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6051)
!6004 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6005 = !DISubroutineType(types: !6006)
!6006 = !{null, !32, !6007}
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 32)
!6008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6009)
!6009 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2705, line: 141, baseType: !6010)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2705, line: 97, size: 256, elements: !6011)
!6011 = !{!6012}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6010, file: !2705, line: 107, baseType: !6013, size: 256)
!6013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2705, line: 98, size: 256, elements: !6014)
!6014 = !{!6015, !6020, !6025, !6030, !6035, !6040, !6045, !6050}
!6015 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 99, baseType: !6016, size: 32)
!6016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 99, size: 32, elements: !6017)
!6017 = !{!6018, !6019}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6016, file: !2705, line: 99, baseType: !110, size: 32)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6016, file: !2705, line: 99, baseType: !110, size: 32)
!6020 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 100, baseType: !6021, size: 32, offset: 32)
!6021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 100, size: 32, elements: !6022)
!6022 = !{!6023, !6024}
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6021, file: !2705, line: 100, baseType: !110, size: 32)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6021, file: !2705, line: 100, baseType: !110, size: 32)
!6025 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 101, baseType: !6026, size: 32, offset: 64)
!6026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 101, size: 32, elements: !6027)
!6027 = !{!6028, !6029}
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6026, file: !2705, line: 101, baseType: !110, size: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6026, file: !2705, line: 101, baseType: !110, size: 32)
!6030 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 102, baseType: !6031, size: 32, offset: 96)
!6031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 102, size: 32, elements: !6032)
!6032 = !{!6033, !6034}
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6031, file: !2705, line: 102, baseType: !110, size: 32)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6031, file: !2705, line: 102, baseType: !110, size: 32)
!6035 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 103, baseType: !6036, size: 32, offset: 128)
!6036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 103, size: 32, elements: !6037)
!6037 = !{!6038, !6039}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6036, file: !2705, line: 103, baseType: !110, size: 32)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6036, file: !2705, line: 103, baseType: !110, size: 32)
!6040 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 104, baseType: !6041, size: 32, offset: 160)
!6041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 104, size: 32, elements: !6042)
!6042 = !{!6043, !6044}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6041, file: !2705, line: 104, baseType: !110, size: 32)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6041, file: !2705, line: 104, baseType: !110, size: 32)
!6045 = !DIDerivedType(tag: DW_TAG_member, scope: !6013, file: !2705, line: 105, baseType: !6046, size: 32, offset: 192)
!6046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6013, file: !2705, line: 105, size: 32, elements: !6047)
!6047 = !{!6048, !6049}
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6046, file: !2705, line: 105, baseType: !110, size: 32)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6046, file: !2705, line: 105, baseType: !110, size: 32)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6013, file: !2705, line: 106, baseType: !110, size: 32, offset: 224)
!6051 = !{!6052, !6053}
!6052 = !DILocalVariable(name: "reason", arg: 1, scope: !6003, file: !6004, line: 57, type: !32)
!6053 = !DILocalVariable(name: "esf", arg: 2, scope: !6003, file: !6004, line: 57, type: !6007)
!6054 = !DILocation(line: 0, scope: !6003)
!6055 = !DILocation(line: 63, column: 2, scope: !6003)
!6056 = !DILocation(line: 64, column: 1, scope: !6003)
!6057 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6004, file: !6004, line: 82, type: !6058, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6073)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{null, !6007, !6060}
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 32)
!6061 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6062)
!6062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6063)
!6063 = !{!6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6062, file: !198, line: 26, baseType: !110, size: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6062, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6062, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6062, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6062, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6062, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6062, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6062, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6062, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6073 = !{!6074, !6075, !6076}
!6074 = !DILocalVariable(name: "esf", arg: 1, scope: !6057, file: !6004, line: 82, type: !6007)
!6075 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6057, file: !6004, line: 82, type: !6060)
!6076 = !DILocalVariable(name: "reason", scope: !6057, file: !6004, line: 88, type: !32)
!6077 = !DILocation(line: 0, scope: !6057)
!6078 = !DILocation(line: 88, column: 35, scope: !6057)
!6079 = !DILocation(line: 108, column: 2, scope: !6057)
!6080 = !DILocation(line: 131, column: 1, scope: !6057)
!6081 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6004, file: !6004, line: 133, type: !6082, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !6084)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{null, !108}
!6084 = !{!6085, !6086, !6087}
!6085 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6081, file: !6004, line: 133, type: !108)
!6086 = !DILocalVariable(name: "ssf_contents", scope: !6081, file: !6004, line: 135, type: !936)
!6087 = !DILocalVariable(name: "oops_esf", scope: !6081, file: !6004, line: 136, type: !6009)
!6088 = !DILocation(line: 0, scope: !6081)
!6089 = !DILocation(line: 136, column: 2, scope: !6081)
!6090 = !DILocation(line: 136, column: 15, scope: !6081)
!6091 = !DILocation(line: 139, column: 22, scope: !6081)
!6092 = !DILocation(line: 139, column: 17, scope: !6081)
!6093 = !DILocation(line: 139, column: 20, scope: !6081)
!6094 = !DILocation(line: 141, column: 2, scope: !6081)
!6095 = !DILocation(line: 142, column: 2, scope: !6081)
!6096 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6097, file: !6097, line: 40, type: !5965, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6098)
!6097 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6098 = !{!6099}
!6099 = !DILocalVariable(name: "irq", arg: 1, scope: !6096, file: !6097, line: 40, type: !32)
!6100 = !DILocation(line: 0, scope: !6096)
!6101 = !DILocation(line: 42, column: 2, scope: !6096)
!6102 = !DILocation(line: 43, column: 1, scope: !6096)
!6103 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !549, file: !549, line: 1508, type: !6104, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6106)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{null, !863}
!6106 = !{!6107}
!6107 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6103, file: !549, line: 1508, type: !863)
!6108 = !DILocation(line: 0, scope: !6103)
!6109 = !DILocation(line: 1510, column: 23, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6103, file: !549, line: 1510, column: 7)
!6111 = !DILocation(line: 1510, column: 7, scope: !6103)
!6112 = !DILocation(line: 1512, column: 5, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6110, file: !549, line: 1511, column: 3)
!6114 = !{i64 2149971556}
!6115 = !DILocation(line: 1513, column: 81, scope: !6113)
!6116 = !DILocation(line: 1513, column: 60, scope: !6113)
!6117 = !DILocation(line: 1513, column: 34, scope: !6113)
!6118 = !DILocation(line: 1513, column: 5, scope: !6113)
!6119 = !DILocation(line: 1513, column: 43, scope: !6113)
!6120 = !DILocation(line: 1514, column: 5, scope: !6113)
!6121 = !{i64 2149971670}
!6122 = !DILocation(line: 1515, column: 3, scope: !6113)
!6123 = !DILocation(line: 1516, column: 1, scope: !6103)
!6124 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6097, file: !6097, line: 45, type: !5965, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6125)
!6125 = !{!6126}
!6126 = !DILocalVariable(name: "irq", arg: 1, scope: !6124, file: !6097, line: 45, type: !32)
!6127 = !DILocation(line: 0, scope: !6124)
!6128 = !DILocation(line: 47, column: 2, scope: !6124)
!6129 = !DILocation(line: 48, column: 1, scope: !6124)
!6130 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !549, file: !549, line: 1546, type: !6104, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6131)
!6131 = !{!6132}
!6132 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6130, file: !549, line: 1546, type: !863)
!6133 = !DILocation(line: 0, scope: !6130)
!6134 = !DILocation(line: 1548, column: 23, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6130, file: !549, line: 1548, column: 7)
!6136 = !DILocation(line: 1548, column: 7, scope: !6130)
!6137 = !DILocation(line: 1550, column: 81, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6135, file: !549, line: 1549, column: 3)
!6139 = !DILocation(line: 1550, column: 60, scope: !6138)
!6140 = !DILocation(line: 1550, column: 34, scope: !6138)
!6141 = !DILocation(line: 1550, column: 5, scope: !6138)
!6142 = !DILocation(line: 1550, column: 43, scope: !6138)
!6143 = !DILocation(line: 271, column: 3, scope: !6144, inlinedAt: !6146)
!6144 = distinct !DISubprogram(name: "__DSB", scope: !6145, file: !6145, line: 269, type: !3076, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !2037)
!6145 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6146 = distinct !DILocation(line: 1551, column: 5, scope: !6138)
!6147 = !{i64 2429058}
!6148 = !DILocation(line: 260, column: 3, scope: !6149, inlinedAt: !6150)
!6149 = distinct !DISubprogram(name: "__ISB", scope: !6145, file: !6145, line: 258, type: !3076, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !2037)
!6150 = distinct !DILocation(line: 1552, column: 5, scope: !6138)
!6151 = !{i64 2428775}
!6152 = !DILocation(line: 1553, column: 3, scope: !6138)
!6153 = !DILocation(line: 1554, column: 1, scope: !6130)
!6154 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6097, file: !6097, line: 50, type: !6155, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6157)
!6155 = !DISubroutineType(types: !6156)
!6156 = !{!109, !32}
!6157 = !{!6158}
!6158 = !DILocalVariable(name: "irq", arg: 1, scope: !6154, file: !6097, line: 50, type: !32)
!6159 = !DILocation(line: 0, scope: !6154)
!6160 = !DILocation(line: 52, column: 20, scope: !6154)
!6161 = !DILocation(line: 52, column: 9, scope: !6154)
!6162 = !DILocation(line: 52, column: 41, scope: !6154)
!6163 = !DILocation(line: 52, column: 39, scope: !6154)
!6164 = !DILocation(line: 52, column: 2, scope: !6154)
!6165 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6097, file: !6097, line: 64, type: !6166, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6168)
!6166 = !DISubroutineType(types: !6167)
!6167 = !{null, !32, !32, !110}
!6168 = !{!6169, !6170, !6171}
!6169 = !DILocalVariable(name: "irq", arg: 1, scope: !6165, file: !6097, line: 64, type: !32)
!6170 = !DILocalVariable(name: "prio", arg: 2, scope: !6165, file: !6097, line: 64, type: !32)
!6171 = !DILocalVariable(name: "flags", arg: 3, scope: !6165, file: !6097, line: 64, type: !110)
!6172 = !DILocation(line: 0, scope: !6165)
!6173 = !DILocation(line: 83, column: 8, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !6097, line: 82, column: 9)
!6175 = distinct !DILexicalBlock(scope: !6165, file: !6097, line: 76, column: 6)
!6176 = !DILocation(line: 91, column: 2, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !6097, line: 91, column: 2)
!6178 = distinct !DILexicalBlock(scope: !6165, file: !6097, line: 91, column: 2)
!6179 = !DILocation(line: 91, column: 2, scope: !6178)
!6180 = !DILocation(line: 91, column: 2, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6177, file: !6097, line: 91, column: 2)
!6182 = !DILocation(line: 95, column: 2, scope: !6165)
!6183 = !DILocation(line: 96, column: 1, scope: !6165)
!6184 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !549, file: !549, line: 1638, type: !6185, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6187)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{null, !863, !110}
!6187 = !{!6188, !6189}
!6188 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6184, file: !549, line: 1638, type: !863)
!6189 = !DILocalVariable(name: "priority", arg: 2, scope: !6184, file: !549, line: 1638, type: !110)
!6190 = !DILocation(line: 0, scope: !6184)
!6191 = !DILocation(line: 0, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6184, file: !549, line: 1640, column: 7)
!6193 = !DILocation(line: 1640, column: 7, scope: !6184)
!6194 = !DILocation(line: 1648, column: 1, scope: !6184)
!6195 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6097, file: !6097, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !6196)
!6196 = !{!6197}
!6197 = !DILocalVariable(name: "unused", arg: 1, scope: !6195, file: !6097, line: 155, type: !13)
!6198 = !DILocation(line: 0, scope: !6195)
!6199 = !DILocation(line: 159, column: 2, scope: !6195)
!6200 = !DILocation(line: 160, column: 1, scope: !6195)
!6201 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6202, file: !6202, line: 87, type: !3076, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !2037)
!6202 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6203 = !DILocation(line: 89, column: 2, scope: !6201)
!6204 = !DILocation(line: 90, column: 2, scope: !6201)
!6205 = !DILocation(line: 91, column: 1, scope: !6201)
!6206 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6202, file: !6202, line: 23, type: !3076, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!6207 = !DISubprogram(name: "z_arm_int_exit", scope: !6208, file: !6208, line: 153, type: !3076, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!6208 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6209 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6210, file: !6210, line: 256, type: !3076, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !2037)
!6210 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6211 = !DILocation(line: 258, column: 2, scope: !6209)
!6212 = !DILocation(line: 262, column: 2, scope: !6209)
!6213 = !DILocation(line: 263, column: 2, scope: !6209)
!6214 = !DILocation(line: 267, column: 2, scope: !6209)
!6215 = !DILocation(line: 268, column: 2, scope: !6209)
!6216 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6210, file: !6210, line: 53, type: !3076, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !2037)
!6217 = !DILocation(line: 55, column: 12, scope: !6216)
!6218 = !DILocation(line: 271, column: 3, scope: !6219, inlinedAt: !6220)
!6219 = distinct !DISubprogram(name: "__DSB", scope: !6145, file: !6145, line: 269, type: !3076, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !2037)
!6220 = distinct !DILocation(line: 56, column: 2, scope: !6216)
!6221 = !{i64 2427729}
!6222 = !DILocation(line: 260, column: 3, scope: !6223, inlinedAt: !6224)
!6223 = distinct !DISubprogram(name: "__ISB", scope: !6145, file: !6145, line: 258, type: !3076, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !2037)
!6224 = distinct !DILocation(line: 57, column: 2, scope: !6216)
!6225 = !{i64 2427446}
!6226 = !DILocation(line: 58, column: 1, scope: !6216)
!6227 = distinct !DISubprogram(name: "arch_swap", scope: !6228, file: !6228, line: 33, type: !6155, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !6229)
!6228 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6229 = !{!6230}
!6230 = !DILocalVariable(name: "key", arg: 1, scope: !6227, file: !6228, line: 33, type: !32)
!6231 = !DILocation(line: 0, scope: !6227)
!6232 = !DILocation(line: 36, column: 2, scope: !6227)
!6233 = !DILocation(line: 36, column: 17, scope: !6227)
!6234 = !DILocation(line: 36, column: 25, scope: !6227)
!6235 = !DILocation(line: 37, column: 37, scope: !6227)
!6236 = !DILocation(line: 37, column: 17, scope: !6227)
!6237 = !DILocation(line: 37, column: 35, scope: !6227)
!6238 = !DILocation(line: 41, column: 12, scope: !6227)
!6239 = !DILocalVariable(name: "key", arg: 1, scope: !6240, file: !5954, line: 84, type: !32)
!6240 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2672, retainedNodes: !6241)
!6241 = !{!6239}
!6242 = !DILocation(line: 0, scope: !6240, inlinedAt: !6243)
!6243 = distinct !DILocation(line: 44, column: 2, scope: !6227)
!6244 = !DILocation(line: 95, column: 2, scope: !6240, inlinedAt: !6243)
!6245 = !{i64 1650729}
!6246 = !DILocation(line: 53, column: 9, scope: !6227)
!6247 = !DILocation(line: 53, column: 24, scope: !6227)
!6248 = !DILocation(line: 53, column: 2, scope: !6227)
!6249 = distinct !DISubprogram(name: "arch_new_thread", scope: !6250, file: !6250, line: 56, type: !6251, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6369)
!6250 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6251 = !DISubroutineType(types: !6252)
!6252 = !{null, !6253, !6364, !1185, !215, !108, !108, !108}
!6253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6254, size: 32)
!6254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6255)
!6255 = !{!6256, !6314, !6326, !6327, !6328, !6335, !6336, !6337, !6338, !6344, !6359}
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6254, file: !145, line: 247, baseType: !6257, size: 384)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6258)
!6258 = !{!6259, !6283, !6290, !6291, !6292, !6301, !6302, !6303}
!6259 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !145, line: 60, baseType: !6260, size: 64)
!6260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !145, line: 60, size: 64, elements: !6261)
!6261 = !{!6262, !6277}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6260, file: !145, line: 61, baseType: !6263, size: 64)
!6263 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6264)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6265)
!6265 = !{!6266, !6272}
!6266 = !DIDerivedType(tag: DW_TAG_member, scope: !6264, file: !128, line: 38, baseType: !6267, size: 32)
!6267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6264, file: !128, line: 38, size: 32, elements: !6268)
!6268 = !{!6269, !6271}
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6267, file: !128, line: 39, baseType: !6270, size: 32)
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 32)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6267, file: !128, line: 40, baseType: !6270, size: 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, scope: !6264, file: !128, line: 42, baseType: !6273, size: 32, offset: 32)
!6273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6264, file: !128, line: 42, size: 32, elements: !6274)
!6274 = !{!6275, !6276}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6273, file: !128, line: 43, baseType: !6270, size: 32)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6273, file: !128, line: 44, baseType: !6270, size: 32)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6260, file: !145, line: 62, baseType: !6278, size: 64)
!6278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6279)
!6279 = !{!6280}
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6278, file: !157, line: 50, baseType: !6281, size: 64)
!6281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6282, size: 64, elements: !162)
!6282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6257, file: !145, line: 68, baseType: !6284, size: 32, offset: 64)
!6284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6285, size: 32)
!6285 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6286)
!6286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6287)
!6287 = !{!6288}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6286, file: !123, line: 232, baseType: !6289, size: 64)
!6289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6264)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6257, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6257, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6292 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !145, line: 90, baseType: !6293, size: 16, offset: 112)
!6293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !145, line: 90, size: 16, elements: !6294)
!6294 = !{!6295, !6300}
!6295 = !DIDerivedType(tag: DW_TAG_member, scope: !6293, file: !145, line: 91, baseType: !6296, size: 16)
!6296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6293, file: !145, line: 91, size: 16, elements: !6297)
!6297 = !{!6298, !6299}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6296, file: !145, line: 96, baseType: !177, size: 8)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6296, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6293, file: !145, line: 100, baseType: !181, size: 16)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6257, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6257, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6257, file: !145, line: 131, baseType: !6304, size: 192, offset: 192)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6305)
!6305 = !{!6306, !6307, !6313}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6304, file: !123, line: 245, baseType: !6263, size: 64)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6304, file: !123, line: 246, baseType: !6308, size: 32, offset: 64)
!6308 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6309)
!6309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6310, size: 32)
!6310 = !DISubroutineType(types: !6311)
!6311 = !{null, !6312}
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6304, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6254, file: !145, line: 250, baseType: !6315, size: 288, offset: 384)
!6315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6316)
!6316 = !{!6317, !6318, !6319, !6320, !6321, !6322, !6323, !6324, !6325}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6315, file: !198, line: 26, baseType: !110, size: 32)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6315, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6315, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6315, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6315, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6315, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6315, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6315, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6315, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6254, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6254, file: !145, line: 256, baseType: !6285, size: 64, offset: 704)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6254, file: !145, line: 271, baseType: !6329, size: 128, offset: 768)
!6329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6330)
!6330 = !{!6331, !6332, !6333, !6334}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6329, file: !145, line: 35, baseType: !215, size: 32)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6329, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6329, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6329, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6254, file: !145, line: 274, baseType: !6253, size: 32, offset: 896)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6254, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6254, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6254, file: !145, line: 300, baseType: !6339, size: 96, offset: 1216)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6340)
!6340 = !{!6341, !6342, !6343}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6339, file: !145, line: 153, baseType: !22, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6339, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6339, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6254, file: !145, line: 325, baseType: !6345, size: 32, offset: 1312)
!6345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6346, size: 32)
!6346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6347)
!6347 = !{!6348, !6354, !6355}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6346, file: !119, line: 5074, baseType: !6349, size: 96)
!6349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6350)
!6350 = !{!6351, !6352, !6353}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6349, file: !244, line: 57, baseType: !247, size: 32)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6349, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6349, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6346, file: !119, line: 5075, baseType: !6285, size: 64, offset: 96)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6346, file: !119, line: 5076, baseType: !6356, size: 32, offset: 160)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !6357)
!6357 = !{!6358}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6356, file: !254, line: 52, baseType: !22, size: 32)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6254, file: !145, line: 343, baseType: !6360, size: 64, offset: 1344)
!6360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6361)
!6361 = !{!6362, !6363}
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6360, file: !198, line: 63, baseType: !110, size: 32)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6360, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6365, size: 32)
!6365 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !6366)
!6366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !6367)
!6367 = !{!6368}
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6366, file: !273, line: 48, baseType: !226, size: 8)
!6369 = !{!6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377}
!6370 = !DILocalVariable(name: "thread", arg: 1, scope: !6249, file: !6250, line: 56, type: !6253)
!6371 = !DILocalVariable(name: "stack", arg: 2, scope: !6249, file: !6250, line: 56, type: !6364)
!6372 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6249, file: !6250, line: 57, type: !1185)
!6373 = !DILocalVariable(name: "entry", arg: 4, scope: !6249, file: !6250, line: 57, type: !215)
!6374 = !DILocalVariable(name: "p1", arg: 5, scope: !6249, file: !6250, line: 58, type: !108)
!6375 = !DILocalVariable(name: "p2", arg: 6, scope: !6249, file: !6250, line: 58, type: !108)
!6376 = !DILocalVariable(name: "p3", arg: 7, scope: !6249, file: !6250, line: 58, type: !108)
!6377 = !DILocalVariable(name: "iframe", scope: !6249, file: !6250, line: 60, type: !2703)
!6378 = !DILocation(line: 0, scope: !6249)
!6379 = !DILocation(line: 85, column: 11, scope: !6249)
!6380 = !DILocation(line: 93, column: 10, scope: !6249)
!6381 = !DILocation(line: 98, column: 13, scope: !6249)
!6382 = !DILocation(line: 100, column: 15, scope: !6249)
!6383 = !DILocation(line: 100, column: 10, scope: !6249)
!6384 = !DILocation(line: 100, column: 13, scope: !6249)
!6385 = !DILocation(line: 101, column: 15, scope: !6249)
!6386 = !DILocation(line: 101, column: 10, scope: !6249)
!6387 = !DILocation(line: 101, column: 13, scope: !6249)
!6388 = !DILocation(line: 102, column: 15, scope: !6249)
!6389 = !DILocation(line: 102, column: 10, scope: !6249)
!6390 = !DILocation(line: 102, column: 13, scope: !6249)
!6391 = !DILocation(line: 103, column: 15, scope: !6249)
!6392 = !DILocation(line: 103, column: 10, scope: !6249)
!6393 = !DILocation(line: 103, column: 13, scope: !6249)
!6394 = !DILocation(line: 106, column: 10, scope: !6249)
!6395 = !DILocation(line: 106, column: 15, scope: !6249)
!6396 = !DILocation(line: 122, column: 29, scope: !6249)
!6397 = !DILocation(line: 122, column: 23, scope: !6249)
!6398 = !DILocation(line: 122, column: 27, scope: !6249)
!6399 = !DILocation(line: 123, column: 15, scope: !6249)
!6400 = !DILocation(line: 123, column: 23, scope: !6249)
!6401 = !DILocation(line: 143, column: 1, scope: !6249)
!6402 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6250, file: !6250, line: 385, type: !6403, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6406)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!110, !6405, !6405}
!6405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6406 = !{!6407, !6408, !6409, !6412}
!6407 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6402, file: !6250, line: 385, type: !6405)
!6408 = !DILocalVariable(name: "psp", arg: 2, scope: !6402, file: !6250, line: 385, type: !6405)
!6409 = !DILocalVariable(name: "thread", scope: !6402, file: !6250, line: 388, type: !6410)
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 32)
!6411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6254)
!6412 = !DILocalVariable(name: "guard_len", scope: !6402, file: !6250, line: 405, type: !110)
!6413 = !DILocation(line: 0, scope: !6402)
!6414 = !DILocation(line: 388, column: 34, scope: !6402)
!6415 = !DILocation(line: 390, column: 13, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6402, file: !6250, line: 390, column: 6)
!6417 = !DILocation(line: 390, column: 6, scope: !6402)
!6418 = !DILocation(line: 438, column: 6, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6402, file: !6250, line: 438, column: 6)
!6420 = !DILocation(line: 438, column: 6, scope: !6402)
!6421 = !DILocation(line: 442, column: 3, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6419, file: !6250, line: 440, column: 22)
!6423 = !DILocation(line: 455, column: 1, scope: !6402)
!6424 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6250, file: !6250, line: 530, type: !6425, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !6427)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{null, !6253, !1185, !215}
!6427 = !{!6428, !6429, !6430}
!6428 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6424, file: !6250, line: 530, type: !6253)
!6429 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6424, file: !6250, line: 530, type: !1185)
!6430 = !DILocalVariable(name: "_main", arg: 3, scope: !6424, file: !6250, line: 531, type: !215)
!6431 = !DILocation(line: 0, scope: !6424)
!6432 = !DILocation(line: 535, column: 11, scope: !6424)
!6433 = !DILocation(line: 560, column: 2, scope: !6424)
!6434 = !DILocation(line: 576, column: 2, scope: !6424)
!6435 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6436 = !DILocation(line: 603, column: 2, scope: !6424)
!6437 = distinct !DISubprogram(name: "z_arm_fault", scope: !6438, file: !6438, line: 1036, type: !6439, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6454)
!6438 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6439 = !DISubroutineType(types: !6440)
!6440 = !{null, !110, !110, !110, !6441}
!6441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6442, size: 32)
!6442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6443)
!6443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6444)
!6444 = !{!6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6443, file: !198, line: 26, baseType: !110, size: 32)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6443, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6443, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6443, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6443, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6443, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6443, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6443, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6443, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6454 = !{!6455, !6456, !6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464}
!6455 = !DILocalVariable(name: "msp", arg: 1, scope: !6437, file: !6438, line: 1036, type: !110)
!6456 = !DILocalVariable(name: "psp", arg: 2, scope: !6437, file: !6438, line: 1036, type: !110)
!6457 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6437, file: !6438, line: 1036, type: !110)
!6458 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6437, file: !6438, line: 1037, type: !6441)
!6459 = !DILocalVariable(name: "reason", scope: !6437, file: !6438, line: 1039, type: !110)
!6460 = !DILocalVariable(name: "fault", scope: !6437, file: !6438, line: 1040, type: !109)
!6461 = !DILocalVariable(name: "recoverable", scope: !6437, file: !6438, line: 1041, type: !347)
!6462 = !DILocalVariable(name: "nested_exc", scope: !6437, file: !6438, line: 1041, type: !347)
!6463 = !DILocalVariable(name: "esf", scope: !6437, file: !6438, line: 1042, type: !2771)
!6464 = !DILocalVariable(name: "esf_copy", scope: !6437, file: !6438, line: 1047, type: !2772)
!6465 = !DILocation(line: 0, scope: !6437)
!6466 = !DILocation(line: 1040, column: 19, scope: !6437)
!6467 = !DILocation(line: 1041, column: 2, scope: !6437)
!6468 = !DILocation(line: 1047, column: 2, scope: !6437)
!6469 = !DILocation(line: 1047, column: 15, scope: !6437)
!6470 = !DILocalVariable(name: "key", arg: 1, scope: !6471, file: !5954, line: 84, type: !32)
!6471 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6472)
!6472 = !{!6470}
!6473 = !DILocation(line: 0, scope: !6471, inlinedAt: !6474)
!6474 = distinct !DILocation(line: 1050, column: 2, scope: !6437)
!6475 = !DILocation(line: 95, column: 2, scope: !6471, inlinedAt: !6474)
!6476 = !{i64 1683973}
!6477 = !DILocation(line: 1055, column: 9, scope: !6437)
!6478 = !DILocation(line: 1056, column: 2, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !6438, line: 1056, column: 2)
!6480 = distinct !DILexicalBlock(scope: !6437, file: !6438, line: 1056, column: 2)
!6481 = !DILocation(line: 1056, column: 2, scope: !6480)
!6482 = !DILocation(line: 1056, column: 2, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6479, file: !6438, line: 1056, column: 2)
!6484 = !DILocation(line: 1040, column: 24, scope: !6437)
!6485 = !DILocation(line: 1063, column: 11, scope: !6437)
!6486 = !DILocation(line: 1064, column: 6, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6437, file: !6438, line: 1064, column: 6)
!6488 = !DILocation(line: 1064, column: 6, scope: !6437)
!6489 = !DILocation(line: 1070, column: 20, scope: !6437)
!6490 = !DILocation(line: 1070, column: 2, scope: !6437)
!6491 = !DILocation(line: 1089, column: 6, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6437, file: !6438, line: 1089, column: 6)
!6493 = !DILocation(line: 0, scope: !6492)
!6494 = !DILocation(line: 1089, column: 6, scope: !6437)
!6495 = !DILocation(line: 1090, column: 28, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6497, file: !6438, line: 1090, column: 7)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !6438, line: 1089, column: 18)
!6498 = !DILocation(line: 1090, column: 44, scope: !6496)
!6499 = !DILocation(line: 1090, column: 7, scope: !6497)
!6500 = !DILocation(line: 1091, column: 24, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6496, file: !6438, line: 1090, column: 50)
!6502 = !DILocation(line: 1092, column: 3, scope: !6501)
!6503 = !DILocation(line: 1094, column: 23, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6492, file: !6438, line: 1093, column: 9)
!6505 = !DILocation(line: 1097, column: 2, scope: !6437)
!6506 = !DILocation(line: 1098, column: 1, scope: !6437)
!6507 = distinct !DISubprogram(name: "get_esf", scope: !6438, file: !6438, line: 894, type: !6508, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6511)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{!2771, !110, !110, !110, !6510}
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6511 = !{!6512, !6513, !6514, !6515, !6516, !6517}
!6512 = !DILocalVariable(name: "msp", arg: 1, scope: !6507, file: !6438, line: 894, type: !110)
!6513 = !DILocalVariable(name: "psp", arg: 2, scope: !6507, file: !6438, line: 894, type: !110)
!6514 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6507, file: !6438, line: 894, type: !110)
!6515 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6507, file: !6438, line: 895, type: !6510)
!6516 = !DILocalVariable(name: "alternative_state_exc", scope: !6507, file: !6438, line: 897, type: !347)
!6517 = !DILocalVariable(name: "ptr_esf", scope: !6507, file: !6438, line: 898, type: !2771)
!6518 = !DILocation(line: 0, scope: !6507)
!6519 = !DILocation(line: 900, column: 14, scope: !6507)
!6520 = !DILocation(line: 902, column: 49, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6507, file: !6438, line: 902, column: 6)
!6522 = !DILocation(line: 902, column: 6, scope: !6507)
!6523 = !DILocation(line: 983, column: 18, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6507, file: !6438, line: 983, column: 6)
!6525 = !DILocation(line: 991, column: 7, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6438, line: 990, column: 30)
!6527 = distinct !DILexicalBlock(scope: !6507, file: !6438, line: 990, column: 6)
!6528 = !DILocation(line: 998, column: 16, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !6438, line: 995, column: 10)
!6530 = distinct !DILexicalBlock(scope: !6526, file: !6438, line: 991, column: 7)
!6531 = !DILocation(line: 1002, column: 2, scope: !6507)
!6532 = !DILocation(line: 1003, column: 1, scope: !6507)
!6533 = distinct !DISubprogram(name: "fault_handle", scope: !6438, file: !6438, line: 786, type: !6534, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!110, !2771, !109, !6510}
!6536 = !{!6537, !6538, !6539, !6540}
!6537 = !DILocalVariable(name: "esf", arg: 1, scope: !6533, file: !6438, line: 786, type: !2771)
!6538 = !DILocalVariable(name: "fault", arg: 2, scope: !6533, file: !6438, line: 786, type: !109)
!6539 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6533, file: !6438, line: 786, type: !6510)
!6540 = !DILocalVariable(name: "reason", scope: !6533, file: !6438, line: 788, type: !110)
!6541 = !DILocation(line: 0, scope: !6533)
!6542 = !DILocation(line: 790, column: 15, scope: !6533)
!6543 = !DILocation(line: 792, column: 2, scope: !6533)
!6544 = !DILocation(line: 794, column: 12, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6533, file: !6438, line: 792, column: 17)
!6546 = !DILocation(line: 795, column: 3, scope: !6545)
!6547 = !DILocation(line: 800, column: 12, scope: !6545)
!6548 = !DILocation(line: 801, column: 3, scope: !6545)
!6549 = !DILocation(line: 803, column: 12, scope: !6545)
!6550 = !DILocation(line: 804, column: 3, scope: !6545)
!6551 = !DILocation(line: 806, column: 12, scope: !6545)
!6552 = !DILocation(line: 807, column: 3, scope: !6545)
!6553 = !DILocation(line: 814, column: 3, scope: !6545)
!6554 = !DILocation(line: 815, column: 3, scope: !6545)
!6555 = !DILocation(line: 829, column: 2, scope: !6533)
!6556 = distinct !DISubprogram(name: "hard_fault", scope: !6438, file: !6438, line: 709, type: !6557, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6559)
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!110, !2771, !6510}
!6559 = !{!6560, !6561, !6562}
!6560 = !DILocalVariable(name: "esf", arg: 1, scope: !6556, file: !6438, line: 709, type: !2771)
!6561 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6556, file: !6438, line: 709, type: !6510)
!6562 = !DILocalVariable(name: "reason", scope: !6556, file: !6438, line: 711, type: !110)
!6563 = !DILocation(line: 0, scope: !6556)
!6564 = !DILocation(line: 732, column: 15, scope: !6556)
!6565 = !DILocation(line: 734, column: 12, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6556, file: !6438, line: 734, column: 6)
!6567 = !DILocation(line: 734, column: 17, scope: !6566)
!6568 = !DILocation(line: 734, column: 41, scope: !6566)
!6569 = !DILocation(line: 734, column: 6, scope: !6556)
!6570 = !DILocation(line: 736, column: 19, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6566, file: !6438, line: 736, column: 13)
!6572 = !DILocation(line: 736, column: 49, scope: !6571)
!6573 = !DILocation(line: 736, column: 13, scope: !6566)
!6574 = !DILocation(line: 738, column: 19, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6571, file: !6438, line: 738, column: 13)
!6576 = !DILocation(line: 738, column: 24, scope: !6575)
!6577 = !DILocation(line: 738, column: 47, scope: !6575)
!6578 = !DILocation(line: 738, column: 13, scope: !6571)
!6579 = !DILocation(line: 740, column: 7, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !6438, line: 740, column: 7)
!6581 = distinct !DILexicalBlock(scope: !6575, file: !6438, line: 738, column: 53)
!6582 = !DILocation(line: 740, column: 7, scope: !6581)
!6583 = !DILocation(line: 742, column: 24, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6580, file: !6438, line: 740, column: 38)
!6585 = !DILocation(line: 743, column: 3, scope: !6584)
!6586 = !DILocation(line: 743, column: 20, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6580, file: !6438, line: 743, column: 14)
!6588 = !DILocation(line: 743, column: 25, scope: !6587)
!6589 = !DILocation(line: 743, column: 52, scope: !6587)
!6590 = !DILocation(line: 743, column: 14, scope: !6580)
!6591 = !DILocation(line: 744, column: 13, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6587, file: !6438, line: 743, column: 58)
!6593 = !DILocation(line: 745, column: 3, scope: !6592)
!6594 = !DILocation(line: 745, column: 20, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6587, file: !6438, line: 745, column: 14)
!6596 = !DILocation(line: 745, column: 25, scope: !6595)
!6597 = !DILocation(line: 745, column: 52, scope: !6595)
!6598 = !DILocation(line: 745, column: 14, scope: !6587)
!6599 = !DILocation(line: 746, column: 13, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6595, file: !6438, line: 745, column: 58)
!6601 = !DILocation(line: 747, column: 3, scope: !6600)
!6602 = !DILocation(line: 747, column: 20, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6595, file: !6438, line: 747, column: 14)
!6604 = !DILocation(line: 747, column: 52, scope: !6603)
!6605 = !DILocation(line: 747, column: 14, scope: !6595)
!6606 = !DILocation(line: 748, column: 13, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6603, file: !6438, line: 747, column: 58)
!6608 = !DILocation(line: 754, column: 4, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !6438, line: 754, column: 4)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !6438, line: 754, column: 4)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !6438, line: 754, column: 4)
!6612 = distinct !DILexicalBlock(scope: !6603, file: !6438, line: 753, column: 10)
!6613 = !DILocation(line: 758, column: 3, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !6438, line: 758, column: 3)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !6438, line: 758, column: 3)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !6438, line: 758, column: 3)
!6617 = distinct !DILexicalBlock(scope: !6575, file: !6438, line: 757, column: 9)
!6618 = !DILocation(line: 766, column: 2, scope: !6556)
!6619 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6438, file: !6438, line: 229, type: !6534, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6620)
!6620 = !{!6621, !6622, !6623, !6624, !6625, !6626, !6629}
!6621 = !DILocalVariable(name: "esf", arg: 1, scope: !6619, file: !6438, line: 229, type: !2771)
!6622 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6619, file: !6438, line: 229, type: !109)
!6623 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6619, file: !6438, line: 230, type: !6510)
!6624 = !DILocalVariable(name: "reason", scope: !6619, file: !6438, line: 232, type: !110)
!6625 = !DILocalVariable(name: "mmfar", scope: !6619, file: !6438, line: 233, type: !110)
!6626 = !DILocalVariable(name: "temp", scope: !6627, file: !6438, line: 254, type: !110)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !6438, line: 244, column: 48)
!6628 = distinct !DILexicalBlock(scope: !6619, file: !6438, line: 244, column: 6)
!6629 = !DILocalVariable(name: "min_stack_ptr", scope: !6630, file: !6438, line: 309, type: !110)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !6438, line: 308, column: 43)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !6438, line: 308, column: 7)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !6438, line: 289, column: 40)
!6633 = distinct !DILexicalBlock(scope: !6619, file: !6438, line: 288, column: 6)
!6634 = !DILocation(line: 0, scope: !6619)
!6635 = !DILocation(line: 237, column: 12, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6619, file: !6438, line: 237, column: 6)
!6637 = !DILocation(line: 241, column: 12, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6619, file: !6438, line: 241, column: 6)
!6639 = !DILocation(line: 244, column: 12, scope: !6628)
!6640 = !DILocation(line: 244, column: 17, scope: !6628)
!6641 = !DILocation(line: 244, column: 42, scope: !6628)
!6642 = !DILocation(line: 244, column: 6, scope: !6619)
!6643 = !DILocation(line: 254, column: 24, scope: !6627)
!6644 = !DILocation(line: 0, scope: !6627)
!6645 = !DILocation(line: 256, column: 13, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6627, file: !6438, line: 256, column: 7)
!6647 = !DILocation(line: 256, column: 18, scope: !6646)
!6648 = !DILocation(line: 256, column: 44, scope: !6646)
!6649 = !DILocation(line: 256, column: 7, scope: !6627)
!6650 = !DILocation(line: 259, column: 24, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6652, file: !6438, line: 259, column: 8)
!6652 = distinct !DILexicalBlock(scope: !6646, file: !6438, line: 256, column: 50)
!6653 = !DILocation(line: 259, column: 8, scope: !6652)
!6654 = !DILocation(line: 261, column: 15, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6651, file: !6438, line: 259, column: 30)
!6656 = !DILocation(line: 262, column: 4, scope: !6655)
!6657 = !DILocation(line: 265, column: 12, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6619, file: !6438, line: 265, column: 6)
!6659 = !DILocation(line: 288, column: 12, scope: !6633)
!6660 = !DILocation(line: 288, column: 17, scope: !6633)
!6661 = !DILocation(line: 288, column: 41, scope: !6633)
!6662 = !DILocation(line: 289, column: 9, scope: !6633)
!6663 = !DILocation(line: 289, column: 14, scope: !6633)
!6664 = !DILocation(line: 288, column: 6, scope: !6619)
!6665 = !DILocation(line: 308, column: 12, scope: !6631)
!6666 = !DILocation(line: 308, column: 17, scope: !6631)
!6667 = !DILocation(line: 308, column: 7, scope: !6632)
!6668 = !DILocation(line: 310, column: 6, scope: !6630)
!6669 = !DILocation(line: 309, column: 29, scope: !6630)
!6670 = !DILocation(line: 0, scope: !6630)
!6671 = !DILocation(line: 312, column: 8, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6630, file: !6438, line: 312, column: 8)
!6673 = !DILocation(line: 312, column: 8, scope: !6630)
!6674 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6675, file: !6145, line: 1099, type: !110)
!6675 = distinct !DISubprogram(name: "__set_PSP", scope: !6145, file: !6145, line: 1099, type: !5978, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6676)
!6676 = !{!6674}
!6677 = !DILocation(line: 0, scope: !6675, inlinedAt: !6678)
!6678 = distinct !DILocation(line: 338, column: 5, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6672, file: !6438, line: 312, column: 23)
!6680 = !DILocation(line: 1101, column: 3, scope: !6675, inlinedAt: !6678)
!6681 = !{i64 2478698}
!6682 = !DILocation(line: 341, column: 4, scope: !6679)
!6683 = !DILocation(line: 342, column: 5, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !6438, line: 342, column: 5)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !6438, line: 342, column: 5)
!6686 = distinct !DILexicalBlock(scope: !6672, file: !6438, line: 341, column: 11)
!6687 = !DILocation(line: 342, column: 5, scope: !6685)
!6688 = !DILocation(line: 342, column: 5, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6684, file: !6438, line: 342, column: 5)
!6690 = !DILocation(line: 366, column: 12, scope: !6619)
!6691 = !DILocation(line: 369, column: 15, scope: !6619)
!6692 = !DILocation(line: 371, column: 2, scope: !6619)
!6693 = distinct !DISubprogram(name: "bus_fault", scope: !6438, file: !6438, line: 383, type: !6694, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6696)
!6694 = !DISubroutineType(types: !6695)
!6695 = !{!109, !2771, !109, !6510}
!6696 = !{!6697, !6698, !6699, !6700, !6701}
!6697 = !DILocalVariable(name: "esf", arg: 1, scope: !6693, file: !6438, line: 383, type: !2771)
!6698 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6693, file: !6438, line: 383, type: !109)
!6699 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6693, file: !6438, line: 383, type: !6510)
!6700 = !DILocalVariable(name: "reason", scope: !6693, file: !6438, line: 385, type: !110)
!6701 = !DILocalVariable(name: "bfar", scope: !6702, file: !6438, line: 405, type: !110)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !6438, line: 395, column: 42)
!6703 = distinct !DILexicalBlock(scope: !6693, file: !6438, line: 395, column: 6)
!6704 = !DILocation(line: 0, scope: !6693)
!6705 = !DILocation(line: 389, column: 11, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6693, file: !6438, line: 389, column: 6)
!6707 = !DILocation(line: 392, column: 11, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6693, file: !6438, line: 392, column: 6)
!6709 = !DILocation(line: 395, column: 11, scope: !6703)
!6710 = !DILocation(line: 395, column: 16, scope: !6703)
!6711 = !DILocation(line: 395, column: 6, scope: !6693)
!6712 = !DILocation(line: 405, column: 3, scope: !6702)
!6713 = !DILocation(line: 0, scope: !6702)
!6714 = !DILocation(line: 407, column: 13, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6702, file: !6438, line: 407, column: 7)
!6716 = !DILocation(line: 407, column: 18, scope: !6715)
!6717 = !DILocation(line: 407, column: 44, scope: !6715)
!6718 = !DILocation(line: 407, column: 7, scope: !6702)
!6719 = !DILocation(line: 411, column: 15, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6438, line: 409, column: 30)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6438, line: 409, column: 8)
!6722 = distinct !DILexicalBlock(scope: !6715, file: !6438, line: 407, column: 50)
!6723 = !DILocation(line: 412, column: 4, scope: !6720)
!6724 = !DILocation(line: 415, column: 11, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6693, file: !6438, line: 415, column: 6)
!6726 = !DILocation(line: 418, column: 12, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6693, file: !6438, line: 418, column: 6)
!6728 = !DILocation(line: 524, column: 12, scope: !6693)
!6729 = !DILocation(line: 526, column: 15, scope: !6693)
!6730 = !DILocation(line: 528, column: 2, scope: !6693)
!6731 = distinct !DISubprogram(name: "usage_fault", scope: !6438, file: !6438, line: 539, type: !6732, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6736)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{!110, !6734}
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 32)
!6735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2772)
!6736 = !{!6737, !6738}
!6737 = !DILocalVariable(name: "esf", arg: 1, scope: !6731, file: !6438, line: 539, type: !6734)
!6738 = !DILocalVariable(name: "reason", scope: !6731, file: !6438, line: 541, type: !110)
!6739 = !DILocation(line: 0, scope: !6731)
!6740 = !DILocation(line: 546, column: 12, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6731, file: !6438, line: 546, column: 6)
!6742 = !DILocation(line: 549, column: 12, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6731, file: !6438, line: 549, column: 6)
!6744 = !DILocation(line: 567, column: 12, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6731, file: !6438, line: 567, column: 6)
!6746 = !DILocation(line: 570, column: 12, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6731, file: !6438, line: 570, column: 6)
!6748 = !DILocation(line: 573, column: 12, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6731, file: !6438, line: 573, column: 6)
!6750 = !DILocation(line: 576, column: 12, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6731, file: !6438, line: 576, column: 6)
!6752 = !DILocation(line: 581, column: 12, scope: !6731)
!6753 = !DILocation(line: 583, column: 2, scope: !6731)
!6754 = distinct !DISubprogram(name: "debug_monitor", scope: !6438, file: !6438, line: 632, type: !6755, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6757)
!6755 = !DISubroutineType(types: !6756)
!6756 = !{null, !2771, !6510}
!6757 = !{!6758, !6759}
!6758 = !DILocalVariable(name: "esf", arg: 1, scope: !6754, file: !6438, line: 632, type: !2771)
!6759 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6754, file: !6438, line: 632, type: !6510)
!6760 = !DILocation(line: 0, scope: !6754)
!6761 = !DILocation(line: 634, column: 15, scope: !6754)
!6762 = !DILocation(line: 652, column: 1, scope: !6754)
!6763 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6438, file: !6438, line: 658, type: !6764, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !6766)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{!347, !2771}
!6766 = !{!6767, !6768, !6769}
!6767 = !DILocalVariable(name: "esf", arg: 1, scope: !6763, file: !6438, line: 658, type: !2771)
!6768 = !DILocalVariable(name: "ret_addr", scope: !6763, file: !6438, line: 660, type: !2814)
!6769 = !DILocalVariable(name: "fault_insn", scope: !6763, file: !6438, line: 686, type: !181)
!6770 = !DILocation(line: 0, scope: !6763)
!6771 = !DILocation(line: 660, column: 46, scope: !6763)
!6772 = !DILocation(line: 660, column: 23, scope: !6763)
!6773 = !DILocation(line: 682, column: 11, scope: !6763)
!6774 = !DILocation(line: 271, column: 3, scope: !6775, inlinedAt: !6776)
!6775 = distinct !DISubprogram(name: "__DSB", scope: !6145, file: !6145, line: 269, type: !3076, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !2037)
!6776 = distinct !DILocation(line: 683, column: 2, scope: !6763)
!6777 = !{i64 2454833}
!6778 = !DILocation(line: 260, column: 3, scope: !6779, inlinedAt: !6780)
!6779 = distinct !DISubprogram(name: "__ISB", scope: !6145, file: !6145, line: 258, type: !3076, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !2037)
!6780 = distinct !DILocation(line: 684, column: 2, scope: !6763)
!6781 = !{i64 2454550}
!6782 = !DILocation(line: 686, column: 35, scope: !6763)
!6783 = !DILocation(line: 686, column: 24, scope: !6763)
!6784 = !DILocation(line: 688, column: 11, scope: !6763)
!6785 = !DILocation(line: 271, column: 3, scope: !6775, inlinedAt: !6786)
!6786 = distinct !DILocation(line: 689, column: 2, scope: !6763)
!6787 = !DILocation(line: 260, column: 3, scope: !6779, inlinedAt: !6788)
!6788 = distinct !DILocation(line: 690, column: 2, scope: !6763)
!6789 = !DILocation(line: 693, column: 45, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6763, file: !6438, line: 693, column: 6)
!6791 = !DILocation(line: 699, column: 1, scope: !6763)
!6792 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6438, file: !6438, line: 1107, type: !3076, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !2037)
!6793 = !DILocation(line: 1111, column: 11, scope: !6792)
!6794 = !DILocation(line: 1136, column: 1, scope: !6792)
!6795 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6796, file: !6796, line: 26, type: !3076, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6797)
!6796 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6797 = !{!6798}
!6798 = !DILocalVariable(name: "irq", scope: !6795, file: !6796, line: 28, type: !109)
!6799 = !DILocation(line: 0, scope: !6795)
!6800 = !DILocation(line: 30, column: 2, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !6796, line: 30, column: 2)
!6802 = !DILocation(line: 31, column: 3, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6796, line: 30, column: 39)
!6804 = distinct !DILexicalBlock(scope: !6801, file: !6796, line: 30, column: 2)
!6805 = !DILocation(line: 30, column: 35, scope: !6804)
!6806 = !DILocation(line: 30, column: 13, scope: !6804)
!6807 = distinct !{!6807, !6800, !6808}
!6808 = !DILocation(line: 32, column: 2, scope: !6801)
!6809 = !DILocation(line: 33, column: 1, scope: !6795)
!6810 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !549, file: !549, line: 1638, type: !6185, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2815, retainedNodes: !6811)
!6811 = !{!6812, !6813}
!6812 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6810, file: !549, line: 1638, type: !863)
!6813 = !DILocalVariable(name: "priority", arg: 2, scope: !6810, file: !549, line: 1638, type: !110)
!6814 = !DILocation(line: 0, scope: !6810)
!6815 = !DILocation(line: 1640, column: 7, scope: !6810)
!6816 = !DILocation(line: 0, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6810, file: !549, line: 1640, column: 7)
!6818 = !DILocation(line: 1648, column: 1, scope: !6810)
!6819 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6820, file: !6820, line: 27, type: !6821, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !6935)
!6820 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6821 = !DISubroutineType(types: !6822)
!6822 = !{null, !6823}
!6823 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !6824)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 32)
!6825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6826)
!6826 = !{!6827, !6885, !6897, !6898, !6899, !6906, !6907, !6908, !6909, !6915, !6930}
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6825, file: !145, line: 247, baseType: !6828, size: 384)
!6828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6829)
!6829 = !{!6830, !6854, !6861, !6862, !6863, !6872, !6873, !6874}
!6830 = !DIDerivedType(tag: DW_TAG_member, scope: !6828, file: !145, line: 60, baseType: !6831, size: 64)
!6831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6828, file: !145, line: 60, size: 64, elements: !6832)
!6832 = !{!6833, !6848}
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6831, file: !145, line: 61, baseType: !6834, size: 64)
!6834 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6835)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6836)
!6836 = !{!6837, !6843}
!6837 = !DIDerivedType(tag: DW_TAG_member, scope: !6835, file: !128, line: 38, baseType: !6838, size: 32)
!6838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6835, file: !128, line: 38, size: 32, elements: !6839)
!6839 = !{!6840, !6842}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6838, file: !128, line: 39, baseType: !6841, size: 32)
!6841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 32)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6838, file: !128, line: 40, baseType: !6841, size: 32)
!6843 = !DIDerivedType(tag: DW_TAG_member, scope: !6835, file: !128, line: 42, baseType: !6844, size: 32, offset: 32)
!6844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6835, file: !128, line: 42, size: 32, elements: !6845)
!6845 = !{!6846, !6847}
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6844, file: !128, line: 43, baseType: !6841, size: 32)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6844, file: !128, line: 44, baseType: !6841, size: 32)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6831, file: !145, line: 62, baseType: !6849, size: 64)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6850)
!6850 = !{!6851}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6849, file: !157, line: 50, baseType: !6852, size: 64)
!6852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6853, size: 64, elements: !162)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 32)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6828, file: !145, line: 68, baseType: !6855, size: 32, offset: 64)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6856, size: 32)
!6856 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6857)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6858)
!6858 = !{!6859}
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6857, file: !123, line: 232, baseType: !6860, size: 64)
!6860 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6835)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6828, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6828, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6863 = !DIDerivedType(tag: DW_TAG_member, scope: !6828, file: !145, line: 90, baseType: !6864, size: 16, offset: 112)
!6864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6828, file: !145, line: 90, size: 16, elements: !6865)
!6865 = !{!6866, !6871}
!6866 = !DIDerivedType(tag: DW_TAG_member, scope: !6864, file: !145, line: 91, baseType: !6867, size: 16)
!6867 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6864, file: !145, line: 91, size: 16, elements: !6868)
!6868 = !{!6869, !6870}
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6867, file: !145, line: 96, baseType: !177, size: 8)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6867, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6864, file: !145, line: 100, baseType: !181, size: 16)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6828, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6828, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6828, file: !145, line: 131, baseType: !6875, size: 192, offset: 192)
!6875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6876)
!6876 = !{!6877, !6878, !6884}
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6875, file: !123, line: 245, baseType: !6834, size: 64)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6875, file: !123, line: 246, baseType: !6879, size: 32, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6880)
!6880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6881, size: 32)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{null, !6883}
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 32)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6875, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6825, file: !145, line: 250, baseType: !6886, size: 288, offset: 384)
!6886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6887)
!6887 = !{!6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6896}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6886, file: !198, line: 26, baseType: !110, size: 32)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6886, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6886, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6886, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6886, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6886, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6886, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6886, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6886, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6825, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6825, file: !145, line: 256, baseType: !6856, size: 64, offset: 704)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6825, file: !145, line: 271, baseType: !6900, size: 128, offset: 768)
!6900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6901)
!6901 = !{!6902, !6903, !6904, !6905}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6900, file: !145, line: 35, baseType: !215, size: 32)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6900, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6900, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6900, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6825, file: !145, line: 274, baseType: !6824, size: 32, offset: 896)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6825, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6825, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6825, file: !145, line: 300, baseType: !6910, size: 96, offset: 1216)
!6910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6911)
!6911 = !{!6912, !6913, !6914}
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6910, file: !145, line: 153, baseType: !22, size: 32)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6910, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6910, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6825, file: !145, line: 325, baseType: !6916, size: 32, offset: 1312)
!6916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6917, size: 32)
!6917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6918)
!6918 = !{!6919, !6925, !6926}
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6917, file: !119, line: 5074, baseType: !6920, size: 96)
!6920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6921)
!6921 = !{!6922, !6923, !6924}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6920, file: !244, line: 57, baseType: !247, size: 32)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6920, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6920, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6917, file: !119, line: 5075, baseType: !6856, size: 64, offset: 96)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6917, file: !119, line: 5076, baseType: !6927, size: 32, offset: 160)
!6927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !6928)
!6928 = !{!6929}
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6927, file: !254, line: 52, baseType: !22, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6825, file: !145, line: 343, baseType: !6931, size: 64, offset: 1344)
!6931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6932)
!6932 = !{!6933, !6934}
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6931, file: !198, line: 63, baseType: !110, size: 32)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6931, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6935 = !{!6936}
!6936 = !DILocalVariable(name: "thread", arg: 1, scope: !6819, file: !6820, line: 27, type: !6823)
!6937 = !DILocation(line: 0, scope: !6819)
!6938 = !DILocation(line: 29, column: 6, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6819, file: !6820, line: 29, column: 6)
!6940 = !DILocation(line: 29, column: 15, scope: !6939)
!6941 = !DILocation(line: 29, column: 6, scope: !6819)
!6942 = !DILocation(line: 1031, column: 3, scope: !6943, inlinedAt: !6946)
!6943 = distinct !DISubprogram(name: "__get_IPSR", scope: !6145, file: !6145, line: 1027, type: !3358, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !6944)
!6944 = !{!6945}
!6945 = !DILocalVariable(name: "result", scope: !6943, file: !6145, line: 1029, type: !110)
!6946 = distinct !DILocation(line: 48, column: 10, scope: !6947, inlinedAt: !6951)
!6947 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6948, file: !6948, line: 46, type: !6949, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !2037)
!6948 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6949 = !DISubroutineType(types: !6950)
!6950 = !{!347}
!6951 = distinct !DILocation(line: 30, column: 7, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6820, line: 30, column: 7)
!6953 = distinct !DILexicalBlock(scope: !6939, file: !6820, line: 29, column: 26)
!6954 = !{i64 2443681}
!6955 = !DILocation(line: 0, scope: !6943, inlinedAt: !6946)
!6956 = !DILocation(line: 48, column: 9, scope: !6947, inlinedAt: !6951)
!6957 = !DILocation(line: 30, column: 7, scope: !6953)
!6958 = !DILocation(line: 42, column: 14, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6952, file: !6820, line: 30, column: 25)
!6960 = !DILocation(line: 48, column: 15, scope: !6959)
!6961 = !DILocation(line: 49, column: 3, scope: !6959)
!6962 = !DILocation(line: 52, column: 2, scope: !6819)
!6963 = !DILocation(line: 53, column: 1, scope: !6819)
!6964 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !407, file: !407, line: 127, type: !3076, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !2037)
!6965 = !DILocation(line: 134, column: 2, scope: !6964)
!6966 = !DILocation(line: 156, column: 1, scope: !6964)
!6967 = !DILocation(line: 0, scope: !406)
!6968 = !DILocation(line: 289, column: 36, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !406, file: !407, line: 285, column: 2)
!6970 = !DILocation(line: 289, column: 42, scope: !6969)
!6971 = !DILocation(line: 300, column: 36, scope: !406)
!6972 = !DILocation(line: 301, column: 35, scope: !406)
!6973 = !DILocation(line: 302, column: 37, scope: !406)
!6974 = !DILocation(line: 311, column: 2, scope: !406)
!6975 = !DILocation(line: 316, column: 1, scope: !406)
!6976 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !577, file: !577, line: 180, type: !3076, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !2037)
!6977 = !DILocation(line: 188, column: 12, scope: !6976)
!6978 = !DILocation(line: 271, column: 3, scope: !6979, inlinedAt: !6980)
!6979 = distinct !DISubprogram(name: "__DSB", scope: !6145, file: !6145, line: 269, type: !3076, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !2037)
!6980 = distinct !DILocation(line: 192, column: 2, scope: !6976)
!6981 = !{i64 2602508}
!6982 = !DILocation(line: 260, column: 3, scope: !6983, inlinedAt: !6984)
!6983 = distinct !DISubprogram(name: "__ISB", scope: !6145, file: !6145, line: 258, type: !3076, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !2037)
!6984 = distinct !DILocation(line: 193, column: 2, scope: !6976)
!6985 = !{i64 2602225}
!6986 = !DILocation(line: 194, column: 1, scope: !6976)
!6987 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !577, file: !577, line: 199, type: !3076, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !2037)
!6988 = !DILocation(line: 282, column: 3, scope: !6989, inlinedAt: !6990)
!6989 = distinct !DISubprogram(name: "__DMB", scope: !6145, file: !6145, line: 280, type: !3076, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !2037)
!6990 = distinct !DILocation(line: 202, column: 2, scope: !6987)
!6991 = !{i64 2602784}
!6992 = !DILocation(line: 205, column: 12, scope: !6987)
!6993 = !DILocation(line: 206, column: 1, scope: !6987)
!6994 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !577, file: !577, line: 275, type: !6995, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7008)
!6995 = !DISubroutineType(types: !6996)
!6996 = !{null, !6997, !1809, !6405, !6405}
!6997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6998, size: 32)
!6998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6999)
!6999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !528, line: 52, size: 96, elements: !7000)
!7000 = !{!7001, !7002, !7003}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6999, file: !528, line: 53, baseType: !22, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6999, file: !528, line: 54, baseType: !235, size: 32, offset: 32)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6999, file: !528, line: 55, baseType: !7004, size: 32, offset: 64)
!7004 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !534, line: 151, baseType: !7005)
!7005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !534, line: 149, size: 32, elements: !7006)
!7006 = !{!7007}
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7005, file: !534, line: 150, baseType: !110, size: 32)
!7008 = !{!7009, !7010, !7011, !7012}
!7009 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6994, file: !577, line: 276, type: !6997)
!7010 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6994, file: !577, line: 276, type: !1809)
!7011 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6994, file: !577, line: 277, type: !6405)
!7012 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6994, file: !577, line: 277, type: !6405)
!7013 = !DILocation(line: 0, scope: !6994)
!7014 = !DILocation(line: 279, column: 6, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6994, file: !577, line: 279, column: 6)
!7016 = !DILocation(line: 280, column: 57, scope: !7015)
!7017 = !DILocation(line: 279, column: 6, scope: !6994)
!7018 = !DILocation(line: 282, column: 3, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !577, line: 282, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !577, line: 282, column: 3)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !577, line: 282, column: 3)
!7022 = distinct !DILexicalBlock(scope: !7015, file: !577, line: 280, column: 69)
!7023 = !DILocation(line: 285, column: 1, scope: !6994)
!7024 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7025, file: !7025, line: 220, type: !7026, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7028)
!7025 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7026 = !DISubroutineType(types: !7027)
!7027 = !{!109, !6997, !1809, !6405, !6405}
!7028 = !{!7029, !7030, !7031, !7032, !7033}
!7029 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7024, file: !7025, line: 221, type: !6997)
!7030 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7024, file: !7025, line: 221, type: !1809)
!7031 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7024, file: !7025, line: 222, type: !6405)
!7032 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7024, file: !7025, line: 223, type: !6405)
!7033 = !DILocalVariable(name: "mpu_reg_index", scope: !7024, file: !7025, line: 225, type: !109)
!7034 = !DILocation(line: 0, scope: !7024)
!7035 = !DILocation(line: 225, column: 22, scope: !7024)
!7036 = !DILocation(line: 233, column: 18, scope: !7024)
!7037 = !DILocation(line: 236, column: 23, scope: !7024)
!7038 = !DILocation(line: 236, column: 21, scope: !7024)
!7039 = !DILocation(line: 238, column: 2, scope: !7024)
!7040 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !577, file: !577, line: 105, type: !7041, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7043)
!7041 = !DISubroutineType(types: !7042)
!7042 = !{!109, !6997, !167, !167, !347}
!7043 = !{!7044, !7045, !7046, !7047, !7048, !7049}
!7044 = !DILocalVariable(name: "regions", arg: 1, scope: !7040, file: !577, line: 106, type: !6997)
!7045 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7040, file: !577, line: 106, type: !167)
!7046 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7040, file: !577, line: 106, type: !167)
!7047 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7040, file: !577, line: 107, type: !347)
!7048 = !DILocalVariable(name: "i", scope: !7040, file: !577, line: 109, type: !109)
!7049 = !DILocalVariable(name: "reg_index", scope: !7040, file: !577, line: 110, type: !109)
!7050 = !DILocation(line: 0, scope: !7040)
!7051 = !DILocation(line: 110, column: 18, scope: !7040)
!7052 = !DILocation(line: 112, column: 16, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !577, line: 112, column: 2)
!7054 = distinct !DILexicalBlock(scope: !7040, file: !577, line: 112, column: 2)
!7055 = !DILocation(line: 112, column: 2, scope: !7054)
!7056 = !DILocation(line: 113, column: 7, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !577, line: 113, column: 7)
!7058 = distinct !DILexicalBlock(scope: !7053, file: !577, line: 112, column: 36)
!7059 = !DILocation(line: 113, column: 18, scope: !7057)
!7060 = !DILocation(line: 113, column: 23, scope: !7057)
!7061 = !DILocation(line: 113, column: 7, scope: !7058)
!7062 = !DILocation(line: 118, column: 23, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7058, file: !577, line: 118, column: 7)
!7064 = !DILocation(line: 119, column: 7, scope: !7063)
!7065 = !DILocation(line: 118, column: 7, scope: !7058)
!7066 = !DILocation(line: 124, column: 36, scope: !7058)
!7067 = !DILocation(line: 124, column: 15, scope: !7058)
!7068 = !DILocation(line: 126, column: 17, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7058, file: !577, line: 126, column: 7)
!7070 = !DILocation(line: 126, column: 7, scope: !7058)
!7071 = !DILocation(line: 131, column: 12, scope: !7058)
!7072 = !DILocation(line: 132, column: 2, scope: !7058)
!7073 = !DILocation(line: 112, column: 32, scope: !7053)
!7074 = distinct !{!7074, !7055, !7075}
!7075 = !DILocation(line: 132, column: 2, scope: !7054)
!7076 = !DILocation(line: 135, column: 1, scope: !7040)
!7077 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7025, file: !7025, line: 63, type: !7078, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{!109, !6997}
!7080 = !{!7081, !7082}
!7081 = !DILocalVariable(name: "part", arg: 1, scope: !7077, file: !7025, line: 63, type: !6997)
!7082 = !DILocalVariable(name: "partition_is_valid", scope: !7077, file: !7025, line: 70, type: !109)
!7083 = !DILocation(line: 0, scope: !7077)
!7084 = !DILocation(line: 71, column: 11, scope: !7077)
!7085 = !DILocation(line: 71, column: 37, scope: !7077)
!7086 = !{i32 0, i32 33}
!7087 = !DILocation(line: 72, column: 3, scope: !7077)
!7088 = !DILocation(line: 71, column: 30, scope: !7077)
!7089 = !DILocation(line: 75, column: 11, scope: !7077)
!7090 = !DILocation(line: 75, column: 17, scope: !7077)
!7091 = !DILocation(line: 75, column: 38, scope: !7077)
!7092 = !DILocation(line: 77, column: 2, scope: !7077)
!7093 = distinct !DISubprogram(name: "mpu_configure_region", scope: !577, file: !577, line: 79, type: !7094, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7096)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{!109, !1809, !6997}
!7096 = !{!7097, !7098, !7099}
!7097 = !DILocalVariable(name: "index", arg: 1, scope: !7093, file: !577, line: 79, type: !1809)
!7098 = !DILocalVariable(name: "new_region", arg: 2, scope: !7093, file: !577, line: 80, type: !6997)
!7099 = !DILocalVariable(name: "region_conf", scope: !7093, file: !577, line: 82, type: !566)
!7100 = !DILocation(line: 0, scope: !7093)
!7101 = !DILocation(line: 82, column: 2, scope: !7093)
!7102 = !DILocation(line: 82, column: 24, scope: !7093)
!7103 = !DILocation(line: 87, column: 33, scope: !7093)
!7104 = !DILocation(line: 87, column: 14, scope: !7093)
!7105 = !DILocation(line: 87, column: 19, scope: !7093)
!7106 = !DILocation(line: 91, column: 55, scope: !7093)
!7107 = !DILocation(line: 92, column: 16, scope: !7093)
!7108 = !DILocation(line: 92, column: 53, scope: !7093)
!7109 = !DILocation(line: 91, column: 2, scope: !7093)
!7110 = !DILocation(line: 95, column: 9, scope: !7093)
!7111 = !DILocation(line: 97, column: 1, scope: !7093)
!7112 = !DILocation(line: 95, column: 2, scope: !7093)
!7113 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7025, file: !7025, line: 113, type: !7114, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7119)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{null, !7116, !7117, !110, !110}
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7118, size: 32)
!7118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7004)
!7119 = !{!7120, !7121, !7122, !7123}
!7120 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7113, file: !7025, line: 114, type: !7116)
!7121 = !DILocalVariable(name: "attr", arg: 2, scope: !7113, file: !7025, line: 115, type: !7117)
!7122 = !DILocalVariable(name: "base", arg: 3, scope: !7113, file: !7025, line: 115, type: !110)
!7123 = !DILocalVariable(name: "size", arg: 4, scope: !7113, file: !7025, line: 115, type: !110)
!7124 = !DILocation(line: 0, scope: !7113)
!7125 = !DILocation(line: 127, column: 23, scope: !7113)
!7126 = !DILocation(line: 127, column: 35, scope: !7113)
!7127 = !DILocation(line: 127, column: 33, scope: !7113)
!7128 = !DILocation(line: 127, column: 10, scope: !7113)
!7129 = !DILocation(line: 127, column: 15, scope: !7113)
!7130 = !DILocation(line: 129, column: 1, scope: !7113)
!7131 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !577, file: !577, line: 57, type: !7132, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7134)
!7132 = !DISubroutineType(types: !7133)
!7133 = !{!109, !1809, !564}
!7134 = !{!7135, !7136}
!7135 = !DILocalVariable(name: "index", arg: 1, scope: !7131, file: !577, line: 57, type: !1809)
!7136 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7131, file: !577, line: 58, type: !564)
!7137 = !DILocation(line: 0, scope: !7131)
!7138 = !DILocation(line: 61, column: 6, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7131, file: !577, line: 61, column: 6)
!7140 = !DILocation(line: 61, column: 12, scope: !7139)
!7141 = !DILocation(line: 61, column: 6, scope: !7131)
!7142 = !DILocation(line: 71, column: 2, scope: !7131)
!7143 = !DILocation(line: 73, column: 2, scope: !7131)
!7144 = !DILocation(line: 74, column: 1, scope: !7131)
!7145 = distinct !DISubprogram(name: "region_init", scope: !7025, file: !7025, line: 29, type: !7146, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7148)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{null, !6405, !564}
!7148 = !{!7149, !7150}
!7149 = !DILocalVariable(name: "index", arg: 1, scope: !7145, file: !7025, line: 29, type: !6405)
!7150 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7145, file: !7025, line: 30, type: !564)
!7151 = !DILocation(line: 0, scope: !7145)
!7152 = !DILocation(line: 33, column: 2, scope: !7145)
!7153 = !DILocation(line: 47, column: 28, scope: !7145)
!7154 = !DILocation(line: 47, column: 33, scope: !7145)
!7155 = !DILocation(line: 48, column: 26, scope: !7145)
!7156 = !DILocation(line: 47, column: 12, scope: !7145)
!7157 = !DILocation(line: 49, column: 32, scope: !7145)
!7158 = !DILocation(line: 49, column: 37, scope: !7145)
!7159 = !DILocation(line: 49, column: 12, scope: !7145)
!7160 = !DILocation(line: 53, column: 1, scope: !7145)
!7161 = distinct !DISubprogram(name: "set_region_number", scope: !7162, file: !7162, line: 32, type: !5978, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7163)
!7162 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7163 = !{!7164}
!7164 = !DILocalVariable(name: "index", arg: 1, scope: !7161, file: !7162, line: 32, type: !110)
!7165 = !DILocation(line: 0, scope: !7161)
!7166 = !DILocation(line: 34, column: 11, scope: !7161)
!7167 = !DILocation(line: 35, column: 1, scope: !7161)
!7168 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7025, file: !7025, line: 88, type: !7169, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7171)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!110, !110}
!7171 = !{!7172}
!7172 = !DILocalVariable(name: "size", arg: 1, scope: !7168, file: !7025, line: 88, type: !110)
!7173 = !DILocation(line: 0, scope: !7168)
!7174 = !DILocation(line: 91, column: 11, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7168, file: !7025, line: 91, column: 6)
!7176 = !DILocation(line: 91, column: 6, scope: !7168)
!7177 = !DILocation(line: 100, column: 11, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7168, file: !7025, line: 100, column: 6)
!7179 = !DILocation(line: 100, column: 6, scope: !7168)
!7180 = !DILocation(line: 104, column: 35, scope: !7168)
!7181 = !DILocation(line: 104, column: 16, scope: !7168)
!7182 = !DILocation(line: 104, column: 50, scope: !7168)
!7183 = !DILocation(line: 104, column: 72, scope: !7168)
!7184 = !DILocation(line: 104, column: 2, scope: !7168)
!7185 = !DILocation(line: 106, column: 1, scope: !7168)
!7186 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !577, file: !577, line: 307, type: !7187, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7189)
!7187 = !DISubroutineType(types: !7188)
!7188 = !{null, !6997, !167}
!7189 = !{!7190, !7191}
!7190 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7186, file: !577, line: 308, type: !6997)
!7191 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7186, file: !577, line: 308, type: !167)
!7192 = !DILocation(line: 0, scope: !7186)
!7193 = !DILocation(line: 310, column: 6, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7186, file: !577, line: 310, column: 6)
!7195 = !DILocation(line: 311, column: 3, scope: !7194)
!7196 = !DILocation(line: 310, column: 6, scope: !7186)
!7197 = !DILocation(line: 313, column: 3, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !577, line: 313, column: 3)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !577, line: 313, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !577, line: 313, column: 3)
!7201 = distinct !DILexicalBlock(scope: !7194, file: !577, line: 311, column: 15)
!7202 = !DILocation(line: 316, column: 1, scope: !7186)
!7203 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7025, file: !7025, line: 249, type: !7204, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7206)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!109, !6997, !167}
!7206 = !{!7207, !7208, !7209, !7210}
!7207 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7203, file: !7025, line: 250, type: !6997)
!7208 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7203, file: !7025, line: 250, type: !167)
!7209 = !DILocalVariable(name: "mpu_reg_index", scope: !7203, file: !7025, line: 252, type: !109)
!7210 = !DILocalVariable(name: "i", scope: !7211, file: !7025, line: 264, type: !109)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !7025, line: 264, column: 3)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !7025, line: 261, column: 32)
!7213 = distinct !DILexicalBlock(scope: !7203, file: !7025, line: 261, column: 6)
!7214 = !DILocation(line: 0, scope: !7203)
!7215 = !DILocation(line: 252, column: 22, scope: !7203)
!7216 = !DILocation(line: 258, column: 18, scope: !7203)
!7217 = !DILocation(line: 261, column: 20, scope: !7213)
!7218 = !DILocation(line: 261, column: 6, scope: !7203)
!7219 = !DILocation(line: 0, scope: !7211)
!7220 = !DILocation(line: 265, column: 4, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !7025, line: 264, column: 59)
!7222 = distinct !DILexicalBlock(scope: !7211, file: !7025, line: 264, column: 3)
!7223 = !DILocation(line: 264, column: 55, scope: !7222)
!7224 = !DILocation(line: 264, column: 33, scope: !7222)
!7225 = !DILocation(line: 264, column: 3, scope: !7211)
!7226 = distinct !{!7226, !7225, !7227}
!7227 = !DILocation(line: 266, column: 3, scope: !7211)
!7228 = !DILocation(line: 269, column: 2, scope: !7203)
!7229 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7230, file: !7230, line: 218, type: !5978, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7231)
!7230 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7231 = !{!7232}
!7232 = !DILocalVariable(name: "rnr", arg: 1, scope: !7229, file: !7230, line: 218, type: !110)
!7233 = !DILocation(line: 0, scope: !7229)
!7234 = !DILocation(line: 220, column: 12, scope: !7229)
!7235 = !DILocation(line: 221, column: 13, scope: !7229)
!7236 = !DILocation(line: 222, column: 1, scope: !7229)
!7237 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !577, file: !577, line: 326, type: !7238, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !544, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{!109}
!7240 = !{!7241}
!7241 = !DILocalVariable(name: "r_index", scope: !7237, file: !577, line: 328, type: !110)
!7242 = !DILocation(line: 330, column: 17, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7237, file: !577, line: 330, column: 6)
!7244 = !DILocation(line: 330, column: 29, scope: !7243)
!7245 = !DILocation(line: 330, column: 6, scope: !7237)
!7246 = !DILocation(line: 337, column: 3, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !577, line: 337, column: 3)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !577, line: 337, column: 3)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !577, line: 337, column: 3)
!7250 = distinct !DILexicalBlock(scope: !7243, file: !577, line: 330, column: 50)
!7251 = !DILocation(line: 347, column: 2, scope: !7237)
!7252 = !DILocation(line: 0, scope: !7237)
!7253 = !DILocation(line: 364, column: 29, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !577, line: 364, column: 2)
!7255 = distinct !DILexicalBlock(scope: !7237, file: !577, line: 364, column: 2)
!7256 = !DILocation(line: 364, column: 2, scope: !7255)
!7257 = !DILocation(line: 365, column: 25, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7254, file: !577, line: 364, column: 66)
!7259 = !DILocation(line: 365, column: 3, scope: !7258)
!7260 = !DILocation(line: 364, column: 62, scope: !7254)
!7261 = distinct !{!7261, !7256, !7262}
!7262 = !DILocation(line: 366, column: 2, scope: !7255)
!7263 = !DILocation(line: 369, column: 23, scope: !7237)
!7264 = !DILocation(line: 369, column: 21, scope: !7237)
!7265 = !DILocation(line: 372, column: 2, scope: !7237)
!7266 = !DILocation(line: 433, column: 2, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !577, line: 433, column: 2)
!7268 = distinct !DILexicalBlock(scope: !7237, file: !577, line: 433, column: 2)
!7269 = !DILocation(line: 433, column: 2, scope: !7268)
!7270 = !DILocation(line: 433, column: 2, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7267, file: !577, line: 433, column: 2)
!7272 = !DILocation(line: 444, column: 1, scope: !7237)
!7273 = distinct !DISubprogram(name: "strcpy", scope: !7274, file: !7274, line: 20, type: !7275, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7279)
!7274 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!1185, !7277, !7278}
!7277 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1185)
!7278 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!7279 = !{!7280, !7281, !7282}
!7280 = !DILocalVariable(name: "d", arg: 1, scope: !7273, file: !7274, line: 20, type: !7277)
!7281 = !DILocalVariable(name: "s", arg: 2, scope: !7273, file: !7274, line: 20, type: !7278)
!7282 = !DILocalVariable(name: "dest", scope: !7273, file: !7274, line: 22, type: !1185)
!7283 = !DILocation(line: 0, scope: !7273)
!7284 = !DILocation(line: 24, column: 9, scope: !7273)
!7285 = !DILocation(line: 24, column: 12, scope: !7273)
!7286 = !DILocation(line: 24, column: 2, scope: !7273)
!7287 = !DILocation(line: 25, column: 6, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7273, file: !7274, line: 24, column: 21)
!7289 = !DILocation(line: 26, column: 4, scope: !7288)
!7290 = !DILocation(line: 27, column: 4, scope: !7288)
!7291 = distinct !{!7291, !7286, !7292}
!7292 = !DILocation(line: 28, column: 2, scope: !7273)
!7293 = !DILocation(line: 30, column: 5, scope: !7273)
!7294 = !DILocation(line: 32, column: 2, scope: !7273)
!7295 = distinct !DISubprogram(name: "strncpy", scope: !7274, file: !7274, line: 42, type: !7296, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7298)
!7296 = !DISubroutineType(types: !7297)
!7297 = !{!1185, !7277, !7278, !235}
!7298 = !{!7299, !7300, !7301, !7302}
!7299 = !DILocalVariable(name: "d", arg: 1, scope: !7295, file: !7274, line: 42, type: !7277)
!7300 = !DILocalVariable(name: "s", arg: 2, scope: !7295, file: !7274, line: 42, type: !7278)
!7301 = !DILocalVariable(name: "n", arg: 3, scope: !7295, file: !7274, line: 42, type: !235)
!7302 = !DILocalVariable(name: "dest", scope: !7295, file: !7274, line: 44, type: !1185)
!7303 = !DILocation(line: 0, scope: !7295)
!7304 = !DILocation(line: 46, column: 12, scope: !7295)
!7305 = !DILocation(line: 46, column: 17, scope: !7295)
!7306 = !DILocation(line: 46, column: 20, scope: !7295)
!7307 = !DILocation(line: 46, column: 23, scope: !7295)
!7308 = !DILocation(line: 46, column: 2, scope: !7295)
!7309 = !DILocation(line: 47, column: 6, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7295, file: !7274, line: 46, column: 32)
!7311 = !DILocation(line: 48, column: 4, scope: !7310)
!7312 = !DILocation(line: 49, column: 4, scope: !7310)
!7313 = !DILocation(line: 50, column: 4, scope: !7310)
!7314 = distinct !{!7314, !7308, !7315}
!7315 = !DILocation(line: 51, column: 2, scope: !7295)
!7316 = !DILocation(line: 54, column: 6, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7295, file: !7274, line: 53, column: 16)
!7318 = !DILocation(line: 55, column: 4, scope: !7317)
!7319 = !DILocation(line: 56, column: 4, scope: !7317)
!7320 = !DILocation(line: 53, column: 11, scope: !7295)
!7321 = !DILocation(line: 53, column: 2, scope: !7295)
!7322 = distinct !{!7322, !7321, !7323}
!7323 = !DILocation(line: 57, column: 2, scope: !7295)
!7324 = !DILocation(line: 59, column: 2, scope: !7295)
!7325 = distinct !DISubprogram(name: "strchr", scope: !7274, file: !7274, line: 69, type: !7326, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7328)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!1185, !337, !109}
!7328 = !{!7329, !7330, !7331}
!7329 = !DILocalVariable(name: "s", arg: 1, scope: !7325, file: !7274, line: 69, type: !337)
!7330 = !DILocalVariable(name: "c", arg: 2, scope: !7325, file: !7274, line: 69, type: !109)
!7331 = !DILocalVariable(name: "tmp", scope: !7325, file: !7274, line: 71, type: !226)
!7332 = !DILocation(line: 0, scope: !7325)
!7333 = !DILocation(line: 73, column: 2, scope: !7325)
!7334 = !DILocation(line: 73, column: 10, scope: !7325)
!7335 = !DILocation(line: 73, column: 13, scope: !7325)
!7336 = !DILocation(line: 73, column: 21, scope: !7325)
!7337 = !DILocation(line: 74, column: 4, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7325, file: !7274, line: 73, column: 38)
!7339 = distinct !{!7339, !7333, !7340}
!7340 = !DILocation(line: 75, column: 2, scope: !7325)
!7341 = !DILocation(line: 77, column: 9, scope: !7325)
!7342 = !DILocation(line: 77, column: 2, scope: !7325)
!7343 = distinct !DISubprogram(name: "strrchr", scope: !7274, file: !7274, line: 87, type: !7326, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7344)
!7344 = !{!7345, !7346, !7347}
!7345 = !DILocalVariable(name: "s", arg: 1, scope: !7343, file: !7274, line: 87, type: !337)
!7346 = !DILocalVariable(name: "c", arg: 2, scope: !7343, file: !7274, line: 87, type: !109)
!7347 = !DILocalVariable(name: "match", scope: !7343, file: !7274, line: 89, type: !1185)
!7348 = !DILocation(line: 0, scope: !7343)
!7349 = !DILocation(line: 91, column: 2, scope: !7343)
!7350 = !DILocation(line: 92, column: 7, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7352, file: !7274, line: 92, column: 7)
!7352 = distinct !DILexicalBlock(scope: !7343, file: !7274, line: 91, column: 5)
!7353 = !DILocation(line: 92, column: 10, scope: !7351)
!7354 = !DILocation(line: 92, column: 7, scope: !7352)
!7355 = !DILocation(line: 95, column: 13, scope: !7343)
!7356 = !DILocation(line: 95, column: 2, scope: !7352)
!7357 = distinct !{!7357, !7349, !7358}
!7358 = !DILocation(line: 95, column: 15, scope: !7343)
!7359 = !DILocation(line: 97, column: 2, scope: !7343)
!7360 = distinct !DISubprogram(name: "strlen", scope: !7274, file: !7274, line: 107, type: !7361, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7363)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{!235, !337}
!7363 = !{!7364, !7365}
!7364 = !DILocalVariable(name: "s", arg: 1, scope: !7360, file: !7274, line: 107, type: !337)
!7365 = !DILocalVariable(name: "n", scope: !7360, file: !7274, line: 109, type: !235)
!7366 = !DILocation(line: 0, scope: !7360)
!7367 = !DILocation(line: 111, column: 9, scope: !7360)
!7368 = !DILocation(line: 111, column: 12, scope: !7360)
!7369 = !DILocation(line: 111, column: 2, scope: !7360)
!7370 = !DILocation(line: 112, column: 4, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7360, file: !7274, line: 111, column: 21)
!7372 = !DILocation(line: 113, column: 4, scope: !7371)
!7373 = distinct !{!7373, !7369, !7374}
!7374 = !DILocation(line: 114, column: 2, scope: !7360)
!7375 = !DILocation(line: 116, column: 2, scope: !7360)
!7376 = distinct !DISubprogram(name: "strnlen", scope: !7274, file: !7274, line: 126, type: !7377, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7379)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!235, !337, !235}
!7379 = !{!7380, !7381, !7382}
!7380 = !DILocalVariable(name: "s", arg: 1, scope: !7376, file: !7274, line: 126, type: !337)
!7381 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7376, file: !7274, line: 126, type: !235)
!7382 = !DILocalVariable(name: "n", scope: !7376, file: !7274, line: 128, type: !235)
!7383 = !DILocation(line: 0, scope: !7376)
!7384 = !DILocation(line: 130, column: 9, scope: !7376)
!7385 = !DILocation(line: 130, column: 12, scope: !7376)
!7386 = !DILocation(line: 130, column: 20, scope: !7376)
!7387 = !DILocation(line: 130, column: 2, scope: !7376)
!7388 = !DILocation(line: 131, column: 4, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7376, file: !7274, line: 130, column: 35)
!7390 = !DILocation(line: 132, column: 4, scope: !7389)
!7391 = distinct !{!7391, !7387, !7392}
!7392 = !DILocation(line: 133, column: 2, scope: !7376)
!7393 = !DILocation(line: 135, column: 2, scope: !7376)
!7394 = distinct !DISubprogram(name: "strcmp", scope: !7274, file: !7274, line: 145, type: !7395, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7397)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!109, !337, !337}
!7397 = !{!7398, !7399}
!7398 = !DILocalVariable(name: "s1", arg: 1, scope: !7394, file: !7274, line: 145, type: !337)
!7399 = !DILocalVariable(name: "s2", arg: 2, scope: !7394, file: !7274, line: 145, type: !337)
!7400 = !DILocation(line: 0, scope: !7394)
!7401 = !DILocation(line: 147, column: 10, scope: !7394)
!7402 = !DILocation(line: 147, column: 17, scope: !7394)
!7403 = !DILocation(line: 147, column: 14, scope: !7394)
!7404 = !DILocation(line: 147, column: 22, scope: !7394)
!7405 = !DILocation(line: 148, column: 5, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7394, file: !7274, line: 147, column: 40)
!7407 = !DILocation(line: 149, column: 5, scope: !7406)
!7408 = distinct !{!7408, !7409, !7410}
!7409 = !DILocation(line: 147, column: 2, scope: !7394)
!7410 = !DILocation(line: 150, column: 2, scope: !7394)
!7411 = !DILocation(line: 152, column: 9, scope: !7394)
!7412 = !DILocation(line: 152, column: 15, scope: !7394)
!7413 = !DILocation(line: 152, column: 13, scope: !7394)
!7414 = !DILocation(line: 152, column: 2, scope: !7394)
!7415 = distinct !DISubprogram(name: "strncmp", scope: !7274, file: !7274, line: 162, type: !7416, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7418)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!109, !337, !337, !235}
!7418 = !{!7419, !7420, !7421}
!7419 = !DILocalVariable(name: "s1", arg: 1, scope: !7415, file: !7274, line: 162, type: !337)
!7420 = !DILocalVariable(name: "s2", arg: 2, scope: !7415, file: !7274, line: 162, type: !337)
!7421 = !DILocalVariable(name: "n", arg: 3, scope: !7415, file: !7274, line: 162, type: !235)
!7422 = !DILocation(line: 0, scope: !7415)
!7423 = !DILocation(line: 164, column: 17, scope: !7415)
!7424 = !DILocation(line: 164, column: 21, scope: !7415)
!7425 = !DILocation(line: 164, column: 28, scope: !7415)
!7426 = !DILocation(line: 164, column: 25, scope: !7415)
!7427 = !DILocation(line: 164, column: 33, scope: !7415)
!7428 = !DILocation(line: 165, column: 5, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7415, file: !7274, line: 164, column: 51)
!7430 = !DILocation(line: 166, column: 5, scope: !7429)
!7431 = !DILocation(line: 167, column: 4, scope: !7429)
!7432 = distinct !{!7432, !7433, !7434}
!7433 = !DILocation(line: 164, column: 2, scope: !7415)
!7434 = !DILocation(line: 168, column: 2, scope: !7415)
!7435 = !DILocation(line: 170, column: 25, scope: !7415)
!7436 = !DILocation(line: 170, column: 31, scope: !7415)
!7437 = !DILocation(line: 170, column: 29, scope: !7415)
!7438 = !DILocation(line: 170, column: 9, scope: !7415)
!7439 = !DILocation(line: 170, column: 2, scope: !7415)
!7440 = distinct !DISubprogram(name: "strtok_r", scope: !7274, file: !7274, line: 180, type: !7441, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7444)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{!1185, !1185, !337, !7443}
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!7444 = !{!7445, !7446, !7447, !7448, !7449}
!7445 = !DILocalVariable(name: "str", arg: 1, scope: !7440, file: !7274, line: 180, type: !1185)
!7446 = !DILocalVariable(name: "sep", arg: 2, scope: !7440, file: !7274, line: 180, type: !337)
!7447 = !DILocalVariable(name: "state", arg: 3, scope: !7440, file: !7274, line: 180, type: !7443)
!7448 = !DILocalVariable(name: "start", scope: !7440, file: !7274, line: 182, type: !1185)
!7449 = !DILocalVariable(name: "end", scope: !7440, file: !7274, line: 182, type: !1185)
!7450 = !DILocation(line: 0, scope: !7440)
!7451 = !DILocation(line: 184, column: 10, scope: !7440)
!7452 = !DILocation(line: 184, column: 22, scope: !7440)
!7453 = !DILocation(line: 187, column: 9, scope: !7440)
!7454 = !DILocation(line: 187, column: 16, scope: !7440)
!7455 = !DILocation(line: 187, column: 19, scope: !7440)
!7456 = !DILocation(line: 187, column: 2, scope: !7440)
!7457 = !DILocation(line: 188, column: 8, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7440, file: !7274, line: 187, column: 40)
!7459 = distinct !{!7459, !7456, !7460}
!7460 = !DILocation(line: 189, column: 2, scope: !7440)
!7461 = !DILocation(line: 198, column: 9, scope: !7440)
!7462 = !DILocation(line: 198, column: 18, scope: !7440)
!7463 = !DILocation(line: 198, column: 17, scope: !7440)
!7464 = !DILocation(line: 198, column: 2, scope: !7440)
!7465 = !DILocation(line: 199, column: 6, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7440, file: !7274, line: 198, column: 37)
!7467 = !DILocation(line: 198, column: 14, scope: !7440)
!7468 = distinct !{!7468, !7464, !7469}
!7469 = !DILocation(line: 200, column: 2, scope: !7440)
!7470 = !DILocation(line: 203, column: 8, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !7274, line: 202, column: 20)
!7472 = distinct !DILexicalBlock(scope: !7440, file: !7274, line: 202, column: 6)
!7473 = !DILocation(line: 204, column: 16, scope: !7471)
!7474 = !DILocation(line: 205, column: 2, scope: !7471)
!7475 = !DILocation(line: 210, column: 1, scope: !7440)
!7476 = distinct !DISubprogram(name: "strcat", scope: !7274, file: !7274, line: 212, type: !7275, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7477)
!7477 = !{!7478, !7479}
!7478 = !DILocalVariable(name: "dest", arg: 1, scope: !7476, file: !7274, line: 212, type: !7277)
!7479 = !DILocalVariable(name: "src", arg: 2, scope: !7476, file: !7274, line: 212, type: !7278)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 214, column: 16, scope: !7476)
!7482 = !DILocation(line: 214, column: 14, scope: !7476)
!7483 = !DILocation(line: 214, column: 2, scope: !7476)
!7484 = !DILocation(line: 215, column: 2, scope: !7476)
!7485 = distinct !DISubprogram(name: "strncat", scope: !7274, file: !7274, line: 218, type: !7296, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7486)
!7486 = !{!7487, !7488, !7489, !7490, !7491}
!7487 = !DILocalVariable(name: "dest", arg: 1, scope: !7485, file: !7274, line: 218, type: !7277)
!7488 = !DILocalVariable(name: "src", arg: 2, scope: !7485, file: !7274, line: 218, type: !7278)
!7489 = !DILocalVariable(name: "n", arg: 3, scope: !7485, file: !7274, line: 219, type: !235)
!7490 = !DILocalVariable(name: "orig_dest", scope: !7485, file: !7274, line: 221, type: !1185)
!7491 = !DILocalVariable(name: "len", scope: !7485, file: !7274, line: 222, type: !235)
!7492 = !DILocation(line: 0, scope: !7485)
!7493 = !DILocation(line: 222, column: 15, scope: !7485)
!7494 = !DILocation(line: 224, column: 7, scope: !7485)
!7495 = !DILocation(line: 225, column: 14, scope: !7485)
!7496 = !DILocation(line: 225, column: 19, scope: !7485)
!7497 = !DILocation(line: 225, column: 11, scope: !7485)
!7498 = !DILocation(line: 225, column: 23, scope: !7485)
!7499 = !DILocation(line: 225, column: 28, scope: !7485)
!7500 = !DILocation(line: 225, column: 2, scope: !7485)
!7501 = !DILocation(line: 226, column: 17, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7485, file: !7274, line: 225, column: 38)
!7503 = !DILocation(line: 226, column: 8, scope: !7502)
!7504 = !DILocation(line: 226, column: 11, scope: !7502)
!7505 = distinct !{!7505, !7500, !7506}
!7506 = !DILocation(line: 227, column: 2, scope: !7485)
!7507 = !DILocation(line: 228, column: 8, scope: !7485)
!7508 = !DILocation(line: 230, column: 2, scope: !7485)
!7509 = distinct !DISubprogram(name: "memcmp", scope: !7274, file: !7274, line: 239, type: !7510, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7512)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{!109, !13, !13, !235}
!7512 = !{!7513, !7514, !7515, !7516, !7517}
!7513 = !DILocalVariable(name: "m1", arg: 1, scope: !7509, file: !7274, line: 239, type: !13)
!7514 = !DILocalVariable(name: "m2", arg: 2, scope: !7509, file: !7274, line: 239, type: !13)
!7515 = !DILocalVariable(name: "n", arg: 3, scope: !7509, file: !7274, line: 239, type: !235)
!7516 = !DILocalVariable(name: "c1", scope: !7509, file: !7274, line: 241, type: !337)
!7517 = !DILocalVariable(name: "c2", scope: !7509, file: !7274, line: 242, type: !337)
!7518 = !DILocation(line: 0, scope: !7509)
!7519 = !DILocation(line: 244, column: 7, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7509, file: !7274, line: 244, column: 6)
!7521 = !DILocation(line: 244, column: 6, scope: !7509)
!7522 = !DILocation(line: 248, column: 10, scope: !7509)
!7523 = !DILocation(line: 248, column: 14, scope: !7509)
!7524 = !DILocation(line: 248, column: 19, scope: !7509)
!7525 = !DILocation(line: 248, column: 2, scope: !7509)
!7526 = !DILocation(line: 248, column: 23, scope: !7509)
!7527 = !DILocation(line: 248, column: 30, scope: !7509)
!7528 = !DILocation(line: 248, column: 27, scope: !7509)
!7529 = !DILocation(line: 249, column: 5, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7509, file: !7274, line: 248, column: 36)
!7531 = !DILocation(line: 250, column: 5, scope: !7530)
!7532 = distinct !{!7532, !7525, !7533}
!7533 = !DILocation(line: 251, column: 2, scope: !7509)
!7534 = !DILocation(line: 253, column: 9, scope: !7509)
!7535 = !DILocation(line: 253, column: 15, scope: !7509)
!7536 = !DILocation(line: 253, column: 13, scope: !7509)
!7537 = !DILocation(line: 253, column: 2, scope: !7509)
!7538 = !DILocation(line: 254, column: 1, scope: !7509)
!7539 = distinct !DISubprogram(name: "memmove", scope: !7274, file: !7274, line: 263, type: !7540, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7542)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{!108, !108, !13, !235}
!7542 = !{!7543, !7544, !7545, !7546, !7547}
!7543 = !DILocalVariable(name: "d", arg: 1, scope: !7539, file: !7274, line: 263, type: !108)
!7544 = !DILocalVariable(name: "s", arg: 2, scope: !7539, file: !7274, line: 263, type: !13)
!7545 = !DILocalVariable(name: "n", arg: 3, scope: !7539, file: !7274, line: 263, type: !235)
!7546 = !DILocalVariable(name: "dest", scope: !7539, file: !7274, line: 265, type: !1185)
!7547 = !DILocalVariable(name: "src", scope: !7539, file: !7274, line: 266, type: !337)
!7548 = !DILocation(line: 0, scope: !7539)
!7549 = !DILocation(line: 268, column: 21, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7539, file: !7274, line: 268, column: 6)
!7551 = !DILocation(line: 268, column: 28, scope: !7550)
!7552 = !DILocation(line: 268, column: 6, scope: !7539)
!7553 = !DILocation(line: 280, column: 12, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7550, file: !7274, line: 278, column: 9)
!7555 = !DILocation(line: 280, column: 3, scope: !7554)
!7556 = !DILocation(line: 275, column: 5, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !7274, line: 274, column: 17)
!7558 = distinct !DILexicalBlock(scope: !7550, file: !7274, line: 268, column: 33)
!7559 = !DILocation(line: 276, column: 14, scope: !7557)
!7560 = !DILocation(line: 276, column: 4, scope: !7557)
!7561 = !DILocation(line: 276, column: 12, scope: !7557)
!7562 = !DILocation(line: 274, column: 12, scope: !7558)
!7563 = !DILocation(line: 274, column: 3, scope: !7558)
!7564 = distinct !{!7564, !7563, !7565}
!7565 = !DILocation(line: 277, column: 3, scope: !7558)
!7566 = !DILocation(line: 281, column: 12, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7554, file: !7274, line: 280, column: 17)
!7568 = !DILocation(line: 281, column: 10, scope: !7567)
!7569 = !DILocation(line: 282, column: 8, scope: !7567)
!7570 = !DILocation(line: 283, column: 7, scope: !7567)
!7571 = !DILocation(line: 284, column: 5, scope: !7567)
!7572 = distinct !{!7572, !7555, !7573}
!7573 = !DILocation(line: 285, column: 3, scope: !7554)
!7574 = !DILocation(line: 288, column: 2, scope: !7539)
!7575 = distinct !DISubprogram(name: "memcpy", scope: !7274, file: !7274, line: 298, type: !7576, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7580)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!108, !7578, !7579, !235}
!7578 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!7579 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7580 = !{!7581, !7582, !7583, !7584, !7585}
!7581 = !DILocalVariable(name: "d", arg: 1, scope: !7575, file: !7274, line: 298, type: !7578)
!7582 = !DILocalVariable(name: "s", arg: 2, scope: !7575, file: !7274, line: 298, type: !7579)
!7583 = !DILocalVariable(name: "n", arg: 3, scope: !7575, file: !7274, line: 298, type: !235)
!7584 = !DILocalVariable(name: "d_byte", scope: !7575, file: !7274, line: 302, type: !1039)
!7585 = !DILocalVariable(name: "s_byte", scope: !7575, file: !7274, line: 303, type: !2891)
!7586 = !DILocation(line: 0, scope: !7575)
!7587 = !DILocation(line: 337, column: 11, scope: !7575)
!7588 = !DILocation(line: 337, column: 2, scope: !7575)
!7589 = !DILocation(line: 338, column: 25, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7575, file: !7274, line: 337, column: 16)
!7591 = !DILocation(line: 338, column: 17, scope: !7590)
!7592 = !DILocation(line: 338, column: 11, scope: !7590)
!7593 = !DILocation(line: 338, column: 15, scope: !7590)
!7594 = !DILocation(line: 339, column: 4, scope: !7590)
!7595 = distinct !{!7595, !7588, !7596}
!7596 = !DILocation(line: 340, column: 2, scope: !7575)
!7597 = !DILocation(line: 342, column: 2, scope: !7575)
!7598 = distinct !DISubprogram(name: "memset", scope: !7274, file: !7274, line: 352, type: !7599, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7601)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!108, !108, !109, !235}
!7601 = !{!7602, !7603, !7604, !7605, !7606}
!7602 = !DILocalVariable(name: "buf", arg: 1, scope: !7598, file: !7274, line: 352, type: !108)
!7603 = !DILocalVariable(name: "c", arg: 2, scope: !7598, file: !7274, line: 352, type: !109)
!7604 = !DILocalVariable(name: "n", arg: 3, scope: !7598, file: !7274, line: 352, type: !235)
!7605 = !DILocalVariable(name: "d_byte", scope: !7598, file: !7274, line: 356, type: !1039)
!7606 = !DILocalVariable(name: "c_byte", scope: !7598, file: !7274, line: 357, type: !168)
!7607 = !DILocation(line: 0, scope: !7598)
!7608 = !DILocation(line: 357, column: 25, scope: !7598)
!7609 = !DILocation(line: 389, column: 11, scope: !7598)
!7610 = !DILocation(line: 389, column: 2, scope: !7598)
!7611 = !DILocation(line: 390, column: 11, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7598, file: !7274, line: 389, column: 16)
!7613 = !DILocation(line: 390, column: 15, scope: !7612)
!7614 = !DILocation(line: 391, column: 4, scope: !7612)
!7615 = distinct !{!7615, !7610, !7616}
!7616 = !DILocation(line: 392, column: 2, scope: !7598)
!7617 = !DILocation(line: 394, column: 2, scope: !7598)
!7618 = distinct !DISubprogram(name: "memchr", scope: !7274, file: !7274, line: 404, type: !7619, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7621)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{!108, !13, !109, !235}
!7621 = !{!7622, !7623, !7624, !7625}
!7622 = !DILocalVariable(name: "s", arg: 1, scope: !7618, file: !7274, line: 404, type: !13)
!7623 = !DILocalVariable(name: "c", arg: 2, scope: !7618, file: !7274, line: 404, type: !109)
!7624 = !DILocalVariable(name: "n", arg: 3, scope: !7618, file: !7274, line: 404, type: !235)
!7625 = !DILocalVariable(name: "p", scope: !7626, file: !7274, line: 407, type: !2891)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !7274, line: 406, column: 14)
!7627 = distinct !DILexicalBlock(scope: !7618, file: !7274, line: 406, column: 6)
!7628 = !DILocation(line: 0, scope: !7618)
!7629 = !DILocation(line: 406, column: 8, scope: !7627)
!7630 = !DILocation(line: 406, column: 6, scope: !7618)
!7631 = !DILocation(line: 409, column: 3, scope: !7626)
!7632 = !DILocation(line: 0, scope: !7626)
!7633 = !DILocation(line: 410, column: 8, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !7274, line: 410, column: 8)
!7635 = distinct !DILexicalBlock(scope: !7626, file: !7274, line: 409, column: 6)
!7636 = !DILocation(line: 410, column: 13, scope: !7634)
!7637 = !DILocation(line: 410, column: 8, scope: !7635)
!7638 = distinct !{!7638, !7631, !7639}
!7639 = !DILocation(line: 414, column: 20, scope: !7626)
!7640 = !DILocation(line: 417, column: 2, scope: !7618)
!7641 = !DILocation(line: 418, column: 1, scope: !7618)
!7642 = distinct !DISubprogram(name: "rf_init", scope: !702, file: !702, line: 10, type: !708, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !605, retainedNodes: !7643)
!7643 = !{!7644, !7645, !7653, !7654}
!7644 = !DILocalVariable(name: "dev", arg: 1, scope: !7642, file: !702, line: 10, type: !628)
!7645 = !DILocalVariable(name: "rf1", scope: !7642, file: !702, line: 12, type: !7646)
!7646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7647)
!7647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !609, line: 271, size: 64, elements: !7648)
!7648 = !{!7649, !7650, !7651}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7647, file: !609, line: 273, baseType: !628, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7647, file: !609, line: 275, baseType: !643, size: 8, offset: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !7647, file: !609, line: 277, baseType: !7652, size: 16, offset: 48)
!7652 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !609, line: 249, baseType: !181)
!7653 = !DILocalVariable(name: "rf2", scope: !7642, file: !702, line: 14, type: !7646)
!7654 = !DILocalVariable(name: "rf3", scope: !7642, file: !702, line: 16, type: !7646)
!7655 = !DILocation(line: 0, scope: !7642)
!7656 = !DILocation(line: 12, column: 2, scope: !7642)
!7657 = !DILocation(line: 12, column: 28, scope: !7642)
!7658 = !DILocation(line: 14, column: 2, scope: !7642)
!7659 = !DILocation(line: 14, column: 28, scope: !7642)
!7660 = !DILocation(line: 16, column: 2, scope: !7642)
!7661 = !DILocation(line: 16, column: 28, scope: !7642)
!7662 = !DILocation(line: 22, column: 27, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7642, file: !702, line: 22, column: 6)
!7664 = !DILocation(line: 22, column: 7, scope: !7663)
!7665 = !DILocation(line: 22, column: 33, scope: !7663)
!7666 = !DILocation(line: 23, column: 7, scope: !7663)
!7667 = !DILocation(line: 23, column: 33, scope: !7663)
!7668 = !DILocation(line: 24, column: 7, scope: !7663)
!7669 = !DILocation(line: 22, column: 6, scope: !7642)
!7670 = !DILocation(line: 28, column: 8, scope: !7642)
!7671 = !DILocation(line: 29, column: 8, scope: !7642)
!7672 = !DILocation(line: 30, column: 8, scope: !7642)
!7673 = !DILocation(line: 32, column: 2, scope: !7642)
!7674 = !DILocation(line: 33, column: 1, scope: !7642)
!7675 = distinct !DISubprogram(name: "device_is_ready", scope: !7676, file: !7676, line: 47, type: !7677, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !605, retainedNodes: !7679)
!7676 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!347, !628}
!7679 = !{!7680}
!7680 = !DILocalVariable(name: "dev", arg: 1, scope: !7675, file: !7676, line: 47, type: !628)
!7681 = !DILocation(line: 0, scope: !7675)
!7682 = !DILocation(line: 55, column: 2, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7675, file: !7676, line: 55, column: 2)
!7684 = !{i64 2148928903}
!7685 = !DILocation(line: 56, column: 9, scope: !7675)
!7686 = !DILocation(line: 56, column: 2, scope: !7675)
!7687 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !609, file: !609, line: 731, type: !7688, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !605, retainedNodes: !7691)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!109, !7690, !644}
!7690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 32)
!7691 = !{!7692, !7693}
!7692 = !DILocalVariable(name: "spec", arg: 1, scope: !7687, file: !609, line: 731, type: !7690)
!7693 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !7687, file: !609, line: 732, type: !644)
!7694 = !DILocation(line: 0, scope: !7687)
!7695 = !DILocation(line: 734, column: 34, scope: !7687)
!7696 = !DILocation(line: 735, column: 13, scope: !7687)
!7697 = !DILocation(line: 736, column: 13, scope: !7687)
!7698 = !DILocation(line: 736, column: 7, scope: !7687)
!7699 = !DILocation(line: 736, column: 22, scope: !7687)
!7700 = !DILocation(line: 734, column: 9, scope: !7687)
!7701 = !DILocation(line: 734, column: 2, scope: !7687)
!7702 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !7703, file: !7703, line: 49, type: !626, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !605, retainedNodes: !7704)
!7703 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!7704 = !{!7705, !7706, !7707}
!7705 = !DILocalVariable(name: "port", arg: 1, scope: !7702, file: !7703, line: 49, type: !628)
!7706 = !DILocalVariable(name: "pin", arg: 2, scope: !7702, file: !7703, line: 49, type: !643)
!7707 = !DILocalVariable(name: "flags", arg: 3, scope: !7702, file: !7703, line: 49, type: !644)
!7708 = !DILocation(line: 0, scope: !7702)
!7709 = !DILocation(line: 59, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7702, file: !7703, line: 59, column: 2)
!7711 = !{i64 2148978997}
!7712 = !DILocation(line: 60, column: 9, scope: !7702)
!7713 = !DILocation(line: 60, column: 2, scope: !7702)
!7714 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !609, file: !609, line: 667, type: !626, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !605, retainedNodes: !7715)
!7715 = !{!7716, !7717, !7718, !7719, !7720, !7722}
!7716 = !DILocalVariable(name: "port", arg: 1, scope: !7714, file: !609, line: 667, type: !628)
!7717 = !DILocalVariable(name: "pin", arg: 2, scope: !7714, file: !609, line: 668, type: !643)
!7718 = !DILocalVariable(name: "flags", arg: 3, scope: !7714, file: !609, line: 669, type: !644)
!7719 = !DILocalVariable(name: "api", scope: !7714, file: !609, line: 671, type: !620)
!7720 = !DILocalVariable(name: "cfg", scope: !7714, file: !609, line: 673, type: !7721)
!7721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!7722 = !DILocalVariable(name: "data", scope: !7714, file: !609, line: 675, type: !700)
!7723 = !DILocation(line: 0, scope: !7714)
!7724 = !DILocation(line: 672, column: 41, scope: !7714)
!7725 = !DILocation(line: 674, column: 44, scope: !7714)
!7726 = !DILocation(line: 676, column: 36, scope: !7714)
!7727 = !DILocation(line: 678, column: 2, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !609, line: 678, column: 2)
!7729 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 678, column: 2)
!7730 = !DILocation(line: 678, column: 2, scope: !7729)
!7731 = !DILocation(line: 678, column: 2, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7728, file: !609, line: 678, column: 2)
!7733 = !DILocation(line: 681, column: 2, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !609, line: 681, column: 2)
!7735 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 681, column: 2)
!7736 = !DILocation(line: 681, column: 2, scope: !7735)
!7737 = !DILocation(line: 681, column: 2, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7734, file: !609, line: 681, column: 2)
!7739 = !DILocation(line: 685, column: 2, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !609, line: 685, column: 2)
!7741 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 685, column: 2)
!7742 = !DILocation(line: 685, column: 2, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7740, file: !609, line: 685, column: 2)
!7744 = !DILocation(line: 689, column: 2, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !609, line: 689, column: 2)
!7746 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 689, column: 2)
!7747 = !DILocation(line: 689, column: 2, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7745, file: !609, line: 689, column: 2)
!7749 = !DILocation(line: 692, column: 2, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7751, file: !609, line: 692, column: 2)
!7751 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 692, column: 2)
!7752 = !DILocation(line: 692, column: 2, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7750, file: !609, line: 692, column: 2)
!7754 = !DILocation(line: 696, column: 2, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !609, line: 696, column: 2)
!7756 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 696, column: 2)
!7757 = !DILocation(line: 696, column: 2, scope: !7756)
!7758 = !DILocation(line: 696, column: 2, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7755, file: !609, line: 696, column: 2)
!7760 = !DILocation(line: 701, column: 6, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 700, column: 6)
!7762 = !DILocation(line: 708, column: 2, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !609, line: 708, column: 2)
!7764 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 708, column: 2)
!7765 = !DILocation(line: 708, column: 2, scope: !7764)
!7766 = !DILocation(line: 708, column: 2, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7763, file: !609, line: 708, column: 2)
!7768 = !DILocation(line: 711, column: 13, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7714, file: !609, line: 711, column: 6)
!7770 = !DILocation(line: 711, column: 32, scope: !7769)
!7771 = !DILocation(line: 711, column: 6, scope: !7714)
!7772 = !DILocation(line: 712, column: 9, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7769, file: !609, line: 711, column: 38)
!7774 = !DILocation(line: 712, column: 16, scope: !7773)
!7775 = !DILocation(line: 713, column: 2, scope: !7773)
!7776 = !DILocation(line: 714, column: 19, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7769, file: !609, line: 713, column: 9)
!7778 = !DILocation(line: 714, column: 9, scope: !7777)
!7779 = !DILocation(line: 714, column: 16, scope: !7777)
!7780 = !DILocation(line: 706, column: 8, scope: !7714)
!7781 = !DILocation(line: 717, column: 14, scope: !7714)
!7782 = !DILocation(line: 717, column: 9, scope: !7714)
!7783 = !DILocation(line: 717, column: 2, scope: !7714)
!7784 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !7677, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !605, retainedNodes: !7785)
!7785 = !{!7786}
!7786 = !DILocalVariable(name: "dev", arg: 1, scope: !7784, file: !334, line: 730, type: !628)
!7787 = !DILocation(line: 0, scope: !7784)
!7788 = !DILocation(line: 732, column: 9, scope: !7784)
!7789 = !DILocation(line: 732, column: 2, scope: !7784)
!7790 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !785, file: !785, line: 368, type: !838, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7791)
!7791 = !{!7792}
!7792 = !DILocalVariable(name: "dev", arg: 1, scope: !7790, file: !785, line: 368, type: !814)
!7793 = !DILocation(line: 0, scope: !7790)
!7794 = !DILocation(line: 370, column: 2, scope: !7790)
!7795 = !DILocation(line: 371, column: 1, scope: !7790)
!7796 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !785, file: !785, line: 243, type: !7797, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{null, !109, !109, !814}
!7799 = !{!7800, !7801, !7802, !7803, !7805}
!7800 = !DILocalVariable(name: "min", arg: 1, scope: !7796, file: !785, line: 243, type: !109)
!7801 = !DILocalVariable(name: "max", arg: 2, scope: !7796, file: !785, line: 243, type: !109)
!7802 = !DILocalVariable(name: "dev", arg: 3, scope: !7796, file: !785, line: 243, type: !814)
!7803 = !DILocalVariable(name: "data", scope: !7796, file: !785, line: 245, type: !7804)
!7804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!7805 = !DILocalVariable(name: "line", scope: !7796, file: !785, line: 246, type: !109)
!7806 = !DILocation(line: 0, scope: !7796)
!7807 = !DILocation(line: 245, column: 38, scope: !7796)
!7808 = !DILocation(line: 249, column: 24, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !785, line: 249, column: 2)
!7810 = distinct !DILexicalBlock(scope: !7796, file: !785, line: 249, column: 2)
!7811 = !DILocation(line: 249, column: 2, scope: !7810)
!7812 = !DILocation(line: 251, column: 7, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !785, line: 251, column: 7)
!7814 = distinct !DILexicalBlock(scope: !7809, file: !785, line: 249, column: 39)
!7815 = !DILocation(line: 251, column: 7, scope: !7814)
!7816 = !DILocation(line: 253, column: 4, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7813, file: !785, line: 251, column: 36)
!7818 = !DILocation(line: 256, column: 24, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7817, file: !785, line: 256, column: 8)
!7820 = !DILocation(line: 256, column: 9, scope: !7819)
!7821 = !DILocation(line: 256, column: 8, scope: !7817)
!7822 = !DILocation(line: 260, column: 43, scope: !7817)
!7823 = !DILocation(line: 260, column: 4, scope: !7817)
!7824 = !DILocation(line: 261, column: 3, scope: !7817)
!7825 = !DILocation(line: 249, column: 35, scope: !7809)
!7826 = distinct !{!7826, !7811, !7827}
!7827 = !DILocation(line: 262, column: 2, scope: !7810)
!7828 = !DILocation(line: 263, column: 1, scope: !7796)
!7829 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !785, file: !785, line: 158, type: !288, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7830)
!7830 = !{!7831}
!7831 = !DILocalVariable(name: "line", arg: 1, scope: !7829, file: !785, line: 158, type: !109)
!7832 = !DILocation(line: 0, scope: !7829)
!7833 = !DILocation(line: 170, column: 38, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !785, line: 160, column: 17)
!7835 = distinct !DILexicalBlock(scope: !7829, file: !785, line: 160, column: 6)
!7836 = !DILocation(line: 170, column: 10, scope: !7834)
!7837 = !DILocation(line: 176, column: 1, scope: !7829)
!7838 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !785, file: !785, line: 183, type: !3404, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7839)
!7839 = !{!7840}
!7840 = !DILocalVariable(name: "line", arg: 1, scope: !7838, file: !785, line: 183, type: !109)
!7841 = !DILocation(line: 0, scope: !7838)
!7842 = !DILocation(line: 195, column: 28, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !785, line: 185, column: 17)
!7844 = distinct !DILexicalBlock(scope: !7838, file: !785, line: 185, column: 6)
!7845 = !DILocation(line: 195, column: 3, scope: !7843)
!7846 = !DILocation(line: 200, column: 1, scope: !7838)
!7847 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7848, file: !7848, line: 971, type: !5978, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7849)
!7848 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7849 = !{!7850}
!7850 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7847, file: !7848, line: 971, type: !110)
!7851 = !DILocation(line: 0, scope: !7847)
!7852 = !DILocation(line: 973, column: 3, scope: !7847)
!7853 = !DILocation(line: 974, column: 1, scope: !7847)
!7854 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7848, file: !7848, line: 891, type: !7169, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7855)
!7855 = !{!7856}
!7856 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7854, file: !7848, line: 891, type: !110)
!7857 = !DILocation(line: 0, scope: !7854)
!7858 = !DILocation(line: 893, column: 11, scope: !7854)
!7859 = !DILocation(line: 893, column: 40, scope: !7854)
!7860 = !DILocation(line: 893, column: 3, scope: !7854)
!7861 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !785, file: !785, line: 304, type: !838, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7862)
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "dev", arg: 1, scope: !7861, file: !785, line: 304, type: !814)
!7864 = !DILocation(line: 0, scope: !7861)
!7865 = !DILocation(line: 306, column: 2, scope: !7861)
!7866 = !DILocation(line: 307, column: 1, scope: !7861)
!7867 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !785, file: !785, line: 299, type: !838, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7868)
!7868 = !{!7869}
!7869 = !DILocalVariable(name: "dev", arg: 1, scope: !7867, file: !785, line: 299, type: !814)
!7870 = !DILocation(line: 0, scope: !7867)
!7871 = !DILocation(line: 301, column: 2, scope: !7867)
!7872 = !DILocation(line: 302, column: 1, scope: !7867)
!7873 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !785, file: !785, line: 294, type: !838, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7874)
!7874 = !{!7875}
!7875 = !DILocalVariable(name: "dev", arg: 1, scope: !7873, file: !785, line: 294, type: !814)
!7876 = !DILocation(line: 0, scope: !7873)
!7877 = !DILocation(line: 296, column: 2, scope: !7873)
!7878 = !DILocation(line: 297, column: 1, scope: !7873)
!7879 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !785, file: !785, line: 289, type: !838, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7880)
!7880 = !{!7881}
!7881 = !DILocalVariable(name: "dev", arg: 1, scope: !7879, file: !785, line: 289, type: !814)
!7882 = !DILocation(line: 0, scope: !7879)
!7883 = !DILocation(line: 291, column: 2, scope: !7879)
!7884 = !DILocation(line: 292, column: 1, scope: !7879)
!7885 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !785, file: !785, line: 373, type: !838, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7886)
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "dev", arg: 1, scope: !7885, file: !785, line: 373, type: !814)
!7888 = !DILocation(line: 0, scope: !7885)
!7889 = !DILocation(line: 375, column: 2, scope: !7885)
!7890 = !DILocation(line: 376, column: 1, scope: !7885)
!7891 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !785, file: !785, line: 284, type: !838, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7892)
!7892 = !{!7893}
!7893 = !DILocalVariable(name: "dev", arg: 1, scope: !7891, file: !785, line: 284, type: !814)
!7894 = !DILocation(line: 0, scope: !7891)
!7895 = !DILocation(line: 286, column: 2, scope: !7891)
!7896 = !DILocation(line: 287, column: 1, scope: !7891)
!7897 = distinct !DISubprogram(name: "stm32_exti_init", scope: !785, file: !785, line: 416, type: !812, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7898)
!7898 = !{!7899}
!7899 = !DILocalVariable(name: "dev", arg: 1, scope: !7897, file: !785, line: 416, type: !814)
!7900 = !DILocation(line: 0, scope: !7897)
!7901 = !DILocation(line: 418, column: 2, scope: !7897)
!7902 = !DILocation(line: 420, column: 2, scope: !7897)
!7903 = !DILocation(line: 0, scope: !837)
!7904 = !DILocation(line: 493, column: 2, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !837, file: !785, line: 493, column: 2)
!7906 = !DILocation(line: 497, column: 2, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !837, file: !785, line: 497, column: 2)
!7908 = !DILocation(line: 507, column: 2, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !837, file: !785, line: 507, column: 2)
!7910 = !DILocation(line: 512, column: 2, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !837, file: !785, line: 512, column: 2)
!7912 = !DILocation(line: 516, column: 2, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !837, file: !785, line: 516, column: 2)
!7914 = !DILocation(line: 523, column: 2, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !837, file: !785, line: 523, column: 2)
!7916 = !DILocation(line: 527, column: 2, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !837, file: !785, line: 527, column: 2)
!7918 = !DILocation(line: 607, column: 1, scope: !837)
!7919 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !785, file: !785, line: 112, type: !3404, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7920)
!7920 = !{!7921, !7922}
!7921 = !DILocalVariable(name: "line", arg: 1, scope: !7919, file: !785, line: 112, type: !109)
!7922 = !DILocalVariable(name: "irqnum", scope: !7919, file: !785, line: 114, type: !109)
!7923 = !DILocation(line: 0, scope: !7919)
!7924 = !DILocation(line: 121, column: 11, scope: !7919)
!7925 = !DILocation(line: 130, column: 26, scope: !7919)
!7926 = !DILocation(line: 130, column: 2, scope: !7919)
!7927 = !DILocation(line: 134, column: 2, scope: !7919)
!7928 = !DILocation(line: 135, column: 1, scope: !7919)
!7929 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7848, file: !7848, line: 274, type: !5978, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7930)
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7929, file: !7848, line: 274, type: !110)
!7932 = !DILocation(line: 0, scope: !7929)
!7933 = !DILocation(line: 276, column: 3, scope: !7929)
!7934 = !DILocation(line: 277, column: 1, scope: !7929)
!7935 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !785, file: !785, line: 137, type: !3404, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "line", arg: 1, scope: !7935, file: !785, line: 137, type: !109)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 141, column: 11, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7935, file: !785, line: 141, column: 6)
!7941 = !DILocation(line: 141, column: 6, scope: !7935)
!7942 = !DILocation(line: 145, column: 28, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7940, file: !785, line: 141, column: 17)
!7944 = !DILocation(line: 145, column: 3, scope: !7943)
!7945 = !DILocation(line: 147, column: 2, scope: !7943)
!7946 = !DILocation(line: 151, column: 1, scope: !7935)
!7947 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7848, file: !7848, line: 322, type: !5978, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7948)
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7947, file: !7848, line: 322, type: !110)
!7950 = !DILocation(line: 0, scope: !7947)
!7951 = !DILocation(line: 324, column: 3, scope: !7947)
!7952 = !DILocation(line: 325, column: 1, scope: !7947)
!7953 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !785, file: !785, line: 202, type: !7954, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7956)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{null, !109, !109}
!7956 = !{!7957, !7958}
!7957 = !DILocalVariable(name: "line", arg: 1, scope: !7953, file: !785, line: 202, type: !109)
!7958 = !DILocalVariable(name: "trigger", arg: 2, scope: !7953, file: !785, line: 202, type: !109)
!7959 = !DILocation(line: 0, scope: !7953)
!7960 = !DILocation(line: 211, column: 2, scope: !7953)
!7961 = !DILocation(line: 213, column: 36, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7953, file: !785, line: 211, column: 19)
!7963 = !DILocation(line: 213, column: 3, scope: !7962)
!7964 = !DILocation(line: 214, column: 3, scope: !7962)
!7965 = !DILocation(line: 215, column: 3, scope: !7962)
!7966 = !DILocation(line: 217, column: 35, scope: !7962)
!7967 = !DILocation(line: 217, column: 3, scope: !7962)
!7968 = !DILocation(line: 218, column: 3, scope: !7962)
!7969 = !DILocation(line: 219, column: 3, scope: !7962)
!7970 = !DILocation(line: 221, column: 36, scope: !7962)
!7971 = !DILocation(line: 221, column: 3, scope: !7962)
!7972 = !DILocation(line: 222, column: 3, scope: !7962)
!7973 = !DILocation(line: 223, column: 3, scope: !7962)
!7974 = !DILocation(line: 225, column: 35, scope: !7962)
!7975 = !DILocation(line: 225, column: 3, scope: !7962)
!7976 = !DILocation(line: 226, column: 3, scope: !7962)
!7977 = !DILocation(line: 227, column: 3, scope: !7962)
!7978 = !DILocation(line: 232, column: 1, scope: !7953)
!7979 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7848, file: !7848, line: 618, type: !5978, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7980)
!7980 = !{!7981}
!7981 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7979, file: !7848, line: 618, type: !110)
!7982 = !DILocation(line: 0, scope: !7979)
!7983 = !DILocation(line: 620, column: 3, scope: !7979)
!7984 = !DILocation(line: 622, column: 1, scope: !7979)
!7985 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7848, file: !7848, line: 754, type: !5978, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7986)
!7986 = !{!7987}
!7987 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7985, file: !7848, line: 754, type: !110)
!7988 = !DILocation(line: 0, scope: !7985)
!7989 = !DILocation(line: 756, column: 3, scope: !7985)
!7990 = !DILocation(line: 757, column: 1, scope: !7985)
!7991 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7848, file: !7848, line: 572, type: !5978, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7992)
!7992 = !{!7993}
!7993 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7991, file: !7848, line: 572, type: !110)
!7994 = !DILocation(line: 0, scope: !7991)
!7995 = !DILocation(line: 574, column: 3, scope: !7991)
!7996 = !DILocation(line: 576, column: 1, scope: !7991)
!7997 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7848, file: !7848, line: 710, type: !5978, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !7998)
!7998 = !{!7999}
!7999 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7997, file: !7848, line: 710, type: !110)
!8000 = !DILocation(line: 0, scope: !7997)
!8001 = !DILocation(line: 712, column: 3, scope: !7997)
!8002 = !DILocation(line: 713, column: 1, scope: !7997)
!8003 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !785, file: !785, line: 433, type: !8004, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !8006)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!109, !109, !825, !108}
!8006 = !{!8007, !8008, !8009, !8010, !8012}
!8007 = !DILocalVariable(name: "line", arg: 1, scope: !8003, file: !785, line: 433, type: !109)
!8008 = !DILocalVariable(name: "cb", arg: 2, scope: !8003, file: !785, line: 433, type: !825)
!8009 = !DILocalVariable(name: "arg", arg: 3, scope: !8003, file: !785, line: 433, type: !108)
!8010 = !DILocalVariable(name: "dev", scope: !8003, file: !785, line: 435, type: !8011)
!8011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!8012 = !DILocalVariable(name: "data", scope: !8003, file: !785, line: 436, type: !7804)
!8013 = !DILocation(line: 0, scope: !8003)
!8014 = !DILocation(line: 438, column: 21, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8003, file: !785, line: 438, column: 6)
!8016 = !DILocation(line: 438, column: 6, scope: !8015)
!8017 = !DILocation(line: 438, column: 6, scope: !8003)
!8018 = !DILocation(line: 442, column: 20, scope: !8003)
!8019 = !DILocation(line: 443, column: 17, scope: !8003)
!8020 = !DILocation(line: 443, column: 22, scope: !8003)
!8021 = !DILocation(line: 445, column: 2, scope: !8003)
!8022 = !DILocation(line: 446, column: 1, scope: !8003)
!8023 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !785, file: !785, line: 448, type: !3404, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !713, retainedNodes: !8024)
!8024 = !{!8025, !8026, !8027}
!8025 = !DILocalVariable(name: "line", arg: 1, scope: !8023, file: !785, line: 448, type: !109)
!8026 = !DILocalVariable(name: "dev", scope: !8023, file: !785, line: 450, type: !8011)
!8027 = !DILocalVariable(name: "data", scope: !8023, file: !785, line: 451, type: !7804)
!8028 = !DILocation(line: 0, scope: !8023)
!8029 = !DILocation(line: 453, column: 17, scope: !8023)
!8030 = !DILocation(line: 453, column: 20, scope: !8023)
!8031 = !DILocation(line: 454, column: 17, scope: !8023)
!8032 = !DILocation(line: 454, column: 22, scope: !8023)
!8033 = !DILocation(line: 455, column: 1, scope: !8023)
!8034 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !940, file: !940, line: 183, type: !976, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8035)
!8035 = !{!8036, !8037, !8038, !8039, !8040}
!8036 = !DILocalVariable(name: "dev", arg: 1, scope: !8034, file: !940, line: 183, type: !967)
!8037 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8034, file: !940, line: 184, type: !978)
!8038 = !DILocalVariable(name: "pclken", scope: !8034, file: !940, line: 186, type: !930)
!8039 = !DILocalVariable(name: "reg", scope: !8034, file: !940, line: 187, type: !2953)
!8040 = !DILocalVariable(name: "reg_val", scope: !8034, file: !940, line: 188, type: !110)
!8041 = !DILocation(line: 0, scope: !8034)
!8042 = !DILocation(line: 192, column: 6, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8034, file: !940, line: 192, column: 6)
!8044 = !DILocation(line: 192, column: 6, scope: !8034)
!8045 = !DILocation(line: 197, column: 52, scope: !8034)
!8046 = !DILocation(line: 197, column: 8, scope: !8034)
!8047 = !DILocation(line: 198, column: 12, scope: !8034)
!8048 = !DILocation(line: 199, column: 21, scope: !8034)
!8049 = !DILocation(line: 199, column: 10, scope: !8034)
!8050 = !DILocation(line: 200, column: 7, scope: !8034)
!8051 = !DILocation(line: 202, column: 2, scope: !8034)
!8052 = !DILocation(line: 203, column: 1, scope: !8034)
!8053 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !940, file: !940, line: 205, type: !976, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8054)
!8054 = !{!8055, !8056, !8057, !8058, !8059}
!8055 = !DILocalVariable(name: "dev", arg: 1, scope: !8053, file: !940, line: 205, type: !967)
!8056 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8053, file: !940, line: 206, type: !978)
!8057 = !DILocalVariable(name: "pclken", scope: !8053, file: !940, line: 208, type: !930)
!8058 = !DILocalVariable(name: "reg", scope: !8053, file: !940, line: 209, type: !2953)
!8059 = !DILocalVariable(name: "reg_val", scope: !8053, file: !940, line: 210, type: !110)
!8060 = !DILocation(line: 0, scope: !8053)
!8061 = !DILocation(line: 214, column: 6, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8053, file: !940, line: 214, column: 6)
!8063 = !DILocation(line: 214, column: 6, scope: !8053)
!8064 = !DILocation(line: 219, column: 52, scope: !8053)
!8065 = !DILocation(line: 219, column: 8, scope: !8053)
!8066 = !DILocation(line: 220, column: 12, scope: !8053)
!8067 = !DILocation(line: 221, column: 22, scope: !8053)
!8068 = !DILocation(line: 221, column: 13, scope: !8053)
!8069 = !DILocation(line: 221, column: 10, scope: !8053)
!8070 = !DILocation(line: 222, column: 7, scope: !8053)
!8071 = !DILocation(line: 224, column: 2, scope: !8053)
!8072 = !DILocation(line: 225, column: 1, scope: !8053)
!8073 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !940, file: !940, line: 262, type: !992, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8074)
!8074 = !{!8075, !8076, !8077, !8078, !8079, !8080, !8081}
!8075 = !DILocalVariable(name: "clock", arg: 1, scope: !8073, file: !940, line: 262, type: !967)
!8076 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8073, file: !940, line: 263, type: !978)
!8077 = !DILocalVariable(name: "rate", arg: 3, scope: !8073, file: !940, line: 264, type: !936)
!8078 = !DILocalVariable(name: "pclken", scope: !8073, file: !940, line: 266, type: !930)
!8079 = !DILocalVariable(name: "ahb_clock", scope: !8073, file: !940, line: 273, type: !110)
!8080 = !DILocalVariable(name: "apb1_clock", scope: !8073, file: !940, line: 274, type: !110)
!8081 = !DILocalVariable(name: "apb2_clock", scope: !8073, file: !940, line: 276, type: !110)
!8082 = !DILocation(line: 0, scope: !8073)
!8083 = !DILocation(line: 273, column: 23, scope: !8073)
!8084 = !DILocation(line: 299, column: 18, scope: !8073)
!8085 = !DILocation(line: 299, column: 2, scope: !8073)
!8086 = !DILocation(line: 374, column: 3, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8073, file: !940, line: 299, column: 23)
!8088 = !DILocation(line: 379, column: 3, scope: !8087)
!8089 = !DILocation(line: 389, column: 3, scope: !8087)
!8090 = !DILocation(line: 0, scope: !8087)
!8091 = !DILocation(line: 396, column: 1, scope: !8073)
!8092 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !940, file: !940, line: 227, type: !1008, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8093)
!8093 = !{!8094, !8095, !8096, !8097, !8098, !8099, !8100, !8101}
!8094 = !DILocalVariable(name: "dev", arg: 1, scope: !8092, file: !940, line: 227, type: !967)
!8095 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8092, file: !940, line: 228, type: !978)
!8096 = !DILocalVariable(name: "data", arg: 3, scope: !8092, file: !940, line: 229, type: !108)
!8097 = !DILocalVariable(name: "pclken", scope: !8092, file: !940, line: 233, type: !930)
!8098 = !DILocalVariable(name: "reg", scope: !8092, file: !940, line: 234, type: !2953)
!8099 = !DILocalVariable(name: "reg_val", scope: !8092, file: !940, line: 235, type: !110)
!8100 = !DILocalVariable(name: "dt_val", scope: !8092, file: !940, line: 235, type: !110)
!8101 = !DILocalVariable(name: "err", scope: !8092, file: !940, line: 236, type: !109)
!8102 = !DILocation(line: 0, scope: !8092)
!8103 = !DILocation(line: 241, column: 30, scope: !8092)
!8104 = !DILocation(line: 241, column: 8, scope: !8092)
!8105 = !DILocation(line: 242, column: 10, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8092, file: !940, line: 242, column: 6)
!8107 = !DILocation(line: 242, column: 6, scope: !8092)
!8108 = !DILocation(line: 247, column: 11, scope: !8092)
!8109 = !DILocation(line: 248, column: 6, scope: !8092)
!8110 = !DILocation(line: 247, column: 44, scope: !8092)
!8111 = !DILocation(line: 250, column: 6, scope: !8092)
!8112 = !DILocation(line: 249, column: 52, scope: !8092)
!8113 = !DILocation(line: 249, column: 8, scope: !8092)
!8114 = !DILocation(line: 251, column: 12, scope: !8092)
!8115 = !DILocation(line: 252, column: 10, scope: !8092)
!8116 = !DILocation(line: 253, column: 7, scope: !8092)
!8117 = !DILocation(line: 255, column: 2, scope: !8092)
!8118 = !DILocation(line: 260, column: 1, scope: !8092)
!8119 = distinct !DISubprogram(name: "enabled_clock", scope: !940, file: !940, line: 100, type: !8120, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8122)
!8120 = !DISubroutineType(types: !8121)
!8121 = !{!109, !110}
!8122 = !{!8123, !8124}
!8123 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8119, file: !940, line: 100, type: !110)
!8124 = !DILocalVariable(name: "r", scope: !8119, file: !940, line: 102, type: !109)
!8125 = !DILocation(line: 0, scope: !8119)
!8126 = !DILocation(line: 104, column: 2, scope: !8119)
!8127 = !DILocation(line: 180, column: 2, scope: !8119)
!8128 = !DILocation(line: 181, column: 1, scope: !8119)
!8129 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !940, file: !940, line: 641, type: !965, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8130)
!8130 = !{!8131, !8132, !8133}
!8131 = !DILocalVariable(name: "dev", arg: 1, scope: !8129, file: !940, line: 641, type: !967)
!8132 = !DILocalVariable(name: "old_flash_freq", scope: !8129, file: !940, line: 664, type: !110)
!8133 = !DILocalVariable(name: "new_flash_freq", scope: !8129, file: !940, line: 665, type: !110)
!8134 = !DILocation(line: 0, scope: !8129)
!8135 = !DILocation(line: 646, column: 2, scope: !8129)
!8136 = !DILocation(line: 667, column: 19, scope: !8129)
!8137 = !DILocation(line: 674, column: 21, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8129, file: !940, line: 674, column: 6)
!8139 = !DILocation(line: 674, column: 6, scope: !8129)
!8140 = !DILocation(line: 675, column: 3, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8138, file: !940, line: 674, column: 59)
!8142 = !DILocation(line: 676, column: 2, scope: !8141)
!8143 = !DILocation(line: 680, column: 2, scope: !8129)
!8144 = !DILocation(line: 683, column: 2, scope: !8129)
!8145 = !DILocation(line: 690, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !940, line: 689, column: 9)
!8147 = distinct !DILexicalBlock(scope: !8129, file: !940, line: 685, column: 6)
!8148 = !DILocation(line: 695, column: 2, scope: !8129)
!8149 = !DILocation(line: 696, column: 2, scope: !8129)
!8150 = !DILocation(line: 696, column: 9, scope: !8129)
!8151 = !DILocation(line: 696, column: 34, scope: !8129)
!8152 = distinct !{!8152, !8149, !8153}
!8153 = !DILocation(line: 697, column: 2, scope: !8129)
!8154 = !DILocation(line: 720, column: 21, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8129, file: !940, line: 720, column: 6)
!8156 = !DILocation(line: 720, column: 6, scope: !8129)
!8157 = !DILocation(line: 721, column: 3, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8155, file: !940, line: 720, column: 60)
!8159 = !DILocation(line: 722, column: 2, scope: !8158)
!8160 = !DILocation(line: 725, column: 18, scope: !8129)
!8161 = !DILocation(line: 728, column: 2, scope: !8129)
!8162 = !DILocation(line: 730, column: 2, scope: !8129)
!8163 = !DILocation(line: 745, column: 2, scope: !8129)
!8164 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8165, file: !8165, line: 995, type: !3358, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8165 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8166 = !DILocation(line: 997, column: 21, scope: !8164)
!8167 = !DILocation(line: 997, column: 3, scope: !8164)
!8168 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !940, file: !940, line: 507, type: !3076, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8169 = !DILocation(line: 534, column: 7, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !940, line: 534, column: 7)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !940, line: 532, column: 37)
!8172 = distinct !DILexicalBlock(scope: !8168, file: !940, line: 532, column: 6)
!8173 = !DILocation(line: 534, column: 28, scope: !8170)
!8174 = !DILocation(line: 534, column: 7, scope: !8171)
!8175 = !DILocation(line: 536, column: 4, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8170, file: !940, line: 534, column: 34)
!8177 = !DILocation(line: 537, column: 4, scope: !8176)
!8178 = !DILocation(line: 537, column: 11, scope: !8176)
!8179 = !DILocation(line: 537, column: 32, scope: !8176)
!8180 = distinct !{!8180, !8177, !8181}
!8181 = !DILocation(line: 539, column: 4, scope: !8176)
!8182 = !DILocation(line: 583, column: 3, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !940, line: 577, column: 37)
!8184 = distinct !DILexicalBlock(scope: !8168, file: !940, line: 577, column: 6)
!8185 = !DILocation(line: 584, column: 3, scope: !8183)
!8186 = !DILocation(line: 584, column: 10, scope: !8183)
!8187 = !DILocation(line: 584, column: 31, scope: !8183)
!8188 = distinct !{!8188, !8185, !8189}
!8189 = !DILocation(line: 585, column: 3, scope: !8183)
!8190 = !DILocation(line: 627, column: 1, scope: !8168)
!8191 = distinct !DISubprogram(name: "set_up_plls", scope: !940, file: !940, line: 448, type: !3076, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8192 = !DILocation(line: 460, column: 6, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8191, file: !940, line: 460, column: 6)
!8194 = !DILocation(line: 460, column: 31, scope: !8193)
!8195 = !DILocation(line: 460, column: 6, scope: !8191)
!8196 = !DILocation(line: 461, column: 3, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8193, file: !940, line: 460, column: 67)
!8198 = !DILocation(line: 462, column: 3, scope: !8197)
!8199 = !DILocation(line: 463, column: 2, scope: !8197)
!8200 = !DILocation(line: 464, column: 2, scope: !8191)
!8201 = !DILocation(line: 496, column: 2, scope: !8191)
!8202 = !DILocation(line: 499, column: 2, scope: !8191)
!8203 = !DILocation(line: 500, column: 2, scope: !8191)
!8204 = !DILocation(line: 500, column: 9, scope: !8191)
!8205 = !DILocation(line: 500, column: 30, scope: !8191)
!8206 = distinct !{!8206, !8203, !8207}
!8207 = !DILocation(line: 502, column: 2, scope: !8191)
!8208 = !DILocation(line: 505, column: 1, scope: !8191)
!8209 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8165, file: !8165, line: 944, type: !5978, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8210)
!8210 = !{!8211}
!8211 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8209, file: !8165, line: 944, type: !110)
!8212 = !DILocation(line: 0, scope: !8209)
!8213 = !DILocation(line: 946, column: 3, scope: !8209)
!8214 = !DILocation(line: 947, column: 1, scope: !8209)
!8215 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8165, file: !8165, line: 910, type: !5978, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8216)
!8216 = !{!8217}
!8217 = !DILocalVariable(name: "Source", arg: 1, scope: !8215, file: !8165, line: 910, type: !110)
!8218 = !DILocation(line: 0, scope: !8215)
!8219 = !DILocation(line: 912, column: 3, scope: !8215)
!8220 = !DILocation(line: 913, column: 1, scope: !8215)
!8221 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8165, file: !8165, line: 924, type: !3358, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8222 = !DILocation(line: 926, column: 21, scope: !8221)
!8223 = !DILocation(line: 926, column: 3, scope: !8221)
!8224 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8165, file: !8165, line: 960, type: !5978, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8225)
!8225 = !{!8226}
!8226 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8224, file: !8165, line: 960, type: !110)
!8227 = !DILocation(line: 0, scope: !8224)
!8228 = !DILocation(line: 962, column: 3, scope: !8224)
!8229 = !DILocation(line: 963, column: 1, scope: !8224)
!8230 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8165, file: !8165, line: 976, type: !5978, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8231)
!8231 = !{!8232}
!8232 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8230, file: !8165, line: 976, type: !110)
!8233 = !DILocation(line: 0, scope: !8230)
!8234 = !DILocation(line: 978, column: 3, scope: !8230)
!8235 = !DILocation(line: 979, column: 1, scope: !8230)
!8236 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !940, file: !940, line: 409, type: !3076, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8237 = !DILocation(line: 412, column: 6, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8236, file: !940, line: 412, column: 6)
!8239 = !DILocation(line: 412, column: 27, scope: !8238)
!8240 = !DILocation(line: 412, column: 6, scope: !8236)
!8241 = !DILocation(line: 414, column: 3, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8238, file: !940, line: 412, column: 33)
!8243 = !DILocation(line: 415, column: 3, scope: !8242)
!8244 = !DILocation(line: 415, column: 10, scope: !8242)
!8245 = !DILocation(line: 415, column: 31, scope: !8242)
!8246 = distinct !{!8246, !8243, !8247}
!8247 = !DILocation(line: 417, column: 3, scope: !8242)
!8248 = !DILocation(line: 421, column: 2, scope: !8236)
!8249 = !DILocation(line: 422, column: 2, scope: !8236)
!8250 = !DILocation(line: 422, column: 9, scope: !8236)
!8251 = !DILocation(line: 422, column: 34, scope: !8236)
!8252 = distinct !{!8252, !8249, !8253}
!8253 = !DILocation(line: 423, column: 2, scope: !8236)
!8254 = !DILocation(line: 424, column: 1, scope: !8236)
!8255 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8165, file: !8165, line: 1180, type: !3076, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8256 = !DILocation(line: 1182, column: 3, scope: !8255)
!8257 = !DILocation(line: 1183, column: 1, scope: !8255)
!8258 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8165, file: !8165, line: 1169, type: !3076, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8259 = !DILocation(line: 1171, column: 3, scope: !8258)
!8260 = !DILocation(line: 1172, column: 1, scope: !8258)
!8261 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8165, file: !8165, line: 1190, type: !3358, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8262 = !DILocation(line: 1192, column: 12, scope: !8261)
!8263 = !DILocation(line: 1192, column: 11, scope: !8261)
!8264 = !DILocation(line: 1192, column: 3, scope: !8261)
!8265 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8165, file: !8165, line: 612, type: !3358, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8266 = !DILocation(line: 614, column: 12, scope: !8265)
!8267 = !DILocation(line: 614, column: 11, scope: !8265)
!8268 = !DILocation(line: 614, column: 3, scope: !8265)
!8269 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8165, file: !8165, line: 592, type: !3076, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8270 = !DILocation(line: 594, column: 3, scope: !8269)
!8271 = !DILocation(line: 595, column: 1, scope: !8269)
!8272 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8165, file: !8165, line: 760, type: !3076, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8273 = !DILocation(line: 762, column: 3, scope: !8272)
!8274 = !DILocation(line: 763, column: 1, scope: !8272)
!8275 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8165, file: !8165, line: 780, type: !3358, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !2037)
!8276 = !DILocation(line: 782, column: 12, scope: !8275)
!8277 = !DILocation(line: 782, column: 11, scope: !8275)
!8278 = !DILocation(line: 782, column: 3, scope: !8275)
!8279 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8280, file: !8280, line: 48, type: !3358, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2037)
!8280 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8281 = !DILocation(line: 51, column: 3, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8283, file: !8280, line: 50, column: 37)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !8280, line: 50, column: 6)
!8284 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8280, file: !8280, line: 64, type: !3076, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2037)
!8285 = !DILocation(line: 66, column: 2, scope: !8284)
!8286 = !DILocation(line: 69, column: 1, scope: !8284)
!8287 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8165, file: !8165, line: 1219, type: !8288, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !8290)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{null, !110, !110, !110}
!8290 = !{!8291, !8292, !8293}
!8291 = !DILocalVariable(name: "Source", arg: 1, scope: !8287, file: !8165, line: 1219, type: !110)
!8292 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8287, file: !8165, line: 1219, type: !110)
!8293 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8287, file: !8165, line: 1219, type: !110)
!8294 = !DILocation(line: 0, scope: !8287)
!8295 = !DILocation(line: 1221, column: 3, scope: !8287)
!8296 = !DILocation(line: 1222, column: 1, scope: !8287)
!8297 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8280, file: !8280, line: 75, type: !3358, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2037)
!8298 = !DILocation(line: 77, column: 9, scope: !8297)
!8299 = !DILocation(line: 77, column: 2, scope: !8297)
!8300 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8280, file: !8280, line: 87, type: !3076, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !2037)
!8301 = !DILocation(line: 93, column: 2, scope: !8300)
!8302 = !DILocation(line: 95, column: 1, scope: !8300)
!8303 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5977, file: !5977, line: 895, type: !5978, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !8304)
!8304 = !{!8305, !8306}
!8305 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8303, file: !5977, line: 895, type: !110)
!8306 = !DILocalVariable(name: "tmpreg", scope: !8303, file: !5977, line: 897, type: !301)
!8307 = !DILocation(line: 0, scope: !8303)
!8308 = !DILocation(line: 897, column: 3, scope: !8303)
!8309 = !DILocation(line: 897, column: 17, scope: !8303)
!8310 = !DILocation(line: 898, column: 3, scope: !8303)
!8311 = !DILocation(line: 900, column: 12, scope: !8303)
!8312 = !DILocation(line: 900, column: 10, scope: !8303)
!8313 = !DILocation(line: 901, column: 9, scope: !8303)
!8314 = !DILocation(line: 902, column: 1, scope: !8303)
!8315 = distinct !DISubprogram(name: "uart_console_init", scope: !1069, file: !1069, line: 588, type: !1046, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8316)
!8316 = !{!8317}
!8317 = !DILocalVariable(name: "arg", arg: 1, scope: !8315, file: !1069, line: 588, type: !1024)
!8318 = !DILocation(line: 0, scope: !8315)
!8319 = !DILocation(line: 593, column: 7, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8315, file: !1069, line: 593, column: 6)
!8321 = !DILocation(line: 593, column: 6, scope: !8315)
!8322 = !DILocation(line: 597, column: 2, scope: !8315)
!8323 = !DILocation(line: 599, column: 2, scope: !8315)
!8324 = !DILocation(line: 600, column: 1, scope: !8315)
!8325 = distinct !DISubprogram(name: "device_is_ready", scope: !7676, file: !7676, line: 47, type: !8326, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8328)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!347, !1024}
!8328 = !{!8329}
!8329 = !DILocalVariable(name: "dev", arg: 1, scope: !8325, file: !7676, line: 47, type: !1024)
!8330 = !DILocation(line: 0, scope: !8325)
!8331 = !DILocation(line: 55, column: 2, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8325, file: !7676, line: 55, column: 2)
!8333 = !{i64 2152423064}
!8334 = !DILocation(line: 56, column: 9, scope: !8325)
!8335 = !DILocation(line: 56, column: 2, scope: !8325)
!8336 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1069, file: !1069, line: 573, type: !3076, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !2037)
!8337 = !DILocation(line: 579, column: 2, scope: !8336)
!8338 = !DILocation(line: 581, column: 1, scope: !8336)
!8339 = distinct !DISubprogram(name: "console_out", scope: !1069, file: !1069, line: 77, type: !288, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8340)
!8340 = !{!8341}
!8341 = !DILocalVariable(name: "c", arg: 1, scope: !8339, file: !1069, line: 77, type: !109)
!8342 = !DILocation(line: 0, scope: !8339)
!8343 = !DILocation(line: 89, column: 11, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8339, file: !1069, line: 89, column: 6)
!8345 = !DILocation(line: 89, column: 6, scope: !8339)
!8346 = !DILocation(line: 90, column: 3, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8344, file: !1069, line: 89, column: 17)
!8348 = !DILocation(line: 91, column: 2, scope: !8347)
!8349 = !DILocation(line: 92, column: 34, scope: !8339)
!8350 = !DILocation(line: 92, column: 2, scope: !8339)
!8351 = !DILocation(line: 94, column: 2, scope: !8339)
!8352 = distinct !DISubprogram(name: "uart_poll_out", scope: !8353, file: !8353, line: 95, type: !1042, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8354)
!8353 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/philosophers")
!8354 = !{!8355, !8356}
!8355 = !DILocalVariable(name: "dev", arg: 1, scope: !8352, file: !8353, line: 95, type: !1024)
!8356 = !DILocalVariable(name: "out_char", arg: 2, scope: !8352, file: !8353, line: 95, type: !168)
!8357 = !DILocation(line: 0, scope: !8352)
!8358 = !DILocation(line: 105, column: 2, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8352, file: !8353, line: 105, column: 2)
!8360 = !{i64 2152506455}
!8361 = !DILocation(line: 106, column: 2, scope: !8352)
!8362 = !DILocation(line: 107, column: 1, scope: !8352)
!8363 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1018, file: !1018, line: 574, type: !1042, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8364)
!8364 = !{!8365, !8366, !8367}
!8365 = !DILocalVariable(name: "dev", arg: 1, scope: !8363, file: !1018, line: 574, type: !1024)
!8366 = !DILocalVariable(name: "out_char", arg: 2, scope: !8363, file: !1018, line: 575, type: !168)
!8367 = !DILocalVariable(name: "api", scope: !8363, file: !1018, line: 577, type: !1015)
!8368 = !DILocation(line: 0, scope: !8363)
!8369 = !DILocation(line: 578, column: 40, scope: !8363)
!8370 = !DILocation(line: 580, column: 7, scope: !8363)
!8371 = !DILocation(line: 580, column: 2, scope: !8363)
!8372 = !DILocation(line: 581, column: 1, scope: !8363)
!8373 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !8326, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8374)
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "dev", arg: 1, scope: !8373, file: !334, line: 730, type: !1024)
!8376 = !DILocation(line: 0, scope: !8373)
!8377 = !DILocation(line: 732, column: 9, scope: !8373)
!8378 = !DILocation(line: 732, column: 2, scope: !8373)
!8379 = distinct !DISubprogram(name: "uart_register_input", scope: !1069, file: !1069, line: 560, type: !8380, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1012, retainedNodes: !8427)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !8382, !8382, !8424}
!8382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8383, size: 32)
!8383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !119, line: 2208, size: 160, elements: !8384)
!8384 = !{!8385}
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8383, file: !119, line: 2209, baseType: !8386, size: 160)
!8386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !119, line: 1709, size: 160, elements: !8387)
!8387 = !{!8388, !8401, !8405}
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8386, file: !119, line: 1710, baseType: !8389, size: 64)
!8389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8390, line: 46, baseType: !8391)
!8390 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8390, line: 41, size: 64, elements: !8392)
!8392 = !{!8393, !8400}
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8391, file: !8390, line: 42, baseType: !8394, size: 32)
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 32)
!8395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8390, line: 39, baseType: !8396)
!8396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8390, line: 35, size: 32, elements: !8397)
!8397 = !{!8398}
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8396, file: !8390, line: 36, baseType: !8399, size: 32)
!8399 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8390, line: 32, baseType: !110)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8391, file: !8390, line: 43, baseType: !8394, size: 32, offset: 32)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8386, file: !119, line: 1711, baseType: !8402, size: 32, offset: 64)
!8402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !8403)
!8403 = !{!8404}
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8402, file: !254, line: 52, baseType: !22, size: 32)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8386, file: !119, line: 1712, baseType: !8406, size: 64, offset: 96)
!8406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !8407)
!8407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !8408)
!8408 = !{!8409}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8407, file: !123, line: 232, baseType: !8410, size: 64)
!8410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !8411)
!8411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !8412)
!8412 = !{!8413, !8419}
!8413 = !DIDerivedType(tag: DW_TAG_member, scope: !8411, file: !128, line: 38, baseType: !8414, size: 32)
!8414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8411, file: !128, line: 38, size: 32, elements: !8415)
!8415 = !{!8416, !8418}
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8414, file: !128, line: 39, baseType: !8417, size: 32)
!8417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8411, size: 32)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8414, file: !128, line: 40, baseType: !8417, size: 32)
!8419 = !DIDerivedType(tag: DW_TAG_member, scope: !8411, file: !128, line: 42, baseType: !8420, size: 32, offset: 32)
!8420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8411, file: !128, line: 42, size: 32, elements: !8421)
!8421 = !{!8422, !8423}
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8420, file: !128, line: 43, baseType: !8417, size: 32)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8420, file: !128, line: 44, baseType: !8417, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8425, size: 32)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{!167, !1185, !167}
!8427 = !{!8428, !8429, !8430}
!8428 = !DILocalVariable(name: "avail", arg: 1, scope: !8379, file: !1069, line: 560, type: !8382)
!8429 = !DILocalVariable(name: "lines", arg: 2, scope: !8379, file: !1069, line: 560, type: !8382)
!8430 = !DILocalVariable(name: "completion", arg: 3, scope: !8379, file: !1069, line: 561, type: !8424)
!8431 = !DILocation(line: 0, scope: !8379)
!8432 = !DILocation(line: 566, column: 1, scope: !8379)
!8433 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1229, file: !1229, line: 523, type: !1094, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8434)
!8434 = !{!8435, !8436, !8437, !8438, !8439}
!8435 = !DILocalVariable(name: "dev", arg: 1, scope: !8433, file: !1229, line: 523, type: !1096)
!8436 = !DILocalVariable(name: "pin", arg: 2, scope: !8433, file: !1229, line: 524, type: !643)
!8437 = !DILocalVariable(name: "flags", arg: 3, scope: !8433, file: !1229, line: 524, type: !644)
!8438 = !DILocalVariable(name: "err", scope: !8433, file: !1229, line: 526, type: !109)
!8439 = !DILocalVariable(name: "pincfg", scope: !8433, file: !1229, line: 527, type: !109)
!8440 = !DILocation(line: 0, scope: !8433)
!8441 = !DILocation(line: 527, column: 2, scope: !8433)
!8442 = !DILocation(line: 532, column: 8, scope: !8433)
!8443 = !DILocation(line: 533, column: 10, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8433, file: !1229, line: 533, column: 6)
!8445 = !DILocation(line: 533, column: 6, scope: !8433)
!8446 = !DILocation(line: 543, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8433, file: !1229, line: 543, column: 6)
!8448 = !DILocation(line: 543, column: 28, scope: !8447)
!8449 = !DILocation(line: 543, column: 6, scope: !8433)
!8450 = !DILocation(line: 544, column: 14, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !1229, line: 544, column: 7)
!8452 = distinct !DILexicalBlock(scope: !8447, file: !1229, line: 543, column: 34)
!8453 = !DILocation(line: 544, column: 39, scope: !8451)
!8454 = !DILocation(line: 544, column: 7, scope: !8452)
!8455 = !DILocation(line: 545, column: 38, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8451, file: !1229, line: 544, column: 45)
!8457 = !DILocation(line: 545, column: 4, scope: !8456)
!8458 = !DILocation(line: 546, column: 3, scope: !8456)
!8459 = !DILocation(line: 546, column: 21, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8451, file: !1229, line: 546, column: 14)
!8461 = !DILocation(line: 546, column: 45, scope: !8460)
!8462 = !DILocation(line: 546, column: 14, scope: !8451)
!8463 = !DILocation(line: 547, column: 40, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !1229, line: 546, column: 51)
!8465 = !DILocation(line: 547, column: 4, scope: !8464)
!8466 = !DILocation(line: 548, column: 3, scope: !8464)
!8467 = !DILocation(line: 551, column: 32, scope: !8433)
!8468 = !DILocation(line: 551, column: 37, scope: !8433)
!8469 = !DILocation(line: 551, column: 2, scope: !8433)
!8470 = !DILocation(line: 554, column: 6, scope: !8433)
!8471 = !DILocation(line: 562, column: 1, scope: !8433)
!8472 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1229, file: !1229, line: 410, type: !8473, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8475)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!109, !1096, !936}
!8475 = !{!8476, !8477, !8478, !8480}
!8476 = !DILocalVariable(name: "dev", arg: 1, scope: !8472, file: !1229, line: 410, type: !1096)
!8477 = !DILocalVariable(name: "value", arg: 2, scope: !8472, file: !1229, line: 410, type: !936)
!8478 = !DILocalVariable(name: "cfg", scope: !8472, file: !1229, line: 412, type: !8479)
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!8480 = !DILocalVariable(name: "gpio", scope: !8472, file: !1229, line: 413, type: !1163)
!8481 = !DILocation(line: 0, scope: !8472)
!8482 = !DILocation(line: 412, column: 45, scope: !8472)
!8483 = !DILocation(line: 413, column: 44, scope: !8472)
!8484 = !DILocation(line: 415, column: 11, scope: !8472)
!8485 = !DILocation(line: 415, column: 9, scope: !8472)
!8486 = !DILocation(line: 417, column: 2, scope: !8472)
!8487 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1229, file: !1229, line: 420, type: !1117, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8488)
!8488 = !{!8489, !8490, !8491, !8492, !8493, !8494}
!8489 = !DILocalVariable(name: "dev", arg: 1, scope: !8487, file: !1229, line: 420, type: !1096)
!8490 = !DILocalVariable(name: "mask", arg: 2, scope: !8487, file: !1229, line: 421, type: !655)
!8491 = !DILocalVariable(name: "value", arg: 3, scope: !8487, file: !1229, line: 422, type: !650)
!8492 = !DILocalVariable(name: "cfg", scope: !8487, file: !1229, line: 424, type: !8479)
!8493 = !DILocalVariable(name: "gpio", scope: !8487, file: !1229, line: 425, type: !1163)
!8494 = !DILocalVariable(name: "port_value", scope: !8487, file: !1229, line: 426, type: !110)
!8495 = !DILocation(line: 0, scope: !8487)
!8496 = !DILocation(line: 424, column: 45, scope: !8487)
!8497 = !DILocation(line: 425, column: 44, scope: !8487)
!8498 = !DILocation(line: 430, column: 15, scope: !8487)
!8499 = !DILocation(line: 431, column: 46, scope: !8487)
!8500 = !DILocation(line: 431, column: 44, scope: !8487)
!8501 = !DILocation(line: 431, column: 61, scope: !8487)
!8502 = !DILocation(line: 431, column: 53, scope: !8487)
!8503 = !DILocation(line: 431, column: 2, scope: !8487)
!8504 = !DILocation(line: 435, column: 2, scope: !8487)
!8505 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1229, file: !1229, line: 438, type: !1121, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8506)
!8506 = !{!8507, !8508, !8509, !8510}
!8507 = !DILocalVariable(name: "dev", arg: 1, scope: !8505, file: !1229, line: 438, type: !1096)
!8508 = !DILocalVariable(name: "pins", arg: 2, scope: !8505, file: !1229, line: 439, type: !655)
!8509 = !DILocalVariable(name: "cfg", scope: !8505, file: !1229, line: 441, type: !8479)
!8510 = !DILocalVariable(name: "gpio", scope: !8505, file: !1229, line: 442, type: !1163)
!8511 = !DILocation(line: 0, scope: !8505)
!8512 = !DILocation(line: 441, column: 45, scope: !8505)
!8513 = !DILocation(line: 442, column: 44, scope: !8505)
!8514 = !DILocation(line: 448, column: 2, scope: !8505)
!8515 = !DILocation(line: 450, column: 2, scope: !8505)
!8516 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1229, file: !1229, line: 453, type: !1121, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8517)
!8517 = !{!8518, !8519, !8520, !8521}
!8518 = !DILocalVariable(name: "dev", arg: 1, scope: !8516, file: !1229, line: 453, type: !1096)
!8519 = !DILocalVariable(name: "pins", arg: 2, scope: !8516, file: !1229, line: 454, type: !655)
!8520 = !DILocalVariable(name: "cfg", scope: !8516, file: !1229, line: 456, type: !8479)
!8521 = !DILocalVariable(name: "gpio", scope: !8516, file: !1229, line: 457, type: !1163)
!8522 = !DILocation(line: 0, scope: !8516)
!8523 = !DILocation(line: 456, column: 45, scope: !8516)
!8524 = !DILocation(line: 457, column: 44, scope: !8516)
!8525 = !DILocation(line: 467, column: 2, scope: !8516)
!8526 = !DILocation(line: 470, column: 2, scope: !8516)
!8527 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1229, file: !1229, line: 473, type: !1121, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8528)
!8528 = !{!8529, !8530, !8531, !8532}
!8529 = !DILocalVariable(name: "dev", arg: 1, scope: !8527, file: !1229, line: 473, type: !1096)
!8530 = !DILocalVariable(name: "pins", arg: 2, scope: !8527, file: !1229, line: 474, type: !655)
!8531 = !DILocalVariable(name: "cfg", scope: !8527, file: !1229, line: 476, type: !8479)
!8532 = !DILocalVariable(name: "gpio", scope: !8527, file: !1229, line: 477, type: !1163)
!8533 = !DILocation(line: 0, scope: !8527)
!8534 = !DILocation(line: 476, column: 45, scope: !8527)
!8535 = !DILocation(line: 477, column: 44, scope: !8527)
!8536 = !DILocation(line: 484, column: 2, scope: !8527)
!8537 = !DILocation(line: 487, column: 2, scope: !8527)
!8538 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1229, file: !1229, line: 594, type: !1127, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8539)
!8539 = !{!8540, !8541, !8542, !8543, !8544, !8545, !8547, !8548, !8549}
!8540 = !DILocalVariable(name: "dev", arg: 1, scope: !8538, file: !1229, line: 594, type: !1096)
!8541 = !DILocalVariable(name: "pin", arg: 2, scope: !8538, file: !1229, line: 595, type: !643)
!8542 = !DILocalVariable(name: "mode", arg: 3, scope: !8538, file: !1229, line: 596, type: !608)
!8543 = !DILocalVariable(name: "trig", arg: 4, scope: !8538, file: !1229, line: 597, type: !614)
!8544 = !DILocalVariable(name: "cfg", scope: !8538, file: !1229, line: 599, type: !8479)
!8545 = !DILocalVariable(name: "data", scope: !8538, file: !1229, line: 600, type: !8546)
!8546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!8547 = !DILocalVariable(name: "edge", scope: !8538, file: !1229, line: 601, type: !109)
!8548 = !DILocalVariable(name: "err", scope: !8538, file: !1229, line: 602, type: !109)
!8549 = !DILabel(scope: !8538, name: "exit", file: !1229, line: 643)
!8550 = !DILocation(line: 0, scope: !8538)
!8551 = !DILocation(line: 599, column: 45, scope: !8538)
!8552 = !DILocation(line: 604, column: 6, scope: !8538)
!8553 = !DILocation(line: 605, column: 34, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !1229, line: 605, column: 7)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !1229, line: 604, column: 38)
!8556 = distinct !DILexicalBlock(scope: !8538, file: !1229, line: 604, column: 6)
!8557 = !DILocation(line: 605, column: 7, scope: !8554)
!8558 = !DILocation(line: 605, column: 47, scope: !8554)
!8559 = !DILocation(line: 605, column: 39, scope: !8554)
!8560 = !DILocation(line: 605, column: 7, scope: !8555)
!8561 = !DILocation(line: 606, column: 4, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8554, file: !1229, line: 605, column: 53)
!8563 = !DILocation(line: 607, column: 4, scope: !8562)
!8564 = !DILocation(line: 608, column: 4, scope: !8562)
!8565 = !DILocation(line: 609, column: 3, scope: !8562)
!8566 = !DILocation(line: 600, column: 38, scope: !8538)
!8567 = !DILocation(line: 620, column: 30, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8538, file: !1229, line: 620, column: 6)
!8569 = !DILocation(line: 620, column: 6, scope: !8568)
!8570 = !DILocation(line: 620, column: 57, scope: !8568)
!8571 = !DILocation(line: 620, column: 6, scope: !8538)
!8572 = !DILocation(line: 625, column: 29, scope: !8538)
!8573 = !DILocation(line: 625, column: 2, scope: !8538)
!8574 = !DILocation(line: 627, column: 2, scope: !8538)
!8575 = !DILocation(line: 630, column: 3, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8538, file: !1229, line: 627, column: 16)
!8577 = !DILocation(line: 633, column: 3, scope: !8576)
!8578 = !DILocation(line: 636, column: 3, scope: !8576)
!8579 = !DILocation(line: 639, column: 2, scope: !8538)
!8580 = !DILocation(line: 641, column: 2, scope: !8538)
!8581 = !DILocation(line: 643, column: 1, scope: !8538)
!8582 = !DILocation(line: 644, column: 2, scope: !8538)
!8583 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1229, file: !1229, line: 647, type: !1131, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8584)
!8584 = !{!8585, !8586, !8587, !8588}
!8585 = !DILocalVariable(name: "dev", arg: 1, scope: !8583, file: !1229, line: 647, type: !1096)
!8586 = !DILocalVariable(name: "callback", arg: 2, scope: !8583, file: !1229, line: 648, type: !1133)
!8587 = !DILocalVariable(name: "set", arg: 3, scope: !8583, file: !1229, line: 649, type: !347)
!8588 = !DILocalVariable(name: "data", scope: !8583, file: !1229, line: 651, type: !8546)
!8589 = !DILocation(line: 0, scope: !8583)
!8590 = !DILocation(line: 651, column: 38, scope: !8583)
!8591 = !DILocation(line: 653, column: 37, scope: !8583)
!8592 = !DILocation(line: 653, column: 9, scope: !8583)
!8593 = !DILocation(line: 653, column: 2, scope: !8583)
!8594 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8595, file: !8595, line: 38, type: !8596, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8599)
!8595 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8596 = !DISubroutineType(types: !8597)
!8597 = !{!109, !8598, !1133, !347}
!8598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!8599 = !{!8600, !8601, !8602}
!8600 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8594, file: !8595, line: 38, type: !8598)
!8601 = !DILocalVariable(name: "callback", arg: 2, scope: !8594, file: !8595, line: 39, type: !1133)
!8602 = !DILocalVariable(name: "set", arg: 3, scope: !8594, file: !8595, line: 40, type: !347)
!8603 = !DILocation(line: 0, scope: !8594)
!8604 = !DILocation(line: 42, column: 2, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8595, line: 42, column: 2)
!8606 = distinct !DILexicalBlock(scope: !8594, file: !8595, line: 42, column: 2)
!8607 = !DILocation(line: 42, column: 2, scope: !8606)
!8608 = !DILocation(line: 42, column: 2, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8605, file: !8595, line: 42, column: 2)
!8610 = !DILocation(line: 43, column: 2, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !8595, line: 43, column: 2)
!8612 = distinct !DILexicalBlock(scope: !8594, file: !8595, line: 43, column: 2)
!8613 = !DILocation(line: 43, column: 2, scope: !8612)
!8614 = !DILocation(line: 43, column: 2, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8611, file: !8595, line: 43, column: 2)
!8616 = !DILocation(line: 45, column: 7, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8594, file: !8595, line: 45, column: 6)
!8618 = !DILocation(line: 45, column: 6, scope: !8594)
!8619 = !DILocation(line: 46, column: 56, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !8595, line: 46, column: 7)
!8621 = distinct !DILexicalBlock(scope: !8617, file: !8595, line: 45, column: 38)
!8622 = !DILocation(line: 46, column: 8, scope: !8620)
!8623 = !DILocation(line: 46, column: 7, scope: !8621)
!8624 = !DILocation(line: 51, column: 13, scope: !8617)
!8625 = !DILocation(line: 56, column: 43, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !8595, line: 55, column: 11)
!8627 = distinct !DILexicalBlock(scope: !8594, file: !8595, line: 55, column: 6)
!8628 = !DILocation(line: 56, column: 3, scope: !8626)
!8629 = !DILocation(line: 57, column: 2, scope: !8626)
!8630 = !DILocation(line: 60, column: 1, scope: !8594)
!8631 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !675, file: !675, line: 261, type: !8632, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8634)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!347, !8598}
!8634 = !{!8635}
!8635 = !DILocalVariable(name: "list", arg: 1, scope: !8631, file: !675, line: 261, type: !8598)
!8636 = !DILocation(line: 0, scope: !8631)
!8637 = !DILocation(line: 261, column: 1, scope: !8631)
!8638 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !675, file: !675, line: 417, type: !8639, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8641)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!347, !8598, !1297}
!8641 = !{!8642, !8643, !8644, !8645}
!8642 = !DILocalVariable(name: "list", arg: 1, scope: !8638, file: !675, line: 417, type: !8598)
!8643 = !DILocalVariable(name: "node", arg: 2, scope: !8638, file: !675, line: 417, type: !1297)
!8644 = !DILocalVariable(name: "prev", scope: !8638, file: !675, line: 417, type: !1297)
!8645 = !DILocalVariable(name: "test", scope: !8638, file: !675, line: 417, type: !1297)
!8646 = !DILocation(line: 0, scope: !8638)
!8647 = !DILocation(line: 417, column: 1, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8638, file: !675, line: 417, column: 1)
!8649 = !DILocation(line: 417, column: 1, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8648, file: !675, line: 417, column: 1)
!8651 = !DILocation(line: 417, column: 1, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !675, line: 417, column: 1)
!8653 = distinct !DILexicalBlock(scope: !8650, file: !675, line: 417, column: 1)
!8654 = !DILocation(line: 417, column: 1, scope: !8653)
!8655 = distinct !{!8655, !8647, !8647}
!8656 = !DILocation(line: 417, column: 1, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8652, file: !675, line: 417, column: 1)
!8658 = !DILocation(line: 417, column: 1, scope: !8638)
!8659 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !675, file: !675, line: 298, type: !8660, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8662)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{null, !8598, !1297}
!8662 = !{!8663, !8664}
!8663 = !DILocalVariable(name: "list", arg: 1, scope: !8659, file: !675, line: 298, type: !8598)
!8664 = !DILocalVariable(name: "node", arg: 2, scope: !8659, file: !675, line: 298, type: !1297)
!8665 = !DILocation(line: 0, scope: !8659)
!8666 = !DILocation(line: 298, column: 1, scope: !8659)
!8667 = !DILocation(line: 298, column: 1, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8659, file: !675, line: 298, column: 1)
!8669 = !DILocation(line: 298, column: 1, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8668, file: !675, line: 298, column: 1)
!8671 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !675, file: !675, line: 231, type: !8672, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8674)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{!1297, !8598}
!8674 = !{!8675}
!8675 = !DILocalVariable(name: "list", arg: 1, scope: !8671, file: !675, line: 231, type: !8598)
!8676 = !DILocation(line: 0, scope: !8671)
!8677 = !DILocation(line: 233, column: 15, scope: !8671)
!8678 = !DILocation(line: 233, column: 2, scope: !8671)
!8679 = distinct !DISubprogram(name: "z_snode_next_set", scope: !675, file: !675, line: 209, type: !8680, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8682)
!8680 = !DISubroutineType(types: !8681)
!8681 = !{null, !1297, !1297}
!8682 = !{!8683, !8684}
!8683 = !DILocalVariable(name: "parent", arg: 1, scope: !8679, file: !675, line: 209, type: !1297)
!8684 = !DILocalVariable(name: "child", arg: 2, scope: !8679, file: !675, line: 209, type: !1297)
!8685 = !DILocation(line: 0, scope: !8679)
!8686 = !DILocation(line: 211, column: 10, scope: !8679)
!8687 = !DILocation(line: 211, column: 15, scope: !8679)
!8688 = !DILocation(line: 212, column: 1, scope: !8679)
!8689 = distinct !DISubprogram(name: "z_slist_head_set", scope: !675, file: !675, line: 214, type: !8660, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8690)
!8690 = !{!8691, !8692}
!8691 = !DILocalVariable(name: "list", arg: 1, scope: !8689, file: !675, line: 214, type: !8598)
!8692 = !DILocalVariable(name: "node", arg: 2, scope: !8689, file: !675, line: 214, type: !1297)
!8693 = !DILocation(line: 0, scope: !8689)
!8694 = !DILocation(line: 216, column: 8, scope: !8689)
!8695 = !DILocation(line: 216, column: 13, scope: !8689)
!8696 = !DILocation(line: 217, column: 1, scope: !8689)
!8697 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !675, file: !675, line: 243, type: !8672, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8698)
!8698 = !{!8699}
!8699 = !DILocalVariable(name: "list", arg: 1, scope: !8697, file: !675, line: 243, type: !8598)
!8700 = !DILocation(line: 0, scope: !8697)
!8701 = !DILocation(line: 245, column: 15, scope: !8697)
!8702 = !DILocation(line: 245, column: 2, scope: !8697)
!8703 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !675, file: !675, line: 219, type: !8660, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8704)
!8704 = !{!8705, !8706}
!8705 = !DILocalVariable(name: "list", arg: 1, scope: !8703, file: !675, line: 219, type: !8598)
!8706 = !DILocalVariable(name: "node", arg: 2, scope: !8703, file: !675, line: 219, type: !1297)
!8707 = !DILocation(line: 0, scope: !8703)
!8708 = !DILocation(line: 221, column: 8, scope: !8703)
!8709 = !DILocation(line: 221, column: 13, scope: !8703)
!8710 = !DILocation(line: 222, column: 1, scope: !8703)
!8711 = distinct !DISubprogram(name: "sys_slist_remove", scope: !675, file: !675, line: 401, type: !8712, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8714)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{null, !8598, !1297, !1297}
!8714 = !{!8715, !8716, !8717}
!8715 = !DILocalVariable(name: "list", arg: 1, scope: !8711, file: !675, line: 401, type: !8598)
!8716 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8711, file: !675, line: 401, type: !1297)
!8717 = !DILocalVariable(name: "node", arg: 3, scope: !8711, file: !675, line: 401, type: !1297)
!8718 = !DILocation(line: 0, scope: !8711)
!8719 = !DILocation(line: 401, column: 1, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8711, file: !675, line: 401, column: 1)
!8721 = !DILocation(line: 0, scope: !8720)
!8722 = !DILocation(line: 401, column: 1, scope: !8711)
!8723 = !DILocation(line: 401, column: 1, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8720, file: !675, line: 401, column: 1)
!8725 = !DILocation(line: 401, column: 1, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8724, file: !675, line: 401, column: 1)
!8727 = !DILocation(line: 401, column: 1, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8726, file: !675, line: 401, column: 1)
!8729 = !DILocation(line: 401, column: 1, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8720, file: !675, line: 401, column: 1)
!8731 = !DILocation(line: 401, column: 1, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8730, file: !675, line: 401, column: 1)
!8733 = !DILocation(line: 401, column: 1, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8732, file: !675, line: 401, column: 1)
!8735 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !675, file: !675, line: 285, type: !8736, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8738)
!8736 = !DISubroutineType(types: !8737)
!8737 = !{!1297, !1297}
!8738 = !{!8739}
!8739 = !DILocalVariable(name: "node", arg: 1, scope: !8735, file: !675, line: 285, type: !1297)
!8740 = !DILocation(line: 0, scope: !8735)
!8741 = !DILocation(line: 285, column: 1, scope: !8735)
!8742 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !675, file: !675, line: 274, type: !8736, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8743)
!8743 = !{!8744}
!8744 = !DILocalVariable(name: "node", arg: 1, scope: !8742, file: !675, line: 274, type: !1297)
!8745 = !DILocation(line: 0, scope: !8742)
!8746 = !DILocation(line: 274, column: 1, scope: !8742)
!8747 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !675, file: !675, line: 204, type: !8736, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8748)
!8748 = !{!8749}
!8749 = !DILocalVariable(name: "node", arg: 1, scope: !8747, file: !675, line: 204, type: !1297)
!8750 = !DILocation(line: 0, scope: !8747)
!8751 = !DILocation(line: 206, column: 15, scope: !8747)
!8752 = !DILocation(line: 206, column: 2, scope: !8747)
!8753 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1229, file: !1229, line: 342, type: !288, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8754)
!8754 = !{!8755, !8756, !8757}
!8755 = !DILocalVariable(name: "pin", arg: 1, scope: !8753, file: !1229, line: 342, type: !109)
!8756 = !DILocalVariable(name: "line", scope: !8753, file: !1229, line: 344, type: !110)
!8757 = !DILocalVariable(name: "port", scope: !8753, file: !1229, line: 345, type: !109)
!8758 = !DILocation(line: 0, scope: !8753)
!8759 = !DILocation(line: 344, column: 18, scope: !8753)
!8760 = !{i32 983040, i32 0}
!8761 = !DILocation(line: 356, column: 9, scope: !8753)
!8762 = !DILocation(line: 370, column: 2, scope: !8753)
!8763 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1229, file: !1229, line: 37, type: !828, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8764)
!8764 = !{!8765, !8766, !8767}
!8765 = !DILocalVariable(name: "line", arg: 1, scope: !8763, file: !1229, line: 37, type: !109)
!8766 = !DILocalVariable(name: "arg", arg: 2, scope: !8763, file: !1229, line: 37, type: !108)
!8767 = !DILocalVariable(name: "data", scope: !8763, file: !1229, line: 39, type: !8546)
!8768 = !DILocation(line: 0, scope: !8763)
!8769 = !DILocation(line: 41, column: 29, scope: !8763)
!8770 = !DILocation(line: 41, column: 39, scope: !8763)
!8771 = !DILocation(line: 41, column: 44, scope: !8763)
!8772 = !DILocation(line: 41, column: 2, scope: !8763)
!8773 = !DILocation(line: 42, column: 1, scope: !8763)
!8774 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1229, file: !1229, line: 376, type: !8775, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8777)
!8775 = !DISubroutineType(types: !8776)
!8776 = !{!109, !109, !109}
!8777 = !{!8778, !8779, !8780, !8782, !8783}
!8778 = !DILocalVariable(name: "port", arg: 1, scope: !8774, file: !1229, line: 376, type: !109)
!8779 = !DILocalVariable(name: "pin", arg: 2, scope: !8774, file: !1229, line: 376, type: !109)
!8780 = !DILocalVariable(name: "clk", scope: !8774, file: !1229, line: 386, type: !8781)
!8781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!8782 = !DILocalVariable(name: "pclken", scope: !8774, file: !1229, line: 387, type: !1332)
!8783 = !DILocalVariable(name: "ret", scope: !8774, file: !1229, line: 396, type: !109)
!8784 = !DILocation(line: 0, scope: !8774)
!8785 = !DILocation(line: 387, column: 2, scope: !8774)
!8786 = !DILocation(line: 387, column: 22, scope: !8774)
!8787 = !DILocation(line: 399, column: 8, scope: !8774)
!8788 = !DILocation(line: 400, column: 10, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8774, file: !1229, line: 400, column: 6)
!8790 = !DILocation(line: 400, column: 6, scope: !8774)
!8791 = !DILocation(line: 405, column: 2, scope: !8774)
!8792 = !DILocation(line: 407, column: 2, scope: !8774)
!8793 = !DILocation(line: 408, column: 1, scope: !8774)
!8794 = distinct !DISubprogram(name: "clock_control_on", scope: !905, file: !905, line: 123, type: !1194, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8795)
!8795 = !{!8796, !8797, !8798}
!8796 = !DILocalVariable(name: "dev", arg: 1, scope: !8794, file: !905, line: 123, type: !1096)
!8797 = !DILocalVariable(name: "sys", arg: 2, scope: !8794, file: !905, line: 124, type: !978)
!8798 = !DILocalVariable(name: "api", scope: !8794, file: !905, line: 126, type: !1187)
!8799 = !DILocation(line: 0, scope: !8794)
!8800 = !DILocation(line: 127, column: 49, scope: !8794)
!8801 = !DILocation(line: 129, column: 14, scope: !8794)
!8802 = !DILocation(line: 129, column: 9, scope: !8794)
!8803 = !DILocation(line: 129, column: 2, scope: !8794)
!8804 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1229, file: !1229, line: 311, type: !7954, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8805)
!8805 = !{!8806, !8807, !8808}
!8806 = !DILocalVariable(name: "port", arg: 1, scope: !8804, file: !1229, line: 311, type: !109)
!8807 = !DILocalVariable(name: "pin", arg: 2, scope: !8804, file: !1229, line: 311, type: !109)
!8808 = !DILocalVariable(name: "line", scope: !8804, file: !1229, line: 313, type: !110)
!8809 = !DILocation(line: 0, scope: !8804)
!8810 = !DILocation(line: 313, column: 18, scope: !8804)
!8811 = !DILocation(line: 337, column: 2, scope: !8804)
!8812 = !DILocation(line: 340, column: 1, scope: !8804)
!8813 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1229, file: !1229, line: 295, type: !8814, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8816)
!8814 = !DISubroutineType(types: !8815)
!8815 = !{!110, !109}
!8816 = !{!8817}
!8817 = !DILocalVariable(name: "pin", arg: 1, scope: !8813, file: !1229, line: 295, type: !109)
!8818 = !DILocation(line: 0, scope: !8813)
!8819 = !DILocation(line: 307, column: 46, scope: !8813)
!8820 = !DILocation(line: 307, column: 27, scope: !8813)
!8821 = !DILocation(line: 307, column: 32, scope: !8813)
!8822 = !DILocation(line: 307, column: 14, scope: !8813)
!8823 = !DILocation(line: 307, column: 39, scope: !8813)
!8824 = !DILocation(line: 307, column: 2, scope: !8813)
!8825 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !8826, file: !8826, line: 621, type: !8827, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8829)
!8826 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8827 = !DISubroutineType(types: !8828)
!8828 = !{null, !110, !110}
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "Port", arg: 1, scope: !8825, file: !8826, line: 621, type: !110)
!8831 = !DILocalVariable(name: "Line", arg: 2, scope: !8825, file: !8826, line: 621, type: !110)
!8832 = !DILocation(line: 0, scope: !8825)
!8833 = !DILocation(line: 623, column: 3, scope: !8825)
!8834 = !DILocalVariable(name: "value", arg: 1, scope: !8835, file: !6145, line: 373, type: !110)
!8835 = distinct !DISubprogram(name: "__RBIT", scope: !6145, file: !6145, line: 373, type: !7169, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8836)
!8836 = !{!8834, !8837}
!8837 = !DILocalVariable(name: "result", scope: !8835, file: !6145, line: 375, type: !110)
!8838 = !DILocation(line: 0, scope: !8835, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 623, column: 3, scope: !8825)
!8840 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !8839)
!8841 = !{i64 2450981}
!8842 = !DILocalVariable(name: "value", arg: 1, scope: !8843, file: !6145, line: 403, type: !110)
!8843 = distinct !DISubprogram(name: "__CLZ", scope: !6145, file: !6145, line: 403, type: !8844, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8846)
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!167, !110}
!8846 = !{!8842}
!8847 = !DILocation(line: 0, scope: !8843, inlinedAt: !8848)
!8848 = distinct !DILocation(line: 623, column: 3, scope: !8825)
!8849 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !8848)
!8850 = !DILocation(line: 624, column: 1, scope: !8825)
!8851 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8595, file: !8595, line: 69, type: !8852, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8854)
!8852 = !DISubroutineType(types: !8853)
!8853 = !{null, !8598, !1096, !110}
!8854 = !{!8855, !8856, !8857, !8858, !8859}
!8855 = !DILocalVariable(name: "list", arg: 1, scope: !8851, file: !8595, line: 69, type: !8598)
!8856 = !DILocalVariable(name: "port", arg: 2, scope: !8851, file: !8595, line: 70, type: !1096)
!8857 = !DILocalVariable(name: "pins", arg: 3, scope: !8851, file: !8595, line: 71, type: !110)
!8858 = !DILocalVariable(name: "cb", scope: !8851, file: !8595, line: 73, type: !1133)
!8859 = !DILocalVariable(name: "tmp", scope: !8851, file: !8595, line: 73, type: !1133)
!8860 = !DILocation(line: 0, scope: !8851)
!8861 = !DILocation(line: 75, column: 2, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8851, file: !8595, line: 75, column: 2)
!8863 = !DILocation(line: 0, scope: !8862)
!8864 = !DILocation(line: 76, column: 11, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !8595, line: 76, column: 7)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !8595, line: 75, column: 57)
!8867 = distinct !DILexicalBlock(scope: !8862, file: !8595, line: 75, column: 2)
!8868 = !DILocation(line: 76, column: 20, scope: !8865)
!8869 = !DILocation(line: 76, column: 7, scope: !8866)
!8870 = !DILocation(line: 77, column: 4, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !8595, line: 77, column: 4)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !8595, line: 77, column: 4)
!8873 = distinct !DILexicalBlock(scope: !8865, file: !8595, line: 76, column: 28)
!8874 = !DILocation(line: 77, column: 4, scope: !8872)
!8875 = !DILocation(line: 77, column: 4, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !8595, line: 77, column: 4)
!8877 = !DILocation(line: 78, column: 4, scope: !8873)
!8878 = !DILocation(line: 79, column: 3, scope: !8873)
!8879 = !DILocation(line: 75, column: 2, scope: !8867)
!8880 = !DILocation(line: 81, column: 1, scope: !8851)
!8881 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !8826, file: !8826, line: 721, type: !7169, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8882)
!8882 = !{!8883}
!8883 = !DILocalVariable(name: "Line", arg: 1, scope: !8881, file: !8826, line: 721, type: !110)
!8884 = !DILocation(line: 0, scope: !8881)
!8885 = !DILocation(line: 723, column: 21, scope: !8881)
!8886 = !DILocation(line: 0, scope: !8835, inlinedAt: !8887)
!8887 = distinct !DILocation(line: 723, column: 76, scope: !8881)
!8888 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !8887)
!8889 = !DILocation(line: 0, scope: !8843, inlinedAt: !8890)
!8890 = distinct !DILocation(line: 723, column: 76, scope: !8881)
!8891 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !8890)
!8892 = !DILocation(line: 723, column: 73, scope: !8881)
!8893 = !DILocation(line: 723, column: 3, scope: !8881)
!8894 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8895, file: !8895, line: 913, type: !8896, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8898)
!8895 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8896 = !DISubroutineType(types: !8897)
!8897 = !{null, !1163, !110}
!8898 = !{!8899, !8900}
!8899 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8894, file: !8895, line: 913, type: !1163)
!8900 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8894, file: !8895, line: 913, type: !110)
!8901 = !DILocation(line: 0, scope: !8894)
!8902 = !DILocation(line: 918, column: 3, scope: !8894)
!8903 = !DILocation(line: 920, column: 1, scope: !8894)
!8904 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8895, file: !8895, line: 825, type: !8905, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8907)
!8905 = !DISubroutineType(types: !8906)
!8906 = !{!110, !1163}
!8907 = !{!8908}
!8908 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8904, file: !8895, line: 825, type: !1163)
!8909 = !DILocation(line: 0, scope: !8904)
!8910 = !DILocation(line: 827, column: 21, scope: !8904)
!8911 = !DILocation(line: 827, column: 3, scope: !8904)
!8912 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8895, file: !8895, line: 814, type: !8896, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8913)
!8913 = !{!8914, !8915}
!8914 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8912, file: !8895, line: 814, type: !1163)
!8915 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8912, file: !8895, line: 814, type: !110)
!8916 = !DILocation(line: 0, scope: !8912)
!8917 = !DILocation(line: 816, column: 3, scope: !8912)
!8918 = !DILocation(line: 817, column: 1, scope: !8912)
!8919 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8895, file: !8895, line: 773, type: !8905, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8920)
!8920 = !{!8921}
!8921 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8919, file: !8895, line: 773, type: !1163)
!8922 = !DILocation(line: 0, scope: !8919)
!8923 = !DILocation(line: 775, column: 21, scope: !8919)
!8924 = !DILocation(line: 775, column: 3, scope: !8919)
!8925 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1229, file: !1229, line: 47, type: !8926, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8928)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{!109, !644, !2572}
!8928 = !{!8929, !8930}
!8929 = !DILocalVariable(name: "flags", arg: 1, scope: !8925, file: !1229, line: 47, type: !644)
!8930 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8925, file: !1229, line: 47, type: !2572)
!8931 = !DILocation(line: 0, scope: !8925)
!8932 = !DILocation(line: 50, column: 13, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8925, file: !1229, line: 50, column: 6)
!8934 = !DILocation(line: 50, column: 28, scope: !8933)
!8935 = !DILocation(line: 50, column: 6, scope: !8925)
!8936 = !DILocation(line: 53, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8933, file: !1229, line: 50, column: 34)
!8938 = !DILocation(line: 55, column: 14, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8937, file: !1229, line: 55, column: 7)
!8940 = !DILocation(line: 55, column: 35, scope: !8939)
!8941 = !DILocation(line: 55, column: 7, scope: !8937)
!8942 = !DILocation(line: 56, column: 14, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !1229, line: 56, column: 8)
!8944 = distinct !DILexicalBlock(scope: !8939, file: !1229, line: 55, column: 41)
!8945 = !DILocation(line: 56, column: 8, scope: !8944)
!8946 = !DILocation(line: 0, scope: !8939)
!8947 = !DILocation(line: 66, column: 14, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8937, file: !1229, line: 66, column: 7)
!8949 = !DILocation(line: 66, column: 30, scope: !8948)
!8950 = !DILocation(line: 66, column: 7, scope: !8937)
!8951 = !DILocation(line: 67, column: 12, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !1229, line: 66, column: 36)
!8953 = !DILocation(line: 68, column: 3, scope: !8952)
!8954 = !DILocation(line: 68, column: 21, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8948, file: !1229, line: 68, column: 14)
!8956 = !DILocation(line: 68, column: 39, scope: !8955)
!8957 = !DILocation(line: 68, column: 14, scope: !8948)
!8958 = !DILocation(line: 69, column: 12, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8955, file: !1229, line: 68, column: 45)
!8960 = !DILocation(line: 70, column: 3, scope: !8959)
!8961 = !DILocation(line: 72, column: 21, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8933, file: !1229, line: 72, column: 14)
!8963 = !DILocation(line: 72, column: 35, scope: !8962)
!8964 = !DILocation(line: 72, column: 14, scope: !8933)
!8965 = !DILocation(line: 77, column: 14, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !1229, line: 77, column: 7)
!8967 = distinct !DILexicalBlock(scope: !8962, file: !1229, line: 72, column: 41)
!8968 = !DILocation(line: 77, column: 30, scope: !8966)
!8969 = !DILocation(line: 77, column: 7, scope: !8967)
!8970 = !DILocation(line: 0, scope: !8933)
!8971 = !DILocation(line: 90, column: 1, scope: !8925)
!8972 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1229, file: !1229, line: 157, type: !8973, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !8975)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{null, !1096, !109, !109, !109}
!8975 = !{!8976, !8977, !8978, !8979, !8980, !8981, !8982, !8983, !8984, !8985, !8986}
!8976 = !DILocalVariable(name: "dev", arg: 1, scope: !8972, file: !1229, line: 157, type: !1096)
!8977 = !DILocalVariable(name: "pin", arg: 2, scope: !8972, file: !1229, line: 157, type: !109)
!8978 = !DILocalVariable(name: "conf", arg: 3, scope: !8972, file: !1229, line: 158, type: !109)
!8979 = !DILocalVariable(name: "func", arg: 4, scope: !8972, file: !1229, line: 158, type: !109)
!8980 = !DILocalVariable(name: "cfg", scope: !8972, file: !1229, line: 160, type: !8479)
!8981 = !DILocalVariable(name: "gpio", scope: !8972, file: !1229, line: 161, type: !1163)
!8982 = !DILocalVariable(name: "pin_ll", scope: !8972, file: !1229, line: 163, type: !109)
!8983 = !DILocalVariable(name: "mode", scope: !8972, file: !1229, line: 227, type: !32)
!8984 = !DILocalVariable(name: "otype", scope: !8972, file: !1229, line: 227, type: !32)
!8985 = !DILocalVariable(name: "ospeed", scope: !8972, file: !1229, line: 227, type: !32)
!8986 = !DILocalVariable(name: "pupd", scope: !8972, file: !1229, line: 227, type: !32)
!8987 = !DILocation(line: 0, scope: !8972)
!8988 = !DILocation(line: 160, column: 45, scope: !8972)
!8989 = !DILocation(line: 161, column: 44, scope: !8972)
!8990 = !DILocation(line: 163, column: 15, scope: !8972)
!8991 = !DILocation(line: 229, column: 14, scope: !8972)
!8992 = !DILocation(line: 246, column: 47, scope: !8972)
!8993 = !DILocation(line: 246, column: 2, scope: !8972)
!8994 = !DILocation(line: 248, column: 43, scope: !8972)
!8995 = !DILocation(line: 248, column: 2, scope: !8972)
!8996 = !DILocation(line: 250, column: 40, scope: !8972)
!8997 = !DILocation(line: 250, column: 2, scope: !8972)
!8998 = !DILocation(line: 252, column: 11, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8972, file: !1229, line: 252, column: 6)
!9000 = !DILocation(line: 252, column: 6, scope: !8972)
!9001 = !DILocation(line: 253, column: 11, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !1229, line: 253, column: 7)
!9003 = distinct !DILexicalBlock(scope: !8999, file: !1229, line: 252, column: 36)
!9004 = !DILocation(line: 253, column: 7, scope: !9003)
!9005 = !DILocation(line: 254, column: 4, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !1229, line: 253, column: 16)
!9007 = !DILocation(line: 255, column: 3, scope: !9006)
!9008 = !DILocation(line: 256, column: 4, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9002, file: !1229, line: 255, column: 10)
!9010 = !DILocation(line: 260, column: 40, scope: !8972)
!9011 = !DILocation(line: 260, column: 2, scope: !8972)
!9012 = !DILocation(line: 265, column: 1, scope: !8972)
!9013 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1229, file: !1229, line: 137, type: !8814, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9014)
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "pin", arg: 1, scope: !9013, file: !1229, line: 137, type: !109)
!9016 = !DILocalVariable(name: "pinval", scope: !9013, file: !1229, line: 139, type: !110)
!9017 = !DILocation(line: 0, scope: !9013)
!9018 = !DILocation(line: 149, column: 13, scope: !9013)
!9019 = !DILocation(line: 151, column: 2, scope: !9013)
!9020 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8895, file: !8895, line: 343, type: !9021, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{null, !1163, !110, !110}
!9023 = !{!9024, !9025, !9026}
!9024 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9020, file: !8895, line: 343, type: !1163)
!9025 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9020, file: !8895, line: 343, type: !110)
!9026 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9020, file: !8895, line: 343, type: !110)
!9027 = !DILocation(line: 0, scope: !9020)
!9028 = !DILocation(line: 345, column: 3, scope: !9020)
!9029 = !DILocation(line: 346, column: 1, scope: !9020)
!9030 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8895, file: !8895, line: 414, type: !9021, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9031)
!9031 = !{!9032, !9033, !9034}
!9032 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9030, file: !8895, line: 414, type: !1163)
!9033 = !DILocalVariable(name: "Pin", arg: 2, scope: !9030, file: !8895, line: 414, type: !110)
!9034 = !DILocalVariable(name: "Speed", arg: 3, scope: !9030, file: !8895, line: 414, type: !110)
!9035 = !DILocation(line: 0, scope: !9030)
!9036 = !DILocation(line: 416, column: 3, scope: !9030)
!9037 = !DILocation(line: 0, scope: !8835, inlinedAt: !9038)
!9038 = distinct !DILocation(line: 416, column: 3, scope: !9030)
!9039 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !9038)
!9040 = !DILocation(line: 0, scope: !8843, inlinedAt: !9041)
!9041 = distinct !DILocation(line: 416, column: 3, scope: !9030)
!9042 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !9041)
!9043 = !DILocation(line: 0, scope: !8835, inlinedAt: !9044)
!9044 = distinct !DILocation(line: 416, column: 3, scope: !9030)
!9045 = !DILocation(line: 0, scope: !8843, inlinedAt: !9046)
!9046 = distinct !DILocation(line: 416, column: 3, scope: !9030)
!9047 = !DILocation(line: 418, column: 1, scope: !9030)
!9048 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8895, file: !8895, line: 485, type: !9021, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9049)
!9049 = !{!9050, !9051, !9052}
!9050 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9048, file: !8895, line: 485, type: !1163)
!9051 = !DILocalVariable(name: "Pin", arg: 2, scope: !9048, file: !8895, line: 485, type: !110)
!9052 = !DILocalVariable(name: "Pull", arg: 3, scope: !9048, file: !8895, line: 485, type: !110)
!9053 = !DILocation(line: 0, scope: !9048)
!9054 = !DILocation(line: 487, column: 3, scope: !9048)
!9055 = !DILocation(line: 0, scope: !8835, inlinedAt: !9056)
!9056 = distinct !DILocation(line: 487, column: 3, scope: !9048)
!9057 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !9056)
!9058 = !DILocation(line: 0, scope: !8843, inlinedAt: !9059)
!9059 = distinct !DILocation(line: 487, column: 3, scope: !9048)
!9060 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !9059)
!9061 = !DILocation(line: 0, scope: !8835, inlinedAt: !9062)
!9062 = distinct !DILocation(line: 487, column: 3, scope: !9048)
!9063 = !DILocation(line: 0, scope: !8843, inlinedAt: !9064)
!9064 = distinct !DILocation(line: 487, column: 3, scope: !9048)
!9065 = !DILocation(line: 488, column: 1, scope: !9048)
!9066 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8895, file: !8895, line: 557, type: !9021, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9067)
!9067 = !{!9068, !9069, !9070}
!9068 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9066, file: !8895, line: 557, type: !1163)
!9069 = !DILocalVariable(name: "Pin", arg: 2, scope: !9066, file: !8895, line: 557, type: !110)
!9070 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9066, file: !8895, line: 557, type: !110)
!9071 = !DILocation(line: 0, scope: !9066)
!9072 = !DILocation(line: 559, column: 3, scope: !9066)
!9073 = !DILocation(line: 0, scope: !8835, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 559, column: 3, scope: !9066)
!9075 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !9074)
!9076 = !DILocation(line: 0, scope: !8843, inlinedAt: !9077)
!9077 = distinct !DILocation(line: 559, column: 3, scope: !9066)
!9078 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !9077)
!9079 = !DILocation(line: 0, scope: !8835, inlinedAt: !9080)
!9080 = distinct !DILocation(line: 559, column: 3, scope: !9066)
!9081 = !DILocation(line: 0, scope: !8843, inlinedAt: !9082)
!9082 = distinct !DILocation(line: 559, column: 3, scope: !9066)
!9083 = !DILocation(line: 561, column: 1, scope: !9066)
!9084 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8895, file: !8895, line: 634, type: !9021, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9085)
!9085 = !{!9086, !9087, !9088}
!9086 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9084, file: !8895, line: 634, type: !1163)
!9087 = !DILocalVariable(name: "Pin", arg: 2, scope: !9084, file: !8895, line: 634, type: !110)
!9088 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9084, file: !8895, line: 634, type: !110)
!9089 = !DILocation(line: 0, scope: !9084)
!9090 = !DILocation(line: 636, column: 3, scope: !9084)
!9091 = !DILocation(line: 0, scope: !8835, inlinedAt: !9092)
!9092 = distinct !DILocation(line: 636, column: 3, scope: !9084)
!9093 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !9092)
!9094 = !DILocation(line: 0, scope: !8843, inlinedAt: !9095)
!9095 = distinct !DILocation(line: 636, column: 3, scope: !9084)
!9096 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !9095)
!9097 = !DILocation(line: 0, scope: !8835, inlinedAt: !9098)
!9098 = distinct !DILocation(line: 636, column: 3, scope: !9084)
!9099 = !DILocation(line: 0, scope: !8843, inlinedAt: !9100)
!9100 = distinct !DILocation(line: 636, column: 3, scope: !9084)
!9101 = !DILocation(line: 638, column: 1, scope: !9084)
!9102 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8895, file: !8895, line: 274, type: !9021, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9103)
!9103 = !{!9104, !9105, !9106}
!9104 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9102, file: !8895, line: 274, type: !1163)
!9105 = !DILocalVariable(name: "Pin", arg: 2, scope: !9102, file: !8895, line: 274, type: !110)
!9106 = !DILocalVariable(name: "Mode", arg: 3, scope: !9102, file: !8895, line: 274, type: !110)
!9107 = !DILocation(line: 0, scope: !9102)
!9108 = !DILocation(line: 276, column: 3, scope: !9102)
!9109 = !DILocation(line: 0, scope: !8835, inlinedAt: !9110)
!9110 = distinct !DILocation(line: 276, column: 3, scope: !9102)
!9111 = !DILocation(line: 380, column: 4, scope: !8835, inlinedAt: !9110)
!9112 = !DILocation(line: 0, scope: !8843, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 276, column: 3, scope: !9102)
!9114 = !DILocation(line: 414, column: 7, scope: !8843, inlinedAt: !9113)
!9115 = !DILocation(line: 0, scope: !8835, inlinedAt: !9116)
!9116 = distinct !DILocation(line: 276, column: 3, scope: !9102)
!9117 = !DILocation(line: 0, scope: !8843, inlinedAt: !9118)
!9118 = distinct !DILocation(line: 276, column: 3, scope: !9102)
!9119 = !DILocation(line: 277, column: 1, scope: !9102)
!9120 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1229, file: !1229, line: 698, type: !1242, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9121)
!9121 = !{!9122, !9123, !9124}
!9122 = !DILocalVariable(name: "dev", arg: 1, scope: !9120, file: !1229, line: 698, type: !1096)
!9123 = !DILocalVariable(name: "data", scope: !9120, file: !1229, line: 700, type: !8546)
!9124 = !DILocalVariable(name: "ret", scope: !9120, file: !1229, line: 701, type: !109)
!9125 = !DILocation(line: 0, scope: !9120)
!9126 = !DILocation(line: 700, column: 38, scope: !9120)
!9127 = !DILocation(line: 703, column: 8, scope: !9120)
!9128 = !DILocation(line: 703, column: 12, scope: !9120)
!9129 = !DILocation(line: 705, column: 7, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9120, file: !1229, line: 705, column: 6)
!9131 = !DILocation(line: 705, column: 6, scope: !9120)
!9132 = !DILocation(line: 722, column: 8, scope: !9120)
!9133 = !DILocation(line: 723, column: 10, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9120, file: !1229, line: 723, column: 6)
!9135 = !DILocation(line: 723, column: 6, scope: !9120)
!9136 = !DILocation(line: 731, column: 1, scope: !9120)
!9137 = distinct !DISubprogram(name: "device_is_ready", scope: !7676, file: !7676, line: 47, type: !9138, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9140)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!347, !1096}
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "dev", arg: 1, scope: !9137, file: !7676, line: 47, type: !1096)
!9142 = !DILocation(line: 0, scope: !9137)
!9143 = !DILocation(line: 55, column: 2, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9137, file: !7676, line: 55, column: 2)
!9145 = !{i64 2152414271}
!9146 = !DILocation(line: 56, column: 9, scope: !9137)
!9147 = !DILocation(line: 56, column: 2, scope: !9137)
!9148 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1229, file: !1229, line: 270, type: !9149, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9151)
!9149 = !DISubroutineType(types: !9150)
!9150 = !{!109, !1096, !347}
!9151 = !{!9152, !9153, !9154, !9155, !9156}
!9152 = !DILocalVariable(name: "dev", arg: 1, scope: !9148, file: !1229, line: 270, type: !1096)
!9153 = !DILocalVariable(name: "on", arg: 2, scope: !9148, file: !1229, line: 270, type: !347)
!9154 = !DILocalVariable(name: "cfg", scope: !9148, file: !1229, line: 272, type: !8479)
!9155 = !DILocalVariable(name: "ret", scope: !9148, file: !1229, line: 273, type: !109)
!9156 = !DILocalVariable(name: "clk", scope: !9148, file: !1229, line: 278, type: !8781)
!9157 = !DILocation(line: 0, scope: !9148)
!9158 = !DILocation(line: 272, column: 45, scope: !9148)
!9159 = !DILocation(line: 282, column: 38, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !1229, line: 280, column: 10)
!9161 = distinct !DILexicalBlock(scope: !9148, file: !1229, line: 280, column: 6)
!9162 = !DILocation(line: 282, column: 6, scope: !9160)
!9163 = !DILocation(line: 281, column: 9, scope: !9160)
!9164 = !DILocation(line: 293, column: 1, scope: !9148)
!9165 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9138, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9166)
!9166 = !{!9167}
!9167 = !DILocalVariable(name: "dev", arg: 1, scope: !9165, file: !334, line: 730, type: !1096)
!9168 = !DILocation(line: 0, scope: !9165)
!9169 = !DILocation(line: 732, column: 9, scope: !9165)
!9170 = !DILocation(line: 732, column: 2, scope: !9165)
!9171 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1229, file: !1229, line: 496, type: !9172, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1078, retainedNodes: !9174)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{!109, !1096, !109, !109, !109}
!9174 = !{!9175, !9176, !9177, !9178, !9179, !9180}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9171, file: !1229, line: 496, type: !1096)
!9176 = !DILocalVariable(name: "pin", arg: 2, scope: !9171, file: !1229, line: 496, type: !109)
!9177 = !DILocalVariable(name: "conf", arg: 3, scope: !9171, file: !1229, line: 496, type: !109)
!9178 = !DILocalVariable(name: "func", arg: 4, scope: !9171, file: !1229, line: 496, type: !109)
!9179 = !DILocalVariable(name: "ret", scope: !9171, file: !1229, line: 498, type: !109)
!9180 = !DILocalVariable(name: "gpio_out", scope: !9181, file: !1229, line: 508, type: !110)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !1229, line: 507, column: 27)
!9182 = distinct !DILexicalBlock(scope: !9171, file: !1229, line: 507, column: 6)
!9183 = !DILocation(line: 0, scope: !9171)
!9184 = !DILocation(line: 505, column: 2, scope: !9171)
!9185 = !DILocation(line: 507, column: 11, scope: !9182)
!9186 = !DILocation(line: 507, column: 6, scope: !9171)
!9187 = !DILocation(line: 508, column: 28, scope: !9181)
!9188 = !DILocation(line: 0, scope: !9181)
!9189 = !DILocation(line: 510, column: 16, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9181, file: !1229, line: 510, column: 7)
!9191 = !DILocation(line: 0, scope: !9190)
!9192 = !DILocation(line: 510, column: 7, scope: !9181)
!9193 = !DILocation(line: 511, column: 4, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9190, file: !1229, line: 510, column: 32)
!9195 = !DILocation(line: 512, column: 3, scope: !9194)
!9196 = !DILocation(line: 513, column: 4, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !1229, line: 512, column: 39)
!9198 = distinct !DILexicalBlock(scope: !9190, file: !1229, line: 512, column: 14)
!9199 = !DILocation(line: 514, column: 3, scope: !9197)
!9200 = !DILocation(line: 518, column: 1, scope: !9171)
!9201 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1484, file: !1484, line: 526, type: !1388, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9202)
!9202 = !{!9203, !9204, !9205}
!9203 = !DILocalVariable(name: "dev", arg: 1, scope: !9201, file: !1484, line: 526, type: !1390)
!9204 = !DILocalVariable(name: "c", arg: 2, scope: !9201, file: !1484, line: 526, type: !1039)
!9205 = !DILocalVariable(name: "config", scope: !9201, file: !1484, line: 528, type: !9206)
!9206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!9207 = !DILocation(line: 0, scope: !9201)
!9208 = !DILocation(line: 528, column: 48, scope: !9201)
!9209 = !DILocation(line: 531, column: 40, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9201, file: !1484, line: 531, column: 6)
!9211 = !DILocation(line: 531, column: 6, scope: !9210)
!9212 = !DILocation(line: 531, column: 6, scope: !9201)
!9213 = !DILocation(line: 532, column: 34, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9210, file: !1484, line: 531, column: 48)
!9215 = !DILocation(line: 532, column: 3, scope: !9214)
!9216 = !DILocation(line: 533, column: 2, scope: !9214)
!9217 = !DILocation(line: 539, column: 42, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9201, file: !1484, line: 539, column: 6)
!9219 = !DILocation(line: 539, column: 7, scope: !9218)
!9220 = !DILocation(line: 539, column: 6, scope: !9201)
!9221 = !DILocation(line: 543, column: 52, scope: !9201)
!9222 = !DILocation(line: 543, column: 22, scope: !9201)
!9223 = !DILocation(line: 543, column: 5, scope: !9201)
!9224 = !DILocation(line: 545, column: 2, scope: !9201)
!9225 = !DILocation(line: 546, column: 1, scope: !9201)
!9226 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1484, file: !1484, line: 548, type: !1407, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9227)
!9227 = !{!9228, !9229, !9230, !9231}
!9228 = !DILocalVariable(name: "dev", arg: 1, scope: !9226, file: !1484, line: 548, type: !1390)
!9229 = !DILocalVariable(name: "c", arg: 2, scope: !9226, file: !1484, line: 549, type: !168)
!9230 = !DILocalVariable(name: "config", scope: !9226, file: !1484, line: 551, type: !9206)
!9231 = !DILocalVariable(name: "key", scope: !9226, file: !1484, line: 555, type: !32)
!9232 = !DILocation(line: 0, scope: !9226)
!9233 = !DILocation(line: 551, column: 48, scope: !9226)
!9234 = !DILocation(line: 562, column: 2, scope: !9226)
!9235 = !DILocation(line: 563, column: 41, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !1484, line: 563, column: 7)
!9237 = distinct !DILexicalBlock(scope: !9226, file: !1484, line: 562, column: 12)
!9238 = !DILocation(line: 563, column: 7, scope: !9236)
!9239 = !DILocation(line: 563, column: 7, scope: !9237)
!9240 = !DILocation(line: 55, column: 2, scope: !9241, inlinedAt: !9245)
!9241 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9242)
!9242 = !{!9243, !9244}
!9243 = !DILocalVariable(name: "key", scope: !9241, file: !5954, line: 44, type: !32)
!9244 = !DILocalVariable(name: "tmp", scope: !9241, file: !5954, line: 53, type: !32)
!9245 = distinct !DILocation(line: 564, column: 10, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9236, file: !1484, line: 563, column: 49)
!9247 = !{i64 1700330}
!9248 = !DILocation(line: 0, scope: !9241, inlinedAt: !9245)
!9249 = !DILocation(line: 565, column: 42, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9246, file: !1484, line: 565, column: 8)
!9251 = !DILocation(line: 565, column: 8, scope: !9250)
!9252 = !DILocation(line: 565, column: 8, scope: !9246)
!9253 = !DILocalVariable(name: "key", arg: 1, scope: !9254, file: !5954, line: 84, type: !32)
!9254 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9255)
!9255 = !{!9253}
!9256 = !DILocation(line: 0, scope: !9254, inlinedAt: !9257)
!9257 = distinct !DILocation(line: 568, column: 4, scope: !9246)
!9258 = !DILocation(line: 95, column: 2, scope: !9254, inlinedAt: !9257)
!9259 = !{i64 1701147}
!9260 = !DILocation(line: 569, column: 3, scope: !9246)
!9261 = distinct !{!9261, !9234, !9262}
!9262 = !DILocation(line: 570, column: 2, scope: !9226)
!9263 = !DILocation(line: 592, column: 33, scope: !9226)
!9264 = !DILocation(line: 592, column: 2, scope: !9226)
!9265 = !DILocation(line: 0, scope: !9254, inlinedAt: !9266)
!9266 = distinct !DILocation(line: 593, column: 2, scope: !9226)
!9267 = !DILocation(line: 95, column: 2, scope: !9254, inlinedAt: !9266)
!9268 = !DILocation(line: 594, column: 1, scope: !9226)
!9269 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1484, file: !1484, line: 596, type: !1411, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9270)
!9270 = !{!9271, !9272, !9273}
!9271 = !DILocalVariable(name: "dev", arg: 1, scope: !9269, file: !1484, line: 596, type: !1390)
!9272 = !DILocalVariable(name: "config", scope: !9269, file: !1484, line: 598, type: !9206)
!9273 = !DILocalVariable(name: "err", scope: !9269, file: !1484, line: 599, type: !110)
!9274 = !DILocation(line: 0, scope: !9269)
!9275 = !DILocation(line: 598, column: 48, scope: !9269)
!9276 = !DILocation(line: 606, column: 40, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 606, column: 6)
!9278 = !DILocation(line: 606, column: 6, scope: !9277)
!9279 = !DILocation(line: 606, column: 6, scope: !9269)
!9280 = !DILocation(line: 610, column: 39, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 610, column: 6)
!9282 = !DILocation(line: 610, column: 6, scope: !9281)
!9283 = !DILocation(line: 610, column: 6, scope: !9269)
!9284 = !DILocation(line: 614, column: 39, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 614, column: 6)
!9286 = !DILocation(line: 614, column: 6, scope: !9285)
!9287 = !DILocation(line: 614, column: 6, scope: !9269)
!9288 = !DILocation(line: 619, column: 40, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 619, column: 6)
!9290 = !DILocation(line: 619, column: 6, scope: !9289)
!9291 = !DILocation(line: 619, column: 6, scope: !9269)
!9292 = !DILocation(line: 623, column: 10, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 623, column: 6)
!9294 = !DILocation(line: 623, column: 6, scope: !9269)
!9295 = !DILocation(line: 624, column: 34, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9293, file: !1484, line: 623, column: 24)
!9297 = !DILocation(line: 624, column: 3, scope: !9296)
!9298 = !DILocation(line: 625, column: 2, scope: !9296)
!9299 = !DILocation(line: 632, column: 10, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 632, column: 6)
!9301 = !DILocation(line: 632, column: 6, scope: !9269)
!9302 = !DILocation(line: 633, column: 34, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9300, file: !1484, line: 632, column: 32)
!9304 = !DILocation(line: 633, column: 3, scope: !9303)
!9305 = !DILocation(line: 634, column: 2, scope: !9303)
!9306 = !DILocation(line: 636, column: 10, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 636, column: 6)
!9308 = !DILocation(line: 636, column: 6, scope: !9269)
!9309 = !DILocation(line: 637, column: 33, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9307, file: !1484, line: 636, column: 31)
!9311 = !DILocation(line: 637, column: 3, scope: !9310)
!9312 = !DILocation(line: 638, column: 2, scope: !9310)
!9313 = !DILocation(line: 640, column: 10, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9269, file: !1484, line: 640, column: 6)
!9315 = !DILocation(line: 640, column: 6, scope: !9269)
!9316 = !DILocation(line: 641, column: 33, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9314, file: !1484, line: 640, column: 32)
!9318 = !DILocation(line: 641, column: 3, scope: !9317)
!9319 = !DILocation(line: 642, column: 2, scope: !9317)
!9320 = !DILocation(line: 646, column: 32, scope: !9269)
!9321 = !DILocation(line: 646, column: 2, scope: !9269)
!9322 = !DILocation(line: 648, column: 2, scope: !9269)
!9323 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1484, file: !1484, line: 419, type: !1415, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9324)
!9324 = !{!9325, !9326, !9327, !9328, !9330, !9331, !9332, !9333}
!9325 = !DILocalVariable(name: "dev", arg: 1, scope: !9323, file: !1484, line: 419, type: !1390)
!9326 = !DILocalVariable(name: "cfg", arg: 2, scope: !9323, file: !1484, line: 420, type: !1417)
!9327 = !DILocalVariable(name: "config", scope: !9323, file: !1484, line: 422, type: !9206)
!9328 = !DILocalVariable(name: "data", scope: !9323, file: !1484, line: 423, type: !9329)
!9329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!9330 = !DILocalVariable(name: "parity", scope: !9323, file: !1484, line: 424, type: !6405)
!9331 = !DILocalVariable(name: "stopbits", scope: !9323, file: !1484, line: 425, type: !6405)
!9332 = !DILocalVariable(name: "databits", scope: !9323, file: !1484, line: 426, type: !6405)
!9333 = !DILocalVariable(name: "flowctrl", scope: !9323, file: !1484, line: 428, type: !6405)
!9334 = !DILocation(line: 0, scope: !9323)
!9335 = !DILocation(line: 422, column: 48, scope: !9323)
!9336 = !DILocation(line: 423, column: 38, scope: !9323)
!9337 = !DILocation(line: 424, column: 56, scope: !9323)
!9338 = !DILocation(line: 424, column: 51, scope: !9323)
!9339 = !DILocation(line: 424, column: 26, scope: !9323)
!9340 = !DILocation(line: 425, column: 60, scope: !9323)
!9341 = !DILocation(line: 425, column: 55, scope: !9323)
!9342 = !DILocation(line: 425, column: 28, scope: !9323)
!9343 = !DILocation(line: 426, column: 60, scope: !9323)
!9344 = !DILocation(line: 426, column: 55, scope: !9323)
!9345 = !DILocation(line: 426, column: 28, scope: !9323)
!9346 = !DILocation(line: 428, column: 58, scope: !9323)
!9347 = !DILocation(line: 428, column: 53, scope: !9323)
!9348 = !DILocation(line: 428, column: 28, scope: !9323)
!9349 = !DILocation(line: 431, column: 44, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 431, column: 6)
!9351 = !DILocation(line: 438, column: 22, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 437, column: 6)
!9353 = !DILocation(line: 437, column: 6, scope: !9323)
!9354 = !DILocation(line: 448, column: 6, scope: !9323)
!9355 = !DILocation(line: 465, column: 47, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 465, column: 6)
!9357 = !DILocation(line: 475, column: 21, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 475, column: 6)
!9359 = !DILocation(line: 475, column: 6, scope: !9323)
!9360 = !DILocation(line: 476, column: 8, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !1484, line: 476, column: 7)
!9362 = distinct !DILexicalBlock(scope: !9358, file: !1484, line: 475, column: 49)
!9363 = !DILocation(line: 477, column: 34, scope: !9361)
!9364 = !DILocation(line: 476, column: 7, scope: !9362)
!9365 = !DILocation(line: 482, column: 27, scope: !9323)
!9366 = !DILocation(line: 482, column: 2, scope: !9323)
!9367 = !DILocation(line: 484, column: 16, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 484, column: 6)
!9369 = !DILocation(line: 484, column: 13, scope: !9368)
!9370 = !DILocation(line: 484, column: 6, scope: !9323)
!9371 = !DILocation(line: 485, column: 3, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9368, file: !1484, line: 484, column: 44)
!9373 = !DILocation(line: 486, column: 2, scope: !9372)
!9374 = !DILocation(line: 488, column: 18, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 488, column: 6)
!9376 = !DILocation(line: 488, column: 15, scope: !9375)
!9377 = !DILocation(line: 488, column: 6, scope: !9323)
!9378 = !DILocation(line: 489, column: 3, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9375, file: !1484, line: 488, column: 48)
!9380 = !DILocation(line: 490, column: 2, scope: !9379)
!9381 = !DILocation(line: 492, column: 18, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 492, column: 6)
!9383 = !DILocation(line: 492, column: 15, scope: !9382)
!9384 = !DILocation(line: 492, column: 6, scope: !9323)
!9385 = !DILocation(line: 493, column: 3, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9382, file: !1484, line: 492, column: 48)
!9387 = !DILocation(line: 494, column: 2, scope: !9386)
!9388 = !DILocation(line: 496, column: 18, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 496, column: 6)
!9390 = !DILocation(line: 496, column: 15, scope: !9389)
!9391 = !DILocation(line: 496, column: 6, scope: !9323)
!9392 = !DILocation(line: 497, column: 3, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !1484, line: 496, column: 46)
!9394 = !DILocation(line: 498, column: 2, scope: !9393)
!9395 = !DILocation(line: 500, column: 11, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9323, file: !1484, line: 500, column: 6)
!9397 = !DILocation(line: 500, column: 29, scope: !9396)
!9398 = !DILocation(line: 500, column: 20, scope: !9396)
!9399 = !DILocation(line: 500, column: 6, scope: !9323)
!9400 = !DILocation(line: 501, column: 3, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9396, file: !1484, line: 500, column: 40)
!9402 = !DILocation(line: 502, column: 26, scope: !9401)
!9403 = !DILocation(line: 502, column: 19, scope: !9401)
!9404 = !DILocation(line: 503, column: 2, scope: !9401)
!9405 = !DILocation(line: 505, column: 26, scope: !9323)
!9406 = !DILocation(line: 505, column: 2, scope: !9323)
!9407 = !DILocation(line: 506, column: 2, scope: !9323)
!9408 = !DILocation(line: 507, column: 1, scope: !9323)
!9409 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1484, file: !1484, line: 509, type: !1428, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "dev", arg: 1, scope: !9409, file: !1484, line: 509, type: !1390)
!9412 = !DILocalVariable(name: "cfg", arg: 2, scope: !9409, file: !1484, line: 510, type: !1430)
!9413 = !DILocalVariable(name: "data", scope: !9409, file: !1484, line: 512, type: !9329)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 512, column: 38, scope: !9409)
!9416 = !DILocation(line: 514, column: 24, scope: !9409)
!9417 = !DILocation(line: 514, column: 7, scope: !9409)
!9418 = !DILocation(line: 514, column: 16, scope: !9409)
!9419 = !DILocation(line: 515, column: 41, scope: !9409)
!9420 = !{i32 0, i32 1537}
!9421 = !DILocation(line: 515, column: 16, scope: !9409)
!9422 = !DILocation(line: 515, column: 7, scope: !9409)
!9423 = !DILocation(line: 515, column: 14, scope: !9409)
!9424 = !DILocation(line: 517, column: 3, scope: !9409)
!9425 = !{i32 0, i32 12289}
!9426 = !DILocation(line: 516, column: 19, scope: !9409)
!9427 = !DILocation(line: 516, column: 7, scope: !9409)
!9428 = !DILocation(line: 516, column: 17, scope: !9409)
!9429 = !DILocation(line: 519, column: 3, scope: !9409)
!9430 = !DILocation(line: 519, column: 33, scope: !9409)
!9431 = !DILocation(line: 518, column: 19, scope: !9409)
!9432 = !DILocation(line: 518, column: 7, scope: !9409)
!9433 = !DILocation(line: 518, column: 17, scope: !9409)
!9434 = !DILocation(line: 521, column: 3, scope: !9409)
!9435 = !{i32 0, i32 769}
!9436 = !DILocation(line: 520, column: 19, scope: !9409)
!9437 = !DILocation(line: 520, column: 7, scope: !9409)
!9438 = !DILocation(line: 520, column: 17, scope: !9409)
!9439 = !DILocation(line: 522, column: 2, scope: !9409)
!9440 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1484, file: !1484, line: 205, type: !9441, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!110, !1390}
!9443 = !{!9444, !9445}
!9444 = !DILocalVariable(name: "dev", arg: 1, scope: !9440, file: !1484, line: 205, type: !1390)
!9445 = !DILocalVariable(name: "config", scope: !9440, file: !1484, line: 207, type: !9206)
!9446 = !DILocation(line: 0, scope: !9440)
!9447 = !DILocation(line: 207, column: 48, scope: !9440)
!9448 = !DILocation(line: 209, column: 36, scope: !9440)
!9449 = !DILocation(line: 209, column: 9, scope: !9440)
!9450 = !DILocation(line: 209, column: 2, scope: !9440)
!9451 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1484, file: !1484, line: 270, type: !9452, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9454)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{!1356, !110}
!9454 = !{!9455}
!9455 = !DILocalVariable(name: "parity", arg: 1, scope: !9451, file: !1484, line: 270, type: !110)
!9456 = !DILocation(line: 0, scope: !9451)
!9457 = !DILocation(line: 272, column: 2, scope: !9451)
!9458 = !DILocation(line: 281, column: 1, scope: !9451)
!9459 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1484, file: !1484, line: 220, type: !9441, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9460)
!9460 = !{!9461, !9462}
!9461 = !DILocalVariable(name: "dev", arg: 1, scope: !9459, file: !1484, line: 220, type: !1390)
!9462 = !DILocalVariable(name: "config", scope: !9459, file: !1484, line: 222, type: !9206)
!9463 = !DILocation(line: 0, scope: !9459)
!9464 = !DILocation(line: 222, column: 48, scope: !9459)
!9465 = !DILocation(line: 224, column: 44, scope: !9459)
!9466 = !DILocation(line: 224, column: 9, scope: !9459)
!9467 = !DILocation(line: 224, column: 2, scope: !9459)
!9468 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1484, file: !1484, line: 304, type: !9469, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9471)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!1370, !110}
!9471 = !{!9472}
!9472 = !DILocalVariable(name: "sb", arg: 1, scope: !9468, file: !1484, line: 304, type: !110)
!9473 = !DILocation(line: 0, scope: !9468)
!9474 = !DILocation(line: 306, column: 2, scope: !9468)
!9475 = !DILocation(line: 0, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9468, file: !1484, line: 306, column: 14)
!9477 = !DILocation(line: 323, column: 1, scope: !9468)
!9478 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1484, file: !1484, line: 235, type: !9441, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9479)
!9479 = !{!9480, !9481}
!9480 = !DILocalVariable(name: "dev", arg: 1, scope: !9478, file: !1484, line: 235, type: !1390)
!9481 = !DILocalVariable(name: "config", scope: !9478, file: !1484, line: 237, type: !9206)
!9482 = !DILocation(line: 0, scope: !9478)
!9483 = !DILocation(line: 237, column: 48, scope: !9478)
!9484 = !DILocation(line: 239, column: 39, scope: !9478)
!9485 = !DILocation(line: 239, column: 9, scope: !9478)
!9486 = !DILocation(line: 239, column: 2, scope: !9478)
!9487 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1484, file: !1484, line: 355, type: !9488, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9490)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{!1363, !110, !110}
!9490 = !{!9491, !9492}
!9491 = !DILocalVariable(name: "db", arg: 1, scope: !9487, file: !1484, line: 355, type: !110)
!9492 = !DILocalVariable(name: "p", arg: 2, scope: !9487, file: !1484, line: 356, type: !110)
!9493 = !DILocation(line: 0, scope: !9487)
!9494 = !DILocation(line: 358, column: 2, scope: !9487)
!9495 = !DILocation(line: 384, column: 1, scope: !9487)
!9496 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1484, file: !1484, line: 250, type: !9441, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9497)
!9497 = !{!9498, !9499}
!9498 = !DILocalVariable(name: "dev", arg: 1, scope: !9496, file: !1484, line: 250, type: !1390)
!9499 = !DILocalVariable(name: "config", scope: !9496, file: !1484, line: 252, type: !9206)
!9500 = !DILocation(line: 0, scope: !9496)
!9501 = !DILocation(line: 252, column: 48, scope: !9496)
!9502 = !DILocation(line: 254, column: 40, scope: !9496)
!9503 = !DILocation(line: 254, column: 9, scope: !9496)
!9504 = !DILocation(line: 254, column: 2, scope: !9496)
!9505 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1484, file: !1484, line: 409, type: !9506, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9508)
!9506 = !DISubroutineType(types: !9507)
!9507 = !{!1376, !110}
!9508 = !{!9509}
!9509 = !DILocalVariable(name: "fc", arg: 1, scope: !9505, file: !1484, line: 409, type: !110)
!9510 = !DILocation(line: 0, scope: !9505)
!9511 = !DILocation(line: 411, column: 9, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9505, file: !1484, line: 411, column: 6)
!9513 = !DILocation(line: 416, column: 1, scope: !9505)
!9514 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9515, file: !9515, line: 966, type: !9516, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9518)
!9515 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9516 = !DISubroutineType(types: !9517)
!9517 = !{!110, !1431}
!9518 = !{!9519}
!9519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9514, file: !9515, line: 966, type: !1431)
!9520 = !DILocation(line: 0, scope: !9514)
!9521 = !DILocation(line: 968, column: 21, scope: !9514)
!9522 = !DILocation(line: 968, column: 3, scope: !9514)
!9523 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9515, file: !9515, line: 600, type: !9516, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9524)
!9524 = !{!9525}
!9525 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9523, file: !9515, line: 600, type: !1431)
!9526 = !DILocation(line: 0, scope: !9523)
!9527 = !DILocation(line: 602, column: 21, scope: !9523)
!9528 = !DILocation(line: 602, column: 3, scope: !9523)
!9529 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9515, file: !9515, line: 819, type: !9516, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9530)
!9530 = !{!9531}
!9531 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9529, file: !9515, line: 819, type: !1431)
!9532 = !DILocation(line: 0, scope: !9529)
!9533 = !DILocation(line: 821, column: 21, scope: !9529)
!9534 = !DILocation(line: 821, column: 3, scope: !9529)
!9535 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9515, file: !9515, line: 546, type: !9516, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9536)
!9536 = !{!9537}
!9537 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9535, file: !9515, line: 546, type: !1431)
!9538 = !DILocation(line: 0, scope: !9535)
!9539 = !DILocation(line: 548, column: 21, scope: !9535)
!9540 = !DILocation(line: 548, column: 3, scope: !9535)
!9541 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1484, file: !1484, line: 257, type: !9542, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9544)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{!110, !1356}
!9544 = !{!9545}
!9545 = !DILocalVariable(name: "parity", arg: 1, scope: !9541, file: !1484, line: 257, type: !1356)
!9546 = !DILocation(line: 0, scope: !9541)
!9547 = !DILocation(line: 259, column: 2, scope: !9541)
!9548 = !DILocation(line: 268, column: 1, scope: !9541)
!9549 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1484, file: !1484, line: 283, type: !9550, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!110, !1370}
!9552 = !{!9553}
!9553 = !DILocalVariable(name: "sb", arg: 1, scope: !9549, file: !1484, line: 283, type: !1370)
!9554 = !DILocation(line: 0, scope: !9549)
!9555 = !DILocation(line: 285, column: 2, scope: !9549)
!9556 = !DILocation(line: 0, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9549, file: !1484, line: 285, column: 14)
!9558 = !DILocation(line: 302, column: 1, scope: !9549)
!9559 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1484, file: !1484, line: 325, type: !9560, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!110, !1363, !1356}
!9562 = !{!9563, !9564}
!9563 = !DILocalVariable(name: "db", arg: 1, scope: !9559, file: !1484, line: 325, type: !1363)
!9564 = !DILocalVariable(name: "p", arg: 2, scope: !9559, file: !1484, line: 326, type: !1356)
!9565 = !DILocation(line: 0, scope: !9559)
!9566 = !DILocation(line: 328, column: 2, scope: !9559)
!9567 = !DILocation(line: 353, column: 1, scope: !9559)
!9568 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1484, file: !1484, line: 393, type: !9569, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9571)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{!110, !1376}
!9571 = !{!9572}
!9572 = !DILocalVariable(name: "fc", arg: 1, scope: !9568, file: !1484, line: 393, type: !1376)
!9573 = !DILocation(line: 0, scope: !9568)
!9574 = !DILocation(line: 395, column: 9, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9568, file: !1484, line: 395, column: 6)
!9576 = !DILocation(line: 400, column: 1, scope: !9568)
!9577 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9515, file: !9515, line: 423, type: !9578, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9580)
!9578 = !DISubroutineType(types: !9579)
!9579 = !{null, !1431}
!9580 = !{!9581}
!9581 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9577, file: !9515, line: 423, type: !1431)
!9582 = !DILocation(line: 0, scope: !9577)
!9583 = !DILocation(line: 425, column: 3, scope: !9577)
!9584 = !DILocation(line: 426, column: 1, scope: !9577)
!9585 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1484, file: !1484, line: 197, type: !9586, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9588)
!9586 = !DISubroutineType(types: !9587)
!9587 = !{null, !1390, !110}
!9588 = !{!9589, !9590, !9591}
!9589 = !DILocalVariable(name: "dev", arg: 1, scope: !9585, file: !1484, line: 197, type: !1390)
!9590 = !DILocalVariable(name: "parity", arg: 2, scope: !9585, file: !1484, line: 198, type: !110)
!9591 = !DILocalVariable(name: "config", scope: !9585, file: !1484, line: 200, type: !9206)
!9592 = !DILocation(line: 0, scope: !9585)
!9593 = !DILocation(line: 200, column: 48, scope: !9585)
!9594 = !DILocation(line: 202, column: 29, scope: !9585)
!9595 = !DILocation(line: 202, column: 2, scope: !9585)
!9596 = !DILocation(line: 203, column: 1, scope: !9585)
!9597 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1484, file: !1484, line: 212, type: !9586, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9598)
!9598 = !{!9599, !9600, !9601}
!9599 = !DILocalVariable(name: "dev", arg: 1, scope: !9597, file: !1484, line: 212, type: !1390)
!9600 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9597, file: !1484, line: 213, type: !110)
!9601 = !DILocalVariable(name: "config", scope: !9597, file: !1484, line: 215, type: !9206)
!9602 = !DILocation(line: 0, scope: !9597)
!9603 = !DILocation(line: 215, column: 48, scope: !9597)
!9604 = !DILocation(line: 217, column: 37, scope: !9597)
!9605 = !DILocation(line: 217, column: 2, scope: !9597)
!9606 = !DILocation(line: 218, column: 1, scope: !9597)
!9607 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1484, file: !1484, line: 227, type: !9586, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9608)
!9608 = !{!9609, !9610, !9611}
!9609 = !DILocalVariable(name: "dev", arg: 1, scope: !9607, file: !1484, line: 227, type: !1390)
!9610 = !DILocalVariable(name: "databits", arg: 2, scope: !9607, file: !1484, line: 228, type: !110)
!9611 = !DILocalVariable(name: "config", scope: !9607, file: !1484, line: 230, type: !9206)
!9612 = !DILocation(line: 0, scope: !9607)
!9613 = !DILocation(line: 230, column: 48, scope: !9607)
!9614 = !DILocation(line: 232, column: 32, scope: !9607)
!9615 = !DILocation(line: 232, column: 2, scope: !9607)
!9616 = !DILocation(line: 233, column: 1, scope: !9607)
!9617 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1484, file: !1484, line: 242, type: !9586, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9618)
!9618 = !{!9619, !9620, !9621}
!9619 = !DILocalVariable(name: "dev", arg: 1, scope: !9617, file: !1484, line: 242, type: !1390)
!9620 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9617, file: !1484, line: 243, type: !110)
!9621 = !DILocalVariable(name: "config", scope: !9617, file: !1484, line: 245, type: !9206)
!9622 = !DILocation(line: 0, scope: !9617)
!9623 = !DILocation(line: 245, column: 48, scope: !9617)
!9624 = !DILocation(line: 247, column: 33, scope: !9617)
!9625 = !DILocation(line: 247, column: 2, scope: !9617)
!9626 = !DILocation(line: 248, column: 1, scope: !9617)
!9627 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1484, file: !1484, line: 107, type: !9586, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9628)
!9628 = !{!9629, !9630, !9631, !9632, !9633}
!9629 = !DILocalVariable(name: "dev", arg: 1, scope: !9627, file: !1484, line: 107, type: !1390)
!9630 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9627, file: !1484, line: 107, type: !110)
!9631 = !DILocalVariable(name: "config", scope: !9627, file: !1484, line: 109, type: !9206)
!9632 = !DILocalVariable(name: "data", scope: !9627, file: !1484, line: 110, type: !9329)
!9633 = !DILocalVariable(name: "clock_rate", scope: !9627, file: !1484, line: 112, type: !110)
!9634 = !DILocation(line: 0, scope: !9627)
!9635 = !DILocation(line: 109, column: 48, scope: !9627)
!9636 = !DILocation(line: 110, column: 38, scope: !9627)
!9637 = !DILocation(line: 112, column: 2, scope: !9627)
!9638 = !DILocation(line: 123, column: 36, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !1484, line: 123, column: 7)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !1484, line: 122, column: 9)
!9641 = distinct !DILexicalBlock(scope: !9627, file: !1484, line: 115, column: 6)
!9642 = !DILocation(line: 124, column: 42, scope: !9639)
!9643 = !DILocation(line: 123, column: 7, scope: !9639)
!9644 = !DILocation(line: 125, column: 22, scope: !9639)
!9645 = !DILocation(line: 123, column: 7, scope: !9640)
!9646 = !DILocation(line: 176, column: 36, scope: !9627)
!9647 = !DILocation(line: 176, column: 3, scope: !9627)
!9648 = !DILocation(line: 179, column: 32, scope: !9627)
!9649 = !DILocation(line: 180, column: 10, scope: !9627)
!9650 = !DILocation(line: 179, column: 3, scope: !9627)
!9651 = !DILocation(line: 189, column: 3, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !1484, line: 189, column: 3)
!9653 = distinct !DILexicalBlock(scope: !9627, file: !1484, line: 189, column: 3)
!9654 = !DILocation(line: 189, column: 3, scope: !9653)
!9655 = !DILocation(line: 189, column: 3, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9652, file: !1484, line: 189, column: 3)
!9657 = !DILocation(line: 195, column: 1, scope: !9627)
!9658 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9515, file: !9515, line: 409, type: !9578, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9659)
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9658, file: !9515, line: 409, type: !1431)
!9661 = !DILocation(line: 0, scope: !9658)
!9662 = !DILocation(line: 411, column: 3, scope: !9658)
!9663 = !DILocation(line: 412, column: 1, scope: !9658)
!9664 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !905, file: !905, line: 216, type: !1464, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9665)
!9665 = !{!9666, !9667, !9668, !9669}
!9666 = !DILocalVariable(name: "dev", arg: 1, scope: !9664, file: !905, line: 216, type: !1390)
!9667 = !DILocalVariable(name: "sys", arg: 2, scope: !9664, file: !905, line: 217, type: !978)
!9668 = !DILocalVariable(name: "rate", arg: 3, scope: !9664, file: !905, line: 218, type: !936)
!9669 = !DILocalVariable(name: "api", scope: !9664, file: !905, line: 220, type: !1442)
!9670 = !DILocation(line: 0, scope: !9664)
!9671 = !DILocation(line: 221, column: 49, scope: !9664)
!9672 = !DILocation(line: 223, column: 11, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9664, file: !905, line: 223, column: 6)
!9674 = !DILocation(line: 223, column: 20, scope: !9673)
!9675 = !DILocation(line: 223, column: 6, scope: !9664)
!9676 = !DILocation(line: 227, column: 9, scope: !9664)
!9677 = !DILocation(line: 227, column: 2, scope: !9664)
!9678 = !DILocation(line: 228, column: 1, scope: !9664)
!9679 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9515, file: !9515, line: 614, type: !9680, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9682)
!9680 = !DISubroutineType(types: !9681)
!9681 = !{null, !1431, !110}
!9682 = !{!9683, !9684}
!9683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9679, file: !9515, line: 614, type: !1431)
!9684 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9679, file: !9515, line: 614, type: !110)
!9685 = !DILocation(line: 0, scope: !9679)
!9686 = !DILocation(line: 616, column: 3, scope: !9679)
!9687 = !DILocation(line: 617, column: 1, scope: !9679)
!9688 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9515, file: !9515, line: 1019, type: !9689, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9691)
!9689 = !DISubroutineType(types: !9690)
!9690 = !{null, !1431, !110, !110, !110}
!9691 = !{!9692, !9693, !9694, !9695}
!9692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9688, file: !9515, line: 1019, type: !1431)
!9693 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9688, file: !9515, line: 1019, type: !110)
!9694 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9688, file: !9515, line: 1019, type: !110)
!9695 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9688, file: !9515, line: 1020, type: !110)
!9696 = !DILocation(line: 0, scope: !9688)
!9697 = !DILocation(line: 1028, column: 30, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !9515, line: 1027, column: 3)
!9699 = distinct !DILexicalBlock(scope: !9688, file: !9515, line: 1022, column: 7)
!9700 = !DILocation(line: 1028, column: 19, scope: !9698)
!9701 = !DILocation(line: 1028, column: 13, scope: !9698)
!9702 = !DILocation(line: 1028, column: 17, scope: !9698)
!9703 = !DILocation(line: 1030, column: 1, scope: !9688)
!9704 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9515, file: !9515, line: 948, type: !9680, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9705)
!9705 = !{!9706, !9707}
!9706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9704, file: !9515, line: 948, type: !1431)
!9707 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9704, file: !9515, line: 948, type: !110)
!9708 = !DILocation(line: 0, scope: !9704)
!9709 = !DILocation(line: 950, column: 3, scope: !9704)
!9710 = !DILocation(line: 951, column: 1, scope: !9704)
!9711 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9515, file: !9515, line: 587, type: !9680, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9712)
!9712 = !{!9713, !9714}
!9713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9711, file: !9515, line: 587, type: !1431)
!9714 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9711, file: !9515, line: 587, type: !110)
!9715 = !DILocation(line: 0, scope: !9711)
!9716 = !DILocation(line: 589, column: 3, scope: !9711)
!9717 = !DILocation(line: 590, column: 1, scope: !9711)
!9718 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9515, file: !9515, line: 804, type: !9680, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9719)
!9719 = !{!9720, !9721}
!9720 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9718, file: !9515, line: 804, type: !1431)
!9721 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9718, file: !9515, line: 804, type: !110)
!9722 = !DILocation(line: 0, scope: !9718)
!9723 = !DILocation(line: 806, column: 3, scope: !9718)
!9724 = !DILocation(line: 807, column: 1, scope: !9718)
!9725 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9515, file: !9515, line: 531, type: !9680, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9726)
!9726 = !{!9727, !9728}
!9727 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9725, file: !9515, line: 531, type: !1431)
!9728 = !DILocalVariable(name: "Parity", arg: 2, scope: !9725, file: !9515, line: 531, type: !110)
!9729 = !DILocation(line: 0, scope: !9725)
!9730 = !DILocation(line: 533, column: 3, scope: !9725)
!9731 = !DILocation(line: 534, column: 1, scope: !9725)
!9732 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9515, file: !9515, line: 1769, type: !9516, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9733)
!9733 = !{!9734}
!9734 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9732, file: !9515, line: 1769, type: !1431)
!9735 = !DILocation(line: 0, scope: !9732)
!9736 = !DILocation(line: 1771, column: 11, scope: !9732)
!9737 = !DILocation(line: 1771, column: 46, scope: !9732)
!9738 = !DILocation(line: 1771, column: 3, scope: !9732)
!9739 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9515, file: !9515, line: 1736, type: !9516, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9740)
!9740 = !{!9741}
!9741 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9739, file: !9515, line: 1736, type: !1431)
!9742 = !DILocation(line: 0, scope: !9739)
!9743 = !DILocation(line: 1738, column: 11, scope: !9739)
!9744 = !DILocation(line: 1738, column: 3, scope: !9739)
!9745 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9515, file: !9515, line: 1747, type: !9516, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9746)
!9746 = !{!9747}
!9747 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9745, file: !9515, line: 1747, type: !1431)
!9748 = !DILocation(line: 0, scope: !9745)
!9749 = !DILocation(line: 1749, column: 11, scope: !9745)
!9750 = !DILocation(line: 1749, column: 45, scope: !9745)
!9751 = !DILocation(line: 1749, column: 3, scope: !9745)
!9752 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9515, file: !9515, line: 1826, type: !9516, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9753)
!9753 = !{!9754}
!9754 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9752, file: !9515, line: 1826, type: !1431)
!9755 = !DILocation(line: 0, scope: !9752)
!9756 = !DILocation(line: 1828, column: 11, scope: !9752)
!9757 = !DILocation(line: 1828, column: 46, scope: !9752)
!9758 = !DILocation(line: 1828, column: 3, scope: !9752)
!9759 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9515, file: !9515, line: 1991, type: !9578, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9760)
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9759, file: !9515, line: 1991, type: !1431)
!9762 = !DILocation(line: 0, scope: !9759)
!9763 = !DILocation(line: 1993, column: 3, scope: !9759)
!9764 = !DILocation(line: 1994, column: 1, scope: !9759)
!9765 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9515, file: !9515, line: 1933, type: !9578, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9766)
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9765, file: !9515, line: 1933, type: !1431)
!9768 = !DILocalVariable(name: "tmpreg", scope: !9765, file: !9515, line: 1935, type: !301)
!9769 = !DILocation(line: 0, scope: !9765)
!9770 = !DILocation(line: 1935, column: 3, scope: !9765)
!9771 = !DILocation(line: 1935, column: 17, scope: !9765)
!9772 = !DILocation(line: 1936, column: 20, scope: !9765)
!9773 = !DILocation(line: 1936, column: 10, scope: !9765)
!9774 = !DILocation(line: 1937, column: 10, scope: !9765)
!9775 = !DILocation(line: 1938, column: 20, scope: !9765)
!9776 = !DILocation(line: 1938, column: 10, scope: !9765)
!9777 = !DILocation(line: 1939, column: 10, scope: !9765)
!9778 = !DILocation(line: 1940, column: 1, scope: !9765)
!9779 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9515, file: !9515, line: 1876, type: !9578, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9780)
!9780 = !{!9781, !9782}
!9781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9779, file: !9515, line: 1876, type: !1431)
!9782 = !DILocalVariable(name: "tmpreg", scope: !9779, file: !9515, line: 1878, type: !301)
!9783 = !DILocation(line: 0, scope: !9779)
!9784 = !DILocation(line: 1878, column: 3, scope: !9779)
!9785 = !DILocation(line: 1878, column: 17, scope: !9779)
!9786 = !DILocation(line: 1879, column: 20, scope: !9779)
!9787 = !DILocation(line: 1879, column: 10, scope: !9779)
!9788 = !DILocation(line: 1880, column: 10, scope: !9779)
!9789 = !DILocation(line: 1881, column: 20, scope: !9779)
!9790 = !DILocation(line: 1881, column: 10, scope: !9779)
!9791 = !DILocation(line: 1882, column: 10, scope: !9779)
!9792 = !DILocation(line: 1883, column: 1, scope: !9779)
!9793 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9515, file: !9515, line: 1895, type: !9578, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9794)
!9794 = !{!9795, !9796}
!9795 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9793, file: !9515, line: 1895, type: !1431)
!9796 = !DILocalVariable(name: "tmpreg", scope: !9793, file: !9515, line: 1897, type: !301)
!9797 = !DILocation(line: 0, scope: !9793)
!9798 = !DILocation(line: 1897, column: 3, scope: !9793)
!9799 = !DILocation(line: 1897, column: 17, scope: !9793)
!9800 = !DILocation(line: 1898, column: 20, scope: !9793)
!9801 = !DILocation(line: 1898, column: 10, scope: !9793)
!9802 = !DILocation(line: 1899, column: 10, scope: !9793)
!9803 = !DILocation(line: 1900, column: 20, scope: !9793)
!9804 = !DILocation(line: 1900, column: 10, scope: !9793)
!9805 = !DILocation(line: 1901, column: 10, scope: !9793)
!9806 = !DILocation(line: 1902, column: 1, scope: !9793)
!9807 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9515, file: !9515, line: 1914, type: !9578, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9808)
!9808 = !{!9809, !9810}
!9809 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9807, file: !9515, line: 1914, type: !1431)
!9810 = !DILocalVariable(name: "tmpreg", scope: !9807, file: !9515, line: 1916, type: !301)
!9811 = !DILocation(line: 0, scope: !9807)
!9812 = !DILocation(line: 1916, column: 3, scope: !9807)
!9813 = !DILocation(line: 1916, column: 17, scope: !9807)
!9814 = !DILocation(line: 1917, column: 20, scope: !9807)
!9815 = !DILocation(line: 1917, column: 10, scope: !9807)
!9816 = !DILocation(line: 1918, column: 10, scope: !9807)
!9817 = !DILocation(line: 1919, column: 20, scope: !9807)
!9818 = !DILocation(line: 1919, column: 10, scope: !9807)
!9819 = !DILocation(line: 1920, column: 10, scope: !9807)
!9820 = !DILocation(line: 1921, column: 1, scope: !9807)
!9821 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9515, file: !9515, line: 1813, type: !9516, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9822)
!9822 = !{!9823}
!9823 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9821, file: !9515, line: 1813, type: !1431)
!9824 = !DILocation(line: 0, scope: !9821)
!9825 = !DILocation(line: 1815, column: 11, scope: !9821)
!9826 = !DILocation(line: 1815, column: 46, scope: !9821)
!9827 = !DILocation(line: 1815, column: 3, scope: !9821)
!9828 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9515, file: !9515, line: 2425, type: !9829, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9831)
!9829 = !DISubroutineType(types: !9830)
!9830 = !{null, !1431, !167}
!9831 = !{!9832, !9833}
!9832 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9828, file: !9515, line: 2425, type: !1431)
!9833 = !DILocalVariable(name: "Value", arg: 2, scope: !9828, file: !9515, line: 2425, type: !167)
!9834 = !DILocation(line: 0, scope: !9828)
!9835 = !DILocation(line: 2427, column: 16, scope: !9828)
!9836 = !DILocation(line: 2427, column: 11, scope: !9828)
!9837 = !DILocation(line: 2427, column: 14, scope: !9828)
!9838 = !DILocation(line: 2428, column: 1, scope: !9828)
!9839 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9515, file: !9515, line: 1791, type: !9516, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9840)
!9840 = !{!9841}
!9841 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9839, file: !9515, line: 1791, type: !1431)
!9842 = !DILocation(line: 0, scope: !9839)
!9843 = !DILocation(line: 1793, column: 11, scope: !9839)
!9844 = !DILocation(line: 1793, column: 47, scope: !9839)
!9845 = !DILocation(line: 1793, column: 3, scope: !9839)
!9846 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9515, file: !9515, line: 2402, type: !9847, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9849)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!167, !1431}
!9849 = !{!9850}
!9850 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9846, file: !9515, line: 2402, type: !1431)
!9851 = !DILocation(line: 0, scope: !9846)
!9852 = !DILocation(line: 2404, column: 20, scope: !9846)
!9853 = !DILocation(line: 2404, column: 10, scope: !9846)
!9854 = !DILocation(line: 2404, column: 3, scope: !9846)
!9855 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1484, file: !1484, line: 1583, type: !1411, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9856)
!9856 = !{!9857, !9858, !9859, !9860, !9861, !9862}
!9857 = !DILocalVariable(name: "dev", arg: 1, scope: !9855, file: !1484, line: 1583, type: !1390)
!9858 = !DILocalVariable(name: "config", scope: !9855, file: !1484, line: 1585, type: !9206)
!9859 = !DILocalVariable(name: "data", scope: !9855, file: !1484, line: 1586, type: !9329)
!9860 = !DILocalVariable(name: "ll_parity", scope: !9855, file: !1484, line: 1587, type: !110)
!9861 = !DILocalVariable(name: "ll_datawidth", scope: !9855, file: !1484, line: 1588, type: !110)
!9862 = !DILocalVariable(name: "err", scope: !9855, file: !1484, line: 1589, type: !109)
!9863 = !DILocation(line: 0, scope: !9855)
!9864 = !DILocation(line: 1585, column: 48, scope: !9855)
!9865 = !DILocation(line: 1586, column: 38, scope: !9855)
!9866 = !DILocation(line: 1591, column: 2, scope: !9855)
!9867 = !DILocation(line: 1593, column: 29, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9855, file: !1484, line: 1593, column: 6)
!9869 = !DILocation(line: 1593, column: 7, scope: !9868)
!9870 = !DILocation(line: 1593, column: 6, scope: !9855)
!9871 = !DILocation(line: 1599, column: 31, scope: !9855)
!9872 = !DILocation(line: 1599, column: 71, scope: !9855)
!9873 = !DILocation(line: 1599, column: 8, scope: !9855)
!9874 = !DILocation(line: 1600, column: 10, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9855, file: !1484, line: 1600, column: 6)
!9876 = !DILocation(line: 1600, column: 6, scope: !9855)
!9877 = !DILocation(line: 1616, column: 36, scope: !9855)
!9878 = !DILocation(line: 1616, column: 8, scope: !9855)
!9879 = !DILocation(line: 1617, column: 10, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9855, file: !1484, line: 1617, column: 6)
!9881 = !DILocation(line: 1617, column: 6, scope: !9855)
!9882 = !DILocation(line: 1621, column: 27, scope: !9855)
!9883 = !DILocation(line: 1621, column: 2, scope: !9855)
!9884 = !DILocation(line: 1624, column: 40, scope: !9855)
!9885 = !DILocation(line: 1624, column: 2, scope: !9855)
!9886 = !DILocation(line: 1630, column: 14, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9855, file: !1484, line: 1630, column: 6)
!9888 = !DILocation(line: 1630, column: 6, scope: !9855)
!9889 = !DILocation(line: 1638, column: 2, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9891, file: !1484, line: 1634, column: 34)
!9891 = distinct !DILexicalBlock(scope: !9887, file: !1484, line: 1634, column: 13)
!9892 = !DILocation(line: 0, scope: !9887)
!9893 = !DILocation(line: 1649, column: 35, scope: !9855)
!9894 = !DILocation(line: 1649, column: 2, scope: !9855)
!9895 = !DILocation(line: 1654, column: 14, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9855, file: !1484, line: 1654, column: 6)
!9897 = !DILocation(line: 1654, column: 6, scope: !9855)
!9898 = !DILocation(line: 1655, column: 3, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9896, file: !1484, line: 1654, column: 31)
!9900 = !DILocation(line: 1656, column: 2, scope: !9899)
!9901 = !DILocation(line: 1659, column: 37, scope: !9855)
!9902 = !DILocation(line: 1659, column: 2, scope: !9855)
!9903 = !DILocation(line: 1662, column: 14, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9855, file: !1484, line: 1662, column: 6)
!9905 = !DILocation(line: 1662, column: 6, scope: !9855)
!9906 = !DILocation(line: 1663, column: 37, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9904, file: !1484, line: 1662, column: 27)
!9908 = !DILocation(line: 1663, column: 3, scope: !9907)
!9909 = !DILocation(line: 1664, column: 2, scope: !9907)
!9910 = !DILocation(line: 1684, column: 26, scope: !9855)
!9911 = !DILocation(line: 1684, column: 2, scope: !9855)
!9912 = !DILocation(line: 1722, column: 2, scope: !9855)
!9913 = !DILocation(line: 1724, column: 1, scope: !9855)
!9914 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1484, file: !1484, line: 651, type: !9915, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9917)
!9915 = !DISubroutineType(types: !9916)
!9916 = !{null, !1390}
!9917 = !{!9918, !9919, !9920}
!9918 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !1484, line: 651, type: !1390)
!9919 = !DILocalVariable(name: "data", scope: !9914, file: !1484, line: 653, type: !9329)
!9920 = !DILocalVariable(name: "clk", scope: !9914, file: !1484, line: 654, type: !9921)
!9921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!9922 = !DILocation(line: 0, scope: !9914)
!9923 = !DILocation(line: 653, column: 38, scope: !9914)
!9924 = !DILocation(line: 656, column: 8, scope: !9914)
!9925 = !DILocation(line: 656, column: 14, scope: !9914)
!9926 = !DILocation(line: 657, column: 1, scope: !9914)
!9927 = distinct !DISubprogram(name: "device_is_ready", scope: !7676, file: !7676, line: 47, type: !9928, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9930)
!9928 = !DISubroutineType(types: !9929)
!9929 = !{!347, !1390}
!9930 = !{!9931}
!9931 = !DILocalVariable(name: "dev", arg: 1, scope: !9927, file: !7676, line: 47, type: !1390)
!9932 = !DILocation(line: 0, scope: !9927)
!9933 = !DILocation(line: 55, column: 2, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9927, file: !7676, line: 55, column: 2)
!9935 = !{i64 2152505434}
!9936 = !DILocation(line: 56, column: 9, scope: !9927)
!9937 = !DILocation(line: 56, column: 2, scope: !9927)
!9938 = distinct !DISubprogram(name: "clock_control_on", scope: !905, file: !905, line: 123, type: !1449, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9939)
!9939 = !{!9940, !9941, !9942}
!9940 = !DILocalVariable(name: "dev", arg: 1, scope: !9938, file: !905, line: 123, type: !1390)
!9941 = !DILocalVariable(name: "sys", arg: 2, scope: !9938, file: !905, line: 124, type: !978)
!9942 = !DILocalVariable(name: "api", scope: !9938, file: !905, line: 126, type: !1442)
!9943 = !DILocation(line: 0, scope: !9938)
!9944 = !DILocation(line: 127, column: 49, scope: !9938)
!9945 = !DILocation(line: 129, column: 14, scope: !9938)
!9946 = !DILocation(line: 129, column: 9, scope: !9938)
!9947 = !DILocation(line: 129, column: 2, scope: !9938)
!9948 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1516, file: !1516, line: 342, type: !9949, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9951)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{!109, !1566, !167}
!9951 = !{!9952, !9953, !9954, !9955}
!9952 = !DILocalVariable(name: "config", arg: 1, scope: !9948, file: !1516, line: 342, type: !1566)
!9953 = !DILocalVariable(name: "id", arg: 2, scope: !9948, file: !1516, line: 343, type: !167)
!9954 = !DILocalVariable(name: "ret", scope: !9948, file: !1516, line: 345, type: !109)
!9955 = !DILocalVariable(name: "state", scope: !9948, file: !1516, line: 346, type: !1519)
!9956 = !DILocation(line: 0, scope: !9948)
!9957 = !DILocation(line: 346, column: 2, scope: !9948)
!9958 = !DILocation(line: 348, column: 8, scope: !9948)
!9959 = !DILocation(line: 349, column: 10, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9948, file: !1516, line: 349, column: 6)
!9961 = !DILocation(line: 349, column: 6, scope: !9948)
!9962 = !DILocation(line: 353, column: 44, scope: !9948)
!9963 = !DILocation(line: 353, column: 9, scope: !9948)
!9964 = !DILocation(line: 353, column: 2, scope: !9948)
!9965 = !DILocation(line: 354, column: 1, scope: !9948)
!9966 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9515, file: !9515, line: 496, type: !9680, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9967)
!9967 = !{!9968, !9969}
!9968 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9966, file: !9515, line: 496, type: !1431)
!9969 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9966, file: !9515, line: 496, type: !110)
!9970 = !DILocation(line: 0, scope: !9966)
!9971 = !DILocation(line: 498, column: 3, scope: !9966)
!9972 = !DILocation(line: 499, column: 1, scope: !9966)
!9973 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9515, file: !9515, line: 849, type: !9689, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9974)
!9974 = !{!9975, !9976, !9977, !9978}
!9975 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9973, file: !9515, line: 849, type: !1431)
!9976 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9973, file: !9515, line: 849, type: !110)
!9977 = !DILocalVariable(name: "Parity", arg: 3, scope: !9973, file: !9515, line: 849, type: !110)
!9978 = !DILocalVariable(name: "StopBits", arg: 4, scope: !9973, file: !9515, line: 850, type: !110)
!9979 = !DILocation(line: 0, scope: !9973)
!9980 = !DILocation(line: 852, column: 3, scope: !9973)
!9981 = !DILocation(line: 853, column: 3, scope: !9973)
!9982 = !DILocation(line: 854, column: 1, scope: !9973)
!9983 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9515, file: !9515, line: 1336, type: !9578, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9984)
!9984 = !{!9985}
!9985 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9983, file: !9515, line: 1336, type: !1431)
!9986 = !DILocation(line: 0, scope: !9983)
!9987 = !DILocation(line: 1338, column: 3, scope: !9983)
!9988 = !DILocation(line: 1339, column: 1, scope: !9983)
!9989 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1516, file: !1516, line: 316, type: !9990, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !9992)
!9990 = !DISubroutineType(types: !9991)
!9991 = !{!109, !1566, !1519}
!9992 = !{!9993, !9994, !9995}
!9993 = !DILocalVariable(name: "config", arg: 1, scope: !9989, file: !1516, line: 317, type: !1566)
!9994 = !DILocalVariable(name: "state", arg: 2, scope: !9989, file: !1516, line: 318, type: !1519)
!9995 = !DILocalVariable(name: "reg", scope: !9989, file: !1516, line: 320, type: !22)
!9996 = !DILocation(line: 0, scope: !9989)
!9997 = !DILocation(line: 329, column: 39, scope: !9989)
!9998 = !DILocation(line: 329, column: 52, scope: !9989)
!9999 = !DILocation(line: 329, column: 9, scope: !9989)
!10000 = !DILocation(line: 329, column: 2, scope: !9989)
!10001 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9928, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1346, retainedNodes: !10002)
!10002 = !{!10003}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !334, line: 730, type: !1390)
!10004 = !DILocation(line: 0, scope: !10001)
!10005 = !DILocation(line: 732, column: 9, scope: !10001)
!10006 = !DILocation(line: 732, column: 2, scope: !10001)
!10007 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1657, file: !1657, line: 270, type: !1663, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10008)
!10008 = !{!10009}
!10009 = !DILocalVariable(name: "dev", arg: 1, scope: !10007, file: !1657, line: 270, type: !1665)
!10010 = !DILocation(line: 0, scope: !10007)
!10011 = !DILocation(line: 274, column: 2, scope: !10007)
!10012 = !DILocation(line: 275, column: 12, scope: !10007)
!10013 = !DILocation(line: 276, column: 15, scope: !10007)
!10014 = !DILocation(line: 277, column: 16, scope: !10007)
!10015 = !DILocation(line: 278, column: 15, scope: !10007)
!10016 = !DILocation(line: 279, column: 16, scope: !10007)
!10017 = !DILocation(line: 282, column: 2, scope: !10007)
!10018 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !549, file: !549, line: 1638, type: !6185, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10019)
!10019 = !{!10020, !10021}
!10020 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10018, file: !549, line: 1638, type: !863)
!10021 = !DILocalVariable(name: "priority", arg: 2, scope: !10018, file: !549, line: 1638, type: !110)
!10022 = !DILocation(line: 0, scope: !10018)
!10023 = !DILocation(line: 1646, column: 46, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !549, line: 1645, column: 3)
!10025 = distinct !DILexicalBlock(scope: !10018, file: !549, line: 1640, column: 7)
!10026 = !DILocation(line: 1648, column: 1, scope: !10018)
!10027 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1657, file: !1657, line: 118, type: !6082, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10028)
!10028 = !{!10029, !10030}
!10029 = !DILocalVariable(name: "arg", arg: 1, scope: !10027, file: !1657, line: 118, type: !108)
!10030 = !DILocalVariable(name: "dticks", scope: !10027, file: !1657, line: 121, type: !110)
!10031 = !DILocation(line: 0, scope: !10027)
!10032 = !DILocation(line: 124, column: 2, scope: !10027)
!10033 = !DILocation(line: 129, column: 17, scope: !10027)
!10034 = !DILocation(line: 129, column: 14, scope: !10027)
!10035 = !DILocation(line: 130, column: 15, scope: !10027)
!10036 = !DILocation(line: 145, column: 27, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !1657, line: 132, column: 16)
!10038 = distinct !DILexicalBlock(scope: !10027, file: !1657, line: 132, column: 6)
!10039 = !DILocation(line: 145, column: 25, scope: !10037)
!10040 = !DILocation(line: 145, column: 45, scope: !10037)
!10041 = !DILocation(line: 146, column: 30, scope: !10037)
!10042 = !DILocation(line: 146, column: 20, scope: !10037)
!10043 = !DILocation(line: 147, column: 3, scope: !10037)
!10044 = !DILocation(line: 151, column: 2, scope: !10027)
!10045 = !DILocation(line: 152, column: 1, scope: !10027)
!10046 = distinct !DISubprogram(name: "elapsed", scope: !1657, file: !1657, line: 85, type: !3358, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10047)
!10047 = !{!10048, !10049, !10050}
!10048 = !DILocalVariable(name: "val1", scope: !10046, file: !1657, line: 87, type: !110)
!10049 = !DILocalVariable(name: "ctrl", scope: !10046, file: !1657, line: 88, type: !110)
!10050 = !DILocalVariable(name: "val2", scope: !10046, file: !1657, line: 89, type: !110)
!10051 = !DILocation(line: 87, column: 27, scope: !10046)
!10052 = !DILocation(line: 0, scope: !10046)
!10053 = !DILocation(line: 88, column: 27, scope: !10046)
!10054 = !DILocation(line: 89, column: 27, scope: !10046)
!10055 = !DILocation(line: 105, column: 12, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10046, file: !1657, line: 105, column: 6)
!10057 = !DILocation(line: 106, column: 6, scope: !10056)
!10058 = !DILocation(line: 107, column: 16, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10056, file: !1657, line: 106, column: 24)
!10060 = !DILocation(line: 111, column: 18, scope: !10059)
!10061 = !DILocation(line: 112, column: 2, scope: !10059)
!10062 = !DILocation(line: 114, column: 20, scope: !10046)
!10063 = !DILocation(line: 114, column: 30, scope: !10046)
!10064 = !DILocation(line: 114, column: 28, scope: !10046)
!10065 = !DILocation(line: 114, column: 2, scope: !10046)
!10066 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1657, file: !1657, line: 154, type: !10067, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10069)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{null, !845, !347}
!10069 = !{!10070, !10071, !10072, !10073, !10074, !10075, !10076, !10081, !10082}
!10070 = !DILocalVariable(name: "ticks", arg: 1, scope: !10066, file: !1657, line: 154, type: !845)
!10071 = !DILocalVariable(name: "idle", arg: 2, scope: !10066, file: !1657, line: 154, type: !347)
!10072 = !DILocalVariable(name: "delay", scope: !10066, file: !1657, line: 169, type: !110)
!10073 = !DILocalVariable(name: "val1", scope: !10066, file: !1657, line: 170, type: !110)
!10074 = !DILocalVariable(name: "val2", scope: !10066, file: !1657, line: 170, type: !110)
!10075 = !DILocalVariable(name: "last_load_", scope: !10066, file: !1657, line: 171, type: !110)
!10076 = !DILocalVariable(name: "key", scope: !10066, file: !1657, line: 176, type: !10077)
!10077 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !10078)
!10078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !10079)
!10079 = !{!10080}
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10078, file: !254, line: 33, baseType: !109, size: 32)
!10081 = !DILocalVariable(name: "pending", scope: !10066, file: !1657, line: 178, type: !110)
!10082 = !DILocalVariable(name: "unannounced", scope: !10066, file: !1657, line: 185, type: !110)
!10083 = !DILocation(line: 0, scope: !10066)
!10084 = !DILocation(line: 162, column: 49, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10066, file: !1657, line: 162, column: 6)
!10086 = !DILocation(line: 163, column: 17, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10085, file: !1657, line: 162, column: 78)
!10088 = !DILocation(line: 164, column: 13, scope: !10087)
!10089 = !DILocation(line: 165, column: 3, scope: !10087)
!10090 = !DILocation(line: 171, column: 24, scope: !10066)
!10091 = !DILocation(line: 173, column: 10, scope: !10066)
!10092 = !DILocation(line: 174, column: 10, scope: !10066)
!10093 = !DILocalVariable(name: "l", arg: 1, scope: !10094, file: !254, line: 136, type: !10097)
!10094 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !10095, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10098)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{!10077, !10097}
!10097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!10098 = !{!10093, !10099}
!10099 = !DILocalVariable(name: "k", scope: !10094, file: !254, line: 139, type: !10077)
!10100 = !DILocation(line: 0, scope: !10094, inlinedAt: !10101)
!10101 = distinct !DILocation(line: 176, column: 25, scope: !10066)
!10102 = !DILocation(line: 55, column: 2, scope: !10103, inlinedAt: !10107)
!10103 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10104)
!10104 = !{!10105, !10106}
!10105 = !DILocalVariable(name: "key", scope: !10103, file: !5954, line: 44, type: !32)
!10106 = !DILocalVariable(name: "tmp", scope: !10103, file: !5954, line: 53, type: !32)
!10107 = distinct !DILocation(line: 145, column: 10, scope: !10094, inlinedAt: !10101)
!10108 = !{i64 1620622}
!10109 = !DILocation(line: 0, scope: !10103, inlinedAt: !10107)
!10110 = !DILocation(line: 148, column: 2, scope: !10111, inlinedAt: !10101)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !254, line: 148, column: 2)
!10112 = distinct !DILexicalBlock(scope: !10094, file: !254, line: 148, column: 2)
!10113 = !DILocation(line: 148, column: 2, scope: !10112, inlinedAt: !10101)
!10114 = !DILocation(line: 148, column: 2, scope: !10115, inlinedAt: !10101)
!10115 = distinct !DILexicalBlock(scope: !10111, file: !254, line: 148, column: 2)
!10116 = !DILocation(line: 160, column: 2, scope: !10094, inlinedAt: !10101)
!10117 = !DILocation(line: 178, column: 21, scope: !10066)
!10118 = !DILocation(line: 180, column: 18, scope: !10066)
!10119 = !DILocation(line: 182, column: 14, scope: !10066)
!10120 = !DILocation(line: 183, column: 15, scope: !10066)
!10121 = !DILocation(line: 185, column: 39, scope: !10066)
!10122 = !DILocation(line: 185, column: 37, scope: !10066)
!10123 = !DILocation(line: 187, column: 27, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10066, file: !1657, line: 187, column: 6)
!10125 = !DILocation(line: 187, column: 6, scope: !10066)
!10126 = !DILocation(line: 202, column: 27, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10124, file: !1657, line: 195, column: 9)
!10128 = !DILocation(line: 202, column: 48, scope: !10127)
!10129 = !DILocation(line: 203, column: 9, scope: !10127)
!10130 = !DILocation(line: 204, column: 11, scope: !10127)
!10131 = !DILocation(line: 205, column: 13, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10127, file: !1657, line: 205, column: 7)
!10133 = !DILocation(line: 205, column: 7, scope: !10127)
!10134 = !DILocation(line: 0, scope: !10124)
!10135 = !DILocation(line: 212, column: 18, scope: !10066)
!10136 = !DILocation(line: 214, column: 28, scope: !10066)
!10137 = !DILocation(line: 214, column: 16, scope: !10066)
!10138 = !DILocation(line: 215, column: 15, scope: !10066)
!10139 = !DILocation(line: 227, column: 11, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10066, file: !1657, line: 227, column: 6)
!10141 = !DILocation(line: 227, column: 6, scope: !10066)
!10142 = !DILocation(line: 228, column: 15, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10140, file: !1657, line: 227, column: 19)
!10144 = !DILocation(line: 228, column: 38, scope: !10143)
!10145 = !DILocation(line: 228, column: 24, scope: !10143)
!10146 = !DILocation(line: 229, column: 2, scope: !10143)
!10147 = !DILocation(line: 230, column: 24, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10140, file: !1657, line: 229, column: 9)
!10149 = !DILocation(line: 230, column: 15, scope: !10148)
!10150 = !DILocation(line: 0, scope: !10140)
!10151 = !DILocalVariable(name: "key", arg: 2, scope: !10152, file: !254, line: 190, type: !10077)
!10152 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !10153, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10155)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{null, !10097, !10077}
!10155 = !{!10156, !10151}
!10156 = !DILocalVariable(name: "l", arg: 1, scope: !10152, file: !254, line: 189, type: !10097)
!10157 = !DILocation(line: 0, scope: !10152, inlinedAt: !10158)
!10158 = distinct !DILocation(line: 232, column: 2, scope: !10066)
!10159 = !DILocation(line: 194, column: 2, scope: !10160, inlinedAt: !10158)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !254, line: 194, column: 2)
!10161 = distinct !DILexicalBlock(scope: !10152, file: !254, line: 194, column: 2)
!10162 = !DILocation(line: 194, column: 2, scope: !10161, inlinedAt: !10158)
!10163 = !DILocation(line: 194, column: 2, scope: !10164, inlinedAt: !10158)
!10164 = distinct !DILexicalBlock(scope: !10160, file: !254, line: 194, column: 2)
!10165 = !DILocalVariable(name: "key", arg: 1, scope: !10166, file: !5954, line: 84, type: !32)
!10166 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10167)
!10167 = !{!10165}
!10168 = !DILocation(line: 0, scope: !10166, inlinedAt: !10169)
!10169 = distinct !DILocation(line: 215, column: 2, scope: !10152, inlinedAt: !10158)
!10170 = !DILocation(line: 95, column: 2, scope: !10166, inlinedAt: !10169)
!10171 = !{i64 1621439}
!10172 = !DILocation(line: 234, column: 1, scope: !10066)
!10173 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1657, file: !1657, line: 236, type: !3358, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10174)
!10174 = !{!10175, !10176}
!10175 = !DILocalVariable(name: "key", scope: !10173, file: !1657, line: 242, type: !10077)
!10176 = !DILocalVariable(name: "cyc", scope: !10173, file: !1657, line: 243, type: !110)
!10177 = !DILocation(line: 0, scope: !10094, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 242, column: 25, scope: !10173)
!10179 = !DILocation(line: 55, column: 2, scope: !10103, inlinedAt: !10180)
!10180 = distinct !DILocation(line: 145, column: 10, scope: !10094, inlinedAt: !10178)
!10181 = !DILocation(line: 0, scope: !10103, inlinedAt: !10180)
!10182 = !DILocation(line: 148, column: 2, scope: !10111, inlinedAt: !10178)
!10183 = !DILocation(line: 148, column: 2, scope: !10112, inlinedAt: !10178)
!10184 = !DILocation(line: 148, column: 2, scope: !10115, inlinedAt: !10178)
!10185 = !DILocation(line: 160, column: 2, scope: !10094, inlinedAt: !10178)
!10186 = !DILocation(line: 0, scope: !10173)
!10187 = !DILocation(line: 243, column: 17, scope: !10173)
!10188 = !DILocation(line: 243, column: 29, scope: !10173)
!10189 = !DILocation(line: 243, column: 43, scope: !10173)
!10190 = !DILocation(line: 0, scope: !10152, inlinedAt: !10191)
!10191 = distinct !DILocation(line: 245, column: 2, scope: !10173)
!10192 = !DILocation(line: 194, column: 2, scope: !10160, inlinedAt: !10191)
!10193 = !DILocation(line: 194, column: 2, scope: !10161, inlinedAt: !10191)
!10194 = !DILocation(line: 194, column: 2, scope: !10164, inlinedAt: !10191)
!10195 = !DILocation(line: 243, column: 27, scope: !10173)
!10196 = !DILocation(line: 243, column: 41, scope: !10173)
!10197 = !DILocation(line: 0, scope: !10166, inlinedAt: !10198)
!10198 = distinct !DILocation(line: 215, column: 2, scope: !10152, inlinedAt: !10191)
!10199 = !DILocation(line: 95, column: 2, scope: !10166, inlinedAt: !10198)
!10200 = !DILocation(line: 246, column: 13, scope: !10173)
!10201 = !DILocation(line: 246, column: 2, scope: !10173)
!10202 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1657, file: !1657, line: 249, type: !3358, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !10203)
!10203 = !{!10204, !10205}
!10204 = !DILocalVariable(name: "key", scope: !10202, file: !1657, line: 251, type: !10077)
!10205 = !DILocalVariable(name: "ret", scope: !10202, file: !1657, line: 252, type: !110)
!10206 = !DILocation(line: 0, scope: !10094, inlinedAt: !10207)
!10207 = distinct !DILocation(line: 251, column: 25, scope: !10202)
!10208 = !DILocation(line: 55, column: 2, scope: !10103, inlinedAt: !10209)
!10209 = distinct !DILocation(line: 145, column: 10, scope: !10094, inlinedAt: !10207)
!10210 = !DILocation(line: 0, scope: !10103, inlinedAt: !10209)
!10211 = !DILocation(line: 148, column: 2, scope: !10111, inlinedAt: !10207)
!10212 = !DILocation(line: 148, column: 2, scope: !10112, inlinedAt: !10207)
!10213 = !DILocation(line: 148, column: 2, scope: !10115, inlinedAt: !10207)
!10214 = !DILocation(line: 160, column: 2, scope: !10094, inlinedAt: !10207)
!10215 = !DILocation(line: 0, scope: !10202)
!10216 = !DILocation(line: 252, column: 17, scope: !10202)
!10217 = !DILocation(line: 252, column: 29, scope: !10202)
!10218 = !DILocation(line: 0, scope: !10152, inlinedAt: !10219)
!10219 = distinct !DILocation(line: 254, column: 2, scope: !10202)
!10220 = !DILocation(line: 194, column: 2, scope: !10160, inlinedAt: !10219)
!10221 = !DILocation(line: 194, column: 2, scope: !10161, inlinedAt: !10219)
!10222 = !DILocation(line: 194, column: 2, scope: !10164, inlinedAt: !10219)
!10223 = !DILocation(line: 252, column: 27, scope: !10202)
!10224 = !DILocation(line: 0, scope: !10166, inlinedAt: !10225)
!10225 = distinct !DILocation(line: 215, column: 2, scope: !10152, inlinedAt: !10219)
!10226 = !DILocation(line: 95, column: 2, scope: !10166, inlinedAt: !10225)
!10227 = !DILocation(line: 255, column: 2, scope: !10202)
!10228 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1657, file: !1657, line: 258, type: !3076, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !2037)
!10229 = !DILocation(line: 260, column: 6, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10228, file: !1657, line: 260, column: 6)
!10231 = !DILocation(line: 260, column: 16, scope: !10230)
!10232 = !DILocation(line: 260, column: 6, scope: !10228)
!10233 = !DILocation(line: 261, column: 17, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10230, file: !1657, line: 260, column: 34)
!10235 = !DILocation(line: 262, column: 2, scope: !10234)
!10236 = !DILocation(line: 263, column: 1, scope: !10228)
!10237 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1657, file: !1657, line: 265, type: !3076, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1579, retainedNodes: !2037)
!10238 = !DILocation(line: 267, column: 16, scope: !10237)
!10239 = !DILocation(line: 268, column: 1, scope: !10237)
!10240 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10241, file: !10241, line: 9, type: !10242, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !10265)
!10241 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10242 = !DISubroutineType(types: !10243)
!10243 = !{!109, !10244, !167, !10264}
!10244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10245, size: 32)
!10245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10246)
!10246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1516, line: 60, size: 64, elements: !10247)
!10247 = !{!10248, !10263}
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10246, file: !1516, line: 69, baseType: !10249, size: 32)
!10249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10250, size: 32)
!10250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10251)
!10251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1516, line: 50, size: 64, elements: !10252)
!10252 = !{!10253, !10261, !10262}
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10251, file: !1516, line: 52, baseType: !10254, size: 32)
!10254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10255, size: 32)
!10255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10256)
!10256 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1527, line: 37, baseType: !10257)
!10257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1527, line: 32, size: 64, elements: !10258)
!10258 = !{!10259, !10260}
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10257, file: !1527, line: 34, baseType: !110, size: 32)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10257, file: !1527, line: 36, baseType: !110, size: 32, offset: 32)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10251, file: !1516, line: 54, baseType: !167, size: 8, offset: 32)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10251, file: !1516, line: 56, baseType: !167, size: 8, offset: 40)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10246, file: !1516, line: 71, baseType: !167, size: 8, offset: 32)
!10264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10249, size: 32)
!10265 = !{!10266, !10267, !10268}
!10266 = !DILocalVariable(name: "config", arg: 1, scope: !10240, file: !10241, line: 9, type: !10244)
!10267 = !DILocalVariable(name: "id", arg: 2, scope: !10240, file: !10241, line: 9, type: !167)
!10268 = !DILocalVariable(name: "state", arg: 3, scope: !10240, file: !10241, line: 10, type: !10264)
!10269 = !DILocation(line: 0, scope: !10240)
!10270 = !DILocation(line: 12, column: 20, scope: !10240)
!10271 = !DILocation(line: 13, column: 27, scope: !10240)
!10272 = !DILocation(line: 13, column: 42, scope: !10240)
!10273 = !DILocation(line: 13, column: 19, scope: !10240)
!10274 = !DILocation(line: 13, column: 16, scope: !10240)
!10275 = !DILocation(line: 13, column: 2, scope: !10240)
!10276 = distinct !{!10276, !10275, !10277}
!10277 = !DILocation(line: 19, column: 2, scope: !10240)
!10278 = !DILocation(line: 14, column: 23, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !10241, line: 14, column: 7)
!10280 = distinct !DILexicalBlock(scope: !10240, file: !10241, line: 13, column: 54)
!10281 = !DILocation(line: 14, column: 10, scope: !10279)
!10282 = !DILocation(line: 18, column: 11, scope: !10280)
!10283 = !DILocation(line: 14, column: 7, scope: !10280)
!10284 = !DILocation(line: 22, column: 1, scope: !10240)
!10285 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1775, file: !1775, line: 193, type: !10286, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10295)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{!109, !10288, !167, !22}
!10288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10289, size: 32)
!10289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10290)
!10290 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1527, line: 37, baseType: !10291)
!10291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1527, line: 32, size: 64, elements: !10292)
!10292 = !{!10293, !10294}
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10291, file: !1527, line: 34, baseType: !110, size: 32)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10291, file: !1527, line: 36, baseType: !110, size: 32, offset: 32)
!10295 = !{!10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10305}
!10296 = !DILocalVariable(name: "pins", arg: 1, scope: !10285, file: !1775, line: 193, type: !10288)
!10297 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10285, file: !1775, line: 193, type: !167)
!10298 = !DILocalVariable(name: "reg", arg: 3, scope: !10285, file: !1775, line: 194, type: !22)
!10299 = !DILocalVariable(name: "pin", scope: !10285, file: !1775, line: 196, type: !110)
!10300 = !DILocalVariable(name: "mux", scope: !10285, file: !1775, line: 196, type: !110)
!10301 = !DILocalVariable(name: "pin_cgf", scope: !10285, file: !1775, line: 197, type: !110)
!10302 = !DILocalVariable(name: "ret", scope: !10285, file: !1775, line: 198, type: !109)
!10303 = !DILocalVariable(name: "i", scope: !10304, file: !1775, line: 209, type: !167)
!10304 = distinct !DILexicalBlock(scope: !10285, file: !1775, line: 209, column: 2)
!10305 = !DILocalVariable(name: "gpio_out", scope: !10306, file: !1775, line: 239, type: !110)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !1775, line: 238, column: 55)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !1775, line: 238, column: 14)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !1775, line: 236, column: 14)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !1775, line: 234, column: 7)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !1775, line: 209, column: 41)
!10311 = distinct !DILexicalBlock(scope: !10304, file: !1775, line: 209, column: 2)
!10312 = !DILocation(line: 0, scope: !10285)
!10313 = !DILocation(line: 0, scope: !10304)
!10314 = !DILocation(line: 209, column: 25, scope: !10311)
!10315 = !DILocation(line: 209, column: 2, scope: !10304)
!10316 = distinct !{!10316, !10315, !10317}
!10317 = !DILocation(line: 259, column: 2, scope: !10304)
!10318 = !DILocation(line: 210, column: 17, scope: !10310)
!10319 = !DILocation(line: 234, column: 7, scope: !10309)
!10320 = !DILocation(line: 234, column: 33, scope: !10309)
!10321 = !DILocation(line: 234, column: 7, scope: !10310)
!10322 = !DILocation(line: 235, column: 22, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10309, file: !1775, line: 234, column: 49)
!10324 = !DILocation(line: 235, column: 29, scope: !10323)
!10325 = !DILocation(line: 236, column: 3, scope: !10323)
!10326 = !DILocation(line: 236, column: 14, scope: !10309)
!10327 = !DILocation(line: 239, column: 32, scope: !10306)
!10328 = !DILocation(line: 0, scope: !10306)
!10329 = !DILocation(line: 241, column: 8, scope: !10306)
!10330 = !DILocation(line: 246, column: 3, scope: !10306)
!10331 = !DILocation(line: 252, column: 9, scope: !10310)
!10332 = !DILocation(line: 255, column: 9, scope: !10310)
!10333 = !DILocation(line: 256, column: 11, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10310, file: !1775, line: 256, column: 7)
!10335 = !DILocation(line: 209, column: 37, scope: !10311)
!10336 = !DILocation(line: 256, column: 7, scope: !10310)
!10337 = !DILocation(line: 262, column: 1, scope: !10285)
!10338 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1775, file: !1775, line: 176, type: !10339, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10341)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{!109, !110, !110, !110}
!10341 = !{!10342, !10343, !10344, !10345}
!10342 = !DILocalVariable(name: "pin", arg: 1, scope: !10338, file: !1775, line: 176, type: !110)
!10343 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10338, file: !1775, line: 176, type: !110)
!10344 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10338, file: !1775, line: 176, type: !110)
!10345 = !DILocalVariable(name: "port_device", scope: !10338, file: !1775, line: 178, type: !1705)
!10346 = !DILocation(line: 0, scope: !10338)
!10347 = !DILocation(line: 180, column: 22, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10338, file: !1775, line: 180, column: 6)
!10349 = !DILocation(line: 180, column: 6, scope: !10338)
!10350 = !DILocation(line: 180, column: 6, scope: !10348)
!10351 = !DILocation(line: 184, column: 16, scope: !10338)
!10352 = !DILocation(line: 186, column: 19, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10338, file: !1775, line: 186, column: 6)
!10354 = !DILocation(line: 186, column: 28, scope: !10353)
!10355 = !DILocation(line: 186, column: 33, scope: !10353)
!10356 = !DILocation(line: 186, column: 6, scope: !10338)
!10357 = !DILocation(line: 190, column: 43, scope: !10338)
!10358 = !DILocation(line: 190, column: 9, scope: !10338)
!10359 = !DILocation(line: 190, column: 2, scope: !10338)
!10360 = !DILocation(line: 191, column: 1, scope: !10338)
!10361 = distinct !DISubprogram(name: "device_is_ready", scope: !7676, file: !7676, line: 47, type: !10362, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10364)
!10362 = !DISubroutineType(types: !10363)
!10363 = !{!347, !1705}
!10364 = !{!10365}
!10365 = !DILocalVariable(name: "dev", arg: 1, scope: !10361, file: !7676, line: 47, type: !1705)
!10366 = !DILocation(line: 0, scope: !10361)
!10367 = !DILocation(line: 55, column: 2, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10361, file: !7676, line: 55, column: 2)
!10369 = !{i64 2148854631}
!10370 = !DILocation(line: 56, column: 9, scope: !10361)
!10371 = !DILocation(line: 56, column: 2, scope: !10361)
!10372 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10362, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10373)
!10373 = !{!10374}
!10374 = !DILocalVariable(name: "dev", arg: 1, scope: !10372, file: !334, line: 730, type: !1705)
!10375 = !DILocation(line: 0, scope: !10372)
!10376 = !DILocation(line: 732, column: 9, scope: !10372)
!10377 = !DILocation(line: 732, column: 2, scope: !10372)
!10378 = distinct !DISubprogram(name: "SystemInit", scope: !1805, file: !1805, line: 160, type: !3076, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !2037)
!10379 = !DILocation(line: 170, column: 1, scope: !10378)
!10380 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1805, file: !1805, line: 210, type: !3076, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !10381)
!10381 = !{!10382, !10383, !10384, !10385, !10386}
!10382 = !DILocalVariable(name: "tmp", scope: !10380, file: !1805, line: 212, type: !110)
!10383 = !DILocalVariable(name: "pllmul", scope: !10380, file: !1805, line: 212, type: !110)
!10384 = !DILocalVariable(name: "plldiv", scope: !10380, file: !1805, line: 212, type: !110)
!10385 = !DILocalVariable(name: "pllsource", scope: !10380, file: !1805, line: 212, type: !110)
!10386 = !DILocalVariable(name: "msirange", scope: !10380, file: !1805, line: 212, type: !110)
!10387 = !DILocation(line: 0, scope: !10380)
!10388 = !DILocation(line: 215, column: 14, scope: !10380)
!10389 = !DILocation(line: 217, column: 3, scope: !10380)
!10390 = !DILocation(line: 220, column: 24, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10380, file: !1805, line: 218, column: 3)
!10392 = !DILocation(line: 220, column: 52, scope: !10391)
!10393 = !DILocation(line: 221, column: 32, scope: !10391)
!10394 = !DILocation(line: 222, column: 7, scope: !10391)
!10395 = !DILocation(line: 228, column: 7, scope: !10391)
!10396 = !DILocation(line: 231, column: 21, scope: !10391)
!10397 = !DILocation(line: 232, column: 21, scope: !10391)
!10398 = !DILocation(line: 233, column: 36, scope: !10391)
!10399 = !DILocation(line: 233, column: 16, scope: !10391)
!10400 = !DILocation(line: 234, column: 24, scope: !10391)
!10401 = !DILocation(line: 234, column: 31, scope: !10391)
!10402 = !DILocation(line: 236, column: 24, scope: !10391)
!10403 = !DILocation(line: 236, column: 29, scope: !10391)
!10404 = !DILocation(line: 238, column: 21, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10391, file: !1805, line: 238, column: 11)
!10406 = !DILocation(line: 238, column: 11, scope: !10391)
!10407 = !DILocation(line: 241, column: 41, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10405, file: !1805, line: 239, column: 7)
!10409 = !DILocation(line: 241, column: 51, scope: !10408)
!10410 = !DILocation(line: 242, column: 7, scope: !10408)
!10411 = !DILocation(line: 246, column: 41, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10405, file: !1805, line: 244, column: 7)
!10413 = !DILocation(line: 246, column: 51, scope: !10412)
!10414 = !DILocation(line: 0, scope: !10391)
!10415 = !DILocation(line: 256, column: 30, scope: !10380)
!10416 = !DILocation(line: 256, column: 52, scope: !10380)
!10417 = !DILocation(line: 256, column: 9, scope: !10380)
!10418 = !DILocation(line: 258, column: 19, scope: !10380)
!10419 = !DILocation(line: 259, column: 1, scope: !10380)
!10420 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10421, file: !10421, line: 228, type: !10422, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !10425)
!10421 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10422 = !DISubroutineType(types: !10423)
!10423 = !{!10424}
!10424 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2920, line: 45, baseType: !2919)
!10425 = !{!10426, !10427}
!10426 = !DILocalVariable(name: "tickstart", scope: !10420, file: !10421, line: 230, type: !110)
!10427 = !DILocalVariable(name: "status", scope: !10420, file: !10421, line: 231, type: !10424)
!10428 = !DILocation(line: 234, column: 3, scope: !10420)
!10429 = !DILocation(line: 238, column: 3, scope: !10420)
!10430 = !DILocation(line: 241, column: 15, scope: !10420)
!10431 = !DILocation(line: 0, scope: !10420)
!10432 = !DILocation(line: 244, column: 3, scope: !10420)
!10433 = !DILocation(line: 244, column: 10, scope: !10420)
!10434 = !DILocation(line: 244, column: 43, scope: !10420)
!10435 = !DILocation(line: 246, column: 10, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !10421, line: 246, column: 9)
!10437 = distinct !DILexicalBlock(scope: !10420, file: !10421, line: 245, column: 3)
!10438 = !DILocation(line: 246, column: 24, scope: !10436)
!10439 = !DILocation(line: 246, column: 37, scope: !10436)
!10440 = !DILocation(line: 246, column: 9, scope: !10437)
!10441 = distinct !{!10441, !10432, !10442}
!10442 = !DILocation(line: 250, column: 3, scope: !10420)
!10443 = !DILocation(line: 253, column: 3, scope: !10420)
!10444 = !DILocation(line: 256, column: 3, scope: !10420)
!10445 = !DILocation(line: 256, column: 10, scope: !10420)
!10446 = !DILocation(line: 256, column: 44, scope: !10420)
!10447 = !DILocation(line: 258, column: 10, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10449, file: !10421, line: 258, column: 9)
!10449 = distinct !DILexicalBlock(scope: !10420, file: !10421, line: 257, column: 3)
!10450 = !DILocation(line: 258, column: 24, scope: !10448)
!10451 = !DILocation(line: 258, column: 37, scope: !10448)
!10452 = !DILocation(line: 258, column: 9, scope: !10449)
!10453 = distinct !{!10453, !10444, !10454}
!10454 = !DILocation(line: 262, column: 3, scope: !10420)
!10455 = !DILocation(line: 265, column: 19, scope: !10420)
!10456 = !DILocation(line: 268, column: 25, scope: !10420)
!10457 = !DILocation(line: 268, column: 12, scope: !10420)
!10458 = !DILocation(line: 269, column: 13, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10420, file: !10421, line: 269, column: 6)
!10460 = !DILocation(line: 269, column: 6, scope: !10420)
!10461 = !DILocation(line: 275, column: 3, scope: !10420)
!10462 = !DILocation(line: 277, column: 3, scope: !10420)
!10463 = !DILocation(line: 280, column: 15, scope: !10420)
!10464 = !DILocation(line: 283, column: 3, scope: !10420)
!10465 = !DILocation(line: 283, column: 10, scope: !10420)
!10466 = !DILocation(line: 283, column: 43, scope: !10420)
!10467 = !DILocation(line: 285, column: 10, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !10421, line: 285, column: 9)
!10469 = distinct !DILexicalBlock(scope: !10420, file: !10421, line: 284, column: 3)
!10470 = !DILocation(line: 285, column: 24, scope: !10468)
!10471 = !DILocation(line: 285, column: 37, scope: !10468)
!10472 = !DILocation(line: 285, column: 9, scope: !10469)
!10473 = distinct !{!10473, !10464, !10474}
!10474 = !DILocation(line: 289, column: 3, scope: !10420)
!10475 = !DILocation(line: 292, column: 3, scope: !10420)
!10476 = !DILocation(line: 295, column: 3, scope: !10420)
!10477 = !DILocation(line: 299, column: 3, scope: !10420)
!10478 = !DILocation(line: 305, column: 3, scope: !10420)
!10479 = !DILocation(line: 307, column: 3, scope: !10420)
!10480 = !DILocation(line: 308, column: 1, scope: !10420)
!10481 = !DISubprogram(name: "HAL_GetTick", scope: !10482, file: !10482, line: 945, type: !3358, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!10482 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10483 = !DISubprogram(name: "HAL_InitTick", scope: !10482, file: !10482, line: 932, type: !10484, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!10484 = !DISubroutineType(types: !10485)
!10485 = !{!10424, !110}
!10486 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10421, file: !10421, line: 324, type: !10487, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !10511)
!10487 = !DISubroutineType(types: !10488)
!10488 = !{!10424, !10489}
!10489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10490, size: 32)
!10490 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10491, line: 283, baseType: !10492)
!10491 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10492 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10491, line: 252, size: 416, elements: !10493)
!10493 = !{!10494, !10495, !10496, !10497, !10498, !10499, !10500, !10501, !10502, !10503}
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10492, file: !10491, line: 254, baseType: !110, size: 32)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10492, file: !10491, line: 257, baseType: !110, size: 32, offset: 32)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10492, file: !10491, line: 260, baseType: !110, size: 32, offset: 64)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10492, file: !10491, line: 263, baseType: !110, size: 32, offset: 96)
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10492, file: !10491, line: 266, baseType: !110, size: 32, offset: 128)
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10492, file: !10491, line: 269, baseType: !110, size: 32, offset: 160)
!10500 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !10492, file: !10491, line: 272, baseType: !110, size: 32, offset: 192)
!10501 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !10492, file: !10491, line: 275, baseType: !110, size: 32, offset: 224)
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !10492, file: !10491, line: 278, baseType: !110, size: 32, offset: 256)
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10492, file: !10491, line: 281, baseType: !10504, size: 128, offset: 288)
!10504 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10491, line: 247, baseType: !10505)
!10505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10491, line: 234, size: 128, elements: !10506)
!10506 = !{!10507, !10508, !10509, !10510}
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10505, file: !10491, line: 236, baseType: !110, size: 32)
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10505, file: !10491, line: 239, baseType: !110, size: 32, offset: 32)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !10505, file: !10491, line: 242, baseType: !110, size: 32, offset: 64)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !10505, file: !10491, line: 245, baseType: !110, size: 32, offset: 96)
!10511 = !{!10512, !10513, !10514, !10515, !10516, !10517, !10521}
!10512 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10486, file: !10421, line: 324, type: !10489)
!10513 = !DILocalVariable(name: "tickstart", scope: !10486, file: !10421, line: 326, type: !110)
!10514 = !DILocalVariable(name: "status", scope: !10486, file: !10421, line: 327, type: !10424)
!10515 = !DILocalVariable(name: "sysclk_source", scope: !10486, file: !10421, line: 328, type: !110)
!10516 = !DILocalVariable(name: "pll_config", scope: !10486, file: !10421, line: 328, type: !110)
!10517 = !DILocalVariable(name: "pwrclkchanged", scope: !10518, file: !10421, line: 613, type: !10520)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !10421, line: 612, column: 3)
!10519 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 611, column: 6)
!10520 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !900, line: 181, baseType: !2930)
!10521 = !DILocalVariable(name: "tmpreg", scope: !10522, file: !10421, line: 622, type: !301)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !10421, line: 622, column: 7)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !10421, line: 621, column: 5)
!10524 = distinct !DILexicalBlock(scope: !10518, file: !10421, line: 620, column: 8)
!10525 = !DILocation(line: 0, scope: !10486)
!10526 = !DILocation(line: 331, column: 24, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 331, column: 6)
!10528 = !DILocation(line: 331, column: 6, scope: !10486)
!10529 = !DILocation(line: 338, column: 19, scope: !10486)
!10530 = !DILocation(line: 339, column: 16, scope: !10486)
!10531 = !DILocation(line: 342, column: 27, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 342, column: 6)
!10533 = !DILocation(line: 342, column: 43, scope: !10532)
!10534 = !DILocation(line: 342, column: 69, scope: !10532)
!10535 = !DILocation(line: 342, column: 6, scope: !10486)
!10536 = !DILocation(line: 348, column: 23, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10538, file: !10421, line: 348, column: 8)
!10538 = distinct !DILexicalBlock(scope: !10532, file: !10421, line: 343, column: 3)
!10539 = !DILocation(line: 349, column: 8, scope: !10537)
!10540 = !DILocation(line: 349, column: 27, scope: !10537)
!10541 = !DILocation(line: 349, column: 62, scope: !10537)
!10542 = !DILocation(line: 351, column: 11, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10544, file: !10421, line: 351, column: 10)
!10544 = distinct !DILexicalBlock(scope: !10537, file: !10421, line: 350, column: 5)
!10545 = !DILocation(line: 351, column: 47, scope: !10543)
!10546 = !DILocation(line: 351, column: 54, scope: !10543)
!10547 = !DILocation(line: 351, column: 77, scope: !10543)
!10548 = !DILocation(line: 351, column: 86, scope: !10543)
!10549 = !DILocation(line: 351, column: 10, scope: !10544)
!10550 = !DILocation(line: 359, column: 7, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !10421, line: 359, column: 7)
!10552 = distinct !DILexicalBlock(scope: !10553, file: !10421, line: 359, column: 7)
!10553 = distinct !DILexicalBlock(scope: !10537, file: !10421, line: 357, column: 5)
!10554 = !DILocation(line: 359, column: 7, scope: !10552)
!10555 = !DILocation(line: 359, column: 7, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10551, file: !10421, line: 359, column: 7)
!10557 = !DILocation(line: 359, column: 7, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10559, file: !10421, line: 359, column: 7)
!10559 = distinct !DILexicalBlock(scope: !10551, file: !10421, line: 359, column: 7)
!10560 = !DILocation(line: 359, column: 7, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10562, file: !10421, line: 359, column: 7)
!10562 = distinct !DILexicalBlock(scope: !10559, file: !10421, line: 359, column: 7)
!10563 = !DILocation(line: 359, column: 7, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10562, file: !10421, line: 359, column: 7)
!10565 = !DILocation(line: 0, scope: !10551)
!10566 = !DILocation(line: 362, column: 29, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10553, file: !10421, line: 362, column: 10)
!10568 = !DILocation(line: 362, column: 38, scope: !10567)
!10569 = !DILocation(line: 0, scope: !10567)
!10570 = !DILocation(line: 362, column: 10, scope: !10553)
!10571 = !DILocation(line: 368, column: 15, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10567, file: !10421, line: 363, column: 7)
!10573 = !DILocation(line: 368, column: 51, scope: !10572)
!10574 = !DILocation(line: 368, column: 9, scope: !10572)
!10575 = !DILocation(line: 370, column: 15, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10577, file: !10421, line: 370, column: 14)
!10577 = distinct !DILexicalBlock(scope: !10572, file: !10421, line: 369, column: 9)
!10578 = !DILocation(line: 370, column: 29, scope: !10576)
!10579 = !DILocation(line: 370, column: 43, scope: !10576)
!10580 = !DILocation(line: 370, column: 14, scope: !10577)
!10581 = distinct !{!10581, !10574, !10582}
!10582 = !DILocation(line: 374, column: 9, scope: !10572)
!10583 = !DILocation(line: 382, column: 15, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10567, file: !10421, line: 377, column: 7)
!10585 = !DILocation(line: 382, column: 51, scope: !10584)
!10586 = !DILocation(line: 382, column: 9, scope: !10584)
!10587 = !DILocation(line: 384, column: 16, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !10421, line: 384, column: 15)
!10589 = distinct !DILexicalBlock(scope: !10584, file: !10421, line: 383, column: 9)
!10590 = !DILocation(line: 384, column: 30, scope: !10588)
!10591 = !DILocation(line: 384, column: 44, scope: !10588)
!10592 = !DILocation(line: 384, column: 15, scope: !10589)
!10593 = distinct !{!10593, !10586, !10594}
!10594 = !DILocation(line: 388, column: 9, scope: !10584)
!10595 = !DILocation(line: 393, column: 27, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 393, column: 6)
!10597 = !DILocation(line: 393, column: 43, scope: !10596)
!10598 = !DILocation(line: 393, column: 69, scope: !10596)
!10599 = !DILocation(line: 393, column: 6, scope: !10486)
!10600 = !DILocation(line: 400, column: 23, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !10421, line: 400, column: 8)
!10602 = distinct !DILexicalBlock(scope: !10596, file: !10421, line: 394, column: 3)
!10603 = !DILocation(line: 401, column: 8, scope: !10601)
!10604 = !DILocation(line: 401, column: 27, scope: !10601)
!10605 = !DILocation(line: 401, column: 62, scope: !10601)
!10606 = !DILocation(line: 404, column: 11, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !10421, line: 404, column: 10)
!10608 = distinct !DILexicalBlock(scope: !10601, file: !10421, line: 402, column: 5)
!10609 = !DILocation(line: 404, column: 47, scope: !10607)
!10610 = !DILocation(line: 404, column: 54, scope: !10607)
!10611 = !DILocation(line: 404, column: 77, scope: !10607)
!10612 = !DILocation(line: 404, column: 86, scope: !10607)
!10613 = !DILocation(line: 404, column: 10, scope: !10608)
!10614 = !DILocation(line: 418, column: 29, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !10421, line: 418, column: 10)
!10616 = distinct !DILexicalBlock(scope: !10601, file: !10421, line: 416, column: 5)
!10617 = !DILocation(line: 418, column: 38, scope: !10615)
!10618 = !DILocation(line: 418, column: 10, scope: !10616)
!10619 = !DILocation(line: 421, column: 9, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10615, file: !10421, line: 419, column: 7)
!10621 = !DILocation(line: 424, column: 21, scope: !10620)
!10622 = !DILocation(line: 427, column: 9, scope: !10620)
!10623 = !DILocation(line: 427, column: 15, scope: !10620)
!10624 = !DILocation(line: 427, column: 51, scope: !10620)
!10625 = !DILocation(line: 429, column: 15, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !10421, line: 429, column: 14)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !10421, line: 428, column: 9)
!10628 = !DILocation(line: 429, column: 29, scope: !10626)
!10629 = !DILocation(line: 429, column: 43, scope: !10626)
!10630 = !DILocation(line: 429, column: 14, scope: !10627)
!10631 = distinct !{!10631, !10622, !10632}
!10632 = !DILocation(line: 433, column: 9, scope: !10620)
!10633 = !DILocation(line: 441, column: 9, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10615, file: !10421, line: 439, column: 7)
!10635 = !DILocation(line: 444, column: 21, scope: !10634)
!10636 = !DILocation(line: 447, column: 9, scope: !10634)
!10637 = !DILocation(line: 447, column: 15, scope: !10634)
!10638 = !DILocation(line: 447, column: 51, scope: !10634)
!10639 = !DILocation(line: 449, column: 15, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !10421, line: 449, column: 14)
!10641 = distinct !DILexicalBlock(scope: !10634, file: !10421, line: 448, column: 9)
!10642 = !DILocation(line: 449, column: 29, scope: !10640)
!10643 = !DILocation(line: 449, column: 43, scope: !10640)
!10644 = !DILocation(line: 449, column: 14, scope: !10641)
!10645 = distinct !{!10645, !10636, !10646}
!10646 = !DILocation(line: 453, column: 9, scope: !10634)
!10647 = !DILocation(line: 0, scope: !10601)
!10648 = !DILocation(line: 458, column: 27, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 458, column: 6)
!10650 = !DILocation(line: 458, column: 43, scope: !10649)
!10651 = !DILocation(line: 458, column: 69, scope: !10649)
!10652 = !DILocation(line: 458, column: 6, scope: !10486)
!10653 = !DILocation(line: 461, column: 22, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !10421, line: 461, column: 8)
!10655 = distinct !DILexicalBlock(scope: !10649, file: !10421, line: 459, column: 3)
!10656 = !DILocation(line: 461, column: 8, scope: !10655)
!10657 = !DILocation(line: 463, column: 11, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10659, file: !10421, line: 463, column: 10)
!10659 = distinct !DILexicalBlock(scope: !10654, file: !10421, line: 462, column: 5)
!10660 = !DILocation(line: 463, column: 47, scope: !10658)
!10661 = !DILocation(line: 463, column: 54, scope: !10658)
!10662 = !DILocation(line: 463, column: 77, scope: !10658)
!10663 = !DILocation(line: 463, column: 86, scope: !10658)
!10664 = !DILocation(line: 463, column: 10, scope: !10659)
!10665 = !DILocation(line: 477, column: 31, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !10421, line: 477, column: 12)
!10667 = distinct !DILexicalBlock(scope: !10658, file: !10421, line: 469, column: 7)
!10668 = !DILocation(line: 477, column: 47, scope: !10666)
!10669 = !DILocation(line: 477, column: 45, scope: !10666)
!10670 = !DILocation(line: 477, column: 12, scope: !10667)
!10671 = !DILocation(line: 480, column: 14, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !10421, line: 480, column: 14)
!10673 = distinct !DILexicalBlock(scope: !10666, file: !10421, line: 478, column: 9)
!10674 = !DILocation(line: 480, column: 80, scope: !10672)
!10675 = !DILocation(line: 480, column: 14, scope: !10673)
!10676 = !DILocation(line: 486, column: 11, scope: !10673)
!10677 = !DILocation(line: 488, column: 11, scope: !10673)
!10678 = !DILocation(line: 489, column: 9, scope: !10673)
!10679 = !DILocation(line: 494, column: 11, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10666, file: !10421, line: 491, column: 9)
!10681 = !DILocation(line: 496, column: 11, scope: !10680)
!10682 = !DILocation(line: 499, column: 65, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10680, file: !10421, line: 499, column: 14)
!10684 = !DILocation(line: 499, column: 14, scope: !10683)
!10685 = !DILocation(line: 499, column: 80, scope: !10683)
!10686 = !DILocation(line: 499, column: 14, scope: !10680)
!10687 = !DILocation(line: 506, column: 67, scope: !10667)
!10688 = !DILocation(line: 506, column: 81, scope: !10667)
!10689 = !DILocation(line: 506, column: 36, scope: !10667)
!10690 = !DILocation(line: 507, column: 52, scope: !10667)
!10691 = !DILocation(line: 507, column: 74, scope: !10667)
!10692 = !DILocation(line: 507, column: 31, scope: !10667)
!10693 = !DILocation(line: 507, column: 28, scope: !10667)
!10694 = !DILocation(line: 506, column: 25, scope: !10667)
!10695 = !DILocation(line: 510, column: 31, scope: !10667)
!10696 = !DILocation(line: 510, column: 18, scope: !10667)
!10697 = !DILocation(line: 511, column: 19, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10667, file: !10421, line: 511, column: 12)
!10699 = !DILocation(line: 511, column: 12, scope: !10667)
!10700 = !DILocation(line: 523, column: 29, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !10421, line: 523, column: 10)
!10702 = distinct !DILexicalBlock(scope: !10654, file: !10421, line: 518, column: 5)
!10703 = !DILocation(line: 523, column: 38, scope: !10701)
!10704 = !DILocation(line: 523, column: 10, scope: !10702)
!10705 = !DILocation(line: 526, column: 9, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10701, file: !10421, line: 524, column: 7)
!10707 = !DILocation(line: 529, column: 21, scope: !10706)
!10708 = !DILocation(line: 532, column: 9, scope: !10706)
!10709 = !DILocation(line: 532, column: 15, scope: !10706)
!10710 = !DILocation(line: 532, column: 51, scope: !10706)
!10711 = !DILocation(line: 534, column: 15, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !10421, line: 534, column: 14)
!10713 = distinct !DILexicalBlock(scope: !10706, file: !10421, line: 533, column: 9)
!10714 = !DILocation(line: 534, column: 29, scope: !10712)
!10715 = !DILocation(line: 534, column: 42, scope: !10712)
!10716 = !DILocation(line: 534, column: 14, scope: !10713)
!10717 = distinct !{!10717, !10708, !10718}
!10718 = !DILocation(line: 538, column: 9, scope: !10706)
!10719 = !DILocation(line: 544, column: 9, scope: !10706)
!10720 = !DILocation(line: 546, column: 9, scope: !10706)
!10721 = !DILocation(line: 548, column: 7, scope: !10706)
!10722 = !DILocation(line: 552, column: 9, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10701, file: !10421, line: 550, column: 7)
!10724 = !DILocation(line: 555, column: 21, scope: !10723)
!10725 = !DILocation(line: 558, column: 9, scope: !10723)
!10726 = !DILocation(line: 558, column: 15, scope: !10723)
!10727 = !DILocation(line: 558, column: 51, scope: !10723)
!10728 = !DILocation(line: 560, column: 15, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !10421, line: 560, column: 14)
!10730 = distinct !DILexicalBlock(scope: !10723, file: !10421, line: 559, column: 9)
!10731 = !DILocation(line: 560, column: 29, scope: !10729)
!10732 = !DILocation(line: 560, column: 42, scope: !10729)
!10733 = !DILocation(line: 560, column: 14, scope: !10730)
!10734 = distinct !{!10734, !10725, !10735}
!10735 = !DILocation(line: 564, column: 9, scope: !10723)
!10736 = !DILocation(line: 569, column: 27, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 569, column: 6)
!10738 = !DILocation(line: 569, column: 43, scope: !10737)
!10739 = !DILocation(line: 569, column: 69, scope: !10737)
!10740 = !DILocation(line: 569, column: 6, scope: !10486)
!10741 = !DILocation(line: 575, column: 27, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !10421, line: 575, column: 8)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !10421, line: 570, column: 3)
!10744 = !DILocation(line: 575, column: 36, scope: !10742)
!10745 = !DILocation(line: 575, column: 8, scope: !10743)
!10746 = !DILocation(line: 578, column: 7, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10742, file: !10421, line: 576, column: 5)
!10748 = !DILocation(line: 581, column: 19, scope: !10747)
!10749 = !DILocation(line: 584, column: 7, scope: !10747)
!10750 = !DILocation(line: 584, column: 13, scope: !10747)
!10751 = !DILocation(line: 584, column: 49, scope: !10747)
!10752 = !DILocation(line: 586, column: 13, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10754, file: !10421, line: 586, column: 12)
!10754 = distinct !DILexicalBlock(scope: !10747, file: !10421, line: 585, column: 7)
!10755 = !DILocation(line: 586, column: 27, scope: !10753)
!10756 = !DILocation(line: 586, column: 41, scope: !10753)
!10757 = !DILocation(line: 586, column: 12, scope: !10754)
!10758 = distinct !{!10758, !10749, !10759}
!10759 = !DILocation(line: 590, column: 7, scope: !10747)
!10760 = !DILocation(line: 595, column: 7, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10742, file: !10421, line: 593, column: 5)
!10762 = !DILocation(line: 598, column: 19, scope: !10761)
!10763 = !DILocation(line: 601, column: 7, scope: !10761)
!10764 = !DILocation(line: 601, column: 13, scope: !10761)
!10765 = !DILocation(line: 601, column: 49, scope: !10761)
!10766 = !DILocation(line: 603, column: 13, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !10421, line: 603, column: 12)
!10768 = distinct !DILexicalBlock(scope: !10761, file: !10421, line: 602, column: 7)
!10769 = !DILocation(line: 603, column: 27, scope: !10767)
!10770 = !DILocation(line: 603, column: 41, scope: !10767)
!10771 = !DILocation(line: 603, column: 12, scope: !10768)
!10772 = distinct !{!10772, !10763, !10773}
!10773 = !DILocation(line: 607, column: 7, scope: !10761)
!10774 = !DILocation(line: 611, column: 27, scope: !10519)
!10775 = !DILocation(line: 611, column: 43, scope: !10519)
!10776 = !DILocation(line: 611, column: 69, scope: !10519)
!10777 = !DILocation(line: 611, column: 6, scope: !10486)
!10778 = !DILocation(line: 0, scope: !10518)
!10779 = !DILocation(line: 620, column: 8, scope: !10524)
!10780 = !DILocation(line: 620, column: 8, scope: !10518)
!10781 = !DILocation(line: 622, column: 7, scope: !10522)
!10782 = !DILocation(line: 622, column: 7, scope: !10523)
!10783 = !DILocation(line: 624, column: 5, scope: !10523)
!10784 = !DILocation(line: 626, column: 8, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10518, file: !10421, line: 626, column: 8)
!10786 = !DILocation(line: 626, column: 8, scope: !10518)
!10787 = !DILocation(line: 629, column: 7, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10785, file: !10421, line: 627, column: 5)
!10789 = !DILocation(line: 632, column: 19, scope: !10788)
!10790 = !DILocation(line: 634, column: 7, scope: !10788)
!10791 = !DILocation(line: 634, column: 13, scope: !10788)
!10792 = !DILocation(line: 636, column: 13, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !10421, line: 636, column: 12)
!10794 = distinct !DILexicalBlock(scope: !10788, file: !10421, line: 635, column: 7)
!10795 = !DILocation(line: 636, column: 27, scope: !10793)
!10796 = !DILocation(line: 636, column: 40, scope: !10793)
!10797 = !DILocation(line: 636, column: 12, scope: !10794)
!10798 = distinct !{!10798, !10790, !10799}
!10799 = !DILocation(line: 640, column: 7, scope: !10788)
!10800 = !DILocation(line: 644, column: 5, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !10421, line: 644, column: 5)
!10802 = distinct !DILexicalBlock(scope: !10518, file: !10421, line: 644, column: 5)
!10803 = !DILocation(line: 644, column: 5, scope: !10802)
!10804 = !DILocation(line: 644, column: 5, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10801, file: !10421, line: 644, column: 5)
!10806 = !DILocation(line: 644, column: 5, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !10421, line: 644, column: 5)
!10808 = distinct !DILexicalBlock(scope: !10801, file: !10421, line: 644, column: 5)
!10809 = !DILocation(line: 644, column: 5, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !10421, line: 644, column: 5)
!10811 = distinct !DILexicalBlock(scope: !10808, file: !10421, line: 644, column: 5)
!10812 = !DILocation(line: 644, column: 5, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10811, file: !10421, line: 644, column: 5)
!10814 = !DILocation(line: 0, scope: !10801)
!10815 = !DILocation(line: 646, column: 27, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10518, file: !10421, line: 646, column: 8)
!10817 = !DILocation(line: 646, column: 36, scope: !10816)
!10818 = !DILocation(line: 0, scope: !10816)
!10819 = !DILocation(line: 646, column: 8, scope: !10518)
!10820 = !DILocation(line: 652, column: 13, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10816, file: !10421, line: 647, column: 5)
!10822 = !DILocation(line: 652, column: 49, scope: !10821)
!10823 = !DILocation(line: 652, column: 7, scope: !10821)
!10824 = !DILocation(line: 654, column: 13, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !10421, line: 654, column: 12)
!10826 = distinct !DILexicalBlock(scope: !10821, file: !10421, line: 653, column: 7)
!10827 = !DILocation(line: 654, column: 27, scope: !10825)
!10828 = !DILocation(line: 654, column: 41, scope: !10825)
!10829 = !DILocation(line: 654, column: 12, scope: !10826)
!10830 = distinct !{!10830, !10823, !10831}
!10831 = !DILocation(line: 658, column: 7, scope: !10821)
!10832 = !DILocation(line: 666, column: 13, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10816, file: !10421, line: 661, column: 5)
!10834 = !DILocation(line: 666, column: 49, scope: !10833)
!10835 = !DILocation(line: 666, column: 7, scope: !10833)
!10836 = !DILocation(line: 668, column: 13, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !10421, line: 668, column: 12)
!10838 = distinct !DILexicalBlock(scope: !10833, file: !10421, line: 667, column: 7)
!10839 = !DILocation(line: 668, column: 27, scope: !10837)
!10840 = !DILocation(line: 668, column: 41, scope: !10837)
!10841 = !DILocation(line: 668, column: 12, scope: !10838)
!10842 = distinct !{!10842, !10835, !10843}
!10843 = !DILocation(line: 672, column: 7, scope: !10833)
!10844 = !DILocation(line: 676, column: 8, scope: !10518)
!10845 = !DILocation(line: 678, column: 7, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !10421, line: 677, column: 5)
!10847 = distinct !DILexicalBlock(scope: !10518, file: !10421, line: 676, column: 8)
!10848 = !DILocation(line: 679, column: 5, scope: !10846)
!10849 = !DILocation(line: 685, column: 31, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10486, file: !10421, line: 685, column: 7)
!10851 = !DILocation(line: 685, column: 41, scope: !10850)
!10852 = !DILocation(line: 685, column: 7, scope: !10486)
!10853 = !DILocation(line: 688, column: 22, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !10421, line: 688, column: 8)
!10855 = distinct !DILexicalBlock(scope: !10850, file: !10421, line: 686, column: 3)
!10856 = !DILocation(line: 688, column: 8, scope: !10855)
!10857 = !DILocation(line: 690, column: 44, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10859, file: !10421, line: 690, column: 10)
!10859 = distinct !DILexicalBlock(scope: !10854, file: !10421, line: 689, column: 5)
!10860 = !DILocation(line: 0, scope: !10858)
!10861 = !DILocation(line: 690, column: 10, scope: !10859)
!10862 = !DILocation(line: 704, column: 15, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10858, file: !10421, line: 691, column: 7)
!10864 = !DILocation(line: 704, column: 51, scope: !10863)
!10865 = !DILocation(line: 704, column: 9, scope: !10863)
!10866 = !DILocation(line: 706, column: 15, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !10421, line: 706, column: 14)
!10868 = distinct !DILexicalBlock(scope: !10863, file: !10421, line: 705, column: 9)
!10869 = !DILocation(line: 706, column: 29, scope: !10867)
!10870 = !DILocation(line: 706, column: 43, scope: !10867)
!10871 = !DILocation(line: 706, column: 14, scope: !10868)
!10872 = distinct !{!10872, !10865, !10873}
!10873 = !DILocation(line: 710, column: 9, scope: !10863)
!10874 = !DILocation(line: 713, column: 9, scope: !10863)
!10875 = !DILocation(line: 717, column: 9, scope: !10863)
!10876 = !DILocation(line: 720, column: 21, scope: !10863)
!10877 = !DILocation(line: 723, column: 9, scope: !10863)
!10878 = !DILocation(line: 723, column: 15, scope: !10863)
!10879 = !DILocation(line: 723, column: 51, scope: !10863)
!10880 = !DILocation(line: 725, column: 15, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10882, file: !10421, line: 725, column: 14)
!10882 = distinct !DILexicalBlock(scope: !10863, file: !10421, line: 724, column: 9)
!10883 = !DILocation(line: 725, column: 29, scope: !10881)
!10884 = !DILocation(line: 725, column: 43, scope: !10881)
!10885 = !DILocation(line: 725, column: 14, scope: !10882)
!10886 = distinct !{!10886, !10877, !10887}
!10887 = !DILocation(line: 729, column: 9, scope: !10863)
!10888 = !DILocation(line: 740, column: 15, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10858, file: !10421, line: 732, column: 7)
!10890 = !DILocation(line: 740, column: 51, scope: !10889)
!10891 = !DILocation(line: 740, column: 9, scope: !10889)
!10892 = !DILocation(line: 742, column: 15, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !10421, line: 742, column: 14)
!10894 = distinct !DILexicalBlock(scope: !10889, file: !10421, line: 741, column: 9)
!10895 = !DILocation(line: 742, column: 29, scope: !10893)
!10896 = !DILocation(line: 742, column: 43, scope: !10893)
!10897 = !DILocation(line: 742, column: 14, scope: !10894)
!10898 = distinct !{!10898, !10891, !10899}
!10899 = !DILocation(line: 746, column: 9, scope: !10889)
!10900 = !DILocation(line: 752, column: 44, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !10421, line: 752, column: 10)
!10902 = distinct !DILexicalBlock(scope: !10854, file: !10421, line: 750, column: 5)
!10903 = !DILocation(line: 752, column: 10, scope: !10902)
!10904 = !DILocation(line: 759, column: 27, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10901, file: !10421, line: 757, column: 7)
!10906 = !DILocation(line: 760, column: 13, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10905, file: !10421, line: 760, column: 12)
!10908 = !DILocation(line: 760, column: 77, scope: !10907)
!10909 = !DILocation(line: 760, column: 51, scope: !10907)
!10910 = !DILocation(line: 760, column: 88, scope: !10907)
!10911 = !DILocation(line: 761, column: 13, scope: !10907)
!10912 = !DILocation(line: 761, column: 77, scope: !10907)
!10913 = !DILocation(line: 761, column: 51, scope: !10907)
!10914 = !DILocation(line: 761, column: 85, scope: !10907)
!10915 = !DILocation(line: 762, column: 13, scope: !10907)
!10916 = !DILocation(line: 762, column: 77, scope: !10907)
!10917 = !DILocation(line: 762, column: 51, scope: !10907)
!10918 = !DILocation(line: 760, column: 12, scope: !10905)
!10919 = !DILocation(line: 770, column: 3, scope: !10486)
!10920 = !DILocation(line: 771, column: 1, scope: !10486)
!10921 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !10421, file: !10421, line: 1343, type: !10484, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !10922)
!10922 = !{!10923, !10924, !10925, !10926}
!10923 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !10921, file: !10421, line: 1343, type: !110)
!10924 = !DILocalVariable(name: "vos", scope: !10921, file: !10421, line: 1345, type: !110)
!10925 = !DILocalVariable(name: "latency", scope: !10921, file: !10421, line: 1346, type: !110)
!10926 = !DILocalVariable(name: "tmpreg", scope: !10927, file: !10421, line: 1357, type: !301)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !10421, line: 1357, column: 7)
!10928 = distinct !DILexicalBlock(scope: !10929, file: !10421, line: 1356, column: 5)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !10421, line: 1351, column: 8)
!10930 = distinct !DILexicalBlock(scope: !10931, file: !10421, line: 1350, column: 3)
!10931 = distinct !DILexicalBlock(scope: !10921, file: !10421, line: 1349, column: 7)
!10932 = !DILocation(line: 0, scope: !10921)
!10933 = !DILocation(line: 1349, column: 7, scope: !10931)
!10934 = !DILocation(line: 1349, column: 42, scope: !10931)
!10935 = !DILocation(line: 1349, column: 7, scope: !10921)
!10936 = !DILocation(line: 1351, column: 8, scope: !10929)
!10937 = !DILocation(line: 1351, column: 8, scope: !10930)
!10938 = !DILocation(line: 1353, column: 13, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10929, file: !10421, line: 1352, column: 5)
!10940 = !DILocation(line: 1354, column: 5, scope: !10939)
!10941 = !DILocation(line: 1357, column: 7, scope: !10927)
!10942 = !DILocation(line: 1357, column: 7, scope: !10928)
!10943 = !DILocation(line: 1358, column: 13, scope: !10928)
!10944 = !DILocation(line: 1359, column: 7, scope: !10928)
!10945 = !DILocation(line: 0, scope: !10929)
!10946 = !DILocation(line: 1363, column: 13, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10930, file: !10421, line: 1363, column: 8)
!10948 = !DILocation(line: 1363, column: 46, scope: !10947)
!10949 = !DILocation(line: 1369, column: 3, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10921, file: !10421, line: 1369, column: 3)
!10951 = !DILocation(line: 1369, column: 3, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !10421, line: 1369, column: 3)
!10953 = distinct !DILexicalBlock(scope: !10950, file: !10421, line: 1369, column: 3)
!10954 = !DILocation(line: 1373, column: 6, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10921, file: !10421, line: 1373, column: 6)
!10956 = !DILocation(line: 1379, column: 1, scope: !10921)
!10957 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10421, file: !10421, line: 799, type: !10958, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !10969)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!10424, !10960, !110}
!10960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10961, size: 32)
!10961 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10491, line: 304, baseType: !10962)
!10962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10491, line: 288, size: 160, elements: !10963)
!10963 = !{!10964, !10965, !10966, !10967, !10968}
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10962, file: !10491, line: 290, baseType: !110, size: 32)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10962, file: !10491, line: 293, baseType: !110, size: 32, offset: 32)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10962, file: !10491, line: 296, baseType: !110, size: 32, offset: 64)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10962, file: !10491, line: 299, baseType: !110, size: 32, offset: 96)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10962, file: !10491, line: 302, baseType: !110, size: 32, offset: 128)
!10969 = !{!10970, !10971, !10972, !10973}
!10970 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10957, file: !10421, line: 799, type: !10960)
!10971 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10957, file: !10421, line: 799, type: !110)
!10972 = !DILocalVariable(name: "tickstart", scope: !10957, file: !10421, line: 801, type: !110)
!10973 = !DILocalVariable(name: "status", scope: !10957, file: !10421, line: 802, type: !10424)
!10974 = !DILocation(line: 0, scope: !10957)
!10975 = !DILocation(line: 805, column: 24, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 805, column: 6)
!10977 = !DILocation(line: 805, column: 6, scope: !10957)
!10978 = !DILocation(line: 817, column: 17, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 817, column: 6)
!10980 = !DILocation(line: 817, column: 15, scope: !10979)
!10981 = !DILocation(line: 817, column: 6, scope: !10957)
!10982 = !DILocation(line: 820, column: 5, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !10421, line: 820, column: 5)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !10421, line: 820, column: 5)
!10985 = distinct !DILexicalBlock(scope: !10979, file: !10421, line: 818, column: 3)
!10986 = !DILocation(line: 820, column: 5, scope: !10984)
!10987 = !DILocation(line: 820, column: 5, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10983, file: !10421, line: 820, column: 5)
!10989 = !DILocation(line: 824, column: 8, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10985, file: !10421, line: 824, column: 8)
!10991 = !DILocation(line: 824, column: 34, scope: !10990)
!10992 = !DILocation(line: 824, column: 8, scope: !10985)
!10993 = !DILocation(line: 831, column: 27, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 831, column: 6)
!10995 = !DILocation(line: 831, column: 38, scope: !10994)
!10996 = !DILocation(line: 831, column: 60, scope: !10994)
!10997 = !DILocation(line: 831, column: 6, scope: !10957)
!10998 = !DILocation(line: 834, column: 5, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10994, file: !10421, line: 832, column: 3)
!11000 = !DILocation(line: 838, column: 27, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 838, column: 6)
!11002 = !DILocation(line: 835, column: 3, scope: !10999)
!11003 = !DILocation(line: 838, column: 38, scope: !11001)
!11004 = !DILocation(line: 838, column: 62, scope: !11001)
!11005 = !DILocation(line: 838, column: 6, scope: !10957)
!11006 = !DILocation(line: 843, column: 27, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !10421, line: 843, column: 8)
!11008 = distinct !DILexicalBlock(scope: !11001, file: !10421, line: 839, column: 3)
!11009 = !DILocation(line: 843, column: 8, scope: !11008)
!11010 = !DILocation(line: 846, column: 10, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !10421, line: 846, column: 10)
!11012 = distinct !DILexicalBlock(scope: !11007, file: !10421, line: 844, column: 5)
!11013 = !DILocation(line: 846, column: 46, scope: !11011)
!11014 = !DILocation(line: 846, column: 10, scope: !11012)
!11015 = !DILocation(line: 855, column: 10, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !10421, line: 855, column: 10)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !10421, line: 853, column: 5)
!11018 = distinct !DILexicalBlock(scope: !11007, file: !10421, line: 852, column: 13)
!11019 = !DILocation(line: 855, column: 46, scope: !11016)
!11020 = !DILocation(line: 855, column: 10, scope: !11017)
!11021 = !DILocation(line: 864, column: 10, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !10421, line: 864, column: 10)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !10421, line: 862, column: 5)
!11024 = distinct !DILexicalBlock(scope: !11018, file: !10421, line: 861, column: 13)
!11025 = !DILocation(line: 864, column: 46, scope: !11022)
!11026 = !DILocation(line: 864, column: 10, scope: !11023)
!11027 = !DILocation(line: 873, column: 10, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !10421, line: 873, column: 10)
!11029 = distinct !DILexicalBlock(scope: !11024, file: !10421, line: 871, column: 5)
!11030 = !DILocation(line: 873, column: 46, scope: !11028)
!11031 = !DILocation(line: 873, column: 10, scope: !11029)
!11032 = !DILocation(line: 878, column: 5, scope: !11008)
!11033 = !DILocation(line: 881, column: 17, scope: !11008)
!11034 = !DILocation(line: 883, column: 27, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11008, file: !10421, line: 883, column: 8)
!11036 = !DILocation(line: 883, column: 8, scope: !11008)
!11037 = !DILocation(line: 885, column: 14, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11035, file: !10421, line: 884, column: 5)
!11039 = !DILocation(line: 885, column: 44, scope: !11038)
!11040 = !DILocation(line: 885, column: 7, scope: !11038)
!11041 = !DILocation(line: 887, column: 13, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11043, file: !10421, line: 887, column: 12)
!11043 = distinct !DILexicalBlock(scope: !11038, file: !10421, line: 886, column: 7)
!11044 = !DILocation(line: 887, column: 27, scope: !11042)
!11045 = !DILocation(line: 887, column: 41, scope: !11042)
!11046 = !DILocation(line: 887, column: 12, scope: !11043)
!11047 = distinct !{!11047, !11040, !11048}
!11048 = !DILocation(line: 891, column: 7, scope: !11038)
!11049 = !DILocation(line: 895, column: 14, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !10421, line: 894, column: 5)
!11051 = distinct !DILexicalBlock(scope: !11035, file: !10421, line: 893, column: 13)
!11052 = !DILocation(line: 895, column: 44, scope: !11050)
!11053 = !DILocation(line: 895, column: 7, scope: !11050)
!11054 = !DILocation(line: 897, column: 13, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !10421, line: 897, column: 12)
!11056 = distinct !DILexicalBlock(scope: !11050, file: !10421, line: 896, column: 7)
!11057 = !DILocation(line: 897, column: 27, scope: !11055)
!11058 = !DILocation(line: 897, column: 41, scope: !11055)
!11059 = !DILocation(line: 897, column: 12, scope: !11056)
!11060 = distinct !{!11060, !11053, !11061}
!11061 = !DILocation(line: 901, column: 7, scope: !11050)
!11062 = !DILocation(line: 905, column: 14, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !10421, line: 904, column: 5)
!11064 = distinct !DILexicalBlock(scope: !11051, file: !10421, line: 903, column: 13)
!11065 = !DILocation(line: 905, column: 44, scope: !11063)
!11066 = !DILocation(line: 905, column: 7, scope: !11063)
!11067 = !DILocation(line: 907, column: 13, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !10421, line: 907, column: 12)
!11069 = distinct !DILexicalBlock(scope: !11063, file: !10421, line: 906, column: 7)
!11070 = !DILocation(line: 907, column: 27, scope: !11068)
!11071 = !DILocation(line: 907, column: 41, scope: !11068)
!11072 = !DILocation(line: 907, column: 12, scope: !11069)
!11073 = distinct !{!11073, !11066, !11074}
!11074 = !DILocation(line: 911, column: 7, scope: !11063)
!11075 = !DILocation(line: 915, column: 13, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11064, file: !10421, line: 914, column: 5)
!11077 = !DILocation(line: 915, column: 43, scope: !11076)
!11078 = !DILocation(line: 915, column: 7, scope: !11076)
!11079 = !DILocation(line: 917, column: 13, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !10421, line: 917, column: 12)
!11081 = distinct !DILexicalBlock(scope: !11076, file: !10421, line: 916, column: 7)
!11082 = !DILocation(line: 917, column: 27, scope: !11080)
!11083 = !DILocation(line: 917, column: 41, scope: !11080)
!11084 = !DILocation(line: 917, column: 12, scope: !11081)
!11085 = distinct !{!11085, !11078, !11086}
!11086 = !DILocation(line: 921, column: 7, scope: !11076)
!11087 = !DILocation(line: 925, column: 17, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 925, column: 6)
!11089 = !DILocation(line: 925, column: 15, scope: !11088)
!11090 = !DILocation(line: 925, column: 6, scope: !10957)
!11091 = !DILocation(line: 928, column: 5, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11093, file: !10421, line: 928, column: 5)
!11093 = distinct !DILexicalBlock(scope: !11088, file: !10421, line: 926, column: 3)
!11094 = !DILocation(line: 932, column: 8, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11093, file: !10421, line: 932, column: 8)
!11096 = !DILocation(line: 932, column: 34, scope: !11095)
!11097 = !DILocation(line: 932, column: 8, scope: !11093)
!11098 = !DILocation(line: 939, column: 27, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 939, column: 6)
!11100 = !DILocation(line: 939, column: 38, scope: !11099)
!11101 = !DILocation(line: 939, column: 61, scope: !11099)
!11102 = !DILocation(line: 939, column: 6, scope: !10957)
!11103 = !DILocation(line: 942, column: 5, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11099, file: !10421, line: 940, column: 3)
!11105 = !DILocation(line: 946, column: 27, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !10957, file: !10421, line: 946, column: 6)
!11107 = !DILocation(line: 943, column: 3, scope: !11104)
!11108 = !DILocation(line: 946, column: 38, scope: !11106)
!11109 = !DILocation(line: 946, column: 61, scope: !11106)
!11110 = !DILocation(line: 946, column: 6, scope: !10957)
!11111 = !DILocation(line: 949, column: 5, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11106, file: !10421, line: 947, column: 3)
!11113 = !DILocation(line: 950, column: 3, scope: !11112)
!11114 = !DILocation(line: 953, column: 21, scope: !10957)
!11115 = !DILocation(line: 953, column: 70, scope: !10957)
!11116 = !DILocation(line: 953, column: 91, scope: !10957)
!11117 = !DILocation(line: 953, column: 50, scope: !10957)
!11118 = !DILocation(line: 953, column: 47, scope: !10957)
!11119 = !DILocation(line: 953, column: 19, scope: !10957)
!11120 = !DILocation(line: 956, column: 25, scope: !10957)
!11121 = !DILocation(line: 956, column: 12, scope: !10957)
!11122 = !DILocation(line: 958, column: 3, scope: !10957)
!11123 = !DILocation(line: 959, column: 1, scope: !10957)
!11124 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10421, file: !10421, line: 1083, type: !3358, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !11125)
!11125 = !{!11126, !11127, !11128, !11129, !11130, !11131}
!11126 = !DILocalVariable(name: "tmpreg", scope: !11124, file: !10421, line: 1085, type: !110)
!11127 = !DILocalVariable(name: "pllm", scope: !11124, file: !10421, line: 1085, type: !110)
!11128 = !DILocalVariable(name: "plld", scope: !11124, file: !10421, line: 1085, type: !110)
!11129 = !DILocalVariable(name: "pllvco", scope: !11124, file: !10421, line: 1085, type: !110)
!11130 = !DILocalVariable(name: "msiclkrange", scope: !11124, file: !10421, line: 1085, type: !110)
!11131 = !DILocalVariable(name: "sysclockfreq", scope: !11124, file: !10421, line: 1085, type: !110)
!11132 = !DILocation(line: 1087, column: 17, scope: !11124)
!11133 = !DILocation(line: 0, scope: !11124)
!11134 = !DILocation(line: 1090, column: 3, scope: !11124)
!11135 = !DILocation(line: 1100, column: 7, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !10421, line: 1098, column: 5)
!11137 = distinct !DILexicalBlock(scope: !11124, file: !10421, line: 1091, column: 3)
!11138 = !DILocation(line: 1104, column: 63, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11137, file: !10421, line: 1103, column: 5)
!11140 = !DILocation(line: 1104, column: 14, scope: !11139)
!11141 = !DILocation(line: 1105, column: 52, scope: !11139)
!11142 = !DILocation(line: 1105, column: 76, scope: !11139)
!11143 = !DILocation(line: 1106, column: 11, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11139, file: !10421, line: 1106, column: 11)
!11145 = !DILocation(line: 1106, column: 41, scope: !11144)
!11146 = !DILocation(line: 1106, column: 11, scope: !11139)
!11147 = !DILocation(line: 0, scope: !11144)
!11148 = !DILocation(line: 1117, column: 7, scope: !11139)
!11149 = !DILocation(line: 1122, column: 27, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11137, file: !10421, line: 1121, column: 5)
!11151 = !DILocation(line: 1122, column: 56, scope: !11150)
!11152 = !DILocation(line: 1123, column: 30, scope: !11150)
!11153 = !DILocation(line: 1124, column: 7, scope: !11150)
!11154 = !DILocation(line: 0, scope: !11137)
!11155 = !DILocation(line: 1127, column: 3, scope: !11124)
!11156 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10421, file: !10421, line: 1005, type: !8288, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !11157)
!11157 = !{!11158, !11159, !11160, !11161, !11171}
!11158 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11156, file: !10421, line: 1005, type: !110)
!11159 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11156, file: !10421, line: 1005, type: !110)
!11160 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11156, file: !10421, line: 1005, type: !110)
!11161 = !DILocalVariable(name: "gpio", scope: !11156, file: !10421, line: 1007, type: !11162)
!11162 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11163, line: 64, baseType: !11164)
!11163 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11163, line: 48, size: 160, elements: !11165)
!11165 = !{!11166, !11167, !11168, !11169, !11170}
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11164, file: !11163, line: 50, baseType: !110, size: 32)
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11164, file: !11163, line: 53, baseType: !110, size: 32, offset: 32)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11164, file: !11163, line: 56, baseType: !110, size: 32, offset: 64)
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11164, file: !11163, line: 59, baseType: !110, size: 32, offset: 96)
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11164, file: !11163, line: 62, baseType: !110, size: 32, offset: 128)
!11171 = !DILocalVariable(name: "tmpreg", scope: !11172, file: !10421, line: 1022, type: !301)
!11172 = distinct !DILexicalBlock(scope: !11156, file: !10421, line: 1022, column: 3)
!11173 = !DILocation(line: 0, scope: !11156)
!11174 = !DILocation(line: 1007, column: 3, scope: !11156)
!11175 = !DILocation(line: 1007, column: 20, scope: !11156)
!11176 = !DILocation(line: 1015, column: 8, scope: !11156)
!11177 = !DILocation(line: 1015, column: 18, scope: !11156)
!11178 = !DILocation(line: 1016, column: 8, scope: !11156)
!11179 = !DILocation(line: 1016, column: 18, scope: !11156)
!11180 = !DILocation(line: 1017, column: 8, scope: !11156)
!11181 = !DILocation(line: 1017, column: 18, scope: !11156)
!11182 = !DILocation(line: 1018, column: 8, scope: !11156)
!11183 = !DILocation(line: 1018, column: 18, scope: !11156)
!11184 = !DILocation(line: 1019, column: 8, scope: !11156)
!11185 = !DILocation(line: 1019, column: 18, scope: !11156)
!11186 = !DILocation(line: 1022, column: 3, scope: !11172)
!11187 = !DILocation(line: 1022, column: 3, scope: !11156)
!11188 = !DILocation(line: 1024, column: 3, scope: !11156)
!11189 = !DILocation(line: 1027, column: 3, scope: !11156)
!11190 = !DILocation(line: 1028, column: 1, scope: !11156)
!11191 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11163, file: !11163, line: 293, type: !11192, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!11192 = !DISubroutineType(types: !11193)
!11193 = !{null, !2973, !11194}
!11194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11162, size: 32)
!11195 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10421, file: !10421, line: 1039, type: !3076, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11196 = !DILocation(line: 1041, column: 38, scope: !11195)
!11197 = !DILocation(line: 1042, column: 1, scope: !11195)
!11198 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10421, file: !10421, line: 1048, type: !3076, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11199 = !DILocation(line: 1050, column: 38, scope: !11198)
!11200 = !DILocation(line: 1051, column: 1, scope: !11198)
!11201 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10421, file: !10421, line: 1139, type: !3358, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11202 = !DILocation(line: 1141, column: 10, scope: !11201)
!11203 = !DILocation(line: 1141, column: 3, scope: !11201)
!11204 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10421, file: !10421, line: 1150, type: !3358, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11205 = !DILocation(line: 1153, column: 11, scope: !11204)
!11206 = !DILocation(line: 1153, column: 56, scope: !11204)
!11207 = !DILocation(line: 1153, column: 79, scope: !11204)
!11208 = !DILocation(line: 1153, column: 36, scope: !11204)
!11209 = !DILocation(line: 1153, column: 33, scope: !11204)
!11210 = !DILocation(line: 1153, column: 3, scope: !11204)
!11211 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10421, file: !10421, line: 1162, type: !3358, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11212 = !DILocation(line: 1165, column: 11, scope: !11211)
!11213 = !DILocation(line: 1165, column: 55, scope: !11211)
!11214 = !DILocation(line: 1165, column: 78, scope: !11211)
!11215 = !DILocation(line: 1165, column: 35, scope: !11211)
!11216 = !DILocation(line: 1165, column: 32, scope: !11211)
!11217 = !DILocation(line: 1165, column: 3, scope: !11211)
!11218 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10421, file: !10421, line: 1175, type: !11219, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !11221)
!11219 = !DISubroutineType(types: !11220)
!11220 = !{null, !10489}
!11221 = !{!11222}
!11222 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11218, file: !10421, line: 1175, type: !10489)
!11223 = !DILocation(line: 0, scope: !11218)
!11224 = !DILocation(line: 1181, column: 22, scope: !11218)
!11225 = !DILocation(line: 1181, column: 37, scope: !11218)
!11226 = !DILocation(line: 1186, column: 12, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11218, file: !10421, line: 1186, column: 6)
!11228 = !DILocation(line: 1186, column: 15, scope: !11227)
!11229 = !DILocation(line: 1186, column: 31, scope: !11227)
!11230 = !DILocation(line: 1186, column: 6, scope: !11218)
!11231 = !DILocation(line: 1188, column: 24, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11227, file: !10421, line: 1187, column: 3)
!11233 = !DILocation(line: 1188, column: 33, scope: !11232)
!11234 = !DILocation(line: 1189, column: 3, scope: !11232)
!11235 = !DILocation(line: 1190, column: 17, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11227, file: !10421, line: 1190, column: 11)
!11237 = !DILocation(line: 1190, column: 20, scope: !11236)
!11238 = !DILocation(line: 1190, column: 35, scope: !11236)
!11239 = !DILocation(line: 0, scope: !11236)
!11240 = !DILocation(line: 1190, column: 11, scope: !11227)
!11241 = !DILocation(line: 1192, column: 33, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !10421, line: 1191, column: 3)
!11243 = !DILocation(line: 1193, column: 3, scope: !11242)
!11244 = !DILocation(line: 1196, column: 33, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11236, file: !10421, line: 1195, column: 3)
!11246 = !DILocation(line: 1200, column: 12, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11218, file: !10421, line: 1200, column: 6)
!11248 = !DILocation(line: 1200, column: 15, scope: !11247)
!11249 = !DILocation(line: 1206, column: 24, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11247, file: !10421, line: 1205, column: 3)
!11251 = !DILocation(line: 1206, column: 33, scope: !11250)
!11252 = !DILocation(line: 1209, column: 61, scope: !11218)
!11253 = !DILocation(line: 1209, column: 88, scope: !11218)
!11254 = !DILocation(line: 1209, column: 22, scope: !11218)
!11255 = !DILocation(line: 1209, column: 42, scope: !11218)
!11256 = !DILocation(line: 1212, column: 12, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11218, file: !10421, line: 1212, column: 6)
!11258 = !DILocation(line: 1212, column: 6, scope: !11218)
!11259 = !DILocation(line: 1218, column: 24, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11257, file: !10421, line: 1217, column: 3)
!11261 = !DILocation(line: 1218, column: 33, scope: !11260)
!11262 = !DILocation(line: 1221, column: 61, scope: !11218)
!11263 = !DILocation(line: 1221, column: 88, scope: !11218)
!11264 = !DILocation(line: 1221, column: 22, scope: !11218)
!11265 = !DILocation(line: 1221, column: 42, scope: !11218)
!11266 = !DILocation(line: 1222, column: 55, scope: !11218)
!11267 = !DILocation(line: 1222, column: 61, scope: !11218)
!11268 = !DILocation(line: 1222, column: 22, scope: !11218)
!11269 = !DILocation(line: 1222, column: 36, scope: !11218)
!11270 = !DILocation(line: 1225, column: 12, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11218, file: !10421, line: 1225, column: 6)
!11272 = !DILocation(line: 1225, column: 16, scope: !11271)
!11273 = !DILocation(line: 1225, column: 33, scope: !11271)
!11274 = !DILocation(line: 1225, column: 6, scope: !11218)
!11275 = !DILocation(line: 1227, column: 24, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11271, file: !10421, line: 1226, column: 3)
!11277 = !DILocation(line: 1227, column: 33, scope: !11276)
!11278 = !DILocation(line: 1228, column: 3, scope: !11276)
!11279 = !DILocation(line: 1229, column: 17, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11271, file: !10421, line: 1229, column: 11)
!11281 = !DILocation(line: 1229, column: 21, scope: !11280)
!11282 = !DILocation(line: 1229, column: 37, scope: !11280)
!11283 = !DILocation(line: 0, scope: !11280)
!11284 = !DILocation(line: 1229, column: 11, scope: !11271)
!11285 = !DILocation(line: 1231, column: 33, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11280, file: !10421, line: 1230, column: 3)
!11287 = !DILocation(line: 1232, column: 3, scope: !11286)
!11288 = !DILocation(line: 1235, column: 33, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11280, file: !10421, line: 1234, column: 3)
!11290 = !DILocation(line: 1239, column: 12, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11218, file: !10421, line: 1239, column: 6)
!11292 = !DILocation(line: 1239, column: 16, scope: !11291)
!11293 = !DILocation(line: 1245, column: 24, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11291, file: !10421, line: 1244, column: 3)
!11295 = !DILocation(line: 1245, column: 33, scope: !11294)
!11296 = !DILocation(line: 1250, column: 12, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11218, file: !10421, line: 1250, column: 6)
!11298 = !DILocation(line: 1250, column: 15, scope: !11297)
!11299 = !DILocation(line: 1250, column: 30, scope: !11297)
!11300 = !DILocation(line: 1250, column: 6, scope: !11218)
!11301 = !DILocation(line: 1256, column: 28, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11297, file: !10421, line: 1255, column: 3)
!11303 = !DILocation(line: 1256, column: 37, scope: !11302)
!11304 = !DILocation(line: 1258, column: 54, scope: !11218)
!11305 = !DILocation(line: 1258, column: 59, scope: !11218)
!11306 = !DILocation(line: 1258, column: 26, scope: !11218)
!11307 = !DILocation(line: 1258, column: 36, scope: !11218)
!11308 = !DILocation(line: 1259, column: 51, scope: !11218)
!11309 = !DILocation(line: 1259, column: 56, scope: !11218)
!11310 = !DILocation(line: 1259, column: 26, scope: !11218)
!11311 = !DILocation(line: 1259, column: 33, scope: !11218)
!11312 = !DILocation(line: 1260, column: 51, scope: !11218)
!11313 = !DILocation(line: 1260, column: 56, scope: !11218)
!11314 = !DILocation(line: 1260, column: 26, scope: !11218)
!11315 = !DILocation(line: 1260, column: 33, scope: !11218)
!11316 = !DILocation(line: 1261, column: 1, scope: !11218)
!11317 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10421, file: !10421, line: 1271, type: !11318, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !11320)
!11318 = !DISubroutineType(types: !11319)
!11319 = !{null, !10960, !936}
!11320 = !{!11321, !11322}
!11321 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11317, file: !10421, line: 1271, type: !10960)
!11322 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11317, file: !10421, line: 1271, type: !936)
!11323 = !DILocation(line: 0, scope: !11317)
!11324 = !DILocation(line: 1278, column: 22, scope: !11317)
!11325 = !DILocation(line: 1278, column: 32, scope: !11317)
!11326 = !DILocation(line: 1281, column: 53, scope: !11317)
!11327 = !DILocation(line: 1281, column: 58, scope: !11317)
!11328 = !DILocation(line: 1281, column: 22, scope: !11317)
!11329 = !DILocation(line: 1281, column: 35, scope: !11317)
!11330 = !DILocation(line: 1284, column: 54, scope: !11317)
!11331 = !DILocation(line: 1284, column: 59, scope: !11317)
!11332 = !DILocation(line: 1284, column: 22, scope: !11317)
!11333 = !DILocation(line: 1284, column: 36, scope: !11317)
!11334 = !DILocation(line: 1287, column: 55, scope: !11317)
!11335 = !DILocation(line: 1287, column: 60, scope: !11317)
!11336 = !DILocation(line: 1287, column: 22, scope: !11317)
!11337 = !DILocation(line: 1287, column: 37, scope: !11317)
!11338 = !DILocation(line: 1290, column: 56, scope: !11317)
!11339 = !DILocation(line: 1290, column: 79, scope: !11317)
!11340 = !DILocation(line: 1290, column: 22, scope: !11317)
!11341 = !DILocation(line: 1290, column: 37, scope: !11317)
!11342 = !DILocation(line: 1293, column: 16, scope: !11317)
!11343 = !DILocation(line: 1293, column: 14, scope: !11317)
!11344 = !DILocation(line: 1294, column: 1, scope: !11317)
!11345 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10421, file: !10421, line: 1301, type: !3076, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11346 = !DILocation(line: 1304, column: 6, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11345, file: !10421, line: 1304, column: 6)
!11348 = !DILocation(line: 1304, column: 6, scope: !11345)
!11349 = !DILocation(line: 1307, column: 5, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11347, file: !10421, line: 1305, column: 3)
!11351 = !DILocation(line: 1310, column: 5, scope: !11350)
!11352 = !DILocation(line: 1311, column: 3, scope: !11350)
!11353 = !DILocation(line: 1312, column: 1, scope: !11345)
!11354 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10421, file: !10421, line: 1318, type: !3076, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2916, retainedNodes: !2037)
!11355 = !DILocation(line: 1323, column: 1, scope: !11354)
!11356 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11357, file: !11357, line: 147, type: !5978, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11358)
!11357 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11358 = !{!11359}
!11359 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11356, file: !11357, line: 147, type: !110)
!11360 = !DILocation(line: 0, scope: !11356)
!11361 = !DILocation(line: 150, column: 3, scope: !11356)
!11362 = !DILocation(line: 151, column: 1, scope: !11356)
!11363 = distinct !DISubprogram(name: "LL_InitTick", scope: !11364, file: !11364, line: 222, type: !8827, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11365)
!11364 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11365 = !{!11366, !11367}
!11366 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11363, file: !11364, line: 222, type: !110)
!11367 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11363, file: !11364, line: 222, type: !110)
!11368 = !DILocation(line: 0, scope: !11363)
!11369 = !DILocation(line: 225, column: 46, scope: !11363)
!11370 = !DILocation(line: 225, column: 55, scope: !11363)
!11371 = !DILocation(line: 225, column: 18, scope: !11363)
!11372 = !DILocation(line: 226, column: 18, scope: !11363)
!11373 = !DILocation(line: 227, column: 18, scope: !11363)
!11374 = !DILocation(line: 229, column: 1, scope: !11363)
!11375 = distinct !DISubprogram(name: "LL_mDelay", scope: !11357, file: !11357, line: 163, type: !5978, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11376)
!11376 = !{!11377, !11378, !11379}
!11377 = !DILocalVariable(name: "Delay", arg: 1, scope: !11375, file: !11357, line: 163, type: !110)
!11378 = !DILocalVariable(name: "tmp", scope: !11375, file: !11357, line: 165, type: !301)
!11379 = !DILocalVariable(name: "tmpDelay", scope: !11375, file: !11357, line: 166, type: !110)
!11380 = !DILocation(line: 0, scope: !11375)
!11381 = !DILocation(line: 165, column: 3, scope: !11375)
!11382 = !DILocation(line: 165, column: 18, scope: !11375)
!11383 = !DILocation(line: 165, column: 33, scope: !11375)
!11384 = !DILocation(line: 169, column: 10, scope: !11375)
!11385 = !DILocation(line: 172, column: 15, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11375, file: !11357, line: 172, column: 6)
!11387 = !DILocation(line: 177, column: 3, scope: !11375)
!11388 = !DILocation(line: 179, column: 18, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !11357, line: 179, column: 8)
!11390 = distinct !DILexicalBlock(scope: !11375, file: !11357, line: 178, column: 3)
!11391 = !DILocation(line: 177, column: 19, scope: !11375)
!11392 = !DILocation(line: 184, column: 1, scope: !11375)
!11393 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11357, file: !11357, line: 227, type: !5978, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11394)
!11394 = !{!11395}
!11395 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11393, file: !11357, line: 227, type: !110)
!11396 = !DILocation(line: 0, scope: !11393)
!11397 = !DILocation(line: 230, column: 19, scope: !11393)
!11398 = !DILocation(line: 231, column: 1, scope: !11393)
!11399 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11357, file: !11357, line: 242, type: !11400, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11403)
!11400 = !DISubroutineType(types: !11401)
!11401 = !{!11402, !110}
!11402 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !900, line: 194, baseType: !899)
!11403 = !{!11404, !11405, !11406}
!11404 = !DILocalVariable(name: "Frequency", arg: 1, scope: !11399, file: !11357, line: 242, type: !110)
!11405 = !DILocalVariable(name: "status", scope: !11399, file: !11357, line: 244, type: !11402)
!11406 = !DILocalVariable(name: "latency", scope: !11399, file: !11357, line: 246, type: !110)
!11407 = !DILocation(line: 0, scope: !11399)
!11408 = !DILocation(line: 249, column: 25, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11399, file: !11357, line: 249, column: 7)
!11410 = !DILocation(line: 255, column: 9, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !11357, line: 255, column: 9)
!11412 = distinct !DILexicalBlock(scope: !11409, file: !11357, line: 254, column: 3)
!11413 = !DILocation(line: 255, column: 41, scope: !11411)
!11414 = !DILocation(line: 255, column: 9, scope: !11412)
!11415 = !DILocation(line: 257, column: 21, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !11357, line: 257, column: 11)
!11417 = distinct !DILexicalBlock(scope: !11411, file: !11357, line: 256, column: 5)
!11418 = !DILocation(line: 284, column: 9, scope: !11412)
!11419 = !DILocation(line: 264, column: 14, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11411, file: !11357, line: 264, column: 14)
!11421 = !DILocation(line: 264, column: 46, scope: !11420)
!11422 = !DILocation(line: 264, column: 14, scope: !11411)
!11423 = !DILocation(line: 266, column: 21, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11425, file: !11357, line: 266, column: 11)
!11425 = distinct !DILexicalBlock(scope: !11420, file: !11357, line: 265, column: 5)
!11426 = !DILocation(line: 275, column: 21, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !11357, line: 275, column: 11)
!11428 = distinct !DILexicalBlock(scope: !11420, file: !11357, line: 274, column: 5)
!11429 = !DILocation(line: 286, column: 7, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11431, file: !11357, line: 285, column: 5)
!11431 = distinct !DILexicalBlock(scope: !11412, file: !11357, line: 284, column: 9)
!11432 = !DILocation(line: 287, column: 5, scope: !11430)
!11433 = !DILocation(line: 289, column: 5, scope: !11412)
!11434 = !DILocation(line: 293, column: 9, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11412, file: !11357, line: 293, column: 9)
!11436 = !DILocation(line: 293, column: 31, scope: !11435)
!11437 = !DILocation(line: 293, column: 9, scope: !11412)
!11438 = !DILocation(line: 298, column: 3, scope: !11399)
!11439 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5992, file: !5992, line: 285, type: !3358, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11440 = !DILocation(line: 287, column: 21, scope: !11439)
!11441 = !DILocation(line: 287, column: 3, scope: !11439)
!11442 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !8826, file: !8826, line: 1897, type: !3076, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11443 = !DILocation(line: 1899, column: 3, scope: !11442)
!11444 = !DILocation(line: 1900, column: 1, scope: !11442)
!11445 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !8826, file: !8826, line: 1843, type: !5978, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11446)
!11446 = !{!11447}
!11447 = !DILocalVariable(name: "Latency", arg: 1, scope: !11445, file: !8826, line: 1843, type: !110)
!11448 = !DILocation(line: 0, scope: !11445)
!11449 = !DILocation(line: 1845, column: 3, scope: !11445)
!11450 = !DILocation(line: 1846, column: 1, scope: !11445)
!11451 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !8826, file: !8826, line: 1855, type: !3358, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11452 = !DILocation(line: 1857, column: 21, scope: !11451)
!11453 = !DILocation(line: 1857, column: 3, scope: !11451)
!11454 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11357, file: !11357, line: 323, type: !11455, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11470)
!11455 = !DISubroutineType(types: !11456)
!11456 = !{!11402, !11457, !11463}
!11457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11458, size: 32)
!11458 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11364, line: 103, baseType: !11459)
!11459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11364, line: 90, size: 64, elements: !11460)
!11460 = !{!11461, !11462}
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !11459, file: !11364, line: 92, baseType: !110, size: 32)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !11459, file: !11364, line: 98, baseType: !110, size: 32, offset: 32)
!11463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11464, size: 32)
!11464 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11364, line: 128, baseType: !11465)
!11465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11364, line: 108, size: 96, elements: !11466)
!11466 = !{!11467, !11468, !11469}
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11465, file: !11364, line: 110, baseType: !110, size: 32)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11465, file: !11364, line: 116, baseType: !110, size: 32, offset: 32)
!11469 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11465, file: !11364, line: 122, baseType: !110, size: 32, offset: 64)
!11470 = !{!11471, !11472, !11473, !11474}
!11471 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11454, file: !11357, line: 323, type: !11457)
!11472 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11454, file: !11357, line: 324, type: !11463)
!11473 = !DILocalVariable(name: "status", scope: !11454, file: !11357, line: 326, type: !11402)
!11474 = !DILocalVariable(name: "pllfreq", scope: !11454, file: !11357, line: 327, type: !110)
!11475 = !DILocation(line: 0, scope: !11454)
!11476 = !DILocation(line: 330, column: 7, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11454, file: !11357, line: 330, column: 7)
!11478 = !DILocation(line: 330, column: 26, scope: !11477)
!11479 = !DILocation(line: 330, column: 7, scope: !11454)
!11480 = !DILocation(line: 333, column: 15, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11477, file: !11357, line: 331, column: 3)
!11482 = !DILocation(line: 336, column: 9, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11481, file: !11357, line: 336, column: 9)
!11484 = !DILocation(line: 336, column: 30, scope: !11483)
!11485 = !DILocation(line: 336, column: 9, scope: !11481)
!11486 = !DILocation(line: 338, column: 7, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11483, file: !11357, line: 337, column: 5)
!11488 = !DILocation(line: 339, column: 7, scope: !11487)
!11489 = !DILocation(line: 339, column: 14, scope: !11487)
!11490 = !DILocation(line: 339, column: 35, scope: !11487)
!11491 = distinct !{!11491, !11488, !11492}
!11492 = !DILocation(line: 342, column: 7, scope: !11487)
!11493 = !DILocation(line: 346, column: 76, scope: !11481)
!11494 = !DILocation(line: 346, column: 105, scope: !11481)
!11495 = !DILocation(line: 346, column: 5, scope: !11481)
!11496 = !DILocation(line: 349, column: 14, scope: !11481)
!11497 = !DILocation(line: 350, column: 3, scope: !11481)
!11498 = !DILocation(line: 0, scope: !11477)
!11499 = !DILocation(line: 357, column: 3, scope: !11454)
!11500 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11357, file: !11357, line: 487, type: !11501, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11503)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{!11402}
!11503 = !{!11504}
!11504 = !DILocalVariable(name: "status", scope: !11500, file: !11357, line: 489, type: !11402)
!11505 = !DILocation(line: 0, scope: !11500)
!11506 = !DILocation(line: 492, column: 7, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11500, file: !11357, line: 492, column: 7)
!11508 = !DILocation(line: 492, column: 28, scope: !11507)
!11509 = !DILocation(line: 492, column: 7, scope: !11500)
!11510 = !DILocation(line: 498, column: 3, scope: !11500)
!11511 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11357, file: !11357, line: 457, type: !11512, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11514)
!11512 = !DISubroutineType(types: !11513)
!11513 = !{!110, !110, !11457}
!11514 = !{!11515, !11516, !11517}
!11515 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11511, file: !11357, line: 457, type: !110)
!11516 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11511, file: !11357, line: 457, type: !11457)
!11517 = !DILocalVariable(name: "pllfreq", scope: !11511, file: !11357, line: 459, type: !110)
!11518 = !DILocation(line: 0, scope: !11511)
!11519 = !DILocation(line: 470, column: 68, scope: !11511)
!11520 = !DILocation(line: 470, column: 75, scope: !11511)
!11521 = !DILocation(line: 470, column: 35, scope: !11511)
!11522 = !DILocation(line: 470, column: 34, scope: !11511)
!11523 = !DILocation(line: 470, column: 32, scope: !11511)
!11524 = !DILocation(line: 475, column: 46, scope: !11511)
!11525 = !DILocation(line: 475, column: 53, scope: !11511)
!11526 = !DILocation(line: 475, column: 76, scope: !11511)
!11527 = !DILocation(line: 475, column: 21, scope: !11511)
!11528 = !DILocation(line: 478, column: 3, scope: !11511)
!11529 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8165, file: !8165, line: 612, type: !3358, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11530 = !DILocation(line: 614, column: 12, scope: !11529)
!11531 = !DILocation(line: 614, column: 11, scope: !11529)
!11532 = !DILocation(line: 614, column: 3, scope: !11529)
!11533 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8165, file: !8165, line: 592, type: !3076, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11534 = !DILocation(line: 594, column: 3, scope: !11533)
!11535 = !DILocation(line: 595, column: 1, scope: !11533)
!11536 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8165, file: !8165, line: 1219, type: !8288, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11537)
!11537 = !{!11538, !11539, !11540}
!11538 = !DILocalVariable(name: "Source", arg: 1, scope: !11536, file: !8165, line: 1219, type: !110)
!11539 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !11536, file: !8165, line: 1219, type: !110)
!11540 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !11536, file: !8165, line: 1219, type: !110)
!11541 = !DILocation(line: 0, scope: !11536)
!11542 = !DILocation(line: 1221, column: 3, scope: !11536)
!11543 = !DILocation(line: 1222, column: 1, scope: !11536)
!11544 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11357, file: !11357, line: 510, type: !11545, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11547)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{!11402, !110, !11463}
!11547 = !{!11548, !11549, !11550, !11551}
!11548 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11544, file: !11357, line: 510, type: !110)
!11549 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11544, file: !11357, line: 510, type: !11463)
!11550 = !DILocalVariable(name: "status", scope: !11544, file: !11357, line: 512, type: !11402)
!11551 = !DILocalVariable(name: "hclk_frequency", scope: !11544, file: !11357, line: 513, type: !110)
!11552 = !DILocation(line: 0, scope: !11544)
!11553 = !DILocation(line: 520, column: 20, scope: !11544)
!11554 = !DILocation(line: 523, column: 7, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11544, file: !11357, line: 523, column: 7)
!11556 = !DILocation(line: 523, column: 23, scope: !11555)
!11557 = !DILocation(line: 523, column: 7, scope: !11544)
!11558 = !DILocation(line: 526, column: 14, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11555, file: !11357, line: 524, column: 3)
!11560 = !DILocation(line: 530, column: 14, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11544, file: !11357, line: 530, column: 7)
!11562 = !DILocation(line: 530, column: 7, scope: !11544)
!11563 = !DILocation(line: 533, column: 5, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11561, file: !11357, line: 531, column: 3)
!11565 = !DILocation(line: 534, column: 5, scope: !11564)
!11566 = !DILocation(line: 534, column: 12, scope: !11564)
!11567 = !DILocation(line: 534, column: 33, scope: !11564)
!11568 = distinct !{!11568, !11565, !11569}
!11569 = !DILocation(line: 537, column: 5, scope: !11564)
!11570 = !DILocation(line: 540, column: 49, scope: !11564)
!11571 = !DILocation(line: 540, column: 5, scope: !11564)
!11572 = !DILocation(line: 541, column: 5, scope: !11564)
!11573 = !DILocation(line: 542, column: 5, scope: !11564)
!11574 = !DILocation(line: 542, column: 12, scope: !11564)
!11575 = !DILocation(line: 542, column: 37, scope: !11564)
!11576 = distinct !{!11576, !11573, !11577}
!11577 = !DILocation(line: 545, column: 5, scope: !11564)
!11578 = !DILocation(line: 548, column: 50, scope: !11564)
!11579 = !DILocation(line: 548, column: 5, scope: !11564)
!11580 = !DILocation(line: 549, column: 50, scope: !11564)
!11581 = !DILocation(line: 549, column: 5, scope: !11564)
!11582 = !DILocation(line: 550, column: 3, scope: !11564)
!11583 = !DILocation(line: 553, column: 7, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11544, file: !11357, line: 553, column: 7)
!11585 = !DILocation(line: 553, column: 23, scope: !11584)
!11586 = !DILocation(line: 553, column: 7, scope: !11544)
!11587 = !DILocation(line: 556, column: 14, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11584, file: !11357, line: 554, column: 3)
!11589 = !DILocation(line: 557, column: 3, scope: !11588)
!11590 = !DILocation(line: 560, column: 14, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11544, file: !11357, line: 560, column: 7)
!11592 = !DILocation(line: 560, column: 7, scope: !11544)
!11593 = !DILocation(line: 562, column: 5, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11591, file: !11357, line: 561, column: 3)
!11595 = !DILocation(line: 563, column: 3, scope: !11594)
!11596 = !DILocation(line: 565, column: 3, scope: !11544)
!11597 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8165, file: !8165, line: 1169, type: !3076, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11598 = !DILocation(line: 1171, column: 3, scope: !11597)
!11599 = !DILocation(line: 1172, column: 1, scope: !11597)
!11600 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8165, file: !8165, line: 1190, type: !3358, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11601 = !DILocation(line: 1192, column: 12, scope: !11600)
!11602 = !DILocation(line: 1192, column: 11, scope: !11600)
!11603 = !DILocation(line: 1192, column: 3, scope: !11600)
!11604 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8165, file: !8165, line: 944, type: !5978, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11605)
!11605 = !{!11606}
!11606 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11604, file: !8165, line: 944, type: !110)
!11607 = !DILocation(line: 0, scope: !11604)
!11608 = !DILocation(line: 946, column: 3, scope: !11604)
!11609 = !DILocation(line: 947, column: 1, scope: !11604)
!11610 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8165, file: !8165, line: 910, type: !5978, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11611)
!11611 = !{!11612}
!11612 = !DILocalVariable(name: "Source", arg: 1, scope: !11610, file: !8165, line: 910, type: !110)
!11613 = !DILocation(line: 0, scope: !11610)
!11614 = !DILocation(line: 912, column: 3, scope: !11610)
!11615 = !DILocation(line: 913, column: 1, scope: !11610)
!11616 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8165, file: !8165, line: 924, type: !3358, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11617 = !DILocation(line: 926, column: 21, scope: !11616)
!11618 = !DILocation(line: 926, column: 3, scope: !11616)
!11619 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8165, file: !8165, line: 960, type: !5978, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11620)
!11620 = !{!11621}
!11621 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11619, file: !8165, line: 960, type: !110)
!11622 = !DILocation(line: 0, scope: !11619)
!11623 = !DILocation(line: 962, column: 3, scope: !11619)
!11624 = !DILocation(line: 963, column: 1, scope: !11619)
!11625 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8165, file: !8165, line: 976, type: !5978, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11626)
!11626 = !{!11627}
!11627 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11625, file: !8165, line: 976, type: !110)
!11628 = !DILocation(line: 0, scope: !11625)
!11629 = !DILocation(line: 978, column: 3, scope: !11625)
!11630 = !DILocation(line: 979, column: 1, scope: !11625)
!11631 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11357, file: !11357, line: 385, type: !11632, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !11634)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{!11402, !110, !110, !11457, !11463}
!11634 = !{!11635, !11636, !11637, !11638, !11639, !11640}
!11635 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11631, file: !11357, line: 385, type: !110)
!11636 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11631, file: !11357, line: 385, type: !110)
!11637 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11631, file: !11357, line: 386, type: !11457)
!11638 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11631, file: !11357, line: 386, type: !11463)
!11639 = !DILocalVariable(name: "status", scope: !11631, file: !11357, line: 388, type: !11402)
!11640 = !DILocalVariable(name: "pllfreq", scope: !11631, file: !11357, line: 389, type: !110)
!11641 = !DILocation(line: 0, scope: !11631)
!11642 = !DILocation(line: 396, column: 7, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11631, file: !11357, line: 396, column: 7)
!11644 = !DILocation(line: 396, column: 26, scope: !11643)
!11645 = !DILocation(line: 396, column: 7, scope: !11631)
!11646 = !DILocation(line: 400, column: 15, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11643, file: !11357, line: 397, column: 3)
!11648 = !DILocation(line: 403, column: 9, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11647, file: !11357, line: 403, column: 9)
!11650 = !DILocation(line: 403, column: 30, scope: !11649)
!11651 = !DILocation(line: 403, column: 9, scope: !11647)
!11652 = !DILocation(line: 406, column: 21, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11654, file: !11357, line: 406, column: 11)
!11654 = distinct !DILexicalBlock(scope: !11649, file: !11357, line: 404, column: 5)
!11655 = !DILocation(line: 406, column: 11, scope: !11654)
!11656 = !DILocation(line: 408, column: 9, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11653, file: !11357, line: 407, column: 7)
!11658 = !DILocation(line: 409, column: 7, scope: !11657)
!11659 = !DILocation(line: 412, column: 9, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11653, file: !11357, line: 411, column: 7)
!11661 = !DILocation(line: 416, column: 7, scope: !11654)
!11662 = !DILocation(line: 417, column: 7, scope: !11654)
!11663 = !DILocation(line: 417, column: 14, scope: !11654)
!11664 = !DILocation(line: 417, column: 35, scope: !11654)
!11665 = distinct !{!11665, !11662, !11666}
!11666 = !DILocation(line: 420, column: 7, scope: !11654)
!11667 = !DILocation(line: 424, column: 78, scope: !11647)
!11668 = !DILocation(line: 424, column: 107, scope: !11647)
!11669 = !DILocation(line: 424, column: 7, scope: !11647)
!11670 = !DILocation(line: 427, column: 14, scope: !11647)
!11671 = !DILocation(line: 428, column: 3, scope: !11647)
!11672 = !DILocation(line: 0, scope: !11643)
!11673 = !DILocation(line: 435, column: 3, scope: !11631)
!11674 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8165, file: !8165, line: 545, type: !3358, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11675 = !DILocation(line: 547, column: 12, scope: !11674)
!11676 = !DILocation(line: 547, column: 11, scope: !11674)
!11677 = !DILocation(line: 547, column: 3, scope: !11674)
!11678 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8165, file: !8165, line: 505, type: !3076, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11679 = !DILocation(line: 507, column: 3, scope: !11678)
!11680 = !DILocation(line: 508, column: 1, scope: !11678)
!11681 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8165, file: !8165, line: 515, type: !3076, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11682 = !DILocation(line: 517, column: 3, scope: !11681)
!11683 = !DILocation(line: 518, column: 1, scope: !11681)
!11684 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8165, file: !8165, line: 525, type: !3076, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2987, retainedNodes: !2037)
!11685 = !DILocation(line: 527, column: 3, scope: !11684)
!11686 = !DILocation(line: 528, column: 1, scope: !11684)
!11687 = distinct !DISubprogram(name: "z_device_state_init", scope: !11688, file: !11688, line: 23, type: !3076, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11689)
!11688 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11689 = !{!11690}
!11690 = !DILocalVariable(name: "dev", scope: !11687, file: !11688, line: 25, type: !11691)
!11691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11692, size: 32)
!11692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11693)
!11693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !11694)
!11694 = !{!11695, !11696, !11697, !11698, !11704, !11705}
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11693, file: !334, line: 380, baseType: !337, size: 32)
!11696 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11693, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!11697 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11693, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11693, file: !334, line: 386, baseType: !11699, size: 32, offset: 96)
!11699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11700, size: 32)
!11700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !11701)
!11701 = !{!11702, !11703}
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11700, file: !334, line: 359, baseType: !167, size: 8)
!11703 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11700, file: !334, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11693, file: !334, line: 388, baseType: !108, size: 32, offset: 128)
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11693, file: !334, line: 396, baseType: !350, size: 32, offset: 160)
!11706 = !DILocation(line: 0, scope: !11687)
!11707 = !DILocation(line: 31, column: 1, scope: !11687)
!11708 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11688, file: !11688, line: 33, type: !11709, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11711)
!11709 = !DISubroutineType(types: !11710)
!11710 = !{!11691, !337}
!11711 = !{!11712, !11713}
!11712 = !DILocalVariable(name: "name", arg: 1, scope: !11708, file: !11688, line: 33, type: !337)
!11713 = !DILocalVariable(name: "dev", scope: !11708, file: !11688, line: 35, type: !11691)
!11714 = !DILocation(line: 0, scope: !11708)
!11715 = !DILocation(line: 40, column: 12, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11708, file: !11688, line: 40, column: 6)
!11717 = !DILocation(line: 40, column: 21, scope: !11716)
!11718 = !DILocation(line: 40, column: 25, scope: !11716)
!11719 = !DILocation(line: 40, column: 33, scope: !11716)
!11720 = !DILocation(line: 40, column: 6, scope: !11708)
!11721 = !DILocation(line: 55, column: 2, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11708, file: !11688, line: 55, column: 2)
!11723 = !DILocation(line: 50, column: 7, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !11688, line: 50, column: 7)
!11725 = distinct !DILexicalBlock(scope: !11726, file: !11688, line: 49, column: 57)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !11688, line: 49, column: 2)
!11727 = distinct !DILexicalBlock(scope: !11708, file: !11688, line: 49, column: 2)
!11728 = !DILocation(line: 50, column: 30, scope: !11724)
!11729 = !DILocation(line: 50, column: 39, scope: !11724)
!11730 = !DILocation(line: 50, column: 44, scope: !11724)
!11731 = !DILocation(line: 50, column: 7, scope: !11725)
!11732 = !DILocation(line: 49, column: 53, scope: !11726)
!11733 = !DILocation(line: 49, column: 33, scope: !11726)
!11734 = !DILocation(line: 49, column: 2, scope: !11727)
!11735 = distinct !{!11735, !11734, !11736}
!11736 = !DILocation(line: 53, column: 2, scope: !11727)
!11737 = !DILocation(line: 56, column: 7, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !11688, line: 56, column: 7)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !11688, line: 55, column: 57)
!11740 = distinct !DILexicalBlock(scope: !11722, file: !11688, line: 55, column: 2)
!11741 = !DILocation(line: 56, column: 30, scope: !11738)
!11742 = !DILocation(line: 56, column: 52, scope: !11738)
!11743 = !DILocation(line: 56, column: 34, scope: !11738)
!11744 = !DILocation(line: 56, column: 58, scope: !11738)
!11745 = !DILocation(line: 56, column: 7, scope: !11739)
!11746 = !DILocation(line: 55, column: 53, scope: !11740)
!11747 = !DILocation(line: 55, column: 33, scope: !11740)
!11748 = distinct !{!11748, !11721, !11749}
!11749 = !DILocation(line: 59, column: 2, scope: !11722)
!11750 = !DILocation(line: 62, column: 1, scope: !11708)
!11751 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11688, file: !11688, line: 93, type: !11752, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11754)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{!347, !11691}
!11754 = !{!11755}
!11755 = !DILocalVariable(name: "dev", arg: 1, scope: !11751, file: !11688, line: 93, type: !11691)
!11756 = !DILocation(line: 0, scope: !11751)
!11757 = !DILocation(line: 99, column: 10, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11751, file: !11688, line: 99, column: 6)
!11759 = !DILocation(line: 99, column: 6, scope: !11751)
!11760 = !DILocation(line: 103, column: 14, scope: !11751)
!11761 = !DILocation(line: 103, column: 21, scope: !11751)
!11762 = !DILocation(line: 103, column: 33, scope: !11751)
!11763 = !DILocation(line: 103, column: 49, scope: !11751)
!11764 = !DILocation(line: 103, column: 58, scope: !11751)
!11765 = !DILocation(line: 104, column: 1, scope: !11751)
!11766 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11688, file: !11688, line: 87, type: !11767, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11770)
!11767 = !DISubroutineType(types: !11768)
!11768 = !{!235, !11769}
!11769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11691, size: 32)
!11770 = !{!11771}
!11771 = !DILocalVariable(name: "devices", arg: 1, scope: !11766, file: !11688, line: 87, type: !11769)
!11772 = !DILocation(line: 0, scope: !11766)
!11773 = !DILocation(line: 89, column: 11, scope: !11766)
!11774 = !DILocation(line: 90, column: 2, scope: !11766)
!11775 = distinct !DISubprogram(name: "device_required_foreach", scope: !11688, file: !11688, line: 125, type: !11776, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11782)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{!109, !11691, !11778, !108}
!11778 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !11779)
!11779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11780, size: 32)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!109, !11691, !108}
!11782 = !{!11783, !11784, !11785, !11786, !11787}
!11783 = !DILocalVariable(name: "dev", arg: 1, scope: !11775, file: !11688, line: 125, type: !11691)
!11784 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11775, file: !11688, line: 126, type: !11778)
!11785 = !DILocalVariable(name: "context", arg: 3, scope: !11775, file: !11688, line: 127, type: !108)
!11786 = !DILocalVariable(name: "handle_count", scope: !11775, file: !11688, line: 129, type: !235)
!11787 = !DILocalVariable(name: "handles", scope: !11775, file: !11688, line: 130, type: !350)
!11788 = !DILocation(line: 0, scope: !11775)
!11789 = !DILocation(line: 129, column: 2, scope: !11775)
!11790 = !DILocation(line: 129, column: 9, scope: !11775)
!11791 = !DILocation(line: 130, column: 35, scope: !11775)
!11792 = !DILocation(line: 132, column: 33, scope: !11775)
!11793 = !DILocation(line: 132, column: 9, scope: !11775)
!11794 = !DILocation(line: 133, column: 1, scope: !11775)
!11795 = !DILocation(line: 132, column: 2, scope: !11775)
!11796 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !11797, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11799)
!11797 = !DISubroutineType(types: !11798)
!11798 = !{!350, !11691, !2578}
!11799 = !{!11800, !11801, !11802, !11803}
!11800 = !DILocalVariable(name: "dev", arg: 1, scope: !11796, file: !334, line: 493, type: !11691)
!11801 = !DILocalVariable(name: "count", arg: 2, scope: !11796, file: !334, line: 493, type: !2578)
!11802 = !DILocalVariable(name: "rv", scope: !11796, file: !334, line: 495, type: !350)
!11803 = !DILocalVariable(name: "i", scope: !11804, file: !334, line: 498, type: !235)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !334, line: 497, column: 18)
!11805 = distinct !DILexicalBlock(scope: !11796, file: !334, line: 497, column: 6)
!11806 = !DILocation(line: 0, scope: !11796)
!11807 = !DILocation(line: 495, column: 35, scope: !11796)
!11808 = !DILocation(line: 497, column: 9, scope: !11805)
!11809 = !DILocation(line: 497, column: 6, scope: !11796)
!11810 = !DILocation(line: 0, scope: !11804)
!11811 = !DILocation(line: 500, column: 11, scope: !11804)
!11812 = !DILocation(line: 500, column: 40, scope: !11804)
!11813 = !DILocation(line: 502, column: 4, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11804, file: !334, line: 501, column: 40)
!11815 = distinct !{!11815, !11816, !11817}
!11816 = !DILocation(line: 500, column: 3, scope: !11804)
!11817 = !DILocation(line: 503, column: 3, scope: !11804)
!11818 = !DILocation(line: 504, column: 10, scope: !11804)
!11819 = !DILocation(line: 505, column: 2, scope: !11804)
!11820 = !DILocation(line: 507, column: 2, scope: !11796)
!11821 = distinct !DISubprogram(name: "device_visitor", scope: !11688, file: !11688, line: 106, type: !11822, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11824)
!11822 = !DISubroutineType(types: !11823)
!11823 = !{!109, !350, !235, !11778, !108}
!11824 = !{!11825, !11826, !11827, !11828, !11829, !11831, !11834, !11835}
!11825 = !DILocalVariable(name: "handles", arg: 1, scope: !11821, file: !11688, line: 106, type: !350)
!11826 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11821, file: !11688, line: 107, type: !235)
!11827 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11821, file: !11688, line: 108, type: !11778)
!11828 = !DILocalVariable(name: "context", arg: 4, scope: !11821, file: !11688, line: 109, type: !108)
!11829 = !DILocalVariable(name: "i", scope: !11830, file: !11688, line: 112, type: !235)
!11830 = distinct !DILexicalBlock(scope: !11821, file: !11688, line: 112, column: 2)
!11831 = !DILocalVariable(name: "dh", scope: !11832, file: !11688, line: 113, type: !352)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !11688, line: 112, column: 44)
!11833 = distinct !DILexicalBlock(scope: !11830, file: !11688, line: 112, column: 2)
!11834 = !DILocalVariable(name: "rdev", scope: !11832, file: !11688, line: 114, type: !11691)
!11835 = !DILocalVariable(name: "rc", scope: !11832, file: !11688, line: 115, type: !109)
!11836 = !DILocation(line: 0, scope: !11821)
!11837 = !DILocation(line: 0, scope: !11830)
!11838 = !DILocation(line: 112, column: 23, scope: !11833)
!11839 = !DILocation(line: 112, column: 2, scope: !11830)
!11840 = distinct !{!11840, !11839, !11841}
!11841 = !DILocation(line: 120, column: 2, scope: !11830)
!11842 = !DILocation(line: 113, column: 24, scope: !11832)
!11843 = !DILocation(line: 0, scope: !11832)
!11844 = !DILocation(line: 114, column: 31, scope: !11832)
!11845 = !DILocation(line: 115, column: 12, scope: !11832)
!11846 = !DILocation(line: 117, column: 10, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11832, file: !11688, line: 117, column: 7)
!11848 = !DILocation(line: 112, column: 39, scope: !11833)
!11849 = !DILocation(line: 123, column: 1, scope: !11821)
!11850 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !11851, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11853)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{!11691, !352}
!11853 = !{!11854, !11855, !11856}
!11854 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11850, file: !334, line: 439, type: !352)
!11855 = !DILocalVariable(name: "dev", scope: !11850, file: !334, line: 443, type: !11691)
!11856 = !DILocalVariable(name: "numdev", scope: !11850, file: !334, line: 444, type: !235)
!11857 = !DILocation(line: 0, scope: !11850)
!11858 = !DILocation(line: 446, column: 7, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11850, file: !334, line: 446, column: 6)
!11860 = !DILocation(line: 446, column: 18, scope: !11859)
!11861 = !DILocation(line: 446, column: 23, scope: !11859)
!11862 = !DILocation(line: 450, column: 2, scope: !11850)
!11863 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11688, file: !11688, line: 135, type: !11776, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11864)
!11864 = !{!11865, !11866, !11867, !11868, !11869}
!11865 = !DILocalVariable(name: "dev", arg: 1, scope: !11863, file: !11688, line: 135, type: !11691)
!11866 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11863, file: !11688, line: 136, type: !11778)
!11867 = !DILocalVariable(name: "context", arg: 3, scope: !11863, file: !11688, line: 137, type: !108)
!11868 = !DILocalVariable(name: "handle_count", scope: !11863, file: !11688, line: 139, type: !235)
!11869 = !DILocalVariable(name: "handles", scope: !11863, file: !11688, line: 140, type: !350)
!11870 = !DILocation(line: 0, scope: !11863)
!11871 = !DILocation(line: 139, column: 2, scope: !11863)
!11872 = !DILocation(line: 139, column: 9, scope: !11863)
!11873 = !DILocation(line: 140, column: 35, scope: !11863)
!11874 = !DILocation(line: 142, column: 33, scope: !11863)
!11875 = !DILocation(line: 142, column: 9, scope: !11863)
!11876 = !DILocation(line: 143, column: 1, scope: !11863)
!11877 = !DILocation(line: 142, column: 2, scope: !11863)
!11878 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !11797, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !11879)
!11879 = !{!11880, !11881, !11882, !11883, !11884}
!11880 = !DILocalVariable(name: "dev", arg: 1, scope: !11878, file: !334, line: 573, type: !11691)
!11881 = !DILocalVariable(name: "count", arg: 2, scope: !11878, file: !334, line: 573, type: !2578)
!11882 = !DILocalVariable(name: "rv", scope: !11878, file: !334, line: 575, type: !350)
!11883 = !DILocalVariable(name: "region", scope: !11878, file: !334, line: 576, type: !235)
!11884 = !DILocalVariable(name: "i", scope: !11878, file: !334, line: 577, type: !235)
!11885 = !DILocation(line: 0, scope: !11878)
!11886 = !DILocation(line: 575, column: 35, scope: !11878)
!11887 = !DILocation(line: 579, column: 9, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11878, file: !334, line: 579, column: 6)
!11889 = !DILocation(line: 579, column: 6, scope: !11878)
!11890 = !DILocation(line: 582, column: 8, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !334, line: 582, column: 8)
!11892 = distinct !DILexicalBlock(scope: !11893, file: !334, line: 581, column: 23)
!11893 = distinct !DILexicalBlock(scope: !11888, file: !334, line: 579, column: 18)
!11894 = !DILocation(line: 582, column: 12, scope: !11891)
!11895 = !DILocation(line: 585, column: 6, scope: !11892)
!11896 = !DILocation(line: 0, scope: !11893)
!11897 = !DILocation(line: 581, column: 17, scope: !11893)
!11898 = !DILocation(line: 581, column: 3, scope: !11893)
!11899 = !DILocation(line: 588, column: 10, scope: !11893)
!11900 = !DILocation(line: 588, column: 16, scope: !11893)
!11901 = !DILocation(line: 589, column: 4, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11893, file: !334, line: 588, column: 39)
!11903 = !DILocation(line: 588, column: 3, scope: !11893)
!11904 = distinct !{!11904, !11903, !11905}
!11905 = !DILocation(line: 590, column: 3, scope: !11893)
!11906 = !DILocation(line: 591, column: 10, scope: !11893)
!11907 = !DILocation(line: 592, column: 2, scope: !11893)
!11908 = !DILocation(line: 575, column: 25, scope: !11878)
!11909 = !DILocation(line: 594, column: 2, scope: !11878)
!11910 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1819, file: !1819, line: 49, type: !11911, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1816, retainedNodes: !2037)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!2572}
!11913 = !DILocation(line: 51, column: 10, scope: !11910)
!11914 = !DILocation(line: 51, column: 20, scope: !11910)
!11915 = !DILocation(line: 51, column: 2, scope: !11910)
!11916 = distinct !DISubprogram(name: "coredump", scope: !3043, file: !3043, line: 209, type: !11917, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12074)
!11917 = !DISubroutineType(types: !11918)
!11918 = !{null, !32, !11919, !11963}
!11919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11920, size: 32)
!11920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11921)
!11921 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2705, line: 141, baseType: !11922)
!11922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2705, line: 97, size: 256, elements: !11923)
!11923 = !{!11924}
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11922, file: !2705, line: 107, baseType: !11925, size: 256)
!11925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2705, line: 98, size: 256, elements: !11926)
!11926 = !{!11927, !11932, !11937, !11942, !11947, !11952, !11957, !11962}
!11927 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 99, baseType: !11928, size: 32)
!11928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 99, size: 32, elements: !11929)
!11929 = !{!11930, !11931}
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11928, file: !2705, line: 99, baseType: !110, size: 32)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11928, file: !2705, line: 99, baseType: !110, size: 32)
!11932 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 100, baseType: !11933, size: 32, offset: 32)
!11933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 100, size: 32, elements: !11934)
!11934 = !{!11935, !11936}
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11933, file: !2705, line: 100, baseType: !110, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11933, file: !2705, line: 100, baseType: !110, size: 32)
!11937 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 101, baseType: !11938, size: 32, offset: 64)
!11938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 101, size: 32, elements: !11939)
!11939 = !{!11940, !11941}
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11938, file: !2705, line: 101, baseType: !110, size: 32)
!11941 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11938, file: !2705, line: 101, baseType: !110, size: 32)
!11942 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 102, baseType: !11943, size: 32, offset: 96)
!11943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 102, size: 32, elements: !11944)
!11944 = !{!11945, !11946}
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11943, file: !2705, line: 102, baseType: !110, size: 32)
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11943, file: !2705, line: 102, baseType: !110, size: 32)
!11947 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 103, baseType: !11948, size: 32, offset: 128)
!11948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 103, size: 32, elements: !11949)
!11949 = !{!11950, !11951}
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11948, file: !2705, line: 103, baseType: !110, size: 32)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11948, file: !2705, line: 103, baseType: !110, size: 32)
!11952 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 104, baseType: !11953, size: 32, offset: 160)
!11953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 104, size: 32, elements: !11954)
!11954 = !{!11955, !11956}
!11955 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11953, file: !2705, line: 104, baseType: !110, size: 32)
!11956 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11953, file: !2705, line: 104, baseType: !110, size: 32)
!11957 = !DIDerivedType(tag: DW_TAG_member, scope: !11925, file: !2705, line: 105, baseType: !11958, size: 32, offset: 192)
!11958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11925, file: !2705, line: 105, size: 32, elements: !11959)
!11959 = !{!11960, !11961}
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11958, file: !2705, line: 105, baseType: !110, size: 32)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11958, file: !2705, line: 105, baseType: !110, size: 32)
!11962 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11925, file: !2705, line: 106, baseType: !110, size: 32, offset: 224)
!11963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11964, size: 32)
!11964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !11965)
!11965 = !{!11966, !12024, !12036, !12037, !12038, !12045, !12046, !12047, !12048, !12054, !12069}
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11964, file: !145, line: 247, baseType: !11967, size: 384)
!11967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !11968)
!11968 = !{!11969, !11993, !12000, !12001, !12002, !12011, !12012, !12013}
!11969 = !DIDerivedType(tag: DW_TAG_member, scope: !11967, file: !145, line: 60, baseType: !11970, size: 64)
!11970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11967, file: !145, line: 60, size: 64, elements: !11971)
!11971 = !{!11972, !11987}
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11970, file: !145, line: 61, baseType: !11973, size: 64)
!11973 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !11974)
!11974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !11975)
!11975 = !{!11976, !11982}
!11976 = !DIDerivedType(tag: DW_TAG_member, scope: !11974, file: !128, line: 38, baseType: !11977, size: 32)
!11977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11974, file: !128, line: 38, size: 32, elements: !11978)
!11978 = !{!11979, !11981}
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11977, file: !128, line: 39, baseType: !11980, size: 32)
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11974, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11977, file: !128, line: 40, baseType: !11980, size: 32)
!11982 = !DIDerivedType(tag: DW_TAG_member, scope: !11974, file: !128, line: 42, baseType: !11983, size: 32, offset: 32)
!11983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11974, file: !128, line: 42, size: 32, elements: !11984)
!11984 = !{!11985, !11986}
!11985 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11983, file: !128, line: 43, baseType: !11980, size: 32)
!11986 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11983, file: !128, line: 44, baseType: !11980, size: 32)
!11987 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11970, file: !145, line: 62, baseType: !11988, size: 64)
!11988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !11989)
!11989 = !{!11990}
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11988, file: !157, line: 50, baseType: !11991, size: 64)
!11991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11992, size: 64, elements: !162)
!11992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11988, size: 32)
!11993 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11967, file: !145, line: 68, baseType: !11994, size: 32, offset: 64)
!11994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11995, size: 32)
!11995 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !11996)
!11996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !11997)
!11997 = !{!11998}
!11998 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11996, file: !123, line: 232, baseType: !11999, size: 64)
!11999 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !11974)
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11967, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11967, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!12002 = !DIDerivedType(tag: DW_TAG_member, scope: !11967, file: !145, line: 90, baseType: !12003, size: 16, offset: 112)
!12003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11967, file: !145, line: 90, size: 16, elements: !12004)
!12004 = !{!12005, !12010}
!12005 = !DIDerivedType(tag: DW_TAG_member, scope: !12003, file: !145, line: 91, baseType: !12006, size: 16)
!12006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12003, file: !145, line: 91, size: 16, elements: !12007)
!12007 = !{!12008, !12009}
!12008 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12006, file: !145, line: 96, baseType: !177, size: 8)
!12009 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12006, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12003, file: !145, line: 100, baseType: !181, size: 16)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11967, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11967, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11967, file: !145, line: 131, baseType: !12014, size: 192, offset: 192)
!12014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !12015)
!12015 = !{!12016, !12017, !12023}
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12014, file: !123, line: 245, baseType: !11973, size: 64)
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12014, file: !123, line: 246, baseType: !12018, size: 32, offset: 64)
!12018 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !12019)
!12019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12020, size: 32)
!12020 = !DISubroutineType(types: !12021)
!12021 = !{null, !12022}
!12022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12014, size: 32)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12014, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!12024 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11964, file: !145, line: 250, baseType: !12025, size: 288, offset: 384)
!12025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !12026)
!12026 = !{!12027, !12028, !12029, !12030, !12031, !12032, !12033, !12034, !12035}
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12025, file: !198, line: 26, baseType: !110, size: 32)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12025, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12025, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12025, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12025, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12025, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12025, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12025, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12025, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11964, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11964, file: !145, line: 256, baseType: !11995, size: 64, offset: 704)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !11964, file: !145, line: 271, baseType: !12039, size: 128, offset: 768)
!12039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !12040)
!12040 = !{!12041, !12042, !12043, !12044}
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !12039, file: !145, line: 35, baseType: !215, size: 32)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !12039, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !12039, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !12039, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !11964, file: !145, line: 274, baseType: !11963, size: 32, offset: 896)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11964, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11964, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11964, file: !145, line: 300, baseType: !12049, size: 96, offset: 1216)
!12049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !12050)
!12050 = !{!12051, !12052, !12053}
!12051 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12049, file: !145, line: 153, baseType: !22, size: 32)
!12052 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12049, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12049, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11964, file: !145, line: 325, baseType: !12055, size: 32, offset: 1312)
!12055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12056, size: 32)
!12056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !12057)
!12057 = !{!12058, !12064, !12065}
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12056, file: !119, line: 5074, baseType: !12059, size: 96)
!12059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !12060)
!12060 = !{!12061, !12062, !12063}
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12059, file: !244, line: 57, baseType: !247, size: 32)
!12062 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12059, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12059, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12056, file: !119, line: 5075, baseType: !11995, size: 64, offset: 96)
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12056, file: !119, line: 5076, baseType: !12066, size: 32, offset: 160)
!12066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !12067)
!12067 = !{!12068}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12066, file: !254, line: 52, baseType: !22, size: 32)
!12069 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11964, file: !145, line: 343, baseType: !12070, size: 64, offset: 1344)
!12070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !12071)
!12071 = !{!12072, !12073}
!12072 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12070, file: !198, line: 63, baseType: !110, size: 32)
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12070, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!12074 = !{!12075, !12076, !12077}
!12075 = !DILocalVariable(name: "reason", arg: 1, scope: !11916, file: !3043, line: 209, type: !32)
!12076 = !DILocalVariable(name: "esf", arg: 2, scope: !11916, file: !3043, line: 209, type: !11919)
!12077 = !DILocalVariable(name: "thread", arg: 3, scope: !11916, file: !3043, line: 210, type: !11963)
!12078 = !DILocation(line: 0, scope: !11916)
!12079 = !DILocation(line: 212, column: 1, scope: !11916)
!12080 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3043, file: !3043, line: 214, type: !12081, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12083)
!12081 = !DISubroutineType(types: !12082)
!12082 = !{null, !22, !22}
!12083 = !{!12084, !12085}
!12084 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12080, file: !3043, line: 214, type: !22)
!12085 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12080, file: !3043, line: 214, type: !22)
!12086 = !DILocation(line: 0, scope: !12080)
!12087 = !DILocation(line: 216, column: 1, scope: !12080)
!12088 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3043, file: !3043, line: 218, type: !12089, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12091)
!12089 = !DISubroutineType(types: !12090)
!12090 = !{null, !1860, !235}
!12091 = !{!12092, !12093}
!12092 = !DILocalVariable(name: "buf", arg: 1, scope: !12088, file: !3043, line: 218, type: !1860)
!12093 = !DILocalVariable(name: "buflen", arg: 2, scope: !12088, file: !3043, line: 218, type: !235)
!12094 = !DILocation(line: 0, scope: !12088)
!12095 = !DILocation(line: 220, column: 1, scope: !12088)
!12096 = distinct !DISubprogram(name: "coredump_query", scope: !3043, file: !3043, line: 222, type: !12097, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12099)
!12097 = !DISubroutineType(types: !12098)
!12098 = !{!109, !3042, !108}
!12099 = !{!12100, !12101}
!12100 = !DILocalVariable(name: "query_id", arg: 1, scope: !12096, file: !3043, line: 222, type: !3042)
!12101 = !DILocalVariable(name: "arg", arg: 2, scope: !12096, file: !3043, line: 222, type: !108)
!12102 = !DILocation(line: 0, scope: !12096)
!12103 = !DILocation(line: 224, column: 2, scope: !12096)
!12104 = distinct !DISubprogram(name: "coredump_cmd", scope: !3043, file: !3043, line: 227, type: !12105, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12107)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{!109, !3049, !108}
!12107 = !{!12108, !12109}
!12108 = !DILocalVariable(name: "query_id", arg: 1, scope: !12104, file: !3043, line: 227, type: !3049)
!12109 = !DILocalVariable(name: "arg", arg: 2, scope: !12104, file: !3043, line: 227, type: !108)
!12110 = !DILocation(line: 0, scope: !12104)
!12111 = !DILocation(line: 229, column: 2, scope: !12104)
!12112 = distinct !DISubprogram(name: "arch_system_halt", scope: !12113, file: !12113, line: 23, type: !5965, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12114)
!12113 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12114 = !{!12115}
!12115 = !DILocalVariable(name: "reason", arg: 1, scope: !12112, file: !12113, line: 23, type: !32)
!12116 = !DILocation(line: 0, scope: !12112)
!12117 = !DILocation(line: 55, column: 2, scope: !12118, inlinedAt: !12122)
!12118 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12119)
!12119 = !{!12120, !12121}
!12120 = !DILocalVariable(name: "key", scope: !12118, file: !5954, line: 44, type: !32)
!12121 = !DILocalVariable(name: "tmp", scope: !12118, file: !5954, line: 53, type: !32)
!12122 = distinct !DILocation(line: 31, column: 8, scope: !12112)
!12123 = !{i64 1652890}
!12124 = !DILocation(line: 0, scope: !12118, inlinedAt: !12122)
!12125 = !DILocation(line: 32, column: 2, scope: !12112)
!12126 = !DILocation(line: 32, column: 2, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12128, file: !12113, line: 32, column: 2)
!12128 = distinct !DILexicalBlock(scope: !12112, file: !12113, line: 32, column: 2)
!12129 = distinct !{!12129, !12130, !12131}
!12130 = !DILocation(line: 32, column: 2, scope: !12128)
!12131 = !DILocation(line: 34, column: 2, scope: !12128)
!12132 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12113, file: !12113, line: 39, type: !12133, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12135)
!12133 = !DISubroutineType(types: !12134)
!12134 = !{null, !32, !11919}
!12135 = !{!12136, !12137}
!12136 = !DILocalVariable(name: "reason", arg: 1, scope: !12132, file: !12113, line: 39, type: !32)
!12137 = !DILocalVariable(name: "esf", arg: 2, scope: !12132, file: !12113, line: 40, type: !11919)
!12138 = !DILocation(line: 0, scope: !12132)
!12139 = !DILocation(line: 46, column: 2, scope: !12132)
!12140 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12113, file: !12113, line: 81, type: !5965, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12141)
!12141 = !{!12142}
!12142 = !DILocalVariable(name: "reason", arg: 1, scope: !12140, file: !12113, line: 81, type: !32)
!12143 = !DILocation(line: 0, scope: !12140)
!12144 = !DILocation(line: 83, column: 2, scope: !12140)
!12145 = distinct !DISubprogram(name: "z_fatal_error", scope: !12113, file: !12113, line: 96, type: !12133, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12146)
!12146 = !{!12147, !12148, !12149, !12150}
!12147 = !DILocalVariable(name: "reason", arg: 1, scope: !12145, file: !12113, line: 96, type: !32)
!12148 = !DILocalVariable(name: "esf", arg: 2, scope: !12145, file: !12113, line: 96, type: !11919)
!12149 = !DILocalVariable(name: "key", scope: !12145, file: !12113, line: 102, type: !32)
!12150 = !DILocalVariable(name: "thread", scope: !12145, file: !12113, line: 103, type: !11963)
!12151 = !DILocation(line: 0, scope: !12145)
!12152 = !DILocation(line: 55, column: 2, scope: !12118, inlinedAt: !12153)
!12153 = distinct !DILocation(line: 102, column: 21, scope: !12145)
!12154 = !DILocation(line: 0, scope: !12118, inlinedAt: !12153)
!12155 = !DILocation(line: 131, column: 2, scope: !12145)
!12156 = !DILocation(line: 147, column: 3, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !12113, line: 147, column: 3)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !12113, line: 147, column: 3)
!12159 = distinct !DILexicalBlock(scope: !12160, file: !12113, line: 146, column: 32)
!12160 = distinct !DILexicalBlock(scope: !12145, file: !12113, line: 146, column: 6)
!12161 = !DILocation(line: 147, column: 3, scope: !12158)
!12162 = !DILocation(line: 147, column: 3, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12157, file: !12113, line: 147, column: 3)
!12164 = !DILocation(line: 104, column: 4, scope: !12145)
!12165 = !DILocalVariable(name: "key", arg: 1, scope: !12166, file: !5954, line: 84, type: !32)
!12166 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12167)
!12167 = !{!12165}
!12168 = !DILocation(line: 0, scope: !12166, inlinedAt: !12169)
!12169 = distinct !DILocation(line: 186, column: 2, scope: !12145)
!12170 = !DILocation(line: 95, column: 2, scope: !12166, inlinedAt: !12169)
!12171 = !{i64 1653707}
!12172 = !DILocation(line: 189, column: 3, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12174, file: !12113, line: 188, column: 41)
!12174 = distinct !DILexicalBlock(scope: !12145, file: !12113, line: 188, column: 6)
!12175 = !DILocation(line: 191, column: 1, scope: !12145)
!12176 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !12177, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !2037)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{!12179}
!12179 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !11963)
!12180 = !DILocation(line: 535, column: 9, scope: !12176)
!12181 = !DILocation(line: 535, column: 2, scope: !12176)
!12182 = distinct !DISubprogram(name: "k_thread_abort", scope: !3261, file: !3261, line: 188, type: !12183, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !12185)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{null, !12179}
!12185 = !{!12186}
!12186 = !DILocalVariable(name: "thread", arg: 1, scope: !12182, file: !3261, line: 188, type: !12179)
!12187 = !DILocation(line: 0, scope: !12182)
!12188 = !DILocation(line: 197, column: 2, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12182, file: !3261, line: 197, column: 2)
!12190 = !{i64 2152223141}
!12191 = !DILocation(line: 198, column: 2, scope: !12182)
!12192 = !DILocation(line: 199, column: 1, scope: !12182)
!12193 = distinct !DISubprogram(name: "z_current_get", scope: !3261, file: !3261, line: 173, type: !12177, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !2037)
!12194 = !DILocation(line: 180, column: 2, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12193, file: !3261, line: 180, column: 2)
!12196 = !{i64 2152223073}
!12197 = !DILocation(line: 181, column: 9, scope: !12193)
!12198 = !DILocation(line: 181, column: 2, scope: !12193)
!12199 = distinct !DISubprogram(name: "z_early_memset", scope: !1827, file: !1827, line: 108, type: !12200, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12202)
!12200 = !DISubroutineType(types: !12201)
!12201 = !{null, !108, !109, !235}
!12202 = !{!12203, !12204, !12205}
!12203 = !DILocalVariable(name: "dst", arg: 1, scope: !12199, file: !1827, line: 108, type: !108)
!12204 = !DILocalVariable(name: "c", arg: 2, scope: !12199, file: !1827, line: 108, type: !109)
!12205 = !DILocalVariable(name: "n", arg: 3, scope: !12199, file: !1827, line: 108, type: !235)
!12206 = !DILocation(line: 0, scope: !12199)
!12207 = !DILocation(line: 110, column: 9, scope: !12199)
!12208 = !DILocation(line: 111, column: 1, scope: !12199)
!12209 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1827, file: !1827, line: 121, type: !12210, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12212)
!12210 = !DISubroutineType(types: !12211)
!12211 = !{null, !108, !13, !235}
!12212 = !{!12213, !12214, !12215}
!12213 = !DILocalVariable(name: "dst", arg: 1, scope: !12209, file: !1827, line: 121, type: !108)
!12214 = !DILocalVariable(name: "src", arg: 2, scope: !12209, file: !1827, line: 121, type: !13)
!12215 = !DILocalVariable(name: "n", arg: 3, scope: !12209, file: !1827, line: 121, type: !235)
!12216 = !DILocation(line: 0, scope: !12209)
!12217 = !DILocation(line: 123, column: 9, scope: !12209)
!12218 = !DILocation(line: 124, column: 1, scope: !12209)
!12219 = distinct !DISubprogram(name: "z_bss_zero", scope: !1827, file: !1827, line: 132, type: !3076, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !2037)
!12220 = !DILocation(line: 143, column: 2, scope: !12219)
!12221 = !DILocation(line: 168, column: 1, scope: !12219)
!12222 = distinct !DISubprogram(name: "z_init_cpu", scope: !1827, file: !1827, line: 372, type: !3404, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12223)
!12223 = !{!12224}
!12224 = !DILocalVariable(name: "id", arg: 1, scope: !12222, file: !1827, line: 372, type: !109)
!12225 = !DILocation(line: 0, scope: !12222)
!12226 = !DILocation(line: 374, column: 2, scope: !12222)
!12227 = !DILocation(line: 375, column: 34, scope: !12222)
!12228 = !DILocation(line: 375, column: 19, scope: !12222)
!12229 = !DILocation(line: 375, column: 31, scope: !12222)
!12230 = !DILocation(line: 376, column: 24, scope: !12222)
!12231 = !DILocation(line: 376, column: 19, scope: !12222)
!12232 = !DILocation(line: 376, column: 22, scope: !12222)
!12233 = !DILocation(line: 378, column: 26, scope: !12222)
!12234 = !DILocation(line: 378, column: 4, scope: !12222)
!12235 = !DILocation(line: 378, column: 50, scope: !12222)
!12236 = !DILocation(line: 377, column: 19, scope: !12222)
!12237 = !DILocation(line: 377, column: 29, scope: !12222)
!12238 = !DILocation(line: 384, column: 1, scope: !12222)
!12239 = distinct !DISubprogram(name: "init_idle_thread", scope: !1827, file: !1827, line: 343, type: !3404, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12240)
!12240 = !{!12241, !12242, !12243, !12246}
!12241 = !DILocalVariable(name: "i", arg: 1, scope: !12239, file: !1827, line: 343, type: !109)
!12242 = !DILocalVariable(name: "thread", scope: !12239, file: !1827, line: 345, type: !1920)
!12243 = !DILocalVariable(name: "stack", scope: !12239, file: !1827, line: 346, type: !12244)
!12244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12245, size: 32)
!12245 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !2061)
!12246 = !DILocalVariable(name: "tname", scope: !12239, file: !1827, line: 354, type: !1185)
!12247 = !DILocation(line: 0, scope: !12239)
!12248 = !DILocation(line: 345, column: 29, scope: !12239)
!12249 = !DILocation(line: 346, column: 28, scope: !12239)
!12250 = !DILocation(line: 362, column: 37, scope: !12239)
!12251 = !DILocation(line: 362, column: 36, scope: !12239)
!12252 = !DILocation(line: 361, column: 2, scope: !12239)
!12253 = !DILocation(line: 365, column: 2, scope: !12239)
!12254 = !DILocation(line: 370, column: 1, scope: !12239)
!12255 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12256, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12258)
!12256 = !DISubroutineType(types: !12257)
!12257 = !{!1185, !12244}
!12258 = !{!12259}
!12259 = !DILocalVariable(name: "sym", arg: 1, scope: !12255, file: !273, line: 331, type: !12244)
!12260 = !DILocation(line: 0, scope: !12255)
!12261 = !DILocation(line: 333, column: 21, scope: !12255)
!12262 = !DILocation(line: 333, column: 2, scope: !12255)
!12263 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12264, file: !12264, line: 155, type: !12265, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12267)
!12264 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12265 = !DISubroutineType(types: !12266)
!12266 = !{null, !1920}
!12267 = !{!12268}
!12268 = !DILocalVariable(name: "thread", arg: 1, scope: !12263, file: !12264, line: 155, type: !1920)
!12269 = !DILocation(line: 0, scope: !12263)
!12270 = !DILocation(line: 157, column: 15, scope: !12263)
!12271 = !DILocation(line: 157, column: 28, scope: !12263)
!12272 = !DILocation(line: 158, column: 1, scope: !12263)
!12273 = distinct !DISubprogram(name: "z_cstart", scope: !1827, file: !1827, line: 501, type: !3076, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12274)
!12274 = !{!12275}
!12275 = !DILocalVariable(name: "dummy_thread", scope: !12273, file: !1827, line: 518, type: !1921)
!12276 = !DILocation(line: 507, column: 2, scope: !12273)
!12277 = !DILocation(line: 43, column: 14, scope: !12278, inlinedAt: !12282)
!12278 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12279, file: !12279, line: 40, type: !3076, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12280)
!12279 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12280 = !{!12281}
!12281 = !DILocalVariable(name: "msp", scope: !12278, file: !12279, line: 42, type: !110)
!12282 = distinct !DILocation(line: 44, column: 2, scope: !12283, inlinedAt: !12285)
!12283 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12284, file: !12284, line: 42, type: !3076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !2037)
!12284 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12285 = distinct !DILocation(line: 510, column: 2, scope: !12273)
!12286 = !DILocation(line: 43, column: 3, scope: !12278, inlinedAt: !12282)
!12287 = !DILocation(line: 43, column: 60, scope: !12278, inlinedAt: !12282)
!12288 = !DILocation(line: 0, scope: !12278, inlinedAt: !12282)
!12289 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12290, file: !6145, line: 1153, type: !110)
!12290 = distinct !DISubprogram(name: "__set_MSP", scope: !6145, file: !6145, line: 1153, type: !5978, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12291)
!12291 = !{!12289}
!12292 = !DILocation(line: 0, scope: !12290, inlinedAt: !12293)
!12293 = distinct !DILocation(line: 46, column: 2, scope: !12278, inlinedAt: !12282)
!12294 = !DILocation(line: 1155, column: 3, scope: !12290, inlinedAt: !12293)
!12295 = !{i64 2466414}
!12296 = !DILocation(line: 62, column: 11, scope: !12278, inlinedAt: !12282)
!12297 = !DILocation(line: 102, column: 2, scope: !12298, inlinedAt: !12299)
!12298 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6948, file: !6948, line: 97, type: !3076, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !2037)
!12299 = distinct !DILocation(line: 45, column: 2, scope: !12283, inlinedAt: !12285)
!12300 = !DILocation(line: 108, column: 2, scope: !12298, inlinedAt: !12299)
!12301 = !DILocation(line: 112, column: 2, scope: !12298, inlinedAt: !12299)
!12302 = !DILocation(line: 113, column: 2, scope: !12298, inlinedAt: !12299)
!12303 = !DILocation(line: 114, column: 2, scope: !12298, inlinedAt: !12299)
!12304 = !DILocation(line: 116, column: 2, scope: !12298, inlinedAt: !12299)
!12305 = !DILocation(line: 123, column: 13, scope: !12298, inlinedAt: !12299)
!12306 = !DILocation(line: 46, column: 2, scope: !12283, inlinedAt: !12285)
!12307 = !DILocation(line: 47, column: 2, scope: !12283, inlinedAt: !12285)
!12308 = !DILocation(line: 174, column: 12, scope: !12309, inlinedAt: !12310)
!12309 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6948, file: !6948, line: 169, type: !3076, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !2037)
!12310 = distinct !DILocation(line: 48, column: 2, scope: !12283, inlinedAt: !12285)
!12311 = !DILocation(line: 179, column: 12, scope: !12309, inlinedAt: !12310)
!12312 = !DILocation(line: 50, column: 2, scope: !12283, inlinedAt: !12285)
!12313 = !DILocation(line: 57, column: 2, scope: !12283, inlinedAt: !12285)
!12314 = !DILocation(line: 518, column: 2, scope: !12273)
!12315 = !DILocation(line: 518, column: 18, scope: !12273)
!12316 = !DILocation(line: 520, column: 2, scope: !12273)
!12317 = !DILocation(line: 523, column: 2, scope: !12273)
!12318 = !DILocation(line: 526, column: 2, scope: !12273)
!12319 = !DILocation(line: 527, column: 2, scope: !12273)
!12320 = !DILocation(line: 543, column: 24, scope: !12273)
!12321 = !DILocation(line: 543, column: 2, scope: !12273)
!12322 = !DILocation(line: 0, scope: !2080)
!12323 = !DILocation(line: 246, column: 15, scope: !2098)
!12324 = !DILocation(line: 246, column: 36, scope: !2097)
!12325 = !DILocation(line: 246, column: 2, scope: !2098)
!12326 = !DILocation(line: 247, column: 37, scope: !2096)
!12327 = !DILocation(line: 0, scope: !2096)
!12328 = !DILocation(line: 248, column: 19, scope: !2096)
!12329 = !DILocation(line: 248, column: 12, scope: !2096)
!12330 = !DILocation(line: 250, column: 11, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !2096, file: !1827, line: 250, column: 7)
!12332 = !DILocation(line: 250, column: 7, scope: !2096)
!12333 = !DILocation(line: 254, column: 11, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !1827, line: 254, column: 8)
!12335 = distinct !DILexicalBlock(scope: !12331, file: !1827, line: 250, column: 20)
!12336 = !DILocation(line: 254, column: 8, scope: !12335)
!12337 = !DILocation(line: 255, column: 9, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12334, file: !1827, line: 254, column: 17)
!12339 = !DILocation(line: 258, column: 9, scope: !12338)
!12340 = !DILocation(line: 261, column: 28, scope: !12338)
!12341 = !DILocation(line: 261, column: 10, scope: !12338)
!12342 = !DILocation(line: 261, column: 17, scope: !12338)
!12343 = !DILocation(line: 261, column: 26, scope: !12338)
!12344 = !DILocation(line: 262, column: 4, scope: !12338)
!12345 = !DILocation(line: 263, column: 9, scope: !12335)
!12346 = !DILocation(line: 263, column: 16, scope: !12335)
!12347 = !DILocation(line: 263, column: 28, scope: !12335)
!12348 = !DILocation(line: 264, column: 3, scope: !12335)
!12349 = !DILocation(line: 246, column: 60, scope: !2097)
!12350 = distinct !{!12350, !12325, !12351}
!12351 = !DILocation(line: 265, column: 2, scope: !2098)
!12352 = !DILocation(line: 266, column: 1, scope: !2080)
!12353 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !549, file: !549, line: 1638, type: !6185, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12354)
!12354 = !{!12355, !12356}
!12355 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12353, file: !549, line: 1638, type: !863)
!12356 = !DILocalVariable(name: "priority", arg: 2, scope: !12353, file: !549, line: 1638, type: !110)
!12357 = !DILocation(line: 0, scope: !12353)
!12358 = !DILocation(line: 1646, column: 48, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12360, file: !549, line: 1645, column: 3)
!12360 = distinct !DILexicalBlock(scope: !12353, file: !549, line: 1640, column: 7)
!12361 = !DILocation(line: 1646, column: 32, scope: !12359)
!12362 = !DILocation(line: 1646, column: 40, scope: !12359)
!12363 = !DILocation(line: 1646, column: 5, scope: !12359)
!12364 = !DILocation(line: 1646, column: 46, scope: !12359)
!12365 = !DILocation(line: 1648, column: 1, scope: !12353)
!12366 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12284, file: !12284, line: 32, type: !3076, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!12367 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12368, file: !12368, line: 215, type: !12265, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12369)
!12368 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12369 = !{!12370}
!12370 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12367, file: !12368, line: 215, type: !1920)
!12371 = !DILocation(line: 0, scope: !12367)
!12372 = !DILocation(line: 217, column: 21, scope: !12367)
!12373 = !DILocation(line: 217, column: 34, scope: !12367)
!12374 = !DILocation(line: 221, column: 21, scope: !12367)
!12375 = !DILocation(line: 221, column: 34, scope: !12367)
!12376 = !DILocation(line: 223, column: 27, scope: !12367)
!12377 = !DILocation(line: 223, column: 33, scope: !12367)
!12378 = !DILocation(line: 224, column: 27, scope: !12367)
!12379 = !DILocation(line: 224, column: 32, scope: !12367)
!12380 = !DILocation(line: 232, column: 16, scope: !12367)
!12381 = !DILocation(line: 232, column: 30, scope: !12367)
!12382 = !DILocation(line: 239, column: 24, scope: !12367)
!12383 = !DILocation(line: 240, column: 1, scope: !12367)
!12384 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1827, file: !1827, line: 399, type: !12385, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12387)
!12385 = !DISubroutineType(types: !12386)
!12386 = !{!1185}
!12387 = !{!12388}
!12388 = !DILocalVariable(name: "stack_ptr", scope: !12384, file: !1827, line: 401, type: !1185)
!12389 = !DILocation(line: 404, column: 2, scope: !12384)
!12390 = !DILocation(line: 416, column: 24, scope: !12384)
!12391 = !DILocation(line: 418, column: 14, scope: !12384)
!12392 = !DILocation(line: 0, scope: !12384)
!12393 = !DILocation(line: 423, column: 2, scope: !12384)
!12394 = !DILocation(line: 424, column: 2, scope: !12384)
!12395 = !DILocation(line: 426, column: 2, scope: !12384)
!12396 = !DILocation(line: 428, column: 2, scope: !12384)
!12397 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1827, file: !1827, line: 432, type: !12398, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12400)
!12398 = !DISubroutineType(types: !12399)
!12399 = !{null, !1185}
!12400 = !{!12401}
!12401 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12397, file: !1827, line: 432, type: !1185)
!12402 = !DILocation(line: 0, scope: !12397)
!12403 = !DILocation(line: 435, column: 2, scope: !12397)
!12404 = !DILocation(line: 445, column: 2, scope: !12397)
!12405 = distinct !DISubprogram(name: "bg_thread_main", scope: !1827, file: !1827, line: 277, type: !218, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1823, retainedNodes: !12406)
!12406 = !{!12407, !12408, !12409}
!12407 = !DILocalVariable(name: "unused1", arg: 1, scope: !12405, file: !1827, line: 277, type: !108)
!12408 = !DILocalVariable(name: "unused2", arg: 2, scope: !12405, file: !1827, line: 277, type: !108)
!12409 = !DILocalVariable(name: "unused3", arg: 3, scope: !12405, file: !1827, line: 277, type: !108)
!12410 = !DILocation(line: 0, scope: !12405)
!12411 = !DILocation(line: 291, column: 20, scope: !12405)
!12412 = !DILocation(line: 293, column: 2, scope: !12405)
!12413 = !DILocation(line: 297, column: 2, scope: !12405)
!12414 = !DILocation(line: 305, column: 2, scope: !12405)
!12415 = !DILocation(line: 307, column: 2, scope: !12405)
!12416 = !DILocation(line: 330, column: 8, scope: !12405)
!12417 = !DILocation(line: 333, column: 34, scope: !12405)
!12418 = !DILocation(line: 339, column: 1, scope: !12405)
!12419 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2127, file: !2127, line: 45, type: !12420, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12428)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{null, !12422, !108}
!12422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !119, line: 103, baseType: !12423)
!12423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12424, size: 32)
!12424 = !DISubroutineType(types: !12425)
!12425 = !{null, !12426, !108}
!12426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12427, size: 32)
!12427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2132)
!12428 = !{!12429, !12430, !12431, !12432}
!12429 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12419, file: !2127, line: 45, type: !12422)
!12430 = !DILocalVariable(name: "user_data", arg: 2, scope: !12419, file: !2127, line: 45, type: !108)
!12431 = !DILocalVariable(name: "thread", scope: !12419, file: !2127, line: 48, type: !2131)
!12432 = !DILocalVariable(name: "key", scope: !12419, file: !2127, line: 49, type: !12433)
!12433 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !12434)
!12434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !12435)
!12435 = !{!12436}
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12434, file: !254, line: 33, baseType: !109, size: 32)
!12437 = !DILocation(line: 0, scope: !12419)
!12438 = !DILocation(line: 51, column: 2, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12440, file: !2127, line: 51, column: 2)
!12440 = distinct !DILexicalBlock(scope: !12419, file: !2127, line: 51, column: 2)
!12441 = !DILocation(line: 51, column: 2, scope: !12440)
!12442 = !DILocation(line: 51, column: 2, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12439, file: !2127, line: 51, column: 2)
!12444 = !DILocalVariable(name: "l", arg: 1, scope: !12445, file: !254, line: 136, type: !12448)
!12445 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !12446, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12449)
!12446 = !DISubroutineType(types: !12447)
!12447 = !{!12433, !12448}
!12448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!12449 = !{!12444, !12450}
!12450 = !DILocalVariable(name: "k", scope: !12445, file: !254, line: 139, type: !12433)
!12451 = !DILocation(line: 0, scope: !12445, inlinedAt: !12452)
!12452 = distinct !DILocation(line: 59, column: 8, scope: !12419)
!12453 = !DILocation(line: 55, column: 2, scope: !12454, inlinedAt: !12458)
!12454 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12455)
!12455 = !{!12456, !12457}
!12456 = !DILocalVariable(name: "key", scope: !12454, file: !5954, line: 44, type: !32)
!12457 = !DILocalVariable(name: "tmp", scope: !12454, file: !5954, line: 53, type: !32)
!12458 = distinct !DILocation(line: 145, column: 10, scope: !12445, inlinedAt: !12452)
!12459 = !{i64 1678046}
!12460 = !DILocation(line: 0, scope: !12454, inlinedAt: !12458)
!12461 = !DILocation(line: 148, column: 2, scope: !12462, inlinedAt: !12452)
!12462 = distinct !DILexicalBlock(scope: !12463, file: !254, line: 148, column: 2)
!12463 = distinct !DILexicalBlock(scope: !12445, file: !254, line: 148, column: 2)
!12464 = !DILocation(line: 148, column: 2, scope: !12463, inlinedAt: !12452)
!12465 = !DILocation(line: 148, column: 2, scope: !12466, inlinedAt: !12452)
!12466 = distinct !DILexicalBlock(scope: !12462, file: !254, line: 148, column: 2)
!12467 = !DILocation(line: 160, column: 2, scope: !12445, inlinedAt: !12452)
!12468 = !DILocation(line: 0, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12419, file: !2127, line: 63, column: 2)
!12470 = !DILocation(line: 63, column: 2, scope: !12469)
!12471 = !DILocation(line: 64, column: 3, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !2127, line: 63, column: 71)
!12473 = distinct !DILexicalBlock(scope: !12469, file: !2127, line: 63, column: 2)
!12474 = !DILocation(line: 63, column: 58, scope: !12473)
!12475 = distinct !{!12475, !12470, !12476}
!12476 = !DILocation(line: 65, column: 2, scope: !12469)
!12477 = !DILocalVariable(name: "key", arg: 2, scope: !12478, file: !254, line: 190, type: !12433)
!12478 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !12479, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12481)
!12479 = !DISubroutineType(types: !12480)
!12480 = !{null, !12448, !12433}
!12481 = !{!12482, !12477}
!12482 = !DILocalVariable(name: "l", arg: 1, scope: !12478, file: !254, line: 189, type: !12448)
!12483 = !DILocation(line: 0, scope: !12478, inlinedAt: !12484)
!12484 = distinct !DILocation(line: 69, column: 2, scope: !12419)
!12485 = !DILocation(line: 194, column: 2, scope: !12486, inlinedAt: !12484)
!12486 = distinct !DILexicalBlock(scope: !12487, file: !254, line: 194, column: 2)
!12487 = distinct !DILexicalBlock(scope: !12478, file: !254, line: 194, column: 2)
!12488 = !DILocation(line: 194, column: 2, scope: !12487, inlinedAt: !12484)
!12489 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12484)
!12490 = distinct !DILexicalBlock(scope: !12486, file: !254, line: 194, column: 2)
!12491 = !DILocalVariable(name: "key", arg: 1, scope: !12492, file: !5954, line: 84, type: !32)
!12492 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12493)
!12493 = !{!12491}
!12494 = !DILocation(line: 0, scope: !12492, inlinedAt: !12495)
!12495 = distinct !DILocation(line: 215, column: 2, scope: !12478, inlinedAt: !12484)
!12496 = !DILocation(line: 95, column: 2, scope: !12492, inlinedAt: !12495)
!12497 = !{i64 1678863}
!12498 = !DILocation(line: 71, column: 1, scope: !12419)
!12499 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2127, file: !2127, line: 853, type: !12500, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12502)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{!347, !12448}
!12502 = !{!12503, !12504}
!12503 = !DILocalVariable(name: "l", arg: 1, scope: !12499, file: !2127, line: 853, type: !12448)
!12504 = !DILocalVariable(name: "thread_cpu", scope: !12499, file: !2127, line: 855, type: !22)
!12505 = !DILocation(line: 0, scope: !12499)
!12506 = !DILocation(line: 855, column: 28, scope: !12499)
!12507 = !DILocation(line: 857, column: 17, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12499, file: !2127, line: 857, column: 6)
!12509 = !DILocation(line: 857, column: 6, scope: !12499)
!12510 = !DILocation(line: 858, column: 19, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !2127, line: 858, column: 7)
!12512 = distinct !DILexicalBlock(scope: !12508, file: !2127, line: 857, column: 24)
!12513 = !DILocation(line: 858, column: 42, scope: !12511)
!12514 = !DILocation(line: 858, column: 28, scope: !12511)
!12515 = !DILocation(line: 858, column: 25, scope: !12511)
!12516 = !DILocation(line: 858, column: 7, scope: !12512)
!12517 = !DILocation(line: 862, column: 2, scope: !12499)
!12518 = !DILocation(line: 863, column: 1, scope: !12499)
!12519 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2127, file: !2127, line: 874, type: !12520, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12522)
!12520 = !DISubroutineType(types: !12521)
!12521 = !{null, !12448}
!12522 = !{!12523}
!12523 = !DILocalVariable(name: "l", arg: 1, scope: !12519, file: !2127, line: 874, type: !12448)
!12524 = !DILocation(line: 0, scope: !12519)
!12525 = !DILocation(line: 876, column: 32, scope: !12519)
!12526 = !DILocation(line: 876, column: 18, scope: !12519)
!12527 = !DILocation(line: 876, column: 48, scope: !12519)
!12528 = !DILocation(line: 876, column: 37, scope: !12519)
!12529 = !DILocation(line: 876, column: 35, scope: !12519)
!12530 = !DILocation(line: 876, column: 5, scope: !12519)
!12531 = !DILocation(line: 876, column: 16, scope: !12519)
!12532 = !DILocation(line: 877, column: 1, scope: !12519)
!12533 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2127, file: !2127, line: 865, type: !12500, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12534)
!12534 = !{!12535}
!12535 = !DILocalVariable(name: "l", arg: 1, scope: !12533, file: !2127, line: 865, type: !12448)
!12536 = !DILocation(line: 0, scope: !12533)
!12537 = !DILocation(line: 867, column: 9, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12533, file: !2127, line: 867, column: 6)
!12539 = !DILocation(line: 867, column: 38, scope: !12538)
!12540 = !DILocation(line: 867, column: 24, scope: !12538)
!12541 = !DILocation(line: 867, column: 54, scope: !12538)
!12542 = !DILocation(line: 867, column: 43, scope: !12538)
!12543 = !DILocation(line: 867, column: 41, scope: !12538)
!12544 = !DILocation(line: 867, column: 20, scope: !12538)
!12545 = !DILocation(line: 867, column: 6, scope: !12533)
!12546 = !DILocation(line: 870, column: 16, scope: !12533)
!12547 = !DILocation(line: 871, column: 2, scope: !12533)
!12548 = !DILocation(line: 872, column: 1, scope: !12533)
!12549 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2127, file: !2127, line: 73, type: !12420, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12550)
!12550 = !{!12551, !12552, !12553, !12554}
!12551 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12549, file: !2127, line: 73, type: !12422)
!12552 = !DILocalVariable(name: "user_data", arg: 2, scope: !12549, file: !2127, line: 73, type: !108)
!12553 = !DILocalVariable(name: "thread", scope: !12549, file: !2127, line: 76, type: !2131)
!12554 = !DILocalVariable(name: "key", scope: !12549, file: !2127, line: 77, type: !12433)
!12555 = !DILocation(line: 0, scope: !12549)
!12556 = !DILocation(line: 79, column: 2, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12558, file: !2127, line: 79, column: 2)
!12558 = distinct !DILexicalBlock(scope: !12549, file: !2127, line: 79, column: 2)
!12559 = !DILocation(line: 79, column: 2, scope: !12558)
!12560 = !DILocation(line: 79, column: 2, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12557, file: !2127, line: 79, column: 2)
!12562 = !DILocation(line: 0, scope: !12445, inlinedAt: !12563)
!12563 = distinct !DILocation(line: 81, column: 8, scope: !12549)
!12564 = !DILocation(line: 55, column: 2, scope: !12454, inlinedAt: !12565)
!12565 = distinct !DILocation(line: 145, column: 10, scope: !12445, inlinedAt: !12563)
!12566 = !DILocation(line: 0, scope: !12454, inlinedAt: !12565)
!12567 = !DILocation(line: 148, column: 2, scope: !12462, inlinedAt: !12563)
!12568 = !DILocation(line: 148, column: 2, scope: !12463, inlinedAt: !12563)
!12569 = !DILocation(line: 148, column: 2, scope: !12466, inlinedAt: !12563)
!12570 = !DILocation(line: 160, column: 2, scope: !12445, inlinedAt: !12563)
!12571 = !DILocation(line: 0, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12549, file: !2127, line: 85, column: 2)
!12573 = !DILocation(line: 85, column: 2, scope: !12572)
!12574 = !DILocation(line: 0, scope: !12478, inlinedAt: !12575)
!12575 = distinct !DILocation(line: 86, column: 3, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !2127, line: 85, column: 71)
!12577 = distinct !DILexicalBlock(scope: !12572, file: !2127, line: 85, column: 2)
!12578 = !DILocation(line: 194, column: 2, scope: !12486, inlinedAt: !12575)
!12579 = !DILocation(line: 194, column: 2, scope: !12487, inlinedAt: !12575)
!12580 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12575)
!12581 = !DILocation(line: 0, scope: !12492, inlinedAt: !12582)
!12582 = distinct !DILocation(line: 215, column: 2, scope: !12478, inlinedAt: !12575)
!12583 = !DILocation(line: 95, column: 2, scope: !12492, inlinedAt: !12582)
!12584 = !DILocation(line: 87, column: 3, scope: !12576)
!12585 = !DILocation(line: 0, scope: !12445, inlinedAt: !12586)
!12586 = distinct !DILocation(line: 88, column: 9, scope: !12576)
!12587 = !DILocation(line: 55, column: 2, scope: !12454, inlinedAt: !12588)
!12588 = distinct !DILocation(line: 145, column: 10, scope: !12445, inlinedAt: !12586)
!12589 = !DILocation(line: 0, scope: !12454, inlinedAt: !12588)
!12590 = !DILocation(line: 148, column: 2, scope: !12462, inlinedAt: !12586)
!12591 = !DILocation(line: 148, column: 2, scope: !12463, inlinedAt: !12586)
!12592 = !DILocation(line: 148, column: 2, scope: !12466, inlinedAt: !12586)
!12593 = !DILocation(line: 160, column: 2, scope: !12445, inlinedAt: !12586)
!12594 = !DILocation(line: 85, column: 58, scope: !12577)
!12595 = distinct !{!12595, !12573, !12596}
!12596 = !DILocation(line: 89, column: 2, scope: !12572)
!12597 = !DILocation(line: 0, scope: !12478, inlinedAt: !12598)
!12598 = distinct !DILocation(line: 93, column: 2, scope: !12549)
!12599 = !DILocation(line: 194, column: 2, scope: !12486, inlinedAt: !12598)
!12600 = !DILocation(line: 194, column: 2, scope: !12487, inlinedAt: !12598)
!12601 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12598)
!12602 = !DILocation(line: 0, scope: !12492, inlinedAt: !12603)
!12603 = distinct !DILocation(line: 215, column: 2, scope: !12478, inlinedAt: !12598)
!12604 = !DILocation(line: 95, column: 2, scope: !12492, inlinedAt: !12603)
!12605 = !DILocation(line: 95, column: 1, scope: !12549)
!12606 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2127, file: !2127, line: 97, type: !6949, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !2037)
!12607 = !DILocation(line: 1031, column: 3, scope: !12608, inlinedAt: !12611)
!12608 = distinct !DISubprogram(name: "__get_IPSR", scope: !6145, file: !6145, line: 1027, type: !3358, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12609)
!12609 = !{!12610}
!12610 = !DILocalVariable(name: "result", scope: !12608, file: !6145, line: 1029, type: !110)
!12611 = distinct !DILocation(line: 48, column: 10, scope: !12612, inlinedAt: !12613)
!12612 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6948, file: !6948, line: 46, type: !6949, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !2037)
!12613 = distinct !DILocation(line: 99, column: 9, scope: !12606)
!12614 = !{i64 2471981}
!12615 = !DILocation(line: 0, scope: !12608, inlinedAt: !12611)
!12616 = !DILocation(line: 48, column: 9, scope: !12612, inlinedAt: !12613)
!12617 = !DILocation(line: 99, column: 2, scope: !12606)
!12618 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2127, file: !2127, line: 106, type: !3076, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !2037)
!12619 = !DILocation(line: 108, column: 2, scope: !12618)
!12620 = !DILocation(line: 108, column: 17, scope: !12618)
!12621 = !DILocation(line: 108, column: 30, scope: !12618)
!12622 = !DILocation(line: 109, column: 1, scope: !12618)
!12623 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2127, file: !2127, line: 116, type: !3076, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !2037)
!12624 = !DILocation(line: 118, column: 2, scope: !12623)
!12625 = !DILocation(line: 118, column: 17, scope: !12623)
!12626 = !DILocation(line: 118, column: 30, scope: !12623)
!12627 = !DILocation(line: 119, column: 1, scope: !12623)
!12628 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2127, file: !2127, line: 126, type: !6949, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !2037)
!12629 = !DILocation(line: 128, column: 10, scope: !12628)
!12630 = !DILocation(line: 128, column: 25, scope: !12628)
!12631 = !DILocation(line: 128, column: 38, scope: !12628)
!12632 = !DILocation(line: 128, column: 53, scope: !12628)
!12633 = !DILocation(line: 128, column: 2, scope: !12628)
!12634 = distinct !DISubprogram(name: "z_thread_monitor_exit", scope: !2127, file: !2127, line: 164, type: !12635, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12637)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{null, !2131}
!12637 = !{!12638, !12639, !12640}
!12638 = !DILocalVariable(name: "thread", arg: 1, scope: !12634, file: !2127, line: 164, type: !2131)
!12639 = !DILocalVariable(name: "key", scope: !12634, file: !2127, line: 166, type: !12433)
!12640 = !DILocalVariable(name: "prev_thread", scope: !12641, file: !2127, line: 171, type: !2131)
!12641 = distinct !DILexicalBlock(scope: !12642, file: !2127, line: 170, column: 9)
!12642 = distinct !DILexicalBlock(scope: !12634, file: !2127, line: 168, column: 6)
!12643 = !DILocation(line: 0, scope: !12634)
!12644 = !DILocation(line: 0, scope: !12445, inlinedAt: !12645)
!12645 = distinct !DILocation(line: 166, column: 25, scope: !12634)
!12646 = !DILocation(line: 55, column: 2, scope: !12454, inlinedAt: !12647)
!12647 = distinct !DILocation(line: 145, column: 10, scope: !12445, inlinedAt: !12645)
!12648 = !DILocation(line: 0, scope: !12454, inlinedAt: !12647)
!12649 = !DILocation(line: 148, column: 2, scope: !12462, inlinedAt: !12645)
!12650 = !DILocation(line: 148, column: 2, scope: !12463, inlinedAt: !12645)
!12651 = !DILocation(line: 148, column: 2, scope: !12466, inlinedAt: !12645)
!12652 = !DILocation(line: 160, column: 2, scope: !12445, inlinedAt: !12645)
!12653 = !DILocation(line: 168, column: 24, scope: !12642)
!12654 = !DILocation(line: 168, column: 13, scope: !12642)
!12655 = !DILocation(line: 168, column: 6, scope: !12634)
!12656 = !DILocation(line: 169, column: 38, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12642, file: !2127, line: 168, column: 33)
!12658 = !DILocation(line: 169, column: 19, scope: !12657)
!12659 = !DILocation(line: 170, column: 2, scope: !12657)
!12660 = !DILocation(line: 0, scope: !12641)
!12661 = !DILocation(line: 174, column: 23, scope: !12641)
!12662 = !DILocation(line: 174, column: 32, scope: !12641)
!12663 = !DILocation(line: 175, column: 28, scope: !12641)
!12664 = !DILocation(line: 175, column: 12, scope: !12641)
!12665 = !DILocation(line: 174, column: 3, scope: !12641)
!12666 = distinct !{!12666, !12665, !12667}
!12667 = !DILocation(line: 177, column: 3, scope: !12641)
!12668 = !DILocation(line: 179, column: 39, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !2127, line: 178, column: 28)
!12670 = distinct !DILexicalBlock(scope: !12641, file: !2127, line: 178, column: 7)
!12671 = !DILocation(line: 179, column: 29, scope: !12669)
!12672 = !DILocation(line: 180, column: 3, scope: !12669)
!12673 = !DILocation(line: 0, scope: !12478, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 183, column: 2, scope: !12634)
!12675 = !DILocation(line: 194, column: 2, scope: !12486, inlinedAt: !12674)
!12676 = !DILocation(line: 194, column: 2, scope: !12487, inlinedAt: !12674)
!12677 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12674)
!12678 = !DILocation(line: 0, scope: !12492, inlinedAt: !12679)
!12679 = distinct !DILocation(line: 215, column: 2, scope: !12478, inlinedAt: !12674)
!12680 = !DILocation(line: 95, column: 2, scope: !12492, inlinedAt: !12679)
!12681 = !DILocation(line: 184, column: 1, scope: !12634)
!12682 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2127, file: !2127, line: 187, type: !12683, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12685)
!12683 = !DISubroutineType(types: !12684)
!12684 = !{!109, !2131, !337}
!12685 = !{!12686, !12687}
!12686 = !DILocalVariable(name: "thread", arg: 1, scope: !12682, file: !2127, line: 187, type: !2131)
!12687 = !DILocalVariable(name: "value", arg: 2, scope: !12682, file: !2127, line: 187, type: !337)
!12688 = !DILocation(line: 0, scope: !12682)
!12689 = !DILocation(line: 190, column: 13, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12682, file: !2127, line: 190, column: 6)
!12691 = !DILocation(line: 190, column: 6, scope: !12682)
!12692 = !DILocation(line: 194, column: 10, scope: !12682)
!12693 = !DILocation(line: 194, column: 2, scope: !12682)
!12694 = !DILocation(line: 195, column: 2, scope: !12682)
!12695 = !DILocation(line: 195, column: 47, scope: !12682)
!12696 = !DILocation(line: 199, column: 2, scope: !12682)
!12697 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2127, file: !2127, line: 238, type: !12698, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12700)
!12698 = !DISubroutineType(types: !12699)
!12699 = !{!337, !2131}
!12700 = !{!12701}
!12701 = !DILocalVariable(name: "thread", arg: 1, scope: !12697, file: !2127, line: 238, type: !2131)
!12702 = !DILocation(line: 0, scope: !12697)
!12703 = !DILocation(line: 241, column: 23, scope: !12697)
!12704 = !DILocation(line: 241, column: 2, scope: !12697)
!12705 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2127, file: !2127, line: 248, type: !12706, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12708)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!109, !2130, !1185, !235}
!12708 = !{!12709, !12710, !12711}
!12709 = !DILocalVariable(name: "thread", arg: 1, scope: !12705, file: !2127, line: 248, type: !2130)
!12710 = !DILocalVariable(name: "buf", arg: 2, scope: !12705, file: !2127, line: 248, type: !1185)
!12711 = !DILocalVariable(name: "size", arg: 3, scope: !12705, file: !2127, line: 248, type: !235)
!12712 = !DILocation(line: 0, scope: !12705)
!12713 = !DILocation(line: 251, column: 15, scope: !12705)
!12714 = !DILocation(line: 251, column: 2, scope: !12705)
!12715 = !DILocation(line: 252, column: 2, scope: !12705)
!12716 = !DILocation(line: 0, scope: !2126)
!12717 = !DILocation(line: 281, column: 11, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !2126, file: !2127, line: 281, column: 6)
!12719 = !DILocation(line: 281, column: 20, scope: !12718)
!12720 = !DILocation(line: 275, column: 45, scope: !2126)
!12721 = !DILocation(line: 285, column: 10, scope: !2126)
!12722 = !DILocation(line: 0, scope: !2236)
!12723 = !DILocation(line: 293, column: 39, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !2236, file: !2127, line: 293, column: 2)
!12725 = !DILocation(line: 293, column: 2, scope: !2236)
!12726 = !DILocation(line: 273, column: 14, scope: !2126)
!12727 = !DILocation(line: 309, column: 2, scope: !2126)
!12728 = !DILocation(line: 309, column: 11, scope: !2126)
!12729 = !DILocation(line: 311, column: 2, scope: !2126)
!12730 = !DILocation(line: 293, column: 26, scope: !12724)
!12731 = !DILocation(line: 294, column: 9, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12724, file: !2127, line: 293, column: 54)
!12733 = !DILocation(line: 295, column: 21, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12732, file: !2127, line: 295, column: 7)
!12735 = !DILocation(line: 295, column: 28, scope: !12734)
!12736 = !DILocation(line: 295, column: 7, scope: !12732)
!12737 = !DILocation(line: 299, column: 25, scope: !12732)
!12738 = !DILocation(line: 299, column: 41, scope: !12732)
!12739 = !DILocation(line: 300, column: 7, scope: !12732)
!12740 = !DILocation(line: 300, column: 26, scope: !12732)
!12741 = !DILocation(line: 299, column: 10, scope: !12732)
!12742 = !DILocation(line: 299, column: 7, scope: !12732)
!12743 = !DILocation(line: 302, column: 16, scope: !12732)
!12744 = !DILocation(line: 304, column: 20, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12732, file: !2127, line: 304, column: 7)
!12746 = !DILocation(line: 304, column: 7, scope: !12732)
!12747 = !DILocation(line: 305, column: 26, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12745, file: !2127, line: 304, column: 26)
!12749 = !DILocation(line: 305, column: 42, scope: !12748)
!12750 = !DILocation(line: 305, column: 11, scope: !12748)
!12751 = !DILocation(line: 305, column: 8, scope: !12748)
!12752 = !DILocation(line: 306, column: 3, scope: !12748)
!12753 = !DILocation(line: 293, column: 50, scope: !12724)
!12754 = !DILocation(line: 312, column: 1, scope: !2126)
!12755 = distinct !DISubprogram(name: "copy_bytes", scope: !2127, file: !2127, line: 261, type: !12756, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12758)
!12756 = !DISubroutineType(types: !12757)
!12757 = !{!235, !1185, !235, !337, !235}
!12758 = !{!12759, !12760, !12761, !12762, !12763}
!12759 = !DILocalVariable(name: "dest", arg: 1, scope: !12755, file: !2127, line: 261, type: !1185)
!12760 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12755, file: !2127, line: 261, type: !235)
!12761 = !DILocalVariable(name: "src", arg: 3, scope: !12755, file: !2127, line: 261, type: !337)
!12762 = !DILocalVariable(name: "src_size", arg: 4, scope: !12755, file: !2127, line: 261, type: !235)
!12763 = !DILocalVariable(name: "bytes_to_copy", scope: !12755, file: !2127, line: 263, type: !235)
!12764 = !DILocation(line: 0, scope: !12755)
!12765 = !DILocation(line: 265, column: 18, scope: !12755)
!12766 = !DILocation(line: 266, column: 2, scope: !12755)
!12767 = !DILocation(line: 268, column: 2, scope: !12755)
!12768 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2127, file: !2127, line: 383, type: !12635, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12769)
!12769 = !{!12770}
!12770 = !DILocalVariable(name: "thread", arg: 1, scope: !12768, file: !2127, line: 383, type: !2131)
!12771 = !DILocation(line: 0, scope: !12768)
!12772 = !DILocation(line: 387, column: 2, scope: !12768)
!12773 = !DILocation(line: 388, column: 1, scope: !12768)
!12774 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2127, file: !2127, line: 528, type: !12775, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12782)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{!1185, !2131, !12777, !235, !215, !108, !108, !108, !109, !110, !337}
!12777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12778, size: 32)
!12778 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !12779)
!12779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !12780)
!12780 = !{!12781}
!12781 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12779, file: !273, line: 48, baseType: !226, size: 8)
!12782 = !{!12783, !12784, !12785, !12786, !12787, !12788, !12789, !12790, !12791, !12792, !12793, !12794}
!12783 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12774, file: !2127, line: 528, type: !2131)
!12784 = !DILocalVariable(name: "stack", arg: 2, scope: !12774, file: !2127, line: 529, type: !12777)
!12785 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12774, file: !2127, line: 529, type: !235)
!12786 = !DILocalVariable(name: "entry", arg: 4, scope: !12774, file: !2127, line: 530, type: !215)
!12787 = !DILocalVariable(name: "p1", arg: 5, scope: !12774, file: !2127, line: 531, type: !108)
!12788 = !DILocalVariable(name: "p2", arg: 6, scope: !12774, file: !2127, line: 531, type: !108)
!12789 = !DILocalVariable(name: "p3", arg: 7, scope: !12774, file: !2127, line: 531, type: !108)
!12790 = !DILocalVariable(name: "prio", arg: 8, scope: !12774, file: !2127, line: 532, type: !109)
!12791 = !DILocalVariable(name: "options", arg: 9, scope: !12774, file: !2127, line: 532, type: !110)
!12792 = !DILocalVariable(name: "name", arg: 10, scope: !12774, file: !2127, line: 532, type: !337)
!12793 = !DILocalVariable(name: "stack_ptr", scope: !12774, file: !2127, line: 534, type: !1185)
!12794 = !DILocalVariable(name: "key", scope: !12774, file: !2127, line: 587, type: !12433)
!12795 = !DILocation(line: 0, scope: !12774)
!12796 = !DILocation(line: 536, column: 2, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12798, file: !2127, line: 536, column: 2)
!12798 = distinct !DILexicalBlock(scope: !12799, file: !2127, line: 536, column: 2)
!12799 = distinct !DILexicalBlock(scope: !12774, file: !2127, line: 536, column: 2)
!12800 = !DILocation(line: 536, column: 2, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12797, file: !2127, line: 536, column: 2)
!12802 = !DILocation(line: 550, column: 28, scope: !12774)
!12803 = !DILocation(line: 550, column: 2, scope: !12774)
!12804 = !DILocation(line: 553, column: 34, scope: !12774)
!12805 = !DILocation(line: 553, column: 2, scope: !12774)
!12806 = !DILocation(line: 554, column: 14, scope: !12774)
!12807 = !DILocation(line: 564, column: 2, scope: !12774)
!12808 = !DILocation(line: 567, column: 14, scope: !12774)
!12809 = !DILocation(line: 567, column: 24, scope: !12774)
!12810 = !DILocation(line: 582, column: 20, scope: !12774)
!12811 = !DILocation(line: 582, column: 27, scope: !12774)
!12812 = !DILocation(line: 583, column: 20, scope: !12774)
!12813 = !DILocation(line: 583, column: 31, scope: !12774)
!12814 = !DILocation(line: 584, column: 20, scope: !12774)
!12815 = !DILocation(line: 584, column: 31, scope: !12774)
!12816 = !DILocation(line: 585, column: 20, scope: !12774)
!12817 = !DILocation(line: 585, column: 31, scope: !12774)
!12818 = !DILocation(line: 0, scope: !12445, inlinedAt: !12819)
!12819 = distinct !DILocation(line: 587, column: 25, scope: !12774)
!12820 = !DILocation(line: 55, column: 2, scope: !12454, inlinedAt: !12821)
!12821 = distinct !DILocation(line: 145, column: 10, scope: !12445, inlinedAt: !12819)
!12822 = !DILocation(line: 0, scope: !12454, inlinedAt: !12821)
!12823 = !DILocation(line: 148, column: 2, scope: !12462, inlinedAt: !12819)
!12824 = !DILocation(line: 148, column: 2, scope: !12463, inlinedAt: !12819)
!12825 = !DILocation(line: 148, column: 2, scope: !12466, inlinedAt: !12819)
!12826 = !DILocation(line: 160, column: 2, scope: !12445, inlinedAt: !12819)
!12827 = !DILocation(line: 589, column: 36, scope: !12774)
!12828 = !DILocation(line: 589, column: 14, scope: !12774)
!12829 = !DILocation(line: 589, column: 26, scope: !12774)
!12830 = !DILocation(line: 590, column: 18, scope: !12774)
!12831 = !DILocation(line: 0, scope: !12478, inlinedAt: !12832)
!12832 = distinct !DILocation(line: 591, column: 2, scope: !12774)
!12833 = !DILocation(line: 194, column: 2, scope: !12486, inlinedAt: !12832)
!12834 = !DILocation(line: 194, column: 2, scope: !12487, inlinedAt: !12832)
!12835 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12832)
!12836 = !DILocation(line: 0, scope: !12492, inlinedAt: !12837)
!12837 = distinct !DILocation(line: 215, column: 2, scope: !12478, inlinedAt: !12832)
!12838 = !DILocation(line: 95, column: 2, scope: !12492, inlinedAt: !12837)
!12839 = !DILocation(line: 594, column: 11, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12774, file: !2127, line: 594, column: 6)
!12841 = !DILocation(line: 0, scope: !12840)
!12842 = !DILocation(line: 594, column: 6, scope: !12774)
!12843 = !DILocation(line: 595, column: 3, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12840, file: !2127, line: 594, column: 20)
!12845 = !DILocation(line: 598, column: 3, scope: !12844)
!12846 = !DILocation(line: 598, column: 52, scope: !12844)
!12847 = !DILocation(line: 599, column: 2, scope: !12844)
!12848 = !DILocation(line: 600, column: 23, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12840, file: !2127, line: 599, column: 9)
!12850 = !DILocation(line: 612, column: 7, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12774, file: !2127, line: 612, column: 6)
!12852 = !DILocation(line: 612, column: 6, scope: !12774)
!12853 = !DILocation(line: 627, column: 40, scope: !12774)
!12854 = !DILocation(line: 637, column: 2, scope: !12774)
!12855 = !DILocation(line: 613, column: 15, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12851, file: !2127, line: 612, column: 17)
!12857 = !DILocation(line: 613, column: 29, scope: !12856)
!12858 = !DILocation(line: 638, column: 1, scope: !12774)
!12859 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12264, file: !12264, line: 78, type: !12860, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12862)
!12860 = !DISubroutineType(types: !12861)
!12861 = !{!347, !108}
!12862 = !{!12863}
!12863 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12859, file: !12264, line: 78, type: !108)
!12864 = !DILocation(line: 0, scope: !12859)
!12865 = !DILocation(line: 80, column: 21, scope: !12859)
!12866 = !DILocation(line: 80, column: 2, scope: !12859)
!12867 = distinct !DISubprogram(name: "z_waitq_init", scope: !12868, file: !12868, line: 47, type: !12869, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12871)
!12868 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12869 = !DISubroutineType(types: !12870)
!12870 = !{null, !2148}
!12871 = !{!12872}
!12872 = !DILocalVariable(name: "w", arg: 1, scope: !12867, file: !12868, line: 47, type: !2148)
!12873 = !DILocation(line: 0, scope: !12867)
!12874 = !DILocation(line: 49, column: 21, scope: !12867)
!12875 = !DILocation(line: 49, column: 2, scope: !12867)
!12876 = !DILocation(line: 50, column: 1, scope: !12867)
!12877 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2127, file: !2127, line: 791, type: !12878, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12881)
!12878 = !DISubroutineType(types: !12879)
!12879 = !{null, !12880, !109, !110, !32}
!12880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!12881 = !{!12882, !12883, !12884, !12885}
!12882 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12877, file: !2127, line: 791, type: !12880)
!12883 = !DILocalVariable(name: "priority", arg: 2, scope: !12877, file: !2127, line: 791, type: !109)
!12884 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12877, file: !2127, line: 792, type: !110)
!12885 = !DILocalVariable(name: "options", arg: 4, scope: !12877, file: !2127, line: 792, type: !32)
!12886 = !DILocation(line: 0, scope: !12877)
!12887 = !DILocation(line: 795, column: 15, scope: !12877)
!12888 = !DILocation(line: 795, column: 25, scope: !12877)
!12889 = !DILocation(line: 796, column: 30, scope: !12877)
!12890 = !DILocation(line: 796, column: 15, scope: !12877)
!12891 = !DILocation(line: 796, column: 28, scope: !12877)
!12892 = !DILocation(line: 797, column: 30, scope: !12877)
!12893 = !DILocation(line: 797, column: 15, scope: !12877)
!12894 = !DILocation(line: 797, column: 28, scope: !12877)
!12895 = !DILocation(line: 799, column: 22, scope: !12877)
!12896 = !DILocation(line: 799, column: 15, scope: !12877)
!12897 = !DILocation(line: 799, column: 20, scope: !12877)
!12898 = !DILocation(line: 801, column: 15, scope: !12877)
!12899 = !DILocation(line: 801, column: 28, scope: !12877)
!12900 = !DILocation(line: 814, column: 2, scope: !12877)
!12901 = !DILocation(line: 815, column: 1, scope: !12877)
!12902 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2127, file: !2127, line: 449, type: !12903, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12905)
!12903 = !DISubroutineType(types: !12904)
!12904 = !{!1185, !2131, !12777, !235}
!12905 = !{!12906, !12907, !12908, !12909, !12910, !12911, !12912, !12913}
!12906 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12902, file: !2127, line: 449, type: !2131)
!12907 = !DILocalVariable(name: "stack", arg: 2, scope: !12902, file: !2127, line: 450, type: !12777)
!12908 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12902, file: !2127, line: 450, type: !235)
!12909 = !DILocalVariable(name: "stack_obj_size", scope: !12902, file: !2127, line: 452, type: !235)
!12910 = !DILocalVariable(name: "stack_buf_size", scope: !12902, file: !2127, line: 452, type: !235)
!12911 = !DILocalVariable(name: "stack_ptr", scope: !12902, file: !2127, line: 453, type: !1185)
!12912 = !DILocalVariable(name: "stack_buf_start", scope: !12902, file: !2127, line: 453, type: !1185)
!12913 = !DILocalVariable(name: "delta", scope: !12902, file: !2127, line: 454, type: !235)
!12914 = !DILocation(line: 0, scope: !12902)
!12915 = !DILocation(line: 465, column: 20, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12902, file: !2127, line: 463, column: 2)
!12917 = !DILocation(line: 466, column: 21, scope: !12916)
!12918 = !DILocation(line: 473, column: 28, scope: !12902)
!12919 = !DILocation(line: 514, column: 33, scope: !12902)
!12920 = !DILocation(line: 514, column: 25, scope: !12902)
!12921 = !DILocation(line: 514, column: 31, scope: !12902)
!12922 = !DILocation(line: 515, column: 25, scope: !12902)
!12923 = !DILocation(line: 515, column: 30, scope: !12902)
!12924 = !DILocation(line: 516, column: 25, scope: !12902)
!12925 = !DILocation(line: 516, column: 31, scope: !12902)
!12926 = !DILocation(line: 520, column: 2, scope: !12902)
!12927 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12928, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12930)
!12928 = !DISubroutineType(types: !12929)
!12929 = !{!1185, !12777}
!12930 = !{!12931}
!12931 = !DILocalVariable(name: "sym", arg: 1, scope: !12927, file: !273, line: 331, type: !12777)
!12932 = !DILocation(line: 0, scope: !12927)
!12933 = !DILocation(line: 333, column: 21, scope: !12927)
!12934 = !DILocation(line: 333, column: 2, scope: !12927)
!12935 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12936, file: !12936, line: 40, type: !12937, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12939)
!12936 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12937 = !DISubroutineType(types: !12938)
!12938 = !{null, !12880}
!12939 = !{!12940}
!12940 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12935, file: !12936, line: 40, type: !12880)
!12941 = !DILocation(line: 0, scope: !12935)
!12942 = !DILocation(line: 42, column: 31, scope: !12935)
!12943 = !DILocation(line: 42, column: 2, scope: !12935)
!12944 = !DILocation(line: 43, column: 1, scope: !12935)
!12945 = distinct !DISubprogram(name: "z_init_timeout", scope: !12936, file: !12936, line: 25, type: !2174, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12946)
!12946 = !{!12947}
!12947 = !DILocalVariable(name: "to", arg: 1, scope: !12945, file: !12936, line: 25, type: !2176)
!12948 = !DILocation(line: 0, scope: !12945)
!12949 = !DILocation(line: 27, column: 22, scope: !12945)
!12950 = !DILocation(line: 27, column: 2, scope: !12945)
!12951 = !DILocation(line: 28, column: 1, scope: !12945)
!12952 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !12953, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12955)
!12953 = !DISubroutineType(types: !12954)
!12954 = !{null, !2108}
!12955 = !{!12956}
!12956 = !DILocalVariable(name: "node", arg: 1, scope: !12952, file: !128, line: 211, type: !2108)
!12957 = !DILocation(line: 0, scope: !12952)
!12958 = !DILocation(line: 213, column: 8, scope: !12952)
!12959 = !DILocation(line: 213, column: 13, scope: !12952)
!12960 = !DILocation(line: 214, column: 8, scope: !12952)
!12961 = !DILocation(line: 214, column: 13, scope: !12952)
!12962 = !DILocation(line: 215, column: 1, scope: !12952)
!12963 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !12964, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12967)
!12964 = !DISubroutineType(types: !12965)
!12965 = !{null, !12966}
!12966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!12967 = !{!12968}
!12968 = !DILocalVariable(name: "list", arg: 1, scope: !12963, file: !128, line: 197, type: !12966)
!12969 = !DILocation(line: 0, scope: !12963)
!12970 = !DILocation(line: 199, column: 8, scope: !12963)
!12971 = !DILocation(line: 199, column: 13, scope: !12963)
!12972 = !DILocation(line: 200, column: 8, scope: !12963)
!12973 = !DILocation(line: 200, column: 13, scope: !12963)
!12974 = !DILocation(line: 201, column: 1, scope: !12963)
!12975 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2127, file: !2127, line: 641, type: !12976, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !12982)
!12976 = !DISubroutineType(types: !12977)
!12977 = !{!2130, !2131, !12777, !235, !215, !108, !108, !108, !109, !110, !12978}
!12978 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !12979)
!12979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !12980)
!12980 = !{!12981}
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12979, file: !105, line: 66, baseType: !104, size: 64)
!12982 = !{!12983, !12984, !12985, !12986, !12987, !12988, !12989, !12990, !12991, !12992}
!12983 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12975, file: !2127, line: 641, type: !2131)
!12984 = !DILocalVariable(name: "stack", arg: 2, scope: !12975, file: !2127, line: 642, type: !12777)
!12985 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12975, file: !2127, line: 643, type: !235)
!12986 = !DILocalVariable(name: "entry", arg: 4, scope: !12975, file: !2127, line: 643, type: !215)
!12987 = !DILocalVariable(name: "p1", arg: 5, scope: !12975, file: !2127, line: 644, type: !108)
!12988 = !DILocalVariable(name: "p2", arg: 6, scope: !12975, file: !2127, line: 644, type: !108)
!12989 = !DILocalVariable(name: "p3", arg: 7, scope: !12975, file: !2127, line: 644, type: !108)
!12990 = !DILocalVariable(name: "prio", arg: 8, scope: !12975, file: !2127, line: 645, type: !109)
!12991 = !DILocalVariable(name: "options", arg: 9, scope: !12975, file: !2127, line: 645, type: !110)
!12992 = !DILocalVariable(name: "delay", arg: 10, scope: !12975, file: !2127, line: 645, type: !12978)
!12993 = !DILocation(line: 0, scope: !12975)
!12994 = !DILocation(line: 1031, column: 3, scope: !12608, inlinedAt: !12995)
!12995 = distinct !DILocation(line: 48, column: 10, scope: !12612, inlinedAt: !12996)
!12996 = distinct !DILocation(line: 647, column: 2, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12998, file: !2127, line: 647, column: 2)
!12998 = distinct !DILexicalBlock(scope: !12975, file: !2127, line: 647, column: 2)
!12999 = !DILocation(line: 0, scope: !12608, inlinedAt: !12995)
!13000 = !DILocation(line: 48, column: 9, scope: !12612, inlinedAt: !12996)
!13001 = !DILocation(line: 647, column: 2, scope: !12998)
!13002 = !DILocation(line: 647, column: 2, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12997, file: !2127, line: 647, column: 2)
!13004 = !DILocation(line: 649, column: 2, scope: !12975)
!13005 = !DILocation(line: 652, column: 7, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !12975, file: !2127, line: 652, column: 6)
!13007 = !DILocation(line: 652, column: 6, scope: !12975)
!13008 = !DILocation(line: 653, column: 3, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13006, file: !2127, line: 652, column: 39)
!13010 = !DILocation(line: 654, column: 2, scope: !13009)
!13011 = !DILocation(line: 656, column: 2, scope: !12975)
!13012 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2127, file: !2127, line: 401, type: !13013, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13015)
!13013 = !DISubroutineType(types: !13014)
!13014 = !{null, !2131, !12978}
!13015 = !{!13016, !13017}
!13016 = !DILocalVariable(name: "thread", arg: 1, scope: !13012, file: !2127, line: 401, type: !2131)
!13017 = !DILocalVariable(name: "delay", arg: 2, scope: !13012, file: !2127, line: 401, type: !12978)
!13018 = !DILocation(line: 0, scope: !13012)
!13019 = !DILocation(line: 404, column: 6, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13012, file: !2127, line: 404, column: 6)
!13021 = !DILocation(line: 404, column: 6, scope: !13012)
!13022 = !DILocation(line: 405, column: 3, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13020, file: !2127, line: 404, column: 38)
!13024 = !DILocation(line: 406, column: 2, scope: !13023)
!13025 = !DILocation(line: 407, column: 3, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13020, file: !2127, line: 406, column: 9)
!13027 = !DILocation(line: 413, column: 1, scope: !13012)
!13028 = distinct !DISubprogram(name: "k_thread_start", scope: !3261, file: !3261, line: 205, type: !13029, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13031)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{null, !2130}
!13031 = !{!13032}
!13032 = !DILocalVariable(name: "thread", arg: 1, scope: !13028, file: !3261, line: 205, type: !2130)
!13033 = !DILocation(line: 0, scope: !13028)
!13034 = !DILocation(line: 214, column: 2, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13028, file: !3261, line: 214, column: 2)
!13036 = !{i64 2152248365}
!13037 = !DILocation(line: 215, column: 2, scope: !13028)
!13038 = !DILocation(line: 216, column: 1, scope: !13028)
!13039 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12936, file: !12936, line: 47, type: !13013, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13040)
!13040 = !{!13041, !13042}
!13041 = !DILocalVariable(name: "thread", arg: 1, scope: !13039, file: !12936, line: 47, type: !2131)
!13042 = !DILocalVariable(name: "ticks", arg: 2, scope: !13039, file: !12936, line: 47, type: !12978)
!13043 = !DILocation(line: 0, scope: !13039)
!13044 = !DILocation(line: 49, column: 30, scope: !13039)
!13045 = !DILocation(line: 49, column: 2, scope: !13039)
!13046 = !DILocation(line: 50, column: 1, scope: !13039)
!13047 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2127, file: !2127, line: 748, type: !3076, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13048)
!13048 = !{!13049, !13067}
!13049 = !DILocalVariable(name: "thread_data", scope: !13050, file: !2127, line: 750, type: !13051)
!13050 = distinct !DILexicalBlock(scope: !13047, file: !2127, line: 750, column: 2)
!13051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13052, size: 32)
!13052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !119, line: 620, size: 384, elements: !13053)
!13053 = !{!13054, !13055, !13056, !13057, !13058, !13059, !13060, !13061, !13062, !13063, !13064, !13066}
!13054 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13052, file: !119, line: 621, baseType: !2131, size: 32)
!13055 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13052, file: !119, line: 622, baseType: !12777, size: 32, offset: 32)
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13052, file: !119, line: 623, baseType: !32, size: 32, offset: 64)
!13057 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13052, file: !119, line: 624, baseType: !215, size: 32, offset: 96)
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13052, file: !119, line: 625, baseType: !108, size: 32, offset: 128)
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13052, file: !119, line: 626, baseType: !108, size: 32, offset: 160)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13052, file: !119, line: 627, baseType: !108, size: 32, offset: 192)
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13052, file: !119, line: 628, baseType: !109, size: 32, offset: 224)
!13062 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13052, file: !119, line: 629, baseType: !110, size: 32, offset: 256)
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13052, file: !119, line: 630, baseType: !845, size: 32, offset: 288)
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13052, file: !119, line: 631, baseType: !13065, size: 32, offset: 320)
!13065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 32)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13052, file: !119, line: 632, baseType: !337, size: 32, offset: 352)
!13067 = !DILocalVariable(name: "thread_data", scope: !13068, file: !2127, line: 781, type: !13051)
!13068 = distinct !DILexicalBlock(scope: !13047, file: !2127, line: 781, column: 2)
!13069 = !DILocation(line: 0, scope: !13050)
!13070 = !DILocation(line: 750, column: 2, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !2127, line: 750, column: 2)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !2127, line: 750, column: 2)
!13073 = distinct !DILexicalBlock(scope: !13050, file: !2127, line: 750, column: 2)
!13074 = !DILocation(line: 750, column: 2, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13076, file: !2127, line: 750, column: 2)
!13076 = distinct !DILexicalBlock(scope: !13071, file: !2127, line: 750, column: 2)
!13077 = !DILocation(line: 750, column: 2, scope: !13072)
!13078 = !DILocation(line: 750, column: 2, scope: !13050)
!13079 = !DILocation(line: 780, column: 2, scope: !13047)
!13080 = !DILocation(line: 0, scope: !13068)
!13081 = !DILocation(line: 781, column: 2, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13083, file: !2127, line: 781, column: 2)
!13083 = distinct !DILexicalBlock(scope: !13084, file: !2127, line: 781, column: 2)
!13084 = distinct !DILexicalBlock(scope: !13068, file: !2127, line: 781, column: 2)
!13085 = !DILocation(line: 752, column: 17, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13073, file: !2127, line: 750, column: 38)
!13087 = !DILocation(line: 753, column: 17, scope: !13086)
!13088 = !DILocation(line: 754, column: 17, scope: !13086)
!13089 = !DILocation(line: 755, column: 17, scope: !13086)
!13090 = !DILocation(line: 756, column: 17, scope: !13086)
!13091 = !DILocation(line: 757, column: 17, scope: !13086)
!13092 = !DILocation(line: 758, column: 17, scope: !13086)
!13093 = !DILocation(line: 759, column: 17, scope: !13086)
!13094 = !DILocation(line: 760, column: 17, scope: !13086)
!13095 = !DILocation(line: 761, column: 17, scope: !13086)
!13096 = !DILocation(line: 751, column: 3, scope: !13086)
!13097 = !DILocation(line: 763, column: 16, scope: !13086)
!13098 = !DILocation(line: 763, column: 29, scope: !13086)
!13099 = !DILocation(line: 763, column: 39, scope: !13086)
!13100 = !DILocation(line: 750, column: 2, scope: !13073)
!13101 = !DILocation(line: 750, column: 2, scope: !13076)
!13102 = distinct !{!13102, !13078, !13103}
!13103 = !DILocation(line: 764, column: 2, scope: !13050)
!13104 = !DILocation(line: 781, column: 2, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !2127, line: 781, column: 2)
!13106 = distinct !DILexicalBlock(scope: !13082, file: !2127, line: 781, column: 2)
!13107 = !DILocation(line: 781, column: 2, scope: !13083)
!13108 = !DILocation(line: 781, column: 2, scope: !13068)
!13109 = !DILocation(line: 787, column: 2, scope: !13047)
!13110 = !DILocation(line: 788, column: 1, scope: !13047)
!13111 = !DILocation(line: 782, column: 20, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !2127, line: 782, column: 7)
!13113 = distinct !DILexicalBlock(scope: !13084, file: !2127, line: 781, column: 38)
!13114 = !DILocation(line: 782, column: 31, scope: !13112)
!13115 = !DILocation(line: 782, column: 7, scope: !13113)
!13116 = !DILocation(line: 783, column: 37, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13112, file: !2127, line: 782, column: 51)
!13118 = !DILocation(line: 784, column: 10, scope: !13117)
!13119 = !DILocation(line: 783, column: 4, scope: !13117)
!13120 = !DILocation(line: 785, column: 3, scope: !13117)
!13121 = !DILocation(line: 781, column: 2, scope: !13084)
!13122 = !DILocation(line: 781, column: 2, scope: !13106)
!13123 = distinct !{!13123, !13108, !13124}
!13124 = !DILocation(line: 786, column: 2, scope: !13068)
!13125 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3314, file: !3314, line: 403, type: !3315, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13126)
!13126 = !{!13127}
!13127 = !DILocalVariable(name: "t", arg: 1, scope: !13125, file: !3314, line: 403, type: !111)
!13128 = !DILocation(line: 0, scope: !13125)
!13129 = !DILocalVariable(name: "t", arg: 1, scope: !13130, file: !3314, line: 102, type: !111)
!13130 = distinct !DISubprogram(name: "z_tmcvt", scope: !3314, file: !3314, line: 102, type: !3322, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13131)
!13131 = !{!13129, !13132, !13133, !13134, !13135, !13136, !13137, !13138, !13139, !13140, !13141}
!13132 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13130, file: !3314, line: 102, type: !110)
!13133 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13130, file: !3314, line: 103, type: !110)
!13134 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13130, file: !3314, line: 103, type: !347)
!13135 = !DILocalVariable(name: "result32", arg: 5, scope: !13130, file: !3314, line: 104, type: !347)
!13136 = !DILocalVariable(name: "round_up", arg: 6, scope: !13130, file: !3314, line: 104, type: !347)
!13137 = !DILocalVariable(name: "round_off", arg: 7, scope: !13130, file: !3314, line: 105, type: !347)
!13138 = !DILocalVariable(name: "mul_ratio", scope: !13130, file: !3314, line: 107, type: !347)
!13139 = !DILocalVariable(name: "div_ratio", scope: !13130, file: !3314, line: 109, type: !347)
!13140 = !DILocalVariable(name: "off", scope: !13130, file: !3314, line: 116, type: !111)
!13141 = !DILocalVariable(name: "rdivisor", scope: !13142, file: !3314, line: 119, type: !110)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !3314, line: 118, column: 18)
!13143 = distinct !DILexicalBlock(scope: !13130, file: !3314, line: 118, column: 6)
!13144 = !DILocation(line: 0, scope: !13130, inlinedAt: !13145)
!13145 = distinct !DILocation(line: 406, column: 9, scope: !13125)
!13146 = !DILocation(line: 145, column: 13, scope: !13147, inlinedAt: !13145)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !3314, line: 144, column: 10)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !3314, line: 142, column: 7)
!13149 = distinct !DILexicalBlock(scope: !13150, file: !3314, line: 141, column: 24)
!13150 = distinct !DILexicalBlock(scope: !13151, file: !3314, line: 141, column: 13)
!13151 = distinct !DILexicalBlock(scope: !13130, file: !3314, line: 134, column: 6)
!13152 = !DILocation(line: 406, column: 2, scope: !13125)
!13153 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2127, file: !2127, line: 817, type: !4429, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13154)
!13154 = !{!13155, !13156, !13157, !13158}
!13155 = !DILocalVariable(name: "entry", arg: 1, scope: !13153, file: !2127, line: 817, type: !215)
!13156 = !DILocalVariable(name: "p1", arg: 2, scope: !13153, file: !2127, line: 818, type: !108)
!13157 = !DILocalVariable(name: "p2", arg: 3, scope: !13153, file: !2127, line: 818, type: !108)
!13158 = !DILocalVariable(name: "p3", arg: 4, scope: !13153, file: !2127, line: 818, type: !108)
!13159 = !DILocation(line: 0, scope: !13153)
!13160 = !DILocation(line: 822, column: 2, scope: !13153)
!13161 = !DILocation(line: 822, column: 17, scope: !13153)
!13162 = !DILocation(line: 822, column: 30, scope: !13153)
!13163 = !DILocation(line: 823, column: 2, scope: !13153)
!13164 = !DILocation(line: 825, column: 2, scope: !13153)
!13165 = !DILocation(line: 825, column: 18, scope: !13153)
!13166 = !DILocation(line: 825, column: 25, scope: !13153)
!13167 = !DILocation(line: 826, column: 18, scope: !13153)
!13168 = !DILocation(line: 826, column: 29, scope: !13153)
!13169 = !DILocation(line: 827, column: 18, scope: !13153)
!13170 = !DILocation(line: 827, column: 29, scope: !13153)
!13171 = !DILocation(line: 828, column: 18, scope: !13153)
!13172 = !DILocation(line: 828, column: 29, scope: !13153)
!13173 = !DILocation(line: 845, column: 2, scope: !13153)
!13174 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2127, file: !2127, line: 888, type: !13175, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13177)
!13175 = !DISubroutineType(types: !13176)
!13176 = !{!109, !2131}
!13177 = !{!13178}
!13178 = !DILocalVariable(name: "thread", arg: 1, scope: !13174, file: !2127, line: 888, type: !2131)
!13179 = !DILocation(line: 0, scope: !13174)
!13180 = !DILocation(line: 893, column: 2, scope: !13174)
!13181 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2127, file: !2127, line: 897, type: !13182, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13184)
!13182 = !DISubroutineType(types: !13183)
!13183 = !{!109, !2131, !32}
!13184 = !{!13185, !13186}
!13185 = !DILocalVariable(name: "thread", arg: 1, scope: !13181, file: !2127, line: 897, type: !2131)
!13186 = !DILocalVariable(name: "options", arg: 2, scope: !13181, file: !2127, line: 897, type: !32)
!13187 = !DILocation(line: 0, scope: !13181)
!13188 = !DILocation(line: 902, column: 2, scope: !13181)
!13189 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2127, file: !2127, line: 1072, type: !13190, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13195)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!109, !2130, !13192}
!13192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13193, size: 32)
!13193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !145, line: 234, baseType: !13194)
!13194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !145, line: 192, elements: !2037)
!13195 = !{!13196, !13197}
!13196 = !DILocalVariable(name: "thread", arg: 1, scope: !13189, file: !2127, line: 1072, type: !2130)
!13197 = !DILocalVariable(name: "stats", arg: 2, scope: !13189, file: !2127, line: 1073, type: !13192)
!13198 = !DILocation(line: 0, scope: !13189)
!13199 = !DILocation(line: 1075, column: 14, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13189, file: !2127, line: 1075, column: 6)
!13201 = !DILocation(line: 1075, column: 23, scope: !13200)
!13202 = !DILocation(line: 1086, column: 1, scope: !13189)
!13203 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2127, file: !2127, line: 1088, type: !13204, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2105, retainedNodes: !13206)
!13204 = !DISubroutineType(types: !13205)
!13205 = !{!109, !13192}
!13206 = !{!13207}
!13207 = !DILocalVariable(name: "stats", arg: 1, scope: !13203, file: !2127, line: 1088, type: !13192)
!13208 = !DILocation(line: 0, scope: !13203)
!13209 = !DILocation(line: 1094, column: 12, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13203, file: !2127, line: 1094, column: 6)
!13211 = !DILocation(line: 1120, column: 1, scope: !13203)
!13212 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13213, file: !13213, line: 20, type: !3076, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !2037)
!13213 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13214 = !DILocation(line: 30, column: 2, scope: !13212)
!13215 = !DILocation(line: 31, column: 1, scope: !13212)
!13216 = distinct !DISubprogram(name: "idle", scope: !13213, file: !13213, line: 33, type: !218, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13217)
!13217 = !{!13218, !13219, !13220}
!13218 = !DILocalVariable(name: "unused1", arg: 1, scope: !13216, file: !13213, line: 33, type: !108)
!13219 = !DILocalVariable(name: "unused2", arg: 2, scope: !13216, file: !13213, line: 33, type: !108)
!13220 = !DILocalVariable(name: "unused3", arg: 3, scope: !13216, file: !13213, line: 33, type: !108)
!13221 = !DILocation(line: 0, scope: !13216)
!13222 = !DILocation(line: 39, column: 2, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13224, file: !13213, line: 39, column: 2)
!13224 = distinct !DILexicalBlock(scope: !13216, file: !13213, line: 39, column: 2)
!13225 = !DILocation(line: 39, column: 2, scope: !13224)
!13226 = !DILocation(line: 39, column: 2, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13223, file: !13213, line: 39, column: 2)
!13228 = !DILocation(line: 55, column: 2, scope: !13229, inlinedAt: !13233)
!13229 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13230)
!13230 = !{!13231, !13232}
!13231 = !DILocalVariable(name: "key", scope: !13229, file: !5954, line: 44, type: !32)
!13232 = !DILocalVariable(name: "tmp", scope: !13229, file: !5954, line: 53, type: !32)
!13233 = distinct !DILocation(line: 62, column: 10, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13216, file: !13213, line: 41, column: 15)
!13235 = !{i64 1651232}
!13236 = !DILocation(line: 0, scope: !13229, inlinedAt: !13233)
!13237 = !DILocation(line: 86, column: 3, scope: !13234)
!13238 = !DILocation(line: 41, column: 2, scope: !13216)
!13239 = distinct !{!13239, !13238, !13240}
!13240 = !DILocation(line: 105, column: 2, scope: !13216)
!13241 = distinct !DISubprogram(name: "k_cpu_idle", scope: !119, file: !119, line: 5627, type: !3076, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !2037)
!13242 = !DILocation(line: 5629, column: 2, scope: !13241)
!13243 = !DILocation(line: 5630, column: 1, scope: !13241)
!13244 = !DISubprogram(name: "arch_cpu_idle", scope: !216, file: !216, line: 167, type: !3076, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2037)
!13245 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2359, file: !2359, line: 49, type: !13246, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13255)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!109, !13248}
!13248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13249, size: 32)
!13249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !13250)
!13250 = !{!13251, !13252, !13253, !13254}
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13249, file: !119, line: 2722, baseType: !2279, size: 64)
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13249, file: !119, line: 2724, baseType: !2261, size: 32, offset: 64)
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13249, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13249, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!13255 = !{!13256}
!13256 = !DILocalVariable(name: "mutex", arg: 1, scope: !13245, file: !2359, line: 49, type: !13248)
!13257 = !DILocation(line: 0, scope: !13245)
!13258 = !DILocation(line: 51, column: 9, scope: !13245)
!13259 = !DILocation(line: 51, column: 15, scope: !13245)
!13260 = !DILocation(line: 52, column: 9, scope: !13245)
!13261 = !DILocation(line: 52, column: 20, scope: !13245)
!13262 = !DILocation(line: 54, column: 23, scope: !13245)
!13263 = !DILocation(line: 54, column: 2, scope: !13245)
!13264 = !DILocation(line: 60, column: 2, scope: !13245)
!13265 = distinct !DISubprogram(name: "z_waitq_init", scope: !12868, file: !12868, line: 47, type: !13266, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13268)
!13266 = !DISubroutineType(types: !13267)
!13267 = !{null, !2278}
!13268 = !{!13269}
!13269 = !DILocalVariable(name: "w", arg: 1, scope: !13265, file: !12868, line: 47, type: !2278)
!13270 = !DILocation(line: 0, scope: !13265)
!13271 = !DILocation(line: 49, column: 21, scope: !13265)
!13272 = !DILocation(line: 49, column: 2, scope: !13265)
!13273 = !DILocation(line: 50, column: 1, scope: !13265)
!13274 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !13275, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13278)
!13275 = !DISubroutineType(types: !13276)
!13276 = !{null, !13277}
!13277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!13278 = !{!13279}
!13279 = !DILocalVariable(name: "list", arg: 1, scope: !13274, file: !128, line: 197, type: !13277)
!13280 = !DILocation(line: 0, scope: !13274)
!13281 = !DILocation(line: 199, column: 8, scope: !13274)
!13282 = !DILocation(line: 199, column: 13, scope: !13274)
!13283 = !DILocation(line: 200, column: 8, scope: !13274)
!13284 = !DILocation(line: 200, column: 13, scope: !13274)
!13285 = !DILocation(line: 201, column: 1, scope: !13274)
!13286 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2359, file: !2359, line: 95, type: !13287, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13293)
!13287 = !DISubroutineType(types: !13288)
!13288 = !{!109, !13248, !13289}
!13289 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13290)
!13290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13291)
!13291 = !{!13292}
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13290, file: !105, line: 66, baseType: !104, size: 64)
!13293 = !{!13294, !13295, !13296, !13297, !13302, !13303, !13304}
!13294 = !DILocalVariable(name: "mutex", arg: 1, scope: !13286, file: !2359, line: 95, type: !13248)
!13295 = !DILocalVariable(name: "timeout", arg: 2, scope: !13286, file: !2359, line: 95, type: !13289)
!13296 = !DILocalVariable(name: "new_prio", scope: !13286, file: !2359, line: 97, type: !109)
!13297 = !DILocalVariable(name: "key", scope: !13286, file: !2359, line: 98, type: !13298)
!13298 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13299)
!13299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13300)
!13300 = !{!13301}
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13299, file: !254, line: 33, baseType: !109, size: 32)
!13302 = !DILocalVariable(name: "resched", scope: !13286, file: !2359, line: 99, type: !347)
!13303 = !DILocalVariable(name: "got_mutex", scope: !13286, file: !2359, line: 146, type: !109)
!13304 = !DILocalVariable(name: "waiter", scope: !13305, file: !2359, line: 169, type: !2261)
!13305 = distinct !DILexicalBlock(scope: !13306, file: !2359, line: 168, column: 36)
!13306 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 168, column: 6)
!13307 = !DILocation(line: 0, scope: !13286)
!13308 = !DILocation(line: 1031, column: 3, scope: !13309, inlinedAt: !13312)
!13309 = distinct !DISubprogram(name: "__get_IPSR", scope: !6145, file: !6145, line: 1027, type: !3358, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13310)
!13310 = !{!13311}
!13311 = !DILocalVariable(name: "result", scope: !13309, file: !6145, line: 1029, type: !110)
!13312 = distinct !DILocation(line: 48, column: 10, scope: !13313, inlinedAt: !13314)
!13313 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6948, file: !6948, line: 46, type: !6949, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !2037)
!13314 = distinct !DILocation(line: 101, column: 2, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !2359, line: 101, column: 2)
!13316 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 101, column: 2)
!13317 = !{i64 2449575}
!13318 = !DILocation(line: 0, scope: !13309, inlinedAt: !13312)
!13319 = !DILocation(line: 48, column: 9, scope: !13313, inlinedAt: !13314)
!13320 = !DILocation(line: 101, column: 2, scope: !13316)
!13321 = !DILocation(line: 101, column: 2, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13315, file: !2359, line: 101, column: 2)
!13323 = !DILocalVariable(name: "l", arg: 1, scope: !13324, file: !254, line: 136, type: !13327)
!13324 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13325, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13328)
!13325 = !DISubroutineType(types: !13326)
!13326 = !{!13298, !13327}
!13327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!13328 = !{!13323, !13329}
!13329 = !DILocalVariable(name: "k", scope: !13324, file: !254, line: 139, type: !13298)
!13330 = !DILocation(line: 0, scope: !13324, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 105, column: 8, scope: !13286)
!13332 = !DILocation(line: 55, column: 2, scope: !13333, inlinedAt: !13337)
!13333 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13334)
!13334 = !{!13335, !13336}
!13335 = !DILocalVariable(name: "key", scope: !13333, file: !5954, line: 44, type: !32)
!13336 = !DILocalVariable(name: "tmp", scope: !13333, file: !5954, line: 53, type: !32)
!13337 = distinct !DILocation(line: 145, column: 10, scope: !13324, inlinedAt: !13331)
!13338 = !{i64 1655640}
!13339 = !DILocation(line: 0, scope: !13333, inlinedAt: !13337)
!13340 = !DILocation(line: 148, column: 2, scope: !13341, inlinedAt: !13331)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !254, line: 148, column: 2)
!13342 = distinct !DILexicalBlock(scope: !13324, file: !254, line: 148, column: 2)
!13343 = !DILocation(line: 148, column: 2, scope: !13342, inlinedAt: !13331)
!13344 = !DILocation(line: 148, column: 2, scope: !13345, inlinedAt: !13331)
!13345 = distinct !DILexicalBlock(scope: !13341, file: !254, line: 148, column: 2)
!13346 = !DILocation(line: 160, column: 2, scope: !13324, inlinedAt: !13331)
!13347 = !DILocation(line: 107, column: 6, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 107, column: 6)
!13349 = !DILocation(line: 107, column: 6, scope: !13286)
!13350 = !{!"branch_weights", i32 2000, i32 1}
!13351 = !DILocation(line: 110, column: 6, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !2359, line: 107, column: 71)
!13353 = !DILocation(line: 110, column: 21, scope: !13352)
!13354 = !DILocation(line: 109, column: 28, scope: !13352)
!13355 = !DILocation(line: 111, column: 13, scope: !13352)
!13356 = !DILocation(line: 114, column: 18, scope: !13352)
!13357 = !DILocation(line: 109, column: 10, scope: !13352)
!13358 = !DILocation(line: 109, column: 26, scope: !13352)
!13359 = !DILocation(line: 113, column: 20, scope: !13352)
!13360 = !DILocation(line: 114, column: 10, scope: !13352)
!13361 = !DILocation(line: 114, column: 16, scope: !13352)
!13362 = !DILocalVariable(name: "key", arg: 2, scope: !13363, file: !254, line: 190, type: !13298)
!13363 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13364, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13366)
!13364 = !DISubroutineType(types: !13365)
!13365 = !{null, !13327, !13298}
!13366 = !{!13367, !13362}
!13367 = !DILocalVariable(name: "l", arg: 1, scope: !13363, file: !254, line: 189, type: !13327)
!13368 = !DILocation(line: 0, scope: !13363, inlinedAt: !13369)
!13369 = distinct !DILocation(line: 120, column: 3, scope: !13352)
!13370 = !DILocation(line: 194, column: 2, scope: !13371, inlinedAt: !13369)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !254, line: 194, column: 2)
!13372 = distinct !DILexicalBlock(scope: !13363, file: !254, line: 194, column: 2)
!13373 = !DILocation(line: 194, column: 2, scope: !13372, inlinedAt: !13369)
!13374 = !DILocation(line: 194, column: 2, scope: !13375, inlinedAt: !13369)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !254, line: 194, column: 2)
!13376 = !DILocalVariable(name: "key", arg: 1, scope: !13377, file: !5954, line: 84, type: !32)
!13377 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13378)
!13378 = !{!13376}
!13379 = !DILocation(line: 0, scope: !13377, inlinedAt: !13380)
!13380 = distinct !DILocation(line: 215, column: 2, scope: !13363, inlinedAt: !13369)
!13381 = !DILocation(line: 95, column: 2, scope: !13377, inlinedAt: !13380)
!13382 = !{i64 1656457}
!13383 = !DILocation(line: 124, column: 3, scope: !13352)
!13384 = !DILocation(line: 127, column: 6, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 127, column: 6)
!13386 = !DILocation(line: 127, column: 6, scope: !13286)
!13387 = !{!"branch_weights", i32 1, i32 2000}
!13388 = !DILocation(line: 0, scope: !13363, inlinedAt: !13389)
!13389 = distinct !DILocation(line: 128, column: 3, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13385, file: !2359, line: 127, column: 50)
!13391 = !DILocation(line: 194, column: 2, scope: !13371, inlinedAt: !13389)
!13392 = !DILocation(line: 194, column: 2, scope: !13372, inlinedAt: !13389)
!13393 = !DILocation(line: 194, column: 2, scope: !13375, inlinedAt: !13389)
!13394 = !DILocation(line: 0, scope: !13377, inlinedAt: !13395)
!13395 = distinct !DILocation(line: 215, column: 2, scope: !13363, inlinedAt: !13389)
!13396 = !DILocation(line: 95, column: 2, scope: !13377, inlinedAt: !13395)
!13397 = !DILocation(line: 132, column: 3, scope: !13390)
!13398 = !DILocation(line: 137, column: 53, scope: !13286)
!13399 = !DILocation(line: 137, column: 38, scope: !13286)
!13400 = !DILocation(line: 138, column: 29, scope: !13286)
!13401 = !DILocation(line: 138, column: 10, scope: !13286)
!13402 = !DILocation(line: 137, column: 13, scope: !13286)
!13403 = !DILocation(line: 142, column: 6, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 142, column: 6)
!13405 = !DILocation(line: 142, column: 6, scope: !13286)
!13406 = !DILocation(line: 143, column: 13, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13404, file: !2359, line: 142, column: 59)
!13408 = !DILocation(line: 144, column: 2, scope: !13407)
!13409 = !DILocation(line: 146, column: 50, scope: !13286)
!13410 = !DILocation(line: 146, column: 18, scope: !13286)
!13411 = !DILocation(line: 153, column: 16, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 153, column: 6)
!13413 = !DILocation(line: 153, column: 6, scope: !13286)
!13414 = !DILocation(line: 0, scope: !13324, inlinedAt: !13415)
!13415 = distinct !DILocation(line: 162, column: 8, scope: !13286)
!13416 = !DILocation(line: 55, column: 2, scope: !13333, inlinedAt: !13417)
!13417 = distinct !DILocation(line: 145, column: 10, scope: !13324, inlinedAt: !13415)
!13418 = !DILocation(line: 0, scope: !13333, inlinedAt: !13417)
!13419 = !DILocation(line: 148, column: 2, scope: !13341, inlinedAt: !13415)
!13420 = !DILocation(line: 148, column: 2, scope: !13342, inlinedAt: !13415)
!13421 = !DILocation(line: 148, column: 2, scope: !13345, inlinedAt: !13415)
!13422 = !DILocation(line: 160, column: 2, scope: !13324, inlinedAt: !13415)
!13423 = !DILocation(line: 168, column: 6, scope: !13306)
!13424 = !DILocation(line: 168, column: 6, scope: !13286)
!13425 = !DILocation(line: 169, column: 29, scope: !13305)
!13426 = !DILocation(line: 0, scope: !13305)
!13427 = !DILocation(line: 171, column: 22, scope: !13305)
!13428 = !DILocation(line: 171, column: 14, scope: !13305)
!13429 = !DILocation(line: 172, column: 42, scope: !13305)
!13430 = !DILocation(line: 172, column: 29, scope: !13305)
!13431 = !DILocation(line: 172, column: 55, scope: !13305)
!13432 = !DILocation(line: 172, column: 4, scope: !13305)
!13433 = !DILocation(line: 173, column: 11, scope: !13305)
!13434 = !DILocation(line: 177, column: 13, scope: !13305)
!13435 = !DILocation(line: 177, column: 48, scope: !13305)
!13436 = !DILocation(line: 180, column: 6, scope: !13286)
!13437 = !DILocation(line: 181, column: 3, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !2359, line: 180, column: 15)
!13439 = distinct !DILexicalBlock(scope: !13286, file: !2359, line: 180, column: 6)
!13440 = !DILocation(line: 182, column: 2, scope: !13438)
!13441 = !DILocation(line: 0, scope: !13363, inlinedAt: !13442)
!13442 = distinct !DILocation(line: 183, column: 3, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13439, file: !2359, line: 182, column: 9)
!13444 = !DILocation(line: 194, column: 2, scope: !13371, inlinedAt: !13442)
!13445 = !DILocation(line: 194, column: 2, scope: !13372, inlinedAt: !13442)
!13446 = !DILocation(line: 194, column: 2, scope: !13375, inlinedAt: !13442)
!13447 = !DILocation(line: 0, scope: !13377, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 215, column: 2, scope: !13363, inlinedAt: !13442)
!13449 = !DILocation(line: 95, column: 2, scope: !13377, inlinedAt: !13448)
!13450 = !DILocation(line: 189, column: 1, scope: !13286)
!13451 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2359, file: !2359, line: 72, type: !13452, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13454)
!13452 = !DISubroutineType(types: !13453)
!13453 = !{!845, !845, !845}
!13454 = !{!13455, !13456, !13457}
!13455 = !DILocalVariable(name: "target", arg: 1, scope: !13451, file: !2359, line: 72, type: !845)
!13456 = !DILocalVariable(name: "limit", arg: 2, scope: !13451, file: !2359, line: 72, type: !845)
!13457 = !DILocalVariable(name: "new_prio", scope: !13451, file: !2359, line: 74, type: !109)
!13458 = !DILocation(line: 0, scope: !13451)
!13459 = !DILocation(line: 74, column: 17, scope: !13451)
!13460 = !DILocation(line: 76, column: 13, scope: !13451)
!13461 = !DILocation(line: 78, column: 2, scope: !13451)
!13462 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12264, file: !12264, line: 211, type: !13463, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13465)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!347, !109, !109}
!13465 = !{!13466, !13467}
!13466 = !DILocalVariable(name: "prio", arg: 1, scope: !13462, file: !12264, line: 211, type: !109)
!13467 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13462, file: !12264, line: 211, type: !109)
!13468 = !DILocation(line: 0, scope: !13462)
!13469 = !DILocation(line: 213, column: 9, scope: !13462)
!13470 = !DILocation(line: 213, column: 2, scope: !13462)
!13471 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2359, file: !2359, line: 81, type: !13472, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13474)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{!347, !13248, !845}
!13474 = !{!13475, !13476}
!13475 = !DILocalVariable(name: "mutex", arg: 1, scope: !13471, file: !2359, line: 81, type: !13248)
!13476 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13471, file: !2359, line: 81, type: !845)
!13477 = !DILocation(line: 0, scope: !13471)
!13478 = !DILocation(line: 83, column: 13, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13471, file: !2359, line: 83, column: 6)
!13480 = !DILocation(line: 83, column: 25, scope: !13479)
!13481 = !DILocation(line: 83, column: 6, scope: !13479)
!13482 = !DILocation(line: 83, column: 30, scope: !13479)
!13483 = !DILocation(line: 83, column: 6, scope: !13471)
!13484 = !DILocation(line: 90, column: 10, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13479, file: !2359, line: 83, column: 43)
!13486 = !DILocation(line: 90, column: 3, scope: !13485)
!13487 = !DILocation(line: 93, column: 1, scope: !13471)
!13488 = distinct !DISubprogram(name: "z_waitq_head", scope: !12868, file: !12868, line: 52, type: !13489, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{!2261, !2278}
!13491 = !{!13492}
!13492 = !DILocalVariable(name: "w", arg: 1, scope: !13488, file: !12868, line: 52, type: !2278)
!13493 = !DILocation(line: 0, scope: !13488)
!13494 = !DILocation(line: 54, column: 52, scope: !13488)
!13495 = !DILocation(line: 54, column: 28, scope: !13488)
!13496 = !DILocation(line: 54, column: 9, scope: !13488)
!13497 = !DILocation(line: 54, column: 2, scope: !13488)
!13498 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !13499, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13501)
!13499 = !DISubroutineType(types: !13500)
!13500 = !{!2246, !13277}
!13501 = !{!13502}
!13502 = !DILocalVariable(name: "list", arg: 1, scope: !13498, file: !128, line: 294, type: !13277)
!13503 = !DILocation(line: 0, scope: !13498)
!13504 = !DILocation(line: 296, column: 9, scope: !13498)
!13505 = !DILocation(line: 296, column: 49, scope: !13498)
!13506 = !DILocation(line: 296, column: 2, scope: !13498)
!13507 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !13508, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13510)
!13508 = !DISubroutineType(types: !13509)
!13509 = !{!347, !13277}
!13510 = !{!13511}
!13511 = !DILocalVariable(name: "list", arg: 1, scope: !13507, file: !128, line: 266, type: !13277)
!13512 = !DILocation(line: 0, scope: !13507)
!13513 = !DILocation(line: 268, column: 15, scope: !13507)
!13514 = !DILocation(line: 268, column: 20, scope: !13507)
!13515 = !DILocation(line: 268, column: 2, scope: !13507)
!13516 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12264, file: !12264, line: 206, type: !13463, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13517)
!13517 = !{!13518, !13519}
!13518 = !DILocalVariable(name: "prio1", arg: 1, scope: !13516, file: !12264, line: 206, type: !109)
!13519 = !DILocalVariable(name: "prio2", arg: 2, scope: !13516, file: !12264, line: 206, type: !109)
!13520 = !DILocation(line: 0, scope: !13516)
!13521 = !DILocation(line: 208, column: 15, scope: !13516)
!13522 = !DILocation(line: 208, column: 2, scope: !13516)
!13523 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12264, file: !12264, line: 186, type: !288, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13524)
!13524 = !{!13525}
!13525 = !DILocalVariable(name: "prio", arg: 1, scope: !13523, file: !12264, line: 186, type: !109)
!13526 = !DILocation(line: 0, scope: !13523)
!13527 = !DILocation(line: 188, column: 9, scope: !13523)
!13528 = !DILocation(line: 188, column: 2, scope: !13523)
!13529 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12264, file: !12264, line: 181, type: !13530, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!347, !109}
!13532 = !{!13533}
!13533 = !DILocalVariable(name: "prio", arg: 1, scope: !13529, file: !12264, line: 181, type: !109)
!13534 = !DILocation(line: 0, scope: !13529)
!13535 = !DILocation(line: 183, column: 14, scope: !13529)
!13536 = !DILocation(line: 183, column: 2, scope: !13529)
!13537 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2359, file: !2359, line: 201, type: !13246, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13538)
!13538 = !{!13539, !13540, !13541, !13542}
!13539 = !DILocalVariable(name: "mutex", arg: 1, scope: !13537, file: !2359, line: 201, type: !13248)
!13540 = !DILocalVariable(name: "new_owner", scope: !13537, file: !2359, line: 203, type: !2261)
!13541 = !DILocalVariable(name: "key", scope: !13537, file: !2359, line: 242, type: !13298)
!13542 = !DILabel(scope: !13537, name: "k_mutex_unlock_return", file: !2359, line: 270)
!13543 = !DILocation(line: 0, scope: !13537)
!13544 = !DILocation(line: 1031, column: 3, scope: !13309, inlinedAt: !13545)
!13545 = distinct !DILocation(line: 48, column: 10, scope: !13313, inlinedAt: !13546)
!13546 = distinct !DILocation(line: 205, column: 2, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !2359, line: 205, column: 2)
!13548 = distinct !DILexicalBlock(scope: !13537, file: !2359, line: 205, column: 2)
!13549 = !DILocation(line: 0, scope: !13309, inlinedAt: !13545)
!13550 = !DILocation(line: 48, column: 9, scope: !13313, inlinedAt: !13546)
!13551 = !DILocation(line: 205, column: 2, scope: !13548)
!13552 = !DILocation(line: 205, column: 2, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13547, file: !2359, line: 205, column: 2)
!13554 = !DILocation(line: 209, column: 2, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13537, file: !2359, line: 209, column: 2)
!13556 = !DILocation(line: 209, column: 2, scope: !13537)
!13557 = !DILocation(line: 217, column: 2, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13537, file: !2359, line: 217, column: 2)
!13559 = !DILocation(line: 217, column: 2, scope: !13537)
!13560 = !DILocation(line: 229, column: 2, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13562, file: !2359, line: 229, column: 2)
!13562 = distinct !DILexicalBlock(scope: !13537, file: !2359, line: 229, column: 2)
!13563 = !DILocation(line: 229, column: 2, scope: !13562)
!13564 = !DILocation(line: 229, column: 2, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13561, file: !2359, line: 229, column: 2)
!13566 = !DILocation(line: 238, column: 20, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13568, file: !2359, line: 237, column: 30)
!13568 = distinct !DILexicalBlock(scope: !13537, file: !2359, line: 237, column: 6)
!13569 = !DILocation(line: 239, column: 3, scope: !13567)
!13570 = !DILocation(line: 0, scope: !13324, inlinedAt: !13571)
!13571 = distinct !DILocation(line: 242, column: 25, scope: !13537)
!13572 = !DILocation(line: 55, column: 2, scope: !13333, inlinedAt: !13573)
!13573 = distinct !DILocation(line: 145, column: 10, scope: !13324, inlinedAt: !13571)
!13574 = !DILocation(line: 0, scope: !13333, inlinedAt: !13573)
!13575 = !DILocation(line: 148, column: 2, scope: !13341, inlinedAt: !13571)
!13576 = !DILocation(line: 148, column: 2, scope: !13342, inlinedAt: !13571)
!13577 = !DILocation(line: 148, column: 2, scope: !13345, inlinedAt: !13571)
!13578 = !DILocation(line: 160, column: 2, scope: !13324, inlinedAt: !13571)
!13579 = !DILocation(line: 244, column: 34, scope: !13537)
!13580 = !DILocation(line: 244, column: 2, scope: !13537)
!13581 = !DILocation(line: 247, column: 44, scope: !13537)
!13582 = !DILocation(line: 247, column: 14, scope: !13537)
!13583 = !DILocation(line: 249, column: 15, scope: !13537)
!13584 = !DILocation(line: 254, column: 16, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13537, file: !2359, line: 254, column: 6)
!13586 = !DILocation(line: 254, column: 6, scope: !13537)
!13587 = !DILocation(line: 260, column: 44, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13585, file: !2359, line: 254, column: 25)
!13589 = !DILocation(line: 260, column: 28, scope: !13588)
!13590 = !DILocation(line: 260, column: 26, scope: !13588)
!13591 = !DILocalVariable(name: "thread", arg: 1, scope: !13592, file: !12284, line: 65, type: !2261)
!13592 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12284, file: !12284, line: 65, type: !13593, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !2261, !32}
!13595 = !{!13591, !13596}
!13596 = !DILocalVariable(name: "value", arg: 2, scope: !13592, file: !12284, line: 65, type: !32)
!13597 = !DILocation(line: 0, scope: !13592, inlinedAt: !13598)
!13598 = distinct !DILocation(line: 261, column: 3, scope: !13588)
!13599 = !DILocation(line: 67, column: 15, scope: !13592, inlinedAt: !13598)
!13600 = !DILocation(line: 67, column: 33, scope: !13592, inlinedAt: !13598)
!13601 = !DILocation(line: 262, column: 3, scope: !13588)
!13602 = !DILocation(line: 263, column: 3, scope: !13588)
!13603 = !DILocation(line: 264, column: 2, scope: !13588)
!13604 = !DILocation(line: 265, column: 21, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13585, file: !2359, line: 264, column: 9)
!13606 = !DILocation(line: 0, scope: !13363, inlinedAt: !13607)
!13607 = distinct !DILocation(line: 266, column: 3, scope: !13605)
!13608 = !DILocation(line: 194, column: 2, scope: !13371, inlinedAt: !13607)
!13609 = !DILocation(line: 194, column: 2, scope: !13372, inlinedAt: !13607)
!13610 = !DILocation(line: 194, column: 2, scope: !13375, inlinedAt: !13607)
!13611 = !DILocation(line: 0, scope: !13377, inlinedAt: !13612)
!13612 = distinct !DILocation(line: 215, column: 2, scope: !13363, inlinedAt: !13607)
!13613 = !DILocation(line: 95, column: 2, scope: !13377, inlinedAt: !13612)
!13614 = !DILocation(line: 274, column: 1, scope: !13537)
!13615 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2480, file: !2480, line: 93, type: !13616, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13618)
!13616 = !DISubroutineType(types: !13617)
!13617 = !{!845, !2365, !2365}
!13618 = !{!13619, !13620, !13621, !13622}
!13619 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13615, file: !2480, line: 93, type: !2365)
!13620 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13615, file: !2480, line: 94, type: !2365)
!13621 = !DILocalVariable(name: "b1", scope: !13615, file: !2480, line: 97, type: !845)
!13622 = !DILocalVariable(name: "b2", scope: !13615, file: !2480, line: 98, type: !845)
!13623 = !DILocation(line: 0, scope: !13615)
!13624 = !DILocation(line: 97, column: 30, scope: !13615)
!13625 = !DILocation(line: 98, column: 30, scope: !13615)
!13626 = !DILocation(line: 100, column: 9, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13615, file: !2480, line: 100, column: 6)
!13628 = !DILocation(line: 100, column: 6, scope: !13615)
!13629 = !DILocation(line: 125, column: 1, scope: !13615)
!13630 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2480, file: !2480, line: 428, type: !13631, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13633)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{null, !2365}
!13633 = !{!13634}
!13634 = !DILocalVariable(name: "curr", arg: 1, scope: !13630, file: !2480, line: 428, type: !2365)
!13635 = !DILocation(line: 0, scope: !13630)
!13636 = !DILocation(line: 434, column: 6, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13630, file: !2480, line: 434, column: 6)
!13638 = !DILocation(line: 434, column: 23, scope: !13637)
!13639 = !DILocation(line: 434, column: 6, scope: !13630)
!13640 = !DILocation(line: 435, column: 50, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !2480, line: 434, column: 29)
!13642 = !DILocation(line: 435, column: 48, scope: !13641)
!13643 = !DILocation(line: 435, column: 29, scope: !13641)
!13644 = !DILocation(line: 436, column: 24, scope: !13641)
!13645 = !DILocation(line: 436, column: 3, scope: !13641)
!13646 = !DILocation(line: 437, column: 2, scope: !13641)
!13647 = !DILocation(line: 438, column: 1, scope: !13630)
!13648 = distinct !DISubprogram(name: "slice_time", scope: !2480, file: !2480, line: 407, type: !13649, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13651)
!13649 = !DISubroutineType(types: !13650)
!13650 = !{!109, !2365}
!13651 = !{!13652, !13653}
!13652 = !DILocalVariable(name: "curr", arg: 1, scope: !13648, file: !2480, line: 407, type: !2365)
!13653 = !DILocalVariable(name: "ret", scope: !13648, file: !2480, line: 409, type: !109)
!13654 = !DILocation(line: 0, scope: !13648)
!13655 = !DILocation(line: 409, column: 12, scope: !13648)
!13656 = !DILocation(line: 416, column: 2, scope: !13648)
!13657 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2480, file: !2480, line: 440, type: !13658, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13660)
!13658 = !DISubroutineType(types: !13659)
!13659 = !{null, !845, !109}
!13660 = !{!13661, !13662, !13663, !13669}
!13661 = !DILocalVariable(name: "slice", arg: 1, scope: !13657, file: !2480, line: 440, type: !845)
!13662 = !DILocalVariable(name: "prio", arg: 2, scope: !13657, file: !2480, line: 440, type: !109)
!13663 = !DILocalVariable(name: "__i", scope: !13664, file: !2480, line: 442, type: !13665)
!13664 = distinct !DILexicalBlock(scope: !13657, file: !2480, line: 442, column: 2)
!13665 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13666)
!13666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13667)
!13667 = !{!13668}
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13666, file: !254, line: 33, baseType: !109, size: 32)
!13669 = !DILocalVariable(name: "__key", scope: !13664, file: !2480, line: 442, type: !13665)
!13670 = !DILocation(line: 0, scope: !13657)
!13671 = !DILocation(line: 0, scope: !13664)
!13672 = !DILocalVariable(name: "l", arg: 1, scope: !13673, file: !254, line: 136, type: !13676)
!13673 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13674, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13677)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{!13665, !13676}
!13676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!13677 = !{!13672, !13678}
!13678 = !DILocalVariable(name: "k", scope: !13673, file: !254, line: 139, type: !13665)
!13679 = !DILocation(line: 0, scope: !13673, inlinedAt: !13680)
!13680 = distinct !DILocation(line: 442, column: 2, scope: !13664)
!13681 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !13686)
!13682 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13683)
!13683 = !{!13684, !13685}
!13684 = !DILocalVariable(name: "key", scope: !13682, file: !5954, line: 44, type: !32)
!13685 = !DILocalVariable(name: "tmp", scope: !13682, file: !5954, line: 53, type: !32)
!13686 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !13680)
!13687 = !{i64 1695203}
!13688 = !DILocation(line: 0, scope: !13682, inlinedAt: !13686)
!13689 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !13680)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !254, line: 148, column: 2)
!13691 = distinct !DILexicalBlock(scope: !13673, file: !254, line: 148, column: 2)
!13692 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !13680)
!13693 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !13680)
!13694 = distinct !DILexicalBlock(scope: !13690, file: !254, line: 148, column: 2)
!13695 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !13680)
!13696 = !DILocation(line: 443, column: 29, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !2480, line: 442, column: 26)
!13698 = distinct !DILexicalBlock(scope: !13664, file: !2480, line: 442, column: 2)
!13699 = !DILocation(line: 444, column: 17, scope: !13697)
!13700 = !DILocation(line: 445, column: 51, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13697, file: !2480, line: 445, column: 7)
!13702 = !DILocation(line: 445, column: 7, scope: !13697)
!13703 = !DILocation(line: 0, scope: !13697)
!13704 = !DILocation(line: 451, column: 18, scope: !13697)
!13705 = !DILocation(line: 452, column: 3, scope: !13697)
!13706 = !DILocalVariable(name: "key", arg: 2, scope: !13707, file: !254, line: 190, type: !13665)
!13707 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13708, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13710)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !13676, !13665}
!13710 = !{!13711, !13706}
!13711 = !DILocalVariable(name: "l", arg: 1, scope: !13707, file: !254, line: 189, type: !13676)
!13712 = !DILocation(line: 0, scope: !13707, inlinedAt: !13713)
!13713 = distinct !DILocation(line: 442, column: 2, scope: !13698)
!13714 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !13713)
!13715 = distinct !DILexicalBlock(scope: !13716, file: !254, line: 194, column: 2)
!13716 = distinct !DILexicalBlock(scope: !13707, file: !254, line: 194, column: 2)
!13717 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !13713)
!13718 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13713)
!13719 = distinct !DILexicalBlock(scope: !13715, file: !254, line: 194, column: 2)
!13720 = !DILocalVariable(name: "key", arg: 1, scope: !13721, file: !5954, line: 84, type: !32)
!13721 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13722)
!13722 = !{!13720}
!13723 = !DILocation(line: 0, scope: !13721, inlinedAt: !13724)
!13724 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !13713)
!13725 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !13724)
!13726 = !{i64 1696020}
!13727 = !DILocation(line: 454, column: 1, scope: !13657)
!13728 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3314, file: !3314, line: 389, type: !7169, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13729)
!13729 = !{!13730}
!13730 = !DILocalVariable(name: "t", arg: 1, scope: !13728, file: !3314, line: 389, type: !110)
!13731 = !DILocation(line: 0, scope: !13728)
!13732 = !DILocalVariable(name: "t", arg: 1, scope: !13733, file: !3314, line: 102, type: !111)
!13733 = distinct !DISubprogram(name: "z_tmcvt", scope: !3314, file: !3314, line: 102, type: !3322, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13734)
!13734 = !{!13732, !13735, !13736, !13737, !13738, !13739, !13740, !13741, !13742, !13743, !13744}
!13735 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13733, file: !3314, line: 102, type: !110)
!13736 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13733, file: !3314, line: 103, type: !110)
!13737 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13733, file: !3314, line: 103, type: !347)
!13738 = !DILocalVariable(name: "result32", arg: 5, scope: !13733, file: !3314, line: 104, type: !347)
!13739 = !DILocalVariable(name: "round_up", arg: 6, scope: !13733, file: !3314, line: 104, type: !347)
!13740 = !DILocalVariable(name: "round_off", arg: 7, scope: !13733, file: !3314, line: 105, type: !347)
!13741 = !DILocalVariable(name: "mul_ratio", scope: !13733, file: !3314, line: 107, type: !347)
!13742 = !DILocalVariable(name: "div_ratio", scope: !13733, file: !3314, line: 109, type: !347)
!13743 = !DILocalVariable(name: "off", scope: !13733, file: !3314, line: 116, type: !111)
!13744 = !DILocalVariable(name: "rdivisor", scope: !13745, file: !3314, line: 119, type: !110)
!13745 = distinct !DILexicalBlock(scope: !13746, file: !3314, line: 118, column: 18)
!13746 = distinct !DILexicalBlock(scope: !13733, file: !3314, line: 118, column: 6)
!13747 = !DILocation(line: 0, scope: !13733, inlinedAt: !13748)
!13748 = distinct !DILocation(line: 392, column: 9, scope: !13728)
!13749 = !DILocation(line: 143, column: 25, scope: !13750, inlinedAt: !13748)
!13750 = distinct !DILexicalBlock(scope: !13751, file: !3314, line: 142, column: 17)
!13751 = distinct !DILexicalBlock(scope: !13752, file: !3314, line: 142, column: 7)
!13752 = distinct !DILexicalBlock(scope: !13753, file: !3314, line: 141, column: 24)
!13753 = distinct !DILexicalBlock(scope: !13754, file: !3314, line: 141, column: 13)
!13754 = distinct !DILexicalBlock(scope: !13733, file: !3314, line: 134, column: 6)
!13755 = !DILocation(line: 392, column: 2, scope: !13728)
!13756 = distinct !DISubprogram(name: "z_time_slice", scope: !2480, file: !2480, line: 502, type: !3404, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13757)
!13757 = !{!13758, !13759}
!13758 = !DILocalVariable(name: "ticks", arg: 1, scope: !13756, file: !2480, line: 502, type: !109)
!13759 = !DILocalVariable(name: "key", scope: !13756, file: !2480, line: 511, type: !13665)
!13760 = !DILocation(line: 0, scope: !13756)
!13761 = !DILocation(line: 0, scope: !13673, inlinedAt: !13762)
!13762 = distinct !DILocation(line: 511, column: 25, scope: !13756)
!13763 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !13764)
!13764 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !13762)
!13765 = !DILocation(line: 0, scope: !13682, inlinedAt: !13764)
!13766 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !13762)
!13767 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !13762)
!13768 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !13762)
!13769 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !13762)
!13770 = !DILocation(line: 514, column: 6, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13756, file: !2480, line: 514, column: 6)
!13772 = !DILocation(line: 514, column: 25, scope: !13771)
!13773 = !DILocation(line: 514, column: 22, scope: !13771)
!13774 = !DILocation(line: 514, column: 6, scope: !13756)
!13775 = !DILocation(line: 515, column: 3, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13771, file: !2480, line: 514, column: 35)
!13777 = !DILocation(line: 0, scope: !13707, inlinedAt: !13778)
!13778 = distinct !DILocation(line: 516, column: 3, scope: !13776)
!13779 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !13778)
!13780 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !13778)
!13781 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13778)
!13782 = !DILocation(line: 0, scope: !13721, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !13778)
!13784 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !13783)
!13785 = !DILocation(line: 517, column: 3, scope: !13776)
!13786 = !DILocation(line: 519, column: 18, scope: !13756)
!13787 = !DILocation(line: 522, column: 6, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13756, file: !2480, line: 522, column: 6)
!13789 = !DILocation(line: 522, column: 27, scope: !13788)
!13790 = !DILocation(line: 522, column: 30, scope: !13788)
!13791 = !DILocation(line: 522, column: 6, scope: !13756)
!13792 = !DILocation(line: 523, column: 30, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !2480, line: 523, column: 7)
!13794 = distinct !DILexicalBlock(scope: !13788, file: !2480, line: 522, column: 51)
!13795 = !DILocation(line: 523, column: 13, scope: !13793)
!13796 = !DILocation(line: 523, column: 7, scope: !13794)
!13797 = !DILocation(line: 530, column: 10, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13793, file: !2480, line: 523, column: 43)
!13799 = !DILocation(line: 531, column: 3, scope: !13798)
!13800 = !DILocation(line: 532, column: 30, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13793, file: !2480, line: 531, column: 10)
!13802 = !DILocation(line: 535, column: 29, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13788, file: !2480, line: 534, column: 9)
!13804 = !DILocation(line: 0, scope: !13707, inlinedAt: !13805)
!13805 = distinct !DILocation(line: 537, column: 2, scope: !13756)
!13806 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !13805)
!13807 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !13805)
!13808 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13805)
!13809 = !DILocation(line: 0, scope: !13721, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !13805)
!13811 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !13810)
!13812 = !DILocation(line: 538, column: 1, scope: !13756)
!13813 = distinct !DISubprogram(name: "sliceable", scope: !2480, file: !2480, line: 468, type: !13814, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13816)
!13814 = !DISubroutineType(types: !13815)
!13815 = !{!347, !2365}
!13816 = !{!13817, !13818}
!13817 = !DILocalVariable(name: "thread", arg: 1, scope: !13813, file: !2480, line: 468, type: !2365)
!13818 = !DILocalVariable(name: "ret", scope: !13813, file: !2480, line: 470, type: !347)
!13819 = !DILocation(line: 0, scope: !13813)
!13820 = !DILocation(line: 470, column: 13, scope: !13813)
!13821 = !DILocation(line: 471, column: 3, scope: !13813)
!13822 = !DILocation(line: 471, column: 7, scope: !13813)
!13823 = !DILocation(line: 472, column: 3, scope: !13813)
!13824 = !DILocation(line: 472, column: 37, scope: !13813)
!13825 = !DILocation(line: 472, column: 24, scope: !13813)
!13826 = !DILocation(line: 472, column: 43, scope: !13813)
!13827 = !DILocation(line: 472, column: 7, scope: !13813)
!13828 = !DILocation(line: 473, column: 3, scope: !13813)
!13829 = !DILocation(line: 473, column: 7, scope: !13813)
!13830 = !DILocation(line: 473, column: 6, scope: !13813)
!13831 = !DILocation(line: 479, column: 2, scope: !13813)
!13832 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2480, file: !2480, line: 482, type: !13833, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13835)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!13665, !13665}
!13835 = !{!13836, !13837}
!13836 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13832, file: !2480, line: 482, type: !13665)
!13837 = !DILocalVariable(name: "curr", scope: !13832, file: !2480, line: 484, type: !2365)
!13838 = !DILocation(line: 0, scope: !13832)
!13839 = !DILocation(line: 484, column: 26, scope: !13832)
!13840 = !DILocation(line: 493, column: 7, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13832, file: !2480, line: 493, column: 6)
!13842 = !DILocation(line: 493, column: 6, scope: !13832)
!13843 = !DILocation(line: 494, column: 3, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13841, file: !2480, line: 493, column: 49)
!13845 = !DILocation(line: 495, column: 2, scope: !13844)
!13846 = !DILocation(line: 496, column: 2, scope: !13832)
!13847 = !DILocation(line: 499, column: 1, scope: !13832)
!13848 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12264, file: !12264, line: 106, type: !13814, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13849)
!13849 = !{!13850, !13851}
!13850 = !DILocalVariable(name: "thread", arg: 1, scope: !13848, file: !12264, line: 106, type: !2365)
!13851 = !DILocalVariable(name: "state", scope: !13848, file: !12264, line: 108, type: !167)
!13852 = !DILocation(line: 0, scope: !13848)
!13853 = !DILocation(line: 108, column: 31, scope: !13848)
!13854 = !DILocation(line: 110, column: 16, scope: !13848)
!13855 = !DILocation(line: 111, column: 41, scope: !13848)
!13856 = !DILocation(line: 110, column: 2, scope: !13848)
!13857 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2480, file: !2480, line: 393, type: !13631, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13858)
!13858 = !{!13859}
!13859 = !DILocalVariable(name: "thread", arg: 1, scope: !13857, file: !2480, line: 393, type: !2365)
!13860 = !DILocation(line: 0, scope: !13857)
!13861 = !DILocation(line: 395, column: 6, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13857, file: !2480, line: 395, column: 6)
!13863 = !DILocation(line: 395, column: 6, scope: !13857)
!13864 = !DILocalVariable(name: "thread", arg: 1, scope: !13865, file: !2480, line: 264, type: !2365)
!13865 = distinct !DISubprogram(name: "dequeue_thread", scope: !2480, file: !2480, line: 264, type: !13631, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13866)
!13866 = !{!13864}
!13867 = !DILocation(line: 0, scope: !13865, inlinedAt: !13868)
!13868 = distinct !DILocation(line: 396, column: 3, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13862, file: !2480, line: 395, column: 34)
!13870 = !DILocation(line: 266, column: 15, scope: !13865, inlinedAt: !13868)
!13871 = !DILocation(line: 266, column: 28, scope: !13865, inlinedAt: !13868)
!13872 = !DILocalVariable(name: "thread", arg: 1, scope: !13873, file: !2480, line: 232, type: !2365)
!13873 = distinct !DISubprogram(name: "runq_remove", scope: !2480, file: !2480, line: 232, type: !13631, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13874)
!13874 = !{!13872}
!13875 = !DILocation(line: 0, scope: !13873, inlinedAt: !13876)
!13876 = distinct !DILocation(line: 268, column: 3, scope: !13877, inlinedAt: !13868)
!13877 = distinct !DILexicalBlock(scope: !13878, file: !2480, line: 267, column: 35)
!13878 = distinct !DILexicalBlock(scope: !13865, file: !2480, line: 267, column: 6)
!13879 = !DILocation(line: 234, column: 2, scope: !13873, inlinedAt: !13876)
!13880 = !DILocation(line: 397, column: 2, scope: !13869)
!13881 = !DILocalVariable(name: "thread", arg: 1, scope: !13882, file: !2480, line: 250, type: !2365)
!13882 = distinct !DISubprogram(name: "queue_thread", scope: !2480, file: !2480, line: 250, type: !13631, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13883)
!13883 = !{!13881}
!13884 = !DILocation(line: 0, scope: !13882, inlinedAt: !13885)
!13885 = distinct !DILocation(line: 398, column: 2, scope: !13857)
!13886 = !DILocation(line: 252, column: 15, scope: !13882, inlinedAt: !13885)
!13887 = !DILocation(line: 252, column: 28, scope: !13882, inlinedAt: !13885)
!13888 = !DILocalVariable(name: "thread", arg: 1, scope: !13889, file: !2480, line: 227, type: !2365)
!13889 = distinct !DISubprogram(name: "runq_add", scope: !2480, file: !2480, line: 227, type: !13631, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13890)
!13890 = !{!13888}
!13891 = !DILocation(line: 0, scope: !13889, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 254, column: 3, scope: !13893, inlinedAt: !13885)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !2480, line: 253, column: 35)
!13894 = distinct !DILexicalBlock(scope: !13882, file: !2480, line: 253, column: 6)
!13895 = !DILocation(line: 229, column: 2, scope: !13889, inlinedAt: !13892)
!13896 = !DILocation(line: 399, column: 25, scope: !13857)
!13897 = !DILocation(line: 399, column: 22, scope: !13857)
!13898 = !DILocation(line: 399, column: 2, scope: !13857)
!13899 = !DILocation(line: 400, column: 1, scope: !13857)
!13900 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12264, file: !12264, line: 136, type: !13814, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13901)
!13901 = !{!13902}
!13902 = !DILocalVariable(name: "thread", arg: 1, scope: !13900, file: !12264, line: 136, type: !2365)
!13903 = !DILocation(line: 0, scope: !13900)
!13904 = !DILocation(line: 138, column: 9, scope: !13900)
!13905 = !DILocation(line: 138, column: 2, scope: !13900)
!13906 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2480, file: !2480, line: 1198, type: !13907, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13923)
!13907 = !DISubroutineType(types: !13908)
!13908 = !{null, !13909, !2365}
!13909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13910, size: 32)
!13910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2044, line: 37, size: 128, elements: !13911)
!13911 = !{!13912, !13922}
!13912 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13910, file: !2044, line: 38, baseType: !13913, size: 96)
!13913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !13914)
!13914 = !{!13915, !13916, !13921}
!13915 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13913, file: !157, line: 84, baseType: !2394, size: 32)
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13913, file: !157, line: 85, baseType: !13917, size: 32, offset: 32)
!13917 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !13918)
!13918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13919, size: 32)
!13919 = !DISubroutineType(types: !13920)
!13920 = !{!347, !2394, !2394}
!13921 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13913, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13910, file: !2044, line: 39, baseType: !109, size: 32, offset: 96)
!13923 = !{!13924, !13925}
!13924 = !DILocalVariable(name: "pq", arg: 1, scope: !13906, file: !2480, line: 1198, type: !13909)
!13925 = !DILocalVariable(name: "thread", arg: 2, scope: !13906, file: !2480, line: 1198, type: !2365)
!13926 = !DILocation(line: 0, scope: !13906)
!13927 = !DILocation(line: 1200, column: 2, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !2480, line: 1200, column: 2)
!13929 = distinct !DILexicalBlock(scope: !13906, file: !2480, line: 1200, column: 2)
!13930 = !DILocation(line: 1200, column: 2, scope: !13929)
!13931 = !DILocation(line: 1200, column: 2, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13928, file: !2480, line: 1200, column: 2)
!13933 = !DILocation(line: 1202, column: 17, scope: !13906)
!13934 = !DILocation(line: 1202, column: 37, scope: !13906)
!13935 = !DILocation(line: 1202, column: 2, scope: !13906)
!13936 = !DILocation(line: 1204, column: 16, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13906, file: !2480, line: 1204, column: 6)
!13938 = !DILocation(line: 1204, column: 7, scope: !13937)
!13939 = !DILocation(line: 1204, column: 6, scope: !13906)
!13940 = !DILocation(line: 1205, column: 7, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13937, file: !2480, line: 1204, column: 22)
!13942 = !DILocation(line: 1205, column: 22, scope: !13941)
!13943 = !DILocation(line: 1206, column: 2, scope: !13941)
!13944 = !DILocation(line: 1207, column: 1, scope: !13906)
!13945 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2480, file: !2480, line: 1175, type: !13907, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13946)
!13946 = !{!13947, !13948, !13949, !13950, !13959}
!13947 = !DILocalVariable(name: "pq", arg: 1, scope: !13945, file: !2480, line: 1175, type: !13909)
!13948 = !DILocalVariable(name: "thread", arg: 2, scope: !13945, file: !2480, line: 1175, type: !2365)
!13949 = !DILocalVariable(name: "t", scope: !13945, file: !2480, line: 1177, type: !2365)
!13950 = !DILocalVariable(name: "__f", scope: !13951, file: !2480, line: 1190, type: !13954)
!13951 = distinct !DILexicalBlock(scope: !13952, file: !2480, line: 1190, column: 3)
!13952 = distinct !DILexicalBlock(scope: !13953, file: !2480, line: 1189, column: 27)
!13953 = distinct !DILexicalBlock(scope: !13945, file: !2480, line: 1189, column: 6)
!13954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !13955)
!13955 = !{!13956, !13957, !13958}
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13954, file: !157, line: 156, baseType: !2476, size: 32)
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13954, file: !157, line: 157, baseType: !1860, size: 32, offset: 32)
!13958 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13954, file: !157, line: 158, baseType: !845, size: 32, offset: 64)
!13959 = !DILocalVariable(name: "n", scope: !13960, file: !2480, line: 1190, type: !2394)
!13960 = distinct !DILexicalBlock(scope: !13961, file: !2480, line: 1190, column: 3)
!13961 = distinct !DILexicalBlock(scope: !13951, file: !2480, line: 1190, column: 3)
!13962 = !DILocation(line: 0, scope: !13945)
!13963 = !DILocation(line: 1179, column: 2, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13965, file: !2480, line: 1179, column: 2)
!13965 = distinct !DILexicalBlock(scope: !13945, file: !2480, line: 1179, column: 2)
!13966 = !DILocation(line: 1179, column: 2, scope: !13965)
!13967 = !DILocation(line: 1179, column: 2, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13964, file: !2480, line: 1179, column: 2)
!13969 = !DILocation(line: 1181, column: 31, scope: !13945)
!13970 = !DILocation(line: 1181, column: 45, scope: !13945)
!13971 = !DILocation(line: 1181, column: 15, scope: !13945)
!13972 = !DILocation(line: 1181, column: 25, scope: !13945)
!13973 = !DILocation(line: 1189, column: 11, scope: !13953)
!13974 = !DILocation(line: 1189, column: 7, scope: !13953)
!13975 = !DILocation(line: 1189, column: 6, scope: !13945)
!13976 = !DILocation(line: 1190, column: 3, scope: !13951)
!13977 = !DILocation(line: 1190, column: 3, scope: !13960)
!13978 = !DILocation(line: 0, scope: !13960)
!13979 = !DILocation(line: 1190, column: 3, scope: !13961)
!13980 = !DILocation(line: 1193, column: 2, scope: !13952)
!13981 = !DILocation(line: 1191, column: 42, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13961, file: !2480, line: 1190, column: 54)
!13983 = !DILocation(line: 1191, column: 12, scope: !13982)
!13984 = !DILocation(line: 1191, column: 22, scope: !13982)
!13985 = distinct !{!13985, !13976, !13986}
!13986 = !DILocation(line: 1192, column: 3, scope: !13951)
!13987 = !DILocation(line: 1195, column: 17, scope: !13945)
!13988 = !DILocation(line: 1195, column: 37, scope: !13945)
!13989 = !DILocation(line: 1195, column: 2, scope: !13945)
!13990 = !DILocation(line: 1196, column: 1, scope: !13945)
!13991 = distinct !DISubprogram(name: "update_cache", scope: !2480, file: !2480, line: 559, type: !3404, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !13992)
!13992 = !{!13993, !13994}
!13993 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13991, file: !2480, line: 559, type: !109)
!13994 = !DILocalVariable(name: "thread", scope: !13991, file: !2480, line: 562, type: !2365)
!13995 = !DILocation(line: 0, scope: !13991)
!13996 = !DILocation(line: 239, column: 9, scope: !13997, inlinedAt: !14000)
!13997 = distinct !DISubprogram(name: "runq_best", scope: !2480, file: !2480, line: 237, type: !13998, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!13998 = !DISubroutineType(types: !13999)
!13999 = !{!2365}
!14000 = distinct !DILocation(line: 314, column: 28, scope: !14001, inlinedAt: !14004)
!14001 = distinct !DISubprogram(name: "next_up", scope: !2480, file: !2480, line: 312, type: !13998, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14002)
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "thread", scope: !14001, file: !2480, line: 314, type: !2365)
!14004 = distinct !DILocation(line: 562, column: 28, scope: !13991)
!14005 = !DILocation(line: 0, scope: !14001, inlinedAt: !14004)
!14006 = !DILocation(line: 340, column: 17, scope: !14001, inlinedAt: !14004)
!14007 = !DILocation(line: 340, column: 9, scope: !14001, inlinedAt: !14004)
!14008 = !DILocalVariable(name: "thread", arg: 1, scope: !14009, file: !2480, line: 127, type: !2365)
!14009 = distinct !DISubprogram(name: "should_preempt", scope: !2480, file: !2480, line: 127, type: !14010, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14012)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!347, !2365, !109}
!14012 = !{!14008, !14013}
!14013 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14009, file: !2480, line: 128, type: !109)
!14014 = !DILocation(line: 0, scope: !14009, inlinedAt: !14015)
!14015 = distinct !DILocation(line: 564, column: 6, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !13991, file: !2480, line: 564, column: 6)
!14017 = !DILocation(line: 133, column: 17, scope: !14018, inlinedAt: !14015)
!14018 = distinct !DILexicalBlock(scope: !14009, file: !2480, line: 133, column: 6)
!14019 = !DILocation(line: 0, scope: !14016)
!14020 = !DILocation(line: 133, column: 6, scope: !14009, inlinedAt: !14015)
!14021 = !DILocation(line: 137, column: 2, scope: !14022, inlinedAt: !14015)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !2480, line: 137, column: 2)
!14023 = distinct !DILexicalBlock(scope: !14009, file: !2480, line: 137, column: 2)
!14024 = !DILocation(line: 137, column: 2, scope: !14023, inlinedAt: !14015)
!14025 = !DILocation(line: 137, column: 2, scope: !14026, inlinedAt: !14015)
!14026 = distinct !DILexicalBlock(scope: !14022, file: !2480, line: 137, column: 2)
!14027 = !DILocation(line: 140, column: 6, scope: !14028, inlinedAt: !14015)
!14028 = distinct !DILexicalBlock(scope: !14009, file: !2480, line: 140, column: 6)
!14029 = !DILocation(line: 140, column: 6, scope: !14009, inlinedAt: !14015)
!14030 = !DILocation(line: 150, column: 9, scope: !14031, inlinedAt: !14015)
!14031 = distinct !DILexicalBlock(scope: !14009, file: !2480, line: 149, column: 6)
!14032 = !DILocation(line: 149, column: 6, scope: !14009, inlinedAt: !14015)
!14033 = !DILocation(line: 157, column: 6, scope: !14034, inlinedAt: !14015)
!14034 = distinct !DILexicalBlock(scope: !14009, file: !2480, line: 157, column: 6)
!14035 = !DILocation(line: 564, column: 6, scope: !13991)
!14036 = !DILocation(line: 566, column: 14, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !2480, line: 566, column: 7)
!14038 = distinct !DILexicalBlock(scope: !14016, file: !2480, line: 564, column: 42)
!14039 = !DILocation(line: 566, column: 7, scope: !14038)
!14040 = !DILocation(line: 567, column: 4, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !2480, line: 566, column: 27)
!14042 = !DILocation(line: 568, column: 3, scope: !14041)
!14043 = !DILocation(line: 585, column: 1, scope: !13991)
!14044 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2480, file: !2480, line: 1209, type: !14045, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14047)
!14045 = !DISubroutineType(types: !14046)
!14046 = !{!2365, !13909}
!14047 = !{!14048, !14049, !14050}
!14048 = !DILocalVariable(name: "pq", arg: 1, scope: !14044, file: !2480, line: 1209, type: !13909)
!14049 = !DILocalVariable(name: "thread", scope: !14044, file: !2480, line: 1211, type: !2365)
!14050 = !DILocalVariable(name: "n", scope: !14044, file: !2480, line: 1212, type: !2394)
!14051 = !DILocation(line: 0, scope: !14044)
!14052 = !DILocation(line: 1212, column: 37, scope: !14044)
!14053 = !DILocation(line: 1212, column: 21, scope: !14044)
!14054 = !DILocation(line: 1217, column: 2, scope: !14044)
!14055 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12264, file: !12264, line: 115, type: !13814, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14056)
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "thread", arg: 1, scope: !14055, file: !12264, line: 115, type: !2365)
!14058 = !DILocation(line: 0, scope: !14055)
!14059 = !DILocation(line: 117, column: 46, scope: !14055)
!14060 = !DILocation(line: 117, column: 10, scope: !14055)
!14061 = !DILocation(line: 117, column: 9, scope: !14055)
!14062 = !DILocation(line: 117, column: 2, scope: !14055)
!14063 = distinct !DISubprogram(name: "is_preempt", scope: !2480, file: !2480, line: 62, type: !13649, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14064)
!14064 = !{!14065}
!14065 = !DILocalVariable(name: "thread", arg: 1, scope: !14063, file: !2480, line: 62, type: !2365)
!14066 = !DILocation(line: 0, scope: !14063)
!14067 = !DILocation(line: 65, column: 22, scope: !14063)
!14068 = !DILocation(line: 65, column: 30, scope: !14063)
!14069 = !DILocation(line: 65, column: 2, scope: !14063)
!14070 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12936, file: !12936, line: 35, type: !14071, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14075)
!14071 = !DISubroutineType(types: !14072)
!14072 = !{!347, !14073}
!14073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14074, size: 32)
!14074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!14075 = !{!14076}
!14076 = !DILocalVariable(name: "to", arg: 1, scope: !14070, file: !12936, line: 35, type: !14073)
!14077 = !DILocation(line: 0, scope: !14070)
!14078 = !DILocation(line: 37, column: 35, scope: !14070)
!14079 = !DILocation(line: 37, column: 10, scope: !14070)
!14080 = !DILocation(line: 37, column: 9, scope: !14070)
!14081 = !DILocation(line: 37, column: 2, scope: !14070)
!14082 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !14083, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14087)
!14083 = !DISubroutineType(types: !14084)
!14084 = !{!347, !14085}
!14085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14086, size: 32)
!14086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2375)
!14087 = !{!14088}
!14088 = !DILocalVariable(name: "node", arg: 1, scope: !14082, file: !128, line: 225, type: !14085)
!14089 = !DILocation(line: 0, scope: !14082)
!14090 = !DILocation(line: 227, column: 15, scope: !14082)
!14091 = !DILocation(line: 227, column: 20, scope: !14082)
!14092 = !DILocation(line: 227, column: 2, scope: !14082)
!14093 = distinct !DISubprogram(name: "rb_get_min", scope: !157, file: !157, line: 115, type: !14094, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14097)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!2394, !14096}
!14096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13913, size: 32)
!14097 = !{!14098}
!14098 = !DILocalVariable(name: "tree", arg: 1, scope: !14093, file: !157, line: 115, type: !14096)
!14099 = !DILocation(line: 0, scope: !14093)
!14100 = !DILocation(line: 117, column: 9, scope: !14093)
!14101 = !DILocation(line: 117, column: 2, scope: !14093)
!14102 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12264, file: !12264, line: 83, type: !13814, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14103)
!14103 = !{!14104}
!14104 = !DILocalVariable(name: "thread", arg: 1, scope: !14102, file: !12264, line: 83, type: !2365)
!14105 = !DILocation(line: 0, scope: !14102)
!14106 = !DILocation(line: 89, column: 16, scope: !14102)
!14107 = !DILocation(line: 89, column: 2, scope: !14102)
!14108 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12264, file: !12264, line: 131, type: !14109, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14111)
!14109 = !DISubroutineType(types: !14110)
!14110 = !{!347, !2365, !110}
!14111 = !{!14112, !14113}
!14112 = !DILocalVariable(name: "thread", arg: 1, scope: !14108, file: !12264, line: 131, type: !2365)
!14113 = !DILocalVariable(name: "state", arg: 2, scope: !14108, file: !12264, line: 131, type: !110)
!14114 = !DILocation(line: 0, scope: !14108)
!14115 = !DILocation(line: 133, column: 23, scope: !14108)
!14116 = !DILocation(line: 133, column: 10, scope: !14108)
!14117 = !DILocation(line: 133, column: 36, scope: !14108)
!14118 = !DILocation(line: 133, column: 45, scope: !14108)
!14119 = !DILocation(line: 133, column: 2, scope: !14108)
!14120 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12264, file: !12264, line: 211, type: !13463, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14121)
!14121 = !{!14122, !14123}
!14122 = !DILocalVariable(name: "prio", arg: 1, scope: !14120, file: !12264, line: 211, type: !109)
!14123 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14120, file: !12264, line: 211, type: !109)
!14124 = !DILocation(line: 0, scope: !14120)
!14125 = !DILocation(line: 213, column: 9, scope: !14120)
!14126 = !DILocation(line: 213, column: 2, scope: !14120)
!14127 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12264, file: !12264, line: 206, type: !13463, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14128)
!14128 = !{!14129, !14130}
!14129 = !DILocalVariable(name: "prio1", arg: 1, scope: !14127, file: !12264, line: 206, type: !109)
!14130 = !DILocalVariable(name: "prio2", arg: 2, scope: !14127, file: !12264, line: 206, type: !109)
!14131 = !DILocation(line: 0, scope: !14127)
!14132 = !DILocation(line: 208, column: 15, scope: !14127)
!14133 = !DILocation(line: 208, column: 2, scope: !14127)
!14134 = distinct !DISubprogram(name: "z_ready_thread", scope: !2480, file: !2480, line: 635, type: !13631, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14135)
!14135 = !{!14136, !14137, !14139}
!14136 = !DILocalVariable(name: "thread", arg: 1, scope: !14134, file: !2480, line: 635, type: !2365)
!14137 = !DILocalVariable(name: "__i", scope: !14138, file: !2480, line: 637, type: !13665)
!14138 = distinct !DILexicalBlock(scope: !14134, file: !2480, line: 637, column: 2)
!14139 = !DILocalVariable(name: "__key", scope: !14138, file: !2480, line: 637, type: !13665)
!14140 = !DILocation(line: 0, scope: !14134)
!14141 = !DILocation(line: 0, scope: !14138)
!14142 = !DILocation(line: 0, scope: !13673, inlinedAt: !14143)
!14143 = distinct !DILocation(line: 637, column: 2, scope: !14138)
!14144 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14145)
!14145 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14143)
!14146 = !DILocation(line: 0, scope: !13682, inlinedAt: !14145)
!14147 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14143)
!14148 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14143)
!14149 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14143)
!14150 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14143)
!14151 = !DILocation(line: 639, column: 4, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14153, file: !2480, line: 638, column: 41)
!14153 = distinct !DILexicalBlock(scope: !14154, file: !2480, line: 638, column: 7)
!14154 = distinct !DILexicalBlock(scope: !14155, file: !2480, line: 637, column: 26)
!14155 = distinct !DILexicalBlock(scope: !14138, file: !2480, line: 637, column: 2)
!14156 = !DILocation(line: 0, scope: !13707, inlinedAt: !14157)
!14157 = distinct !DILocation(line: 637, column: 2, scope: !14155)
!14158 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14157)
!14159 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14157)
!14160 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14157)
!14161 = !DILocation(line: 0, scope: !13721, inlinedAt: !14162)
!14162 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14157)
!14163 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14162)
!14164 = !DILocation(line: 642, column: 1, scope: !14134)
!14165 = distinct !DISubprogram(name: "ready_thread", scope: !2480, file: !2480, line: 617, type: !13631, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14166)
!14166 = !{!14167}
!14167 = !DILocalVariable(name: "thread", arg: 1, scope: !14165, file: !2480, line: 617, type: !2365)
!14168 = !DILocation(line: 0, scope: !14165)
!14169 = !DILocation(line: 626, column: 7, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14165, file: !2480, line: 626, column: 6)
!14171 = !DILocation(line: 626, column: 34, scope: !14170)
!14172 = !DILocation(line: 626, column: 37, scope: !14170)
!14173 = !DILocation(line: 626, column: 6, scope: !14165)
!14174 = !DILocation(line: 0, scope: !13882, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 629, column: 3, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14170, file: !2480, line: 626, column: 64)
!14177 = !DILocation(line: 252, column: 15, scope: !13882, inlinedAt: !14175)
!14178 = !DILocation(line: 252, column: 28, scope: !13882, inlinedAt: !14175)
!14179 = !DILocation(line: 0, scope: !13889, inlinedAt: !14180)
!14180 = distinct !DILocation(line: 254, column: 3, scope: !13893, inlinedAt: !14175)
!14181 = !DILocation(line: 229, column: 2, scope: !13889, inlinedAt: !14180)
!14182 = !DILocation(line: 630, column: 3, scope: !14176)
!14183 = !DILocation(line: 632, column: 2, scope: !14176)
!14184 = !DILocation(line: 633, column: 1, scope: !14165)
!14185 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12264, file: !12264, line: 120, type: !13814, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14186)
!14186 = !{!14187}
!14187 = !DILocalVariable(name: "thread", arg: 1, scope: !14185, file: !12264, line: 120, type: !2365)
!14188 = !DILocation(line: 0, scope: !14185)
!14189 = !DILocation(line: 122, column: 12, scope: !14185)
!14190 = !DILocation(line: 122, column: 62, scope: !14185)
!14191 = !DILocation(line: 123, column: 4, scope: !14185)
!14192 = !DILocation(line: 122, column: 2, scope: !14185)
!14193 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2480, file: !2480, line: 644, type: !13631, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14194)
!14194 = !{!14195, !14196, !14198}
!14195 = !DILocalVariable(name: "thread", arg: 1, scope: !14193, file: !2480, line: 644, type: !2365)
!14196 = !DILocalVariable(name: "__i", scope: !14197, file: !2480, line: 646, type: !13665)
!14197 = distinct !DILexicalBlock(scope: !14193, file: !2480, line: 646, column: 2)
!14198 = !DILocalVariable(name: "__key", scope: !14197, file: !2480, line: 646, type: !13665)
!14199 = !DILocation(line: 0, scope: !14193)
!14200 = !DILocation(line: 0, scope: !14197)
!14201 = !DILocation(line: 0, scope: !13673, inlinedAt: !14202)
!14202 = distinct !DILocation(line: 646, column: 2, scope: !14197)
!14203 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14204)
!14204 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14202)
!14205 = !DILocation(line: 0, scope: !13682, inlinedAt: !14204)
!14206 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14202)
!14207 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14202)
!14208 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14202)
!14209 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14202)
!14210 = !DILocation(line: 647, column: 3, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14212, file: !2480, line: 646, column: 26)
!14212 = distinct !DILexicalBlock(scope: !14197, file: !2480, line: 646, column: 2)
!14213 = !DILocation(line: 0, scope: !13707, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 646, column: 2, scope: !14212)
!14215 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14214)
!14216 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14214)
!14217 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14214)
!14218 = !DILocation(line: 0, scope: !13721, inlinedAt: !14219)
!14219 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14214)
!14220 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14219)
!14221 = !DILocation(line: 649, column: 1, scope: !14193)
!14222 = distinct !DISubprogram(name: "z_sched_start", scope: !2480, file: !2480, line: 651, type: !13631, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14223)
!14223 = !{!14224, !14225}
!14224 = !DILocalVariable(name: "thread", arg: 1, scope: !14222, file: !2480, line: 651, type: !2365)
!14225 = !DILocalVariable(name: "key", scope: !14222, file: !2480, line: 653, type: !13665)
!14226 = !DILocation(line: 0, scope: !14222)
!14227 = !DILocation(line: 0, scope: !13673, inlinedAt: !14228)
!14228 = distinct !DILocation(line: 653, column: 25, scope: !14222)
!14229 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14228)
!14231 = !DILocation(line: 0, scope: !13682, inlinedAt: !14230)
!14232 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14228)
!14233 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14228)
!14234 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14228)
!14235 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14228)
!14236 = !DILocation(line: 655, column: 6, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14222, file: !2480, line: 655, column: 6)
!14238 = !DILocation(line: 655, column: 6, scope: !14222)
!14239 = !DILocation(line: 0, scope: !13707, inlinedAt: !14240)
!14240 = distinct !DILocation(line: 656, column: 3, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14237, file: !2480, line: 655, column: 36)
!14242 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14240)
!14243 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14240)
!14244 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14240)
!14245 = !DILocation(line: 0, scope: !13721, inlinedAt: !14246)
!14246 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14240)
!14247 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14246)
!14248 = !DILocation(line: 657, column: 3, scope: !14241)
!14249 = !DILocation(line: 660, column: 2, scope: !14222)
!14250 = !DILocation(line: 661, column: 2, scope: !14222)
!14251 = !DILocation(line: 662, column: 2, scope: !14222)
!14252 = !DILocation(line: 663, column: 1, scope: !14222)
!14253 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12264, file: !12264, line: 126, type: !13814, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14254)
!14254 = !{!14255}
!14255 = !DILocalVariable(name: "thread", arg: 1, scope: !14253, file: !12264, line: 126, type: !2365)
!14256 = !DILocation(line: 0, scope: !14253)
!14257 = !DILocation(line: 128, column: 23, scope: !14253)
!14258 = !DILocation(line: 128, column: 36, scope: !14253)
!14259 = !DILocation(line: 128, column: 56, scope: !14253)
!14260 = !DILocation(line: 128, column: 2, scope: !14253)
!14261 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12264, file: !12264, line: 155, type: !13631, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14262)
!14262 = !{!14263}
!14263 = !DILocalVariable(name: "thread", arg: 1, scope: !14261, file: !12264, line: 155, type: !2365)
!14264 = !DILocation(line: 0, scope: !14261)
!14265 = !DILocation(line: 157, column: 15, scope: !14261)
!14266 = !DILocation(line: 157, column: 28, scope: !14261)
!14267 = !DILocation(line: 158, column: 1, scope: !14261)
!14268 = distinct !DISubprogram(name: "z_reschedule", scope: !2480, file: !2480, line: 967, type: !13708, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14269)
!14269 = !{!14270, !14271}
!14270 = !DILocalVariable(name: "lock", arg: 1, scope: !14268, file: !2480, line: 967, type: !13676)
!14271 = !DILocalVariable(name: "key", arg: 2, scope: !14268, file: !2480, line: 967, type: !13665)
!14272 = !DILocation(line: 0, scope: !14268)
!14273 = !DILocation(line: 969, column: 6, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14268, file: !2480, line: 969, column: 6)
!14275 = !DILocation(line: 969, column: 23, scope: !14274)
!14276 = !DILocation(line: 969, column: 26, scope: !14274)
!14277 = !DILocation(line: 969, column: 6, scope: !14268)
!14278 = !DILocalVariable(name: "key", arg: 2, scope: !14279, file: !12368, line: 193, type: !13665)
!14279 = distinct !DISubprogram(name: "z_swap", scope: !12368, file: !12368, line: 193, type: !14280, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14282)
!14280 = !DISubroutineType(types: !14281)
!14281 = !{!109, !13676, !13665}
!14282 = !{!14283, !14278}
!14283 = !DILocalVariable(name: "lock", arg: 1, scope: !14279, file: !12368, line: 193, type: !13676)
!14284 = !DILocation(line: 0, scope: !14279, inlinedAt: !14285)
!14285 = distinct !DILocation(line: 970, column: 3, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14274, file: !2480, line: 969, column: 39)
!14287 = !DILocalVariable(name: "l", arg: 1, scope: !14288, file: !254, line: 221, type: !13676)
!14288 = distinct !DISubprogram(name: "k_spin_release", scope: !254, file: !254, line: 221, type: !14289, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14291)
!14289 = !DISubroutineType(types: !14290)
!14290 = !{null, !13676}
!14291 = !{!14287}
!14292 = !DILocation(line: 0, scope: !14288, inlinedAt: !14293)
!14293 = distinct !DILocation(line: 195, column: 2, scope: !14279, inlinedAt: !14285)
!14294 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !14293)
!14295 = distinct !DILexicalBlock(scope: !14296, file: !254, line: 225, column: 2)
!14296 = distinct !DILexicalBlock(scope: !14288, file: !254, line: 225, column: 2)
!14297 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !14293)
!14298 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !14293)
!14299 = distinct !DILexicalBlock(scope: !14295, file: !254, line: 225, column: 2)
!14300 = !DILocation(line: 196, column: 9, scope: !14279, inlinedAt: !14285)
!14301 = !DILocation(line: 971, column: 2, scope: !14286)
!14302 = !DILocation(line: 0, scope: !13707, inlinedAt: !14303)
!14303 = distinct !DILocation(line: 972, column: 3, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14274, file: !2480, line: 971, column: 9)
!14305 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14303)
!14306 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14303)
!14307 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14303)
!14308 = !DILocation(line: 0, scope: !13721, inlinedAt: !14309)
!14309 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14303)
!14310 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14309)
!14311 = !DILocation(line: 975, column: 1, scope: !14268)
!14312 = distinct !DISubprogram(name: "resched", scope: !2480, file: !2480, line: 940, type: !14313, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14315)
!14313 = !DISubroutineType(types: !14314)
!14314 = !{!347, !110}
!14315 = !{!14316}
!14316 = !DILocalVariable(name: "key", arg: 1, scope: !14312, file: !2480, line: 940, type: !110)
!14317 = !DILocation(line: 0, scope: !14312)
!14318 = !DILocalVariable(name: "key", arg: 1, scope: !14319, file: !5954, line: 112, type: !32)
!14319 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5954, file: !5954, line: 112, type: !14320, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14322)
!14320 = !DISubroutineType(types: !14321)
!14321 = !{!347, !32}
!14322 = !{!14318}
!14323 = !DILocation(line: 0, scope: !14319, inlinedAt: !14324)
!14324 = distinct !DILocation(line: 946, column: 9, scope: !14312)
!14325 = !DILocation(line: 115, column: 13, scope: !14319, inlinedAt: !14324)
!14326 = !DILocation(line: 946, column: 32, scope: !14312)
!14327 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !14331)
!14328 = distinct !DISubprogram(name: "__get_IPSR", scope: !6145, file: !6145, line: 1027, type: !3358, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14329)
!14329 = !{!14330}
!14330 = !DILocalVariable(name: "result", scope: !14328, file: !6145, line: 1029, type: !110)
!14331 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !14333)
!14332 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6948, file: !6948, line: 46, type: !6949, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!14333 = distinct !DILocation(line: 946, column: 36, scope: !14312)
!14334 = !{i64 2489138}
!14335 = !DILocation(line: 0, scope: !14328, inlinedAt: !14331)
!14336 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !14333)
!14337 = !DILocation(line: 946, column: 2, scope: !14312)
!14338 = distinct !DISubprogram(name: "need_swap", scope: !2480, file: !2480, line: 953, type: !6949, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14339)
!14339 = !{!14340}
!14340 = !DILocalVariable(name: "new_thread", scope: !14338, file: !2480, line: 959, type: !2365)
!14341 = !DILocation(line: 962, column: 31, scope: !14338)
!14342 = !DILocation(line: 0, scope: !14338)
!14343 = !DILocation(line: 963, column: 23, scope: !14338)
!14344 = !DILocation(line: 963, column: 20, scope: !14338)
!14345 = !DILocation(line: 963, column: 2, scope: !14338)
!14346 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12368, file: !12368, line: 181, type: !6155, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14347)
!14347 = !{!14348, !14349}
!14348 = !DILocalVariable(name: "key", arg: 1, scope: !14346, file: !12368, line: 181, type: !32)
!14349 = !DILocalVariable(name: "ret", scope: !14346, file: !12368, line: 183, type: !109)
!14350 = !DILocation(line: 0, scope: !14346)
!14351 = !DILocation(line: 185, column: 8, scope: !14346)
!14352 = !DILocation(line: 186, column: 2, scope: !14346)
!14353 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2480, file: !2480, line: 665, type: !13631, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14354)
!14354 = !{!14355, !14356, !14358}
!14355 = !DILocalVariable(name: "thread", arg: 1, scope: !14353, file: !2480, line: 665, type: !2365)
!14356 = !DILocalVariable(name: "__i", scope: !14357, file: !2480, line: 671, type: !13665)
!14357 = distinct !DILexicalBlock(scope: !14353, file: !2480, line: 671, column: 2)
!14358 = !DILocalVariable(name: "__key", scope: !14357, file: !2480, line: 671, type: !13665)
!14359 = !DILocation(line: 0, scope: !14353)
!14360 = !DILocation(line: 669, column: 8, scope: !14353)
!14361 = !DILocation(line: 0, scope: !14357)
!14362 = !DILocation(line: 0, scope: !13673, inlinedAt: !14363)
!14363 = distinct !DILocation(line: 671, column: 2, scope: !14357)
!14364 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14363)
!14366 = !DILocation(line: 0, scope: !13682, inlinedAt: !14365)
!14367 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14363)
!14368 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14363)
!14369 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14363)
!14370 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14363)
!14371 = !DILocation(line: 672, column: 7, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !2480, line: 672, column: 7)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !2480, line: 671, column: 26)
!14374 = distinct !DILexicalBlock(scope: !14357, file: !2480, line: 671, column: 2)
!14375 = !DILocation(line: 672, column: 7, scope: !14373)
!14376 = !DILocation(line: 0, scope: !13865, inlinedAt: !14377)
!14377 = distinct !DILocation(line: 673, column: 4, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14372, file: !2480, line: 672, column: 35)
!14379 = !DILocation(line: 266, column: 15, scope: !13865, inlinedAt: !14377)
!14380 = !DILocation(line: 266, column: 28, scope: !13865, inlinedAt: !14377)
!14381 = !DILocation(line: 0, scope: !13873, inlinedAt: !14382)
!14382 = distinct !DILocation(line: 268, column: 3, scope: !13877, inlinedAt: !14377)
!14383 = !DILocation(line: 234, column: 2, scope: !13873, inlinedAt: !14382)
!14384 = !DILocation(line: 674, column: 3, scope: !14378)
!14385 = !DILocation(line: 675, column: 3, scope: !14373)
!14386 = !DILocation(line: 676, column: 26, scope: !14373)
!14387 = !DILocation(line: 676, column: 23, scope: !14373)
!14388 = !DILocation(line: 676, column: 3, scope: !14373)
!14389 = !DILocation(line: 0, scope: !13707, inlinedAt: !14390)
!14390 = distinct !DILocation(line: 671, column: 2, scope: !14374)
!14391 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14390)
!14392 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14390)
!14393 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14390)
!14394 = !DILocation(line: 0, scope: !13721, inlinedAt: !14395)
!14395 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14390)
!14396 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14395)
!14397 = !DILocation(line: 679, column: 16, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14353, file: !2480, line: 679, column: 6)
!14399 = !DILocation(line: 679, column: 13, scope: !14398)
!14400 = !DILocation(line: 679, column: 6, scope: !14353)
!14401 = !DILocation(line: 680, column: 3, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14398, file: !2480, line: 679, column: 26)
!14403 = !DILocation(line: 681, column: 2, scope: !14402)
!14404 = !DILocation(line: 684, column: 1, scope: !14353)
!14405 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12936, file: !12936, line: 52, type: !13649, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14406)
!14406 = !{!14407}
!14407 = !DILocalVariable(name: "thread", arg: 1, scope: !14405, file: !12936, line: 52, type: !2365)
!14408 = !DILocation(line: 0, scope: !14405)
!14409 = !DILocation(line: 54, column: 39, scope: !14405)
!14410 = !DILocation(line: 54, column: 9, scope: !14405)
!14411 = !DILocation(line: 54, column: 2, scope: !14405)
!14412 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12264, file: !12264, line: 141, type: !13631, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14413)
!14413 = !{!14414}
!14414 = !DILocalVariable(name: "thread", arg: 1, scope: !14412, file: !12264, line: 141, type: !2365)
!14415 = !DILocation(line: 0, scope: !14412)
!14416 = !DILocation(line: 143, column: 15, scope: !14412)
!14417 = !DILocation(line: 143, column: 28, scope: !14412)
!14418 = !DILocation(line: 146, column: 1, scope: !14412)
!14419 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12264, file: !12264, line: 73, type: !3076, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!14420 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14421)
!14421 = distinct !DILocation(line: 75, column: 30, scope: !14419)
!14422 = !DILocation(line: 0, scope: !13682, inlinedAt: !14421)
!14423 = !DILocation(line: 75, column: 9, scope: !14419)
!14424 = !DILocation(line: 76, column: 1, scope: !14419)
!14425 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2480, file: !2480, line: 977, type: !5978, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14426)
!14426 = !{!14427}
!14427 = !DILocalVariable(name: "key", arg: 1, scope: !14425, file: !2480, line: 977, type: !110)
!14428 = !DILocation(line: 0, scope: !14425)
!14429 = !DILocation(line: 979, column: 6, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14425, file: !2480, line: 979, column: 6)
!14431 = !DILocation(line: 979, column: 6, scope: !14425)
!14432 = !DILocation(line: 980, column: 3, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !2480, line: 979, column: 20)
!14434 = !DILocation(line: 981, column: 2, scope: !14433)
!14435 = !DILocation(line: 0, scope: !13721, inlinedAt: !14436)
!14436 = distinct !DILocation(line: 982, column: 3, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14430, file: !2480, line: 981, column: 9)
!14438 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14436)
!14439 = !DILocation(line: 985, column: 1, scope: !14425)
!14440 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2480, file: !2480, line: 695, type: !13631, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14441)
!14441 = !{!14442, !14443}
!14442 = !DILocalVariable(name: "thread", arg: 1, scope: !14440, file: !2480, line: 695, type: !2365)
!14443 = !DILocalVariable(name: "key", scope: !14440, file: !2480, line: 699, type: !13665)
!14444 = !DILocation(line: 0, scope: !14440)
!14445 = !DILocation(line: 0, scope: !13673, inlinedAt: !14446)
!14446 = distinct !DILocation(line: 699, column: 25, scope: !14440)
!14447 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14446)
!14449 = !DILocation(line: 0, scope: !13682, inlinedAt: !14448)
!14450 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14446)
!14451 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14446)
!14452 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14446)
!14453 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14446)
!14454 = !DILocation(line: 702, column: 7, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14440, file: !2480, line: 702, column: 6)
!14456 = !DILocation(line: 702, column: 6, scope: !14440)
!14457 = !DILocation(line: 0, scope: !13707, inlinedAt: !14458)
!14458 = distinct !DILocation(line: 703, column: 3, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14455, file: !2480, line: 702, column: 38)
!14460 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14458)
!14461 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14458)
!14462 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14458)
!14463 = !DILocation(line: 0, scope: !13721, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14458)
!14465 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14464)
!14466 = !DILocation(line: 704, column: 3, scope: !14459)
!14467 = !DILocation(line: 707, column: 2, scope: !14440)
!14468 = !DILocation(line: 708, column: 2, scope: !14440)
!14469 = !DILocation(line: 710, column: 2, scope: !14440)
!14470 = !DILocation(line: 713, column: 1, scope: !14440)
!14471 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12264, file: !12264, line: 96, type: !13814, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14472)
!14472 = !{!14473}
!14473 = !DILocalVariable(name: "thread", arg: 1, scope: !14471, file: !12264, line: 96, type: !2365)
!14474 = !DILocation(line: 0, scope: !14471)
!14475 = !DILocation(line: 98, column: 23, scope: !14471)
!14476 = !DILocation(line: 98, column: 36, scope: !14471)
!14477 = !DILocation(line: 98, column: 57, scope: !14471)
!14478 = !DILocation(line: 98, column: 2, scope: !14471)
!14479 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12264, file: !12264, line: 148, type: !13631, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14480)
!14480 = !{!14481}
!14481 = !DILocalVariable(name: "thread", arg: 1, scope: !14479, file: !12264, line: 148, type: !2365)
!14482 = !DILocation(line: 0, scope: !14479)
!14483 = !DILocation(line: 150, column: 15, scope: !14479)
!14484 = !DILocation(line: 150, column: 28, scope: !14479)
!14485 = !DILocation(line: 153, column: 1, scope: !14479)
!14486 = distinct !DISubprogram(name: "z_pend_thread", scope: !2480, file: !2480, line: 770, type: !14487, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14493)
!14487 = !DISubroutineType(types: !14488)
!14488 = !{null, !2365, !2396, !14489}
!14489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14490)
!14490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14491)
!14491 = !{!14492}
!14492 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14490, file: !105, line: 66, baseType: !104, size: 64)
!14493 = !{!14494, !14495, !14496, !14497, !14499}
!14494 = !DILocalVariable(name: "thread", arg: 1, scope: !14486, file: !2480, line: 770, type: !2365)
!14495 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14486, file: !2480, line: 770, type: !2396)
!14496 = !DILocalVariable(name: "timeout", arg: 3, scope: !14486, file: !2480, line: 771, type: !14489)
!14497 = !DILocalVariable(name: "__i", scope: !14498, file: !2480, line: 774, type: !13665)
!14498 = distinct !DILexicalBlock(scope: !14486, file: !2480, line: 774, column: 2)
!14499 = !DILocalVariable(name: "__key", scope: !14498, file: !2480, line: 774, type: !13665)
!14500 = !DILocation(line: 0, scope: !14486)
!14501 = !DILocation(line: 773, column: 2, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !2480, line: 773, column: 2)
!14503 = distinct !DILexicalBlock(scope: !14486, file: !2480, line: 773, column: 2)
!14504 = !DILocation(line: 773, column: 2, scope: !14503)
!14505 = !DILocation(line: 773, column: 2, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14502, file: !2480, line: 773, column: 2)
!14507 = !DILocation(line: 0, scope: !14498)
!14508 = !DILocation(line: 0, scope: !13673, inlinedAt: !14509)
!14509 = distinct !DILocation(line: 774, column: 2, scope: !14498)
!14510 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14509)
!14512 = !DILocation(line: 0, scope: !13682, inlinedAt: !14511)
!14513 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14509)
!14514 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14509)
!14515 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14509)
!14516 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14509)
!14517 = !DILocation(line: 775, column: 3, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14519, file: !2480, line: 774, column: 26)
!14519 = distinct !DILexicalBlock(scope: !14498, file: !2480, line: 774, column: 2)
!14520 = !DILocation(line: 0, scope: !13707, inlinedAt: !14521)
!14521 = distinct !DILocation(line: 774, column: 2, scope: !14519)
!14522 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14521)
!14523 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14521)
!14524 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14521)
!14525 = !DILocation(line: 0, scope: !13721, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14521)
!14527 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14526)
!14528 = !DILocation(line: 777, column: 1, scope: !14486)
!14529 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2480, file: !2480, line: 79, type: !13814, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14530)
!14530 = !{!14531}
!14531 = !DILocalVariable(name: "thread", arg: 1, scope: !14529, file: !2480, line: 79, type: !2365)
!14532 = !DILocation(line: 0, scope: !14529)
!14533 = !DILocation(line: 81, column: 23, scope: !14529)
!14534 = !DILocation(line: 81, column: 36, scope: !14529)
!14535 = !DILocation(line: 81, column: 53, scope: !14529)
!14536 = !DILocation(line: 81, column: 2, scope: !14529)
!14537 = distinct !DISubprogram(name: "pend_locked", scope: !2480, file: !2480, line: 760, type: !14487, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14538)
!14538 = !{!14539, !14540, !14541}
!14539 = !DILocalVariable(name: "thread", arg: 1, scope: !14537, file: !2480, line: 760, type: !2365)
!14540 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14537, file: !2480, line: 760, type: !2396)
!14541 = !DILocalVariable(name: "timeout", arg: 3, scope: !14537, file: !2480, line: 761, type: !14489)
!14542 = !DILocation(line: 0, scope: !14537)
!14543 = !DILocation(line: 766, column: 2, scope: !14537)
!14544 = !DILocation(line: 767, column: 2, scope: !14537)
!14545 = !DILocation(line: 768, column: 1, scope: !14537)
!14546 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2480, file: !2480, line: 740, type: !14547, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14549)
!14547 = !DISubroutineType(types: !14548)
!14548 = !{null, !2365, !2396}
!14549 = !{!14550, !14551}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14546, file: !2480, line: 740, type: !2365)
!14551 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14546, file: !2480, line: 740, type: !2396)
!14552 = !DILocation(line: 0, scope: !14546)
!14553 = !DILocation(line: 742, column: 2, scope: !14546)
!14554 = !DILocation(line: 743, column: 2, scope: !14546)
!14555 = !DILocation(line: 747, column: 13, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14546, file: !2480, line: 747, column: 6)
!14557 = !DILocation(line: 747, column: 6, scope: !14546)
!14558 = !DILocation(line: 748, column: 16, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14556, file: !2480, line: 747, column: 22)
!14560 = !DILocation(line: 748, column: 26, scope: !14559)
!14561 = !DILocation(line: 749, column: 28, scope: !14559)
!14562 = !DILocalVariable(name: "pq", arg: 1, scope: !14563, file: !2480, line: 181, type: !14566)
!14563 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2480, file: !2480, line: 181, type: !14564, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14567)
!14564 = !DISubroutineType(types: !14565)
!14565 = !{null, !14566, !2365}
!14566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!14567 = !{!14562, !14568, !14569}
!14568 = !DILocalVariable(name: "thread", arg: 2, scope: !14563, file: !2480, line: 182, type: !2365)
!14569 = !DILocalVariable(name: "t", scope: !14563, file: !2480, line: 184, type: !2365)
!14570 = !DILocation(line: 0, scope: !14563, inlinedAt: !14571)
!14571 = distinct !DILocation(line: 749, column: 3, scope: !14559)
!14572 = !DILocation(line: 186, column: 2, scope: !14573, inlinedAt: !14571)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !2480, line: 186, column: 2)
!14574 = distinct !DILexicalBlock(scope: !14563, file: !2480, line: 186, column: 2)
!14575 = !DILocation(line: 186, column: 2, scope: !14574, inlinedAt: !14571)
!14576 = !DILocation(line: 186, column: 2, scope: !14577, inlinedAt: !14571)
!14577 = distinct !DILexicalBlock(scope: !14573, file: !2480, line: 186, column: 2)
!14578 = !DILocation(line: 188, column: 2, scope: !14579, inlinedAt: !14571)
!14579 = distinct !DILexicalBlock(scope: !14563, file: !2480, line: 188, column: 2)
!14580 = !DILocation(line: 188, column: 2, scope: !14581, inlinedAt: !14571)
!14581 = distinct !DILexicalBlock(scope: !14579, file: !2480, line: 188, column: 2)
!14582 = !DILocation(line: 0, scope: !14579, inlinedAt: !14571)
!14583 = !DILocation(line: 189, column: 7, scope: !14584, inlinedAt: !14571)
!14584 = distinct !DILexicalBlock(scope: !14585, file: !2480, line: 189, column: 7)
!14585 = distinct !DILexicalBlock(scope: !14581, file: !2480, line: 188, column: 56)
!14586 = !DILocation(line: 189, column: 35, scope: !14584, inlinedAt: !14571)
!14587 = !DILocation(line: 189, column: 7, scope: !14585, inlinedAt: !14571)
!14588 = !DILocation(line: 191, column: 21, scope: !14589, inlinedAt: !14571)
!14589 = distinct !DILexicalBlock(scope: !14584, file: !2480, line: 189, column: 40)
!14590 = !DILocation(line: 190, column: 4, scope: !14589, inlinedAt: !14571)
!14591 = !DILocation(line: 192, column: 4, scope: !14589, inlinedAt: !14571)
!14592 = distinct !{!14592, !14578, !14593}
!14593 = !DILocation(line: 194, column: 2, scope: !14579, inlinedAt: !14571)
!14594 = !DILocation(line: 196, column: 37, scope: !14563, inlinedAt: !14571)
!14595 = !DILocation(line: 196, column: 2, scope: !14563, inlinedAt: !14571)
!14596 = !DILocation(line: 197, column: 1, scope: !14563, inlinedAt: !14571)
!14597 = !DILocation(line: 751, column: 1, scope: !14546)
!14598 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2480, file: !2480, line: 753, type: !14599, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14601)
!14599 = !DISubroutineType(types: !14600)
!14600 = !{null, !2365, !14489}
!14601 = !{!14602, !14603}
!14602 = !DILocalVariable(name: "thread", arg: 1, scope: !14598, file: !2480, line: 753, type: !2365)
!14603 = !DILocalVariable(name: "timeout", arg: 2, scope: !14598, file: !2480, line: 753, type: !14489)
!14604 = !DILocation(line: 0, scope: !14598)
!14605 = !DILocation(line: 755, column: 7, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14598, file: !2480, line: 755, column: 6)
!14607 = !DILocation(line: 755, column: 6, scope: !14598)
!14608 = !DILocation(line: 756, column: 3, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14606, file: !2480, line: 755, column: 41)
!14610 = !DILocation(line: 757, column: 2, scope: !14609)
!14611 = !DILocation(line: 758, column: 1, scope: !14598)
!14612 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12936, file: !12936, line: 47, type: !14599, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14613)
!14613 = !{!14614, !14615}
!14614 = !DILocalVariable(name: "thread", arg: 1, scope: !14612, file: !12936, line: 47, type: !2365)
!14615 = !DILocalVariable(name: "ticks", arg: 2, scope: !14612, file: !12936, line: 47, type: !14489)
!14616 = !DILocation(line: 0, scope: !14612)
!14617 = !DILocation(line: 49, column: 30, scope: !14612)
!14618 = !DILocation(line: 49, column: 2, scope: !14612)
!14619 = !DILocation(line: 50, column: 1, scope: !14612)
!14620 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2480, file: !2480, line: 795, type: !2422, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14621)
!14621 = !{!14622, !14623, !14624, !14626, !14627}
!14622 = !DILocalVariable(name: "timeout", arg: 1, scope: !14620, file: !2480, line: 795, type: !2424)
!14623 = !DILocalVariable(name: "thread", scope: !14620, file: !2480, line: 797, type: !2365)
!14624 = !DILocalVariable(name: "__i", scope: !14625, file: !2480, line: 800, type: !13665)
!14625 = distinct !DILexicalBlock(scope: !14620, file: !2480, line: 800, column: 2)
!14626 = !DILocalVariable(name: "__key", scope: !14625, file: !2480, line: 800, type: !13665)
!14627 = !DILocalVariable(name: "killed", scope: !14628, file: !2480, line: 801, type: !347)
!14628 = distinct !DILexicalBlock(scope: !14629, file: !2480, line: 800, column: 26)
!14629 = distinct !DILexicalBlock(scope: !14625, file: !2480, line: 800, column: 2)
!14630 = !DILocation(line: 0, scope: !14620)
!14631 = !DILocation(line: 797, column: 28, scope: !14620)
!14632 = !DILocation(line: 0, scope: !14625)
!14633 = !DILocation(line: 0, scope: !13673, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 800, column: 2, scope: !14625)
!14635 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14634)
!14637 = !DILocation(line: 0, scope: !13682, inlinedAt: !14636)
!14638 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14634)
!14639 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14634)
!14640 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14634)
!14641 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14634)
!14642 = !DILocation(line: 801, column: 27, scope: !14628)
!14643 = !DILocation(line: 801, column: 32, scope: !14628)
!14644 = !DILocation(line: 801, column: 61, scope: !14628)
!14645 = !DILocation(line: 0, scope: !14628)
!14646 = !DILocation(line: 804, column: 7, scope: !14628)
!14647 = !DILocation(line: 805, column: 21, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14649, file: !2480, line: 805, column: 8)
!14649 = distinct !DILexicalBlock(scope: !14650, file: !2480, line: 804, column: 16)
!14650 = distinct !DILexicalBlock(scope: !14628, file: !2480, line: 804, column: 7)
!14651 = !DILocation(line: 805, column: 31, scope: !14648)
!14652 = !DILocation(line: 805, column: 8, scope: !14649)
!14653 = !DILocation(line: 806, column: 5, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14648, file: !2480, line: 805, column: 40)
!14655 = !DILocation(line: 807, column: 4, scope: !14654)
!14656 = !DILocation(line: 808, column: 4, scope: !14649)
!14657 = !DILocation(line: 809, column: 4, scope: !14649)
!14658 = !DILocation(line: 810, column: 4, scope: !14649)
!14659 = !DILocation(line: 811, column: 3, scope: !14649)
!14660 = !DILocation(line: 0, scope: !13707, inlinedAt: !14661)
!14661 = distinct !DILocation(line: 800, column: 2, scope: !14629)
!14662 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14661)
!14663 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14661)
!14664 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14661)
!14665 = !DILocation(line: 0, scope: !13721, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14661)
!14667 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14666)
!14668 = !DILocation(line: 813, column: 1, scope: !14620)
!14669 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2480, file: !2480, line: 779, type: !13631, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14670)
!14670 = !{!14671}
!14671 = !DILocalVariable(name: "thread", arg: 1, scope: !14669, file: !2480, line: 779, type: !2365)
!14672 = !DILocation(line: 0, scope: !14669)
!14673 = !DILocation(line: 781, column: 21, scope: !14669)
!14674 = !DILocation(line: 781, column: 2, scope: !14669)
!14675 = !DILocation(line: 782, column: 2, scope: !14669)
!14676 = !DILocation(line: 783, column: 15, scope: !14669)
!14677 = !DILocation(line: 783, column: 25, scope: !14669)
!14678 = !DILocation(line: 784, column: 1, scope: !14669)
!14679 = distinct !DISubprogram(name: "pended_on_thread", scope: !2480, file: !2480, line: 724, type: !14680, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14682)
!14680 = !DISubroutineType(types: !14681)
!14681 = !{!2396, !2365}
!14682 = !{!14683}
!14683 = !DILocalVariable(name: "thread", arg: 1, scope: !14679, file: !2480, line: 724, type: !2365)
!14684 = !DILocation(line: 0, scope: !14679)
!14685 = !DILocation(line: 726, column: 2, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14687, file: !2480, line: 726, column: 2)
!14687 = distinct !DILexicalBlock(scope: !14679, file: !2480, line: 726, column: 2)
!14688 = !DILocation(line: 726, column: 2, scope: !14687)
!14689 = !DILocation(line: 726, column: 2, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14686, file: !2480, line: 726, column: 2)
!14691 = !DILocation(line: 728, column: 2, scope: !14679)
!14692 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2480, file: !2480, line: 1137, type: !14564, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14693)
!14693 = !{!14694, !14695}
!14694 = !DILocalVariable(name: "pq", arg: 1, scope: !14692, file: !2480, line: 1137, type: !14566)
!14695 = !DILocalVariable(name: "thread", arg: 2, scope: !14692, file: !2480, line: 1137, type: !2365)
!14696 = !DILocation(line: 0, scope: !14692)
!14697 = !DILocation(line: 1139, column: 2, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !2480, line: 1139, column: 2)
!14699 = distinct !DILexicalBlock(scope: !14692, file: !2480, line: 1139, column: 2)
!14700 = !DILocation(line: 1139, column: 2, scope: !14699)
!14701 = !DILocation(line: 1139, column: 2, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14698, file: !2480, line: 1139, column: 2)
!14703 = !DILocation(line: 1141, column: 33, scope: !14692)
!14704 = !DILocation(line: 1141, column: 2, scope: !14692)
!14705 = !DILocation(line: 1142, column: 1, scope: !14692)
!14706 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12264, file: !12264, line: 165, type: !13631, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14707)
!14707 = !{!14708}
!14708 = !DILocalVariable(name: "thread", arg: 1, scope: !14706, file: !12264, line: 165, type: !2365)
!14709 = !DILocation(line: 0, scope: !14706)
!14710 = !DILocation(line: 167, column: 15, scope: !14706)
!14711 = !DILocation(line: 167, column: 28, scope: !14706)
!14712 = !DILocation(line: 168, column: 1, scope: !14706)
!14713 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !14714, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14717)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{null, !14716}
!14716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!14717 = !{!14718, !14719, !14721}
!14718 = !DILocalVariable(name: "node", arg: 1, scope: !14713, file: !128, line: 496, type: !14716)
!14719 = !DILocalVariable(name: "prev", scope: !14713, file: !128, line: 498, type: !14720)
!14720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14716)
!14721 = !DILocalVariable(name: "next", scope: !14713, file: !128, line: 499, type: !14720)
!14722 = !DILocation(line: 0, scope: !14713)
!14723 = !DILocation(line: 498, column: 34, scope: !14713)
!14724 = !DILocation(line: 499, column: 34, scope: !14713)
!14725 = !DILocation(line: 501, column: 8, scope: !14713)
!14726 = !DILocation(line: 501, column: 13, scope: !14713)
!14727 = !DILocation(line: 502, column: 8, scope: !14713)
!14728 = !DILocation(line: 502, column: 13, scope: !14713)
!14729 = !DILocation(line: 503, column: 2, scope: !14713)
!14730 = !DILocation(line: 504, column: 1, scope: !14713)
!14731 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !14714, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14732)
!14732 = !{!14733}
!14733 = !DILocalVariable(name: "node", arg: 1, scope: !14731, file: !128, line: 211, type: !14716)
!14734 = !DILocation(line: 0, scope: !14731)
!14735 = !DILocation(line: 213, column: 8, scope: !14731)
!14736 = !DILocation(line: 213, column: 13, scope: !14731)
!14737 = !DILocation(line: 214, column: 8, scope: !14731)
!14738 = !DILocation(line: 214, column: 13, scope: !14731)
!14739 = !DILocation(line: 215, column: 1, scope: !14731)
!14740 = distinct !DISubprogram(name: "unready_thread", scope: !2480, file: !2480, line: 731, type: !13631, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14741)
!14741 = !{!14742}
!14742 = !DILocalVariable(name: "thread", arg: 1, scope: !14740, file: !2480, line: 731, type: !2365)
!14743 = !DILocation(line: 0, scope: !14740)
!14744 = !DILocation(line: 733, column: 6, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14740, file: !2480, line: 733, column: 6)
!14746 = !DILocation(line: 733, column: 6, scope: !14740)
!14747 = !DILocation(line: 0, scope: !13865, inlinedAt: !14748)
!14748 = distinct !DILocation(line: 734, column: 3, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14745, file: !2480, line: 733, column: 34)
!14750 = !DILocation(line: 266, column: 15, scope: !13865, inlinedAt: !14748)
!14751 = !DILocation(line: 266, column: 28, scope: !13865, inlinedAt: !14748)
!14752 = !DILocation(line: 0, scope: !13873, inlinedAt: !14753)
!14753 = distinct !DILocation(line: 268, column: 3, scope: !13877, inlinedAt: !14748)
!14754 = !DILocation(line: 234, column: 2, scope: !13873, inlinedAt: !14753)
!14755 = !DILocation(line: 735, column: 2, scope: !14749)
!14756 = !DILocation(line: 736, column: 25, scope: !14740)
!14757 = !DILocation(line: 736, column: 22, scope: !14740)
!14758 = !DILocation(line: 736, column: 2, scope: !14740)
!14759 = !DILocation(line: 737, column: 1, scope: !14740)
!14760 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12264, file: !12264, line: 160, type: !13631, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14761)
!14761 = !{!14762}
!14762 = !DILocalVariable(name: "thread", arg: 1, scope: !14760, file: !12264, line: 160, type: !2365)
!14763 = !DILocation(line: 0, scope: !14760)
!14764 = !DILocation(line: 162, column: 15, scope: !14760)
!14765 = !DILocation(line: 162, column: 28, scope: !14760)
!14766 = !DILocation(line: 163, column: 1, scope: !14760)
!14767 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !14768, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14770)
!14768 = !DISubroutineType(types: !14769)
!14769 = !{!14716, !14566}
!14770 = !{!14771}
!14771 = !DILocalVariable(name: "list", arg: 1, scope: !14767, file: !128, line: 294, type: !14566)
!14772 = !DILocation(line: 0, scope: !14767)
!14773 = !DILocation(line: 296, column: 9, scope: !14767)
!14774 = !DILocation(line: 296, column: 49, scope: !14767)
!14775 = !DILocation(line: 296, column: 2, scope: !14767)
!14776 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !14777, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14779)
!14777 = !DISubroutineType(types: !14778)
!14778 = !{null, !14716, !14716}
!14779 = !{!14780, !14781, !14782}
!14780 = !DILocalVariable(name: "successor", arg: 1, scope: !14776, file: !128, line: 443, type: !14716)
!14781 = !DILocalVariable(name: "node", arg: 2, scope: !14776, file: !128, line: 443, type: !14716)
!14782 = !DILocalVariable(name: "prev", scope: !14776, file: !128, line: 445, type: !14720)
!14783 = !DILocation(line: 0, scope: !14776)
!14784 = !DILocation(line: 445, column: 39, scope: !14776)
!14785 = !DILocation(line: 447, column: 8, scope: !14776)
!14786 = !DILocation(line: 447, column: 13, scope: !14776)
!14787 = !DILocation(line: 448, column: 8, scope: !14776)
!14788 = !DILocation(line: 448, column: 13, scope: !14776)
!14789 = !DILocation(line: 449, column: 8, scope: !14776)
!14790 = !DILocation(line: 449, column: 13, scope: !14776)
!14791 = !DILocation(line: 450, column: 18, scope: !14776)
!14792 = !DILocation(line: 451, column: 1, scope: !14776)
!14793 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !14794, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14796)
!14794 = !DISubroutineType(types: !14795)
!14795 = !{!14716, !14566, !14716}
!14796 = !{!14797, !14798}
!14797 = !DILocalVariable(name: "list", arg: 1, scope: !14793, file: !128, line: 341, type: !14566)
!14798 = !DILocalVariable(name: "node", arg: 2, scope: !14793, file: !128, line: 342, type: !14716)
!14799 = !DILocation(line: 0, scope: !14793)
!14800 = !DILocation(line: 344, column: 15, scope: !14793)
!14801 = !DILocation(line: 344, column: 9, scope: !14793)
!14802 = !DILocation(line: 344, column: 26, scope: !14793)
!14803 = !DILocation(line: 344, column: 2, scope: !14793)
!14804 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !14805, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14807)
!14805 = !DISubroutineType(types: !14806)
!14806 = !{null, !14566, !14716}
!14807 = !{!14808, !14809, !14810}
!14808 = !DILocalVariable(name: "list", arg: 1, scope: !14804, file: !128, line: 404, type: !14566)
!14809 = !DILocalVariable(name: "node", arg: 2, scope: !14804, file: !128, line: 404, type: !14716)
!14810 = !DILocalVariable(name: "tail", scope: !14804, file: !128, line: 406, type: !14720)
!14811 = !DILocation(line: 0, scope: !14804)
!14812 = !DILocation(line: 406, column: 34, scope: !14804)
!14813 = !DILocation(line: 408, column: 8, scope: !14804)
!14814 = !DILocation(line: 408, column: 13, scope: !14804)
!14815 = !DILocation(line: 409, column: 8, scope: !14804)
!14816 = !DILocation(line: 409, column: 13, scope: !14804)
!14817 = !DILocation(line: 411, column: 8, scope: !14804)
!14818 = !DILocation(line: 411, column: 13, scope: !14804)
!14819 = !DILocation(line: 412, column: 13, scope: !14804)
!14820 = !DILocation(line: 413, column: 1, scope: !14804)
!14821 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !14794, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14822)
!14822 = !{!14823, !14824}
!14823 = !DILocalVariable(name: "list", arg: 1, scope: !14821, file: !128, line: 325, type: !14566)
!14824 = !DILocalVariable(name: "node", arg: 2, scope: !14821, file: !128, line: 326, type: !14716)
!14825 = !DILocation(line: 0, scope: !14821)
!14826 = !DILocation(line: 328, column: 24, scope: !14821)
!14827 = !DILocation(line: 328, column: 15, scope: !14821)
!14828 = !DILocation(line: 328, column: 9, scope: !14821)
!14829 = !DILocation(line: 328, column: 45, scope: !14821)
!14830 = !DILocation(line: 328, column: 2, scope: !14821)
!14831 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !14832, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14834)
!14832 = !DISubroutineType(types: !14833)
!14833 = !{!347, !14566}
!14834 = !{!14835}
!14835 = !DILocalVariable(name: "list", arg: 1, scope: !14831, file: !128, line: 266, type: !14566)
!14836 = !DILocation(line: 0, scope: !14831)
!14837 = !DILocation(line: 268, column: 15, scope: !14831)
!14838 = !DILocation(line: 268, column: 20, scope: !14831)
!14839 = !DILocation(line: 268, column: 2, scope: !14831)
!14840 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2480, file: !2480, line: 786, type: !13631, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14841)
!14841 = !{!14842, !14843, !14845}
!14842 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !2480, line: 786, type: !2365)
!14843 = !DILocalVariable(name: "__i", scope: !14844, file: !2480, line: 788, type: !13665)
!14844 = distinct !DILexicalBlock(scope: !14840, file: !2480, line: 788, column: 2)
!14845 = !DILocalVariable(name: "__key", scope: !14844, file: !2480, line: 788, type: !13665)
!14846 = !DILocation(line: 0, scope: !14840)
!14847 = !DILocation(line: 0, scope: !14844)
!14848 = !DILocation(line: 0, scope: !13673, inlinedAt: !14849)
!14849 = distinct !DILocation(line: 788, column: 2, scope: !14844)
!14850 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14849)
!14852 = !DILocation(line: 0, scope: !13682, inlinedAt: !14851)
!14853 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14849)
!14854 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14849)
!14855 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14849)
!14856 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14849)
!14857 = !DILocation(line: 789, column: 3, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !2480, line: 788, column: 26)
!14859 = distinct !DILexicalBlock(scope: !14844, file: !2480, line: 788, column: 2)
!14860 = !DILocation(line: 0, scope: !13707, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 788, column: 2, scope: !14859)
!14862 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14861)
!14863 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14861)
!14864 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14861)
!14865 = !DILocation(line: 0, scope: !13721, inlinedAt: !14866)
!14866 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14861)
!14867 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14866)
!14868 = !DILocation(line: 791, column: 1, scope: !14840)
!14869 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2480, file: !2480, line: 816, type: !14870, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14872)
!14870 = !DISubroutineType(types: !14871)
!14871 = !{!109, !110, !2396, !14489}
!14872 = !{!14873, !14874, !14875, !14876, !14877, !14879}
!14873 = !DILocalVariable(name: "key", arg: 1, scope: !14869, file: !2480, line: 816, type: !110)
!14874 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14869, file: !2480, line: 816, type: !2396)
!14875 = !DILocalVariable(name: "timeout", arg: 3, scope: !14869, file: !2480, line: 816, type: !14489)
!14876 = !DILocalVariable(name: "ret", scope: !14869, file: !2480, line: 828, type: !109)
!14877 = !DILocalVariable(name: "__i", scope: !14878, file: !2480, line: 829, type: !13665)
!14878 = distinct !DILexicalBlock(scope: !14869, file: !2480, line: 829, column: 2)
!14879 = !DILocalVariable(name: "__key", scope: !14878, file: !2480, line: 829, type: !13665)
!14880 = !DILocation(line: 0, scope: !14869)
!14881 = !DILocation(line: 823, column: 14, scope: !14869)
!14882 = !DILocation(line: 823, column: 2, scope: !14869)
!14883 = !DILocation(line: 826, column: 20, scope: !14869)
!14884 = !DILocation(line: 826, column: 18, scope: !14869)
!14885 = !DILocation(line: 828, column: 12, scope: !14869)
!14886 = !DILocation(line: 0, scope: !14878)
!14887 = !DILocation(line: 0, scope: !13673, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 829, column: 2, scope: !14878)
!14889 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14888)
!14891 = !DILocation(line: 0, scope: !13682, inlinedAt: !14890)
!14892 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14888)
!14893 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14888)
!14894 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14888)
!14895 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14888)
!14896 = !DILocation(line: 830, column: 7, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14898, file: !2480, line: 830, column: 7)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2480, line: 829, column: 26)
!14899 = distinct !DILexicalBlock(scope: !14878, file: !2480, line: 829, column: 2)
!14900 = !DILocation(line: 830, column: 26, scope: !14897)
!14901 = !DILocation(line: 830, column: 23, scope: !14897)
!14902 = !DILocation(line: 830, column: 7, scope: !14898)
!14903 = !DILocation(line: 831, column: 20, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14897, file: !2480, line: 830, column: 36)
!14905 = !DILocation(line: 832, column: 3, scope: !14904)
!14906 = !DILocation(line: 0, scope: !13707, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 829, column: 2, scope: !14899)
!14908 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14907)
!14909 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14907)
!14910 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14907)
!14911 = !DILocation(line: 0, scope: !13721, inlinedAt: !14912)
!14912 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14907)
!14913 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14912)
!14914 = !DILocation(line: 834, column: 2, scope: !14869)
!14915 = distinct !DISubprogram(name: "z_pend_curr", scope: !2480, file: !2480, line: 840, type: !14916, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14918)
!14916 = !DISubroutineType(types: !14917)
!14917 = !{!109, !13676, !13665, !2396, !14489}
!14918 = !{!14919, !14920, !14921, !14922}
!14919 = !DILocalVariable(name: "lock", arg: 1, scope: !14915, file: !2480, line: 840, type: !13676)
!14920 = !DILocalVariable(name: "key", arg: 2, scope: !14915, file: !2480, line: 840, type: !13665)
!14921 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14915, file: !2480, line: 841, type: !2396)
!14922 = !DILocalVariable(name: "timeout", arg: 4, scope: !14915, file: !2480, line: 841, type: !14489)
!14923 = !DILocation(line: 0, scope: !14915)
!14924 = !DILocation(line: 844, column: 20, scope: !14915)
!14925 = !DILocation(line: 844, column: 18, scope: !14915)
!14926 = !DILocation(line: 846, column: 2, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14928, file: !2480, line: 846, column: 2)
!14928 = distinct !DILexicalBlock(scope: !14915, file: !2480, line: 846, column: 2)
!14929 = !DILocation(line: 846, column: 2, scope: !14928)
!14930 = !DILocation(line: 846, column: 2, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14927, file: !2480, line: 846, column: 2)
!14932 = !DILocation(line: 0, scope: !13673, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 856, column: 9, scope: !14915)
!14934 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14935)
!14935 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14933)
!14936 = !DILocation(line: 0, scope: !13682, inlinedAt: !14935)
!14937 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14933)
!14938 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14933)
!14939 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14933)
!14940 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14933)
!14941 = !DILocation(line: 857, column: 14, scope: !14915)
!14942 = !DILocation(line: 857, column: 2, scope: !14915)
!14943 = !DILocation(line: 0, scope: !14288, inlinedAt: !14944)
!14944 = distinct !DILocation(line: 858, column: 2, scope: !14915)
!14945 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !14944)
!14946 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !14944)
!14947 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !14944)
!14948 = !DILocation(line: 0, scope: !14279, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 859, column: 9, scope: !14915)
!14950 = !DILocation(line: 0, scope: !14288, inlinedAt: !14951)
!14951 = distinct !DILocation(line: 195, column: 2, scope: !14279, inlinedAt: !14949)
!14952 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !14951)
!14953 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !14951)
!14954 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !14951)
!14955 = !DILocation(line: 196, column: 9, scope: !14279, inlinedAt: !14949)
!14956 = !DILocation(line: 859, column: 2, scope: !14915)
!14957 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2480, file: !2480, line: 862, type: !14958, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14960)
!14958 = !DISubroutineType(types: !14959)
!14959 = !{!2365, !2396}
!14960 = !{!14961, !14962, !14963, !14965}
!14961 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14957, file: !2480, line: 862, type: !2396)
!14962 = !DILocalVariable(name: "thread", scope: !14957, file: !2480, line: 864, type: !2365)
!14963 = !DILocalVariable(name: "__i", scope: !14964, file: !2480, line: 866, type: !13665)
!14964 = distinct !DILexicalBlock(scope: !14957, file: !2480, line: 866, column: 2)
!14965 = !DILocalVariable(name: "__key", scope: !14964, file: !2480, line: 866, type: !13665)
!14966 = !DILocation(line: 0, scope: !14957)
!14967 = !DILocation(line: 0, scope: !14964)
!14968 = !DILocation(line: 0, scope: !13673, inlinedAt: !14969)
!14969 = distinct !DILocation(line: 866, column: 2, scope: !14964)
!14970 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !14971)
!14971 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !14969)
!14972 = !DILocation(line: 0, scope: !13682, inlinedAt: !14971)
!14973 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !14969)
!14974 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !14969)
!14975 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !14969)
!14976 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !14969)
!14977 = !DILocation(line: 867, column: 12, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14979, file: !2480, line: 866, column: 26)
!14979 = distinct !DILexicalBlock(scope: !14964, file: !2480, line: 866, column: 2)
!14980 = !DILocation(line: 869, column: 14, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14978, file: !2480, line: 869, column: 7)
!14982 = !DILocation(line: 869, column: 7, scope: !14978)
!14983 = !DILocation(line: 870, column: 4, scope: !14984)
!14984 = distinct !DILexicalBlock(scope: !14981, file: !2480, line: 869, column: 23)
!14985 = !DILocation(line: 871, column: 3, scope: !14984)
!14986 = !DILocation(line: 0, scope: !13707, inlinedAt: !14987)
!14987 = distinct !DILocation(line: 866, column: 2, scope: !14979)
!14988 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !14987)
!14989 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !14987)
!14990 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !14987)
!14991 = !DILocation(line: 0, scope: !13721, inlinedAt: !14992)
!14992 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !14987)
!14993 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !14992)
!14994 = !DILocation(line: 874, column: 2, scope: !14957)
!14995 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2480, file: !2480, line: 1144, type: !14996, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14998)
!14996 = !DISubroutineType(types: !14997)
!14997 = !{!2365, !14566}
!14998 = !{!14999, !15000, !15001}
!14999 = !DILocalVariable(name: "pq", arg: 1, scope: !14995, file: !2480, line: 1144, type: !14566)
!15000 = !DILocalVariable(name: "thread", scope: !14995, file: !2480, line: 1146, type: !2365)
!15001 = !DILocalVariable(name: "n", scope: !14995, file: !2480, line: 1147, type: !14716)
!15002 = !DILocation(line: 0, scope: !14995)
!15003 = !DILocation(line: 1147, column: 19, scope: !14995)
!15004 = !DILocation(line: 1152, column: 2, scope: !14995)
!15005 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2480, file: !2480, line: 877, type: !14958, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15006)
!15006 = !{!15007, !15008, !15009, !15011}
!15007 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15005, file: !2480, line: 877, type: !2396)
!15008 = !DILocalVariable(name: "thread", scope: !15005, file: !2480, line: 879, type: !2365)
!15009 = !DILocalVariable(name: "__i", scope: !15010, file: !2480, line: 881, type: !13665)
!15010 = distinct !DILexicalBlock(scope: !15005, file: !2480, line: 881, column: 2)
!15011 = !DILocalVariable(name: "__key", scope: !15010, file: !2480, line: 881, type: !13665)
!15012 = !DILocation(line: 0, scope: !15005)
!15013 = !DILocation(line: 0, scope: !15010)
!15014 = !DILocation(line: 0, scope: !13673, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 881, column: 2, scope: !15010)
!15016 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15015)
!15018 = !DILocation(line: 0, scope: !13682, inlinedAt: !15017)
!15019 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15015)
!15020 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15015)
!15021 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15015)
!15022 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15015)
!15023 = !DILocation(line: 882, column: 12, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15025, file: !2480, line: 881, column: 26)
!15025 = distinct !DILexicalBlock(scope: !15010, file: !2480, line: 881, column: 2)
!15026 = !DILocation(line: 884, column: 14, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15024, file: !2480, line: 884, column: 7)
!15028 = !DILocation(line: 884, column: 7, scope: !15024)
!15029 = !DILocation(line: 885, column: 4, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15027, file: !2480, line: 884, column: 23)
!15031 = !DILocation(line: 886, column: 10, scope: !15030)
!15032 = !DILocation(line: 887, column: 3, scope: !15030)
!15033 = !DILocation(line: 0, scope: !13707, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 881, column: 2, scope: !15025)
!15035 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15034)
!15036 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15034)
!15037 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15034)
!15038 = !DILocation(line: 0, scope: !13721, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15034)
!15040 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15039)
!15041 = !DILocation(line: 890, column: 2, scope: !15005)
!15042 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2480, file: !2480, line: 893, type: !13631, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15043)
!15043 = !{!15044}
!15044 = !DILocalVariable(name: "thread", arg: 1, scope: !15042, file: !2480, line: 893, type: !2365)
!15045 = !DILocation(line: 0, scope: !15042)
!15046 = !DILocation(line: 0, scope: !14840, inlinedAt: !15047)
!15047 = distinct !DILocation(line: 895, column: 2, scope: !15042)
!15048 = !DILocation(line: 0, scope: !14844, inlinedAt: !15047)
!15049 = !DILocation(line: 0, scope: !13673, inlinedAt: !15050)
!15050 = distinct !DILocation(line: 788, column: 2, scope: !14844, inlinedAt: !15047)
!15051 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15052)
!15052 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15050)
!15053 = !DILocation(line: 0, scope: !13682, inlinedAt: !15052)
!15054 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15050)
!15055 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15050)
!15056 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15050)
!15057 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15050)
!15058 = !DILocation(line: 789, column: 3, scope: !14858, inlinedAt: !15047)
!15059 = !DILocation(line: 0, scope: !13707, inlinedAt: !15060)
!15060 = distinct !DILocation(line: 788, column: 2, scope: !14859, inlinedAt: !15047)
!15061 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15060)
!15062 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15060)
!15063 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15060)
!15064 = !DILocation(line: 0, scope: !13721, inlinedAt: !15065)
!15065 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15060)
!15066 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15065)
!15067 = !DILocation(line: 896, column: 8, scope: !15042)
!15068 = !DILocation(line: 897, column: 1, scope: !15042)
!15069 = distinct !DISubprogram(name: "z_set_prio", scope: !2480, file: !2480, line: 902, type: !14010, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15070)
!15070 = !{!15071, !15072, !15073, !15074, !15076}
!15071 = !DILocalVariable(name: "thread", arg: 1, scope: !15069, file: !2480, line: 902, type: !2365)
!15072 = !DILocalVariable(name: "prio", arg: 2, scope: !15069, file: !2480, line: 902, type: !109)
!15073 = !DILocalVariable(name: "need_sched", scope: !15069, file: !2480, line: 904, type: !347)
!15074 = !DILocalVariable(name: "__i", scope: !15075, file: !2480, line: 906, type: !13665)
!15075 = distinct !DILexicalBlock(scope: !15069, file: !2480, line: 906, column: 2)
!15076 = !DILocalVariable(name: "__key", scope: !15075, file: !2480, line: 906, type: !13665)
!15077 = !DILocation(line: 0, scope: !15069)
!15078 = !DILocation(line: 0, scope: !15075)
!15079 = !DILocation(line: 0, scope: !13673, inlinedAt: !15080)
!15080 = distinct !DILocation(line: 906, column: 2, scope: !15075)
!15081 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15080)
!15083 = !DILocation(line: 0, scope: !13682, inlinedAt: !15082)
!15084 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15080)
!15085 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15080)
!15086 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15080)
!15087 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15080)
!15088 = !DILocation(line: 907, column: 16, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15090, file: !2480, line: 906, column: 26)
!15090 = distinct !DILexicalBlock(scope: !15075, file: !2480, line: 906, column: 2)
!15091 = !DILocation(line: 909, column: 7, scope: !15089)
!15092 = !DILocation(line: 0, scope: !13865, inlinedAt: !15093)
!15093 = distinct !DILocation(line: 912, column: 5, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15095, file: !2480, line: 911, column: 63)
!15095 = distinct !DILexicalBlock(scope: !15096, file: !2480, line: 911, column: 8)
!15096 = distinct !DILexicalBlock(scope: !15097, file: !2480, line: 909, column: 19)
!15097 = distinct !DILexicalBlock(scope: !15089, file: !2480, line: 909, column: 7)
!15098 = !DILocation(line: 266, column: 28, scope: !13865, inlinedAt: !15093)
!15099 = !DILocation(line: 0, scope: !13873, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 268, column: 3, scope: !13877, inlinedAt: !15093)
!15101 = !DILocation(line: 234, column: 2, scope: !13873, inlinedAt: !15100)
!15102 = !DILocation(line: 913, column: 23, scope: !15094)
!15103 = !DILocation(line: 0, scope: !13882, inlinedAt: !15104)
!15104 = distinct !DILocation(line: 914, column: 5, scope: !15094)
!15105 = !DILocation(line: 252, column: 28, scope: !13882, inlinedAt: !15104)
!15106 = !DILocation(line: 0, scope: !13889, inlinedAt: !15107)
!15107 = distinct !DILocation(line: 254, column: 3, scope: !13893, inlinedAt: !15104)
!15108 = !DILocation(line: 229, column: 2, scope: !13889, inlinedAt: !15107)
!15109 = !DILocation(line: 918, column: 4, scope: !15096)
!15110 = !DILocation(line: 919, column: 3, scope: !15096)
!15111 = !DILocation(line: 920, column: 22, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15097, file: !2480, line: 919, column: 10)
!15113 = !DILocation(line: 0, scope: !13707, inlinedAt: !15114)
!15114 = distinct !DILocation(line: 906, column: 2, scope: !15090)
!15115 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15114)
!15116 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15114)
!15117 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15114)
!15118 = !DILocation(line: 0, scope: !13721, inlinedAt: !15119)
!15119 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15114)
!15120 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15119)
!15121 = !DILocation(line: 926, column: 2, scope: !15069)
!15122 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2480, file: !2480, line: 929, type: !15123, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15125)
!15123 = !DISubroutineType(types: !15124)
!15124 = !{null, !2365, !109}
!15125 = !{!15126, !15127, !15128}
!15126 = !DILocalVariable(name: "thread", arg: 1, scope: !15122, file: !2480, line: 929, type: !2365)
!15127 = !DILocalVariable(name: "prio", arg: 2, scope: !15122, file: !2480, line: 929, type: !109)
!15128 = !DILocalVariable(name: "need_sched", scope: !15122, file: !2480, line: 931, type: !347)
!15129 = !DILocation(line: 0, scope: !15122)
!15130 = !DILocation(line: 931, column: 20, scope: !15122)
!15131 = !DILocation(line: 935, column: 17, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15122, file: !2480, line: 935, column: 6)
!15133 = !DILocation(line: 935, column: 20, scope: !15132)
!15134 = !DILocation(line: 935, column: 35, scope: !15132)
!15135 = !DILocation(line: 935, column: 48, scope: !15132)
!15136 = !DILocation(line: 935, column: 6, scope: !15122)
!15137 = !DILocation(line: 936, column: 3, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15132, file: !2480, line: 935, column: 55)
!15139 = !DILocation(line: 937, column: 2, scope: !15138)
!15140 = !DILocation(line: 938, column: 1, scope: !15122)
!15141 = distinct !DISubprogram(name: "k_sched_lock", scope: !2480, file: !2480, line: 987, type: !3076, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15142)
!15142 = !{!15143, !15145}
!15143 = !DILocalVariable(name: "__i", scope: !15144, file: !2480, line: 989, type: !13665)
!15144 = distinct !DILexicalBlock(scope: !15141, file: !2480, line: 989, column: 2)
!15145 = !DILocalVariable(name: "__key", scope: !15144, file: !2480, line: 989, type: !13665)
!15146 = !DILocation(line: 0, scope: !15144)
!15147 = !DILocation(line: 0, scope: !13673, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 989, column: 2, scope: !15144)
!15149 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15150)
!15150 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15148)
!15151 = !DILocation(line: 0, scope: !13682, inlinedAt: !15150)
!15152 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15148)
!15153 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15148)
!15154 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15148)
!15155 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15148)
!15156 = !DILocation(line: 992, column: 3, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15158, file: !2480, line: 989, column: 26)
!15158 = distinct !DILexicalBlock(scope: !15144, file: !2480, line: 989, column: 2)
!15159 = !DILocation(line: 0, scope: !13707, inlinedAt: !15160)
!15160 = distinct !DILocation(line: 989, column: 2, scope: !15158)
!15161 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15160)
!15162 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15160)
!15163 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15160)
!15164 = !DILocation(line: 0, scope: !13721, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15160)
!15166 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15165)
!15167 = !DILocation(line: 994, column: 1, scope: !15141)
!15168 = distinct !DISubprogram(name: "z_sched_lock", scope: !12264, file: !12264, line: 251, type: !3076, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15169 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15171)
!15171 = distinct !DILocation(line: 253, column: 2, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15173, file: !12264, line: 253, column: 2)
!15173 = distinct !DILexicalBlock(scope: !15168, file: !12264, line: 253, column: 2)
!15174 = !DILocation(line: 0, scope: !14328, inlinedAt: !15170)
!15175 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15171)
!15176 = !DILocation(line: 253, column: 2, scope: !15173)
!15177 = !DILocation(line: 253, column: 2, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15172, file: !12264, line: 253, column: 2)
!15179 = !DILocation(line: 254, column: 2, scope: !15180)
!15180 = distinct !DILexicalBlock(scope: !15181, file: !12264, line: 254, column: 2)
!15181 = distinct !DILexicalBlock(scope: !15168, file: !12264, line: 254, column: 2)
!15182 = !DILocation(line: 254, column: 2, scope: !15181)
!15183 = !DILocation(line: 254, column: 2, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15180, file: !12264, line: 254, column: 2)
!15185 = !DILocation(line: 256, column: 2, scope: !15168)
!15186 = !DILocation(line: 258, column: 2, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15168, file: !12264, line: 258, column: 2)
!15188 = !{i64 2152349772}
!15189 = !DILocation(line: 259, column: 1, scope: !15168)
!15190 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2480, file: !2480, line: 996, type: !3076, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15191)
!15191 = !{!15192, !15194}
!15192 = !DILocalVariable(name: "__i", scope: !15193, file: !2480, line: 998, type: !13665)
!15193 = distinct !DILexicalBlock(scope: !15190, file: !2480, line: 998, column: 2)
!15194 = !DILocalVariable(name: "__key", scope: !15193, file: !2480, line: 998, type: !13665)
!15195 = !DILocation(line: 0, scope: !15193)
!15196 = !DILocation(line: 0, scope: !13673, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 998, column: 2, scope: !15193)
!15198 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15197)
!15200 = !DILocation(line: 0, scope: !13682, inlinedAt: !15199)
!15201 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15197)
!15202 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15197)
!15203 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15197)
!15204 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15197)
!15205 = !DILocation(line: 999, column: 3, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !2480, line: 999, column: 3)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !2480, line: 999, column: 3)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !2480, line: 998, column: 26)
!15209 = distinct !DILexicalBlock(scope: !15193, file: !2480, line: 998, column: 2)
!15210 = !DILocation(line: 999, column: 3, scope: !15207)
!15211 = !DILocation(line: 999, column: 3, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15206, file: !2480, line: 999, column: 3)
!15213 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 1000, column: 3, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !2480, line: 1000, column: 3)
!15217 = distinct !DILexicalBlock(scope: !15208, file: !2480, line: 1000, column: 3)
!15218 = !DILocation(line: 0, scope: !14328, inlinedAt: !15214)
!15219 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15215)
!15220 = !DILocation(line: 1000, column: 3, scope: !15217)
!15221 = !DILocation(line: 1000, column: 3, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15216, file: !2480, line: 1000, column: 3)
!15223 = !DILocation(line: 1002, column: 5, scope: !15208)
!15224 = !DILocation(line: 1002, column: 20, scope: !15208)
!15225 = !DILocation(line: 1002, column: 3, scope: !15208)
!15226 = !DILocation(line: 1003, column: 3, scope: !15208)
!15227 = !DILocation(line: 0, scope: !13707, inlinedAt: !15228)
!15228 = distinct !DILocation(line: 998, column: 2, scope: !15209)
!15229 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15228)
!15230 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15228)
!15231 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15228)
!15232 = !DILocation(line: 0, scope: !13721, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15228)
!15234 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15233)
!15235 = !DILocation(line: 1011, column: 2, scope: !15190)
!15236 = !DILocation(line: 1012, column: 1, scope: !15190)
!15237 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2480, file: !2480, line: 1014, type: !13998, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15238 = !DILocation(line: 1028, column: 25, scope: !15237)
!15239 = !DILocation(line: 1028, column: 2, scope: !15237)
!15240 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2480, file: !2480, line: 1155, type: !13919, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15241)
!15241 = !{!15242, !15243, !15244, !15245, !15246}
!15242 = !DILocalVariable(name: "a", arg: 1, scope: !15240, file: !2480, line: 1155, type: !2394)
!15243 = !DILocalVariable(name: "b", arg: 2, scope: !15240, file: !2480, line: 1155, type: !2394)
!15244 = !DILocalVariable(name: "thread_a", scope: !15240, file: !2480, line: 1157, type: !2365)
!15245 = !DILocalVariable(name: "thread_b", scope: !15240, file: !2480, line: 1157, type: !2365)
!15246 = !DILocalVariable(name: "cmp", scope: !15240, file: !2480, line: 1158, type: !845)
!15247 = !DILocation(line: 0, scope: !15240)
!15248 = !DILocation(line: 1160, column: 13, scope: !15240)
!15249 = !DILocation(line: 1161, column: 13, scope: !15240)
!15250 = !DILocation(line: 1163, column: 8, scope: !15240)
!15251 = !DILocation(line: 1165, column: 10, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15240, file: !2480, line: 1165, column: 6)
!15253 = !DILocation(line: 1165, column: 6, scope: !15240)
!15254 = !DILocation(line: 1167, column: 17, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15252, file: !2480, line: 1167, column: 13)
!15256 = !DILocation(line: 1167, column: 13, scope: !15252)
!15257 = !DILocation(line: 1170, column: 25, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15255, file: !2480, line: 1169, column: 9)
!15259 = !DILocation(line: 1170, column: 52, scope: !15258)
!15260 = !DILocation(line: 1170, column: 35, scope: !15258)
!15261 = !DILocation(line: 1170, column: 3, scope: !15258)
!15262 = !DILocation(line: 0, scope: !15252)
!15263 = !DILocation(line: 1173, column: 1, scope: !15240)
!15264 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2480, file: !2480, line: 1246, type: !15265, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15273)
!15265 = !DISubroutineType(types: !15266)
!15266 = !{!2365, !15267}
!15267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15268, size: 32)
!15268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !2044, line: 53, size: 2080, elements: !15269)
!15269 = !{!15270, !15272}
!15270 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15268, file: !2044, line: 54, baseType: !15271, size: 2048)
!15271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 2048, elements: !227)
!15272 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15268, file: !2044, line: 55, baseType: !32, size: 32, offset: 2048)
!15273 = !{!15274, !15275, !15276, !15277}
!15274 = !DILocalVariable(name: "pq", arg: 1, scope: !15264, file: !2480, line: 1246, type: !15267)
!15275 = !DILocalVariable(name: "thread", scope: !15264, file: !2480, line: 1252, type: !2365)
!15276 = !DILocalVariable(name: "l", scope: !15264, file: !2480, line: 1253, type: !14566)
!15277 = !DILocalVariable(name: "n", scope: !15264, file: !2480, line: 1254, type: !14716)
!15278 = !DILocation(line: 0, scope: !15264)
!15279 = !DILocation(line: 1248, column: 11, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15264, file: !2480, line: 1248, column: 6)
!15281 = !DILocation(line: 1248, column: 7, scope: !15280)
!15282 = !DILocation(line: 1248, column: 6, scope: !15264)
!15283 = !DILocation(line: 1253, column: 31, scope: !15264)
!15284 = !DILocation(line: 1253, column: 20, scope: !15264)
!15285 = !DILocation(line: 1254, column: 19, scope: !15264)
!15286 = !DILocation(line: 1260, column: 1, scope: !15264)
!15287 = distinct !DISubprogram(name: "z_unpend_all", scope: !2480, file: !2480, line: 1262, type: !15288, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15290)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{!109, !2396}
!15290 = !{!15291, !15292, !15293}
!15291 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15287, file: !2480, line: 1262, type: !2396)
!15292 = !DILocalVariable(name: "need_sched", scope: !15287, file: !2480, line: 1264, type: !109)
!15293 = !DILocalVariable(name: "thread", scope: !15287, file: !2480, line: 1265, type: !2365)
!15294 = !DILocation(line: 0, scope: !15287)
!15295 = !DILocation(line: 1267, column: 19, scope: !15287)
!15296 = !DILocation(line: 1267, column: 41, scope: !15287)
!15297 = !DILocation(line: 1267, column: 2, scope: !15287)
!15298 = !DILocation(line: 1268, column: 3, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15287, file: !2480, line: 1267, column: 50)
!15300 = !DILocation(line: 1269, column: 3, scope: !15299)
!15301 = distinct !{!15301, !15297, !15302}
!15302 = !DILocation(line: 1271, column: 2, scope: !15287)
!15303 = !DILocation(line: 1273, column: 2, scope: !15287)
!15304 = distinct !DISubprogram(name: "z_waitq_head", scope: !12868, file: !12868, line: 52, type: !14958, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15305)
!15305 = !{!15306}
!15306 = !DILocalVariable(name: "w", arg: 1, scope: !15304, file: !12868, line: 52, type: !2396)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 54, column: 52, scope: !15304)
!15309 = !DILocation(line: 54, column: 28, scope: !15304)
!15310 = !DILocation(line: 54, column: 9, scope: !15304)
!15311 = !DILocation(line: 54, column: 2, scope: !15304)
!15312 = distinct !DISubprogram(name: "init_ready_q", scope: !2480, file: !2480, line: 1276, type: !15313, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15320)
!15313 = !DISubroutineType(types: !15314)
!15314 = !{null, !15315}
!15315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15316, size: 32)
!15316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !15317)
!15317 = !{!15318, !15319}
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15316, file: !123, line: 86, baseType: !2365, size: 32)
!15319 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15316, file: !123, line: 92, baseType: !13910, size: 128, offset: 32)
!15320 = !{!15321}
!15321 = !DILocalVariable(name: "rq", arg: 1, scope: !15312, file: !2480, line: 1276, type: !15315)
!15322 = !DILocation(line: 0, scope: !15312)
!15323 = !DILocation(line: 1279, column: 13, scope: !15312)
!15324 = !DILocation(line: 1291, column: 1, scope: !15312)
!15325 = distinct !DISubprogram(name: "z_sched_init", scope: !2480, file: !2480, line: 1293, type: !3076, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15326 = !DILocation(line: 1302, column: 2, scope: !15325)
!15327 = !DILocation(line: 1306, column: 2, scope: !15325)
!15328 = !DILocation(line: 1309, column: 1, scope: !15325)
!15329 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2480, file: !2480, line: 1311, type: !15330, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15333)
!15330 = !DISubroutineType(types: !15331)
!15331 = !{!109, !15332}
!15332 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2365)
!15333 = !{!15334}
!15334 = !DILocalVariable(name: "thread", arg: 1, scope: !15329, file: !2480, line: 1311, type: !15332)
!15335 = !DILocation(line: 0, scope: !15329)
!15336 = !DILocation(line: 1313, column: 22, scope: !15329)
!15337 = !DILocation(line: 1313, column: 9, scope: !15329)
!15338 = !DILocation(line: 1313, column: 2, scope: !15329)
!15339 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2480, file: !2480, line: 1325, type: !15340, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15342)
!15340 = !DISubroutineType(types: !15341)
!15341 = !{null, !15332, !109}
!15342 = !{!15343, !15344, !15345}
!15343 = !DILocalVariable(name: "thread", arg: 1, scope: !15339, file: !2480, line: 1325, type: !15332)
!15344 = !DILocalVariable(name: "prio", arg: 2, scope: !15339, file: !2480, line: 1325, type: !109)
!15345 = !DILocalVariable(name: "th", scope: !15339, file: !2480, line: 1334, type: !2365)
!15346 = !DILocation(line: 0, scope: !15339)
!15347 = !DILocation(line: 1331, column: 2, scope: !15348)
!15348 = distinct !DILexicalBlock(scope: !15349, file: !2480, line: 1331, column: 2)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !2480, line: 1331, column: 2)
!15350 = distinct !DILexicalBlock(scope: !15339, file: !2480, line: 1331, column: 2)
!15351 = !DILocation(line: 1331, column: 2, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15348, file: !2480, line: 1331, column: 2)
!15353 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 1332, column: 2, scope: !15356)
!15356 = distinct !DILexicalBlock(scope: !15357, file: !2480, line: 1332, column: 2)
!15357 = distinct !DILexicalBlock(scope: !15339, file: !2480, line: 1332, column: 2)
!15358 = !DILocation(line: 0, scope: !14328, inlinedAt: !15354)
!15359 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15355)
!15360 = !DILocation(line: 1332, column: 2, scope: !15357)
!15361 = !DILocation(line: 1332, column: 2, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15356, file: !2480, line: 1332, column: 2)
!15363 = !DILocation(line: 1336, column: 2, scope: !15339)
!15364 = !DILocation(line: 1337, column: 1, scope: !15339)
!15365 = distinct !DISubprogram(name: "k_can_yield", scope: !2480, file: !2480, line: 1384, type: !6949, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15366 = !DILocation(line: 1386, column: 11, scope: !15365)
!15367 = !DILocation(line: 1386, column: 29, scope: !15365)
!15368 = !DILocation(line: 1386, column: 32, scope: !15365)
!15369 = !DILocation(line: 1386, column: 46, scope: !15365)
!15370 = !DILocation(line: 1387, column: 28, scope: !15365)
!15371 = !DILocation(line: 1387, column: 4, scope: !15365)
!15372 = !DILocation(line: 1386, column: 2, scope: !15365)
!15373 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !119, file: !119, line: 989, type: !6949, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15374 = !DILocation(line: 993, column: 10, scope: !15373)
!15375 = !DILocation(line: 993, column: 2, scope: !15373)
!15376 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2480, file: !2480, line: 1390, type: !3076, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15377)
!15377 = !{!15378}
!15378 = !DILocalVariable(name: "key", scope: !15376, file: !2480, line: 1396, type: !13665)
!15379 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 1392, column: 2, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15383, file: !2480, line: 1392, column: 2)
!15383 = distinct !DILexicalBlock(scope: !15376, file: !2480, line: 1392, column: 2)
!15384 = !DILocation(line: 0, scope: !14328, inlinedAt: !15380)
!15385 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15381)
!15386 = !DILocation(line: 1392, column: 2, scope: !15383)
!15387 = !DILocation(line: 1392, column: 2, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15382, file: !2480, line: 1392, column: 2)
!15389 = !DILocation(line: 0, scope: !13673, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 1396, column: 25, scope: !15376)
!15391 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15390)
!15393 = !DILocation(line: 0, scope: !13682, inlinedAt: !15392)
!15394 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15390)
!15395 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15390)
!15396 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15390)
!15397 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15390)
!15398 = !DILocation(line: 0, scope: !15376)
!15399 = !DILocation(line: 1400, column: 18, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !15401, file: !2480, line: 1399, column: 36)
!15401 = distinct !DILexicalBlock(scope: !15376, file: !2480, line: 1398, column: 6)
!15402 = !DILocation(line: 0, scope: !13865, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 1400, column: 3, scope: !15400)
!15404 = !DILocation(line: 266, column: 15, scope: !13865, inlinedAt: !15403)
!15405 = !DILocation(line: 266, column: 28, scope: !13865, inlinedAt: !15403)
!15406 = !DILocation(line: 0, scope: !13873, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 268, column: 3, scope: !13877, inlinedAt: !15403)
!15408 = !DILocation(line: 234, column: 2, scope: !13873, inlinedAt: !15407)
!15409 = !DILocation(line: 1402, column: 15, scope: !15376)
!15410 = !DILocation(line: 0, scope: !13882, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 1402, column: 2, scope: !15376)
!15412 = !DILocation(line: 252, column: 15, scope: !13882, inlinedAt: !15411)
!15413 = !DILocation(line: 252, column: 28, scope: !13882, inlinedAt: !15411)
!15414 = !DILocation(line: 0, scope: !13889, inlinedAt: !15415)
!15415 = distinct !DILocation(line: 254, column: 3, scope: !13893, inlinedAt: !15411)
!15416 = !DILocation(line: 229, column: 2, scope: !13889, inlinedAt: !15415)
!15417 = !DILocation(line: 1403, column: 2, scope: !15376)
!15418 = !DILocation(line: 0, scope: !14279, inlinedAt: !15419)
!15419 = distinct !DILocation(line: 1404, column: 2, scope: !15376)
!15420 = !DILocation(line: 0, scope: !14288, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 195, column: 2, scope: !14279, inlinedAt: !15419)
!15422 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !15421)
!15423 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !15421)
!15424 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !15421)
!15425 = !DILocation(line: 196, column: 9, scope: !14279, inlinedAt: !15419)
!15426 = !DILocation(line: 1405, column: 1, scope: !15376)
!15427 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2480, file: !2480, line: 1459, type: !15428, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15430)
!15428 = !DISubroutineType(types: !15429)
!15429 = !{!845, !14489}
!15430 = !{!15431, !15432, !15433}
!15431 = !DILocalVariable(name: "timeout", arg: 1, scope: !15427, file: !2480, line: 1459, type: !14489)
!15432 = !DILocalVariable(name: "ticks", scope: !15427, file: !2480, line: 1461, type: !104)
!15433 = !DILocalVariable(name: "ret", scope: !15427, file: !2480, line: 1480, type: !845)
!15434 = !DILocation(line: 0, scope: !15427)
!15435 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15436)
!15436 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 1463, column: 2, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15439, file: !2480, line: 1463, column: 2)
!15439 = distinct !DILexicalBlock(scope: !15427, file: !2480, line: 1463, column: 2)
!15440 = !DILocation(line: 0, scope: !14328, inlinedAt: !15436)
!15441 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15437)
!15442 = !DILocation(line: 1463, column: 2, scope: !15439)
!15443 = !DILocation(line: 1463, column: 2, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15438, file: !2480, line: 1463, column: 2)
!15445 = !DILocation(line: 1468, column: 6, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15427, file: !2480, line: 1468, column: 6)
!15447 = !DILocation(line: 1468, column: 6, scope: !15427)
!15448 = !DILocation(line: 1469, column: 20, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15446, file: !2480, line: 1468, column: 40)
!15450 = !DILocation(line: 1469, column: 3, scope: !15449)
!15451 = !DILocation(line: 1473, column: 3, scope: !15449)
!15452 = !DILocation(line: 1478, column: 10, scope: !15427)
!15453 = !DILocation(line: 1480, column: 16, scope: !15427)
!15454 = !DILocation(line: 1485, column: 1, scope: !15427)
!15455 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3261, file: !3261, line: 310, type: !15456, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15458)
!15456 = !DISubroutineType(types: !15457)
!15457 = !{null, !15332}
!15458 = !{!15459}
!15459 = !DILocalVariable(name: "thread", arg: 1, scope: !15455, file: !3261, line: 310, type: !15332)
!15460 = !DILocation(line: 0, scope: !15455)
!15461 = !DILocation(line: 319, column: 2, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15455, file: !3261, line: 319, column: 2)
!15463 = !{i64 2152265930}
!15464 = !DILocation(line: 320, column: 2, scope: !15455)
!15465 = !DILocation(line: 321, column: 1, scope: !15455)
!15466 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2480, file: !2480, line: 1415, type: !15467, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15469)
!15467 = !DISubroutineType(types: !15468)
!15468 = !{!845, !104}
!15469 = !{!15470, !15471, !15472, !15473}
!15470 = !DILocalVariable(name: "ticks", arg: 1, scope: !15466, file: !2480, line: 1415, type: !104)
!15471 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15466, file: !2480, line: 1418, type: !110)
!15472 = !DILocalVariable(name: "timeout", scope: !15466, file: !2480, line: 1430, type: !14489)
!15473 = !DILocalVariable(name: "key", scope: !15466, file: !2480, line: 1437, type: !13665)
!15474 = !DILocation(line: 0, scope: !15466)
!15475 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 1420, column: 2, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15479, file: !2480, line: 1420, column: 2)
!15479 = distinct !DILexicalBlock(scope: !15466, file: !2480, line: 1420, column: 2)
!15480 = !DILocation(line: 0, scope: !14328, inlinedAt: !15476)
!15481 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15477)
!15482 = !DILocation(line: 1420, column: 2, scope: !15479)
!15483 = !DILocation(line: 1420, column: 2, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15478, file: !2480, line: 1420, column: 2)
!15485 = !DILocation(line: 1425, column: 12, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15466, file: !2480, line: 1425, column: 6)
!15487 = !DILocation(line: 1425, column: 6, scope: !15466)
!15488 = !DILocation(line: 1426, column: 3, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15486, file: !2480, line: 1425, column: 18)
!15490 = !DILocation(line: 1427, column: 3, scope: !15489)
!15491 = !DILocation(line: 1431, column: 24, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15466, file: !2480, line: 1431, column: 6)
!15493 = !DILocation(line: 1431, column: 6, scope: !15466)
!15494 = !DILocation(line: 1432, column: 35, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15492, file: !2480, line: 1431, column: 30)
!15496 = !DILocation(line: 1432, column: 27, scope: !15495)
!15497 = !DILocation(line: 1433, column: 2, scope: !15495)
!15498 = !DILocation(line: 1434, column: 27, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15492, file: !2480, line: 1433, column: 9)
!15500 = !DILocation(line: 0, scope: !15492)
!15501 = !DILocation(line: 0, scope: !13673, inlinedAt: !15502)
!15502 = distinct !DILocation(line: 1437, column: 25, scope: !15466)
!15503 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15502)
!15505 = !DILocation(line: 0, scope: !13682, inlinedAt: !15504)
!15506 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15502)
!15507 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15502)
!15508 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15502)
!15509 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15502)
!15510 = !DILocation(line: 1440, column: 20, scope: !15466)
!15511 = !DILocation(line: 1440, column: 18, scope: !15466)
!15512 = !DILocation(line: 1442, column: 2, scope: !15466)
!15513 = !DILocation(line: 1443, column: 23, scope: !15466)
!15514 = !DILocation(line: 1443, column: 2, scope: !15466)
!15515 = !DILocation(line: 1444, column: 29, scope: !15466)
!15516 = !DILocation(line: 1444, column: 2, scope: !15466)
!15517 = !DILocation(line: 0, scope: !14279, inlinedAt: !15518)
!15518 = distinct !DILocation(line: 1446, column: 8, scope: !15466)
!15519 = !DILocation(line: 0, scope: !14288, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 195, column: 2, scope: !14279, inlinedAt: !15518)
!15521 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !15520)
!15522 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !15520)
!15523 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !15520)
!15524 = !DILocation(line: 196, column: 9, scope: !14279, inlinedAt: !15518)
!15525 = !DILocation(line: 1448, column: 2, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2480, line: 1448, column: 2)
!15527 = distinct !DILexicalBlock(scope: !15466, file: !2480, line: 1448, column: 2)
!15528 = !DILocation(line: 1448, column: 2, scope: !15527)
!15529 = !DILocation(line: 1448, column: 2, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15526, file: !2480, line: 1448, column: 2)
!15531 = !DILocation(line: 1450, column: 10, scope: !15466)
!15532 = !DILocation(line: 1450, column: 45, scope: !15466)
!15533 = !DILocation(line: 1450, column: 43, scope: !15466)
!15534 = !DILocation(line: 1451, column: 6, scope: !15466)
!15535 = !DILocation(line: 1457, column: 1, scope: !15466)
!15536 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3314, file: !3314, line: 1103, type: !3315, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15537)
!15537 = !{!15538}
!15538 = !DILocalVariable(name: "t", arg: 1, scope: !15536, file: !3314, line: 1103, type: !111)
!15539 = !DILocation(line: 0, scope: !15536)
!15540 = !DILocation(line: 0, scope: !13733, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 1106, column: 9, scope: !15536)
!15542 = !DILocation(line: 139, column: 13, scope: !15543, inlinedAt: !15541)
!15543 = distinct !DILexicalBlock(scope: !15544, file: !3314, line: 138, column: 10)
!15544 = distinct !DILexicalBlock(scope: !15545, file: !3314, line: 136, column: 7)
!15545 = distinct !DILexicalBlock(scope: !13754, file: !3314, line: 134, column: 17)
!15546 = !DILocation(line: 1106, column: 2, scope: !15536)
!15547 = distinct !DISubprogram(name: "k_yield", scope: !3261, file: !3261, line: 140, type: !3076, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15548 = !DILocation(line: 148, column: 2, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15547, file: !3261, line: 148, column: 2)
!15550 = !{i64 2152265250}
!15551 = !DILocation(line: 149, column: 2, scope: !15547)
!15552 = !DILocation(line: 150, column: 1, scope: !15547)
!15553 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2480, file: !2480, line: 1495, type: !15554, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15556)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{!845, !109}
!15556 = !{!15557, !15558}
!15557 = !DILocalVariable(name: "us", arg: 1, scope: !15553, file: !2480, line: 1495, type: !109)
!15558 = !DILocalVariable(name: "ticks", scope: !15553, file: !2480, line: 1497, type: !845)
!15559 = !DILocation(line: 0, scope: !15553)
!15560 = !DILocation(line: 1501, column: 31, scope: !15553)
!15561 = !DILocation(line: 1501, column: 10, scope: !15553)
!15562 = !DILocation(line: 1502, column: 23, scope: !15553)
!15563 = !DILocation(line: 1502, column: 10, scope: !15553)
!15564 = !DILocation(line: 1506, column: 31, scope: !15553)
!15565 = !DILocation(line: 1506, column: 9, scope: !15553)
!15566 = !DILocation(line: 1506, column: 2, scope: !15553)
!15567 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3314, file: !3314, line: 571, type: !3315, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15568)
!15568 = !{!15569}
!15569 = !DILocalVariable(name: "t", arg: 1, scope: !15567, file: !3314, line: 571, type: !111)
!15570 = !DILocation(line: 0, scope: !15567)
!15571 = !DILocation(line: 0, scope: !13733, inlinedAt: !15572)
!15572 = distinct !DILocation(line: 574, column: 9, scope: !15567)
!15573 = !DILocation(line: 135, column: 5, scope: !15545, inlinedAt: !15572)
!15574 = !DILocation(line: 139, column: 13, scope: !15543, inlinedAt: !15572)
!15575 = !DILocation(line: 574, column: 2, scope: !15567)
!15576 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3314, file: !3314, line: 1187, type: !3315, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15577)
!15577 = !{!15578}
!15578 = !DILocalVariable(name: "t", arg: 1, scope: !15576, file: !3314, line: 1187, type: !111)
!15579 = !DILocation(line: 0, scope: !15576)
!15580 = !DILocation(line: 0, scope: !13733, inlinedAt: !15581)
!15581 = distinct !DILocation(line: 1190, column: 9, scope: !15576)
!15582 = !DILocation(line: 145, column: 13, scope: !15583, inlinedAt: !15581)
!15583 = distinct !DILexicalBlock(scope: !13751, file: !3314, line: 144, column: 10)
!15584 = !DILocation(line: 1190, column: 2, scope: !15576)
!15585 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2480, file: !2480, line: 1517, type: !15456, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15586)
!15586 = !{!15587}
!15587 = !DILocalVariable(name: "thread", arg: 1, scope: !15585, file: !2480, line: 1517, type: !15332)
!15588 = !DILocation(line: 0, scope: !15585)
!15589 = !DILocation(line: 1521, column: 6, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15585, file: !2480, line: 1521, column: 6)
!15591 = !DILocation(line: 1521, column: 6, scope: !15585)
!15592 = !DILocation(line: 1525, column: 6, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15585, file: !2480, line: 1525, column: 6)
!15594 = !DILocation(line: 1525, column: 37, scope: !15593)
!15595 = !DILocation(line: 1525, column: 6, scope: !15585)
!15596 = !DILocation(line: 1527, column: 20, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !2480, line: 1527, column: 7)
!15598 = distinct !DILexicalBlock(scope: !15593, file: !2480, line: 1525, column: 42)
!15599 = !DILocation(line: 1527, column: 33, scope: !15597)
!15600 = !DILocation(line: 1527, column: 7, scope: !15598)
!15601 = !DILocation(line: 1532, column: 2, scope: !15585)
!15602 = !DILocation(line: 1533, column: 2, scope: !15585)
!15603 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 1537, column: 7, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15585, file: !2480, line: 1537, column: 6)
!15607 = !DILocation(line: 0, scope: !14328, inlinedAt: !15604)
!15608 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15605)
!15609 = !DILocation(line: 1537, column: 6, scope: !15585)
!15610 = !DILocation(line: 1538, column: 3, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15606, file: !2480, line: 1537, column: 25)
!15612 = !DILocation(line: 1539, column: 2, scope: !15611)
!15613 = !DILocation(line: 1540, column: 1, scope: !15585)
!15614 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12264, file: !12264, line: 101, type: !13814, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15615)
!15615 = !{!15616}
!15616 = !DILocalVariable(name: "thread", arg: 1, scope: !15614, file: !12264, line: 101, type: !2365)
!15617 = !DILocation(line: 0, scope: !15614)
!15618 = !DILocation(line: 103, column: 23, scope: !15614)
!15619 = !DILocation(line: 103, column: 36, scope: !15614)
!15620 = !DILocation(line: 103, column: 55, scope: !15614)
!15621 = !DILocation(line: 103, column: 2, scope: !15614)
!15622 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2480, file: !2480, line: 1567, type: !15623, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15625)
!15623 = !DISubroutineType(types: !15624)
!15624 = !{!15332}
!15625 = !{!15626}
!15626 = !DILocalVariable(name: "ret", scope: !15622, file: !2480, line: 1577, type: !15332)
!15627 = !DILocation(line: 1577, column: 30, scope: !15622)
!15628 = !DILocation(line: 0, scope: !15622)
!15629 = !DILocation(line: 1582, column: 2, scope: !15622)
!15630 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2480, file: !2480, line: 1593, type: !7238, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2037)
!15631 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15633)
!15633 = distinct !DILocation(line: 1595, column: 10, scope: !15630)
!15634 = !DILocation(line: 0, scope: !14328, inlinedAt: !15632)
!15635 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15633)
!15636 = !DILocation(line: 1595, column: 27, scope: !15630)
!15637 = !DILocation(line: 1595, column: 41, scope: !15630)
!15638 = !DILocation(line: 1595, column: 30, scope: !15630)
!15639 = !DILocation(line: 1595, column: 2, scope: !15630)
!15640 = distinct !DISubprogram(name: "z_thread_abort", scope: !2480, file: !2480, line: 1725, type: !13631, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15641)
!15641 = !{!15642, !15643}
!15642 = !DILocalVariable(name: "thread", arg: 1, scope: !15640, file: !2480, line: 1725, type: !2365)
!15643 = !DILocalVariable(name: "key", scope: !15640, file: !2480, line: 1727, type: !13665)
!15644 = !DILocation(line: 0, scope: !15640)
!15645 = !DILocation(line: 0, scope: !13673, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 1727, column: 25, scope: !15640)
!15647 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15648)
!15648 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15646)
!15649 = !DILocation(line: 0, scope: !13682, inlinedAt: !15648)
!15650 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15646)
!15651 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15646)
!15652 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15646)
!15653 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15646)
!15654 = !DILocation(line: 1729, column: 20, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15640, file: !2480, line: 1729, column: 6)
!15656 = !DILocation(line: 1729, column: 33, scope: !15655)
!15657 = !DILocation(line: 1729, column: 48, scope: !15655)
!15658 = !DILocation(line: 1729, column: 6, scope: !15640)
!15659 = !DILocation(line: 0, scope: !13707, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 1730, column: 3, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15655, file: !2480, line: 1729, column: 54)
!15662 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15660)
!15663 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15660)
!15664 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15660)
!15665 = !DILocation(line: 0, scope: !13721, inlinedAt: !15666)
!15666 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15660)
!15667 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15666)
!15668 = !DILocation(line: 1731, column: 3, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15670, file: !2480, line: 1731, column: 3)
!15670 = distinct !DILexicalBlock(scope: !15671, file: !2480, line: 1731, column: 3)
!15671 = distinct !DILexicalBlock(scope: !15661, file: !2480, line: 1731, column: 3)
!15672 = !DILocation(line: 1736, column: 20, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15640, file: !2480, line: 1736, column: 6)
!15674 = !DILocation(line: 1736, column: 33, scope: !15673)
!15675 = !DILocation(line: 1736, column: 49, scope: !15673)
!15676 = !DILocation(line: 1736, column: 6, scope: !15640)
!15677 = !DILocation(line: 0, scope: !13707, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 1737, column: 3, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15673, file: !2480, line: 1736, column: 56)
!15680 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15678)
!15681 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15678)
!15682 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15678)
!15683 = !DILocation(line: 0, scope: !13721, inlinedAt: !15684)
!15684 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15678)
!15685 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15684)
!15686 = !DILocation(line: 1738, column: 3, scope: !15679)
!15687 = !DILocation(line: 1775, column: 2, scope: !15640)
!15688 = !DILocation(line: 1776, column: 16, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15640, file: !2480, line: 1776, column: 6)
!15690 = !DILocation(line: 1776, column: 13, scope: !15689)
!15691 = !DILocation(line: 1776, column: 25, scope: !15689)
!15692 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15693)
!15693 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 1776, column: 29, scope: !15689)
!15695 = !DILocation(line: 0, scope: !14328, inlinedAt: !15693)
!15696 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15694)
!15697 = !DILocation(line: 1776, column: 6, scope: !15640)
!15698 = !DILocation(line: 0, scope: !14279, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 1777, column: 3, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15689, file: !2480, line: 1776, column: 47)
!15701 = !DILocation(line: 0, scope: !14288, inlinedAt: !15702)
!15702 = distinct !DILocation(line: 195, column: 2, scope: !14279, inlinedAt: !15699)
!15703 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !15702)
!15704 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !15702)
!15705 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !15702)
!15706 = !DILocation(line: 196, column: 9, scope: !14279, inlinedAt: !15699)
!15707 = !DILocation(line: 1778, column: 3, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15709, file: !2480, line: 1778, column: 3)
!15709 = distinct !DILexicalBlock(scope: !15710, file: !2480, line: 1778, column: 3)
!15710 = distinct !DILexicalBlock(scope: !15700, file: !2480, line: 1778, column: 3)
!15711 = !DILocation(line: 0, scope: !13707, inlinedAt: !15712)
!15712 = distinct !DILocation(line: 1780, column: 2, scope: !15640)
!15713 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15712)
!15714 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15712)
!15715 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15712)
!15716 = !DILocation(line: 0, scope: !13721, inlinedAt: !15717)
!15717 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15712)
!15718 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15717)
!15719 = !DILocation(line: 1781, column: 1, scope: !15640)
!15720 = distinct !DISubprogram(name: "end_thread", scope: !2480, file: !2480, line: 1690, type: !13631, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15721)
!15721 = !{!15722}
!15722 = !DILocalVariable(name: "thread", arg: 1, scope: !15720, file: !2480, line: 1690, type: !2365)
!15723 = !DILocation(line: 0, scope: !15720)
!15724 = !DILocation(line: 1695, column: 20, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15720, file: !2480, line: 1695, column: 6)
!15726 = !DILocation(line: 1695, column: 33, scope: !15725)
!15727 = !DILocation(line: 1695, column: 49, scope: !15725)
!15728 = !DILocation(line: 1695, column: 6, scope: !15720)
!15729 = !DILocation(line: 1697, column: 29, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15725, file: !2480, line: 1695, column: 56)
!15731 = !DILocation(line: 1698, column: 7, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15730, file: !2480, line: 1698, column: 7)
!15733 = !DILocation(line: 1698, column: 7, scope: !15730)
!15734 = !DILocation(line: 0, scope: !13865, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 1699, column: 4, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15732, file: !2480, line: 1698, column: 35)
!15737 = !DILocation(line: 266, column: 28, scope: !13865, inlinedAt: !15735)
!15738 = !DILocation(line: 0, scope: !13873, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 268, column: 3, scope: !13877, inlinedAt: !15735)
!15740 = !DILocation(line: 234, column: 2, scope: !13873, inlinedAt: !15739)
!15741 = !DILocation(line: 1700, column: 3, scope: !15736)
!15742 = !DILocation(line: 1701, column: 20, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15730, file: !2480, line: 1701, column: 7)
!15744 = !DILocation(line: 1701, column: 30, scope: !15743)
!15745 = !DILocation(line: 1701, column: 7, scope: !15730)
!15746 = !DILocation(line: 1702, column: 4, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15743, file: !2480, line: 1701, column: 39)
!15748 = !DILocation(line: 1703, column: 3, scope: !15747)
!15749 = !DILocation(line: 1704, column: 9, scope: !15730)
!15750 = !DILocation(line: 1705, column: 23, scope: !15730)
!15751 = !DILocation(line: 1705, column: 3, scope: !15730)
!15752 = !DILocation(line: 1706, column: 3, scope: !15730)
!15753 = !DILocation(line: 1710, column: 3, scope: !15730)
!15754 = !DILocation(line: 1722, column: 2, scope: !15730)
!15755 = !DILocation(line: 1723, column: 1, scope: !15720)
!15756 = distinct !DISubprogram(name: "unpend_all", scope: !2480, file: !2480, line: 1674, type: !15757, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15759)
!15757 = !DISubroutineType(types: !15758)
!15758 = !{null, !2396}
!15759 = !{!15760, !15761}
!15760 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15756, file: !2480, line: 1674, type: !2396)
!15761 = !DILocalVariable(name: "thread", scope: !15756, file: !2480, line: 1676, type: !2365)
!15762 = !DILocation(line: 0, scope: !15756)
!15763 = !DILocation(line: 1678, column: 19, scope: !15756)
!15764 = !DILocation(line: 1678, column: 41, scope: !15756)
!15765 = !DILocation(line: 1678, column: 2, scope: !15756)
!15766 = !DILocation(line: 1679, column: 3, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15756, file: !2480, line: 1678, column: 50)
!15768 = !DILocation(line: 1680, column: 9, scope: !15767)
!15769 = !DILocalVariable(name: "thread", arg: 1, scope: !15770, file: !12284, line: 65, type: !2365)
!15770 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12284, file: !12284, line: 65, type: !15771, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15773)
!15771 = !DISubroutineType(types: !15772)
!15772 = !{null, !2365, !32}
!15773 = !{!15769, !15774}
!15774 = !DILocalVariable(name: "value", arg: 2, scope: !15770, file: !12284, line: 65, type: !32)
!15775 = !DILocation(line: 0, scope: !15770, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 1681, column: 3, scope: !15767)
!15777 = !DILocation(line: 67, column: 15, scope: !15770, inlinedAt: !15776)
!15778 = !DILocation(line: 67, column: 33, scope: !15770, inlinedAt: !15776)
!15779 = !DILocation(line: 1682, column: 3, scope: !15767)
!15780 = distinct !{!15780, !15765, !15781}
!15781 = !DILocation(line: 1683, column: 2, scope: !15756)
!15782 = !DILocation(line: 1684, column: 1, scope: !15756)
!15783 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2480, file: !2480, line: 1794, type: !15784, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15786)
!15784 = !DISubroutineType(types: !15785)
!15785 = !{!109, !2365, !14489}
!15786 = !{!15787, !15788, !15789, !15790}
!15787 = !DILocalVariable(name: "thread", arg: 1, scope: !15783, file: !2480, line: 1794, type: !2365)
!15788 = !DILocalVariable(name: "timeout", arg: 2, scope: !15783, file: !2480, line: 1794, type: !14489)
!15789 = !DILocalVariable(name: "key", scope: !15783, file: !2480, line: 1796, type: !13665)
!15790 = !DILocalVariable(name: "ret", scope: !15783, file: !2480, line: 1797, type: !109)
!15791 = !DILocation(line: 0, scope: !15783)
!15792 = !DILocation(line: 0, scope: !13673, inlinedAt: !15793)
!15793 = distinct !DILocation(line: 1796, column: 25, scope: !15783)
!15794 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15793)
!15796 = !DILocation(line: 0, scope: !13682, inlinedAt: !15795)
!15797 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15793)
!15798 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15793)
!15799 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15793)
!15800 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15793)
!15801 = !DILocation(line: 1801, column: 20, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15783, file: !2480, line: 1801, column: 6)
!15803 = !DILocation(line: 1801, column: 33, scope: !15802)
!15804 = !DILocation(line: 1801, column: 49, scope: !15802)
!15805 = !DILocation(line: 1801, column: 6, scope: !15783)
!15806 = !DILocation(line: 1803, column: 13, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15802, file: !2480, line: 1803, column: 13)
!15808 = !DILocation(line: 1803, column: 13, scope: !15802)
!15809 = !DILocation(line: 1805, column: 24, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15807, file: !2480, line: 1805, column: 13)
!15811 = !DILocation(line: 1805, column: 21, scope: !15810)
!15812 = !DILocation(line: 1805, column: 34, scope: !15810)
!15813 = !DILocation(line: 1806, column: 20, scope: !15810)
!15814 = !DILocation(line: 1806, column: 44, scope: !15810)
!15815 = !DILocation(line: 1806, column: 30, scope: !15810)
!15816 = !DILocation(line: 1805, column: 13, scope: !15807)
!15817 = !DILocation(line: 1031, column: 3, scope: !14328, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 48, column: 10, scope: !14332, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 1809, column: 3, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15821, file: !2480, line: 1809, column: 3)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !2480, line: 1809, column: 3)
!15822 = distinct !DILexicalBlock(scope: !15810, file: !2480, line: 1808, column: 9)
!15823 = !DILocation(line: 0, scope: !14328, inlinedAt: !15818)
!15824 = !DILocation(line: 48, column: 9, scope: !14332, inlinedAt: !15819)
!15825 = !DILocation(line: 1809, column: 3, scope: !15821)
!15826 = !DILocation(line: 1809, column: 3, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15820, file: !2480, line: 1809, column: 3)
!15828 = !DILocation(line: 1810, column: 23, scope: !15822)
!15829 = !DILocation(line: 1810, column: 42, scope: !15822)
!15830 = !DILocation(line: 1810, column: 3, scope: !15822)
!15831 = !DILocation(line: 1811, column: 22, scope: !15822)
!15832 = !DILocation(line: 1811, column: 3, scope: !15822)
!15833 = !DILocation(line: 0, scope: !14279, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 1814, column: 9, scope: !15822)
!15835 = !DILocation(line: 0, scope: !14288, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 195, column: 2, scope: !14279, inlinedAt: !15834)
!15837 = !DILocation(line: 225, column: 2, scope: !14295, inlinedAt: !15836)
!15838 = !DILocation(line: 225, column: 2, scope: !14296, inlinedAt: !15836)
!15839 = !DILocation(line: 225, column: 2, scope: !14299, inlinedAt: !15836)
!15840 = !DILocation(line: 196, column: 9, scope: !14279, inlinedAt: !15834)
!15841 = !DILocation(line: 1817, column: 3, scope: !15822)
!15842 = !DILocation(line: 0, scope: !15802)
!15843 = !DILocation(line: 0, scope: !13707, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 1822, column: 2, scope: !15783)
!15845 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15844)
!15846 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15844)
!15847 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15844)
!15848 = !DILocation(line: 0, scope: !13721, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15844)
!15850 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15849)
!15851 = !DILocation(line: 1823, column: 2, scope: !15783)
!15852 = !DILocation(line: 1824, column: 1, scope: !15783)
!15853 = distinct !DISubprogram(name: "z_sched_wake", scope: !2480, file: !2480, line: 1882, type: !15854, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15856)
!15854 = !DISubroutineType(types: !15855)
!15855 = !{!347, !2396, !109, !108}
!15856 = !{!15857, !15858, !15859, !15860, !15861, !15862, !15864}
!15857 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15853, file: !2480, line: 1882, type: !2396)
!15858 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15853, file: !2480, line: 1882, type: !109)
!15859 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15853, file: !2480, line: 1882, type: !108)
!15860 = !DILocalVariable(name: "thread", scope: !15853, file: !2480, line: 1884, type: !2365)
!15861 = !DILocalVariable(name: "ret", scope: !15853, file: !2480, line: 1885, type: !347)
!15862 = !DILocalVariable(name: "__i", scope: !15863, file: !2480, line: 1887, type: !13665)
!15863 = distinct !DILexicalBlock(scope: !15853, file: !2480, line: 1887, column: 2)
!15864 = !DILocalVariable(name: "__key", scope: !15863, file: !2480, line: 1887, type: !13665)
!15865 = !DILocation(line: 0, scope: !15853)
!15866 = !DILocation(line: 0, scope: !15863)
!15867 = !DILocation(line: 0, scope: !13673, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 1887, column: 2, scope: !15863)
!15869 = !DILocation(line: 55, column: 2, scope: !13682, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 145, column: 10, scope: !13673, inlinedAt: !15868)
!15871 = !DILocation(line: 0, scope: !13682, inlinedAt: !15870)
!15872 = !DILocation(line: 148, column: 2, scope: !13690, inlinedAt: !15868)
!15873 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !15868)
!15874 = !DILocation(line: 148, column: 2, scope: !13694, inlinedAt: !15868)
!15875 = !DILocation(line: 160, column: 2, scope: !13673, inlinedAt: !15868)
!15876 = !DILocation(line: 1888, column: 12, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15878, file: !2480, line: 1887, column: 26)
!15878 = distinct !DILexicalBlock(scope: !15863, file: !2480, line: 1887, column: 2)
!15879 = !DILocation(line: 1890, column: 14, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15877, file: !2480, line: 1890, column: 7)
!15881 = !DILocation(line: 1890, column: 7, scope: !15877)
!15882 = !DILocalVariable(name: "thread", arg: 1, scope: !15883, file: !15884, line: 134, type: !2365)
!15883 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15884, file: !15884, line: 134, type: !15885, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15887)
!15884 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15885 = !DISubroutineType(types: !15886)
!15886 = !{null, !2365, !32, !108}
!15887 = !{!15882, !15888, !15889}
!15888 = !DILocalVariable(name: "value", arg: 2, scope: !15883, file: !15884, line: 135, type: !32)
!15889 = !DILocalVariable(name: "data", arg: 3, scope: !15883, file: !15884, line: 136, type: !108)
!15890 = !DILocation(line: 0, scope: !15883, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 1891, column: 4, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15880, file: !2480, line: 1890, column: 23)
!15893 = !DILocation(line: 0, scope: !15770, inlinedAt: !15894)
!15894 = distinct !DILocation(line: 138, column: 2, scope: !15883, inlinedAt: !15891)
!15895 = !DILocation(line: 67, column: 15, scope: !15770, inlinedAt: !15894)
!15896 = !DILocation(line: 67, column: 33, scope: !15770, inlinedAt: !15894)
!15897 = !DILocation(line: 139, column: 15, scope: !15883, inlinedAt: !15891)
!15898 = !DILocation(line: 139, column: 25, scope: !15883, inlinedAt: !15891)
!15899 = !DILocation(line: 1894, column: 4, scope: !15892)
!15900 = !DILocation(line: 1895, column: 10, scope: !15892)
!15901 = !DILocation(line: 1896, column: 4, scope: !15892)
!15902 = !DILocation(line: 1898, column: 3, scope: !15892)
!15903 = !DILocation(line: 0, scope: !13707, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 1887, column: 2, scope: !15878)
!15905 = !DILocation(line: 194, column: 2, scope: !13715, inlinedAt: !15904)
!15906 = !DILocation(line: 194, column: 2, scope: !13716, inlinedAt: !15904)
!15907 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !15904)
!15908 = !DILocation(line: 0, scope: !13721, inlinedAt: !15909)
!15909 = distinct !DILocation(line: 215, column: 2, scope: !13707, inlinedAt: !15904)
!15910 = !DILocation(line: 95, column: 2, scope: !13721, inlinedAt: !15909)
!15911 = !DILocation(line: 1901, column: 2, scope: !15853)
!15912 = distinct !DISubprogram(name: "z_sched_wait", scope: !2480, file: !2480, line: 1904, type: !15913, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15916)
!15913 = !DISubroutineType(types: !15914)
!15914 = !{!109, !13676, !13665, !2396, !14489, !15915}
!15915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!15916 = !{!15917, !15918, !15919, !15920, !15921, !15922}
!15917 = !DILocalVariable(name: "lock", arg: 1, scope: !15912, file: !2480, line: 1904, type: !13676)
!15918 = !DILocalVariable(name: "key", arg: 2, scope: !15912, file: !2480, line: 1904, type: !13665)
!15919 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15912, file: !2480, line: 1905, type: !2396)
!15920 = !DILocalVariable(name: "timeout", arg: 4, scope: !15912, file: !2480, line: 1905, type: !14489)
!15921 = !DILocalVariable(name: "data", arg: 5, scope: !15912, file: !2480, line: 1905, type: !15915)
!15922 = !DILocalVariable(name: "ret", scope: !15912, file: !2480, line: 1907, type: !109)
!15923 = !DILocation(line: 0, scope: !15912)
!15924 = !DILocation(line: 1907, column: 12, scope: !15912)
!15925 = !DILocation(line: 1909, column: 11, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15912, file: !2480, line: 1909, column: 6)
!15927 = !DILocation(line: 1909, column: 6, scope: !15912)
!15928 = !DILocation(line: 1910, column: 11, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15926, file: !2480, line: 1909, column: 20)
!15930 = !DILocation(line: 1910, column: 26, scope: !15929)
!15931 = !DILocation(line: 1910, column: 9, scope: !15929)
!15932 = !DILocation(line: 1911, column: 2, scope: !15929)
!15933 = !DILocation(line: 1912, column: 2, scope: !15912)
!15934 = distinct !DISubprogram(name: "z_data_copy", scope: !15935, file: !15935, line: 22, type: !3076, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !2037)
!15935 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15936 = !DILocation(line: 24, column: 2, scope: !15934)
!15937 = !DILocation(line: 27, column: 2, scope: !15934)
!15938 = !DILocation(line: 71, column: 1, scope: !15934)
!15939 = distinct !DISubprogram(name: "z_add_timeout", scope: !2517, file: !2517, line: 88, type: !15940, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !15946)
!15940 = !DISubroutineType(types: !15941)
!15941 = !{null, !2490, !2509, !15942}
!15942 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15943)
!15943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15944)
!15944 = !{!15945}
!15945 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15943, file: !105, line: 66, baseType: !104, size: 64)
!15946 = !{!15947, !15948, !15949, !15950, !15956, !15957, !15960, !15963}
!15947 = !DILocalVariable(name: "to", arg: 1, scope: !15939, file: !2517, line: 88, type: !2490)
!15948 = !DILocalVariable(name: "fn", arg: 2, scope: !15939, file: !2517, line: 88, type: !2509)
!15949 = !DILocalVariable(name: "timeout", arg: 3, scope: !15939, file: !2517, line: 89, type: !15942)
!15950 = !DILocalVariable(name: "__i", scope: !15951, file: !2517, line: 102, type: !15952)
!15951 = distinct !DILexicalBlock(scope: !15939, file: !2517, line: 102, column: 2)
!15952 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !15953)
!15953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !15954)
!15954 = !{!15955}
!15955 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15953, file: !254, line: 33, baseType: !109, size: 32)
!15956 = !DILocalVariable(name: "__key", scope: !15951, file: !2517, line: 102, type: !15952)
!15957 = !DILocalVariable(name: "t", scope: !15958, file: !2517, line: 103, type: !2490)
!15958 = distinct !DILexicalBlock(scope: !15959, file: !2517, line: 102, column: 24)
!15959 = distinct !DILexicalBlock(scope: !15951, file: !2517, line: 102, column: 2)
!15960 = !DILocalVariable(name: "ticks", scope: !15961, file: !2517, line: 107, type: !104)
!15961 = distinct !DILexicalBlock(scope: !15962, file: !2517, line: 106, column: 39)
!15962 = distinct !DILexicalBlock(scope: !15958, file: !2517, line: 105, column: 7)
!15963 = !DILocalVariable(name: "next_time", scope: !15964, file: !2517, line: 137, type: !845)
!15964 = distinct !DILexicalBlock(scope: !15965, file: !2517, line: 127, column: 22)
!15965 = distinct !DILexicalBlock(scope: !15958, file: !2517, line: 127, column: 7)
!15966 = !DILocation(line: 0, scope: !15939)
!15967 = !DILocation(line: 91, column: 6, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15939, file: !2517, line: 91, column: 6)
!15969 = !DILocation(line: 91, column: 6, scope: !15939)
!15970 = !DILocation(line: 99, column: 2, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15972, file: !2517, line: 99, column: 2)
!15972 = distinct !DILexicalBlock(scope: !15939, file: !2517, line: 99, column: 2)
!15973 = !DILocation(line: 99, column: 2, scope: !15972)
!15974 = !DILocation(line: 99, column: 2, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15971, file: !2517, line: 99, column: 2)
!15976 = !DILocation(line: 100, column: 6, scope: !15939)
!15977 = !DILocation(line: 100, column: 9, scope: !15939)
!15978 = !DILocation(line: 0, scope: !15951)
!15979 = !DILocalVariable(name: "l", arg: 1, scope: !15980, file: !254, line: 136, type: !15983)
!15980 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !15981, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !15984)
!15981 = !DISubroutineType(types: !15982)
!15982 = !{!15952, !15983}
!15983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!15984 = !{!15979, !15985}
!15985 = !DILocalVariable(name: "k", scope: !15980, file: !254, line: 139, type: !15952)
!15986 = !DILocation(line: 0, scope: !15980, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 102, column: 2, scope: !15951)
!15988 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !15993)
!15989 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5954, file: !5954, line: 42, type: !5955, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !15990)
!15990 = !{!15991, !15992}
!15991 = !DILocalVariable(name: "key", scope: !15989, file: !5954, line: 44, type: !32)
!15992 = !DILocalVariable(name: "tmp", scope: !15989, file: !5954, line: 53, type: !32)
!15993 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !15987)
!15994 = !{i64 1656745}
!15995 = !DILocation(line: 0, scope: !15989, inlinedAt: !15993)
!15996 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !15987)
!15997 = distinct !DILexicalBlock(scope: !15998, file: !254, line: 148, column: 2)
!15998 = distinct !DILexicalBlock(scope: !15980, file: !254, line: 148, column: 2)
!15999 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !15987)
!16000 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !15987)
!16001 = distinct !DILexicalBlock(scope: !15997, file: !254, line: 148, column: 2)
!16002 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !15987)
!16003 = !DILocation(line: 106, column: 33, scope: !15962)
!16004 = !DILocation(line: 105, column: 7, scope: !15958)
!16005 = !DILocation(line: 107, column: 50, scope: !15961)
!16006 = !DILocation(line: 107, column: 48, scope: !15961)
!16007 = !DILocation(line: 0, scope: !15961)
!16008 = !DILocation(line: 109, column: 17, scope: !15961)
!16009 = !DILocation(line: 110, column: 3, scope: !15961)
!16010 = !DILocation(line: 111, column: 31, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !15962, file: !2517, line: 110, column: 10)
!16012 = !DILocation(line: 111, column: 37, scope: !16011)
!16013 = !DILocation(line: 111, column: 35, scope: !16011)
!16014 = !DILocation(line: 0, scope: !15962)
!16015 = !DILocation(line: 109, column: 8, scope: !15961)
!16016 = !DILocation(line: 109, column: 15, scope: !15961)
!16017 = !DILocation(line: 114, column: 12, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !15958, file: !2517, line: 114, column: 3)
!16019 = !DILocation(line: 0, scope: !15958)
!16020 = !DILocation(line: 114, column: 3, scope: !16018)
!16021 = !DILocation(line: 115, column: 24, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16023, file: !2517, line: 115, column: 8)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !2517, line: 114, column: 45)
!16024 = distinct !DILexicalBlock(scope: !16018, file: !2517, line: 114, column: 3)
!16025 = !DILocation(line: 115, column: 11, scope: !16022)
!16026 = !DILocation(line: 115, column: 18, scope: !16022)
!16027 = !DILocation(line: 115, column: 8, scope: !16023)
!16028 = !DILocation(line: 116, column: 15, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16022, file: !2517, line: 115, column: 32)
!16030 = !DILocation(line: 117, column: 26, scope: !16029)
!16031 = !DILocation(line: 117, column: 5, scope: !16029)
!16032 = !DILocation(line: 123, column: 7, scope: !15958)
!16033 = !DILocation(line: 120, column: 15, scope: !16023)
!16034 = !DILocation(line: 114, column: 36, scope: !16024)
!16035 = distinct !{!16035, !16020, !16036}
!16036 = !DILocation(line: 121, column: 3, scope: !16018)
!16037 = !DILocation(line: 124, column: 4, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16039, file: !2517, line: 123, column: 18)
!16039 = distinct !DILexicalBlock(scope: !15958, file: !2517, line: 123, column: 7)
!16040 = !DILocation(line: 125, column: 3, scope: !16038)
!16041 = !DILocation(line: 127, column: 13, scope: !15965)
!16042 = !DILocation(line: 127, column: 10, scope: !15965)
!16043 = !DILocation(line: 127, column: 7, scope: !15958)
!16044 = !DILocation(line: 137, column: 24, scope: !15964)
!16045 = !DILocation(line: 0, scope: !15964)
!16046 = !DILocation(line: 139, column: 18, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !15964, file: !2517, line: 139, column: 8)
!16048 = !DILocation(line: 139, column: 23, scope: !16047)
!16049 = !DILocation(line: 141, column: 5, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16047, file: !2517, line: 140, column: 48)
!16051 = !DILocation(line: 142, column: 4, scope: !16050)
!16052 = !DILocalVariable(name: "key", arg: 2, scope: !16053, file: !254, line: 190, type: !15952)
!16053 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !16054, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16056)
!16054 = !DISubroutineType(types: !16055)
!16055 = !{null, !15983, !15952}
!16056 = !{!16057, !16052}
!16057 = !DILocalVariable(name: "l", arg: 1, scope: !16053, file: !254, line: 189, type: !15983)
!16058 = !DILocation(line: 0, scope: !16053, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 102, column: 2, scope: !15959)
!16060 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16059)
!16061 = distinct !DILexicalBlock(scope: !16062, file: !254, line: 194, column: 2)
!16062 = distinct !DILexicalBlock(scope: !16053, file: !254, line: 194, column: 2)
!16063 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16059)
!16064 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16059)
!16065 = distinct !DILexicalBlock(scope: !16061, file: !254, line: 194, column: 2)
!16066 = !DILocalVariable(name: "key", arg: 1, scope: !16067, file: !5954, line: 84, type: !32)
!16067 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5954, file: !5954, line: 84, type: !5965, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16068)
!16068 = !{!16066}
!16069 = !DILocation(line: 0, scope: !16067, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16059)
!16071 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16070)
!16072 = !{i64 1657562}
!16073 = !DILocation(line: 148, column: 1, scope: !15939)
!16074 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !16075, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16079)
!16075 = !DISubroutineType(types: !16076)
!16076 = !{!347, !16077}
!16077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16078, size: 32)
!16078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2494)
!16079 = !{!16080}
!16080 = !DILocalVariable(name: "node", arg: 1, scope: !16074, file: !128, line: 225, type: !16077)
!16081 = !DILocation(line: 0, scope: !16074)
!16082 = !DILocation(line: 227, column: 15, scope: !16074)
!16083 = !DILocation(line: 227, column: 20, scope: !16074)
!16084 = !DILocation(line: 227, column: 2, scope: !16074)
!16085 = distinct !DISubprogram(name: "elapsed", scope: !2517, file: !2517, line: 62, type: !16086, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2037)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{!845}
!16088 = !DILocation(line: 64, column: 9, scope: !16085)
!16089 = !DILocation(line: 64, column: 28, scope: !16085)
!16090 = !DILocation(line: 64, column: 35, scope: !16085)
!16091 = !DILocation(line: 64, column: 2, scope: !16085)
!16092 = distinct !DISubprogram(name: "first", scope: !2517, file: !2517, line: 39, type: !16093, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16095)
!16093 = !DISubroutineType(types: !16094)
!16094 = !{!2490}
!16095 = !{!16096}
!16096 = !DILocalVariable(name: "t", scope: !16092, file: !2517, line: 41, type: !16097)
!16097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!16098 = !DILocation(line: 41, column: 19, scope: !16092)
!16099 = !DILocation(line: 0, scope: !16092)
!16100 = !DILocation(line: 43, column: 9, scope: !16092)
!16101 = !DILocation(line: 43, column: 2, scope: !16092)
!16102 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !16103, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16105)
!16103 = !DISubroutineType(types: !16104)
!16104 = !{null, !16097, !16097}
!16105 = !{!16106, !16107, !16108}
!16106 = !DILocalVariable(name: "successor", arg: 1, scope: !16102, file: !128, line: 443, type: !16097)
!16107 = !DILocalVariable(name: "node", arg: 2, scope: !16102, file: !128, line: 443, type: !16097)
!16108 = !DILocalVariable(name: "prev", scope: !16102, file: !128, line: 445, type: !16109)
!16109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16097)
!16110 = !DILocation(line: 0, scope: !16102)
!16111 = !DILocation(line: 445, column: 39, scope: !16102)
!16112 = !DILocation(line: 447, column: 8, scope: !16102)
!16113 = !DILocation(line: 447, column: 13, scope: !16102)
!16114 = !DILocation(line: 448, column: 8, scope: !16102)
!16115 = !DILocation(line: 448, column: 13, scope: !16102)
!16116 = !DILocation(line: 449, column: 8, scope: !16102)
!16117 = !DILocation(line: 449, column: 13, scope: !16102)
!16118 = !DILocation(line: 450, column: 18, scope: !16102)
!16119 = !DILocation(line: 451, column: 1, scope: !16102)
!16120 = distinct !DISubprogram(name: "next", scope: !2517, file: !2517, line: 46, type: !16121, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16123)
!16121 = !DISubroutineType(types: !16122)
!16122 = !{!2490, !2490}
!16123 = !{!16124, !16125}
!16124 = !DILocalVariable(name: "t", arg: 1, scope: !16120, file: !2517, line: 46, type: !2490)
!16125 = !DILocalVariable(name: "n", scope: !16120, file: !2517, line: 48, type: !16097)
!16126 = !DILocation(line: 0, scope: !16120)
!16127 = !DILocation(line: 48, column: 58, scope: !16120)
!16128 = !DILocation(line: 48, column: 19, scope: !16120)
!16129 = !DILocation(line: 50, column: 9, scope: !16120)
!16130 = !DILocation(line: 50, column: 2, scope: !16120)
!16131 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !16132, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16135)
!16132 = !DISubroutineType(types: !16133)
!16133 = !{null, !16134, !16097}
!16134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 32)
!16135 = !{!16136, !16137, !16138}
!16136 = !DILocalVariable(name: "list", arg: 1, scope: !16131, file: !128, line: 404, type: !16134)
!16137 = !DILocalVariable(name: "node", arg: 2, scope: !16131, file: !128, line: 404, type: !16097)
!16138 = !DILocalVariable(name: "tail", scope: !16131, file: !128, line: 406, type: !16109)
!16139 = !DILocation(line: 0, scope: !16131)
!16140 = !DILocation(line: 406, column: 34, scope: !16131)
!16141 = !DILocation(line: 408, column: 8, scope: !16131)
!16142 = !DILocation(line: 408, column: 13, scope: !16131)
!16143 = !DILocation(line: 409, column: 8, scope: !16131)
!16144 = !DILocation(line: 409, column: 13, scope: !16131)
!16145 = !DILocation(line: 411, column: 8, scope: !16131)
!16146 = !DILocation(line: 411, column: 13, scope: !16131)
!16147 = !DILocation(line: 412, column: 13, scope: !16131)
!16148 = !DILocation(line: 413, column: 1, scope: !16131)
!16149 = distinct !DISubprogram(name: "next_timeout", scope: !2517, file: !2517, line: 67, type: !16086, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16150)
!16150 = !{!16151, !16152, !16153}
!16151 = !DILocalVariable(name: "to", scope: !16149, file: !2517, line: 69, type: !2490)
!16152 = !DILocalVariable(name: "ticks_elapsed", scope: !16149, file: !2517, line: 70, type: !845)
!16153 = !DILocalVariable(name: "ret", scope: !16149, file: !2517, line: 71, type: !845)
!16154 = !DILocation(line: 69, column: 24, scope: !16149)
!16155 = !DILocation(line: 0, scope: !16149)
!16156 = !DILocation(line: 70, column: 26, scope: !16149)
!16157 = !DILocation(line: 73, column: 10, scope: !16158)
!16158 = distinct !DILexicalBlock(scope: !16149, file: !2517, line: 73, column: 6)
!16159 = !DILocation(line: 73, column: 19, scope: !16158)
!16160 = !DILocation(line: 74, column: 21, scope: !16158)
!16161 = !DILocation(line: 74, column: 30, scope: !16158)
!16162 = !DILocation(line: 74, column: 28, scope: !16158)
!16163 = !DILocation(line: 74, column: 45, scope: !16158)
!16164 = !DILocation(line: 73, column: 6, scope: !16149)
!16165 = !DILocation(line: 77, column: 9, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16158, file: !2517, line: 76, column: 9)
!16167 = !DILocation(line: 0, scope: !16158)
!16168 = !DILocation(line: 81, column: 20, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16149, file: !2517, line: 81, column: 6)
!16170 = !DILocation(line: 81, column: 6, scope: !16169)
!16171 = !DILocation(line: 81, column: 32, scope: !16169)
!16172 = !DILocation(line: 85, column: 2, scope: !16149)
!16173 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !16174, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16176)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!16097, !16134, !16097}
!16176 = !{!16177, !16178}
!16177 = !DILocalVariable(name: "list", arg: 1, scope: !16173, file: !128, line: 341, type: !16134)
!16178 = !DILocalVariable(name: "node", arg: 2, scope: !16173, file: !128, line: 342, type: !16097)
!16179 = !DILocation(line: 0, scope: !16173)
!16180 = !DILocation(line: 344, column: 15, scope: !16173)
!16181 = !DILocation(line: 344, column: 9, scope: !16173)
!16182 = !DILocation(line: 344, column: 26, scope: !16173)
!16183 = !DILocation(line: 344, column: 2, scope: !16173)
!16184 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !16174, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16185)
!16185 = !{!16186, !16187}
!16186 = !DILocalVariable(name: "list", arg: 1, scope: !16184, file: !128, line: 325, type: !16134)
!16187 = !DILocalVariable(name: "node", arg: 2, scope: !16184, file: !128, line: 326, type: !16097)
!16188 = !DILocation(line: 0, scope: !16184)
!16189 = !DILocation(line: 328, column: 24, scope: !16184)
!16190 = !DILocation(line: 328, column: 15, scope: !16184)
!16191 = !DILocation(line: 328, column: 9, scope: !16184)
!16192 = !DILocation(line: 328, column: 45, scope: !16184)
!16193 = !DILocation(line: 328, column: 2, scope: !16184)
!16194 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !16195, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16197)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{!16097, !16134}
!16197 = !{!16198}
!16198 = !DILocalVariable(name: "list", arg: 1, scope: !16194, file: !128, line: 294, type: !16134)
!16199 = !DILocation(line: 0, scope: !16194)
!16200 = !DILocation(line: 296, column: 9, scope: !16194)
!16201 = !DILocation(line: 296, column: 2, scope: !16194)
!16202 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !16203, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16205)
!16203 = !DISubroutineType(types: !16204)
!16204 = !{!347, !16134}
!16205 = !{!16206}
!16206 = !DILocalVariable(name: "list", arg: 1, scope: !16202, file: !128, line: 266, type: !16134)
!16207 = !DILocation(line: 0, scope: !16202)
!16208 = !DILocation(line: 268, column: 15, scope: !16202)
!16209 = !DILocation(line: 268, column: 20, scope: !16202)
!16210 = !DILocation(line: 268, column: 2, scope: !16202)
!16211 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2517, file: !2517, line: 150, type: !16212, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16214)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{!109, !2490}
!16214 = !{!16215, !16216, !16217, !16219}
!16215 = !DILocalVariable(name: "to", arg: 1, scope: !16211, file: !2517, line: 150, type: !2490)
!16216 = !DILocalVariable(name: "ret", scope: !16211, file: !2517, line: 152, type: !109)
!16217 = !DILocalVariable(name: "__i", scope: !16218, file: !2517, line: 154, type: !15952)
!16218 = distinct !DILexicalBlock(scope: !16211, file: !2517, line: 154, column: 2)
!16219 = !DILocalVariable(name: "__key", scope: !16218, file: !2517, line: 154, type: !15952)
!16220 = !DILocation(line: 0, scope: !16211)
!16221 = !DILocation(line: 0, scope: !16218)
!16222 = !DILocation(line: 0, scope: !15980, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 154, column: 2, scope: !16218)
!16224 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16225)
!16225 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16223)
!16226 = !DILocation(line: 0, scope: !15989, inlinedAt: !16225)
!16227 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16223)
!16228 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16223)
!16229 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16223)
!16230 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16223)
!16231 = !DILocation(line: 155, column: 7, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16233, file: !2517, line: 155, column: 7)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !2517, line: 154, column: 24)
!16234 = distinct !DILexicalBlock(scope: !16218, file: !2517, line: 154, column: 2)
!16235 = !DILocation(line: 155, column: 7, scope: !16233)
!16236 = !DILocation(line: 156, column: 4, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16232, file: !2517, line: 155, column: 39)
!16238 = !DILocation(line: 158, column: 3, scope: !16237)
!16239 = !DILocation(line: 0, scope: !16053, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 154, column: 2, scope: !16234)
!16241 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16240)
!16242 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16240)
!16243 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16240)
!16244 = !DILocation(line: 0, scope: !16067, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16240)
!16246 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16245)
!16247 = !DILocation(line: 161, column: 2, scope: !16211)
!16248 = distinct !DISubprogram(name: "remove_timeout", scope: !2517, file: !2517, line: 53, type: !2511, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16249)
!16249 = !{!16250}
!16250 = !DILocalVariable(name: "t", arg: 1, scope: !16248, file: !2517, line: 53, type: !2490)
!16251 = !DILocation(line: 0, scope: !16248)
!16252 = !DILocation(line: 55, column: 6, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16248, file: !2517, line: 55, column: 6)
!16254 = !DILocation(line: 55, column: 14, scope: !16253)
!16255 = !DILocation(line: 55, column: 6, scope: !16248)
!16256 = !DILocation(line: 56, column: 25, scope: !16257)
!16257 = distinct !DILexicalBlock(scope: !16253, file: !2517, line: 55, column: 23)
!16258 = !DILocation(line: 56, column: 12, scope: !16257)
!16259 = !DILocation(line: 56, column: 19, scope: !16257)
!16260 = !DILocation(line: 57, column: 2, scope: !16257)
!16261 = !DILocation(line: 59, column: 23, scope: !16248)
!16262 = !DILocation(line: 59, column: 2, scope: !16248)
!16263 = !DILocation(line: 60, column: 1, scope: !16248)
!16264 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !16265, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16267)
!16265 = !DISubroutineType(types: !16266)
!16266 = !{null, !16097}
!16267 = !{!16268, !16269, !16270}
!16268 = !DILocalVariable(name: "node", arg: 1, scope: !16264, file: !128, line: 496, type: !16097)
!16269 = !DILocalVariable(name: "prev", scope: !16264, file: !128, line: 498, type: !16109)
!16270 = !DILocalVariable(name: "next", scope: !16264, file: !128, line: 499, type: !16109)
!16271 = !DILocation(line: 0, scope: !16264)
!16272 = !DILocation(line: 498, column: 34, scope: !16264)
!16273 = !DILocation(line: 499, column: 34, scope: !16264)
!16274 = !DILocation(line: 501, column: 8, scope: !16264)
!16275 = !DILocation(line: 501, column: 13, scope: !16264)
!16276 = !DILocation(line: 502, column: 8, scope: !16264)
!16277 = !DILocation(line: 502, column: 13, scope: !16264)
!16278 = !DILocation(line: 503, column: 2, scope: !16264)
!16279 = !DILocation(line: 504, column: 1, scope: !16264)
!16280 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !16265, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16281)
!16281 = !{!16282}
!16282 = !DILocalVariable(name: "node", arg: 1, scope: !16280, file: !128, line: 211, type: !16097)
!16283 = !DILocation(line: 0, scope: !16280)
!16284 = !DILocation(line: 213, column: 8, scope: !16280)
!16285 = !DILocation(line: 213, column: 13, scope: !16280)
!16286 = !DILocation(line: 214, column: 8, scope: !16280)
!16287 = !DILocation(line: 214, column: 13, scope: !16280)
!16288 = !DILocation(line: 215, column: 1, scope: !16280)
!16289 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2517, file: !2517, line: 183, type: !16290, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16294)
!16290 = !DISubroutineType(types: !16291)
!16291 = !{!104, !16292}
!16292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16293, size: 32)
!16293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2491)
!16294 = !{!16295, !16296, !16297, !16299}
!16295 = !DILocalVariable(name: "timeout", arg: 1, scope: !16289, file: !2517, line: 183, type: !16292)
!16296 = !DILocalVariable(name: "ticks", scope: !16289, file: !2517, line: 185, type: !104)
!16297 = !DILocalVariable(name: "__i", scope: !16298, file: !2517, line: 187, type: !15952)
!16298 = distinct !DILexicalBlock(scope: !16289, file: !2517, line: 187, column: 2)
!16299 = !DILocalVariable(name: "__key", scope: !16298, file: !2517, line: 187, type: !15952)
!16300 = !DILocation(line: 0, scope: !16289)
!16301 = !DILocation(line: 0, scope: !16298)
!16302 = !DILocation(line: 0, scope: !15980, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 187, column: 2, scope: !16298)
!16304 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16305)
!16305 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16303)
!16306 = !DILocation(line: 0, scope: !15989, inlinedAt: !16305)
!16307 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16303)
!16308 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16303)
!16309 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16303)
!16310 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16303)
!16311 = !DILocation(line: 188, column: 11, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16313, file: !2517, line: 187, column: 24)
!16313 = distinct !DILexicalBlock(scope: !16298, file: !2517, line: 187, column: 2)
!16314 = !DILocation(line: 0, scope: !16053, inlinedAt: !16315)
!16315 = distinct !DILocation(line: 187, column: 2, scope: !16313)
!16316 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16315)
!16317 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16315)
!16318 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16315)
!16319 = !DILocation(line: 0, scope: !16067, inlinedAt: !16320)
!16320 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16315)
!16321 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16320)
!16322 = !DILocation(line: 191, column: 2, scope: !16289)
!16323 = distinct !DISubprogram(name: "timeout_rem", scope: !2517, file: !2517, line: 165, type: !16290, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16324)
!16324 = !{!16325, !16326, !16327}
!16325 = !DILocalVariable(name: "timeout", arg: 1, scope: !16323, file: !2517, line: 165, type: !16292)
!16326 = !DILocalVariable(name: "ticks", scope: !16323, file: !2517, line: 167, type: !104)
!16327 = !DILocalVariable(name: "t", scope: !16328, file: !2517, line: 173, type: !2490)
!16328 = distinct !DILexicalBlock(scope: !16323, file: !2517, line: 173, column: 2)
!16329 = !DILocation(line: 0, scope: !16323)
!16330 = !DILocation(line: 169, column: 6, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16323, file: !2517, line: 169, column: 6)
!16332 = !DILocation(line: 169, column: 6, scope: !16323)
!16333 = !DILocation(line: 173, column: 28, scope: !16328)
!16334 = !DILocation(line: 0, scope: !16328)
!16335 = !DILocation(line: 173, column: 39, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16328, file: !2517, line: 173, column: 2)
!16337 = !DILocation(line: 173, column: 2, scope: !16328)
!16338 = !DILocation(line: 174, column: 15, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16336, file: !2517, line: 173, column: 61)
!16340 = !DILocation(line: 174, column: 9, scope: !16339)
!16341 = !DILocation(line: 175, column: 15, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16339, file: !2517, line: 175, column: 7)
!16343 = !DILocation(line: 175, column: 7, scope: !16339)
!16344 = !DILocation(line: 173, column: 52, scope: !16336)
!16345 = distinct !{!16345, !16337, !16346}
!16346 = !DILocation(line: 178, column: 2, scope: !16328)
!16347 = !DILocation(line: 180, column: 17, scope: !16323)
!16348 = !DILocation(line: 180, column: 15, scope: !16323)
!16349 = !DILocation(line: 180, column: 2, scope: !16323)
!16350 = !DILocation(line: 181, column: 1, scope: !16323)
!16351 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12936, file: !12936, line: 35, type: !16352, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16354)
!16352 = !DISubroutineType(types: !16353)
!16353 = !{!347, !16292}
!16354 = !{!16355}
!16355 = !DILocalVariable(name: "to", arg: 1, scope: !16351, file: !12936, line: 35, type: !16292)
!16356 = !DILocation(line: 0, scope: !16351)
!16357 = !DILocation(line: 37, column: 35, scope: !16351)
!16358 = !DILocation(line: 37, column: 10, scope: !16351)
!16359 = !DILocation(line: 37, column: 9, scope: !16351)
!16360 = !DILocation(line: 37, column: 2, scope: !16351)
!16361 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2517, file: !2517, line: 194, type: !16290, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16362)
!16362 = !{!16363, !16364, !16365, !16367}
!16363 = !DILocalVariable(name: "timeout", arg: 1, scope: !16361, file: !2517, line: 194, type: !16292)
!16364 = !DILocalVariable(name: "ticks", scope: !16361, file: !2517, line: 196, type: !104)
!16365 = !DILocalVariable(name: "__i", scope: !16366, file: !2517, line: 198, type: !15952)
!16366 = distinct !DILexicalBlock(scope: !16361, file: !2517, line: 198, column: 2)
!16367 = !DILocalVariable(name: "__key", scope: !16366, file: !2517, line: 198, type: !15952)
!16368 = !DILocation(line: 0, scope: !16361)
!16369 = !DILocation(line: 0, scope: !16366)
!16370 = !DILocation(line: 0, scope: !15980, inlinedAt: !16371)
!16371 = distinct !DILocation(line: 198, column: 2, scope: !16366)
!16372 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16371)
!16374 = !DILocation(line: 0, scope: !15989, inlinedAt: !16373)
!16375 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16371)
!16376 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16371)
!16377 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16371)
!16378 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16371)
!16379 = !DILocation(line: 199, column: 11, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16381, file: !2517, line: 198, column: 24)
!16381 = distinct !DILexicalBlock(scope: !16366, file: !2517, line: 198, column: 2)
!16382 = !DILocation(line: 199, column: 23, scope: !16380)
!16383 = !DILocation(line: 0, scope: !16053, inlinedAt: !16384)
!16384 = distinct !DILocation(line: 198, column: 2, scope: !16381)
!16385 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16384)
!16386 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16384)
!16387 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16384)
!16388 = !DILocation(line: 0, scope: !16067, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16384)
!16390 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16389)
!16391 = !DILocation(line: 199, column: 21, scope: !16380)
!16392 = !DILocation(line: 202, column: 2, scope: !16361)
!16393 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2517, file: !2517, line: 205, type: !16086, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16394)
!16394 = !{!16395, !16396, !16398}
!16395 = !DILocalVariable(name: "ret", scope: !16393, file: !2517, line: 207, type: !845)
!16396 = !DILocalVariable(name: "__i", scope: !16397, file: !2517, line: 209, type: !15952)
!16397 = distinct !DILexicalBlock(scope: !16393, file: !2517, line: 209, column: 2)
!16398 = !DILocalVariable(name: "__key", scope: !16397, file: !2517, line: 209, type: !15952)
!16399 = !DILocation(line: 0, scope: !16393)
!16400 = !DILocation(line: 0, scope: !16397)
!16401 = !DILocation(line: 0, scope: !15980, inlinedAt: !16402)
!16402 = distinct !DILocation(line: 209, column: 2, scope: !16397)
!16403 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16402)
!16405 = !DILocation(line: 0, scope: !15989, inlinedAt: !16404)
!16406 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16402)
!16407 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16402)
!16408 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16402)
!16409 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16402)
!16410 = !DILocation(line: 210, column: 9, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16412, file: !2517, line: 209, column: 24)
!16412 = distinct !DILexicalBlock(scope: !16397, file: !2517, line: 209, column: 2)
!16413 = !DILocation(line: 0, scope: !16053, inlinedAt: !16414)
!16414 = distinct !DILocation(line: 209, column: 2, scope: !16412)
!16415 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16414)
!16416 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16414)
!16417 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16414)
!16418 = !DILocation(line: 0, scope: !16067, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16414)
!16420 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16419)
!16421 = !DILocation(line: 212, column: 2, scope: !16393)
!16422 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2517, file: !2517, line: 215, type: !10067, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16423)
!16423 = !{!16424, !16425, !16426, !16428, !16429, !16432, !16433}
!16424 = !DILocalVariable(name: "ticks", arg: 1, scope: !16422, file: !2517, line: 215, type: !845)
!16425 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16422, file: !2517, line: 215, type: !347)
!16426 = !DILocalVariable(name: "__i", scope: !16427, file: !2517, line: 217, type: !15952)
!16427 = distinct !DILexicalBlock(scope: !16422, file: !2517, line: 217, column: 2)
!16428 = !DILocalVariable(name: "__key", scope: !16427, file: !2517, line: 217, type: !15952)
!16429 = !DILocalVariable(name: "next_to", scope: !16430, file: !2517, line: 218, type: !109)
!16430 = distinct !DILexicalBlock(scope: !16431, file: !2517, line: 217, column: 24)
!16431 = distinct !DILexicalBlock(scope: !16427, file: !2517, line: 217, column: 2)
!16432 = !DILocalVariable(name: "sooner", scope: !16430, file: !2517, line: 219, type: !347)
!16433 = !DILocalVariable(name: "imminent", scope: !16430, file: !2517, line: 221, type: !347)
!16434 = !DILocation(line: 0, scope: !16422)
!16435 = !DILocation(line: 0, scope: !16427)
!16436 = !DILocation(line: 0, scope: !15980, inlinedAt: !16437)
!16437 = distinct !DILocation(line: 217, column: 2, scope: !16427)
!16438 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16437)
!16440 = !DILocation(line: 0, scope: !15989, inlinedAt: !16439)
!16441 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16437)
!16442 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16437)
!16443 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16437)
!16444 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16437)
!16445 = !DILocation(line: 218, column: 17, scope: !16430)
!16446 = !DILocation(line: 0, scope: !16430)
!16447 = !DILocation(line: 221, column: 27, scope: !16430)
!16448 = !DILocation(line: 233, column: 17, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16430, file: !2517, line: 233, column: 7)
!16450 = !DILocation(line: 234, column: 26, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16449, file: !2517, line: 233, column: 56)
!16452 = !DILocation(line: 234, column: 4, scope: !16451)
!16453 = !DILocation(line: 235, column: 3, scope: !16451)
!16454 = !DILocation(line: 0, scope: !16053, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 217, column: 2, scope: !16431)
!16456 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16455)
!16457 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16455)
!16458 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16455)
!16459 = !DILocation(line: 0, scope: !16067, inlinedAt: !16460)
!16460 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16455)
!16461 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16460)
!16462 = !DILocation(line: 237, column: 1, scope: !16422)
!16463 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2517, file: !2517, line: 239, type: !16464, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16466)
!16464 = !DISubroutineType(types: !16465)
!16465 = !{null, !845}
!16466 = !{!16467, !16468, !16469, !16471}
!16467 = !DILocalVariable(name: "ticks", arg: 1, scope: !16463, file: !2517, line: 239, type: !845)
!16468 = !DILocalVariable(name: "key", scope: !16463, file: !2517, line: 245, type: !15952)
!16469 = !DILocalVariable(name: "t", scope: !16470, file: !2517, line: 262, type: !2490)
!16470 = distinct !DILexicalBlock(scope: !16463, file: !2517, line: 261, column: 67)
!16471 = !DILocalVariable(name: "dt", scope: !16470, file: !2517, line: 263, type: !109)
!16472 = !DILocation(line: 0, scope: !16463)
!16473 = !DILocation(line: 242, column: 2, scope: !16463)
!16474 = !DILocation(line: 0, scope: !15980, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 245, column: 25, scope: !16463)
!16476 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16475)
!16478 = !DILocation(line: 0, scope: !15989, inlinedAt: !16477)
!16479 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16475)
!16480 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16475)
!16481 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16475)
!16482 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16475)
!16483 = !DILocation(line: 261, column: 9, scope: !16463)
!16484 = !DILocation(line: 261, column: 17, scope: !16463)
!16485 = !DILocation(line: 261, column: 25, scope: !16463)
!16486 = !DILocation(line: 261, column: 37, scope: !16463)
!16487 = !DILocation(line: 261, column: 47, scope: !16463)
!16488 = !DILocation(line: 261, column: 44, scope: !16463)
!16489 = !DILocation(line: 261, column: 2, scope: !16463)
!16490 = !DILocation(line: 0, scope: !16470)
!16491 = !DILocation(line: 263, column: 12, scope: !16470)
!16492 = !DILocation(line: 265, column: 16, scope: !16470)
!16493 = !DILocation(line: 265, column: 13, scope: !16470)
!16494 = !DILocation(line: 266, column: 13, scope: !16470)
!16495 = !DILocation(line: 267, column: 3, scope: !16470)
!16496 = !DILocation(line: 0, scope: !16053, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 269, column: 3, scope: !16470)
!16498 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16497)
!16499 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16497)
!16500 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16497)
!16501 = !DILocation(line: 0, scope: !16067, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16497)
!16503 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16502)
!16504 = !DILocation(line: 270, column: 6, scope: !16470)
!16505 = !DILocation(line: 270, column: 3, scope: !16470)
!16506 = !DILocation(line: 0, scope: !15980, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 271, column: 9, scope: !16470)
!16508 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16509)
!16509 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16507)
!16510 = !DILocation(line: 0, scope: !15989, inlinedAt: !16509)
!16511 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16507)
!16512 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16507)
!16513 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16507)
!16514 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16507)
!16515 = !DILocation(line: 272, column: 22, scope: !16470)
!16516 = distinct !{!16516, !16489, !16517}
!16517 = !DILocation(line: 273, column: 2, scope: !16463)
!16518 = !DILocation(line: 276, column: 19, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16520, file: !2517, line: 275, column: 23)
!16520 = distinct !DILexicalBlock(scope: !16463, file: !2517, line: 275, column: 6)
!16521 = !DILocation(line: 277, column: 2, scope: !16519)
!16522 = !DILocation(line: 279, column: 15, scope: !16463)
!16523 = !DILocation(line: 279, column: 12, scope: !16463)
!16524 = !DILocation(line: 280, column: 21, scope: !16463)
!16525 = !DILocation(line: 282, column: 24, scope: !16463)
!16526 = !DILocation(line: 282, column: 2, scope: !16463)
!16527 = !DILocation(line: 0, scope: !16053, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 284, column: 2, scope: !16463)
!16529 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16528)
!16530 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16528)
!16531 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16528)
!16532 = !DILocation(line: 0, scope: !16067, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16528)
!16534 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16533)
!16535 = !DILocation(line: 285, column: 1, scope: !16463)
!16536 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2517, file: !2517, line: 287, type: !3364, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16537)
!16537 = !{!16538, !16539, !16541}
!16538 = !DILocalVariable(name: "t", scope: !16536, file: !2517, line: 289, type: !111)
!16539 = !DILocalVariable(name: "__i", scope: !16540, file: !2517, line: 291, type: !15952)
!16540 = distinct !DILexicalBlock(scope: !16536, file: !2517, line: 291, column: 2)
!16541 = !DILocalVariable(name: "__key", scope: !16540, file: !2517, line: 291, type: !15952)
!16542 = !DILocation(line: 0, scope: !16536)
!16543 = !DILocation(line: 0, scope: !16540)
!16544 = !DILocation(line: 0, scope: !15980, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 291, column: 2, scope: !16540)
!16546 = !DILocation(line: 55, column: 2, scope: !15989, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 145, column: 10, scope: !15980, inlinedAt: !16545)
!16548 = !DILocation(line: 0, scope: !15989, inlinedAt: !16547)
!16549 = !DILocation(line: 148, column: 2, scope: !15997, inlinedAt: !16545)
!16550 = !DILocation(line: 148, column: 2, scope: !15998, inlinedAt: !16545)
!16551 = !DILocation(line: 148, column: 2, scope: !16001, inlinedAt: !16545)
!16552 = !DILocation(line: 160, column: 2, scope: !15980, inlinedAt: !16545)
!16553 = !DILocation(line: 292, column: 7, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16555, file: !2517, line: 291, column: 24)
!16555 = distinct !DILexicalBlock(scope: !16540, file: !2517, line: 291, column: 2)
!16556 = !DILocation(line: 292, column: 19, scope: !16554)
!16557 = !DILocation(line: 0, scope: !16053, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 291, column: 2, scope: !16555)
!16559 = !DILocation(line: 194, column: 2, scope: !16061, inlinedAt: !16558)
!16560 = !DILocation(line: 194, column: 2, scope: !16062, inlinedAt: !16558)
!16561 = !DILocation(line: 194, column: 2, scope: !16065, inlinedAt: !16558)
!16562 = !DILocation(line: 0, scope: !16067, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 215, column: 2, scope: !16053, inlinedAt: !16558)
!16564 = !DILocation(line: 95, column: 2, scope: !16067, inlinedAt: !16563)
!16565 = !DILocation(line: 292, column: 17, scope: !16554)
!16566 = !DILocation(line: 294, column: 2, scope: !16536)
!16567 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2517, file: !2517, line: 297, type: !3358, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2037)
!16568 = !DILocation(line: 300, column: 19, scope: !16567)
!16569 = !DILocation(line: 300, column: 9, scope: !16567)
!16570 = !DILocation(line: 300, column: 2, scope: !16567)
!16571 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2517, file: !2517, line: 306, type: !3364, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2037)
!16572 = !DILocation(line: 308, column: 9, scope: !16571)
!16573 = !DILocation(line: 308, column: 2, scope: !16571)
!16574 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2517, file: !2517, line: 319, type: !5978, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16575)
!16575 = !{!16576, !16577, !16578, !16579}
!16576 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16574, file: !2517, line: 319, type: !110)
!16577 = !DILocalVariable(name: "start_cycles", scope: !16574, file: !2517, line: 328, type: !110)
!16578 = !DILocalVariable(name: "cycles_to_wait", scope: !16574, file: !2517, line: 331, type: !110)
!16579 = !DILocalVariable(name: "current_cycles", scope: !16580, file: !2517, line: 338, type: !110)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !2517, line: 337, column: 11)
!16581 = distinct !DILexicalBlock(scope: !16582, file: !2517, line: 337, column: 2)
!16582 = distinct !DILexicalBlock(scope: !16574, file: !2517, line: 337, column: 2)
!16583 = !DILocation(line: 0, scope: !16574)
!16584 = !DILocation(line: 322, column: 19, scope: !16585)
!16585 = distinct !DILexicalBlock(scope: !16574, file: !2517, line: 322, column: 6)
!16586 = !DILocation(line: 322, column: 6, scope: !16574)
!16587 = !DILocation(line: 328, column: 26, scope: !16574)
!16588 = !DILocation(line: 333, column: 43, scope: !16574)
!16589 = !DILocation(line: 337, column: 2, scope: !16574)
!16590 = !DILocation(line: 338, column: 29, scope: !16580)
!16591 = !DILocation(line: 0, scope: !16580)
!16592 = !DILocation(line: 341, column: 23, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16580, file: !2517, line: 341, column: 7)
!16594 = !DILocation(line: 341, column: 39, scope: !16593)
!16595 = !DILocation(line: 349, column: 1, scope: !16574)
!16596 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !119, file: !119, line: 1675, type: !3358, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2037)
!16597 = !DILocation(line: 1677, column: 9, scope: !16596)
!16598 = !DILocation(line: 1677, column: 2, scope: !16596)
!16599 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16600, file: !16600, line: 24, type: !3358, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2037)
!16600 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16601 = !DILocation(line: 26, column: 9, scope: !16599)
!16602 = !DILocation(line: 26, column: 2, scope: !16599)
!16603 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2517, file: !2517, line: 364, type: !16604, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !16606)
!16604 = !DISubroutineType(types: !16605)
!16605 = !{!111, !15942}
!16606 = !{!16607, !16608}
!16607 = !DILocalVariable(name: "timeout", arg: 1, scope: !16603, file: !2517, line: 364, type: !15942)
!16608 = !DILocalVariable(name: "dt", scope: !16603, file: !2517, line: 366, type: !104)
!16609 = !DILocation(line: 0, scope: !16603)
!16610 = !DILocation(line: 368, column: 6, scope: !16603)
!16611 = !DILocation(line: 371, column: 10, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16613, file: !2517, line: 370, column: 47)
!16613 = distinct !DILexicalBlock(scope: !16614, file: !2517, line: 370, column: 13)
!16614 = distinct !DILexicalBlock(scope: !16603, file: !2517, line: 368, column: 6)
!16615 = !DILocation(line: 371, column: 3, scope: !16612)
!16616 = !DILocation(line: 376, column: 58, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16618, file: !2517, line: 376, column: 7)
!16618 = distinct !DILexicalBlock(scope: !16613, file: !2517, line: 372, column: 9)
!16619 = !DILocation(line: 376, column: 7, scope: !16618)
!16620 = !DILocation(line: 376, column: 43, scope: !16617)
!16621 = !DILocation(line: 377, column: 4, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16617, file: !2517, line: 376, column: 64)
!16623 = !DILocation(line: 379, column: 10, scope: !16618)
!16624 = !DILocation(line: 379, column: 33, scope: !16618)
!16625 = !DILocation(line: 379, column: 31, scope: !16618)
!16626 = !DILocation(line: 379, column: 3, scope: !16618)
!16627 = !DILocation(line: 0, scope: !16614)
!16628 = !DILocation(line: 381, column: 1, scope: !16603)
!16629 = distinct !DISubprogram(name: "boot_banner", scope: !16630, file: !16630, line: 26, type: !3076, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2037)
!16630 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16631 = !DILocation(line: 34, column: 2, scope: !16629)
!16632 = !DILocation(line: 36, column: 1, scope: !16629)
